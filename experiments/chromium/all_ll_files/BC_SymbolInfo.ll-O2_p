; ModuleID = '../../third_party/pdfium/fxbarcode/datamatrix/BC_SymbolInfo.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/datamatrix/BC_SymbolInfo.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.CBC_SymbolInfo::Data" = type { i16, i16, i16, i8, i8, i8, i8 }
%class.CBC_SymbolInfo = type { i32 (...)**, %"struct.CBC_SymbolInfo::Data"* }
%class.CBC_DataMatrixSymbolInfo144 = type { %class.CBC_SymbolInfo }

@_ZN12_GLOBAL__N_111kSymbolDataE = internal constant [29 x %"struct.CBC_SymbolInfo::Data"] [%"struct.CBC_SymbolInfo::Data" { i16 3, i16 5, i16 3, i8 5, i8 8, i8 8, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 5, i16 7, i16 5, i8 7, i8 10, i8 10, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 5, i16 7, i16 5, i8 7, i8 16, i8 6, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 8, i16 10, i16 8, i8 10, i8 12, i8 12, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 10, i16 11, i16 10, i8 11, i8 14, i8 6, i8 2 }, %"struct.CBC_SymbolInfo::Data" { i16 12, i16 12, i16 12, i8 12, i8 14, i8 14, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 16, i16 14, i16 16, i8 14, i8 24, i8 10, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 18, i16 14, i16 18, i8 14, i8 16, i8 16, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 22, i16 18, i16 22, i8 18, i8 18, i8 18, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 22, i16 18, i16 22, i8 18, i8 16, i8 10, i8 2 }, %"struct.CBC_SymbolInfo::Data" { i16 30, i16 20, i16 30, i8 20, i8 20, i8 20, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 32, i16 24, i16 32, i8 24, i8 16, i8 14, i8 2 }, %"struct.CBC_SymbolInfo::Data" { i16 36, i16 24, i16 36, i8 24, i8 22, i8 22, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 44, i16 28, i16 44, i8 28, i8 24, i8 24, i8 1 }, %"struct.CBC_SymbolInfo::Data" { i16 49, i16 28, i16 49, i8 28, i8 22, i8 14, i8 2 }, %"struct.CBC_SymbolInfo::Data" { i16 62, i16 36, i16 62, i8 36, i8 14, i8 14, i8 4 }, %"struct.CBC_SymbolInfo::Data" { i16 86, i16 42, i16 86, i8 42, i8 16, i8 16, i8 4 }, %"struct.CBC_SymbolInfo::Data" { i16 114, i16 48, i16 114, i8 48, i8 18, i8 18, i8 4 }, %"struct.CBC_SymbolInfo::Data" { i16 144, i16 56, i16 144, i8 56, i8 20, i8 20, i8 4 }, %"struct.CBC_SymbolInfo::Data" { i16 174, i16 68, i16 174, i8 68, i8 22, i8 22, i8 4 }, %"struct.CBC_SymbolInfo::Data" { i16 204, i16 84, i16 102, i8 42, i8 24, i8 24, i8 4 }, %"struct.CBC_SymbolInfo::Data" { i16 280, i16 112, i16 140, i8 56, i8 14, i8 14, i8 16 }, %"struct.CBC_SymbolInfo::Data" { i16 368, i16 144, i16 92, i8 36, i8 16, i8 16, i8 16 }, %"struct.CBC_SymbolInfo::Data" { i16 456, i16 192, i16 114, i8 48, i8 18, i8 18, i8 16 }, %"struct.CBC_SymbolInfo::Data" { i16 576, i16 224, i16 144, i8 56, i8 20, i8 20, i8 16 }, %"struct.CBC_SymbolInfo::Data" { i16 696, i16 272, i16 174, i8 68, i8 22, i8 22, i8 16 }, %"struct.CBC_SymbolInfo::Data" { i16 816, i16 336, i16 136, i8 56, i8 24, i8 24, i8 16 }, %"struct.CBC_SymbolInfo::Data" { i16 1050, i16 408, i16 175, i8 68, i8 18, i8 18, i8 36 }, %"struct.CBC_SymbolInfo::Data" { i16 1304, i16 496, i16 163, i8 62, i8 20, i8 20, i8 36 }], align 16
@_ZN12_GLOBAL__N_19g_symbolsE = internal unnamed_addr global [30 x %class.CBC_SymbolInfo*] zeroinitializer, align 16
@_ZTV14CBC_SymbolInfo = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CBC_SymbolInfo*)* @_ZN14CBC_SymbolInfoD2Ev to i8*), i8* bitcast (void (%class.CBC_SymbolInfo*)* @_ZN14CBC_SymbolInfoD0Ev to i8*), i8* bitcast (i64 (%class.CBC_SymbolInfo*)* @_ZNK14CBC_SymbolInfo24GetInterleavedBlockCountEv to i8*)] }, align 8

@_ZN14CBC_SymbolInfoC1EPKNS_4DataE = hidden unnamed_addr alias void (%class.CBC_SymbolInfo*, %"struct.CBC_SymbolInfo::Data"*), void (%class.CBC_SymbolInfo*, %"struct.CBC_SymbolInfo::Data"*)* @_ZN14CBC_SymbolInfoC2EPKNS_4DataE
@_ZN14CBC_SymbolInfoD1Ev = hidden unnamed_addr alias void (%class.CBC_SymbolInfo*), void (%class.CBC_SymbolInfo*)* @_ZN14CBC_SymbolInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CBC_SymbolInfo10InitializeEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 16) #7
  br label %4

2:                                                ; preds = %4
  %3 = bitcast i8* %14 to %class.CBC_DataMatrixSymbolInfo144*
  tail call void @_ZN27CBC_DataMatrixSymbolInfo144C1Ev(%class.CBC_DataMatrixSymbolInfo144* nonnull %3) #8
  store i8* %14, i8** bitcast (%class.CBC_SymbolInfo** getelementptr inbounds ([30 x %class.CBC_SymbolInfo*], [30 x %class.CBC_SymbolInfo*]* @_ZN12_GLOBAL__N_19g_symbolsE, i64 0, i64 29) to i8**), align 8
  ret void

4:                                                ; preds = %4, %0
  %5 = phi i8* [ %1, %0 ], [ %14, %4 ]
  %6 = phi i64 [ 0, %0 ], [ %13, %4 ]
  %7 = getelementptr inbounds [29 x %"struct.CBC_SymbolInfo::Data"], [29 x %"struct.CBC_SymbolInfo::Data"]* @_ZN12_GLOBAL__N_111kSymbolDataE, i64 0, i64 %6
  %8 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV14CBC_SymbolInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 8
  %10 = bitcast i8* %9 to %"struct.CBC_SymbolInfo::Data"**
  store %"struct.CBC_SymbolInfo::Data"* %7, %"struct.CBC_SymbolInfo::Data"** %10, align 8
  %11 = getelementptr inbounds [30 x %class.CBC_SymbolInfo*], [30 x %class.CBC_SymbolInfo*]* @_ZN12_GLOBAL__N_19g_symbolsE, i64 0, i64 %6
  %12 = bitcast %class.CBC_SymbolInfo** %11 to i8**
  store i8* %5, i8** %12, align 8
  %13 = add nuw nsw i64 %6, 1
  %14 = tail call i8* @_Znwm(i64 16) #7
  %15 = icmp eq i64 %13, 29
  br i1 %15, label %2, label %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN27CBC_DataMatrixSymbolInfo144C1Ev(%class.CBC_DataMatrixSymbolInfo144*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CBC_SymbolInfo8FinalizeEv() local_unnamed_addr #0 align 2 {
  br label %2

1:                                                ; preds = %12
  ret void

2:                                                ; preds = %12, %0
  %3 = phi i64 [ 0, %0 ], [ %13, %12 ]
  %4 = getelementptr inbounds [30 x %class.CBC_SymbolInfo*], [30 x %class.CBC_SymbolInfo*]* @_ZN12_GLOBAL__N_19g_symbolsE, i64 0, i64 %3
  %5 = load %class.CBC_SymbolInfo*, %class.CBC_SymbolInfo** %4, align 8
  %6 = icmp eq %class.CBC_SymbolInfo* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = bitcast %class.CBC_SymbolInfo* %5 to void (%class.CBC_SymbolInfo*)***
  %9 = load void (%class.CBC_SymbolInfo*)**, void (%class.CBC_SymbolInfo*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.CBC_SymbolInfo*)*, void (%class.CBC_SymbolInfo*)** %9, i64 1
  %11 = load void (%class.CBC_SymbolInfo*)*, void (%class.CBC_SymbolInfo*)** %10, align 8
  tail call void %11(%class.CBC_SymbolInfo* nonnull %5) #8
  br label %12

12:                                               ; preds = %7, %2
  store %class.CBC_SymbolInfo* null, %class.CBC_SymbolInfo** %4, align 8
  %13 = add nuw nsw i64 %3, 1
  %14 = icmp eq i64 %13, 30
  br i1 %14, label %1, label %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14CBC_SymbolInfoC2EPKNS_4DataE(%class.CBC_SymbolInfo* nocapture, %"struct.CBC_SymbolInfo::Data"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV14CBC_SymbolInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 1
  store %"struct.CBC_SymbolInfo::Data"* %1, %"struct.CBC_SymbolInfo::Data"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14CBC_SymbolInfoD2Ev(%class.CBC_SymbolInfo* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CBC_SymbolInfoD0Ev(%class.CBC_SymbolInfo*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CBC_SymbolInfo* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CBC_SymbolInfo* @_ZN14CBC_SymbolInfo6LookupEmb(i64, i1 zeroext) local_unnamed_addr #6 align 2 {
  br label %3

3:                                                ; preds = %39, %2
  %4 = phi i64 [ 0, %2 ], [ %40, %39 ]
  %5 = getelementptr inbounds [30 x %class.CBC_SymbolInfo*], [30 x %class.CBC_SymbolInfo*]* @_ZN12_GLOBAL__N_19g_symbolsE, i64 0, i64 %4
  %6 = load %class.CBC_SymbolInfo*, %class.CBC_SymbolInfo** %5, align 16
  %7 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %6, i64 0, i32 1
  %8 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %7, align 8
  %9 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %8, i64 0, i32 4
  %10 = load i8, i8* %9, align 1
  %11 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %8, i64 0, i32 5
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %10, %12
  %14 = or i1 %13, %1
  br i1 %14, label %15, label %20

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %8, i64 0, i32 0
  %17 = load i16, i16* %16, align 2
  %18 = sext i16 %17 to i64
  %19 = icmp ult i64 %18, %0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15, %3
  %21 = or i64 %4, 1
  %22 = getelementptr inbounds [30 x %class.CBC_SymbolInfo*], [30 x %class.CBC_SymbolInfo*]* @_ZN12_GLOBAL__N_19g_symbolsE, i64 0, i64 %21
  %23 = load %class.CBC_SymbolInfo*, %class.CBC_SymbolInfo** %22, align 8
  %24 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %23, i64 0, i32 1
  %25 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %24, align 8
  %26 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %25, i64 0, i32 4
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %25, i64 0, i32 5
  %29 = load i8, i8* %28, align 2
  %30 = icmp eq i8 %27, %29
  %31 = or i1 %30, %1
  br i1 %31, label %34, label %39

32:                                               ; preds = %39, %34, %15
  %33 = phi %class.CBC_SymbolInfo* [ %6, %15 ], [ %23, %34 ], [ null, %39 ]
  ret %class.CBC_SymbolInfo* %33

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %25, i64 0, i32 0
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i64
  %38 = icmp ult i64 %37, %0
  br i1 %38, label %39, label %32

39:                                               ; preds = %34, %20
  %40 = add nuw nsw i64 %4, 2
  %41 = icmp eq i64 %40, 30
  br i1 %41, label %32, label %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK14CBC_SymbolInfo24GetHorizontalDataRegionsEv(%class.CBC_SymbolInfo* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 1
  %3 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %2, align 8
  %4 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  switch i32 %6, label %11 [
    i32 1, label %12
    i32 2, label %7
    i32 4, label %8
    i32 16, label %9
    i32 36, label %10
  ]

7:                                                ; preds = %1
  br label %12

8:                                                ; preds = %1
  br label %12

9:                                                ; preds = %1
  br label %12

10:                                               ; preds = %1
  br label %12

11:                                               ; preds = %1
  br label %12

12:                                               ; preds = %1, %11, %10, %9, %8, %7
  %13 = phi i32 [ 0, %11 ], [ 6, %10 ], [ 4, %9 ], [ 2, %8 ], [ 2, %7 ], [ %6, %1 ]
  ret i32 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK14CBC_SymbolInfo22GetVerticalDataRegionsEv(%class.CBC_SymbolInfo* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 1
  %3 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %2, align 8
  %4 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  switch i32 %6, label %10 [
    i32 1, label %11
    i32 2, label %11
    i32 4, label %7
    i32 16, label %8
    i32 36, label %9
  ]

7:                                                ; preds = %1
  br label %11

8:                                                ; preds = %1
  br label %11

9:                                                ; preds = %1
  br label %11

10:                                               ; preds = %1
  br label %11

11:                                               ; preds = %1, %1, %10, %9, %8, %7
  %12 = phi i32 [ 0, %10 ], [ 6, %9 ], [ 4, %8 ], [ 2, %7 ], [ 1, %1 ], [ 1, %1 ]
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK14CBC_SymbolInfo18GetSymbolDataWidthEv(%class.CBC_SymbolInfo* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 1
  %3 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %2, align 8
  %4 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  switch i32 %6, label %11 [
    i32 1, label %12
    i32 2, label %7
    i32 4, label %8
    i32 16, label %9
    i32 36, label %10
  ]

7:                                                ; preds = %1
  br label %12

8:                                                ; preds = %1
  br label %12

9:                                                ; preds = %1
  br label %12

10:                                               ; preds = %1
  br label %12

11:                                               ; preds = %1
  br label %12

12:                                               ; preds = %1, %7, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 6, %10 ], [ 4, %9 ], [ 2, %8 ], [ 2, %7 ], [ %6, %1 ]
  %14 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 4
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  %17 = mul nsw i32 %13, %16
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK14CBC_SymbolInfo19GetSymbolDataHeightEv(%class.CBC_SymbolInfo* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 1
  %3 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %2, align 8
  %4 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  switch i32 %6, label %10 [
    i32 1, label %11
    i32 2, label %11
    i32 4, label %7
    i32 16, label %8
    i32 36, label %9
  ]

7:                                                ; preds = %1
  br label %11

8:                                                ; preds = %1
  br label %11

9:                                                ; preds = %1
  br label %11

10:                                               ; preds = %1
  br label %11

11:                                               ; preds = %1, %1, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 6, %9 ], [ 4, %8 ], [ 2, %7 ], [ 1, %1 ], [ 1, %1 ]
  %13 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 5
  %14 = load i8, i8* %13, align 2
  %15 = sext i8 %14 to i32
  %16 = mul nsw i32 %12, %15
  ret i32 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK14CBC_SymbolInfo14GetSymbolWidthEv(%class.CBC_SymbolInfo* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 1
  %3 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %2, align 8
  %4 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  switch i32 %6, label %31 [
    i32 1, label %7
    i32 2, label %11
    i32 4, label %16
    i32 16, label %21
    i32 36, label %26
  ]

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 4
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  br label %31

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 4
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = shl nsw i32 %14, 1
  br label %31

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 4
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = shl nsw i32 %19, 1
  br label %31

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 4
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = shl nsw i32 %24, 2
  br label %31

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 4
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = mul nsw i32 %29, 6
  br label %31

31:                                               ; preds = %1, %7, %11, %16, %21, %26
  %32 = phi i32 [ %30, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %11 ], [ %10, %7 ], [ 0, %1 ]
  %33 = phi i32 [ 12, %26 ], [ 8, %21 ], [ 4, %16 ], [ 4, %11 ], [ 2, %7 ], [ 0, %1 ]
  %34 = add nsw i32 %33, %32
  ret i32 %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK14CBC_SymbolInfo15GetSymbolHeightEv(%class.CBC_SymbolInfo* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 1
  %3 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %2, align 8
  %4 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 1
  %6 = sext i8 %5 to i32
  switch i32 %6, label %22 [
    i32 1, label %23
    i32 2, label %23
    i32 4, label %7
    i32 16, label %12
    i32 36, label %17
  ]

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 5
  %9 = load i8, i8* %8, align 2
  %10 = sext i8 %9 to i32
  %11 = shl nsw i32 %10, 1
  br label %29

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 5
  %14 = load i8, i8* %13, align 2
  %15 = sext i8 %14 to i32
  %16 = shl nsw i32 %15, 2
  br label %31

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 5
  %19 = load i8, i8* %18, align 2
  %20 = sext i8 %19 to i32
  %21 = mul nsw i32 %20, 6
  br label %33

22:                                               ; preds = %1
  br label %23

23:                                               ; preds = %1, %1, %22
  %24 = phi i32 [ 0, %22 ], [ 1, %1 ], [ 1, %1 ]
  %25 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 5
  %26 = load i8, i8* %25, align 2
  %27 = sext i8 %26 to i32
  %28 = mul nuw nsw i32 %24, %27
  switch i32 %6, label %35 [
    i32 1, label %36
    i32 2, label %36
    i32 4, label %29
    i32 16, label %31
    i32 36, label %33
  ]

29:                                               ; preds = %7, %23
  %30 = phi i32 [ %11, %7 ], [ %28, %23 ]
  br label %36

31:                                               ; preds = %12, %23
  %32 = phi i32 [ %16, %12 ], [ %28, %23 ]
  br label %36

33:                                               ; preds = %17, %23
  %34 = phi i32 [ %21, %17 ], [ %28, %23 ]
  br label %36

35:                                               ; preds = %23
  br label %36

36:                                               ; preds = %23, %23, %29, %31, %33, %35
  %37 = phi i32 [ %28, %35 ], [ %34, %33 ], [ %32, %31 ], [ %30, %29 ], [ %28, %23 ], [ %28, %23 ]
  %38 = phi i32 [ 0, %35 ], [ 12, %33 ], [ 8, %31 ], [ 4, %29 ], [ 2, %23 ], [ 2, %23 ]
  %39 = add nsw i32 %38, %37
  ret i32 %39
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK14CBC_SymbolInfo24GetInterleavedBlockCountEv(%class.CBC_SymbolInfo* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 1
  %3 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %2, align 8
  %4 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 0
  %5 = load i16, i16* %4, align 2
  %6 = sext i16 %5 to i32
  %7 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 2
  %8 = load i16, i16* %7, align 2
  %9 = sext i16 %8 to i32
  %10 = sdiv i32 %6, %9
  %11 = sext i32 %10 to i64
  ret i64 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK14CBC_SymbolInfo32GetDataLengthForInterleavedBlockEv(%class.CBC_SymbolInfo* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 1
  %3 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %2, align 8
  %4 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 2
  %5 = load i16, i16* %4, align 2
  %6 = sext i16 %5 to i64
  ret i64 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK14CBC_SymbolInfo33GetErrorLengthForInterleavedBlockEv(%class.CBC_SymbolInfo* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %0, i64 0, i32 1
  %3 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %2, align 8
  %4 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %3, i64 0, i32 3
  %5 = load i8, i8* %4, align 2
  %6 = sext i8 %5 to i64
  ret i64 %6
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
