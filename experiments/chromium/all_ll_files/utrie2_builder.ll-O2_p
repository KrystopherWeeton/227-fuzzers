; ModuleID = '../../third_party/icu/source/common/utrie2_builder.cpp'
source_filename = "../../third_party/icu/source/common/utrie2_builder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type { [544 x i32], [35488 x i32], i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [34852 x i32] }
%struct.NewTrieAndStatus = type { %struct.UTrie2*, i32, i8 }
%struct.UTrie = type { i16*, i32*, i32 (i32)*, i32, i32, i32, i8 }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UTrie2* @utrie2_open_69(i32, i32, i32* nocapture) local_unnamed_addr #0 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %236

6:                                                ; preds = %3
  %7 = tail call noalias i8* @uprv_malloc_69(i64 80) #4
  %8 = bitcast i8* %7 to %struct.UTrie2*
  %9 = tail call noalias i8* @uprv_malloc_69(i64 283584) #4
  %10 = tail call noalias i8* @uprv_malloc_69(i64 65536) #4
  %11 = icmp eq i8* %7, null
  %12 = icmp eq i8* %9, null
  %13 = or i1 %11, %12
  %14 = icmp eq i8* %10, null
  %15 = or i1 %13, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %6
  tail call void @uprv_free_69(i8* %7) #5
  tail call void @uprv_free_69(i8* %9) #5
  tail call void @uprv_free_69(i8* %10) #5
  store i32 7, i32* %2, align 4
  br label %236

17:                                               ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 72, i1 false)
  %18 = getelementptr inbounds i8, i8* %7, i64 36
  %19 = bitcast i8* %18 to i32*
  store i32 %0, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %7, i64 40
  %21 = bitcast i8* %20 to i32*
  store i32 %1, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 44
  %23 = bitcast i8* %22 to i32*
  store i32 1114112, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %7, i64 72
  %25 = bitcast i8* %24 to i8**
  store i8* %9, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %9, i64 144128
  %27 = bitcast i8* %26 to i32**
  %28 = bitcast i8* %26 to i8**
  store i8* %10, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %9, i64 144148
  %30 = bitcast i8* %29 to i32*
  store i32 16384, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %9, i64 144136
  %32 = bitcast i8* %31 to i32*
  store i32 %0, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %9, i64 144140
  %34 = bitcast i8* %33 to i32*
  store i32 %1, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %9, i64 144168
  %36 = bitcast i8* %35 to i32*
  store i32 1114112, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %9, i64 144156
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %9, i64 144172
  store i8 0, i8* %39, align 4
  %40 = bitcast i8* %10 to i32*
  store i32 %0, i32* %40, align 4
  br label %41

41:                                               ; preds = %245, %17
  %42 = phi i64 [ 1, %17 ], [ %248, %245 ]
  %43 = load i32*, i32** %27, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 %42
  store i32 %0, i32* %44, align 4
  %45 = add nuw nsw i64 %42, 1
  %46 = load i32*, i32** %27, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 %45
  store i32 %0, i32* %47, align 4
  %48 = add nuw nsw i64 %42, 2
  %49 = load i32*, i32** %27, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 %48
  store i32 %0, i32* %50, align 4
  %51 = add nuw nsw i64 %42, 3
  %52 = icmp eq i64 %51, 128
  br i1 %52, label %53, label %245

53:                                               ; preds = %41, %53
  %54 = phi i64 [ %66, %53 ], [ 128, %41 ]
  %55 = load i32*, i32** %27, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %54
  store i32 %1, i32* %56, align 4
  %57 = or i64 %54, 1
  %58 = load i32*, i32** %27, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %57
  store i32 %1, i32* %59, align 4
  %60 = or i64 %54, 2
  %61 = load i32*, i32** %27, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 %60
  store i32 %1, i32* %62, align 4
  %63 = or i64 %54, 3
  %64 = load i32*, i32** %27, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 %63
  store i32 %1, i32* %65, align 4
  %66 = add nuw nsw i64 %54, 4
  %67 = icmp eq i64 %66, 192
  br i1 %67, label %68, label %53

68:                                               ; preds = %53, %68
  %69 = phi i64 [ %81, %68 ], [ 192, %53 ]
  %70 = load i32*, i32** %27, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %69
  store i32 %0, i32* %71, align 4
  %72 = or i64 %69, 1
  %73 = load i32*, i32** %27, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %72
  store i32 %0, i32* %74, align 4
  %75 = or i64 %69, 2
  %76 = load i32*, i32** %27, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 %75
  store i32 %0, i32* %77, align 4
  %78 = or i64 %69, 3
  %79 = load i32*, i32** %27, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 %78
  store i32 %0, i32* %80, align 4
  %81 = add nuw nsw i64 %69, 4
  %82 = icmp eq i64 %81, 256
  br i1 %82, label %83, label %68

83:                                               ; preds = %68
  %84 = getelementptr inbounds i8, i8* %9, i64 144164
  %85 = bitcast i8* %84 to i32*
  store i32 192, i32* %85, align 4
  %86 = getelementptr inbounds i8, i8* %9, i64 144152
  %87 = bitcast i8* %86 to i32*
  store i32 256, i32* %87, align 8
  %88 = getelementptr inbounds i8, i8* %9, i64 2176
  %89 = bitcast i8* %88 to [35488 x i32]*
  %90 = getelementptr inbounds i8, i8* %9, i64 144176
  %91 = bitcast i8* %88 to <4 x i32>*
  store <4 x i32> <i32 0, i32 32, i32 64, i32 96>, <4 x i32>* %91, align 4
  %92 = bitcast i8* %90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %92, align 4
  %93 = getelementptr i8, i8* %9, i64 144192
  %94 = bitcast i8* %93 to i64*
  store i64 0, i64* %94, align 4
  %95 = getelementptr inbounds i8, i8* %9, i64 144200
  %96 = bitcast i8* %95 to i32*
  store i32 34845, i32* %96, align 4
  %97 = getelementptr i8, i8* %9, i64 144204
  %98 = bitcast i8* %97 to i32*
  store i32 0, i32* %98, align 4
  br label %99

99:                                               ; preds = %238, %83
  %100 = phi i64 [ 0, %83 ], [ %244, %238 ]
  %101 = or i64 %100, 4
  %102 = getelementptr inbounds [35488 x i32], [35488 x i32]* %89, i64 0, i64 %101
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %103, align 4
  %104 = getelementptr inbounds i32, i32* %102, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %105, align 4
  %106 = or i64 %100, 12
  %107 = getelementptr inbounds [35488 x i32], [35488 x i32]* %89, i64 0, i64 %106
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %108, align 4
  %109 = getelementptr inbounds i32, i32* %107, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %110, align 4
  %111 = or i64 %100, 20
  %112 = getelementptr inbounds [35488 x i32], [35488 x i32]* %89, i64 0, i64 %111
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %113, align 4
  %114 = getelementptr inbounds i32, i32* %112, i64 4
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %115, align 4
  %116 = or i64 %100, 24
  %117 = icmp eq i64 %116, 2072
  br i1 %117, label %118, label %238, !llvm.loop !2

118:                                              ; preds = %99
  %119 = getelementptr inbounds i8, i8* %9, i64 10480
  %120 = bitcast i8* %119 to i32*
  store i32 192, i32* %120, align 4
  %121 = getelementptr inbounds i8, i8* %9, i64 10484
  %122 = bitcast i8* %121 to i32*
  store i32 192, i32* %122, align 4
  %123 = getelementptr inbounds i8, i8* %9, i64 10488
  %124 = bitcast i8* %123 to i32*
  store i32 192, i32* %124, align 4
  %125 = getelementptr inbounds i8, i8* %9, i64 10492
  %126 = bitcast i8* %125 to i32*
  store i32 192, i32* %126, align 4
  %127 = getelementptr i8, i8* %9, i64 10496
  call void @llvm.memset.p0i8.i64(i8* align 4 %127, i8 -1, i64 2304, i1 false)
  %128 = getelementptr inbounds i8, i8* %9, i64 12800
  %129 = bitcast i8* %128 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds i8, i8* %9, i64 12816
  %131 = bitcast i8* %130 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds i8, i8* %9, i64 12832
  %133 = bitcast i8* %132 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %133, align 4
  %134 = getelementptr inbounds i8, i8* %9, i64 12848
  %135 = bitcast i8* %134 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %135, align 4
  %136 = getelementptr inbounds i8, i8* %9, i64 12864
  %137 = bitcast i8* %136 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %137, align 4
  %138 = getelementptr inbounds i8, i8* %9, i64 12880
  %139 = bitcast i8* %138 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %139, align 4
  %140 = getelementptr inbounds i8, i8* %9, i64 12896
  %141 = bitcast i8* %140 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds i8, i8* %9, i64 12912
  %143 = bitcast i8* %142 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %143, align 4
  %144 = getelementptr inbounds i8, i8* %9, i64 12928
  %145 = bitcast i8* %144 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds i8, i8* %9, i64 12944
  %147 = bitcast i8* %146 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %147, align 4
  %148 = getelementptr inbounds i8, i8* %9, i64 12960
  %149 = bitcast i8* %148 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds i8, i8* %9, i64 12976
  %151 = bitcast i8* %150 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds i8, i8* %9, i64 12992
  %153 = bitcast i8* %152 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %153, align 4
  %154 = getelementptr inbounds i8, i8* %9, i64 13008
  %155 = bitcast i8* %154 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %155, align 4
  %156 = getelementptr inbounds i8, i8* %9, i64 13024
  %157 = bitcast i8* %156 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %157, align 4
  %158 = getelementptr inbounds i8, i8* %9, i64 13040
  %159 = bitcast i8* %158 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %159, align 4
  %160 = getelementptr inbounds i8, i8* %9, i64 144160
  %161 = bitcast i8* %160 to i32*
  store i32 2656, i32* %161, align 8
  %162 = getelementptr inbounds i8, i8* %9, i64 144144
  %163 = bitcast i8* %162 to i32*
  store i32 2720, i32* %163, align 8
  %164 = bitcast i8* %9 to [544 x i32]*
  %165 = bitcast i8* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 64, i32 128, i32 192>, <4 x i32>* %165, align 4
  %166 = getelementptr inbounds i8, i8* %9, i64 16
  %167 = bitcast i8* %166 to <4 x i32>*
  store <4 x i32> <i32 256, i32 320, i32 384, i32 448>, <4 x i32>* %167, align 4
  %168 = getelementptr inbounds i8, i8* %9, i64 32
  %169 = bitcast i8* %168 to <4 x i32>*
  store <4 x i32> <i32 512, i32 576, i32 640, i32 704>, <4 x i32>* %169, align 4
  %170 = getelementptr inbounds i8, i8* %9, i64 48
  %171 = bitcast i8* %170 to i32*
  store i32 768, i32* %171, align 4
  %172 = getelementptr inbounds i8, i8* %9, i64 52
  %173 = bitcast i8* %172 to i32*
  store i32 832, i32* %173, align 4
  %174 = getelementptr inbounds i8, i8* %9, i64 56
  %175 = bitcast i8* %174 to <4 x i32>*
  store <4 x i32> <i32 896, i32 960, i32 1024, i32 1088>, <4 x i32>* %175, align 4
  %176 = getelementptr inbounds i8, i8* %9, i64 72
  %177 = bitcast i8* %176 to <4 x i32>*
  store <4 x i32> <i32 1152, i32 1216, i32 1280, i32 1344>, <4 x i32>* %177, align 4
  %178 = getelementptr inbounds i8, i8* %9, i64 88
  %179 = bitcast i8* %178 to <4 x i32>*
  store <4 x i32> <i32 1408, i32 1472, i32 1536, i32 1600>, <4 x i32>* %179, align 4
  %180 = getelementptr inbounds i8, i8* %9, i64 104
  %181 = bitcast i8* %180 to <4 x i32>*
  store <4 x i32> <i32 1664, i32 1728, i32 1792, i32 1856>, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds i8, i8* %9, i64 120
  %183 = bitcast i8* %182 to i32*
  store i32 1920, i32* %183, align 4
  %184 = getelementptr inbounds i8, i8* %9, i64 124
  %185 = bitcast i8* %184 to i32*
  store i32 1984, i32* %185, align 4
  br label %186

186:                                              ; preds = %186, %118
  %187 = phi i64 [ 0, %118 ], [ %208, %186 ]
  %188 = add nuw nsw i64 %187, 32
  %189 = getelementptr inbounds [544 x i32], [544 x i32]* %164, i64 0, i64 %188
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> <i32 2656, i32 2656, i32 2656, i32 2656>, <4 x i32>* %190, align 4
  %191 = getelementptr inbounds i32, i32* %189, i64 4
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 2656, i32 2656, i32 2656, i32 2656>, <4 x i32>* %192, align 4
  %193 = add nuw nsw i64 %187, 40
  %194 = getelementptr inbounds [544 x i32], [544 x i32]* %164, i64 0, i64 %193
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> <i32 2656, i32 2656, i32 2656, i32 2656>, <4 x i32>* %195, align 4
  %196 = getelementptr inbounds i32, i32* %194, i64 4
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> <i32 2656, i32 2656, i32 2656, i32 2656>, <4 x i32>* %197, align 4
  %198 = add nuw nsw i64 %187, 48
  %199 = getelementptr inbounds [544 x i32], [544 x i32]* %164, i64 0, i64 %198
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> <i32 2656, i32 2656, i32 2656, i32 2656>, <4 x i32>* %200, align 4
  %201 = getelementptr inbounds i32, i32* %199, i64 4
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> <i32 2656, i32 2656, i32 2656, i32 2656>, <4 x i32>* %202, align 4
  %203 = add nuw nsw i64 %187, 56
  %204 = getelementptr inbounds [544 x i32], [544 x i32]* %164, i64 0, i64 %203
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> <i32 2656, i32 2656, i32 2656, i32 2656>, <4 x i32>* %205, align 4
  %206 = getelementptr inbounds i32, i32* %204, i64 4
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> <i32 2656, i32 2656, i32 2656, i32 2656>, <4 x i32>* %207, align 4
  %208 = add nuw nsw i64 %187, 32
  %209 = icmp eq i64 %208, 512
  br i1 %209, label %210, label %186, !llvm.loop !4

210:                                              ; preds = %186
  %211 = bitcast i8* %24 to %struct.UNewTrie2**
  br label %212

212:                                              ; preds = %210, %233
  %213 = phi i32 [ 128, %210 ], [ %234, %233 ]
  %214 = load i32, i32* %2, align 4
  %215 = icmp slt i32 %214, 1
  br i1 %215, label %216, label %233

216:                                              ; preds = %212
  %217 = load %struct.UNewTrie2*, %struct.UNewTrie2** %211, align 8
  %218 = icmp eq %struct.UNewTrie2* %217, null
  br i1 %218, label %223, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %217, i64 0, i32 12
  %221 = load i8, i8* %220, align 4
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %224, label %223

223:                                              ; preds = %219, %216
  store i32 30, i32* %2, align 4
  br label %233

224:                                              ; preds = %219
  %225 = tail call fastcc i32 @_ZL12getDataBlockP9UNewTrie2ia(%struct.UNewTrie2* nonnull %217, i32 %213, i8 signext 1) #5
  %226 = icmp slt i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  store i32 7, i32* %2, align 4
  br label %233

228:                                              ; preds = %224
  %229 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %217, i64 0, i32 2
  %230 = load i32*, i32** %229, align 8
  %231 = sext i32 %225 to i64
  %232 = getelementptr inbounds i32, i32* %230, i64 %231
  store i32 %0, i32* %232, align 4
  br label %233

233:                                              ; preds = %212, %223, %227, %228
  %234 = add nuw nsw i32 %213, 32
  %235 = icmp ult i32 %234, 2048
  br i1 %235, label %212, label %236

236:                                              ; preds = %233, %3, %16
  %237 = phi %struct.UTrie2* [ null, %16 ], [ null, %3 ], [ %8, %233 ]
  ret %struct.UTrie2* %237

238:                                              ; preds = %99
  %239 = or i64 %100, 28
  %240 = getelementptr inbounds [35488 x i32], [35488 x i32]* %89, i64 0, i64 %239
  %241 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %241, align 4
  %242 = getelementptr inbounds i32, i32* %240, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  store <4 x i32> <i32 192, i32 192, i32 192, i32 192>, <4 x i32>* %243, align 4
  %244 = add nuw nsw i64 %100, 32
  br label %99

245:                                              ; preds = %41
  %246 = load i32*, i32** %27, align 8
  %247 = getelementptr inbounds i32, i32* %246, i64 %51
  store i32 %0, i32* %247, align 4
  %248 = add nuw nsw i64 %42, 4
  br label %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #2

declare void @uprv_free_69(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @utrie2_set32_69(%struct.UTrie2* nocapture readonly, i32, i32, i32* nocapture) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %30

7:                                                ; preds = %4
  %8 = icmp ugt i32 %1, 1114111
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  store i32 1, i32* %3, align 4
  br label %30

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %12 = load %struct.UNewTrie2*, %struct.UNewTrie2** %11, align 8
  %13 = icmp eq %struct.UNewTrie2* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %12, i64 0, i32 12
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14, %10
  store i32 30, i32* %3, align 4
  br label %30

19:                                               ; preds = %14
  %20 = tail call fastcc i32 @_ZL12getDataBlockP9UNewTrie2ia(%struct.UNewTrie2* nonnull %12, i32 %1, i8 signext 1) #5
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  store i32 7, i32* %3, align 4
  br label %30

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %12, i64 0, i32 2
  %25 = load i32*, i32** %24, align 8
  %26 = and i32 %1, 31
  %27 = add nuw nsw i32 %20, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %25, i64 %28
  store i32 %2, i32* %29, align 4
  br label %30

30:                                               ; preds = %23, %22, %18, %4, %9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UTrie2* @utrie2_clone_69(%struct.UTrie2* readonly, i32* nocapture) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %160

5:                                                ; preds = %2
  %6 = icmp eq %struct.UTrie2* %0, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 11
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %13 = load %struct.UNewTrie2*, %struct.UNewTrie2** %12, align 8
  %14 = icmp eq %struct.UNewTrie2* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %5
  store i32 1, i32* %1, align 4
  br label %160

16:                                               ; preds = %11, %7
  %17 = tail call noalias i8* @uprv_malloc_69(i64 80) #4
  %18 = bitcast i8* %17 to %struct.UTrie2*
  %19 = icmp eq i8* %17, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  store i32 7, i32* %1, align 4
  br label %160

21:                                               ; preds = %16
  %22 = bitcast %struct.UTrie2* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %22, i64 80, i1 false)
  %23 = load i8*, i8** %8, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %68, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 12
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %27 to i64
  %29 = tail call noalias i8* @uprv_malloc_69(i64 %28) #4
  %30 = getelementptr inbounds i8, i8* %17, i64 56
  %31 = bitcast i8* %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = icmp eq i8* %29, null
  %33 = bitcast i8* %29 to i16*
  %34 = bitcast i8* %29 to i32*
  br i1 %32, label %154, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds i8, i8* %17, i64 68
  store i8 1, i8* %36, align 4
  %37 = load i8*, i8** %8, align 8
  %38 = load i32, i32* %26, align 8
  %39 = sext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 %37, i64 %39, i1 false)
  %40 = bitcast %struct.UTrie2* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = ptrtoint i8* %37 to i64
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 1
  %45 = getelementptr inbounds i16, i16* %33, i64 %44
  %46 = bitcast i8* %17 to i16**
  store i16* %45, i16** %46, align 8
  %47 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 1
  %48 = load i16*, i16** %47, align 8
  %49 = icmp eq i16* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %35
  %51 = ptrtoint i16* %48 to i64
  %52 = sub i64 %51, %42
  %53 = ashr exact i64 %52, 1
  %54 = getelementptr inbounds i16, i16* %33, i64 %53
  %55 = getelementptr inbounds i8, i8* %17, i64 8
  %56 = bitcast i8* %55 to i16**
  store i16* %54, i16** %56, align 8
  br label %57

57:                                               ; preds = %35, %50
  %58 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 2
  %59 = load i32*, i32** %58, align 8
  %60 = icmp eq i32* %59, null
  br i1 %60, label %160, label %61

61:                                               ; preds = %57
  %62 = ptrtoint i32* %59 to i64
  %63 = sub i64 %62, %42
  %64 = ashr exact i64 %63, 2
  %65 = getelementptr inbounds i32, i32* %34, i64 %64
  %66 = getelementptr inbounds i8, i8* %17, i64 16
  %67 = bitcast i8* %66 to i32**
  store i32* %65, i32** %67, align 8
  br label %160

68:                                               ; preds = %21
  %69 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %70 = load %struct.UNewTrie2*, %struct.UNewTrie2** %69, align 8
  %71 = tail call noalias i8* @uprv_malloc_69(i64 283584) #4
  %72 = bitcast i8* %71 to %struct.UNewTrie2*
  %73 = icmp eq i8* %71, null
  br i1 %73, label %146, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 6
  %76 = load i32, i32* %75, align 4
  %77 = shl nsw i32 %76, 2
  %78 = sext i32 %77 to i64
  %79 = tail call noalias i8* @uprv_malloc_69(i64 %78) #4
  %80 = getelementptr inbounds i8, i8* %71, i64 144128
  %81 = bitcast i8* %80 to i8**
  store i8* %79, i8** %81, align 8
  %82 = icmp eq i8* %79, null
  br i1 %82, label %83, label %84

83:                                               ; preds = %74
  tail call void @uprv_free_69(i8* nonnull %71) #5
  br label %146

84:                                               ; preds = %74
  %85 = load i32, i32* %75, align 4
  %86 = getelementptr inbounds i8, i8* %71, i64 144148
  %87 = bitcast i8* %86 to i32*
  store i32 %85, i32* %87, align 4
  %88 = bitcast %struct.UNewTrie2* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 %88, i64 2176, i1 false) #5
  %89 = getelementptr inbounds i8, i8* %71, i64 2176
  %90 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 1, i64 0
  %91 = bitcast i32* %90 to i8*
  %92 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 5
  %93 = load i32, i32* %92, align 8
  %94 = sext i32 %93 to i64
  %95 = shl nsw i64 %94, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %91, i64 %95, i1 false) #5
  %96 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 9
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds i8, i8* %71, i64 144160
  %99 = bitcast i8* %98 to i32*
  store i32 %97, i32* %99, align 8
  %100 = getelementptr inbounds i8, i8* %71, i64 144144
  %101 = bitcast i8* %100 to i32*
  store i32 %93, i32* %101, align 8
  %102 = load i8*, i8** %81, align 8
  %103 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 2
  %104 = bitcast i32** %103 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 7
  %107 = load i32, i32* %106, align 8
  %108 = sext i32 %107 to i64
  %109 = shl nsw i64 %108, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %105, i64 %109, i1 false) #5
  %110 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 10
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds i8, i8* %71, i64 144164
  %113 = bitcast i8* %112 to i32*
  store i32 %111, i32* %113, align 4
  %114 = load i32, i32* %106, align 8
  %115 = getelementptr inbounds i8, i8* %71, i64 144152
  %116 = bitcast i8* %115 to i32*
  store i32 %114, i32* %116, align 8
  %117 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 12
  %118 = load i8, i8* %117, align 4
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %129

120:                                              ; preds = %84
  %121 = getelementptr inbounds i8, i8* %71, i64 144176
  %122 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 13, i64 0
  %123 = bitcast i32* %122 to i8*
  %124 = sext i32 %114 to i64
  %125 = lshr i64 %124, 5
  %126 = shl nuw nsw i64 %125, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %123, i64 %126, i1 false) #5
  %127 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 8
  %128 = load i32, i32* %127, align 4
  br label %129

129:                                              ; preds = %84, %120
  %130 = phi i32 [ %128, %120 ], [ 0, %84 ]
  %131 = getelementptr inbounds i8, i8* %71, i64 144156
  %132 = bitcast i8* %131 to i32*
  store i32 %130, i32* %132, align 4
  %133 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = getelementptr inbounds i8, i8* %71, i64 144136
  %136 = bitcast i8* %135 to i32*
  store i32 %134, i32* %136, align 8
  %137 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 4
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds i8, i8* %71, i64 144140
  %140 = bitcast i8* %139 to i32*
  store i32 %138, i32* %140, align 4
  %141 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %70, i64 0, i32 11
  %142 = load i32, i32* %141, align 8
  %143 = getelementptr inbounds i8, i8* %71, i64 144168
  %144 = bitcast i8* %143 to i32*
  store i32 %142, i32* %144, align 8
  %145 = getelementptr inbounds i8, i8* %71, i64 144172
  store i8 %118, i8* %145, align 4
  br label %146

146:                                              ; preds = %129, %83, %68
  %147 = phi %struct.UNewTrie2* [ null, %83 ], [ %72, %129 ], [ null, %68 ]
  %148 = getelementptr inbounds i8, i8* %17, i64 72
  %149 = bitcast i8* %148 to %struct.UNewTrie2**
  store %struct.UNewTrie2* %147, %struct.UNewTrie2** %149, align 8
  %150 = getelementptr inbounds i8, i8* %17, i64 56
  %151 = bitcast i8* %150 to i8**
  %152 = load i8*, i8** %151, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %154, label %160

154:                                              ; preds = %25, %146
  %155 = getelementptr inbounds i8, i8* %17, i64 72
  %156 = bitcast i8* %155 to %struct.UNewTrie2**
  %157 = load %struct.UNewTrie2*, %struct.UNewTrie2** %156, align 8
  %158 = icmp eq %struct.UNewTrie2* %157, null
  br i1 %158, label %159, label %160

159:                                              ; preds = %154
  store i32 7, i32* %1, align 4
  tail call void @uprv_free_69(i8* nonnull %17) #5
  br label %160

160:                                              ; preds = %61, %57, %146, %154, %159, %2, %20, %15
  %161 = phi %struct.UTrie2* [ null, %15 ], [ null, %20 ], [ null, %2 ], [ null, %159 ], [ %18, %154 ], [ %18, %146 ], [ %18, %57 ], [ %18, %61 ]
  ret %struct.UTrie2* %161
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UTrie2* @utrie2_cloneAsThawed_69(%struct.UTrie2*, i32* nocapture) local_unnamed_addr #0 {
  %3 = alloca %struct.NewTrieAndStatus, align 8
  %4 = bitcast %struct.NewTrieAndStatus* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 16, i1 false)
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %100

7:                                                ; preds = %2
  %8 = icmp eq %struct.UTrie2* %0, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 11
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  %13 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %14 = load %struct.UNewTrie2*, %struct.UNewTrie2** %13, align 8
  %15 = icmp eq %struct.UNewTrie2* %14, null
  br i1 %12, label %16, label %18

16:                                               ; preds = %9
  br i1 %15, label %17, label %19

17:                                               ; preds = %16, %7
  store i32 1, i32* %1, align 4
  br label %100

18:                                               ; preds = %9
  br i1 %15, label %25, label %19

19:                                               ; preds = %16, %18
  %20 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %14, i64 0, i32 12
  %21 = load i8, i8* %20, align 4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = tail call %struct.UTrie2* @utrie2_clone_69(%struct.UTrie2* nonnull %0, i32* %1)
  br label %100

25:                                               ; preds = %19, %18
  %26 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 7
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 8
  %29 = load i32, i32* %28, align 8
  %30 = tail call %struct.UTrie2* @utrie2_open_69(i32 %27, i32 %29, i32* %1)
  %31 = getelementptr inbounds %struct.NewTrieAndStatus, %struct.NewTrieAndStatus* %3, i64 0, i32 0
  store %struct.UTrie2* %30, %struct.UTrie2** %31, align 8
  %32 = load i32, i32* %1, align 4
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %34, label %100

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.NewTrieAndStatus, %struct.NewTrieAndStatus* %3, i64 0, i32 2
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %struct.NewTrieAndStatus, %struct.NewTrieAndStatus* %3, i64 0, i32 1
  store i32 %32, i32* %36, align 8
  call void @utrie2_enum_69(%struct.UTrie2* nonnull %0, i32 (i8*, i32)* null, i8 (i8*, i32, i32, i32)* nonnull @_ZL13copyEnumRangePKviij, i8* nonnull %4) #5
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %1, align 4
  %38 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 2
  %39 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 0
  br label %40

40:                                               ; preds = %92, %34
  %41 = phi i32 [ 55296, %34 ], [ %93, %92 ]
  %42 = load i32*, i32** %38, align 8
  %43 = icmp eq i32* %42, null
  %44 = load i16*, i16** %39, align 8
  %45 = lshr i32 %41, 5
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %44, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = shl nuw nsw i32 %49, 2
  %51 = and i32 %41, 31
  %52 = add nuw nsw i32 %50, %51
  %53 = zext i32 %52 to i64
  br i1 %43, label %54, label %58

54:                                               ; preds = %40
  %55 = getelementptr inbounds i16, i16* %44, i64 %53
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  br label %61

58:                                               ; preds = %40
  %59 = getelementptr inbounds i32, i32* %42, i64 %53
  %60 = load i32, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %54
  %62 = phi i32 [ %57, %54 ], [ %60, %58 ]
  %63 = load i32, i32* %26, align 4
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %92, label %65

65:                                               ; preds = %61
  %66 = load %struct.UTrie2*, %struct.UTrie2** %31, align 8
  %67 = load i32, i32* %1, align 4
  %68 = icmp slt i32 %67, 1
  br i1 %68, label %69, label %92

69:                                               ; preds = %65
  %70 = and i32 %41, 64512
  %71 = icmp eq i32 %70, 55296
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  store i32 1, i32* %1, align 4
  br label %92

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %66, i64 0, i32 16
  %75 = load %struct.UNewTrie2*, %struct.UNewTrie2** %74, align 8
  %76 = icmp eq %struct.UNewTrie2* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %75, i64 0, i32 12
  %79 = load i8, i8* %78, align 4
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %77, %73
  store i32 30, i32* %1, align 4
  br label %92

82:                                               ; preds = %77
  %83 = call fastcc i32 @_ZL12getDataBlockP9UNewTrie2ia(%struct.UNewTrie2* nonnull %75, i32 %41, i8 signext 0) #5
  %84 = icmp slt i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  store i32 7, i32* %1, align 4
  br label %92

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %75, i64 0, i32 2
  %88 = load i32*, i32** %87, align 8
  %89 = add nuw nsw i32 %83, %51
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  store i32 %62, i32* %91, align 4
  br label %92

92:                                               ; preds = %86, %85, %81, %72, %65, %61
  %93 = add nuw nsw i32 %41, 1
  %94 = icmp eq i32 %93, 56320
  br i1 %94, label %95, label %40

95:                                               ; preds = %92
  %96 = load i32, i32* %1, align 4
  %97 = icmp slt i32 %96, 1
  %98 = load %struct.UTrie2*, %struct.UTrie2** %31, align 8
  br i1 %97, label %100, label %99

99:                                               ; preds = %95
  call void @utrie2_close_69(%struct.UTrie2* %98) #5
  store %struct.UTrie2* null, %struct.UTrie2** %31, align 8
  br label %100

100:                                              ; preds = %95, %99, %25, %2, %23, %17
  %101 = phi %struct.UTrie2* [ null, %17 ], [ %24, %23 ], [ null, %2 ], [ null, %25 ], [ null, %99 ], [ %98, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #5
  ret %struct.UTrie2* %101
}

declare void @utrie2_enum_69(%struct.UTrie2*, i32 (i8*, i32)*, i8 (i8*, i32, i32, i32)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal signext i8 @_ZL13copyEnumRangePKviij(i8* nocapture, i32, i32, i32) #0 {
  %5 = bitcast i8* %0 to %struct.UTrie2**
  %6 = load %struct.UTrie2*, %struct.UTrie2** %5, align 8
  %7 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %6, i64 0, i32 7
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, %3
  br i1 %9, label %50, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %0, i64 12
  %12 = load i8, i8* %11, align 4
  %13 = icmp ne i8 %12, 0
  %14 = zext i1 %13 to i32
  %15 = sub i32 %2, %14
  %16 = icmp eq i32 %15, %1
  %17 = getelementptr inbounds i8, i8* %0, i64 8
  %18 = bitcast i8* %17 to i32*
  br i1 %16, label %19, label %45

19:                                               ; preds = %10
  %20 = load i32, i32* %18, align 4
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %22, label %46

22:                                               ; preds = %19
  %23 = icmp ugt i32 %1, 1114111
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  store i32 1, i32* %18, align 4
  br label %46

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %6, i64 0, i32 16
  %27 = load %struct.UNewTrie2*, %struct.UNewTrie2** %26, align 8
  %28 = icmp eq %struct.UNewTrie2* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %27, i64 0, i32 12
  %31 = load i8, i8* %30, align 4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %29, %25
  store i32 30, i32* %18, align 4
  br label %46

34:                                               ; preds = %29
  %35 = tail call fastcc i32 @_ZL12getDataBlockP9UNewTrie2ia(%struct.UNewTrie2* nonnull %27, i32 %1, i8 signext 1) #5
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  store i32 7, i32* %18, align 4
  br label %46

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %27, i64 0, i32 2
  %40 = load i32*, i32** %39, align 8
  %41 = and i32 %1, 31
  %42 = add nuw nsw i32 %35, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %40, i64 %43
  store i32 %3, i32* %44, align 4
  br label %46

45:                                               ; preds = %10
  tail call void @utrie2_setRange32_69(%struct.UTrie2* %6, i32 %1, i32 %15, i32 %3, i8 signext 1, i32* %18)
  br label %46

46:                                               ; preds = %38, %37, %33, %24, %19, %45
  %47 = load i32, i32* %18, align 8
  %48 = icmp slt i32 %47, 1
  %49 = zext i1 %48 to i8
  br label %50

50:                                               ; preds = %4, %46
  %51 = phi i8 [ %49, %46 ], [ 1, %4 ]
  ret i8 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @utrie2_set32ForLeadSurrogateCodeUnit_69(%struct.UTrie2* nocapture readonly, i32, i32, i32* nocapture) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %31

7:                                                ; preds = %4
  %8 = and i32 %1, -1024
  %9 = icmp eq i32 %8, 55296
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  store i32 1, i32* %3, align 4
  br label %31

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %13 = load %struct.UNewTrie2*, %struct.UNewTrie2** %12, align 8
  %14 = icmp eq %struct.UNewTrie2* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 12
  %17 = load i8, i8* %16, align 4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %15, %11
  store i32 30, i32* %3, align 4
  br label %31

20:                                               ; preds = %15
  %21 = tail call fastcc i32 @_ZL12getDataBlockP9UNewTrie2ia(%struct.UNewTrie2* nonnull %13, i32 %1, i8 signext 0) #5
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  store i32 7, i32* %3, align 4
  br label %31

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 2
  %26 = load i32*, i32** %25, align 8
  %27 = and i32 %1, 31
  %28 = add nuw nsw i32 %21, %27
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %26, i64 %29
  store i32 %2, i32* %30, align 4
  br label %31

31:                                               ; preds = %24, %23, %19, %4, %10
  ret void
}

declare void @utrie2_close_69(%struct.UTrie2*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UTrie2* @utrie2_fromUTrie_69(%struct.UTrie*, i32, i32* nocapture) local_unnamed_addr #0 {
  %4 = alloca %struct.NewTrieAndStatus, align 8
  %5 = bitcast %struct.NewTrieAndStatus* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %93

8:                                                ; preds = %3
  %9 = icmp eq %struct.UTrie* %0, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  store i32 1, i32* %2, align 4
  br label %93

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = tail call %struct.UTrie2* @utrie2_open_69(i32 %13, i32 %1, i32* %2)
  %15 = getelementptr inbounds %struct.NewTrieAndStatus, %struct.NewTrieAndStatus* %4, i64 0, i32 0
  store %struct.UTrie2* %14, %struct.UTrie2** %15, align 8
  %16 = load i32, i32* %2, align 4
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %93

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.NewTrieAndStatus, %struct.NewTrieAndStatus* %4, i64 0, i32 2
  store i8 1, i8* %19, align 4
  %20 = getelementptr inbounds %struct.NewTrieAndStatus, %struct.NewTrieAndStatus* %4, i64 0, i32 1
  store i32 %16, i32* %20, align 8
  call void @utrie_enum_69(%struct.UTrie* nonnull %0, i32 (i8*, i32)* null, i8 (i8*, i32, i32, i32)* nonnull @_ZL13copyEnumRangePKviij, i8* nonnull %5) #5
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %2, align 4
  %22 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 1
  %23 = getelementptr inbounds %struct.UTrie, %struct.UTrie* %0, i64 0, i32 0
  br label %24

24:                                               ; preds = %76, %18
  %25 = phi i32 [ 55296, %18 ], [ %77, %76 ]
  %26 = load i32*, i32** %22, align 8
  %27 = icmp eq i32* %26, null
  %28 = load i16*, i16** %23, align 8
  %29 = lshr i32 %25, 5
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i16, i16* %28, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = shl nuw nsw i32 %33, 2
  %35 = and i32 %25, 31
  %36 = add nuw nsw i32 %34, %35
  %37 = zext i32 %36 to i64
  br i1 %27, label %38, label %42

38:                                               ; preds = %24
  %39 = getelementptr inbounds i16, i16* %28, i64 %37
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  br label %45

42:                                               ; preds = %24
  %43 = getelementptr inbounds i32, i32* %26, i64 %37
  %44 = load i32, i32* %43, align 4
  br label %45

45:                                               ; preds = %42, %38
  %46 = phi i32 [ %41, %38 ], [ %44, %42 ]
  %47 = load i32, i32* %12, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %76, label %49

49:                                               ; preds = %45
  %50 = load %struct.UTrie2*, %struct.UTrie2** %15, align 8
  %51 = load i32, i32* %2, align 4
  %52 = icmp slt i32 %51, 1
  br i1 %52, label %53, label %76

53:                                               ; preds = %49
  %54 = and i32 %25, 64512
  %55 = icmp eq i32 %54, 55296
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  store i32 1, i32* %2, align 4
  br label %76

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %50, i64 0, i32 16
  %59 = load %struct.UNewTrie2*, %struct.UNewTrie2** %58, align 8
  %60 = icmp eq %struct.UNewTrie2* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %59, i64 0, i32 12
  %63 = load i8, i8* %62, align 4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %61, %57
  store i32 30, i32* %2, align 4
  br label %76

66:                                               ; preds = %61
  %67 = call fastcc i32 @_ZL12getDataBlockP9UNewTrie2ia(%struct.UNewTrie2* nonnull %59, i32 %25, i8 signext 0) #5
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  store i32 7, i32* %2, align 4
  br label %76

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %59, i64 0, i32 2
  %72 = load i32*, i32** %71, align 8
  %73 = add nuw nsw i32 %67, %35
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %72, i64 %74
  store i32 %46, i32* %75, align 4
  br label %76

76:                                               ; preds = %70, %69, %65, %56, %49, %45
  %77 = add nuw nsw i32 %25, 1
  %78 = icmp eq i32 %77, 56320
  br i1 %78, label %79, label %24

79:                                               ; preds = %76
  %80 = load i32, i32* %2, align 4
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %91, label %82

82:                                               ; preds = %79
  %83 = load %struct.UTrie2*, %struct.UTrie2** %15, align 8
  %84 = load i32*, i32** %22, align 8
  %85 = icmp ne i32* %84, null
  %86 = zext i1 %85 to i32
  call void @utrie2_freeze_69(%struct.UTrie2* %83, i32 %86, i32* %2)
  %87 = load i32, i32* %2, align 4
  %88 = icmp slt i32 %87, 1
  br i1 %88, label %89, label %91

89:                                               ; preds = %82
  %90 = load %struct.UTrie2*, %struct.UTrie2** %15, align 8
  br label %93

91:                                               ; preds = %79, %82
  %92 = load %struct.UTrie2*, %struct.UTrie2** %15, align 8
  call void @utrie2_close_69(%struct.UTrie2* %92) #5
  store %struct.UTrie2* null, %struct.UTrie2** %15, align 8
  br label %93

93:                                               ; preds = %91, %89, %11, %3, %10
  %94 = phi %struct.UTrie2* [ null, %10 ], [ null, %3 ], [ null, %11 ], [ %90, %89 ], [ null, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #5
  ret %struct.UTrie2* %94
}

declare void @utrie_enum_69(%struct.UTrie*, i32 (i8*, i32)*, i8 (i8*, i32, i32, i32)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @utrie2_freeze_69(%struct.UTrie2*, i32, i32* nocapture) local_unnamed_addr #0 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %1565

6:                                                ; preds = %3
  %7 = icmp eq %struct.UTrie2* %0, null
  %8 = icmp ugt i32 %1, 1
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i32 1, i32* %2, align 4
  br label %1565

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %13 = load %struct.UNewTrie2*, %struct.UNewTrie2** %12, align 8
  %14 = icmp eq %struct.UNewTrie2* %13, null
  br i1 %14, label %15, label %22

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 1
  %17 = load i16*, i16** %16, align 8
  %18 = icmp eq i16* %17, null
  %19 = zext i1 %18 to i32
  %20 = icmp eq i32 %19, %1
  br i1 %20, label %1565, label %21

21:                                               ; preds = %15
  store i32 1, i32* %2, align 4
  br label %1565

22:                                               ; preds = %11
  %23 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 12
  %24 = load i8, i8* %23, align 4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %913

26:                                               ; preds = %22
  %27 = tail call i32 @utrie2_get32_69(%struct.UTrie2* nonnull %0, i32 1114111) #5
  %28 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 2
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 9
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 10
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %31, %27
  %37 = select i1 %36, i32 %33, i32 -1
  %38 = select i1 %36, i32 %35, i32 -1
  br label %39

39:                                               ; preds = %105, %26
  %40 = phi i32 [ %38, %26 ], [ %108, %105 ]
  %41 = phi i32 [ %37, %26 ], [ %106, %105 ]
  %42 = phi i64 [ 544, %26 ], [ %49, %105 ]
  %43 = phi i32 [ 1114112, %26 ], [ %107, %105 ]
  %44 = shl i64 %42, 32
  %45 = ashr exact i64 %44, 32
  br label %46

46:                                               ; preds = %53, %39
  %47 = phi i64 [ %45, %39 ], [ %49, %53 ]
  %48 = phi i32 [ %43, %39 ], [ %54, %53 ]
  %49 = add nsw i64 %47, -1
  %50 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %41
  br i1 %52, label %53, label %56

53:                                               ; preds = %46
  %54 = add nsw i32 %48, -2048
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %46, label %110

56:                                               ; preds = %46
  %57 = icmp eq i32 %51, %33
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = sext i32 %51 to i64
  br label %99

60:                                               ; preds = %56
  br i1 %36, label %61, label %119

61:                                               ; preds = %60
  %62 = add nsw i32 %48, -2048
  br label %105

63:                                               ; preds = %99, %71
  %64 = phi i64 [ %104, %99 ], [ %66, %71 ]
  %65 = phi i32 [ %102, %99 ], [ %72, %71 ]
  %66 = add nsw i64 %64, -1
  %67 = add nsw i64 %66, %59
  %68 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %100
  br i1 %70, label %71, label %74

71:                                               ; preds = %63
  %72 = add nsw i32 %65, -32
  %73 = icmp sgt i64 %66, 0
  br i1 %73, label %63, label %105

74:                                               ; preds = %63
  %75 = trunc i64 %66 to i32
  %76 = icmp eq i32 %69, %35
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = sext i32 %69 to i64
  br label %82

79:                                               ; preds = %74
  br i1 %36, label %80, label %119

80:                                               ; preds = %79
  %81 = add nsw i32 %65, -32
  br label %96

82:                                               ; preds = %1647, %77
  %83 = phi i64 [ 32, %77 ], [ %1642, %1647 ]
  %84 = phi i32 [ %65, %77 ], [ %1648, %1647 ]
  %85 = add nsw i64 %83, -1
  %86 = add nsw i64 %85, %78
  %87 = getelementptr inbounds i32, i32* %29, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, %27
  br i1 %89, label %90, label %119

90:                                               ; preds = %82
  %91 = add nsw i64 %83, -2
  %92 = add nsw i64 %91, %78
  %93 = getelementptr inbounds i32, i32* %29, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, %27
  br i1 %95, label %1635, label %117

96:                                               ; preds = %1647, %80
  %97 = phi i32 [ %81, %80 ], [ %1648, %1647 ]
  %98 = icmp sgt i32 %75, 0
  br i1 %98, label %99, label %105

99:                                               ; preds = %96, %58
  %100 = phi i32 [ %69, %96 ], [ %40, %58 ]
  %101 = phi i64 [ %66, %96 ], [ 64, %58 ]
  %102 = phi i32 [ %97, %96 ], [ %48, %58 ]
  %103 = shl i64 %101, 32
  %104 = ashr exact i64 %103, 32
  br label %63

105:                                              ; preds = %96, %71, %61
  %106 = phi i32 [ %33, %61 ], [ %51, %71 ], [ %51, %96 ]
  %107 = phi i32 [ %62, %61 ], [ %72, %71 ], [ %97, %96 ]
  %108 = phi i32 [ %40, %61 ], [ %100, %71 ], [ %69, %96 ]
  %109 = icmp sgt i32 %107, 0
  br i1 %109, label %39, label %110

110:                                              ; preds = %105, %53
  %111 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 11
  store i32 0, i32* %111, align 8
  %112 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 9
  store i32 0, i32* %112, align 4
  br label %136

113:                                              ; preds = %1641
  %114 = add nsw i32 %84, -3
  br label %119

115:                                              ; preds = %1635
  %116 = add nsw i32 %84, -2
  br label %119

117:                                              ; preds = %90
  %118 = add nsw i32 %84, -1
  br label %119

119:                                              ; preds = %60, %79, %113, %115, %117, %82
  %120 = phi i32 [ %114, %113 ], [ %116, %115 ], [ %118, %117 ], [ %84, %82 ], [ %65, %79 ], [ %48, %60 ]
  %121 = add nsw i32 %120, 2047
  %122 = and i32 %121, -2048
  %123 = icmp eq i32 %122, 1114112
  br i1 %123, label %124, label %129

124:                                              ; preds = %119
  %125 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 8
  %126 = load i32, i32* %125, align 8
  %127 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 11
  store i32 1114112, i32* %127, align 8
  %128 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 9
  store i32 1114112, i32* %128, align 4
  br label %144

129:                                              ; preds = %119
  %130 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 11
  store i32 %122, i32* %130, align 8
  %131 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 9
  store i32 %122, i32* %131, align 4
  %132 = icmp slt i32 %122, 1114112
  br i1 %132, label %133, label %144

133:                                              ; preds = %129
  %134 = icmp sgt i32 %122, 65536
  %135 = select i1 %134, i32 %122, i32 65536
  br label %136

136:                                              ; preds = %133, %110
  %137 = phi i32 [ 0, %110 ], [ %122, %133 ]
  %138 = phi i32* [ %111, %110 ], [ %130, %133 ]
  %139 = phi i32 [ 65536, %110 ], [ %135, %133 ]
  %140 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 7
  %141 = load i32, i32* %140, align 4
  tail call void @utrie2_setRange32_69(%struct.UTrie2* %0, i32 %139, i32 1114111, i32 %141, i8 signext 1, i32* %2) #5
  %142 = load i32, i32* %2, align 4
  %143 = icmp slt i32 %142, 1
  br i1 %143, label %144, label %1565

144:                                              ; preds = %136, %129, %124
  %145 = phi i32* [ %138, %136 ], [ %130, %129 ], [ %127, %124 ]
  %146 = phi i32 [ %27, %136 ], [ %27, %129 ], [ %126, %124 ]
  %147 = phi i32 [ %137, %136 ], [ %122, %129 ], [ 1114112, %124 ]
  %148 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 0
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 0, i32 32, i32 64, i32 96>, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 4
  store i32 128, i32* %150, align 4
  %151 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 5
  store i32 160, i32* %151, align 4
  %152 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 7
  %153 = load i32, i32* %152, align 8
  %154 = icmp sgt i32 %153, 192
  br i1 %154, label %587, label %155

155:                                              ; preds = %582, %174, %144
  %156 = phi i32 [ 192, %144 ], [ %591, %174 ], [ %584, %582 ]
  %157 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 5
  %158 = load i32, i32* %157, align 8
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %593, label %608

160:                                              ; preds = %587, %174
  %161 = phi i32 [ %588, %587 ], [ %175, %174 ]
  %162 = phi i32 [ %588, %587 ], [ %176, %174 ]
  %163 = phi i32 [ %589, %587 ], [ %168, %174 ]
  %164 = phi i32 [ %590, %587 ], [ %167, %174 ]
  %165 = phi i32 [ %592, %587 ], [ %177, %174 ]
  %166 = icmp eq i32 %165, 2176
  %167 = select i1 %166, i32 32, i32 %164
  %168 = select i1 %166, i32 1, i32 %163
  %169 = ashr i32 %165, 5
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = icmp slt i32 %172, 1
  br i1 %173, label %174, label %179

174:                                              ; preds = %313, %217, %160
  %175 = phi i32 [ %161, %160 ], [ %314, %313 ], [ %161, %217 ]
  %176 = phi i32 [ %162, %160 ], [ %314, %313 ], [ %161, %217 ]
  %177 = add nsw i32 %167, %165
  %178 = icmp slt i32 %177, %176
  br i1 %178, label %160, label %155

179:                                              ; preds = %160
  %180 = load i32*, i32** %28, align 8
  %181 = sub nsw i32 %591, %167
  %182 = icmp slt i32 %181, 0
  %183 = sext i32 %165 to i64
  br i1 %182, label %213, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds i32, i32* %180, i64 %183
  %186 = icmp sgt i32 %167, 0
  br label %187

187:                                              ; preds = %206, %184
  %188 = phi i64 [ 0, %184 ], [ %207, %206 ]
  br i1 %186, label %189, label %203

189:                                              ; preds = %187
  %190 = getelementptr inbounds i32, i32* %180, i64 %188
  br label %191

191:                                              ; preds = %198, %189
  %192 = phi i32 [ %201, %198 ], [ %167, %189 ]
  %193 = phi i32* [ %200, %198 ], [ %185, %189 ]
  %194 = phi i32* [ %199, %198 ], [ %190, %189 ]
  %195 = load i32, i32* %194, align 4
  %196 = load i32, i32* %193, align 4
  %197 = icmp eq i32 %195, %196
  br i1 %197, label %198, label %206

198:                                              ; preds = %191
  %199 = getelementptr inbounds i32, i32* %194, i64 1
  %200 = getelementptr inbounds i32, i32* %193, i64 1
  %201 = add nsw i32 %192, -1
  %202 = icmp sgt i32 %201, 0
  br i1 %202, label %191, label %203

203:                                              ; preds = %198, %187
  %204 = phi i32 [ %167, %187 ], [ %201, %198 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %210, label %206

206:                                              ; preds = %191, %203
  %207 = add nuw i64 %188, 4
  %208 = trunc i64 %207 to i32
  %209 = icmp slt i32 %181, %208
  br i1 %209, label %213, label %187

210:                                              ; preds = %203
  %211 = trunc i64 %188 to i32
  %212 = icmp sgt i32 %211, -1
  br i1 %212, label %217, label %213

213:                                              ; preds = %179, %210, %206
  %214 = getelementptr inbounds i32, i32* %180, i64 %183
  %215 = sext i32 %167 to i64
  %216 = sext i32 %591 to i64
  br label %315

217:                                              ; preds = %210
  %218 = icmp sgt i32 %168, 0
  br i1 %218, label %219, label %174

219:                                              ; preds = %217
  %220 = add nsw i32 %168, -1
  %221 = zext i32 %220 to i64
  %222 = add nuw nsw i64 %221, 1
  %223 = icmp ult i64 %222, 8
  br i1 %223, label %300, label %224

224:                                              ; preds = %219
  %225 = and i64 %222, 8589934584
  %226 = add nsw i64 %225, %170
  %227 = trunc i64 %225 to i32
  %228 = sub i32 %168, %227
  %229 = trunc i64 %225 to i32
  %230 = shl i32 %229, 5
  %231 = add i32 %230, %211
  %232 = insertelement <4 x i32> undef, i32 %211, i32 0
  %233 = shufflevector <4 x i32> %232, <4 x i32> undef, <4 x i32> zeroinitializer
  %234 = add <4 x i32> %233, <i32 0, i32 32, i32 64, i32 96>
  %235 = add nsw i64 %225, -8
  %236 = lshr exact i64 %235, 3
  %237 = add nuw nsw i64 %236, 1
  %238 = and i64 %237, 3
  %239 = icmp ult i64 %235, 24
  br i1 %239, label %280, label %240

240:                                              ; preds = %224
  %241 = sub nsw i64 %237, %238
  br label %242

242:                                              ; preds = %242, %240
  %243 = phi i64 [ 0, %240 ], [ %276, %242 ]
  %244 = phi <4 x i32> [ %234, %240 ], [ %277, %242 ]
  %245 = phi i64 [ %241, %240 ], [ %278, %242 ]
  %246 = add i64 %243, %170
  %247 = add <4 x i32> %244, <i32 128, i32 128, i32 128, i32 128>
  %248 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %246
  %249 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %244, <4 x i32>* %249, align 4
  %250 = getelementptr inbounds i32, i32* %248, i64 4
  %251 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> %247, <4 x i32>* %251, align 4
  %252 = or i64 %243, 8
  %253 = add <4 x i32> %244, <i32 256, i32 256, i32 256, i32 256>
  %254 = add i64 %252, %170
  %255 = add <4 x i32> %244, <i32 384, i32 384, i32 384, i32 384>
  %256 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %254
  %257 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %253, <4 x i32>* %257, align 4
  %258 = getelementptr inbounds i32, i32* %256, i64 4
  %259 = bitcast i32* %258 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %259, align 4
  %260 = or i64 %243, 16
  %261 = add <4 x i32> %244, <i32 512, i32 512, i32 512, i32 512>
  %262 = add i64 %260, %170
  %263 = add <4 x i32> %244, <i32 640, i32 640, i32 640, i32 640>
  %264 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %262
  %265 = bitcast i32* %264 to <4 x i32>*
  store <4 x i32> %261, <4 x i32>* %265, align 4
  %266 = getelementptr inbounds i32, i32* %264, i64 4
  %267 = bitcast i32* %266 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4
  %268 = or i64 %243, 24
  %269 = add <4 x i32> %244, <i32 768, i32 768, i32 768, i32 768>
  %270 = add i64 %268, %170
  %271 = add <4 x i32> %244, <i32 896, i32 896, i32 896, i32 896>
  %272 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %270
  %273 = bitcast i32* %272 to <4 x i32>*
  store <4 x i32> %269, <4 x i32>* %273, align 4
  %274 = getelementptr inbounds i32, i32* %272, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  store <4 x i32> %271, <4 x i32>* %275, align 4
  %276 = add i64 %243, 32
  %277 = add <4 x i32> %244, <i32 1024, i32 1024, i32 1024, i32 1024>
  %278 = add i64 %245, -4
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %242, !llvm.loop !5

280:                                              ; preds = %242, %224
  %281 = phi i64 [ 0, %224 ], [ %276, %242 ]
  %282 = phi <4 x i32> [ %234, %224 ], [ %277, %242 ]
  %283 = icmp eq i64 %238, 0
  br i1 %283, label %298, label %284

284:                                              ; preds = %280, %284
  %285 = phi i64 [ %294, %284 ], [ %281, %280 ]
  %286 = phi <4 x i32> [ %295, %284 ], [ %282, %280 ]
  %287 = phi i64 [ %296, %284 ], [ %238, %280 ]
  %288 = add i64 %285, %170
  %289 = add <4 x i32> %286, <i32 128, i32 128, i32 128, i32 128>
  %290 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %288
  %291 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %286, <4 x i32>* %291, align 4
  %292 = getelementptr inbounds i32, i32* %290, i64 4
  %293 = bitcast i32* %292 to <4 x i32>*
  store <4 x i32> %289, <4 x i32>* %293, align 4
  %294 = add i64 %285, 8
  %295 = add <4 x i32> %286, <i32 256, i32 256, i32 256, i32 256>
  %296 = add i64 %287, -1
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %284, !llvm.loop !6

298:                                              ; preds = %284, %280
  %299 = icmp eq i64 %222, %225
  br i1 %299, label %313, label %300

300:                                              ; preds = %298, %219
  %301 = phi i64 [ %170, %219 ], [ %226, %298 ]
  %302 = phi i32 [ %168, %219 ], [ %228, %298 ]
  %303 = phi i32 [ %211, %219 ], [ %231, %298 ]
  br label %304

304:                                              ; preds = %300, %304
  %305 = phi i64 [ %308, %304 ], [ %301, %300 ]
  %306 = phi i32 [ %311, %304 ], [ %302, %300 ]
  %307 = phi i32 [ %310, %304 ], [ %303, %300 ]
  %308 = add nsw i64 %305, 1
  %309 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %305
  store i32 %307, i32* %309, align 4
  %310 = add nsw i32 %307, 32
  %311 = add nsw i32 %306, -1
  %312 = icmp sgt i32 %311, 0
  br i1 %312, label %304, label %313, !llvm.loop !8

313:                                              ; preds = %304, %298
  %314 = load i32, i32* %152, align 8
  br label %174

315:                                              ; preds = %335, %213
  %316 = phi i64 [ %215, %213 ], [ %317, %335 ]
  %317 = add nsw i64 %316, -4
  %318 = icmp sgt i64 %317, 0
  br i1 %318, label %319, label %338

319:                                              ; preds = %315
  %320 = sub nsw i64 %216, %317
  %321 = getelementptr inbounds i32, i32* %180, i64 %320
  %322 = trunc i64 %317 to i32
  br label %323

323:                                              ; preds = %330, %319
  %324 = phi i32 [ %333, %330 ], [ %322, %319 ]
  %325 = phi i32* [ %332, %330 ], [ %214, %319 ]
  %326 = phi i32* [ %331, %330 ], [ %321, %319 ]
  %327 = load i32, i32* %326, align 4
  %328 = load i32, i32* %325, align 4
  %329 = icmp eq i32 %327, %328
  br i1 %329, label %330, label %335

330:                                              ; preds = %323
  %331 = getelementptr inbounds i32, i32* %326, i64 1
  %332 = getelementptr inbounds i32, i32* %325, i64 1
  %333 = add nsw i32 %324, -1
  %334 = icmp sgt i32 %333, 0
  br i1 %334, label %323, label %335

335:                                              ; preds = %330, %323
  %336 = phi i32 [ %333, %330 ], [ %324, %323 ]
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %427, label %315

338:                                              ; preds = %315
  %339 = icmp slt i32 %591, %165
  br i1 %339, label %427, label %340

340:                                              ; preds = %338
  %341 = icmp sgt i32 %168, 0
  br i1 %341, label %342, label %582

342:                                              ; preds = %340
  %343 = add nsw i32 %168, -1
  %344 = zext i32 %343 to i64
  %345 = add nuw nsw i64 %344, 1
  %346 = icmp ult i64 %345, 8
  br i1 %346, label %347, label %351

347:                                              ; preds = %425, %342
  %348 = phi i64 [ %170, %342 ], [ %353, %425 ]
  %349 = phi i32 [ %168, %342 ], [ %355, %425 ]
  %350 = phi i32 [ %165, %342 ], [ %358, %425 ]
  br label %568

351:                                              ; preds = %342
  %352 = and i64 %345, 8589934584
  %353 = add nsw i64 %352, %170
  %354 = trunc i64 %352 to i32
  %355 = sub i32 %168, %354
  %356 = trunc i64 %352 to i32
  %357 = shl i32 %356, 5
  %358 = add i32 %165, %357
  %359 = insertelement <4 x i32> undef, i32 %165, i32 0
  %360 = shufflevector <4 x i32> %359, <4 x i32> undef, <4 x i32> zeroinitializer
  %361 = add <4 x i32> %360, <i32 0, i32 32, i32 64, i32 96>
  %362 = add nsw i64 %352, -8
  %363 = lshr exact i64 %362, 3
  %364 = add nuw nsw i64 %363, 1
  %365 = and i64 %364, 3
  %366 = icmp ult i64 %362, 24
  br i1 %366, label %407, label %367

367:                                              ; preds = %351
  %368 = sub nsw i64 %364, %365
  br label %369

369:                                              ; preds = %369, %367
  %370 = phi i64 [ 0, %367 ], [ %403, %369 ]
  %371 = phi <4 x i32> [ %361, %367 ], [ %404, %369 ]
  %372 = phi i64 [ %368, %367 ], [ %405, %369 ]
  %373 = add i64 %370, %170
  %374 = add <4 x i32> %371, <i32 128, i32 128, i32 128, i32 128>
  %375 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %373
  %376 = bitcast i32* %375 to <4 x i32>*
  store <4 x i32> %371, <4 x i32>* %376, align 4
  %377 = getelementptr inbounds i32, i32* %375, i64 4
  %378 = bitcast i32* %377 to <4 x i32>*
  store <4 x i32> %374, <4 x i32>* %378, align 4
  %379 = or i64 %370, 8
  %380 = add <4 x i32> %371, <i32 256, i32 256, i32 256, i32 256>
  %381 = add i64 %379, %170
  %382 = add <4 x i32> %371, <i32 384, i32 384, i32 384, i32 384>
  %383 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %381
  %384 = bitcast i32* %383 to <4 x i32>*
  store <4 x i32> %380, <4 x i32>* %384, align 4
  %385 = getelementptr inbounds i32, i32* %383, i64 4
  %386 = bitcast i32* %385 to <4 x i32>*
  store <4 x i32> %382, <4 x i32>* %386, align 4
  %387 = or i64 %370, 16
  %388 = add <4 x i32> %371, <i32 512, i32 512, i32 512, i32 512>
  %389 = add i64 %387, %170
  %390 = add <4 x i32> %371, <i32 640, i32 640, i32 640, i32 640>
  %391 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %389
  %392 = bitcast i32* %391 to <4 x i32>*
  store <4 x i32> %388, <4 x i32>* %392, align 4
  %393 = getelementptr inbounds i32, i32* %391, i64 4
  %394 = bitcast i32* %393 to <4 x i32>*
  store <4 x i32> %390, <4 x i32>* %394, align 4
  %395 = or i64 %370, 24
  %396 = add <4 x i32> %371, <i32 768, i32 768, i32 768, i32 768>
  %397 = add i64 %395, %170
  %398 = add <4 x i32> %371, <i32 896, i32 896, i32 896, i32 896>
  %399 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %397
  %400 = bitcast i32* %399 to <4 x i32>*
  store <4 x i32> %396, <4 x i32>* %400, align 4
  %401 = getelementptr inbounds i32, i32* %399, i64 4
  %402 = bitcast i32* %401 to <4 x i32>*
  store <4 x i32> %398, <4 x i32>* %402, align 4
  %403 = add i64 %370, 32
  %404 = add <4 x i32> %371, <i32 1024, i32 1024, i32 1024, i32 1024>
  %405 = add i64 %372, -4
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %407, label %369, !llvm.loop !10

407:                                              ; preds = %369, %351
  %408 = phi i64 [ 0, %351 ], [ %403, %369 ]
  %409 = phi <4 x i32> [ %361, %351 ], [ %404, %369 ]
  %410 = icmp eq i64 %365, 0
  br i1 %410, label %425, label %411

411:                                              ; preds = %407, %411
  %412 = phi i64 [ %421, %411 ], [ %408, %407 ]
  %413 = phi <4 x i32> [ %422, %411 ], [ %409, %407 ]
  %414 = phi i64 [ %423, %411 ], [ %365, %407 ]
  %415 = add i64 %412, %170
  %416 = add <4 x i32> %413, <i32 128, i32 128, i32 128, i32 128>
  %417 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %415
  %418 = bitcast i32* %417 to <4 x i32>*
  store <4 x i32> %413, <4 x i32>* %418, align 4
  %419 = getelementptr inbounds i32, i32* %417, i64 4
  %420 = bitcast i32* %419 to <4 x i32>*
  store <4 x i32> %416, <4 x i32>* %420, align 4
  %421 = add i64 %412, 8
  %422 = add <4 x i32> %413, <i32 256, i32 256, i32 256, i32 256>
  %423 = add i64 %414, -1
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %425, label %411, !llvm.loop !11

425:                                              ; preds = %411, %407
  %426 = icmp eq i64 %345, %352
  br i1 %426, label %582, label %347

427:                                              ; preds = %335, %338
  %428 = trunc i64 %317 to i32
  %429 = icmp sgt i32 %168, 0
  br i1 %429, label %430, label %525

430:                                              ; preds = %427
  %431 = sub nsw i32 %591, %428
  %432 = add i32 %168, -1
  %433 = zext i32 %432 to i64
  %434 = add nuw nsw i64 %433, 1
  %435 = icmp ult i64 %434, 8
  br i1 %435, label %512, label %436

436:                                              ; preds = %430
  %437 = and i64 %434, 8589934584
  %438 = add nsw i64 %437, %170
  %439 = trunc i64 %437 to i32
  %440 = sub i32 %168, %439
  %441 = trunc i64 %437 to i32
  %442 = shl i32 %441, 5
  %443 = add i32 %431, %442
  %444 = insertelement <4 x i32> undef, i32 %431, i32 0
  %445 = shufflevector <4 x i32> %444, <4 x i32> undef, <4 x i32> zeroinitializer
  %446 = add <4 x i32> %445, <i32 0, i32 32, i32 64, i32 96>
  %447 = add nsw i64 %437, -8
  %448 = lshr exact i64 %447, 3
  %449 = add nuw nsw i64 %448, 1
  %450 = and i64 %449, 3
  %451 = icmp ult i64 %447, 24
  br i1 %451, label %492, label %452

452:                                              ; preds = %436
  %453 = sub nsw i64 %449, %450
  br label %454

454:                                              ; preds = %454, %452
  %455 = phi i64 [ 0, %452 ], [ %488, %454 ]
  %456 = phi <4 x i32> [ %446, %452 ], [ %489, %454 ]
  %457 = phi i64 [ %453, %452 ], [ %490, %454 ]
  %458 = add i64 %455, %170
  %459 = add <4 x i32> %456, <i32 128, i32 128, i32 128, i32 128>
  %460 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %458
  %461 = bitcast i32* %460 to <4 x i32>*
  store <4 x i32> %456, <4 x i32>* %461, align 4
  %462 = getelementptr inbounds i32, i32* %460, i64 4
  %463 = bitcast i32* %462 to <4 x i32>*
  store <4 x i32> %459, <4 x i32>* %463, align 4
  %464 = or i64 %455, 8
  %465 = add <4 x i32> %456, <i32 256, i32 256, i32 256, i32 256>
  %466 = add i64 %464, %170
  %467 = add <4 x i32> %456, <i32 384, i32 384, i32 384, i32 384>
  %468 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %466
  %469 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> %465, <4 x i32>* %469, align 4
  %470 = getelementptr inbounds i32, i32* %468, i64 4
  %471 = bitcast i32* %470 to <4 x i32>*
  store <4 x i32> %467, <4 x i32>* %471, align 4
  %472 = or i64 %455, 16
  %473 = add <4 x i32> %456, <i32 512, i32 512, i32 512, i32 512>
  %474 = add i64 %472, %170
  %475 = add <4 x i32> %456, <i32 640, i32 640, i32 640, i32 640>
  %476 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %474
  %477 = bitcast i32* %476 to <4 x i32>*
  store <4 x i32> %473, <4 x i32>* %477, align 4
  %478 = getelementptr inbounds i32, i32* %476, i64 4
  %479 = bitcast i32* %478 to <4 x i32>*
  store <4 x i32> %475, <4 x i32>* %479, align 4
  %480 = or i64 %455, 24
  %481 = add <4 x i32> %456, <i32 768, i32 768, i32 768, i32 768>
  %482 = add i64 %480, %170
  %483 = add <4 x i32> %456, <i32 896, i32 896, i32 896, i32 896>
  %484 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %482
  %485 = bitcast i32* %484 to <4 x i32>*
  store <4 x i32> %481, <4 x i32>* %485, align 4
  %486 = getelementptr inbounds i32, i32* %484, i64 4
  %487 = bitcast i32* %486 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %487, align 4
  %488 = add i64 %455, 32
  %489 = add <4 x i32> %456, <i32 1024, i32 1024, i32 1024, i32 1024>
  %490 = add i64 %457, -4
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %492, label %454, !llvm.loop !12

492:                                              ; preds = %454, %436
  %493 = phi i64 [ 0, %436 ], [ %488, %454 ]
  %494 = phi <4 x i32> [ %446, %436 ], [ %489, %454 ]
  %495 = icmp eq i64 %450, 0
  br i1 %495, label %510, label %496

496:                                              ; preds = %492, %496
  %497 = phi i64 [ %506, %496 ], [ %493, %492 ]
  %498 = phi <4 x i32> [ %507, %496 ], [ %494, %492 ]
  %499 = phi i64 [ %508, %496 ], [ %450, %492 ]
  %500 = add i64 %497, %170
  %501 = add <4 x i32> %498, <i32 128, i32 128, i32 128, i32 128>
  %502 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %500
  %503 = bitcast i32* %502 to <4 x i32>*
  store <4 x i32> %498, <4 x i32>* %503, align 4
  %504 = getelementptr inbounds i32, i32* %502, i64 4
  %505 = bitcast i32* %504 to <4 x i32>*
  store <4 x i32> %501, <4 x i32>* %505, align 4
  %506 = add i64 %497, 8
  %507 = add <4 x i32> %498, <i32 256, i32 256, i32 256, i32 256>
  %508 = add i64 %499, -1
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %510, label %496, !llvm.loop !13

510:                                              ; preds = %496, %492
  %511 = icmp eq i64 %434, %437
  br i1 %511, label %525, label %512

512:                                              ; preds = %510, %430
  %513 = phi i64 [ %170, %430 ], [ %438, %510 ]
  %514 = phi i32 [ %168, %430 ], [ %440, %510 ]
  %515 = phi i32 [ %431, %430 ], [ %443, %510 ]
  br label %516

516:                                              ; preds = %512, %516
  %517 = phi i64 [ %520, %516 ], [ %513, %512 ]
  %518 = phi i32 [ %523, %516 ], [ %514, %512 ]
  %519 = phi i32 [ %522, %516 ], [ %515, %512 ]
  %520 = add nsw i64 %517, 1
  %521 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %517
  store i32 %519, i32* %521, align 4
  %522 = add nsw i32 %519, 32
  %523 = add nsw i32 %518, -1
  %524 = icmp sgt i32 %523, 0
  br i1 %524, label %516, label %525, !llvm.loop !14

525:                                              ; preds = %516, %510, %427
  %526 = add i32 %165, %428
  %527 = sub nsw i32 %167, %428
  %528 = icmp sgt i32 %527, 0
  br i1 %528, label %529, label %582

529:                                              ; preds = %525
  %530 = sext i32 %526 to i64
  %531 = sub i32 %167, %428
  %532 = and i32 %531, 1
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %542, label %534

534:                                              ; preds = %529
  %535 = load i32*, i32** %28, align 8
  %536 = add nsw i64 %530, 1
  %537 = getelementptr inbounds i32, i32* %535, i64 %530
  %538 = load i32, i32* %537, align 4
  %539 = add nsw i64 %216, 1
  %540 = getelementptr inbounds i32, i32* %535, i64 %216
  store i32 %538, i32* %540, align 4
  %541 = add nsw i32 %527, -1
  br label %542

542:                                              ; preds = %534, %529
  %543 = phi i64 [ %536, %534 ], [ %530, %529 ]
  %544 = phi i64 [ %539, %534 ], [ %216, %529 ]
  %545 = phi i32 [ %541, %534 ], [ %527, %529 ]
  %546 = phi i64 [ %536, %534 ], [ undef, %529 ]
  %547 = phi i64 [ %539, %534 ], [ undef, %529 ]
  %548 = add i32 %428, 1
  %549 = icmp eq i32 %167, %548
  br i1 %549, label %577, label %550

550:                                              ; preds = %542, %550
  %551 = phi i64 [ %561, %550 ], [ %543, %542 ]
  %552 = phi i64 [ %564, %550 ], [ %544, %542 ]
  %553 = phi i32 [ %566, %550 ], [ %545, %542 ]
  %554 = load i32*, i32** %28, align 8
  %555 = add nsw i64 %551, 1
  %556 = getelementptr inbounds i32, i32* %554, i64 %551
  %557 = load i32, i32* %556, align 4
  %558 = add nsw i64 %552, 1
  %559 = getelementptr inbounds i32, i32* %554, i64 %552
  store i32 %557, i32* %559, align 4
  %560 = load i32*, i32** %28, align 8
  %561 = add nsw i64 %551, 2
  %562 = getelementptr inbounds i32, i32* %560, i64 %555
  %563 = load i32, i32* %562, align 4
  %564 = add nsw i64 %552, 2
  %565 = getelementptr inbounds i32, i32* %560, i64 %558
  store i32 %563, i32* %565, align 4
  %566 = add nsw i32 %553, -2
  %567 = icmp sgt i32 %566, 0
  br i1 %567, label %550, label %577

568:                                              ; preds = %347, %568
  %569 = phi i64 [ %572, %568 ], [ %348, %347 ]
  %570 = phi i32 [ %575, %568 ], [ %349, %347 ]
  %571 = phi i32 [ %574, %568 ], [ %350, %347 ]
  %572 = add nsw i64 %569, 1
  %573 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %569
  store i32 %571, i32* %573, align 4
  %574 = add nsw i32 %571, 32
  %575 = add nsw i32 %570, -1
  %576 = icmp sgt i32 %575, 0
  br i1 %576, label %568, label %582, !llvm.loop !15

577:                                              ; preds = %550, %542
  %578 = phi i64 [ %546, %542 ], [ %561, %550 ]
  %579 = phi i64 [ %547, %542 ], [ %564, %550 ]
  %580 = trunc i64 %578 to i32
  %581 = trunc i64 %579 to i32
  br label %582

582:                                              ; preds = %568, %425, %577, %525, %340
  %583 = phi i32 [ %526, %525 ], [ %165, %340 ], [ %580, %577 ], [ %358, %425 ], [ %574, %568 ]
  %584 = phi i32 [ %591, %525 ], [ %165, %340 ], [ %581, %577 ], [ %358, %425 ], [ %574, %568 ]
  %585 = load i32, i32* %152, align 8
  %586 = icmp slt i32 %583, %585
  br i1 %586, label %587, label %155

587:                                              ; preds = %144, %582
  %588 = phi i32 [ %585, %582 ], [ %153, %144 ]
  %589 = phi i32 [ %168, %582 ], [ 2, %144 ]
  %590 = phi i32 [ %167, %582 ], [ 64, %144 ]
  %591 = phi i32 [ %584, %582 ], [ 192, %144 ]
  %592 = phi i32 [ %583, %582 ], [ 192, %144 ]
  br label %160

593:                                              ; preds = %155, %593
  %594 = phi i32 [ %605, %593 ], [ 0, %155 ]
  %595 = icmp eq i32 %594, 2080
  %596 = add nsw i32 %594, 576
  %597 = select i1 %595, i32 %596, i32 %594
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %598
  %600 = load i32, i32* %599, align 4
  %601 = ashr i32 %600, 5
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %602
  %604 = load i32, i32* %603, align 4
  store i32 %604, i32* %599, align 4
  %605 = add nsw i32 %597, 1
  %606 = load i32, i32* %157, align 8
  %607 = icmp slt i32 %605, %606
  br i1 %607, label %593, label %608

608:                                              ; preds = %593, %155
  %609 = load i32, i32* %34, align 4
  %610 = ashr i32 %609, 5
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %611
  %613 = load i32, i32* %612, align 4
  store i32 %613, i32* %34, align 4
  %614 = and i32 %156, 3
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %627, label %616

616:                                              ; preds = %608
  %617 = sext i32 %156 to i64
  %618 = load i32, i32* %30, align 8
  %619 = load i32*, i32** %28, align 8
  %620 = add nsw i64 %617, 1
  %621 = getelementptr inbounds i32, i32* %619, i64 %617
  store i32 %618, i32* %621, align 4
  %622 = and i64 %620, 3
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %624, label %1616

624:                                              ; preds = %1630, %1623, %1616, %616
  %625 = phi i64 [ %620, %616 ], [ %1619, %1616 ], [ %1626, %1623 ], [ %1633, %1630 ]
  %626 = trunc i64 %625 to i32
  br label %627

627:                                              ; preds = %624, %608
  %628 = phi i32 [ %156, %608 ], [ %626, %624 ]
  store i32 %628, i32* %152, align 8
  %629 = icmp sgt i32 %147, 65536
  br i1 %629, label %630, label %889

630:                                              ; preds = %627
  %631 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 0, i32 64, i32 128, i32 192>, <4 x i32>* %631, align 4
  %632 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 256, i32 320, i32 384, i32 448>, <4 x i32>* %632, align 4
  %633 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 8
  %634 = bitcast i32* %633 to <4 x i32>*
  store <4 x i32> <i32 512, i32 576, i32 640, i32 704>, <4 x i32>* %634, align 4
  %635 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 12
  %636 = bitcast i32* %635 to <4 x i32>*
  store <4 x i32> <i32 768, i32 832, i32 896, i32 960>, <4 x i32>* %636, align 4
  %637 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 16
  %638 = bitcast i32* %637 to <4 x i32>*
  store <4 x i32> <i32 1024, i32 1088, i32 1152, i32 1216>, <4 x i32>* %638, align 4
  %639 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 20
  %640 = bitcast i32* %639 to <4 x i32>*
  store <4 x i32> <i32 1280, i32 1344, i32 1408, i32 1472>, <4 x i32>* %640, align 4
  %641 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 24
  %642 = bitcast i32* %641 to <4 x i32>*
  store <4 x i32> <i32 1536, i32 1600, i32 1664, i32 1728>, <4 x i32>* %642, align 4
  %643 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 28
  %644 = bitcast i32* %643 to <4 x i32>*
  store <4 x i32> <i32 1792, i32 1856, i32 1920, i32 1984>, <4 x i32>* %644, align 4
  %645 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 32
  store i32 2048, i32* %645, align 4
  %646 = load i32, i32* %145, align 8
  %647 = add nsw i32 %646, -65536
  %648 = ashr i32 %647, 11
  %649 = add nsw i32 %648, 2112
  %650 = load i32, i32* %157, align 8
  %651 = icmp sgt i32 %650, 2656
  br i1 %651, label %652, label %662

652:                                              ; preds = %630
  %653 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 1
  %654 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 1
  br label %655

655:                                              ; preds = %652, %847
  %656 = phi i32 [ %849, %847 ], [ %649, %652 ]
  %657 = phi i32 [ %848, %847 ], [ 2656, %652 ]
  %658 = icmp slt i32 %656, 64
  %659 = add nsw i32 %656, -63
  %660 = zext i32 %659 to i64
  %661 = sext i32 %657 to i64
  br label %664

662:                                              ; preds = %847, %697, %630
  %663 = phi i32 [ %649, %630 ], [ %656, %697 ], [ %849, %847 ]
  br label %852

664:                                              ; preds = %697, %655
  %665 = phi i64 [ %661, %655 ], [ %702, %697 ]
  br i1 %658, label %690, label %666

666:                                              ; preds = %664
  %667 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %665
  br label %668

668:                                              ; preds = %684, %666
  %669 = phi i64 [ %685, %684 ], [ 0, %666 ]
  %670 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %669
  br label %671

671:                                              ; preds = %1591, %668
  %672 = phi i32 [ 64, %668 ], [ %1594, %1591 ]
  %673 = phi i32* [ %667, %668 ], [ %1593, %1591 ]
  %674 = phi i32* [ %670, %668 ], [ %1592, %1591 ]
  %675 = load i32, i32* %674, align 4
  %676 = load i32, i32* %673, align 4
  %677 = icmp eq i32 %675, %676
  br i1 %677, label %678, label %684

678:                                              ; preds = %671
  %679 = getelementptr inbounds i32, i32* %674, i64 1
  %680 = getelementptr inbounds i32, i32* %673, i64 1
  %681 = load i32, i32* %679, align 4
  %682 = load i32, i32* %680, align 4
  %683 = icmp eq i32 %681, %682
  br i1 %683, label %1579, label %684

684:                                              ; preds = %1585, %1579, %678, %671
  %685 = add nuw nsw i64 %669, 1
  %686 = icmp eq i64 %685, %660
  br i1 %686, label %690, label %668

687:                                              ; preds = %1591
  %688 = trunc i64 %669 to i32
  %689 = icmp sgt i32 %688, -1
  br i1 %689, label %697, label %690

690:                                              ; preds = %687, %664, %684
  %691 = phi i64 [ %665, %684 ], [ %661, %664 ], [ %665, %687 ]
  %692 = trunc i64 %691 to i32
  %693 = shl i64 %691, 32
  %694 = ashr exact i64 %693, 32
  %695 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %694
  %696 = sext i32 %656 to i64
  br label %706

697:                                              ; preds = %687
  %698 = trunc i64 %665 to i32
  %699 = ashr i32 %698, 6
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %700
  store i32 %688, i32* %701, align 4
  %702 = add nsw i64 %665, 64
  %703 = load i32, i32* %157, align 8
  %704 = sext i32 %703 to i64
  %705 = icmp slt i64 %702, %704
  br i1 %705, label %664, label %662

706:                                              ; preds = %1614, %690
  %707 = phi i64 [ 63, %690 ], [ %1615, %1614 ]
  %708 = sub nsw i64 %696, %707
  %709 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %708
  %710 = trunc i64 %707 to i32
  br label %711

711:                                              ; preds = %718, %706
  %712 = phi i32 [ %721, %718 ], [ %710, %706 ]
  %713 = phi i32* [ %720, %718 ], [ %695, %706 ]
  %714 = phi i32* [ %719, %718 ], [ %709, %706 ]
  %715 = load i32, i32* %714, align 4
  %716 = load i32, i32* %713, align 4
  %717 = icmp eq i32 %715, %716
  br i1 %717, label %718, label %725

718:                                              ; preds = %711
  %719 = getelementptr inbounds i32, i32* %714, i64 1
  %720 = getelementptr inbounds i32, i32* %713, i64 1
  %721 = add nsw i32 %712, -1
  %722 = icmp sgt i32 %721, 0
  br i1 %722, label %711, label %723

723:                                              ; preds = %718
  %724 = icmp eq i32 %721, 0
  br i1 %724, label %730, label %725

725:                                              ; preds = %711, %723
  %726 = add nsw i64 %707, -1
  %727 = icmp eq i64 %726, 0
  br i1 %727, label %728, label %1596

728:                                              ; preds = %725
  %729 = icmp slt i32 %656, %692
  br i1 %729, label %733, label %837

730:                                              ; preds = %1612, %723
  %731 = phi i64 [ %707, %723 ], [ %726, %1612 ]
  %732 = trunc i64 %731 to i32
  br label %733

733:                                              ; preds = %730, %728
  %734 = phi i32 [ 0, %728 ], [ %732, %730 ]
  %735 = sub nsw i32 %656, %734
  %736 = ashr i32 %692, 6
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %737
  store i32 %735, i32* %738, align 4
  %739 = add i32 %734, %692
  %740 = icmp slt i32 %734, 64
  br i1 %740, label %741, label %847

741:                                              ; preds = %733
  %742 = sub nsw i32 64, %734
  %743 = sext i32 %739 to i64
  %744 = sub i32 63, %734
  %745 = zext i32 %744 to i64
  %746 = add nuw nsw i64 %745, 1
  %747 = icmp ult i64 %746, 8
  br i1 %747, label %822, label %748

748:                                              ; preds = %741
  %749 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %696
  %750 = sub i32 63, %734
  %751 = zext i32 %750 to i64
  %752 = add nsw i64 %696, %751
  %753 = getelementptr i32, i32* %653, i64 %752
  %754 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %743
  %755 = add nsw i64 %743, %751
  %756 = getelementptr i32, i32* %654, i64 %755
  %757 = icmp ult i32* %749, %756
  %758 = icmp ult i32* %754, %753
  %759 = and i1 %757, %758
  br i1 %759, label %822, label %760

760:                                              ; preds = %748
  %761 = and i64 %746, 8589934584
  %762 = add nsw i64 %761, %743
  %763 = add nsw i64 %761, %696
  %764 = trunc i64 %761 to i32
  %765 = sub i32 %742, %764
  %766 = add nsw i64 %761, -8
  %767 = lshr exact i64 %766, 3
  %768 = add nuw nsw i64 %767, 1
  %769 = and i64 %768, 1
  %770 = icmp eq i64 %766, 0
  br i1 %770, label %804, label %771

771:                                              ; preds = %760
  %772 = sub nuw nsw i64 %768, %769
  br label %773

773:                                              ; preds = %773, %771
  %774 = phi i64 [ 0, %771 ], [ %801, %773 ]
  %775 = phi i64 [ %772, %771 ], [ %802, %773 ]
  %776 = add i64 %774, %743
  %777 = add i64 %774, %696
  %778 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %776
  %779 = bitcast i32* %778 to <4 x i32>*
  %780 = load <4 x i32>, <4 x i32>* %779, align 4, !alias.scope !16
  %781 = getelementptr inbounds i32, i32* %778, i64 4
  %782 = bitcast i32* %781 to <4 x i32>*
  %783 = load <4 x i32>, <4 x i32>* %782, align 4, !alias.scope !16
  %784 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %777
  %785 = bitcast i32* %784 to <4 x i32>*
  store <4 x i32> %780, <4 x i32>* %785, align 4, !alias.scope !19, !noalias !16
  %786 = getelementptr inbounds i32, i32* %784, i64 4
  %787 = bitcast i32* %786 to <4 x i32>*
  store <4 x i32> %783, <4 x i32>* %787, align 4, !alias.scope !19, !noalias !16
  %788 = or i64 %774, 8
  %789 = add i64 %788, %743
  %790 = add i64 %788, %696
  %791 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %789
  %792 = bitcast i32* %791 to <4 x i32>*
  %793 = load <4 x i32>, <4 x i32>* %792, align 4, !alias.scope !16
  %794 = getelementptr inbounds i32, i32* %791, i64 4
  %795 = bitcast i32* %794 to <4 x i32>*
  %796 = load <4 x i32>, <4 x i32>* %795, align 4, !alias.scope !16
  %797 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %790
  %798 = bitcast i32* %797 to <4 x i32>*
  store <4 x i32> %793, <4 x i32>* %798, align 4, !alias.scope !19, !noalias !16
  %799 = getelementptr inbounds i32, i32* %797, i64 4
  %800 = bitcast i32* %799 to <4 x i32>*
  store <4 x i32> %796, <4 x i32>* %800, align 4, !alias.scope !19, !noalias !16
  %801 = add i64 %774, 16
  %802 = add i64 %775, -2
  %803 = icmp eq i64 %802, 0
  br i1 %803, label %804, label %773, !llvm.loop !21

804:                                              ; preds = %773, %760
  %805 = phi i64 [ 0, %760 ], [ %801, %773 ]
  %806 = icmp eq i64 %769, 0
  br i1 %806, label %820, label %807

807:                                              ; preds = %804
  %808 = add i64 %805, %743
  %809 = add i64 %805, %696
  %810 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %808
  %811 = bitcast i32* %810 to <4 x i32>*
  %812 = load <4 x i32>, <4 x i32>* %811, align 4, !alias.scope !16
  %813 = getelementptr inbounds i32, i32* %810, i64 4
  %814 = bitcast i32* %813 to <4 x i32>*
  %815 = load <4 x i32>, <4 x i32>* %814, align 4, !alias.scope !16
  %816 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %809
  %817 = bitcast i32* %816 to <4 x i32>*
  store <4 x i32> %812, <4 x i32>* %817, align 4, !alias.scope !19, !noalias !16
  %818 = getelementptr inbounds i32, i32* %816, i64 4
  %819 = bitcast i32* %818 to <4 x i32>*
  store <4 x i32> %815, <4 x i32>* %819, align 4, !alias.scope !19, !noalias !16
  br label %820

820:                                              ; preds = %804, %807
  %821 = icmp eq i64 %746, %761
  br i1 %821, label %842, label %822

822:                                              ; preds = %820, %748, %741
  %823 = phi i64 [ %743, %748 ], [ %743, %741 ], [ %762, %820 ]
  %824 = phi i64 [ %696, %748 ], [ %696, %741 ], [ %763, %820 ]
  %825 = phi i32 [ %742, %748 ], [ %742, %741 ], [ %765, %820 ]
  br label %826

826:                                              ; preds = %822, %826
  %827 = phi i64 [ %830, %826 ], [ %823, %822 ]
  %828 = phi i64 [ %833, %826 ], [ %824, %822 ]
  %829 = phi i32 [ %835, %826 ], [ %825, %822 ]
  %830 = add nsw i64 %827, 1
  %831 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %827
  %832 = load i32, i32* %831, align 4
  %833 = add nsw i64 %828, 1
  %834 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %828
  store i32 %832, i32* %834, align 4
  %835 = add nsw i32 %829, -1
  %836 = icmp sgt i32 %835, 0
  br i1 %836, label %826, label %842, !llvm.loop !22

837:                                              ; preds = %728
  %838 = ashr i32 %692, 6
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %839
  store i32 %692, i32* %840, align 4
  %841 = add nsw i32 %692, 64
  br label %847

842:                                              ; preds = %826, %820
  %843 = phi i64 [ %762, %820 ], [ %830, %826 ]
  %844 = phi i64 [ %763, %820 ], [ %833, %826 ]
  %845 = trunc i64 %843 to i32
  %846 = trunc i64 %844 to i32
  br label %847

847:                                              ; preds = %842, %837, %733
  %848 = phi i32 [ %841, %837 ], [ %739, %733 ], [ %845, %842 ]
  %849 = phi i32 [ %841, %837 ], [ %656, %733 ], [ %846, %842 ]
  %850 = load i32, i32* %157, align 8
  %851 = icmp slt i32 %848, %850
  br i1 %851, label %655, label %662

852:                                              ; preds = %852, %662
  %853 = phi i64 [ 0, %662 ], [ %867, %852 ]
  %854 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 0, i64 %853
  %855 = load i32, i32* %854, align 4
  %856 = ashr i32 %855, 6
  %857 = sext i32 %856 to i64
  %858 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %857
  %859 = load i32, i32* %858, align 4
  store i32 %859, i32* %854, align 4
  %860 = or i64 %853, 1
  %861 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 0, i64 %860
  %862 = load i32, i32* %861, align 4
  %863 = ashr i32 %862, 6
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %864
  %866 = load i32, i32* %865, align 4
  store i32 %866, i32* %861, align 4
  %867 = add nuw nsw i64 %853, 2
  %868 = icmp eq i64 %867, 544
  br i1 %868, label %869, label %852

869:                                              ; preds = %852
  %870 = load i32, i32* %32, align 8
  %871 = ashr i32 %870, 6
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 13, i64 %872
  %874 = load i32, i32* %873, align 4
  store i32 %874, i32* %32, align 8
  %875 = and i32 %663, 3
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %886, label %877

877:                                              ; preds = %869
  %878 = sext i32 %663 to i64
  %879 = add nsw i64 %878, 1
  %880 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %878
  store i32 262140, i32* %880, align 4
  %881 = and i64 %879, 3
  %882 = icmp eq i64 %881, 0
  br i1 %882, label %883, label %1566

883:                                              ; preds = %1576, %1571, %1566, %877
  %884 = phi i64 [ %879, %877 ], [ %1567, %1566 ], [ %1572, %1571 ], [ %1577, %1576 ]
  %885 = trunc i64 %884 to i32
  br label %886

886:                                              ; preds = %883, %869
  %887 = phi i32 [ %663, %869 ], [ %885, %883 ]
  store i32 %887, i32* %157, align 8
  %888 = load i32, i32* %152, align 8
  br label %889

889:                                              ; preds = %886, %627
  %890 = phi i32 [ %888, %886 ], [ %628, %627 ]
  %891 = load i32*, i32** %28, align 8
  %892 = add nsw i32 %890, 1
  store i32 %892, i32* %152, align 8
  %893 = sext i32 %890 to i64
  %894 = getelementptr inbounds i32, i32* %891, i64 %893
  store i32 %146, i32* %894, align 4
  %895 = load i32, i32* %152, align 8
  %896 = and i32 %895, 3
  %897 = icmp eq i32 %896, 0
  br i1 %897, label %910, label %898

898:                                              ; preds = %889
  %899 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 7
  br label %900

900:                                              ; preds = %900, %898
  %901 = phi i32 [ %895, %898 ], [ %907, %900 ]
  %902 = load i32, i32* %899, align 4
  %903 = load i32*, i32** %28, align 8
  %904 = add nsw i32 %901, 1
  store i32 %904, i32* %152, align 8
  %905 = sext i32 %901 to i64
  %906 = getelementptr inbounds i32, i32* %903, i64 %905
  store i32 %902, i32* %906, align 4
  %907 = load i32, i32* %152, align 8
  %908 = and i32 %907, 3
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %900

910:                                              ; preds = %900, %889
  store i8 1, i8* %23, align 4
  %911 = load i32, i32* %2, align 4
  %912 = icmp slt i32 %911, 1
  br i1 %912, label %913, label %1565

913:                                              ; preds = %910, %22
  %914 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 9
  %915 = load i32, i32* %914, align 4
  %916 = icmp slt i32 %915, 65537
  br i1 %916, label %917, label %920

917:                                              ; preds = %913
  %918 = icmp eq i32 %1, 0
  %919 = select i1 %918, i32 2112, i32 0
  br label %926

920:                                              ; preds = %913
  %921 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 5
  %922 = load i32, i32* %921, align 8
  %923 = icmp eq i32 %1, 0
  %924 = select i1 %923, i32 %922, i32 0
  %925 = icmp sgt i32 %922, 65535
  br i1 %925, label %941, label %926

926:                                              ; preds = %917, %920
  %927 = phi i32 [ %919, %917 ], [ %924, %920 ]
  %928 = phi i1 [ %918, %917 ], [ %923, %920 ]
  %929 = phi i32 [ 2112, %917 ], [ %922, %920 ]
  %930 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 10
  %931 = load i32, i32* %930, align 4
  %932 = add nsw i32 %931, %927
  %933 = icmp sgt i32 %932, 65535
  %934 = icmp sgt i32 %927, 63359
  %935 = or i1 %934, %933
  br i1 %935, label %941, label %936

936:                                              ; preds = %926
  %937 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 7
  %938 = load i32, i32* %937, align 8
  %939 = add nsw i32 %938, %927
  %940 = icmp sgt i32 %939, 262140
  br i1 %940, label %941, label %942

941:                                              ; preds = %936, %926, %920
  store i32 8, i32* %2, align 4
  br label %1565

942:                                              ; preds = %936
  %943 = shl i32 %929, 1
  %944 = add i32 %943, 16
  %945 = select i1 %928, i32 1, i32 2
  %946 = shl nsw i32 %938, %945
  %947 = add nsw i32 %944, %946
  %948 = sext i32 %947 to i64
  %949 = tail call noalias i8* @uprv_malloc_69(i64 %948) #4
  %950 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 11
  store i8* %949, i8** %950, align 8
  %951 = icmp eq i8* %949, null
  br i1 %951, label %952, label %953

952:                                              ; preds = %942
  store i32 7, i32* %2, align 4
  br label %1565

953:                                              ; preds = %942
  %954 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 12
  store i32 %947, i32* %954, align 8
  %955 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 13
  store i8 1, i8* %955, align 4
  %956 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 3
  store i32 %929, i32* %956, align 8
  %957 = load i32, i32* %937, align 8
  %958 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 4
  store i32 %957, i32* %958, align 4
  br i1 %916, label %963, label %959

959:                                              ; preds = %953
  %960 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 9
  %961 = load i32, i32* %960, align 8
  %962 = trunc i32 %961 to i16
  br label %963

963:                                              ; preds = %953, %959
  %964 = phi i16 [ %962, %959 ], [ -1, %953 ]
  %965 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 5
  store i16 %964, i16* %965, align 8
  %966 = load i32, i32* %930, align 4
  %967 = add nsw i32 %966, %927
  %968 = trunc i32 %967 to i16
  %969 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 6
  store i16 %968, i16* %969, align 2
  %970 = add i32 %927, -4
  %971 = add i32 %970, %957
  %972 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 10
  store i32 %971, i32* %972, align 8
  %973 = bitcast i8* %949 to i32*
  store i32 1416784178, i32* %973, align 4
  %974 = trunc i32 %1 to i16
  %975 = getelementptr inbounds i8, i8* %949, i64 4
  %976 = bitcast i8* %975 to i16*
  store i16 %974, i16* %976, align 4
  %977 = trunc i32 %929 to i16
  %978 = getelementptr inbounds i8, i8* %949, i64 6
  %979 = bitcast i8* %978 to i16*
  store i16 %977, i16* %979, align 2
  %980 = lshr i32 %957, 2
  %981 = trunc i32 %980 to i16
  %982 = getelementptr inbounds i8, i8* %949, i64 8
  %983 = bitcast i8* %982 to i16*
  store i16 %981, i16* %983, align 4
  %984 = getelementptr inbounds i8, i8* %949, i64 10
  %985 = bitcast i8* %984 to i16*
  store i16 %964, i16* %985, align 2
  %986 = getelementptr inbounds i8, i8* %949, i64 12
  %987 = bitcast i8* %986 to i16*
  store i16 %968, i16* %987, align 4
  %988 = lshr i32 %915, 11
  %989 = trunc i32 %988 to i16
  %990 = getelementptr inbounds i8, i8* %949, i64 14
  %991 = bitcast i8* %990 to i16*
  store i16 %989, i16* %991, align 2
  %992 = getelementptr inbounds i8, i8* %949, i64 16
  %993 = bitcast i8* %992 to i16*
  %994 = bitcast %struct.UTrie2* %0 to i8**
  store i8* %992, i8** %994, align 8
  %995 = getelementptr i8, i8* %949, i64 4176
  %996 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 0
  %997 = bitcast i32* %996 to i8*
  %998 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 2080
  %999 = bitcast i32* %998 to i8*
  %1000 = icmp ult i8* %992, %999
  %1001 = icmp ugt i8* %995, %997
  %1002 = and i1 %1000, %1001
  br i1 %1002, label %1003, label %1005

1003:                                             ; preds = %963
  %1004 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 0
  br label %1052

1005:                                             ; preds = %963
  %1006 = getelementptr i8, i8* %949, i64 4176
  %1007 = bitcast i8* %1006 to i16*
  %1008 = insertelement <4 x i32> undef, i32 %927, i32 0
  %1009 = shufflevector <4 x i32> %1008, <4 x i32> undef, <4 x i32> zeroinitializer
  %1010 = insertelement <4 x i32> undef, i32 %927, i32 0
  %1011 = shufflevector <4 x i32> %1010, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %1012

1012:                                             ; preds = %1012, %1005
  %1013 = phi i64 [ 0, %1005 ], [ %1047, %1012 ]
  %1014 = getelementptr i16, i16* %993, i64 %1013
  %1015 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1013
  %1016 = bitcast i32* %1015 to <4 x i32>*
  %1017 = load <4 x i32>, <4 x i32>* %1016, align 4, !alias.scope !23
  %1018 = getelementptr i32, i32* %1015, i64 4
  %1019 = bitcast i32* %1018 to <4 x i32>*
  %1020 = load <4 x i32>, <4 x i32>* %1019, align 4, !alias.scope !23
  %1021 = add <4 x i32> %1017, %1009
  %1022 = add <4 x i32> %1020, %1011
  %1023 = lshr <4 x i32> %1021, <i32 2, i32 2, i32 2, i32 2>
  %1024 = lshr <4 x i32> %1022, <i32 2, i32 2, i32 2, i32 2>
  %1025 = trunc <4 x i32> %1023 to <4 x i16>
  %1026 = trunc <4 x i32> %1024 to <4 x i16>
  %1027 = bitcast i16* %1014 to <4 x i16>*
  store <4 x i16> %1025, <4 x i16>* %1027, align 2, !alias.scope !26, !noalias !23
  %1028 = getelementptr i16, i16* %1014, i64 4
  %1029 = bitcast i16* %1028 to <4 x i16>*
  store <4 x i16> %1026, <4 x i16>* %1029, align 2, !alias.scope !26, !noalias !23
  %1030 = or i64 %1013, 8
  %1031 = getelementptr i16, i16* %993, i64 %1030
  %1032 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1030
  %1033 = bitcast i32* %1032 to <4 x i32>*
  %1034 = load <4 x i32>, <4 x i32>* %1033, align 4, !alias.scope !23
  %1035 = getelementptr i32, i32* %1032, i64 4
  %1036 = bitcast i32* %1035 to <4 x i32>*
  %1037 = load <4 x i32>, <4 x i32>* %1036, align 4, !alias.scope !23
  %1038 = add <4 x i32> %1034, %1009
  %1039 = add <4 x i32> %1037, %1011
  %1040 = lshr <4 x i32> %1038, <i32 2, i32 2, i32 2, i32 2>
  %1041 = lshr <4 x i32> %1039, <i32 2, i32 2, i32 2, i32 2>
  %1042 = trunc <4 x i32> %1040 to <4 x i16>
  %1043 = trunc <4 x i32> %1041 to <4 x i16>
  %1044 = bitcast i16* %1031 to <4 x i16>*
  store <4 x i16> %1042, <4 x i16>* %1044, align 2, !alias.scope !26, !noalias !23
  %1045 = getelementptr i16, i16* %1031, i64 4
  %1046 = bitcast i16* %1045 to <4 x i16>*
  store <4 x i16> %1043, <4 x i16>* %1046, align 2, !alias.scope !26, !noalias !23
  %1047 = add nuw nsw i64 %1013, 16
  %1048 = icmp eq i64 %1047, 2080
  br i1 %1048, label %1049, label %1012, !llvm.loop !28

1049:                                             ; preds = %1012
  %1050 = getelementptr i8, i8* %949, i64 4174
  %1051 = bitcast i8* %1050 to i16*
  br label %1090

1052:                                             ; preds = %1052, %1003
  %1053 = phi i32 [ 2080, %1003 ], [ %1086, %1052 ]
  %1054 = phi i16* [ %993, %1003 ], [ %1085, %1052 ]
  %1055 = phi i32* [ %1004, %1003 ], [ %1080, %1052 ]
  %1056 = getelementptr inbounds i32, i32* %1055, i64 1
  %1057 = load i32, i32* %1055, align 4
  %1058 = add i32 %1057, %927
  %1059 = lshr i32 %1058, 2
  %1060 = trunc i32 %1059 to i16
  %1061 = getelementptr inbounds i16, i16* %1054, i64 1
  store i16 %1060, i16* %1054, align 2
  %1062 = getelementptr inbounds i32, i32* %1055, i64 2
  %1063 = load i32, i32* %1056, align 4
  %1064 = add i32 %1063, %927
  %1065 = lshr i32 %1064, 2
  %1066 = trunc i32 %1065 to i16
  %1067 = getelementptr inbounds i16, i16* %1054, i64 2
  store i16 %1066, i16* %1061, align 2
  %1068 = getelementptr inbounds i32, i32* %1055, i64 3
  %1069 = load i32, i32* %1062, align 4
  %1070 = add i32 %1069, %927
  %1071 = lshr i32 %1070, 2
  %1072 = trunc i32 %1071 to i16
  %1073 = getelementptr inbounds i16, i16* %1054, i64 3
  store i16 %1072, i16* %1067, align 2
  %1074 = getelementptr inbounds i32, i32* %1055, i64 4
  %1075 = load i32, i32* %1068, align 4
  %1076 = add i32 %1075, %927
  %1077 = lshr i32 %1076, 2
  %1078 = trunc i32 %1077 to i16
  %1079 = getelementptr inbounds i16, i16* %1054, i64 4
  store i16 %1078, i16* %1073, align 2
  %1080 = getelementptr inbounds i32, i32* %1055, i64 5
  %1081 = load i32, i32* %1074, align 4
  %1082 = add i32 %1081, %927
  %1083 = lshr i32 %1082, 2
  %1084 = trunc i32 %1083 to i16
  %1085 = getelementptr inbounds i16, i16* %1054, i64 5
  store i16 %1084, i16* %1079, align 2
  %1086 = add nsw i32 %1053, -5
  %1087 = icmp eq i32 %1086, 0
  br i1 %1087, label %1088, label %1052, !llvm.loop !29

1088:                                             ; preds = %1052
  %1089 = getelementptr inbounds i16, i16* %1054, i64 4
  br label %1090

1090:                                             ; preds = %1088, %1049
  %1091 = phi i16* [ %1051, %1049 ], [ %1089, %1088 ]
  %1092 = phi i16* [ %1007, %1049 ], [ %1085, %1088 ]
  %1093 = trunc i32 %927 to i16
  %1094 = add i16 %1093, 128
  %1095 = getelementptr inbounds i16, i16* %1091, i64 2
  store i16 %1094, i16* %1092, align 2
  store i16 %1094, i16* %1095, align 2
  %1096 = getelementptr inbounds i16, i16* %1091, i64 3
  %1097 = getelementptr i16, i16* %1091, i64 33
  %1098 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 4
  %1099 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 63
  %1100 = bitcast i32* %1099 to i16*
  %1101 = icmp ult i16* %1096, %1100
  %1102 = bitcast i16* %1097 to i32*
  %1103 = icmp ult i32* %1098, %1102
  %1104 = and i1 %1101, %1103
  br i1 %1104, label %1164, label %1105

1105:                                             ; preds = %1090
  %1106 = insertelement <4 x i32> undef, i32 %927, i32 0
  %1107 = shufflevector <4 x i32> %1106, <4 x i32> undef, <4 x i32> zeroinitializer
  %1108 = getelementptr i16, i16* %1091, i64 31
  %1109 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 4
  %1110 = bitcast i32* %1109 to <8 x i32>*
  %1111 = load <8 x i32>, <8 x i32>* %1110, align 4
  %1112 = shufflevector <8 x i32> %1111, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %1113 = add nsw <4 x i32> %1112, %1107
  %1114 = trunc <4 x i32> %1113 to <4 x i16>
  %1115 = bitcast i16* %1096 to <4 x i16>*
  store <4 x i16> %1114, <4 x i16>* %1115, align 2, !alias.scope !30, !noalias !33
  %1116 = getelementptr i16, i16* %1091, i64 7
  %1117 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 12
  %1118 = bitcast i32* %1117 to <8 x i32>*
  %1119 = load <8 x i32>, <8 x i32>* %1118, align 4
  %1120 = shufflevector <8 x i32> %1119, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %1121 = add nsw <4 x i32> %1120, %1107
  %1122 = trunc <4 x i32> %1121 to <4 x i16>
  %1123 = bitcast i16* %1116 to <4 x i16>*
  store <4 x i16> %1122, <4 x i16>* %1123, align 2, !alias.scope !30, !noalias !33
  %1124 = getelementptr i16, i16* %1091, i64 11
  %1125 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 20
  %1126 = bitcast i32* %1125 to <8 x i32>*
  %1127 = load <8 x i32>, <8 x i32>* %1126, align 4
  %1128 = shufflevector <8 x i32> %1127, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %1129 = add nsw <4 x i32> %1128, %1107
  %1130 = trunc <4 x i32> %1129 to <4 x i16>
  %1131 = bitcast i16* %1124 to <4 x i16>*
  store <4 x i16> %1130, <4 x i16>* %1131, align 2, !alias.scope !30, !noalias !33
  %1132 = getelementptr i16, i16* %1091, i64 15
  %1133 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 28
  %1134 = bitcast i32* %1133 to <8 x i32>*
  %1135 = load <8 x i32>, <8 x i32>* %1134, align 4
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %1137 = add nsw <4 x i32> %1136, %1107
  %1138 = trunc <4 x i32> %1137 to <4 x i16>
  %1139 = bitcast i16* %1132 to <4 x i16>*
  store <4 x i16> %1138, <4 x i16>* %1139, align 2, !alias.scope !30, !noalias !33
  %1140 = getelementptr i16, i16* %1091, i64 19
  %1141 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 36
  %1142 = bitcast i32* %1141 to <8 x i32>*
  %1143 = load <8 x i32>, <8 x i32>* %1142, align 4
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %1145 = add nsw <4 x i32> %1144, %1107
  %1146 = trunc <4 x i32> %1145 to <4 x i16>
  %1147 = bitcast i16* %1140 to <4 x i16>*
  store <4 x i16> %1146, <4 x i16>* %1147, align 2, !alias.scope !30, !noalias !33
  %1148 = getelementptr i16, i16* %1091, i64 23
  %1149 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 44
  %1150 = bitcast i32* %1149 to <8 x i32>*
  %1151 = load <8 x i32>, <8 x i32>* %1150, align 4
  %1152 = shufflevector <8 x i32> %1151, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %1153 = add nsw <4 x i32> %1152, %1107
  %1154 = trunc <4 x i32> %1153 to <4 x i16>
  %1155 = bitcast i16* %1148 to <4 x i16>*
  store <4 x i16> %1154, <4 x i16>* %1155, align 2, !alias.scope !30, !noalias !33
  %1156 = getelementptr i16, i16* %1091, i64 27
  %1157 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 52
  %1158 = bitcast i32* %1157 to <8 x i32>*
  %1159 = load <8 x i32>, <8 x i32>* %1158, align 4
  %1160 = shufflevector <8 x i32> %1159, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %1161 = add nsw <4 x i32> %1160, %1107
  %1162 = trunc <4 x i32> %1161 to <4 x i16>
  %1163 = bitcast i16* %1156 to <4 x i16>*
  store <4 x i16> %1162, <4 x i16>* %1163, align 2, !alias.scope !30, !noalias !33
  br label %1164

1164:                                             ; preds = %1105, %1090
  %1165 = phi i64 [ 2, %1090 ], [ 30, %1105 ]
  %1166 = phi i16* [ %1096, %1090 ], [ %1108, %1105 ]
  %1167 = xor i64 %1165, 31
  br label %1168

1168:                                             ; preds = %1168, %1164
  %1169 = phi i64 [ %1178, %1168 ], [ %1165, %1164 ]
  %1170 = phi i16* [ %1177, %1168 ], [ %1166, %1164 ]
  %1171 = phi i64 [ %1179, %1168 ], [ 2, %1164 ]
  %1172 = shl nuw i64 %1169, 1
  %1173 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1172
  %1174 = load i32, i32* %1173, align 4
  %1175 = add nsw i32 %1174, %927
  %1176 = trunc i32 %1175 to i16
  %1177 = getelementptr inbounds i16, i16* %1170, i64 1
  store i16 %1176, i16* %1170, align 2
  %1178 = add nuw nsw i64 %1169, 1
  %1179 = add i64 %1171, -1
  %1180 = icmp eq i64 %1179, 0
  br i1 %1180, label %1181, label %1168, !llvm.loop !35

1181:                                             ; preds = %1168
  %1182 = icmp ult i64 %1167, 3
  br i1 %1182, label %1215, label %1183

1183:                                             ; preds = %1181, %1183
  %1184 = phi i64 [ %1213, %1183 ], [ %1178, %1181 ]
  %1185 = phi i16* [ %1212, %1183 ], [ %1177, %1181 ]
  %1186 = shl nuw i64 %1184, 1
  %1187 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1186
  %1188 = load i32, i32* %1187, align 4
  %1189 = add nsw i32 %1188, %927
  %1190 = trunc i32 %1189 to i16
  %1191 = getelementptr inbounds i16, i16* %1185, i64 1
  store i16 %1190, i16* %1185, align 2
  %1192 = shl i64 %1184, 1
  %1193 = add i64 %1192, 2
  %1194 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1193
  %1195 = load i32, i32* %1194, align 4
  %1196 = add nsw i32 %1195, %927
  %1197 = trunc i32 %1196 to i16
  %1198 = getelementptr inbounds i16, i16* %1185, i64 2
  store i16 %1197, i16* %1191, align 2
  %1199 = shl i64 %1184, 1
  %1200 = add i64 %1199, 4
  %1201 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1200
  %1202 = load i32, i32* %1201, align 4
  %1203 = add nsw i32 %1202, %927
  %1204 = trunc i32 %1203 to i16
  %1205 = getelementptr inbounds i16, i16* %1185, i64 3
  store i16 %1204, i16* %1198, align 2
  %1206 = shl i64 %1184, 1
  %1207 = add i64 %1206, 6
  %1208 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1207
  %1209 = load i32, i32* %1208, align 4
  %1210 = add nsw i32 %1209, %927
  %1211 = trunc i32 %1210 to i16
  %1212 = getelementptr inbounds i16, i16* %1185, i64 4
  store i16 %1211, i16* %1205, align 2
  %1213 = add nuw nsw i64 %1184, 4
  %1214 = icmp eq i64 %1213, 32
  br i1 %1214, label %1215, label %1183, !llvm.loop !36

1215:                                             ; preds = %1183, %1181
  %1216 = phi i16* [ %1177, %1181 ], [ %1212, %1183 ]
  %1217 = icmp sgt i32 %915, 65536
  br i1 %1217, label %1218, label %1447

1218:                                             ; preds = %1215
  %1219 = add nsw i32 %915, -65536
  %1220 = ashr i32 %1219, 11
  %1221 = add nuw nsw i32 %1220, 2112
  %1222 = icmp sgt i32 %1219, 2047
  br i1 %1222, label %1223, label %1322

1223:                                             ; preds = %1218
  %1224 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 0, i64 32
  %1225 = icmp slt i32 %1220, 1
  %1226 = select i1 %1225, i32 %1220, i32 1
  %1227 = sub nsw i32 %1220, %1226
  %1228 = zext i32 %1227 to i64
  %1229 = add nuw nsw i64 %1228, 1
  %1230 = icmp ult i64 %1229, 8
  br i1 %1230, label %1308, label %1231

1231:                                             ; preds = %1223
  %1232 = icmp slt i32 %1220, 1
  %1233 = select i1 %1232, i32 %1220, i32 1
  %1234 = sub nsw i32 %1220, %1233
  %1235 = zext i32 %1234 to i64
  %1236 = add nuw nsw i64 %1235, 1
  %1237 = getelementptr i16, i16* %1216, i64 %1236
  %1238 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 0, i64 32
  %1239 = add nuw nsw i64 %1235, 33
  %1240 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 0, i64 %1239
  %1241 = bitcast i32* %1240 to i16*
  %1242 = icmp ult i16* %1216, %1241
  %1243 = bitcast i16* %1237 to i32*
  %1244 = icmp ult i32* %1238, %1243
  %1245 = and i1 %1242, %1244
  br i1 %1245, label %1308, label %1246

1246:                                             ; preds = %1231
  %1247 = and i64 %1229, 8589934584
  %1248 = trunc i64 %1247 to i32
  %1249 = sub i32 %1220, %1248
  %1250 = getelementptr i16, i16* %1216, i64 %1247
  %1251 = getelementptr i32, i32* %1224, i64 %1247
  %1252 = add nsw i64 %1247, -8
  %1253 = lshr exact i64 %1252, 3
  %1254 = add nuw nsw i64 %1253, 1
  %1255 = and i64 %1254, 1
  %1256 = icmp eq i64 %1252, 0
  br i1 %1256, label %1290, label %1257

1257:                                             ; preds = %1246
  %1258 = sub nuw nsw i64 %1254, %1255
  br label %1259

1259:                                             ; preds = %1259, %1257
  %1260 = phi i64 [ 0, %1257 ], [ %1287, %1259 ]
  %1261 = phi i64 [ %1258, %1257 ], [ %1288, %1259 ]
  %1262 = getelementptr i16, i16* %1216, i64 %1260
  %1263 = getelementptr i32, i32* %1224, i64 %1260
  %1264 = bitcast i32* %1263 to <4 x i32>*
  %1265 = load <4 x i32>, <4 x i32>* %1264, align 4, !alias.scope !37
  %1266 = getelementptr i32, i32* %1263, i64 4
  %1267 = bitcast i32* %1266 to <4 x i32>*
  %1268 = load <4 x i32>, <4 x i32>* %1267, align 4, !alias.scope !37
  %1269 = trunc <4 x i32> %1265 to <4 x i16>
  %1270 = trunc <4 x i32> %1268 to <4 x i16>
  %1271 = bitcast i16* %1262 to <4 x i16>*
  store <4 x i16> %1269, <4 x i16>* %1271, align 2, !alias.scope !40, !noalias !37
  %1272 = getelementptr i16, i16* %1262, i64 4
  %1273 = bitcast i16* %1272 to <4 x i16>*
  store <4 x i16> %1270, <4 x i16>* %1273, align 2, !alias.scope !40, !noalias !37
  %1274 = or i64 %1260, 8
  %1275 = getelementptr i16, i16* %1216, i64 %1274
  %1276 = getelementptr i32, i32* %1224, i64 %1274
  %1277 = bitcast i32* %1276 to <4 x i32>*
  %1278 = load <4 x i32>, <4 x i32>* %1277, align 4, !alias.scope !37
  %1279 = getelementptr i32, i32* %1276, i64 4
  %1280 = bitcast i32* %1279 to <4 x i32>*
  %1281 = load <4 x i32>, <4 x i32>* %1280, align 4, !alias.scope !37
  %1282 = trunc <4 x i32> %1278 to <4 x i16>
  %1283 = trunc <4 x i32> %1281 to <4 x i16>
  %1284 = bitcast i16* %1275 to <4 x i16>*
  store <4 x i16> %1282, <4 x i16>* %1284, align 2, !alias.scope !40, !noalias !37
  %1285 = getelementptr i16, i16* %1275, i64 4
  %1286 = bitcast i16* %1285 to <4 x i16>*
  store <4 x i16> %1283, <4 x i16>* %1286, align 2, !alias.scope !40, !noalias !37
  %1287 = add i64 %1260, 16
  %1288 = add i64 %1261, -2
  %1289 = icmp eq i64 %1288, 0
  br i1 %1289, label %1290, label %1259, !llvm.loop !42

1290:                                             ; preds = %1259, %1246
  %1291 = phi i64 [ 0, %1246 ], [ %1287, %1259 ]
  %1292 = icmp eq i64 %1255, 0
  br i1 %1292, label %1306, label %1293

1293:                                             ; preds = %1290
  %1294 = getelementptr i16, i16* %1216, i64 %1291
  %1295 = getelementptr i32, i32* %1224, i64 %1291
  %1296 = bitcast i32* %1295 to <4 x i32>*
  %1297 = load <4 x i32>, <4 x i32>* %1296, align 4, !alias.scope !37
  %1298 = getelementptr i32, i32* %1295, i64 4
  %1299 = bitcast i32* %1298 to <4 x i32>*
  %1300 = load <4 x i32>, <4 x i32>* %1299, align 4, !alias.scope !37
  %1301 = trunc <4 x i32> %1297 to <4 x i16>
  %1302 = trunc <4 x i32> %1300 to <4 x i16>
  %1303 = bitcast i16* %1294 to <4 x i16>*
  store <4 x i16> %1301, <4 x i16>* %1303, align 2, !alias.scope !40, !noalias !37
  %1304 = getelementptr i16, i16* %1294, i64 4
  %1305 = bitcast i16* %1304 to <4 x i16>*
  store <4 x i16> %1302, <4 x i16>* %1305, align 2, !alias.scope !40, !noalias !37
  br label %1306

1306:                                             ; preds = %1290, %1293
  %1307 = icmp eq i64 %1229, %1247
  br i1 %1307, label %1322, label %1308

1308:                                             ; preds = %1306, %1231, %1223
  %1309 = phi i32 [ %1220, %1231 ], [ %1220, %1223 ], [ %1249, %1306 ]
  %1310 = phi i16* [ %1216, %1231 ], [ %1216, %1223 ], [ %1250, %1306 ]
  %1311 = phi i32* [ %1224, %1231 ], [ %1224, %1223 ], [ %1251, %1306 ]
  br label %1312

1312:                                             ; preds = %1308, %1312
  %1313 = phi i32 [ %1320, %1312 ], [ %1309, %1308 ]
  %1314 = phi i16* [ %1319, %1312 ], [ %1310, %1308 ]
  %1315 = phi i32* [ %1316, %1312 ], [ %1311, %1308 ]
  %1316 = getelementptr inbounds i32, i32* %1315, i64 1
  %1317 = load i32, i32* %1315, align 4
  %1318 = trunc i32 %1317 to i16
  %1319 = getelementptr inbounds i16, i16* %1314, i64 1
  store i16 %1318, i16* %1314, align 2
  %1320 = add nsw i32 %1313, -1
  %1321 = icmp sgt i32 %1320, 0
  br i1 %1321, label %1312, label %1322, !llvm.loop !43

1322:                                             ; preds = %1312, %1306, %1218
  %1323 = phi i16* [ %1216, %1218 ], [ %1250, %1306 ], [ %1319, %1312 ]
  %1324 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 5
  %1325 = load i32, i32* %1324, align 8
  %1326 = sub nsw i32 %1325, %1221
  %1327 = icmp sgt i32 %1326, 0
  br i1 %1327, label %1328, label %1447

1328:                                             ; preds = %1322
  %1329 = sext i32 %1221 to i64
  %1330 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1329
  %1331 = add i32 %1325, -2113
  %1332 = sub i32 %1331, %1220
  %1333 = zext i32 %1332 to i64
  %1334 = add nuw nsw i64 %1333, 1
  %1335 = icmp ult i64 %1334, 8
  br i1 %1335, label %1431, label %1336

1336:                                             ; preds = %1328
  %1337 = add i32 %1325, -2113
  %1338 = sub i32 %1337, %1220
  %1339 = zext i32 %1338 to i64
  %1340 = add nuw nsw i64 %1339, 1
  %1341 = getelementptr i16, i16* %1323, i64 %1340
  %1342 = add nsw i64 %1329, -2112
  %1343 = add nsw i64 %1329, 544
  %1344 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 0, i64 %1343
  %1345 = add nsw i64 %1342, %1339
  %1346 = add nsw i64 %1345, 2657
  %1347 = getelementptr %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 0, i64 %1346
  %1348 = bitcast i32* %1347 to i16*
  %1349 = icmp ult i16* %1323, %1348
  %1350 = bitcast i16* %1341 to i32*
  %1351 = icmp ult i32* %1344, %1350
  %1352 = and i1 %1349, %1351
  br i1 %1352, label %1431, label %1353

1353:                                             ; preds = %1336
  %1354 = and i64 %1334, 8589934584
  %1355 = trunc i64 %1354 to i32
  %1356 = sub i32 %1326, %1355
  %1357 = getelementptr i16, i16* %1323, i64 %1354
  %1358 = getelementptr i32, i32* %1330, i64 %1354
  %1359 = insertelement <4 x i32> undef, i32 %927, i32 0
  %1360 = shufflevector <4 x i32> %1359, <4 x i32> undef, <4 x i32> zeroinitializer
  %1361 = insertelement <4 x i32> undef, i32 %927, i32 0
  %1362 = shufflevector <4 x i32> %1361, <4 x i32> undef, <4 x i32> zeroinitializer
  %1363 = add nsw i64 %1354, -8
  %1364 = lshr exact i64 %1363, 3
  %1365 = add nuw nsw i64 %1364, 1
  %1366 = and i64 %1365, 1
  %1367 = icmp eq i64 %1363, 0
  br i1 %1367, label %1409, label %1368

1368:                                             ; preds = %1353
  %1369 = sub nuw nsw i64 %1365, %1366
  br label %1370

1370:                                             ; preds = %1370, %1368
  %1371 = phi i64 [ 0, %1368 ], [ %1406, %1370 ]
  %1372 = phi i64 [ %1369, %1368 ], [ %1407, %1370 ]
  %1373 = getelementptr i16, i16* %1323, i64 %1371
  %1374 = getelementptr i32, i32* %1330, i64 %1371
  %1375 = bitcast i32* %1374 to <4 x i32>*
  %1376 = load <4 x i32>, <4 x i32>* %1375, align 4, !alias.scope !44
  %1377 = getelementptr i32, i32* %1374, i64 4
  %1378 = bitcast i32* %1377 to <4 x i32>*
  %1379 = load <4 x i32>, <4 x i32>* %1378, align 4, !alias.scope !44
  %1380 = add <4 x i32> %1376, %1360
  %1381 = add <4 x i32> %1379, %1362
  %1382 = lshr <4 x i32> %1380, <i32 2, i32 2, i32 2, i32 2>
  %1383 = lshr <4 x i32> %1381, <i32 2, i32 2, i32 2, i32 2>
  %1384 = trunc <4 x i32> %1382 to <4 x i16>
  %1385 = trunc <4 x i32> %1383 to <4 x i16>
  %1386 = bitcast i16* %1373 to <4 x i16>*
  store <4 x i16> %1384, <4 x i16>* %1386, align 2, !alias.scope !47, !noalias !44
  %1387 = getelementptr i16, i16* %1373, i64 4
  %1388 = bitcast i16* %1387 to <4 x i16>*
  store <4 x i16> %1385, <4 x i16>* %1388, align 2, !alias.scope !47, !noalias !44
  %1389 = or i64 %1371, 8
  %1390 = getelementptr i16, i16* %1323, i64 %1389
  %1391 = getelementptr i32, i32* %1330, i64 %1389
  %1392 = bitcast i32* %1391 to <4 x i32>*
  %1393 = load <4 x i32>, <4 x i32>* %1392, align 4, !alias.scope !44
  %1394 = getelementptr i32, i32* %1391, i64 4
  %1395 = bitcast i32* %1394 to <4 x i32>*
  %1396 = load <4 x i32>, <4 x i32>* %1395, align 4, !alias.scope !44
  %1397 = add <4 x i32> %1393, %1360
  %1398 = add <4 x i32> %1396, %1362
  %1399 = lshr <4 x i32> %1397, <i32 2, i32 2, i32 2, i32 2>
  %1400 = lshr <4 x i32> %1398, <i32 2, i32 2, i32 2, i32 2>
  %1401 = trunc <4 x i32> %1399 to <4 x i16>
  %1402 = trunc <4 x i32> %1400 to <4 x i16>
  %1403 = bitcast i16* %1390 to <4 x i16>*
  store <4 x i16> %1401, <4 x i16>* %1403, align 2, !alias.scope !47, !noalias !44
  %1404 = getelementptr i16, i16* %1390, i64 4
  %1405 = bitcast i16* %1404 to <4 x i16>*
  store <4 x i16> %1402, <4 x i16>* %1405, align 2, !alias.scope !47, !noalias !44
  %1406 = add i64 %1371, 16
  %1407 = add i64 %1372, -2
  %1408 = icmp eq i64 %1407, 0
  br i1 %1408, label %1409, label %1370, !llvm.loop !49

1409:                                             ; preds = %1370, %1353
  %1410 = phi i64 [ 0, %1353 ], [ %1406, %1370 ]
  %1411 = icmp eq i64 %1366, 0
  br i1 %1411, label %1429, label %1412

1412:                                             ; preds = %1409
  %1413 = getelementptr i16, i16* %1323, i64 %1410
  %1414 = getelementptr i32, i32* %1330, i64 %1410
  %1415 = bitcast i32* %1414 to <4 x i32>*
  %1416 = load <4 x i32>, <4 x i32>* %1415, align 4, !alias.scope !44
  %1417 = getelementptr i32, i32* %1414, i64 4
  %1418 = bitcast i32* %1417 to <4 x i32>*
  %1419 = load <4 x i32>, <4 x i32>* %1418, align 4, !alias.scope !44
  %1420 = add <4 x i32> %1416, %1360
  %1421 = add <4 x i32> %1419, %1362
  %1422 = lshr <4 x i32> %1420, <i32 2, i32 2, i32 2, i32 2>
  %1423 = lshr <4 x i32> %1421, <i32 2, i32 2, i32 2, i32 2>
  %1424 = trunc <4 x i32> %1422 to <4 x i16>
  %1425 = trunc <4 x i32> %1423 to <4 x i16>
  %1426 = bitcast i16* %1413 to <4 x i16>*
  store <4 x i16> %1424, <4 x i16>* %1426, align 2, !alias.scope !47, !noalias !44
  %1427 = getelementptr i16, i16* %1413, i64 4
  %1428 = bitcast i16* %1427 to <4 x i16>*
  store <4 x i16> %1425, <4 x i16>* %1428, align 2, !alias.scope !47, !noalias !44
  br label %1429

1429:                                             ; preds = %1409, %1412
  %1430 = icmp eq i64 %1334, %1354
  br i1 %1430, label %1447, label %1431

1431:                                             ; preds = %1429, %1336, %1328
  %1432 = phi i32 [ %1326, %1336 ], [ %1326, %1328 ], [ %1356, %1429 ]
  %1433 = phi i16* [ %1323, %1336 ], [ %1323, %1328 ], [ %1357, %1429 ]
  %1434 = phi i32* [ %1330, %1336 ], [ %1330, %1328 ], [ %1358, %1429 ]
  br label %1435

1435:                                             ; preds = %1431, %1435
  %1436 = phi i32 [ %1445, %1435 ], [ %1432, %1431 ]
  %1437 = phi i16* [ %1444, %1435 ], [ %1433, %1431 ]
  %1438 = phi i32* [ %1439, %1435 ], [ %1434, %1431 ]
  %1439 = getelementptr inbounds i32, i32* %1438, i64 1
  %1440 = load i32, i32* %1438, align 4
  %1441 = add i32 %1440, %927
  %1442 = lshr i32 %1441, 2
  %1443 = trunc i32 %1442 to i16
  %1444 = getelementptr inbounds i16, i16* %1437, i64 1
  store i16 %1443, i16* %1437, align 2
  %1445 = add nsw i32 %1436, -1
  %1446 = icmp sgt i32 %1445, 0
  br i1 %1446, label %1435, label %1447, !llvm.loop !50

1447:                                             ; preds = %1435, %1429, %1322, %1215
  %1448 = phi i16* [ %1216, %1215 ], [ %1323, %1322 ], [ %1357, %1429 ], [ %1444, %1435 ]
  switch i32 %1, label %1559 [
    i32 0, label %1449
    i32 1, label %1548
  ]

1449:                                             ; preds = %1447
  %1450 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 1
  store i16* %1448, i16** %1450, align 8
  %1451 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 2
  store i32* null, i32** %1451, align 8
  %1452 = load i32, i32* %937, align 8
  %1453 = icmp sgt i32 %1452, 0
  br i1 %1453, label %1454, label %1560

1454:                                             ; preds = %1449
  %1455 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 2
  %1456 = load i32*, i32** %1455, align 8
  %1457 = add nsw i32 %1452, -1
  %1458 = zext i32 %1457 to i64
  %1459 = add nuw nsw i64 %1458, 1
  %1460 = icmp ult i64 %1459, 8
  br i1 %1460, label %1534, label %1461

1461:                                             ; preds = %1454
  %1462 = add nsw i32 %1452, -1
  %1463 = zext i32 %1462 to i64
  %1464 = add nuw nsw i64 %1463, 1
  %1465 = getelementptr i16, i16* %1448, i64 %1464
  %1466 = getelementptr i32, i32* %1456, i64 %1464
  %1467 = bitcast i32* %1466 to i16*
  %1468 = icmp ult i16* %1448, %1467
  %1469 = bitcast i16* %1465 to i32*
  %1470 = icmp ult i32* %1456, %1469
  %1471 = and i1 %1468, %1470
  br i1 %1471, label %1534, label %1472

1472:                                             ; preds = %1461
  %1473 = and i64 %1459, 8589934584
  %1474 = trunc i64 %1473 to i32
  %1475 = sub i32 %1452, %1474
  %1476 = getelementptr i16, i16* %1448, i64 %1473
  %1477 = getelementptr i32, i32* %1456, i64 %1473
  %1478 = add nsw i64 %1473, -8
  %1479 = lshr exact i64 %1478, 3
  %1480 = add nuw nsw i64 %1479, 1
  %1481 = and i64 %1480, 1
  %1482 = icmp eq i64 %1478, 0
  br i1 %1482, label %1516, label %1483

1483:                                             ; preds = %1472
  %1484 = sub nuw nsw i64 %1480, %1481
  br label %1485

1485:                                             ; preds = %1485, %1483
  %1486 = phi i64 [ 0, %1483 ], [ %1513, %1485 ]
  %1487 = phi i64 [ %1484, %1483 ], [ %1514, %1485 ]
  %1488 = getelementptr i16, i16* %1448, i64 %1486
  %1489 = getelementptr i32, i32* %1456, i64 %1486
  %1490 = bitcast i32* %1489 to <4 x i32>*
  %1491 = load <4 x i32>, <4 x i32>* %1490, align 4, !alias.scope !51
  %1492 = getelementptr i32, i32* %1489, i64 4
  %1493 = bitcast i32* %1492 to <4 x i32>*
  %1494 = load <4 x i32>, <4 x i32>* %1493, align 4, !alias.scope !51
  %1495 = trunc <4 x i32> %1491 to <4 x i16>
  %1496 = trunc <4 x i32> %1494 to <4 x i16>
  %1497 = bitcast i16* %1488 to <4 x i16>*
  store <4 x i16> %1495, <4 x i16>* %1497, align 2, !alias.scope !54, !noalias !51
  %1498 = getelementptr i16, i16* %1488, i64 4
  %1499 = bitcast i16* %1498 to <4 x i16>*
  store <4 x i16> %1496, <4 x i16>* %1499, align 2, !alias.scope !54, !noalias !51
  %1500 = or i64 %1486, 8
  %1501 = getelementptr i16, i16* %1448, i64 %1500
  %1502 = getelementptr i32, i32* %1456, i64 %1500
  %1503 = bitcast i32* %1502 to <4 x i32>*
  %1504 = load <4 x i32>, <4 x i32>* %1503, align 4, !alias.scope !51
  %1505 = getelementptr i32, i32* %1502, i64 4
  %1506 = bitcast i32* %1505 to <4 x i32>*
  %1507 = load <4 x i32>, <4 x i32>* %1506, align 4, !alias.scope !51
  %1508 = trunc <4 x i32> %1504 to <4 x i16>
  %1509 = trunc <4 x i32> %1507 to <4 x i16>
  %1510 = bitcast i16* %1501 to <4 x i16>*
  store <4 x i16> %1508, <4 x i16>* %1510, align 2, !alias.scope !54, !noalias !51
  %1511 = getelementptr i16, i16* %1501, i64 4
  %1512 = bitcast i16* %1511 to <4 x i16>*
  store <4 x i16> %1509, <4 x i16>* %1512, align 2, !alias.scope !54, !noalias !51
  %1513 = add i64 %1486, 16
  %1514 = add i64 %1487, -2
  %1515 = icmp eq i64 %1514, 0
  br i1 %1515, label %1516, label %1485, !llvm.loop !56

1516:                                             ; preds = %1485, %1472
  %1517 = phi i64 [ 0, %1472 ], [ %1513, %1485 ]
  %1518 = icmp eq i64 %1481, 0
  br i1 %1518, label %1532, label %1519

1519:                                             ; preds = %1516
  %1520 = getelementptr i16, i16* %1448, i64 %1517
  %1521 = getelementptr i32, i32* %1456, i64 %1517
  %1522 = bitcast i32* %1521 to <4 x i32>*
  %1523 = load <4 x i32>, <4 x i32>* %1522, align 4, !alias.scope !51
  %1524 = getelementptr i32, i32* %1521, i64 4
  %1525 = bitcast i32* %1524 to <4 x i32>*
  %1526 = load <4 x i32>, <4 x i32>* %1525, align 4, !alias.scope !51
  %1527 = trunc <4 x i32> %1523 to <4 x i16>
  %1528 = trunc <4 x i32> %1526 to <4 x i16>
  %1529 = bitcast i16* %1520 to <4 x i16>*
  store <4 x i16> %1527, <4 x i16>* %1529, align 2, !alias.scope !54, !noalias !51
  %1530 = getelementptr i16, i16* %1520, i64 4
  %1531 = bitcast i16* %1530 to <4 x i16>*
  store <4 x i16> %1528, <4 x i16>* %1531, align 2, !alias.scope !54, !noalias !51
  br label %1532

1532:                                             ; preds = %1516, %1519
  %1533 = icmp eq i64 %1459, %1473
  br i1 %1533, label %1560, label %1534

1534:                                             ; preds = %1532, %1461, %1454
  %1535 = phi i32 [ %1452, %1461 ], [ %1452, %1454 ], [ %1475, %1532 ]
  %1536 = phi i16* [ %1448, %1461 ], [ %1448, %1454 ], [ %1476, %1532 ]
  %1537 = phi i32* [ %1456, %1461 ], [ %1456, %1454 ], [ %1477, %1532 ]
  br label %1538

1538:                                             ; preds = %1534, %1538
  %1539 = phi i32 [ %1546, %1538 ], [ %1535, %1534 ]
  %1540 = phi i16* [ %1545, %1538 ], [ %1536, %1534 ]
  %1541 = phi i32* [ %1542, %1538 ], [ %1537, %1534 ]
  %1542 = getelementptr inbounds i32, i32* %1541, i64 1
  %1543 = load i32, i32* %1541, align 4
  %1544 = trunc i32 %1543 to i16
  %1545 = getelementptr inbounds i16, i16* %1540, i64 1
  store i16 %1544, i16* %1540, align 2
  %1546 = add nsw i32 %1539, -1
  %1547 = icmp sgt i32 %1546, 0
  br i1 %1547, label %1538, label %1560, !llvm.loop !57

1548:                                             ; preds = %1447
  %1549 = bitcast i16* %1448 to i8*
  %1550 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 1
  store i16* null, i16** %1550, align 8
  %1551 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 2
  %1552 = bitcast i32** %1551 to i16**
  store i16* %1448, i16** %1552, align 8
  %1553 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 2
  %1554 = bitcast i32** %1553 to i8**
  %1555 = load i8*, i8** %1554, align 8
  %1556 = load i32, i32* %937, align 8
  %1557 = sext i32 %1556 to i64
  %1558 = shl nsw i64 %1557, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1549, i8* align 4 %1555, i64 %1558, i1 false)
  br label %1560

1559:                                             ; preds = %1447
  store i32 1, i32* %2, align 4
  br label %1565

1560:                                             ; preds = %1538, %1532, %1449, %1548
  %1561 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 2
  %1562 = bitcast i32** %1561 to i8**
  %1563 = load i8*, i8** %1562, align 8
  tail call void @uprv_free_69(i8* %1563) #5
  %1564 = bitcast %struct.UNewTrie2* %13 to i8*
  tail call void @uprv_free_69(i8* nonnull %1564) #5
  store %struct.UNewTrie2* null, %struct.UNewTrie2** %12, align 8
  br label %1565

1565:                                             ; preds = %136, %910, %21, %15, %3, %1560, %1559, %952, %941, %10
  ret void

1566:                                             ; preds = %877
  %1567 = add nsw i64 %878, 2
  %1568 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %879
  store i32 262140, i32* %1568, align 4
  %1569 = and i64 %1567, 3
  %1570 = icmp eq i64 %1569, 0
  br i1 %1570, label %883, label %1571

1571:                                             ; preds = %1566
  %1572 = add nsw i64 %878, 3
  %1573 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1567
  store i32 262140, i32* %1573, align 4
  %1574 = and i64 %1572, 3
  %1575 = icmp eq i64 %1574, 0
  br i1 %1575, label %883, label %1576

1576:                                             ; preds = %1571
  %1577 = add nsw i64 %878, 4
  %1578 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1572
  store i32 262140, i32* %1578, align 4
  br label %883

1579:                                             ; preds = %678
  %1580 = getelementptr inbounds i32, i32* %674, i64 2
  %1581 = getelementptr inbounds i32, i32* %673, i64 2
  %1582 = load i32, i32* %1580, align 4
  %1583 = load i32, i32* %1581, align 4
  %1584 = icmp eq i32 %1582, %1583
  br i1 %1584, label %1585, label %684

1585:                                             ; preds = %1579
  %1586 = getelementptr inbounds i32, i32* %674, i64 3
  %1587 = getelementptr inbounds i32, i32* %673, i64 3
  %1588 = load i32, i32* %1586, align 4
  %1589 = load i32, i32* %1587, align 4
  %1590 = icmp eq i32 %1588, %1589
  br i1 %1590, label %1591, label %684

1591:                                             ; preds = %1585
  %1592 = getelementptr inbounds i32, i32* %674, i64 4
  %1593 = getelementptr inbounds i32, i32* %673, i64 4
  %1594 = add nsw i32 %672, -4
  %1595 = icmp eq i32 %1594, 0
  br i1 %1595, label %687, label %671

1596:                                             ; preds = %725
  %1597 = sub nsw i64 %696, %726
  %1598 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %13, i64 0, i32 1, i64 %1597
  %1599 = trunc i64 %726 to i32
  br label %1600

1600:                                             ; preds = %1607, %1596
  %1601 = phi i32 [ %1610, %1607 ], [ %1599, %1596 ]
  %1602 = phi i32* [ %1609, %1607 ], [ %695, %1596 ]
  %1603 = phi i32* [ %1608, %1607 ], [ %1598, %1596 ]
  %1604 = load i32, i32* %1603, align 4
  %1605 = load i32, i32* %1602, align 4
  %1606 = icmp eq i32 %1604, %1605
  br i1 %1606, label %1607, label %1614

1607:                                             ; preds = %1600
  %1608 = getelementptr inbounds i32, i32* %1603, i64 1
  %1609 = getelementptr inbounds i32, i32* %1602, i64 1
  %1610 = add nsw i32 %1601, -1
  %1611 = icmp sgt i32 %1610, 0
  br i1 %1611, label %1600, label %1612

1612:                                             ; preds = %1607
  %1613 = icmp eq i32 %1610, 0
  br i1 %1613, label %730, label %1614

1614:                                             ; preds = %1600, %1612
  %1615 = add nsw i64 %707, -2
  br label %706

1616:                                             ; preds = %616
  %1617 = load i32, i32* %30, align 8
  %1618 = load i32*, i32** %28, align 8
  %1619 = add nsw i64 %617, 2
  %1620 = getelementptr inbounds i32, i32* %1618, i64 %620
  store i32 %1617, i32* %1620, align 4
  %1621 = and i64 %1619, 3
  %1622 = icmp eq i64 %1621, 0
  br i1 %1622, label %624, label %1623

1623:                                             ; preds = %1616
  %1624 = load i32, i32* %30, align 8
  %1625 = load i32*, i32** %28, align 8
  %1626 = add nsw i64 %617, 3
  %1627 = getelementptr inbounds i32, i32* %1625, i64 %1619
  store i32 %1624, i32* %1627, align 4
  %1628 = and i64 %1626, 3
  %1629 = icmp eq i64 %1628, 0
  br i1 %1629, label %624, label %1630

1630:                                             ; preds = %1623
  %1631 = load i32, i32* %30, align 8
  %1632 = load i32*, i32** %28, align 8
  %1633 = add nsw i64 %617, 4
  %1634 = getelementptr inbounds i32, i32* %1632, i64 %1626
  store i32 %1631, i32* %1634, align 4
  br label %624

1635:                                             ; preds = %90
  %1636 = add nsw i64 %83, -3
  %1637 = add nsw i64 %1636, %78
  %1638 = getelementptr inbounds i32, i32* %29, i64 %1637
  %1639 = load i32, i32* %1638, align 4
  %1640 = icmp eq i32 %1639, %27
  br i1 %1640, label %1641, label %115

1641:                                             ; preds = %1635
  %1642 = add nsw i64 %83, -4
  %1643 = add nsw i64 %1642, %78
  %1644 = getelementptr inbounds i32, i32* %29, i64 %1643
  %1645 = load i32, i32* %1644, align 4
  %1646 = icmp eq i32 %1645, %27
  br i1 %1646, label %1647, label %113

1647:                                             ; preds = %1641
  %1648 = add nsw i32 %84, -4
  %1649 = icmp eq i64 %1642, 0
  br i1 %1649, label %96, label %82
}

; Function Attrs: nounwind ssp uwtable
define hidden void @utrie2_setRange32_69(%struct.UTrie2* nocapture readonly, i32, i32, i32, i8 signext, i32* nocapture) local_unnamed_addr #0 {
  %7 = load i32, i32* %5, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %793

9:                                                ; preds = %6
  %10 = icmp ugt i32 %1, 1114111
  %11 = icmp ugt i32 %2, 1114111
  %12 = or i1 %10, %11
  %13 = icmp sgt i32 %1, %2
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  store i32 1, i32* %5, align 4
  br label %793

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %0, i64 0, i32 16
  %18 = load %struct.UNewTrie2*, %struct.UNewTrie2** %17, align 8
  %19 = icmp eq %struct.UNewTrie2* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 12
  %22 = load i8, i8* %21, align 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20, %16
  store i32 30, i32* %5, align 4
  br label %793

25:                                               ; preds = %20
  %26 = icmp ne i8 %4, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, %3
  br i1 %30, label %793, label %31

31:                                               ; preds = %27, %25
  %32 = add nuw nsw i32 %2, 1
  %33 = and i32 %1, 31
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %387, label %35

35:                                               ; preds = %31
  %36 = tail call fastcc i32 @_ZL12getDataBlockP9UNewTrie2ia(%struct.UNewTrie2* nonnull %18, i32 %1, i8 signext 1)
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  store i32 7, i32* %5, align 4
  br label %793

39:                                               ; preds = %35
  %40 = add nuw nsw i32 %1, 31
  %41 = and i32 %40, -32
  %42 = icmp sgt i32 %41, %32
  %43 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 2
  %44 = load i32*, i32** %43, align 8
  %45 = ptrtoint i32* %44 to i64
  %46 = sext i32 %36 to i64
  %47 = getelementptr inbounds i32, i32* %44, i64 %46
  br i1 %42, label %194, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %33 to i64
  %52 = icmp eq i8 %4, 0
  %53 = sub nuw nsw i64 32, %51
  %54 = icmp ugt i32 %33, 24
  br i1 %52, label %117, label %55

55:                                               ; preds = %48
  br i1 %54, label %56, label %58

56:                                               ; preds = %115, %55
  %57 = phi i64 [ %51, %55 ], [ %60, %115 ]
  br label %180

58:                                               ; preds = %55
  %59 = and i64 %53, 56
  %60 = add nuw nsw i64 %59, %51
  %61 = insertelement <4 x i32> undef, i32 %3, i32 0
  %62 = shufflevector <4 x i32> %61, <4 x i32> undef, <4 x i32> zeroinitializer
  %63 = insertelement <4 x i32> undef, i32 %3, i32 0
  %64 = shufflevector <4 x i32> %63, <4 x i32> undef, <4 x i32> zeroinitializer
  %65 = add nsw i64 %59, -8
  %66 = lshr exact i64 %65, 3
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 24
  br i1 %69, label %101, label %70

70:                                               ; preds = %58
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %98, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %99, %72 ]
  %75 = or i64 %73, %51
  %76 = getelementptr inbounds i32, i32* %47, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %77, align 4
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %79, align 4
  %80 = or i64 %73, 8
  %81 = add i64 %80, %51
  %82 = getelementptr inbounds i32, i32* %47, i64 %81
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %83, align 4
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %85, align 4
  %86 = or i64 %73, 16
  %87 = add i64 %86, %51
  %88 = getelementptr inbounds i32, i32* %47, i64 %87
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %89, align 4
  %90 = getelementptr inbounds i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %91, align 4
  %92 = or i64 %73, 24
  %93 = add i64 %92, %51
  %94 = getelementptr inbounds i32, i32* %47, i64 %93
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %95, align 4
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %97, align 4
  %98 = add i64 %73, 32
  %99 = add i64 %74, -4
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %72, !llvm.loop !58

101:                                              ; preds = %72, %58
  %102 = phi i64 [ 0, %58 ], [ %98, %72 ]
  %103 = icmp eq i64 %68, 0
  br i1 %103, label %115, label %104

104:                                              ; preds = %101, %104
  %105 = phi i64 [ %112, %104 ], [ %102, %101 ]
  %106 = phi i64 [ %113, %104 ], [ %68, %101 ]
  %107 = add i64 %105, %51
  %108 = getelementptr inbounds i32, i32* %47, i64 %107
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %62, <4 x i32>* %109, align 4
  %110 = getelementptr inbounds i32, i32* %108, i64 4
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> %64, <4 x i32>* %111, align 4
  %112 = add i64 %105, 8
  %113 = add i64 %106, -1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %104, !llvm.loop !59

115:                                              ; preds = %104, %101
  %116 = icmp eq i64 %53, %59
  br i1 %116, label %387, label %56

117:                                              ; preds = %48
  br i1 %54, label %118, label %120

118:                                              ; preds = %178, %117
  %119 = phi i64 [ %51, %117 ], [ %122, %178 ]
  br label %185

120:                                              ; preds = %117
  %121 = and i64 %53, 56
  %122 = add nuw nsw i64 %121, %51
  %123 = insertelement <4 x i32> undef, i32 %50, i32 0
  %124 = shufflevector <4 x i32> %123, <4 x i32> undef, <4 x i32> zeroinitializer
  %125 = insertelement <4 x i32> undef, i32 %50, i32 0
  %126 = shufflevector <4 x i32> %125, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %127

127:                                              ; preds = %175, %120
  %128 = phi i64 [ 0, %120 ], [ %176, %175 ]
  %129 = add i64 %128, %51
  %130 = getelementptr inbounds i32, i32* %47, i64 %129
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4
  %133 = getelementptr inbounds i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4
  %136 = icmp eq <4 x i32> %132, %124
  %137 = icmp eq <4 x i32> %135, %126
  %138 = extractelement <4 x i1> %136, i32 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %127
  store i32 %3, i32* %130, align 4
  br label %140

140:                                              ; preds = %139, %127
  %141 = extractelement <4 x i1> %136, i32 1
  br i1 %141, label %142, label %145

142:                                              ; preds = %140
  %143 = add i64 %129, 1
  %144 = getelementptr inbounds i32, i32* %47, i64 %143
  store i32 %3, i32* %144, align 4
  br label %145

145:                                              ; preds = %142, %140
  %146 = extractelement <4 x i1> %136, i32 2
  br i1 %146, label %147, label %150

147:                                              ; preds = %145
  %148 = add i64 %129, 2
  %149 = getelementptr inbounds i32, i32* %47, i64 %148
  store i32 %3, i32* %149, align 4
  br label %150

150:                                              ; preds = %147, %145
  %151 = extractelement <4 x i1> %136, i32 3
  br i1 %151, label %152, label %155

152:                                              ; preds = %150
  %153 = add i64 %129, 3
  %154 = getelementptr inbounds i32, i32* %47, i64 %153
  store i32 %3, i32* %154, align 4
  br label %155

155:                                              ; preds = %152, %150
  %156 = extractelement <4 x i1> %137, i32 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %155
  %158 = add i64 %129, 4
  %159 = getelementptr inbounds i32, i32* %47, i64 %158
  store i32 %3, i32* %159, align 4
  br label %160

160:                                              ; preds = %157, %155
  %161 = extractelement <4 x i1> %137, i32 1
  br i1 %161, label %162, label %165

162:                                              ; preds = %160
  %163 = add i64 %129, 5
  %164 = getelementptr inbounds i32, i32* %47, i64 %163
  store i32 %3, i32* %164, align 4
  br label %165

165:                                              ; preds = %162, %160
  %166 = extractelement <4 x i1> %137, i32 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %165
  %168 = add i64 %129, 6
  %169 = getelementptr inbounds i32, i32* %47, i64 %168
  store i32 %3, i32* %169, align 4
  br label %170

170:                                              ; preds = %167, %165
  %171 = extractelement <4 x i1> %137, i32 3
  br i1 %171, label %172, label %175

172:                                              ; preds = %170
  %173 = add i64 %129, 7
  %174 = getelementptr inbounds i32, i32* %47, i64 %173
  store i32 %3, i32* %174, align 4
  br label %175

175:                                              ; preds = %172, %170
  %176 = add i64 %128, 8
  %177 = icmp eq i64 %176, %121
  br i1 %177, label %178, label %127, !llvm.loop !60

178:                                              ; preds = %175
  %179 = icmp eq i64 %53, %121
  br i1 %179, label %387, label %118

180:                                              ; preds = %56, %180
  %181 = phi i64 [ %183, %180 ], [ %57, %56 ]
  %182 = getelementptr inbounds i32, i32* %47, i64 %181
  %183 = add nuw nsw i64 %181, 1
  store i32 %3, i32* %182, align 4
  %184 = icmp eq i64 %183, 32
  br i1 %184, label %387, label %180, !llvm.loop !61

185:                                              ; preds = %118, %191
  %186 = phi i64 [ %192, %191 ], [ %119, %118 ]
  %187 = getelementptr inbounds i32, i32* %47, i64 %186
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %188, %50
  br i1 %189, label %190, label %191

190:                                              ; preds = %185
  store i32 %3, i32* %187, align 4
  br label %191

191:                                              ; preds = %190, %185
  %192 = add nuw nsw i64 %186, 1
  %193 = icmp eq i64 %192, 32
  br i1 %193, label %387, label %185, !llvm.loop !62

194:                                              ; preds = %39
  %195 = and i32 %32, 31
  %196 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 3
  %197 = load i32, i32* %196, align 8
  %198 = zext i32 %195 to i64
  %199 = getelementptr inbounds i32, i32* %47, i64 %198
  %200 = zext i32 %33 to i64
  %201 = getelementptr inbounds i32, i32* %47, i64 %200
  %202 = icmp eq i8 %4, 0
  %203 = icmp ult i32 %33, %195
  br i1 %202, label %297, label %204

204:                                              ; preds = %194
  br i1 %203, label %205, label %793

205:                                              ; preds = %204
  %206 = add nsw i64 %46, %200
  %207 = add nsw i64 %206, 1
  %208 = getelementptr i32, i32* %44, i64 %207
  %209 = icmp ugt i32* %208, %199
  %210 = select i1 %209, i32* %208, i32* %199
  %211 = sub nsw i64 0, %46
  %212 = sub nsw i64 %211, %200
  %213 = getelementptr i32, i32* %210, i64 %212
  %214 = bitcast i32* %213 to i8*
  %215 = xor i64 %45, -1
  %216 = getelementptr i8, i8* %214, i64 %215
  %217 = ptrtoint i8* %216 to i64
  %218 = lshr i64 %217, 2
  %219 = add nuw nsw i64 %218, 1
  %220 = icmp ult i64 %219, 8
  br i1 %220, label %221, label %223

221:                                              ; preds = %295, %205
  %222 = phi i32* [ %201, %205 ], [ %225, %295 ]
  br label %375

223:                                              ; preds = %205
  %224 = and i64 %219, 9223372036854775800
  %225 = getelementptr i32, i32* %201, i64 %224
  %226 = insertelement <4 x i32> undef, i32 %3, i32 0
  %227 = shufflevector <4 x i32> %226, <4 x i32> undef, <4 x i32> zeroinitializer
  %228 = insertelement <4 x i32> undef, i32 %3, i32 0
  %229 = shufflevector <4 x i32> %228, <4 x i32> undef, <4 x i32> zeroinitializer
  %230 = add nsw i64 %224, -8
  %231 = lshr exact i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 7
  %234 = icmp ult i64 %230, 56
  br i1 %234, label %282, label %235

235:                                              ; preds = %223
  %236 = sub nsw i64 %232, %233
  br label %237

237:                                              ; preds = %237, %235
  %238 = phi i64 [ 0, %235 ], [ %279, %237 ]
  %239 = phi i64 [ %236, %235 ], [ %280, %237 ]
  %240 = getelementptr i32, i32* %201, i64 %238
  %241 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %241, align 4
  %242 = getelementptr i32, i32* %240, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %243, align 4
  %244 = or i64 %238, 8
  %245 = getelementptr i32, i32* %201, i64 %244
  %246 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %246, align 4
  %247 = getelementptr i32, i32* %245, i64 4
  %248 = bitcast i32* %247 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %248, align 4
  %249 = or i64 %238, 16
  %250 = getelementptr i32, i32* %201, i64 %249
  %251 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %251, align 4
  %252 = getelementptr i32, i32* %250, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %253, align 4
  %254 = or i64 %238, 24
  %255 = getelementptr i32, i32* %201, i64 %254
  %256 = bitcast i32* %255 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %256, align 4
  %257 = getelementptr i32, i32* %255, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %258, align 4
  %259 = or i64 %238, 32
  %260 = getelementptr i32, i32* %201, i64 %259
  %261 = bitcast i32* %260 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %261, align 4
  %262 = getelementptr i32, i32* %260, i64 4
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %263, align 4
  %264 = or i64 %238, 40
  %265 = getelementptr i32, i32* %201, i64 %264
  %266 = bitcast i32* %265 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %266, align 4
  %267 = getelementptr i32, i32* %265, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %268, align 4
  %269 = or i64 %238, 48
  %270 = getelementptr i32, i32* %201, i64 %269
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %271, align 4
  %272 = getelementptr i32, i32* %270, i64 4
  %273 = bitcast i32* %272 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %273, align 4
  %274 = or i64 %238, 56
  %275 = getelementptr i32, i32* %201, i64 %274
  %276 = bitcast i32* %275 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %276, align 4
  %277 = getelementptr i32, i32* %275, i64 4
  %278 = bitcast i32* %277 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %278, align 4
  %279 = add i64 %238, 64
  %280 = add i64 %239, -8
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %282, label %237, !llvm.loop !63

282:                                              ; preds = %237, %223
  %283 = phi i64 [ 0, %223 ], [ %279, %237 ]
  %284 = icmp eq i64 %233, 0
  br i1 %284, label %295, label %285

285:                                              ; preds = %282, %285
  %286 = phi i64 [ %292, %285 ], [ %283, %282 ]
  %287 = phi i64 [ %293, %285 ], [ %233, %282 ]
  %288 = getelementptr i32, i32* %201, i64 %286
  %289 = bitcast i32* %288 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %289, align 4
  %290 = getelementptr i32, i32* %288, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %291, align 4
  %292 = add i64 %286, 8
  %293 = add i64 %287, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %285, !llvm.loop !64

295:                                              ; preds = %285, %282
  %296 = icmp eq i64 %219, %224
  br i1 %296, label %793, label %221

297:                                              ; preds = %194
  br i1 %203, label %298, label %793

298:                                              ; preds = %297
  %299 = add nsw i64 %46, %200
  %300 = add nsw i64 %299, 1
  %301 = getelementptr i32, i32* %44, i64 %300
  %302 = icmp ugt i32* %301, %199
  %303 = select i1 %302, i32* %301, i32* %199
  %304 = sub nsw i64 0, %46
  %305 = sub nsw i64 %304, %200
  %306 = getelementptr i32, i32* %303, i64 %305
  %307 = bitcast i32* %306 to i8*
  %308 = xor i64 %45, -1
  %309 = getelementptr i8, i8* %307, i64 %308
  %310 = ptrtoint i8* %309 to i64
  %311 = lshr i64 %310, 2
  %312 = add nuw nsw i64 %311, 1
  %313 = icmp ult i64 %312, 8
  br i1 %313, label %314, label %316

314:                                              ; preds = %373, %298
  %315 = phi i32* [ %201, %298 ], [ %318, %373 ]
  br label %379

316:                                              ; preds = %298
  %317 = and i64 %312, 9223372036854775800
  %318 = getelementptr i32, i32* %201, i64 %317
  %319 = insertelement <4 x i32> undef, i32 %197, i32 0
  %320 = shufflevector <4 x i32> %319, <4 x i32> undef, <4 x i32> zeroinitializer
  %321 = insertelement <4 x i32> undef, i32 %197, i32 0
  %322 = shufflevector <4 x i32> %321, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %323

323:                                              ; preds = %370, %316
  %324 = phi i64 [ 0, %316 ], [ %371, %370 ]
  %325 = getelementptr i32, i32* %201, i64 %324
  %326 = bitcast i32* %325 to <4 x i32>*
  %327 = load <4 x i32>, <4 x i32>* %326, align 4
  %328 = getelementptr i32, i32* %325, i64 4
  %329 = bitcast i32* %328 to <4 x i32>*
  %330 = load <4 x i32>, <4 x i32>* %329, align 4
  %331 = icmp eq <4 x i32> %327, %320
  %332 = icmp eq <4 x i32> %330, %322
  %333 = extractelement <4 x i1> %331, i32 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %323
  store i32 %3, i32* %325, align 4
  br label %335

335:                                              ; preds = %334, %323
  %336 = extractelement <4 x i1> %331, i32 1
  br i1 %336, label %337, label %340

337:                                              ; preds = %335
  %338 = or i64 %324, 1
  %339 = getelementptr i32, i32* %201, i64 %338
  store i32 %3, i32* %339, align 4
  br label %340

340:                                              ; preds = %337, %335
  %341 = extractelement <4 x i1> %331, i32 2
  br i1 %341, label %342, label %345

342:                                              ; preds = %340
  %343 = or i64 %324, 2
  %344 = getelementptr i32, i32* %201, i64 %343
  store i32 %3, i32* %344, align 4
  br label %345

345:                                              ; preds = %342, %340
  %346 = extractelement <4 x i1> %331, i32 3
  br i1 %346, label %347, label %350

347:                                              ; preds = %345
  %348 = or i64 %324, 3
  %349 = getelementptr i32, i32* %201, i64 %348
  store i32 %3, i32* %349, align 4
  br label %350

350:                                              ; preds = %347, %345
  %351 = extractelement <4 x i1> %332, i32 0
  br i1 %351, label %352, label %355

352:                                              ; preds = %350
  %353 = or i64 %324, 4
  %354 = getelementptr i32, i32* %201, i64 %353
  store i32 %3, i32* %354, align 4
  br label %355

355:                                              ; preds = %352, %350
  %356 = extractelement <4 x i1> %332, i32 1
  br i1 %356, label %357, label %360

357:                                              ; preds = %355
  %358 = or i64 %324, 5
  %359 = getelementptr i32, i32* %201, i64 %358
  store i32 %3, i32* %359, align 4
  br label %360

360:                                              ; preds = %357, %355
  %361 = extractelement <4 x i1> %332, i32 2
  br i1 %361, label %362, label %365

362:                                              ; preds = %360
  %363 = or i64 %324, 6
  %364 = getelementptr i32, i32* %201, i64 %363
  store i32 %3, i32* %364, align 4
  br label %365

365:                                              ; preds = %362, %360
  %366 = extractelement <4 x i1> %332, i32 3
  br i1 %366, label %367, label %370

367:                                              ; preds = %365
  %368 = or i64 %324, 7
  %369 = getelementptr i32, i32* %201, i64 %368
  store i32 %3, i32* %369, align 4
  br label %370

370:                                              ; preds = %367, %365
  %371 = add i64 %324, 8
  %372 = icmp eq i64 %371, %317
  br i1 %372, label %373, label %323, !llvm.loop !65

373:                                              ; preds = %370
  %374 = icmp eq i64 %312, %317
  br i1 %374, label %793, label %314

375:                                              ; preds = %221, %375
  %376 = phi i32* [ %377, %375 ], [ %222, %221 ]
  %377 = getelementptr inbounds i32, i32* %376, i64 1
  store i32 %3, i32* %376, align 4
  %378 = icmp ult i32* %377, %199
  br i1 %378, label %375, label %793, !llvm.loop !66

379:                                              ; preds = %314, %384
  %380 = phi i32* [ %385, %384 ], [ %315, %314 ]
  %381 = load i32, i32* %380, align 4
  %382 = icmp eq i32 %381, %197
  br i1 %382, label %383, label %384

383:                                              ; preds = %379
  store i32 %3, i32* %380, align 4
  br label %384

384:                                              ; preds = %383, %379
  %385 = getelementptr inbounds i32, i32* %380, i64 1
  %386 = icmp ult i32* %385, %199
  br i1 %386, label %379, label %793, !llvm.loop !67

387:                                              ; preds = %180, %191, %115, %178, %31
  %388 = phi i32 [ %1, %31 ], [ %41, %178 ], [ %41, %115 ], [ %41, %191 ], [ %41, %180 ]
  %389 = and i32 %32, 31
  %390 = and i32 %32, -32
  %391 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 3
  %392 = load i32, i32* %391, align 8
  %393 = icmp eq i32 %392, %3
  br i1 %393, label %394, label %397

394:                                              ; preds = %387
  %395 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 10
  %396 = load i32, i32* %395, align 4
  br label %397

397:                                              ; preds = %387, %394
  %398 = phi i32 [ %396, %394 ], [ -1, %387 ]
  %399 = icmp slt i32 %388, %390
  br i1 %399, label %400, label %612

400:                                              ; preds = %397
  %401 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 10
  %402 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 9
  %403 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 5
  %404 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 2
  %405 = icmp eq i8 %4, 0
  %406 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 8
  %407 = insertelement <4 x i32> undef, i32 %3, i32 0
  %408 = shufflevector <4 x i32> %407, <4 x i32> undef, <4 x i32> zeroinitializer
  %409 = insertelement <4 x i32> undef, i32 %3, i32 0
  %410 = shufflevector <4 x i32> %409, <4 x i32> undef, <4 x i32> zeroinitializer
  %411 = insertelement <4 x i32> undef, i32 %3, i32 0
  %412 = shufflevector <4 x i32> %411, <4 x i32> undef, <4 x i32> zeroinitializer
  %413 = insertelement <4 x i32> undef, i32 %3, i32 0
  %414 = shufflevector <4 x i32> %413, <4 x i32> undef, <4 x i32> zeroinitializer
  %415 = insertelement <4 x i32> undef, i32 %3, i32 0
  %416 = shufflevector <4 x i32> %415, <4 x i32> undef, <4 x i32> zeroinitializer
  %417 = insertelement <4 x i32> undef, i32 %3, i32 0
  %418 = shufflevector <4 x i32> %417, <4 x i32> undef, <4 x i32> zeroinitializer
  %419 = insertelement <4 x i32> undef, i32 %3, i32 0
  %420 = shufflevector <4 x i32> %419, <4 x i32> undef, <4 x i32> zeroinitializer
  %421 = insertelement <4 x i32> undef, i32 %3, i32 0
  %422 = shufflevector <4 x i32> %421, <4 x i32> undef, <4 x i32> zeroinitializer
  %423 = insertelement <4 x i32> undef, i32 %3, i32 0
  %424 = shufflevector <4 x i32> %423, <4 x i32> undef, <4 x i32> zeroinitializer
  %425 = insertelement <4 x i32> undef, i32 %3, i32 0
  %426 = shufflevector <4 x i32> %425, <4 x i32> undef, <4 x i32> zeroinitializer
  %427 = insertelement <4 x i32> undef, i32 %3, i32 0
  %428 = shufflevector <4 x i32> %427, <4 x i32> undef, <4 x i32> zeroinitializer
  %429 = insertelement <4 x i32> undef, i32 %3, i32 0
  %430 = shufflevector <4 x i32> %429, <4 x i32> undef, <4 x i32> zeroinitializer
  %431 = insertelement <4 x i32> undef, i32 %3, i32 0
  %432 = shufflevector <4 x i32> %431, <4 x i32> undef, <4 x i32> zeroinitializer
  %433 = insertelement <4 x i32> undef, i32 %3, i32 0
  %434 = shufflevector <4 x i32> %433, <4 x i32> undef, <4 x i32> zeroinitializer
  %435 = insertelement <4 x i32> undef, i32 %3, i32 0
  %436 = shufflevector <4 x i32> %435, <4 x i32> undef, <4 x i32> zeroinitializer
  %437 = insertelement <4 x i32> undef, i32 %3, i32 0
  %438 = shufflevector <4 x i32> %437, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %439

439:                                              ; preds = %610, %400
  %440 = phi i32 [ %392, %400 ], [ %611, %610 ]
  %441 = phi i32 [ %398, %400 ], [ %607, %610 ]
  %442 = phi i32 [ %388, %400 ], [ %608, %610 ]
  %443 = icmp eq i32 %440, %3
  %444 = and i32 %442, -1024
  br i1 %443, label %445, label %465

445:                                              ; preds = %439
  %446 = icmp eq i32 %444, 55296
  br i1 %446, label %447, label %450

447:                                              ; preds = %445
  %448 = ashr i32 %442, 5
  %449 = add nsw i32 %448, 320
  br label %458

450:                                              ; preds = %445
  %451 = ashr i32 %442, 11
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 0, i64 %452
  %454 = load i32, i32* %453, align 4
  %455 = lshr i32 %442, 5
  %456 = and i32 %455, 63
  %457 = add nsw i32 %454, %456
  br label %458

458:                                              ; preds = %447, %450
  %459 = phi i32 [ %449, %447 ], [ %457, %450 ]
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 1, i64 %460
  %462 = load i32, i32* %461, align 4
  %463 = load i32, i32* %401, align 4
  %464 = icmp eq i32 %462, %463
  br i1 %464, label %606, label %465

465:                                              ; preds = %439, %458
  %466 = icmp eq i32 %444, 55296
  br i1 %466, label %490, label %467

467:                                              ; preds = %465
  %468 = ashr i32 %442, 11
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 0, i64 %469
  %471 = load i32, i32* %470, align 4
  %472 = load i32, i32* %402, align 8
  %473 = icmp eq i32 %471, %472
  br i1 %473, label %474, label %487

474:                                              ; preds = %467
  %475 = load i32, i32* %403, align 8
  %476 = add nsw i32 %475, 64
  %477 = icmp sgt i32 %476, 35488
  br i1 %477, label %489, label %478

478:                                              ; preds = %474
  store i32 %476, i32* %403, align 8
  %479 = sext i32 %475 to i64
  %480 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 1, i64 %479
  %481 = bitcast i32* %480 to i8*
  %482 = sext i32 %471 to i64
  %483 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 1, i64 %482
  %484 = bitcast i32* %483 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %481, i8* align 4 %484, i64 256, i1 false) #5
  %485 = icmp slt i32 %475, 0
  br i1 %485, label %489, label %486

486:                                              ; preds = %478
  store i32 %475, i32* %470, align 4
  br label %490

487:                                              ; preds = %467
  %488 = icmp slt i32 %471, 0
  br i1 %488, label %489, label %490

489:                                              ; preds = %474, %478, %487
  store i32 5, i32* %5, align 4
  br label %793

490:                                              ; preds = %486, %465, %487
  %491 = phi i32 [ %471, %487 ], [ %475, %486 ], [ 2048, %465 ]
  %492 = lshr i32 %442, 5
  %493 = and i32 %492, 63
  %494 = add nuw nsw i32 %491, %493
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 1, i64 %495
  %497 = load i32, i32* %496, align 4
  %498 = load i32, i32* %401, align 4
  %499 = icmp eq i32 %498, %497
  br i1 %499, label %556, label %500

500:                                              ; preds = %490
  %501 = ashr i32 %497, 5
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 13, i64 %502
  %504 = load i32, i32* %503, align 4
  %505 = icmp eq i32 %504, 1
  br i1 %505, label %506, label %556

506:                                              ; preds = %500
  %507 = icmp sgt i32 %497, 2175
  %508 = and i1 %26, %507
  br i1 %508, label %564, label %509

509:                                              ; preds = %506
  %510 = load i32*, i32** %404, align 8
  %511 = sext i32 %497 to i64
  %512 = getelementptr inbounds i32, i32* %510, i64 %511
  br i1 %405, label %513, label %540

513:                                              ; preds = %509
  %514 = load i32, i32* %391, align 8
  %515 = insertelement <4 x i32> undef, i32 %514, i32 0
  %516 = shufflevector <4 x i32> %515, <4 x i32> undef, <4 x i32> zeroinitializer
  %517 = bitcast i32* %512 to <4 x i32>*
  %518 = load <4 x i32>, <4 x i32>* %517, align 4
  %519 = icmp eq <4 x i32> %518, %516
  %520 = extractelement <4 x i1> %519, i32 0
  br i1 %520, label %521, label %522

521:                                              ; preds = %513
  store i32 %3, i32* %512, align 4
  br label %522

522:                                              ; preds = %521, %513
  %523 = extractelement <4 x i1> %519, i32 1
  br i1 %523, label %524, label %526

524:                                              ; preds = %522
  %525 = getelementptr inbounds i32, i32* %512, i64 1
  store i32 %3, i32* %525, align 4
  br label %526

526:                                              ; preds = %524, %522
  %527 = extractelement <4 x i1> %519, i32 2
  br i1 %527, label %528, label %530

528:                                              ; preds = %526
  %529 = getelementptr inbounds i32, i32* %512, i64 2
  store i32 %3, i32* %529, align 4
  br label %530

530:                                              ; preds = %528, %526
  %531 = extractelement <4 x i1> %519, i32 3
  br i1 %531, label %532, label %534

532:                                              ; preds = %530
  %533 = getelementptr inbounds i32, i32* %512, i64 3
  store i32 %3, i32* %533, align 4
  br label %534

534:                                              ; preds = %532, %530
  %535 = getelementptr inbounds i32, i32* %512, i64 4
  %536 = bitcast i32* %535 to <4 x i32>*
  %537 = load <4 x i32>, <4 x i32>* %536, align 4
  %538 = icmp eq <4 x i32> %537, %516
  %539 = extractelement <4 x i1> %538, i32 0
  br i1 %539, label %794, label %795

540:                                              ; preds = %509
  %541 = bitcast i32* %512 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %541, align 4
  %542 = getelementptr inbounds i32, i32* %512, i64 4
  %543 = bitcast i32* %542 to <4 x i32>*
  store <4 x i32> %426, <4 x i32>* %543, align 4
  %544 = getelementptr inbounds i32, i32* %512, i64 8
  %545 = bitcast i32* %544 to <4 x i32>*
  store <4 x i32> %428, <4 x i32>* %545, align 4
  %546 = getelementptr inbounds i32, i32* %512, i64 12
  %547 = bitcast i32* %546 to <4 x i32>*
  store <4 x i32> %430, <4 x i32>* %547, align 4
  %548 = getelementptr inbounds i32, i32* %512, i64 16
  %549 = bitcast i32* %548 to <4 x i32>*
  store <4 x i32> %432, <4 x i32>* %549, align 4
  %550 = getelementptr inbounds i32, i32* %512, i64 20
  %551 = bitcast i32* %550 to <4 x i32>*
  store <4 x i32> %434, <4 x i32>* %551, align 4
  %552 = getelementptr inbounds i32, i32* %512, i64 24
  %553 = bitcast i32* %552 to <4 x i32>*
  store <4 x i32> %436, <4 x i32>* %553, align 4
  %554 = getelementptr inbounds i32, i32* %512, i64 28
  %555 = bitcast i32* %554 to <4 x i32>*
  store <4 x i32> %438, <4 x i32>* %555, align 4
  br label %606

556:                                              ; preds = %500, %490
  %557 = load i32*, i32** %404, align 8
  %558 = sext i32 %497 to i64
  %559 = getelementptr inbounds i32, i32* %557, i64 %558
  %560 = load i32, i32* %559, align 4
  %561 = icmp ne i32 %560, %3
  %562 = or i1 %26, %499
  %563 = and i1 %562, %561
  br i1 %563, label %564, label %606

564:                                              ; preds = %556, %506
  %565 = icmp sgt i32 %441, -1
  br i1 %565, label %566, label %583

566:                                              ; preds = %564
  %567 = lshr i32 %441, 5
  %568 = zext i32 %567 to i64
  %569 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 13, i64 %568
  %570 = load i32, i32* %569, align 4
  %571 = add nsw i32 %570, 1
  store i32 %571, i32* %569, align 4
  %572 = load i32, i32* %496, align 4
  %573 = ashr i32 %572, 5
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 13, i64 %574
  %576 = load i32, i32* %575, align 4
  %577 = add nsw i32 %576, -1
  store i32 %577, i32* %575, align 4
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %582

579:                                              ; preds = %566
  %580 = load i32, i32* %406, align 4
  %581 = sub nsw i32 0, %580
  store i32 %581, i32* %575, align 4
  store i32 %572, i32* %406, align 4
  br label %582

582:                                              ; preds = %566, %579
  store i32 %441, i32* %496, align 4
  br label %606

583:                                              ; preds = %564
  %584 = tail call fastcc i32 @_ZL12getDataBlockP9UNewTrie2ia(%struct.UNewTrie2* %18, i32 %442, i8 signext 1)
  %585 = icmp slt i32 %584, 0
  br i1 %585, label %586, label %587

586:                                              ; preds = %583
  store i32 7, i32* %5, align 4
  br label %793

587:                                              ; preds = %583
  %588 = load i32*, i32** %404, align 8
  %589 = sext i32 %584 to i64
  %590 = getelementptr inbounds i32, i32* %588, i64 %589
  %591 = bitcast i32* %590 to <4 x i32>*
  store <4 x i32> %408, <4 x i32>* %591, align 4
  %592 = getelementptr inbounds i32, i32* %590, i64 4
  %593 = bitcast i32* %592 to <4 x i32>*
  store <4 x i32> %410, <4 x i32>* %593, align 4
  %594 = getelementptr inbounds i32, i32* %590, i64 8
  %595 = bitcast i32* %594 to <4 x i32>*
  store <4 x i32> %412, <4 x i32>* %595, align 4
  %596 = getelementptr inbounds i32, i32* %590, i64 12
  %597 = bitcast i32* %596 to <4 x i32>*
  store <4 x i32> %414, <4 x i32>* %597, align 4
  %598 = getelementptr inbounds i32, i32* %590, i64 16
  %599 = bitcast i32* %598 to <4 x i32>*
  store <4 x i32> %416, <4 x i32>* %599, align 4
  %600 = getelementptr inbounds i32, i32* %590, i64 20
  %601 = bitcast i32* %600 to <4 x i32>*
  store <4 x i32> %418, <4 x i32>* %601, align 4
  %602 = getelementptr inbounds i32, i32* %590, i64 24
  %603 = bitcast i32* %602 to <4 x i32>*
  store <4 x i32> %420, <4 x i32>* %603, align 4
  %604 = getelementptr inbounds i32, i32* %590, i64 28
  %605 = bitcast i32* %604 to <4 x i32>*
  store <4 x i32> %422, <4 x i32>* %605, align 4
  br label %606

606:                                              ; preds = %917, %919, %540, %587, %582, %556, %458
  %607 = phi i32 [ %441, %458 ], [ %441, %582 ], [ %584, %587 ], [ %441, %556 ], [ %441, %540 ], [ %441, %919 ], [ %441, %917 ]
  %608 = add nsw i32 %442, 32
  %609 = icmp slt i32 %608, %390
  br i1 %609, label %610, label %612

610:                                              ; preds = %606
  %611 = load i32, i32* %391, align 8
  br label %439

612:                                              ; preds = %606, %397
  %613 = phi i32 [ %388, %397 ], [ %608, %606 ]
  %614 = icmp eq i32 %389, 0
  br i1 %614, label %793, label %615

615:                                              ; preds = %612
  %616 = tail call fastcc i32 @_ZL12getDataBlockP9UNewTrie2ia(%struct.UNewTrie2* %18, i32 %613, i8 signext 1)
  %617 = icmp slt i32 %616, 0
  br i1 %617, label %618, label %619

618:                                              ; preds = %615
  store i32 7, i32* %5, align 4
  br label %793

619:                                              ; preds = %615
  %620 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %18, i64 0, i32 2
  %621 = load i32*, i32** %620, align 8
  %622 = ptrtoint i32* %621 to i64
  %623 = sext i32 %616 to i64
  %624 = getelementptr inbounds i32, i32* %621, i64 %623
  %625 = load i32, i32* %391, align 8
  %626 = zext i32 %389 to i64
  %627 = getelementptr inbounds i32, i32* %624, i64 %626
  %628 = icmp eq i8 %4, 0
  %629 = add nsw i64 %623, 1
  %630 = getelementptr i32, i32* %621, i64 %629
  %631 = icmp ugt i32* %627, %630
  %632 = select i1 %631, i32* %627, i32* %630
  %633 = sub nsw i64 0, %623
  %634 = getelementptr i32, i32* %632, i64 %633
  %635 = bitcast i32* %634 to i8*
  %636 = xor i64 %622, -1
  %637 = getelementptr i8, i8* %635, i64 %636
  %638 = ptrtoint i8* %637 to i64
  %639 = lshr i64 %638, 2
  %640 = add nuw nsw i64 %639, 1
  %641 = icmp ult i64 %640, 8
  br i1 %628, label %719, label %642

642:                                              ; preds = %619
  br i1 %641, label %643, label %645

643:                                              ; preds = %717, %642
  %644 = phi i32* [ %624, %642 ], [ %647, %717 ]
  br label %781

645:                                              ; preds = %642
  %646 = and i64 %640, 9223372036854775800
  %647 = getelementptr i32, i32* %624, i64 %646
  %648 = insertelement <4 x i32> undef, i32 %3, i32 0
  %649 = shufflevector <4 x i32> %648, <4 x i32> undef, <4 x i32> zeroinitializer
  %650 = insertelement <4 x i32> undef, i32 %3, i32 0
  %651 = shufflevector <4 x i32> %650, <4 x i32> undef, <4 x i32> zeroinitializer
  %652 = add nsw i64 %646, -8
  %653 = lshr exact i64 %652, 3
  %654 = add nuw nsw i64 %653, 1
  %655 = and i64 %654, 7
  %656 = icmp ult i64 %652, 56
  br i1 %656, label %704, label %657

657:                                              ; preds = %645
  %658 = sub nsw i64 %654, %655
  br label %659

659:                                              ; preds = %659, %657
  %660 = phi i64 [ 0, %657 ], [ %701, %659 ]
  %661 = phi i64 [ %658, %657 ], [ %702, %659 ]
  %662 = getelementptr i32, i32* %624, i64 %660
  %663 = bitcast i32* %662 to <4 x i32>*
  store <4 x i32> %649, <4 x i32>* %663, align 4
  %664 = getelementptr i32, i32* %662, i64 4
  %665 = bitcast i32* %664 to <4 x i32>*
  store <4 x i32> %651, <4 x i32>* %665, align 4
  %666 = or i64 %660, 8
  %667 = getelementptr i32, i32* %624, i64 %666
  %668 = bitcast i32* %667 to <4 x i32>*
  store <4 x i32> %649, <4 x i32>* %668, align 4
  %669 = getelementptr i32, i32* %667, i64 4
  %670 = bitcast i32* %669 to <4 x i32>*
  store <4 x i32> %651, <4 x i32>* %670, align 4
  %671 = or i64 %660, 16
  %672 = getelementptr i32, i32* %624, i64 %671
  %673 = bitcast i32* %672 to <4 x i32>*
  store <4 x i32> %649, <4 x i32>* %673, align 4
  %674 = getelementptr i32, i32* %672, i64 4
  %675 = bitcast i32* %674 to <4 x i32>*
  store <4 x i32> %651, <4 x i32>* %675, align 4
  %676 = or i64 %660, 24
  %677 = getelementptr i32, i32* %624, i64 %676
  %678 = bitcast i32* %677 to <4 x i32>*
  store <4 x i32> %649, <4 x i32>* %678, align 4
  %679 = getelementptr i32, i32* %677, i64 4
  %680 = bitcast i32* %679 to <4 x i32>*
  store <4 x i32> %651, <4 x i32>* %680, align 4
  %681 = or i64 %660, 32
  %682 = getelementptr i32, i32* %624, i64 %681
  %683 = bitcast i32* %682 to <4 x i32>*
  store <4 x i32> %649, <4 x i32>* %683, align 4
  %684 = getelementptr i32, i32* %682, i64 4
  %685 = bitcast i32* %684 to <4 x i32>*
  store <4 x i32> %651, <4 x i32>* %685, align 4
  %686 = or i64 %660, 40
  %687 = getelementptr i32, i32* %624, i64 %686
  %688 = bitcast i32* %687 to <4 x i32>*
  store <4 x i32> %649, <4 x i32>* %688, align 4
  %689 = getelementptr i32, i32* %687, i64 4
  %690 = bitcast i32* %689 to <4 x i32>*
  store <4 x i32> %651, <4 x i32>* %690, align 4
  %691 = or i64 %660, 48
  %692 = getelementptr i32, i32* %624, i64 %691
  %693 = bitcast i32* %692 to <4 x i32>*
  store <4 x i32> %649, <4 x i32>* %693, align 4
  %694 = getelementptr i32, i32* %692, i64 4
  %695 = bitcast i32* %694 to <4 x i32>*
  store <4 x i32> %651, <4 x i32>* %695, align 4
  %696 = or i64 %660, 56
  %697 = getelementptr i32, i32* %624, i64 %696
  %698 = bitcast i32* %697 to <4 x i32>*
  store <4 x i32> %649, <4 x i32>* %698, align 4
  %699 = getelementptr i32, i32* %697, i64 4
  %700 = bitcast i32* %699 to <4 x i32>*
  store <4 x i32> %651, <4 x i32>* %700, align 4
  %701 = add i64 %660, 64
  %702 = add i64 %661, -8
  %703 = icmp eq i64 %702, 0
  br i1 %703, label %704, label %659, !llvm.loop !68

704:                                              ; preds = %659, %645
  %705 = phi i64 [ 0, %645 ], [ %701, %659 ]
  %706 = icmp eq i64 %655, 0
  br i1 %706, label %717, label %707

707:                                              ; preds = %704, %707
  %708 = phi i64 [ %714, %707 ], [ %705, %704 ]
  %709 = phi i64 [ %715, %707 ], [ %655, %704 ]
  %710 = getelementptr i32, i32* %624, i64 %708
  %711 = bitcast i32* %710 to <4 x i32>*
  store <4 x i32> %649, <4 x i32>* %711, align 4
  %712 = getelementptr i32, i32* %710, i64 4
  %713 = bitcast i32* %712 to <4 x i32>*
  store <4 x i32> %651, <4 x i32>* %713, align 4
  %714 = add i64 %708, 8
  %715 = add i64 %709, -1
  %716 = icmp eq i64 %715, 0
  br i1 %716, label %717, label %707, !llvm.loop !69

717:                                              ; preds = %707, %704
  %718 = icmp eq i64 %640, %646
  br i1 %718, label %793, label %643

719:                                              ; preds = %619
  br i1 %641, label %720, label %722

720:                                              ; preds = %779, %719
  %721 = phi i32* [ %624, %719 ], [ %724, %779 ]
  br label %785

722:                                              ; preds = %719
  %723 = and i64 %640, 9223372036854775800
  %724 = getelementptr i32, i32* %624, i64 %723
  %725 = insertelement <4 x i32> undef, i32 %625, i32 0
  %726 = shufflevector <4 x i32> %725, <4 x i32> undef, <4 x i32> zeroinitializer
  %727 = insertelement <4 x i32> undef, i32 %625, i32 0
  %728 = shufflevector <4 x i32> %727, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %729

729:                                              ; preds = %776, %722
  %730 = phi i64 [ 0, %722 ], [ %777, %776 ]
  %731 = getelementptr i32, i32* %624, i64 %730
  %732 = bitcast i32* %731 to <4 x i32>*
  %733 = load <4 x i32>, <4 x i32>* %732, align 4
  %734 = getelementptr i32, i32* %731, i64 4
  %735 = bitcast i32* %734 to <4 x i32>*
  %736 = load <4 x i32>, <4 x i32>* %735, align 4
  %737 = icmp eq <4 x i32> %733, %726
  %738 = icmp eq <4 x i32> %736, %728
  %739 = extractelement <4 x i1> %737, i32 0
  br i1 %739, label %740, label %741

740:                                              ; preds = %729
  store i32 %3, i32* %731, align 4
  br label %741

741:                                              ; preds = %740, %729
  %742 = extractelement <4 x i1> %737, i32 1
  br i1 %742, label %743, label %746

743:                                              ; preds = %741
  %744 = or i64 %730, 1
  %745 = getelementptr i32, i32* %624, i64 %744
  store i32 %3, i32* %745, align 4
  br label %746

746:                                              ; preds = %743, %741
  %747 = extractelement <4 x i1> %737, i32 2
  br i1 %747, label %748, label %751

748:                                              ; preds = %746
  %749 = or i64 %730, 2
  %750 = getelementptr i32, i32* %624, i64 %749
  store i32 %3, i32* %750, align 4
  br label %751

751:                                              ; preds = %748, %746
  %752 = extractelement <4 x i1> %737, i32 3
  br i1 %752, label %753, label %756

753:                                              ; preds = %751
  %754 = or i64 %730, 3
  %755 = getelementptr i32, i32* %624, i64 %754
  store i32 %3, i32* %755, align 4
  br label %756

756:                                              ; preds = %753, %751
  %757 = extractelement <4 x i1> %738, i32 0
  br i1 %757, label %758, label %761

758:                                              ; preds = %756
  %759 = or i64 %730, 4
  %760 = getelementptr i32, i32* %624, i64 %759
  store i32 %3, i32* %760, align 4
  br label %761

761:                                              ; preds = %758, %756
  %762 = extractelement <4 x i1> %738, i32 1
  br i1 %762, label %763, label %766

763:                                              ; preds = %761
  %764 = or i64 %730, 5
  %765 = getelementptr i32, i32* %624, i64 %764
  store i32 %3, i32* %765, align 4
  br label %766

766:                                              ; preds = %763, %761
  %767 = extractelement <4 x i1> %738, i32 2
  br i1 %767, label %768, label %771

768:                                              ; preds = %766
  %769 = or i64 %730, 6
  %770 = getelementptr i32, i32* %624, i64 %769
  store i32 %3, i32* %770, align 4
  br label %771

771:                                              ; preds = %768, %766
  %772 = extractelement <4 x i1> %738, i32 3
  br i1 %772, label %773, label %776

773:                                              ; preds = %771
  %774 = or i64 %730, 7
  %775 = getelementptr i32, i32* %624, i64 %774
  store i32 %3, i32* %775, align 4
  br label %776

776:                                              ; preds = %773, %771
  %777 = add i64 %730, 8
  %778 = icmp eq i64 %777, %723
  br i1 %778, label %779, label %729, !llvm.loop !70

779:                                              ; preds = %776
  %780 = icmp eq i64 %640, %723
  br i1 %780, label %793, label %720

781:                                              ; preds = %643, %781
  %782 = phi i32* [ %783, %781 ], [ %644, %643 ]
  %783 = getelementptr inbounds i32, i32* %782, i64 1
  store i32 %3, i32* %782, align 4
  %784 = icmp ult i32* %783, %627
  br i1 %784, label %781, label %793, !llvm.loop !71

785:                                              ; preds = %720, %790
  %786 = phi i32* [ %791, %790 ], [ %721, %720 ]
  %787 = load i32, i32* %786, align 4
  %788 = icmp eq i32 %787, %625
  br i1 %788, label %789, label %790

789:                                              ; preds = %785
  store i32 %3, i32* %786, align 4
  br label %790

790:                                              ; preds = %789, %785
  %791 = getelementptr inbounds i32, i32* %786, i64 1
  %792 = icmp ult i32* %791, %627
  br i1 %792, label %785, label %793, !llvm.loop !72

793:                                              ; preds = %375, %384, %781, %790, %295, %373, %717, %779, %586, %489, %297, %204, %38, %612, %27, %6, %618, %24, %15
  ret void

794:                                              ; preds = %534
  store i32 %3, i32* %535, align 4
  br label %795

795:                                              ; preds = %794, %534
  %796 = extractelement <4 x i1> %538, i32 1
  br i1 %796, label %797, label %799

797:                                              ; preds = %795
  %798 = getelementptr inbounds i32, i32* %512, i64 5
  store i32 %3, i32* %798, align 4
  br label %799

799:                                              ; preds = %797, %795
  %800 = extractelement <4 x i1> %538, i32 2
  br i1 %800, label %801, label %803

801:                                              ; preds = %799
  %802 = getelementptr inbounds i32, i32* %512, i64 6
  store i32 %3, i32* %802, align 4
  br label %803

803:                                              ; preds = %801, %799
  %804 = extractelement <4 x i1> %538, i32 3
  br i1 %804, label %805, label %807

805:                                              ; preds = %803
  %806 = getelementptr inbounds i32, i32* %512, i64 7
  store i32 %3, i32* %806, align 4
  br label %807

807:                                              ; preds = %805, %803
  %808 = getelementptr inbounds i32, i32* %512, i64 8
  %809 = bitcast i32* %808 to <4 x i32>*
  %810 = load <4 x i32>, <4 x i32>* %809, align 4
  %811 = icmp eq <4 x i32> %810, %516
  %812 = extractelement <4 x i1> %811, i32 0
  br i1 %812, label %813, label %814

813:                                              ; preds = %807
  store i32 %3, i32* %808, align 4
  br label %814

814:                                              ; preds = %813, %807
  %815 = extractelement <4 x i1> %811, i32 1
  br i1 %815, label %816, label %818

816:                                              ; preds = %814
  %817 = getelementptr inbounds i32, i32* %512, i64 9
  store i32 %3, i32* %817, align 4
  br label %818

818:                                              ; preds = %816, %814
  %819 = extractelement <4 x i1> %811, i32 2
  br i1 %819, label %820, label %822

820:                                              ; preds = %818
  %821 = getelementptr inbounds i32, i32* %512, i64 10
  store i32 %3, i32* %821, align 4
  br label %822

822:                                              ; preds = %820, %818
  %823 = extractelement <4 x i1> %811, i32 3
  br i1 %823, label %824, label %826

824:                                              ; preds = %822
  %825 = getelementptr inbounds i32, i32* %512, i64 11
  store i32 %3, i32* %825, align 4
  br label %826

826:                                              ; preds = %824, %822
  %827 = getelementptr inbounds i32, i32* %512, i64 12
  %828 = bitcast i32* %827 to <4 x i32>*
  %829 = load <4 x i32>, <4 x i32>* %828, align 4
  %830 = icmp eq <4 x i32> %829, %516
  %831 = extractelement <4 x i1> %830, i32 0
  br i1 %831, label %832, label %833

832:                                              ; preds = %826
  store i32 %3, i32* %827, align 4
  br label %833

833:                                              ; preds = %832, %826
  %834 = extractelement <4 x i1> %830, i32 1
  br i1 %834, label %835, label %837

835:                                              ; preds = %833
  %836 = getelementptr inbounds i32, i32* %512, i64 13
  store i32 %3, i32* %836, align 4
  br label %837

837:                                              ; preds = %835, %833
  %838 = extractelement <4 x i1> %830, i32 2
  br i1 %838, label %839, label %841

839:                                              ; preds = %837
  %840 = getelementptr inbounds i32, i32* %512, i64 14
  store i32 %3, i32* %840, align 4
  br label %841

841:                                              ; preds = %839, %837
  %842 = extractelement <4 x i1> %830, i32 3
  br i1 %842, label %843, label %845

843:                                              ; preds = %841
  %844 = getelementptr inbounds i32, i32* %512, i64 15
  store i32 %3, i32* %844, align 4
  br label %845

845:                                              ; preds = %843, %841
  %846 = getelementptr inbounds i32, i32* %512, i64 16
  %847 = bitcast i32* %846 to <4 x i32>*
  %848 = load <4 x i32>, <4 x i32>* %847, align 4
  %849 = icmp eq <4 x i32> %848, %516
  %850 = extractelement <4 x i1> %849, i32 0
  br i1 %850, label %851, label %852

851:                                              ; preds = %845
  store i32 %3, i32* %846, align 4
  br label %852

852:                                              ; preds = %851, %845
  %853 = extractelement <4 x i1> %849, i32 1
  br i1 %853, label %854, label %856

854:                                              ; preds = %852
  %855 = getelementptr inbounds i32, i32* %512, i64 17
  store i32 %3, i32* %855, align 4
  br label %856

856:                                              ; preds = %854, %852
  %857 = extractelement <4 x i1> %849, i32 2
  br i1 %857, label %858, label %860

858:                                              ; preds = %856
  %859 = getelementptr inbounds i32, i32* %512, i64 18
  store i32 %3, i32* %859, align 4
  br label %860

860:                                              ; preds = %858, %856
  %861 = extractelement <4 x i1> %849, i32 3
  br i1 %861, label %862, label %864

862:                                              ; preds = %860
  %863 = getelementptr inbounds i32, i32* %512, i64 19
  store i32 %3, i32* %863, align 4
  br label %864

864:                                              ; preds = %862, %860
  %865 = getelementptr inbounds i32, i32* %512, i64 20
  %866 = bitcast i32* %865 to <4 x i32>*
  %867 = load <4 x i32>, <4 x i32>* %866, align 4
  %868 = icmp eq <4 x i32> %867, %516
  %869 = extractelement <4 x i1> %868, i32 0
  br i1 %869, label %870, label %871

870:                                              ; preds = %864
  store i32 %3, i32* %865, align 4
  br label %871

871:                                              ; preds = %870, %864
  %872 = extractelement <4 x i1> %868, i32 1
  br i1 %872, label %873, label %875

873:                                              ; preds = %871
  %874 = getelementptr inbounds i32, i32* %512, i64 21
  store i32 %3, i32* %874, align 4
  br label %875

875:                                              ; preds = %873, %871
  %876 = extractelement <4 x i1> %868, i32 2
  br i1 %876, label %877, label %879

877:                                              ; preds = %875
  %878 = getelementptr inbounds i32, i32* %512, i64 22
  store i32 %3, i32* %878, align 4
  br label %879

879:                                              ; preds = %877, %875
  %880 = extractelement <4 x i1> %868, i32 3
  br i1 %880, label %881, label %883

881:                                              ; preds = %879
  %882 = getelementptr inbounds i32, i32* %512, i64 23
  store i32 %3, i32* %882, align 4
  br label %883

883:                                              ; preds = %881, %879
  %884 = getelementptr inbounds i32, i32* %512, i64 24
  %885 = bitcast i32* %884 to <4 x i32>*
  %886 = load <4 x i32>, <4 x i32>* %885, align 4
  %887 = icmp eq <4 x i32> %886, %516
  %888 = extractelement <4 x i1> %887, i32 0
  br i1 %888, label %889, label %890

889:                                              ; preds = %883
  store i32 %3, i32* %884, align 4
  br label %890

890:                                              ; preds = %889, %883
  %891 = extractelement <4 x i1> %887, i32 1
  br i1 %891, label %892, label %894

892:                                              ; preds = %890
  %893 = getelementptr inbounds i32, i32* %512, i64 25
  store i32 %3, i32* %893, align 4
  br label %894

894:                                              ; preds = %892, %890
  %895 = extractelement <4 x i1> %887, i32 2
  br i1 %895, label %896, label %898

896:                                              ; preds = %894
  %897 = getelementptr inbounds i32, i32* %512, i64 26
  store i32 %3, i32* %897, align 4
  br label %898

898:                                              ; preds = %896, %894
  %899 = extractelement <4 x i1> %887, i32 3
  br i1 %899, label %900, label %902

900:                                              ; preds = %898
  %901 = getelementptr inbounds i32, i32* %512, i64 27
  store i32 %3, i32* %901, align 4
  br label %902

902:                                              ; preds = %900, %898
  %903 = getelementptr inbounds i32, i32* %512, i64 28
  %904 = bitcast i32* %903 to <4 x i32>*
  %905 = load <4 x i32>, <4 x i32>* %904, align 4
  %906 = icmp eq <4 x i32> %905, %516
  %907 = extractelement <4 x i1> %906, i32 0
  br i1 %907, label %908, label %909

908:                                              ; preds = %902
  store i32 %3, i32* %903, align 4
  br label %909

909:                                              ; preds = %908, %902
  %910 = extractelement <4 x i1> %906, i32 1
  br i1 %910, label %911, label %913

911:                                              ; preds = %909
  %912 = getelementptr inbounds i32, i32* %512, i64 29
  store i32 %3, i32* %912, align 4
  br label %913

913:                                              ; preds = %911, %909
  %914 = extractelement <4 x i1> %906, i32 2
  br i1 %914, label %915, label %917

915:                                              ; preds = %913
  %916 = getelementptr inbounds i32, i32* %512, i64 30
  store i32 %3, i32* %916, align 4
  br label %917

917:                                              ; preds = %915, %913
  %918 = extractelement <4 x i1> %906, i32 3
  br i1 %918, label %919, label %606

919:                                              ; preds = %917
  %920 = getelementptr inbounds i32, i32* %512, i64 31
  store i32 %3, i32* %920, align 4
  br label %606
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL12getDataBlockP9UNewTrie2ia(%struct.UNewTrie2* nocapture, i32, i8 signext) unnamed_addr #0 {
  %4 = and i32 %1, -1024
  %5 = icmp eq i32 %4, 55296
  %6 = icmp ne i8 %2, 0
  %7 = and i1 %5, %6
  br i1 %7, label %32, label %8

8:                                                ; preds = %3
  %9 = ashr i32 %1, 11
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 0, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 9
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %30

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 64
  %20 = icmp sgt i32 %19, 35488
  br i1 %20, label %116, label %21

21:                                               ; preds = %16
  store i32 %19, i32* %17, align 8
  %22 = sext i32 %18 to i64
  %23 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 1, i64 %22
  %24 = bitcast i32* %23 to i8*
  %25 = sext i32 %12 to i64
  %26 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 1, i64 %25
  %27 = bitcast i32* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %27, i64 256, i1 false) #5
  %28 = icmp slt i32 %18, 0
  br i1 %28, label %116, label %29

29:                                               ; preds = %21
  store i32 %18, i32* %11, align 4
  br label %32

30:                                               ; preds = %8
  %31 = icmp slt i32 %12, 0
  br i1 %31, label %116, label %32

32:                                               ; preds = %29, %3, %30
  %33 = phi i32 [ %12, %30 ], [ %18, %29 ], [ 2048, %3 ]
  %34 = lshr i32 %1, 5
  %35 = and i32 %34, 63
  %36 = add nuw nsw i32 %33, %35
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 1, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 10
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, %39
  br i1 %42, label %49, label %43

43:                                               ; preds = %32
  %44 = ashr i32 %39, 5
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 13, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %116, label %49

49:                                               ; preds = %43, %32
  %50 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 8
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = ashr i32 %51, 5
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 13, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = sub nsw i32 0, %57
  store i32 %58, i32* %50, align 4
  br label %86

59:                                               ; preds = %49
  %60 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 7
  %61 = load i32, i32* %60, align 8
  %62 = add nsw i32 %61, 32
  %63 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 6
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %62, %64
  br i1 %65, label %66, label %83

66:                                               ; preds = %59
  %67 = icmp slt i32 %64, 131072
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = icmp slt i32 %64, 1115264
  br i1 %69, label %70, label %116

70:                                               ; preds = %68, %66
  %71 = phi i32 [ 131072, %66 ], [ 1115264, %68 ]
  %72 = shl nuw nsw i32 %71, 2
  %73 = zext i32 %72 to i64
  %74 = tail call noalias i8* @uprv_malloc_69(i64 %73) #4
  %75 = icmp eq i8* %74, null
  br i1 %75, label %116, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 2
  %78 = bitcast i32** %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = load i32, i32* %60, align 8
  %81 = sext i32 %80 to i64
  %82 = shl nsw i64 %81, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %79, i64 %82, i1 false) #5
  tail call void @uprv_free_69(i8* %79) #5
  store i8* %74, i8** %78, align 8
  store i32 %71, i32* %63, align 4
  br label %83

83:                                               ; preds = %76, %59
  store i32 %62, i32* %60, align 8
  %84 = ashr i32 %61, 5
  %85 = sext i32 %84 to i64
  br label %86

86:                                               ; preds = %53, %83
  %87 = phi i64 [ %55, %53 ], [ %85, %83 ]
  %88 = phi i32 [ %51, %53 ], [ %61, %83 ]
  %89 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 2
  %90 = load i32*, i32** %89, align 8
  %91 = sext i32 %88 to i64
  %92 = getelementptr inbounds i32, i32* %90, i64 %91
  %93 = bitcast i32* %92 to i8*
  %94 = sext i32 %39 to i64
  %95 = getelementptr inbounds i32, i32* %90, i64 %94
  %96 = bitcast i32* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %96, i64 128, i1 false) #5
  %97 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 13, i64 %87
  store i32 0, i32* %97, align 4
  %98 = icmp slt i32 %88, 0
  br i1 %98, label %116, label %99

99:                                               ; preds = %86
  %100 = lshr i32 %88, 5
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 13, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %102, align 4
  %105 = load i32, i32* %38, align 4
  %106 = ashr i32 %105, 5
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %struct.UNewTrie2, %struct.UNewTrie2* %0, i64 0, i32 13, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = add nsw i32 %109, -1
  store i32 %110, i32* %108, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %99
  %113 = load i32, i32* %50, align 4
  %114 = sub nsw i32 0, %113
  store i32 %114, i32* %108, align 4
  store i32 %105, i32* %50, align 4
  br label %115

115:                                              ; preds = %99, %112
  store i32 %88, i32* %38, align 4
  br label %116

116:                                              ; preds = %43, %68, %70, %16, %21, %86, %30, %115
  %117 = phi i32 [ %88, %115 ], [ -1, %30 ], [ %39, %43 ], [ -1, %86 ], [ -1, %21 ], [ -1, %16 ], [ -1, %70 ], [ -1, %68 ]
  ret i32 %117
}

declare i32 @utrie2_get32_69(%struct.UTrie2*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind allocsize(0) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !9, !3}
!9 = !{!"llvm.loop.unroll.runtime.disable"}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !7}
!14 = distinct !{!14, !9, !3}
!15 = distinct !{!15, !9, !3}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !3}
!22 = distinct !{!22, !3}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !3}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !7}
!36 = distinct !{!36, !3}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !3}
!43 = distinct !{!43, !3}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !3}
!50 = distinct !{!50, !3}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !3}
!57 = distinct !{!57, !3}
!58 = distinct !{!58, !3}
!59 = distinct !{!59, !7}
!60 = distinct !{!60, !3}
!61 = distinct !{!61, !9, !3}
!62 = distinct !{!62, !9, !3}
!63 = distinct !{!63, !3}
!64 = distinct !{!64, !7}
!65 = distinct !{!65, !3}
!66 = distinct !{!66, !9, !3}
!67 = distinct !{!67, !9, !3}
!68 = distinct !{!68, !3}
!69 = distinct !{!69, !7}
!70 = distinct !{!70, !3}
!71 = distinct !{!71, !9, !3}
!72 = distinct !{!72, !9, !3}
