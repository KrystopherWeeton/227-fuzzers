; ModuleID = '../../net/dns/dns_util.cc'
source_filename = "../../net/dns/dns_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.std::__1::basic_string" }
%"class.base::BigEndianReader" = type { i8*, i8* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.17", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3", %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.base::BasicStringPiece"* }
%"class.net::AddressList" = type { %"class.std::__1::vector", %"class.std::__1::vector.32" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.27" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.41" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"**, %"class.std::__1::__compressed_pair.63" }
%"struct.net::DohProviderEntry" = type <{ %"class.std::__1::basic_string", %"class.absl::optional.48", %"class.std::__1::set.53", %"class.std::__1::set", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::set", i32, [4 x i8] }>
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { i32 }
%"class.std::__1::set.53" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.net::DohProviderEntry"** }
%"class.std::__1::__tree_node.81" = type { %"class.std::__1::__tree_node_base.base", %"class.net::IPAddress", [6 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }

$_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

$_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEbEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"../../net/dns/dns_util.cc\00", align 1
@.str.2 = private unnamed_addr constant [77 x i8] c"dns_util::IsValidDohTemplate(entry->dns_over_https_template, &server_method)\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"POST\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"Other\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"Off\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"Automatic\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"Secure\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.12 = private unnamed_addr constant [78 x i8] c"dns_util::IsValidDohTemplate( entry->dns_over_https_template, &server_method)\00", align 1
@switch.table._ZN3net19DnsQueryTypeToQtypeENS_12DnsQueryTypeE = private unnamed_addr constant [8 x i16] [i16 0, i16 1, i16 28, i16 16, i16 12, i16 33, i16 -15, i16 65], align 2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 {
  %3 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_116DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %0, i1 zeroext false, %"class.std::__1::basic_string"* %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_116DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), i1 zeroext, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 {
  %4 = alloca [63 x i8], align 16
  %5 = alloca [255 x i8], align 16
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds [63 x i8], [63 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 63, i8* nonnull %11) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 63, i1 false)
  %12 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %12) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 255, i1 false)
  %13 = icmp eq i64 %10, 0
  br i1 %13, label %98, label %14

14:                                               ; preds = %3, %32
  %15 = phi i64 [ %30, %32 ], [ 0, %3 ]
  %16 = phi i64 [ %24, %32 ], [ %10, %3 ]
  %17 = phi i8* [ %22, %32 ], [ %8, %3 ]
  br label %18

18:                                               ; preds = %14, %53
  %19 = phi i64 [ 0, %14 ], [ %54, %53 ]
  %20 = phi i64 [ %16, %14 ], [ %24, %53 ]
  %21 = phi i8* [ %17, %14 ], [ %22, %53 ]
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  %23 = load i8, i8* %21, align 1
  %24 = add i64 %20, -1
  %25 = icmp eq i8 %23, 46
  br i1 %25, label %26, label %37

26:                                               ; preds = %18
  %27 = icmp eq i64 %19, 0
  br i1 %27, label %98, label %28

28:                                               ; preds = %26
  %29 = add i64 %15, 1
  %30 = add i64 %29, %19
  %31 = icmp ugt i64 %30, 255
  br i1 %31, label %98, label %32

32:                                               ; preds = %28
  %33 = trunc i64 %19 to i8
  %34 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 %15
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 %29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* nonnull align 16 %11, i64 %19, i1 false)
  %36 = icmp eq i64 %24, 0
  br i1 %36, label %65, label %14

37:                                               ; preds = %18
  %38 = icmp eq i64 %19, 63
  br i1 %38, label %98, label %39

39:                                               ; preds = %37
  br i1 %1, label %53, label %40

40:                                               ; preds = %39
  %41 = and i8 %23, -33
  %42 = add i8 %41, -65
  %43 = icmp ult i8 %42, 26
  %44 = add i8 %23, -48
  %45 = icmp ult i8 %44, 10
  %46 = or i1 %45, %43
  br i1 %46, label %53, label %47

47:                                               ; preds = %40
  %48 = icmp ne i64 %19, 0
  %49 = icmp eq i8 %23, 45
  %50 = and i1 %48, %49
  %51 = icmp eq i8 %23, 95
  %52 = or i1 %51, %50
  br i1 %52, label %53, label %98

53:                                               ; preds = %40, %47, %39
  %54 = add nuw nsw i64 %19, 1
  %55 = getelementptr inbounds [63 x i8], [63 x i8]* %4, i64 0, i64 %19
  store i8 %23, i8* %55, align 1
  %56 = icmp eq i64 %24, 0
  br i1 %56, label %57, label %18

57:                                               ; preds = %53
  %58 = add i64 %15, 1
  %59 = add i64 %58, %54
  %60 = icmp ugt i64 %59, 255
  br i1 %60, label %98, label %61

61:                                               ; preds = %57
  %62 = trunc i64 %54 to i8
  %63 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 %15
  store i8 %62, i8* %63, align 1
  %64 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 %58
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* nonnull align 16 %11, i64 %54, i1 false)
  br label %65

65:                                               ; preds = %32, %61
  %66 = phi i64 [ %59, %61 ], [ %30, %32 ]
  %67 = add nuw nsw i64 %66, 1
  %68 = add i64 %66, -1
  %69 = icmp ugt i64 %68, 253
  br i1 %69, label %98, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 %66
  store i8 0, i8* %71, align 1
  %72 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #14
  %73 = icmp ult i64 %67, 23
  br i1 %73, label %82, label %74

74:                                               ; preds = %70
  %75 = add nuw nsw i64 %66, 17
  %76 = and i64 %75, -16
  %77 = tail call i8* @_Znwm(i64 %76) #15
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %77, i8** %78, align 8
  %79 = or i64 %76, -9223372036854775808
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %67, i64* %81, align 8
  br label %86

82:                                               ; preds = %70
  %83 = trunc i64 %67 to i8
  %84 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  store i8 %83, i8* %85, align 1
  br label %86

86:                                               ; preds = %74, %82
  %87 = phi i8* [ %77, %74 ], [ %72, %82 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %87, i8* nonnull align 16 %12, i64 %67, i1 false) #14
  %88 = getelementptr inbounds i8, i8* %87, i64 %67
  store i8 0, i8* %88, align 1
  %89 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  tail call void @_ZdlPv(i8* %95) #15
  br label %96

96:                                               ; preds = %93, %86
  %97 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* nonnull align 8 %72, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #14
  br label %98

98:                                               ; preds = %28, %26, %47, %37, %3, %65, %57, %96
  %99 = phi i1 [ true, %96 ], [ false, %57 ], [ false, %65 ], [ false, %3 ], [ false, %37 ], [ false, %47 ], [ false, %26 ], [ false, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 63, i8* nonnull %11) #14
  ret i1 %99
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net28DNSDomainFromUnrestrictedDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 {
  %3 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_116DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %0, i1 zeroext true, %"class.std::__1::basic_string"* %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16IsValidDNSDomainERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #14
  %4 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_116DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %0, i1 zeroext false, %"class.std::__1::basic_string"* nonnull %2) #14
  %5 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #15
  br label %12

12:                                               ; preds = %1, %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #14
  ret i1 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net28IsValidUnrestrictedDNSDomainERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #14
  %4 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_116DNSDomainFromDotERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %0, i1 zeroext true, %"class.std::__1::basic_string"* nonnull %2) #14
  %5 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #15
  br label %12

12:                                               ; preds = %1, %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #14
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net25IsValidHostLabelCharacterEcb(i8 signext, i1 zeroext) local_unnamed_addr #2 {
  %3 = and i8 %0, -33
  %4 = add i8 %3, -65
  %5 = icmp ult i8 %4, 26
  %6 = add i8 %0, -48
  %7 = icmp ult i8 %6, 10
  %8 = or i1 %7, %5
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = xor i1 %1, true
  %11 = icmp eq i8 %0, 45
  %12 = and i1 %11, %10
  %13 = icmp eq i8 %0, 95
  %14 = or i1 %13, %12
  ret i1 %14

15:                                               ; preds = %2
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17DnsDomainToStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.absl::optional"* noalias nocapture sret, i8*, i64, i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BigEndianReader", align 8
  %6 = bitcast %"class.base::BigEndianReader"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = bitcast %"class.base::BigEndianReader"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %5, i8* %1, i64 %2) #14
  call void @_ZN3net17DnsDomainToStringERN4base15BigEndianReaderEb(%"class.absl::optional"* sret %0, %"class.base::BigEndianReader"* nonnull dereferenceable(16) %5, i1 zeroext %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void
}

declare void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17DnsDomainToStringERN4base15BigEndianReaderEb(%"class.absl::optional"* noalias nocapture sret, %"class.base::BigEndianReader"* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  %9 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %1, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::BigEndianReader"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %76, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  br label %21

21:                                               ; preds = %15, %69
  %22 = phi i64 [ %13, %15 ], [ %74, %69 ]
  %23 = phi i64 [ 0, %15 ], [ %42, %69 ]
  %24 = inttoptr i64 %22 to i8*
  %25 = load i8, i8* %24, align 1
  %26 = icmp ugt i8 %25, -65
  br i1 %26, label %27, label %31

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %union.anon.1* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #14
  br label %84

31:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #14
  %32 = call zeroext i1 @_ZN4base15BigEndianReader20ReadU8LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* %1, %"class.base::BasicStringPiece"* nonnull %5) #14
  br i1 %32, label %37, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %union.anon.1* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #14
  br label %68

37:                                               ; preds = %31
  %38 = load i64, i64* %18, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %37
  %41 = add nuw nsw i64 %23, 1
  %42 = add i64 %41, %38
  %43 = icmp ugt i64 %38, 63
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast %union.anon.1* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #14
  br label %68

48:                                               ; preds = %40
  %49 = icmp ugt i64 %42, 255
  br i1 %49, label %50, label %58

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %53 = bitcast %union.anon.1* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #14
  br label %68

54:                                               ; preds = %37
  %55 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %55, align 8
  %56 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %6, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  br label %68

58:                                               ; preds = %48
  %59 = load i8, i8* %20, align 1
  %60 = icmp slt i8 %59, 0
  %61 = load i64, i64* %8, align 8
  %62 = zext i8 %59 to i64
  %63 = select i1 %60, i64 %61, i64 %62
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %58
  %66 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #14
  %67 = load i64, i64* %18, align 8
  br label %69

68:                                               ; preds = %44, %50, %54, %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  br label %84

69:                                               ; preds = %58, %65
  %70 = phi i64 [ %38, %58 ], [ %67, %65 ]
  %71 = load i8*, i8** %17, align 8
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %71, i64 %70) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  %73 = load i64, i64* %10, align 8
  %74 = load i64, i64* %12, align 8
  %75 = icmp eq i64 %73, %74
  br i1 %75, label %76, label %21

76:                                               ; preds = %69, %3
  %77 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %2, label %78, label %81

78:                                               ; preds = %76
  store i8 0, i8* %77, align 8
  %79 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %80 = bitcast %union.anon.1* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #14
  br label %84

81:                                               ; preds = %76
  store i8 1, i8* %77, align 8
  %82 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %83 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* nonnull align 8 %6, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  br label %84

84:                                               ; preds = %68, %81, %78, %27
  %85 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %84
  %90 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %90) #15
  br label %91

91:                                               ; preds = %84, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

declare zeroext i1 @_ZN4base15BigEndianReader20ReadU8LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net35GetURLFromTemplateWithoutParametersERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::unordered_map", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #14
  %5 = bitcast %"class.std::__1::unordered_map"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %3, i64 0, i32 0, i32 4, i64 0
  %9 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %3, i64 0, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.17"* %9 to i32*
  %11 = bitcast i8* %8 to i32*
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %10, align 8
  %12 = call zeroext i1 @_ZN12uri_template6ExpandERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_13unordered_mapIS6_S6_NS0_4hashIS6_EENS0_8equal_toIS6_EENS4_INS0_4pairIS7_S6_EEEEEEPS6_PNS0_3setIS6_NS0_4lessIS6_EENS4_IS6_EEEE(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::unordered_map"* nonnull dereferenceable(40) %3, %"class.std::__1::basic_string"* %0, %"class.std::__1::set"* null) #14
  %13 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"* %13, null
  br i1 %14, label %39, label %15

15:                                               ; preds = %2, %36
  %16 = phi %"struct.std::__1::__hash_node_base"* [ %18, %36 ], [ %13, %2 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 2
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %16, i64 5
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %15
  %26 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i8**
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %25, %15
  %29 = bitcast %"struct.std::__1::__hash_node_base"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i8**
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #15
  br label %36

36:                                               ; preds = %33, %28
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %16 to i8*
  call void @_ZdlPv(i8* %37) #15
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %18, null
  br i1 %38, label %39, label %15

39:                                               ; preds = %36, %2
  %40 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %6, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %6, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"** %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = bitcast %"struct.std::__1::__hash_node_base"** %40 to i8*
  call void @_ZdlPv(i8* %43) #15
  br label %44

44:                                               ; preds = %39, %42
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #14
  ret void
}

declare zeroext i1 @_ZN12uri_template6ExpandERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_13unordered_mapIS6_S6_NS0_4hashIS6_EENS0_8equal_toIS6_EENS4_INS0_4pairIS7_S6_EEEEEEPS6_PNS0_3setIS6_NS0_4lessIS6_EENS4_IS6_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::unordered_map"* dereferenceable(40), %"class.std::__1::basic_string"*, %"class.std::__1::set"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net52GetTimeDeltaForConnectionTypeFromFieldTrialOrDefaultEPKcN4base9TimeDeltaENS_21NetworkChangeNotifier14ConnectionTypeE(i8*, i64, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector.69", align 8
  %7 = alloca i64, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = icmp eq i8* %0, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false) #14
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %0) #14
  br label %17

14:                                               ; preds = %3
  %15 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #14
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  br label %17

17:                                               ; preds = %14, %12
  %18 = phi i64 [ 0, %14 ], [ %13, %12 ]
  call void @_ZN4base14FieldTrialList12FindFullNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i8* %0, i64 %18) #14
  %19 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = load i64, i64* %10, align 8
  %24 = zext i8 %21 to i64
  %25 = select i1 %22, i64 %23, i64 %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %77, label %27

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::vector.69"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %6, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::vector.69", %"class.std::__1::vector.69"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false) #14
  %31 = load i8*, i8** %9, align 8
  %32 = select i1 %22, i8* %31, i8* %8
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.69"* nonnull sret %6, i8* %32, i64 %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i64 1, i32 1, i32 0) #14
  %33 = icmp slt i32 %2, 0
  br i1 %33, label %62, label %34

34:                                               ; preds = %27
  %35 = zext i32 %2 to i64
  %36 = bitcast %"class.base::BasicStringPiece"** %30 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector.69"* %6 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = ashr exact i64 %40, 4
  %42 = icmp ugt i64 %41, %35
  %43 = inttoptr i64 %39 to %"class.base::BasicStringPiece"*
  br i1 %42, label %44, label %66

44:                                               ; preds = %34
  %45 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #14
  store i64 -6148914691236517206, i64* %7, align 8
  %46 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %43, i64 %35, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %43, i64 %35, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = call zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8* %47, i64 %49, i64* nonnull %7) #14
  br i1 %50, label %51, label %59

51:                                               ; preds = %44
  %52 = load i64, i64* %7, align 8
  %53 = icmp slt i64 %52, 0
  %54 = select i1 %53, i64 -9223372036854775808, i64 9223372036854775807
  %55 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %52, i64 1000) #14
  %56 = extractvalue { i64, i1 } %55, 1
  %57 = extractvalue { i64, i1 } %55, 0
  %58 = select i1 %56, i64 %54, i64 %57, !prof !2
  br label %59

59:                                               ; preds = %51, %44
  %60 = phi i64 [ %58, %51 ], [ 0, %44 ]
  %61 = phi i1 [ true, %51 ], [ false, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  br label %62

62:                                               ; preds = %59, %27
  %63 = phi i64 [ 0, %27 ], [ %60, %59 ]
  %64 = phi i1 [ false, %27 ], [ %61, %59 ]
  %65 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %29, align 8
  br label %66

66:                                               ; preds = %62, %34
  %67 = phi i64 [ %63, %62 ], [ 0, %34 ]
  %68 = phi %"class.base::BasicStringPiece"* [ %65, %62 ], [ %43, %34 ]
  %69 = phi i1 [ %64, %62 ], [ false, %34 ]
  %70 = icmp eq %"class.base::BasicStringPiece"* %68, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %66
  %72 = ptrtoint %"class.base::BasicStringPiece"* %68 to i64
  %73 = bitcast %"class.base::BasicStringPiece"** %30 to i64*
  store i64 %72, i64* %73, align 8
  %74 = bitcast %"class.base::BasicStringPiece"* %68 to i8*
  call void @_ZdlPv(i8* %74) #15
  br label %75

75:                                               ; preds = %71, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #14
  %76 = load i8, i8* %20, align 1
  br label %77

77:                                               ; preds = %75, %17
  %78 = phi i64 [ 0, %17 ], [ %67, %75 ]
  %79 = phi i8 [ %21, %17 ], [ %76, %75 ]
  %80 = phi i1 [ false, %17 ], [ %69, %75 ]
  %81 = icmp slt i8 %79, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %77, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  %85 = select i1 %80, i64 %78, i64 %1
  ret i64 %85
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net24FindAddressListDeltaTypeERKNS_11AddressListES2_(%"class.net::AddressList"* nocapture readonly dereferenceable(48), %"class.net::AddressList"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.net::IPEndPoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.net::AddressList"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.net::IPEndPoint"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.net::AddressList"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %8, %14
  %16 = icmp eq i64 %5, %7
  br i1 %16, label %86, label %17

17:                                               ; preds = %2
  %18 = inttoptr i64 %13 to %"class.net::IPEndPoint"*
  %19 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %0, i64 0, i32 0, i32 0, i32 0
  br label %20

20:                                               ; preds = %17, %73
  %21 = phi %"class.net::IPEndPoint"* [ %18, %17 ], [ %78, %73 ]
  %22 = phi i64 [ %7, %17 ], [ %82, %73 ]
  %23 = phi i64 [ %13, %17 ], [ %77, %73 ]
  %24 = phi i64 [ %11, %17 ], [ %76, %73 ]
  %25 = phi i64 [ 0, %17 ], [ %80, %73 ]
  %26 = phi i8 [ 0, %17 ], [ %79, %73 ]
  %27 = phi i8 [ 0, %17 ], [ %74, %73 ]
  %28 = phi i8 [ 0, %17 ], [ %75, %73 ]
  %29 = icmp eq i64 %24, %23
  br i1 %29, label %65, label %30

30:                                               ; preds = %20
  %31 = inttoptr i64 %22 to %"class.net::IPEndPoint"*
  %32 = and i8 %26, 1
  %33 = icmp eq i8 %32, 0
  br label %34

34:                                               ; preds = %59, %30
  %35 = phi %"class.net::IPEndPoint"* [ %21, %30 ], [ %58, %59 ]
  %36 = phi %"class.net::IPEndPoint"* [ %31, %30 ], [ %60, %59 ]
  %37 = phi i64 [ 0, %30 ], [ %52, %59 ]
  %38 = phi i8 [ 0, %30 ], [ %51, %59 ]
  %39 = phi i8 [ %27, %30 ], [ %50, %59 ]
  %40 = phi i8 [ %28, %30 ], [ %49, %59 ]
  %41 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %36, i64 %25
  %42 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %35, i64 %37
  %43 = tail call zeroext i1 @_ZNK3net10IPEndPointeqERKS0_(%"class.net::IPEndPoint"* %41, %"class.net::IPEndPoint"* dereferenceable(20) %42) #14
  br i1 %43, label %44, label %45

44:                                               ; preds = %34
  br i1 %33, label %48, label %101

45:                                               ; preds = %34
  %46 = icmp eq i64 %25, %37
  %47 = select i1 %46, i8 1, i8 %40
  br label %48

48:                                               ; preds = %45, %44
  %49 = phi i8 [ %40, %44 ], [ %47, %45 ]
  %50 = phi i8 [ 1, %44 ], [ %39, %45 ]
  %51 = phi i8 [ 1, %44 ], [ %38, %45 ]
  %52 = add nuw i64 %37, 1
  %53 = load i64, i64* %10, align 8
  %54 = load i64, i64* %12, align 8
  %55 = sub i64 %53, %54
  %56 = sdiv exact i64 %55, 20
  %57 = icmp ult i64 %52, %56
  %58 = inttoptr i64 %54 to %"class.net::IPEndPoint"*
  br i1 %57, label %59, label %61

59:                                               ; preds = %48
  %60 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %19, align 8
  br label %34

61:                                               ; preds = %48
  %62 = inttoptr i64 %54 to %"class.net::IPEndPoint"*
  %63 = and i8 %51, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %20, %61
  %66 = phi i8 [ %50, %61 ], [ %27, %20 ]
  %67 = phi i8 [ %49, %61 ], [ %28, %20 ]
  %68 = phi i64 [ %53, %61 ], [ %23, %20 ]
  %69 = phi i64 [ %54, %61 ], [ %23, %20 ]
  %70 = phi %"class.net::IPEndPoint"* [ %62, %61 ], [ %21, %20 ]
  %71 = and i8 %66, 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %101

73:                                               ; preds = %65, %61
  %74 = phi i8 [ %50, %61 ], [ %66, %65 ]
  %75 = phi i8 [ %49, %61 ], [ %67, %65 ]
  %76 = phi i64 [ %53, %61 ], [ %68, %65 ]
  %77 = phi i64 [ %54, %61 ], [ %69, %65 ]
  %78 = phi %"class.net::IPEndPoint"* [ %62, %61 ], [ %70, %65 ]
  %79 = phi i8 [ %26, %61 ], [ 1, %65 ]
  %80 = add nuw i64 %25, 1
  %81 = load i64, i64* %4, align 8
  %82 = load i64, i64* %6, align 8
  %83 = sub i64 %81, %82
  %84 = sdiv exact i64 %83, 20
  %85 = icmp ult i64 %80, %84
  br i1 %85, label %20, label %86

86:                                               ; preds = %73, %2
  %87 = phi i8 [ 0, %2 ], [ %75, %73 ]
  %88 = phi i8 [ 0, %2 ], [ %74, %73 ]
  %89 = phi i8 [ 0, %2 ], [ %79, %73 ]
  %90 = and i8 %87, 1
  %91 = icmp eq i8 %90, 0
  %92 = and i1 %15, %91
  br i1 %92, label %101, label %93

93:                                               ; preds = %86
  %94 = and i8 %89, 1
  %95 = icmp eq i8 %94, 0
  %96 = and i1 %15, %95
  br i1 %96, label %101, label %97

97:                                               ; preds = %93
  %98 = and i8 %88, 1
  %99 = icmp eq i8 %98, 0
  %100 = select i1 %99, i32 3, i32 2
  br label %101

101:                                              ; preds = %65, %44, %97, %93, %86
  %102 = phi i32 [ 0, %86 ], [ 1, %93 ], [ %100, %97 ], [ 2, %44 ], [ 2, %65 ]
  ret i32 %102
}

declare zeroext i1 @_ZNK3net10IPEndPointeqERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net17CreateNamePointerEt(%"class.std::__1::basic_string"* noalias nocapture sret, i16 zeroext) local_unnamed_addr #0 {
  %3 = trunc i16 %1 to i8
  %4 = lshr i16 %1, 8
  %5 = trunc i16 %4 to i8
  %6 = or i8 %5, -64
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 2, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 %6, i8* %9, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %3, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %9, i64 2
  store i8 0, i8* %11, align 2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZN3net19DnsQueryTypeToQtypeENS_12DnsQueryTypeE(i32) local_unnamed_addr #2 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [8 x i16], [8 x i16]* @switch.table._ZN3net19DnsQueryTypeToQtypeENS_12DnsQueryTypeE, i64 0, i64 %2
  %4 = load i16, i16* %3, align 2
  ret i16 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3net27AddressFamilyToDnsQueryTypeENS_13AddressFamilyE(i32) local_unnamed_addr #2 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  %4 = icmp eq i32 %0, 2
  %5 = select i1 %4, i32 2, i32 %3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net35GetDohUpgradeServersFromDotHostnameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::vector.39"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.32"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::vector.39"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #14
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %151, label %19

19:                                               ; preds = %3
  %20 = tail call dereferenceable(24) %"class.std::__1::vector.46"* @_ZN3net16DohProviderEntry7GetListEv() #14
  %21 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %20, i64 0, i32 0, i32 0
  %22 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %20, i64 0, i32 0, i32 1
  %24 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %23, align 8
  %25 = icmp eq %"struct.net::DohProviderEntry"** %22, %24
  br i1 %25, label %151, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %2, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %2, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  %33 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %7 to i64*
  br label %36

36:                                               ; preds = %26, %148
  %37 = phi %"struct.net::DohProviderEntry"** [ %22, %26 ], [ %149, %148 ]
  %38 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %37, align 8
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8
  %41 = icmp eq %"class.std::__1::basic_string"* %39, %40
  br i1 %41, label %97, label %42

42:                                               ; preds = %36
  %43 = bitcast %"struct.net::DohProviderEntry"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i64 %48, i64 %49
  %51 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"struct.net::DohProviderEntry"* %38 to i8*
  %54 = select i1 %46, i8* %52, i8* %53
  %55 = icmp eq i64 %50, 0
  br label %56

56:                                               ; preds = %94, %42
  %57 = phi %"class.std::__1::basic_string"* [ %39, %42 ], [ %95, %94 ]
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = zext i8 %60 to i64
  %65 = select i1 %61, i64 %63, i64 %64
  %66 = icmp eq i64 %65, %50
  br i1 %66, label %67, label %94

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  %71 = select i1 %61, i8* %69, i8* %70
  br i1 %61, label %78, label %72

72:                                               ; preds = %67
  br i1 %55, label %97, label %73

73:                                               ; preds = %72
  %74 = ptrtoint i8* %69 to i64
  %75 = trunc i64 %74 to i8
  %76 = load i8, i8* %54, align 1
  %77 = icmp eq i8 %76, %75
  br i1 %77, label %79, label %94

78:                                               ; preds = %67
  br i1 %55, label %97, label %91

79:                                               ; preds = %73, %86
  %80 = phi i64 [ %83, %86 ], [ %64, %73 ]
  %81 = phi i8* [ %84, %86 ], [ %70, %73 ]
  %82 = phi i8* [ %87, %86 ], [ %54, %73 ]
  %83 = add i64 %80, -1
  %84 = getelementptr inbounds i8, i8* %81, i64 1
  %85 = icmp eq i64 %83, 0
  br i1 %85, label %97, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds i8, i8* %82, i64 1
  %88 = load i8, i8* %84, align 1
  %89 = load i8, i8* %87, align 1
  %90 = icmp eq i8 %88, %89
  br i1 %90, label %79, label %94

91:                                               ; preds = %78
  %92 = call i32 @bcmp(i8* %71, i8* %54, i64 %50) #14
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %86, %91, %73, %56
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 1
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %40
  br i1 %96, label %100, label %56

97:                                               ; preds = %72, %78, %91, %79, %36
  %98 = phi %"class.std::__1::basic_string"* [ %39, %36 ], [ %57, %79 ], [ %57, %91 ], [ %57, %78 ], [ %57, %72 ]
  %99 = icmp eq %"class.std::__1::basic_string"* %98, %40
  br i1 %99, label %100, label %148

100:                                              ; preds = %94, %97
  %101 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %38, i64 0, i32 3, i32 0
  %102 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"* %101, %"class.std::__1::basic_string"* dereferenceable(24) %1) #14
  %103 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %38, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %104 = icmp eq %"class.std::__1::__tree_end_node"* %102, %103
  br i1 %104, label %148, label %105

105:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #14
  %106 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %38, i64 0, i32 4
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  %114 = select i1 %110, i8* %112, i8* %113
  %115 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %38, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = zext i8 %109 to i64
  %118 = select i1 %110, i64 %116, i64 %117
  %119 = call zeroext i1 @_ZN3net8dns_util18IsValidDohTemplateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8* %114, i64 %118, %"class.std::__1::basic_string"* nonnull %4) #14
  br i1 %119, label %122, label %120

120:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 340, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.2, i64 0, i64 0)) #14
  %121 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  br label %122

122:                                              ; preds = %105, %120
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #14
  %123 = load i8, i8* %34, align 1
  %124 = icmp slt i8 %123, 0
  %125 = load i64, i64* %31, align 8
  %126 = zext i8 %123 to i64
  %127 = select i1 %124, i64 %125, i64 %126
  %128 = icmp eq i64 %127, 4
  br i1 %128, label %129, label %132

129:                                              ; preds = %122
  %130 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #14
  %131 = icmp eq i32 %130, 0
  br label %132

132:                                              ; preds = %122, %129
  %133 = phi i1 [ %131, %129 ], [ false, %122 ]
  %134 = zext i1 %133 to i8
  store i8 %134, i8* %6, align 1
  %135 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %7, align 8
  %136 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %8, align 8
  %137 = icmp ult %"struct.net::DnsOverHttpsServerConfig"* %135, %136
  br i1 %137, label %138, label %141

138:                                              ; preds = %132
  call void @_ZN3net24DnsOverHttpsServerConfigC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"struct.net::DnsOverHttpsServerConfig"* %135, %"class.std::__1::basic_string"* dereferenceable(24) %106, i1 zeroext %133) #14
  %139 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %135, i64 1
  %140 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %139 to i64
  store i64 %140, i64* %35, align 8
  br label %142

141:                                              ; preds = %132
  call void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEbEEEvDpOT_(%"class.std::__1::vector.39"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %106, i8* nonnull dereferenceable(1) %6) #14
  br label %142

142:                                              ; preds = %138, %141
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #14
  %143 = load i8, i8* %34, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %142
  %146 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %146) #15
  br label %147

147:                                              ; preds = %142, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  br label %148

148:                                              ; preds = %97, %100, %147
  %149 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %37, i64 1
  %150 = icmp eq %"struct.net::DohProviderEntry"** %149, %24
  br i1 %150, label %151, label %36

151:                                              ; preds = %148, %19, %3
  ret void
}

declare dereferenceable(24) %"class.std::__1::vector.46"* @_ZN3net16DohProviderEntry7GetListEv() local_unnamed_addr #3

declare zeroext i1 @_ZN3net8dns_util18IsValidDohTemplateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net35GetDohUpgradeServersFromNameserversERKNSt3__16vectorINS_10IPEndPointENS0_9allocatorIS2_EEEERKNS1_INS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEENS3_ISC_EEEE(%"class.std::__1::vector.39"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.32"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"struct.net::DnsOverHttpsServerConfig", align 8
  %7 = alloca %"class.std::__1::vector.46", align 8
  %8 = bitcast %"class.std::__1::vector.46"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %7, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %7, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector.46"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN3net12_GLOBAL__N_136GetDohProviderEntriesFromNameserversERKNSt3__16vectorINS_10IPEndPointENS1_9allocatorIS3_EEEERKNS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEENS4_ISD_EEEE(%"class.std::__1::vector.46"* nonnull sret %7, %"class.std::__1::vector"* dereferenceable(24) %1, %"class.std::__1::vector.32"* dereferenceable(24) %2)
  %12 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::vector.39"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #14
  %15 = bitcast %"struct.net::DohProviderEntry"*** %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.46"* %7 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  call void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.39"* %0, i64 %20)
  %21 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %9, align 8
  %22 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %10, align 8
  %23 = icmp eq %"struct.net::DohProviderEntry"** %21, %22
  br i1 %23, label %92, label %24

24:                                               ; preds = %3
  %25 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %6 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.logging::CheckError"* %5 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %6, i64 0, i32 1
  %33 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %12 to i64*
  %34 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %37

37:                                               ; preds = %87, %24
  %38 = phi %"struct.net::DohProviderEntry"** [ %21, %24 ], [ %88, %87 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #14
  %39 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %38, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #14, !noalias !3
  %40 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %39, i64 0, i32 4
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1, !noalias !3
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8, !noalias !3
  %47 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %48 = select i1 %44, i8* %46, i8* %47
  %49 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %39, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8, !noalias !3
  %51 = zext i8 %43 to i64
  %52 = select i1 %44, i64 %50, i64 %51
  %53 = call zeroext i1 @_ZN3net8dns_util18IsValidDohTemplateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8* %48, i64 %52, %"class.std::__1::basic_string"* nonnull %4) #14, !noalias !3
  br i1 %53, label %56, label %54

54:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14, !noalias !3
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 359, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0)) #14
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14, !noalias !3
  br label %56

56:                                               ; preds = %54, %37
  %57 = load i8, i8* %31, align 1, !noalias !3
  %58 = icmp slt i8 %57, 0
  %59 = load i64, i64* %28, align 8, !noalias !3
  %60 = zext i8 %57 to i64
  %61 = select i1 %58, i64 %59, i64 %60
  %62 = icmp eq i64 %61, 4
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #14
  %65 = icmp eq i32 %64, 0
  br label %66

66:                                               ; preds = %63, %56
  %67 = phi i1 [ %65, %63 ], [ false, %56 ]
  call void @_ZN3net24DnsOverHttpsServerConfigC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"struct.net::DnsOverHttpsServerConfig"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %40, i1 zeroext %67) #14
  %68 = load i8, i8* %31, align 1, !noalias !3
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = load i8*, i8** %27, align 8, !noalias !3
  call void @_ZdlPv(i8* %71) #15
  br label %72

72:                                               ; preds = %70, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14, !noalias !3
  %73 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %12, align 8
  %74 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %13, align 8
  %75 = icmp ult %"struct.net::DnsOverHttpsServerConfig"* %73, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* nonnull align 8 %25, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #14
  %78 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %73, i64 0, i32 1
  %79 = load i8, i8* %32, align 8, !range !6
  store i8 %79, i8* %78, align 8
  %80 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %73, i64 1
  %81 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %80 to i64
  store i64 %81, i64* %33, align 8
  br label %87

82:                                               ; preds = %72
  call void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.39"* %0, %"struct.net::DnsOverHttpsServerConfig"* nonnull dereferenceable(32) %6) #14
  %83 = load i8, i8* %35, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %82
  %86 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %85, %82, %76
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #14
  %88 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %38, i64 1
  %89 = icmp eq %"struct.net::DohProviderEntry"** %88, %22
  br i1 %89, label %90, label %37

90:                                               ; preds = %87
  %91 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %9, align 8
  br label %92

92:                                               ; preds = %90, %3
  %93 = phi %"struct.net::DohProviderEntry"** [ %91, %90 ], [ %21, %3 ]
  %94 = icmp eq %"struct.net::DohProviderEntry"** %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %92
  %96 = ptrtoint %"struct.net::DohProviderEntry"** %93 to i64
  store i64 %96, i64* %15, align 8
  %97 = bitcast %"struct.net::DohProviderEntry"** %93 to i8*
  call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %92, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_136GetDohProviderEntriesFromNameserversERKNSt3__16vectorINS_10IPEndPointENS1_9allocatorIS3_EEEERKNS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEENS4_ISD_EEEE(%"class.std::__1::vector.46"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.32"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %4 = tail call dereferenceable(24) %"class.std::__1::vector.46"* @_ZN3net16DohProviderEntry7GetListEv() #14
  %5 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::vector.46"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %11, align 8
  %13 = icmp eq %"class.net::IPEndPoint"* %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %4, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %2, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %2, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.net::DohProviderEntry"*** %6 to i64*
  %20 = bitcast %"class.std::__1::vector.46"* %0 to i64*
  %21 = bitcast %"struct.net::DohProviderEntry"*** %7 to i64*
  br label %23

22:                                               ; preds = %30, %3
  ret void

23:                                               ; preds = %14, %30
  %24 = phi %"class.net::IPEndPoint"* [ %10, %14 ], [ %31, %30 ]
  %25 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %15, align 8
  %26 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %16, align 8
  %27 = icmp eq %"struct.net::DohProviderEntry"** %25, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %24, i64 0, i32 0
  br label %33

30:                                               ; preds = %188, %23
  %31 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %24, i64 1
  %32 = icmp eq %"class.net::IPEndPoint"* %31, %12
  br i1 %32, label %22, label %23

33:                                               ; preds = %28, %188
  %34 = phi %"struct.net::DohProviderEntry"** [ %25, %28 ], [ %189, %188 ]
  %35 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %34, align 8
  %36 = ptrtoint %"struct.net::DohProviderEntry"* %35 to i64
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %37, %38
  br i1 %39, label %95, label %40

40:                                               ; preds = %33
  %41 = bitcast %"struct.net::DohProviderEntry"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"struct.net::DohProviderEntry"* %35 to i8*
  %52 = select i1 %44, i8* %50, i8* %51
  %53 = icmp eq i64 %48, 0
  br label %54

54:                                               ; preds = %92, %40
  %55 = phi %"class.std::__1::basic_string"* [ %37, %40 ], [ %93, %92 ]
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = zext i8 %58 to i64
  %63 = select i1 %59, i64 %61, i64 %62
  %64 = icmp eq i64 %63, %48
  br i1 %64, label %65, label %92

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %69 = select i1 %59, i8* %67, i8* %68
  br i1 %59, label %76, label %70

70:                                               ; preds = %65
  br i1 %53, label %95, label %71

71:                                               ; preds = %70
  %72 = ptrtoint i8* %67 to i64
  %73 = trunc i64 %72 to i8
  %74 = load i8, i8* %52, align 1
  %75 = icmp eq i8 %74, %73
  br i1 %75, label %77, label %92

76:                                               ; preds = %65
  br i1 %53, label %95, label %89

77:                                               ; preds = %71, %84
  %78 = phi i64 [ %81, %84 ], [ %62, %71 ]
  %79 = phi i8* [ %82, %84 ], [ %68, %71 ]
  %80 = phi i8* [ %85, %84 ], [ %52, %71 ]
  %81 = add i64 %78, -1
  %82 = getelementptr inbounds i8, i8* %79, i64 1
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds i8, i8* %80, i64 1
  %86 = load i8, i8* %82, align 1
  %87 = load i8, i8* %85, align 1
  %88 = icmp eq i8 %86, %87
  br i1 %88, label %77, label %92

89:                                               ; preds = %76
  %90 = tail call i32 @bcmp(i8* %69, i8* %52, i64 %48) #14
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %84, %89, %71, %54
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 1
  %94 = icmp eq %"class.std::__1::basic_string"* %93, %38
  br i1 %94, label %98, label %54

95:                                               ; preds = %70, %76, %89, %77, %33
  %96 = phi %"class.std::__1::basic_string"* [ %37, %33 ], [ %55, %77 ], [ %55, %89 ], [ %55, %76 ], [ %55, %70 ]
  %97 = icmp eq %"class.std::__1::basic_string"* %96, %38
  br i1 %97, label %98, label %188

98:                                               ; preds = %92, %95
  %99 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %35, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %100 = bitcast %"class.std::__1::__tree_end_node"* %99 to %"class.std::__1::__tree_node.81"**
  %101 = load %"class.std::__1::__tree_node.81"*, %"class.std::__1::__tree_node.81"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node.81"* %101, null
  br i1 %102, label %188, label %103

103:                                              ; preds = %98, %103
  %104 = phi %"class.std::__1::__tree_end_node"* [ %113, %103 ], [ %99, %98 ]
  %105 = phi %"class.std::__1::__tree_node.81"* [ %114, %103 ], [ %101, %98 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node.81", %"class.std::__1::__tree_node.81"* %105, i64 0, i32 1
  %107 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %106, %"class.net::IPAddress"* dereferenceable(17) %29) #14
  %108 = getelementptr inbounds %"class.std::__1::__tree_node.81", %"class.std::__1::__tree_node.81"* %105, i64 0, i32 0, i32 1
  %109 = bitcast %"class.std::__1::__tree_node_base"** %108 to %"class.std::__1::__tree_node.81"**
  %110 = getelementptr inbounds %"class.std::__1::__tree_node.81", %"class.std::__1::__tree_node.81"* %105, i64 0, i32 0, i32 0
  %111 = bitcast %"class.std::__1::__tree_node.81"* %105 to %"class.std::__1::__tree_node.81"**
  %112 = select i1 %107, %"class.std::__1::__tree_node.81"** %109, %"class.std::__1::__tree_node.81"** %111
  %113 = select i1 %107, %"class.std::__1::__tree_end_node"* %104, %"class.std::__1::__tree_end_node"* %110
  %114 = load %"class.std::__1::__tree_node.81"*, %"class.std::__1::__tree_node.81"** %112, align 8
  %115 = icmp eq %"class.std::__1::__tree_node.81"* %114, null
  br i1 %115, label %116, label %103

116:                                              ; preds = %103
  %117 = icmp eq %"class.std::__1::__tree_end_node"* %113, %99
  br i1 %117, label %188, label %118

118:                                              ; preds = %116
  %119 = bitcast %"class.std::__1::__tree_end_node"* %113 to %"class.std::__1::__tree_node.81"*
  %120 = getelementptr inbounds %"class.std::__1::__tree_node.81", %"class.std::__1::__tree_node.81"* %119, i64 0, i32 1
  %121 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %29, %"class.net::IPAddress"* dereferenceable(17) %120) #14
  br i1 %121, label %188, label %122

122:                                              ; preds = %118
  %123 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %5, align 8
  %124 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %6, align 8
  %125 = icmp eq %"struct.net::DohProviderEntry"** %123, %124
  %126 = ptrtoint %"struct.net::DohProviderEntry"** %123 to i64
  %127 = ptrtoint %"struct.net::DohProviderEntry"** %124 to i64
  br i1 %125, label %135, label %128

128:                                              ; preds = %122, %132
  %129 = phi %"struct.net::DohProviderEntry"** [ %133, %132 ], [ %123, %122 ]
  %130 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %129, align 8
  %131 = icmp eq %"struct.net::DohProviderEntry"* %130, %35
  br i1 %131, label %135, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %129, i64 1
  %134 = icmp eq %"struct.net::DohProviderEntry"** %133, %124
  br i1 %134, label %138, label %128

135:                                              ; preds = %128, %122
  %136 = phi %"struct.net::DohProviderEntry"** [ %123, %122 ], [ %129, %128 ]
  %137 = icmp eq %"struct.net::DohProviderEntry"** %136, %124
  br i1 %137, label %138, label %188

138:                                              ; preds = %132, %135
  %139 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %7, align 8
  %140 = icmp eq %"struct.net::DohProviderEntry"** %124, %139
  %141 = ptrtoint %"struct.net::DohProviderEntry"** %139 to i64
  br i1 %140, label %146, label %142

142:                                              ; preds = %138
  %143 = bitcast %"struct.net::DohProviderEntry"** %124 to i64*
  store i64 %36, i64* %143, align 8
  %144 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %124, i64 1
  %145 = ptrtoint %"struct.net::DohProviderEntry"** %144 to i64
  store i64 %145, i64* %19, align 8
  br label %188

146:                                              ; preds = %138
  %147 = sub i64 %127, %126
  %148 = ashr exact i64 %147, 3
  %149 = add nsw i64 %148, 1
  %150 = icmp ugt i64 %149, 2305843009213693951
  br i1 %150, label %151, label %153

151:                                              ; preds = %146
  %152 = bitcast %"class.std::__1::vector.46"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %152) #16
  unreachable

153:                                              ; preds = %146
  %154 = sub i64 %141, %126
  %155 = ashr exact i64 %154, 3
  %156 = icmp ult i64 %155, 1152921504606846975
  br i1 %156, label %157, label %165

157:                                              ; preds = %153
  %158 = ashr exact i64 %154, 2
  %159 = icmp ult i64 %158, %149
  %160 = select i1 %159, i64 %149, i64 %158
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %170, label %162

162:                                              ; preds = %157
  %163 = icmp ugt i64 %160, 2305843009213693951
  br i1 %163, label %164, label %165

164:                                              ; preds = %162
  tail call void @abort() #16
  unreachable

165:                                              ; preds = %162, %153
  %166 = phi i64 [ %160, %162 ], [ 2305843009213693951, %153 ]
  %167 = shl i64 %166, 3
  %168 = tail call i8* @_Znwm(i64 %167) #15
  %169 = bitcast i8* %168 to %"struct.net::DohProviderEntry"**
  br label %170

170:                                              ; preds = %165, %157
  %171 = phi i64 [ %166, %165 ], [ 0, %157 ]
  %172 = phi i8* [ %168, %165 ], [ null, %157 ]
  %173 = phi %"struct.net::DohProviderEntry"** [ %169, %165 ], [ null, %157 ]
  %174 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %173, i64 %148
  %175 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %173, i64 %171
  %176 = ptrtoint %"struct.net::DohProviderEntry"** %175 to i64
  %177 = bitcast %"struct.net::DohProviderEntry"** %174 to i64*
  store i64 %36, i64* %177, align 8
  %178 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %174, i64 1
  %179 = ptrtoint %"struct.net::DohProviderEntry"** %178 to i64
  %180 = ptrtoint %"struct.net::DohProviderEntry"** %173 to i64
  %181 = icmp sgt i64 %147, 0
  br i1 %181, label %182, label %184

182:                                              ; preds = %170
  %183 = bitcast %"struct.net::DohProviderEntry"** %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %183, i64 %147, i1 false) #14
  br label %184

184:                                              ; preds = %182, %170
  store i64 %180, i64* %20, align 8
  store i64 %179, i64* %19, align 8
  store i64 %176, i64* %21, align 8
  %185 = icmp eq %"struct.net::DohProviderEntry"** %123, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = bitcast %"struct.net::DohProviderEntry"** %123 to i8*
  tail call void @_ZdlPv(i8* %187) #15
  br label %188

188:                                              ; preds = %95, %135, %118, %116, %98, %186, %184, %142
  %189 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %34, i64 1
  %190 = icmp eq %"struct.net::DohProviderEntry"** %189, %26
  br i1 %190, label %30, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.39"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.net::DnsOverHttpsServerConfig"*
  br i1 %10, label %12, label %97

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #16
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast i8* %22 to %"struct.net::DnsOverHttpsServerConfig"*
  %24 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %23, i64 %20
  %25 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %24 to i64
  %26 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %23, i64 %1
  %27 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.net::DnsOverHttpsServerConfig"*
  %29 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %28, %11
  br i1 %29, label %75, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %28, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast i8** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = and i64 %35, 32
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %46

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %24, i64 -1
  %40 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %28, i64 -1
  %41 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %39 to i8*
  %42 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #14
  %43 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %24, i64 -1, i32 1
  %44 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %28, i64 -1, i32 1
  %45 = load i8, i8* %44, align 8, !range !6
  store i8 %45, i8* %43, align 8
  br label %46

46:                                               ; preds = %38, %30
  %47 = phi %"struct.net::DnsOverHttpsServerConfig"* [ undef, %30 ], [ %39, %38 ]
  %48 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %24, %30 ], [ %39, %38 ]
  %49 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %28, %30 ], [ %40, %38 ]
  %50 = icmp ult i8* %34, inttoptr (i64 32 to i8*)
  br i1 %50, label %69, label %51

51:                                               ; preds = %46, %51
  %52 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %61, %51 ], [ %48, %46 ]
  %53 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %62, %51 ], [ %49, %46 ]
  %54 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %52, i64 -1
  %55 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %53, i64 -1
  %56 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %54 to i8*
  %57 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #14
  %58 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %52, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %53, i64 -1, i32 1
  %60 = load i8, i8* %59, align 8, !range !6
  store i8 %60, i8* %58, align 8
  %61 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %52, i64 -2
  %62 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %53, i64 -2
  %63 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %61 to i8*
  %64 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #14
  %65 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %52, i64 -2, i32 1
  %66 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %53, i64 -2, i32 1
  %67 = load i8, i8* %66, align 8, !range !6
  store i8 %67, i8* %65, align 8
  %68 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %62, %11
  br i1 %68, label %69, label %51

69:                                               ; preds = %51, %46
  %70 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %47, %46 ], [ %61, %51 ]
  %71 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %70 to i64
  %72 = load i64, i64* %6, align 8
  %73 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %13, align 8
  %74 = inttoptr i64 %72 to %"struct.net::DnsOverHttpsServerConfig"*
  br label %75

75:                                               ; preds = %17, %69
  %76 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %74, %69 ], [ %28, %17 ]
  %77 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %73, %69 ], [ %11, %17 ]
  %78 = phi i64 [ %71, %69 ], [ %25, %17 ]
  %79 = phi i64 [ %72, %69 ], [ %18, %17 ]
  store i64 %78, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %80 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %77, %76
  br i1 %80, label %93, label %81

81:                                               ; preds = %75, %91
  %82 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %83, %91 ], [ %77, %75 ]
  %83 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %82, i64 -1
  %84 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #15
  br label %91

91:                                               ; preds = %88, %81
  %92 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %83, %76
  br i1 %92, label %93, label %81

93:                                               ; preds = %91, %75
  %94 = icmp eq i64 %79, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = inttoptr i64 %79 to i8*
  tail call void @_ZdlPv(i8* %96) #15
  br label %97

97:                                               ; preds = %95, %93, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net41GetDohProviderIdForHistogramFromDohConfigERKNS_24DnsOverHttpsServerConfigE(%"class.std::__1::basic_string"* noalias sret, %"struct.net::DnsOverHttpsServerConfig"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(24) %"class.std::__1::vector.46"* @_ZN3net16DohProviderEntry7GetListEv() #14
  %4 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %3, i64 0, i32 0, i32 1
  %7 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %6, align 8
  %8 = icmp eq %"struct.net::DohProviderEntry"** %5, %7
  br i1 %8, label %66, label %9

9:                                                ; preds = %2
  %10 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %1 to i8*
  %20 = icmp eq i64 %17, 0
  br label %21

21:                                               ; preds = %63, %9
  %22 = phi %"struct.net::DohProviderEntry"** [ %5, %9 ], [ %64, %63 ]
  %23 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %22, align 8
  %24 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %23, i64 0, i32 4
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %23, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %32, %17
  br i1 %33, label %34, label %63

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %38 = select i1 %28, i8* %36, i8* %37
  %39 = load i8*, i8** %18, align 8
  %40 = select i1 %13, i8* %39, i8* %19
  br i1 %28, label %47, label %41

41:                                               ; preds = %34
  br i1 %20, label %66, label %42

42:                                               ; preds = %41
  %43 = ptrtoint i8* %36 to i64
  %44 = trunc i64 %43 to i8
  %45 = load i8, i8* %40, align 1
  %46 = icmp eq i8 %45, %44
  br i1 %46, label %48, label %63

47:                                               ; preds = %34
  br i1 %20, label %66, label %60

48:                                               ; preds = %42, %55
  %49 = phi i64 [ %52, %55 ], [ %31, %42 ]
  %50 = phi i8* [ %53, %55 ], [ %37, %42 ]
  %51 = phi i8* [ %56, %55 ], [ %40, %42 ]
  %52 = add i64 %49, -1
  %53 = getelementptr inbounds i8, i8* %50, i64 1
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  %57 = load i8, i8* %53, align 1
  %58 = load i8, i8* %56, align 1
  %59 = icmp eq i8 %57, %58
  br i1 %59, label %48, label %63

60:                                               ; preds = %47
  %61 = tail call i32 @bcmp(i8* %38, i8* %40, i64 %17) #14
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %55, %60, %42, %21
  %64 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %22, i64 1
  %65 = icmp eq %"struct.net::DohProviderEntry"** %64, %7
  br i1 %65, label %83, label %21

66:                                               ; preds = %41, %47, %60, %48, %2
  %67 = phi %"struct.net::DohProviderEntry"** [ %5, %2 ], [ %22, %48 ], [ %22, %60 ], [ %22, %47 ], [ %22, %41 ]
  %68 = icmp eq %"struct.net::DohProviderEntry"** %67, %7
  br i1 %68, label %83, label %69

69:                                               ; preds = %66
  %70 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %67, align 8
  %71 = bitcast %"struct.net::DohProviderEntry"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  %76 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %77 = bitcast %"struct.net::DohProviderEntry"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #14
  br label %88

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %80, i64 %82) #14
  br label %88

83:                                               ; preds = %63, %66
  %84 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  store i8 5, i8* %85, align 1
  %86 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5, i1 false) #14
  %87 = getelementptr inbounds i8, i8* %86, i64 5
  store i8 0, i8* %87, align 1
  br label %88

88:                                               ; preds = %78, %75, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net42GetDohProviderIdForHistogramFromNameserverERKNS_10IPEndPointE(%"class.std::__1::basic_string"* noalias sret, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector.46", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"class.net::IPEndPoint"], align 2
  %6 = alloca %"class.std::__1::vector.32", align 8
  %7 = bitcast %"class.std::__1::vector.46"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %3, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector"* %4 to i8*
  %11 = bitcast %"class.std::__1::vector.46"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %12 = getelementptr inbounds [1 x %"class.net::IPEndPoint"], [1 x %"class.net::IPEndPoint"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %12) #14
  %13 = getelementptr inbounds [1 x %"class.net::IPEndPoint"], [1 x %"class.net::IPEndPoint"]* %5, i64 0, i64 0
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %13, %"class.net::IPEndPoint"* dereferenceable(20) %1) #14
  %14 = call i8* @_Znwm(i64 20) #15
  %15 = bitcast i8* %14 to %"class.net::IPEndPoint"*
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %14, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 20
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.net::IPEndPoint"** %19 to i8**
  store i8* %18, i8** %20, align 8
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %15, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %13) #14
  %21 = getelementptr inbounds i8, i8* %14, i64 20
  %22 = bitcast %"class.net::IPEndPoint"** %16 to i64*
  %23 = ptrtoint i8* %21 to i64
  store i64 %23, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.32"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #14
  call fastcc void @_ZN3net12_GLOBAL__N_136GetDohProviderEntriesFromNameserversERKNSt3__16vectorINS_10IPEndPointENS1_9allocatorIS3_EEEERKNS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEENS4_ISD_EEEE(%"class.std::__1::vector.46"* nonnull sret %3, %"class.std::__1::vector"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.32"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  %25 = bitcast i8* %14 to %"class.net::IPEndPoint"*
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %25) #14
  call void @_ZdlPv(i8* nonnull %14) #15
  %26 = getelementptr inbounds [1 x %"class.net::IPEndPoint"], [1 x %"class.net::IPEndPoint"]* %5, i64 0, i64 0
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  %27 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %8, align 8
  %28 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %9, align 8
  %29 = icmp eq %"struct.net::DohProviderEntry"** %27, %28
  br i1 %29, label %30, label %35

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 5, i8* %32, align 1
  %33 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5, i1 false) #14
  %34 = getelementptr inbounds i8, i8* %33, i64 5
  store i8 0, i8* %34, align 1
  br label %50

35:                                               ; preds = %2
  %36 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %27, align 8
  %37 = bitcast %"struct.net::DohProviderEntry"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %43 = bitcast %"struct.net::DohProviderEntry"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #14
  br label %50

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %46, i64 %48) #14
  %49 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %8, align 8
  br label %50

50:                                               ; preds = %44, %41, %30
  %51 = phi %"struct.net::DohProviderEntry"** [ %49, %44 ], [ %27, %41 ], [ %27, %30 ]
  %52 = icmp eq %"struct.net::DohProviderEntry"** %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = ptrtoint %"struct.net::DohProviderEntry"** %51 to i64
  %55 = bitcast %"struct.net::DohProviderEntry"*** %9 to i64*
  store i64 %54, i64* %55, align 8
  %56 = bitcast %"struct.net::DohProviderEntry"** %51 to i8*
  call void @_ZdlPv(i8* %56) #15
  br label %57

57:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret void
}

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21SecureDnsModeToStringENS_13SecureDnsModeE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  switch i32 %1, label %18 [
    i32 0, label %3
    i32 1, label %8
    i32 2, label %13
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 3, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3, i1 false) #14
  %7 = getelementptr inbounds i8, i8* %6, i64 3
  store i8 0, i8* %7, align 1
  br label %19

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 9, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i64 9, i1 false) #14
  %12 = getelementptr inbounds i8, i8* %11, i64 9
  store i8 0, i8* %12, align 1
  br label %19

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 6, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i64 6, i1 false) #14
  %17 = getelementptr inbounds i8, i8* %16, i64 6
  store i8 0, i8* %17, align 2
  br label %19

18:                                               ; preds = %2
  unreachable

19:                                               ; preds = %13, %8, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4base14FieldTrialList12FindFullNameENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #3

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.69"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN4base13StringToInt64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPl(i8*, i64, i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #7

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE4findIS6_EENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #14
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #14
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

declare zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEbEEEvDpOT_(%"class.std::__1::vector.39"*, %"class.std::__1::basic_string"* dereferenceable(24), i8* dereferenceable(1)) local_unnamed_addr #12 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #16
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #16
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #15
  %34 = bitcast i8* %33 to %"struct.net::DnsOverHttpsServerConfig"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %37, i64 %10
  %39 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %37, i64 %36
  %40 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %39 to i64
  %41 = load i8, i8* %2, align 1, !range !6
  %42 = icmp ne i8 %41, 0
  tail call void @_ZN3net24DnsOverHttpsServerConfigC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"struct.net::DnsOverHttpsServerConfig"* %38, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext %42) #14
  %43 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %38, i64 1
  %44 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %45, align 8
  %47 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %46 to i64
  %48 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %4, align 8
  %49 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %48, %46
  br i1 %49, label %91, label %50

50:                                               ; preds = %35
  %51 = getelementptr %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = ptrtoint i8** %51 to i64
  %53 = sub i64 %52, %47
  %54 = and i64 %53, 32
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %38, i64 -1
  %58 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 -1
  %59 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %57 to i8*
  %60 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #14
  %61 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %38, i64 -1, i32 1
  %62 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 -1, i32 1
  %63 = load i8, i8* %62, align 8, !range !6
  store i8 %63, i8* %61, align 8
  br label %64

64:                                               ; preds = %56, %50
  %65 = phi %"struct.net::DnsOverHttpsServerConfig"* [ undef, %50 ], [ %57, %56 ]
  %66 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %38, %50 ], [ %57, %56 ]
  %67 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %48, %50 ], [ %58, %56 ]
  %68 = icmp ult i64 %53, 32
  br i1 %68, label %87, label %69

69:                                               ; preds = %64, %69
  %70 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %79, %69 ], [ %66, %64 ]
  %71 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %80, %69 ], [ %67, %64 ]
  %72 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %70, i64 -1
  %73 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %71, i64 -1
  %74 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %72 to i8*
  %75 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #14
  %76 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %70, i64 -1, i32 1
  %77 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %71, i64 -1, i32 1
  %78 = load i8, i8* %77, align 8, !range !6
  store i8 %78, i8* %76, align 8
  %79 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %70, i64 -2
  %80 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %71, i64 -2
  %81 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %79 to i8*
  %82 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #14
  %83 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %70, i64 -2, i32 1
  %84 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %71, i64 -2, i32 1
  %85 = load i8, i8* %84, align 8, !range !6
  store i8 %85, i8* %83, align 8
  %86 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %80, %46
  br i1 %86, label %87, label %69

87:                                               ; preds = %69, %64
  %88 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %65, %64 ], [ %79, %69 ]
  %89 = load i64, i64* %7, align 8
  %90 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %4, align 8
  br label %91

91:                                               ; preds = %35, %87
  %92 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %90, %87 ], [ %46, %35 ]
  %93 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %88, %87 ], [ %38, %35 ]
  %94 = phi i64 [ %89, %87 ], [ %47, %35 ]
  %95 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %93 to i64
  store i64 %95, i64* %7, align 8
  store i64 %44, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %96 = inttoptr i64 %94 to %"struct.net::DnsOverHttpsServerConfig"*
  %97 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %92, %96
  br i1 %97, label %110, label %98

98:                                               ; preds = %91, %108
  %99 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %100, %108 ], [ %92, %91 ]
  %100 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %99, i64 -1
  %101 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  tail call void @_ZdlPv(i8* %107) #15
  br label %108

108:                                              ; preds = %105, %98
  %109 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %100, %96
  br i1 %109, label %110, label %98

110:                                              ; preds = %108, %91
  %111 = icmp eq i64 %94, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %94 to i8*
  tail call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %110, %112
  ret void
}

declare void @_ZN3net24DnsOverHttpsServerConfigC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.39"*, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"struct.net::DnsOverHttpsServerConfig"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %36, i64 %35
  %39 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %38 to i64
  %40 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %37 to i8*
  %41 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #14
  %42 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %1, i64 0, i32 1
  %44 = load i8, i8* %43, align 8, !range !6
  store i8 %44, i8* %42, align 8
  %45 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %37, i64 1
  %46 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 0
  %48 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %47, align 8
  %49 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %48 to i64
  %50 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %3, align 8
  %51 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %50, %48
  br i1 %51, label %93, label %52

52:                                               ; preds = %34
  %53 = getelementptr %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %50, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = ptrtoint i8** %53 to i64
  %55 = sub i64 %54, %49
  %56 = and i64 %55, 32
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %66

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %37, i64 -1
  %60 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %50, i64 -1
  %61 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %59 to i8*
  %62 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #14
  %63 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %37, i64 -1, i32 1
  %64 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %50, i64 -1, i32 1
  %65 = load i8, i8* %64, align 8, !range !6
  store i8 %65, i8* %63, align 8
  br label %66

66:                                               ; preds = %58, %52
  %67 = phi %"struct.net::DnsOverHttpsServerConfig"* [ undef, %52 ], [ %59, %58 ]
  %68 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %37, %52 ], [ %59, %58 ]
  %69 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %50, %52 ], [ %60, %58 ]
  %70 = icmp ult i64 %55, 32
  br i1 %70, label %89, label %71

71:                                               ; preds = %66, %71
  %72 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %81, %71 ], [ %68, %66 ]
  %73 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %82, %71 ], [ %69, %66 ]
  %74 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %72, i64 -1
  %75 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %73, i64 -1
  %76 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %74 to i8*
  %77 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #14
  %78 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %72, i64 -1, i32 1
  %79 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %73, i64 -1, i32 1
  %80 = load i8, i8* %79, align 8, !range !6
  store i8 %80, i8* %78, align 8
  %81 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %72, i64 -2
  %82 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %73, i64 -2
  %83 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %81 to i8*
  %84 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #14
  %85 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %72, i64 -2, i32 1
  %86 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %73, i64 -2, i32 1
  %87 = load i8, i8* %86, align 8, !range !6
  store i8 %87, i8* %85, align 8
  %88 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %82, %48
  br i1 %88, label %89, label %71

89:                                               ; preds = %71, %66
  %90 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %67, %66 ], [ %81, %71 ]
  %91 = load i64, i64* %6, align 8
  %92 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %3, align 8
  br label %93

93:                                               ; preds = %34, %89
  %94 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %92, %89 ], [ %48, %34 ]
  %95 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %90, %89 ], [ %37, %34 ]
  %96 = phi i64 [ %91, %89 ], [ %49, %34 ]
  %97 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %95 to i64
  store i64 %97, i64* %6, align 8
  store i64 %46, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %98 = inttoptr i64 %96 to %"struct.net::DnsOverHttpsServerConfig"*
  %99 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %94, %98
  br i1 %99, label %112, label %100

100:                                              ; preds = %93, %110
  %101 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %102, %110 ], [ %94, %93 ]
  %102 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %101, i64 -1
  %103 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  tail call void @_ZdlPv(i8* %109) #15
  br label %110

110:                                              ; preds = %107, %100
  %111 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %102, %98
  br i1 %111, label %112, label %100

112:                                              ; preds = %110, %93
  %113 = icmp eq i64 %96, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %96 to i8*
  tail call void @_ZdlPv(i8* %115) #15
  br label %116

116:                                              ; preds = %112, %114
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZZN3net35GetDohUpgradeServersFromNameserversERKNSt3__16vectorINS_10IPEndPointENS0_9allocatorIS2_EEEERKNS1_INS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEENS3_ISC_EEEEENK3$_0clINS_16DohProviderEntryEEEDaPKT_: argument 0"}
!5 = distinct !{!5, !"_ZZN3net35GetDohUpgradeServersFromNameserversERKNSt3__16vectorINS_10IPEndPointENS0_9allocatorIS2_EEEERKNS1_INS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEENS3_ISC_EEEEENK3$_0clINS_16DohProviderEntryEEEDaPKT_"}
!6 = !{i8 0, i8 2}
