; ModuleID = '../../components/autofill/core/browser/strike_database_integrator_test_strike_database.cc'
source_filename = "../../components/autofill/core/browser/strike_database_integrator_test_strike_database.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase" = type { %"class.autofill::StrikeDatabaseIntegratorBase", i8, %"class.absl::optional", %"class.absl::optional.0", %"class.absl::optional.0", %"class.std::__1::basic_string" }
%"class.autofill::StrikeDatabaseIntegratorBase" = type { i32 (...)**, %"class.autofill::StrikeDatabaseBase"* }
%"class.autofill::StrikeDatabaseBase" = type { %class.KeyedService }
%class.KeyedService = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.autofill::StrikeDatabase" = type { %"class.autofill::StrikeDatabaseBase", %"class.std::__1::unique_ptr", %"class.std::__1::map", i8, i32, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.leveldb_proto::ProtoDatabase"* }
%"class.leveldb_proto::ProtoDatabase" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*)* @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseD2Ev to i8*), i8* bitcast (void (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*)* @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseD0Ev to i8*), i8* bitcast ({ i8, i64 } (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*)* @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase17GetMaximumEntriesEv to i8*), i8* bitcast ({ i8, i64 } (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*)* @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase29GetMaximumEntriesAfterCleanupEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*)* @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase16GetProjectPrefixEv to i8*), i8* bitcast (i32 (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*)* @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase18GetMaxStrikesLimitEv to i8*), i8* bitcast ({ i8, i64 } (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*)* @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase18GetExpiryTimeDeltaEv to i8*), i8* bitcast (i1 (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*)* @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase17UniqueIdsRequiredEv to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"StrikeDatabaseIntegratorTest\00", align 1

@_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseC1EPNS_14StrikeDatabaseEN4absl8optionalIN4base9TimeDeltaEEE = hidden unnamed_addr alias void (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*, %"class.autofill::StrikeDatabase"*, i8, i64), void (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*, %"class.autofill::StrikeDatabase"*, i8, i64)* @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseC2EPNS_14StrikeDatabaseEN4absl8optionalIN4base9TimeDeltaEEE
@_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseC1EPNS_14StrikeDatabaseE = hidden unnamed_addr alias void (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*, %"class.autofill::StrikeDatabase"*), void (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*, %"class.autofill::StrikeDatabase"*)* @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseC2EPNS_14StrikeDatabaseE
@_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseC1EPNS_14StrikeDatabaseEN4absl8optionalIN4base9TimeDeltaEEERNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*, %"class.autofill::StrikeDatabase"*, i8, i64, %"class.std::__1::basic_string"*), void (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*, %"class.autofill::StrikeDatabase"*, i8, i64, %"class.std::__1::basic_string"*)* @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseC2EPNS_14StrikeDatabaseEN4absl8optionalIN4base9TimeDeltaEEERNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE
@_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseD1Ev = hidden unnamed_addr alias void (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*), void (%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*)* @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseC2EPNS_14StrikeDatabaseEN4absl8optionalIN4base9TimeDeltaEEE(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*, %"class.autofill::StrikeDatabase"*, i8, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.autofill::StrikeDatabase", %"class.autofill::StrikeDatabase"* %1, i64 0, i32 0
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBaseC2EPNS_18StrikeDatabaseBaseE(%"class.autofill::StrikeDatabaseIntegratorBase"* %5, %"class.autofill::StrikeDatabaseBase"* %6) #9
  %7 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 31536000000000, i64* %10, align 8
  %11 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 5, i64* %14, align 8
  %15 = tail call i8* @_Znwm(i64 32) #10
  %16 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i64 28, i1 false) #9
  %19 = getelementptr inbounds i8, i8* %15, i64 28
  store i8 0, i8* %19, align 1
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBase20RemoveExpiredStrikesEv(%"class.autofill::StrikeDatabaseIntegratorBase"* %5) #9
  store i8 %2, i8* %9, align 8
  store i64 %3, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseC2EPNS_14StrikeDatabaseE(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*, %"class.autofill::StrikeDatabase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.autofill::StrikeDatabase", %"class.autofill::StrikeDatabase"* %1, i64 0, i32 0
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBaseC2EPNS_18StrikeDatabaseBaseE(%"class.autofill::StrikeDatabaseIntegratorBase"* %3, %"class.autofill::StrikeDatabaseBase"* %4) #9
  %5 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 31536000000000, i64* %8, align 8
  %9 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 10, i64* %10, align 8
  %11 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 5, i64* %12, align 8
  %13 = tail call i8* @_Znwm(i64 32) #10
  %14 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %16, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i64 28, i1 false) #9
  %17 = getelementptr inbounds i8, i8* %13, i64 28
  store i8 0, i8* %17, align 1
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBase20RemoveExpiredStrikesEv(%"class.autofill::StrikeDatabaseIntegratorBase"* %3) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8autofill28StrikeDatabaseIntegratorBaseC2EPNS_18StrikeDatabaseBaseE(%"class.autofill::StrikeDatabaseIntegratorBase"*, %"class.autofill::StrikeDatabaseBase"*) unnamed_addr #2

declare void @_ZN8autofill28StrikeDatabaseIntegratorBase20RemoveExpiredStrikesEv(%"class.autofill::StrikeDatabaseIntegratorBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseC2EPNS_14StrikeDatabaseEN4absl8optionalIN4base9TimeDeltaEEERNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEE(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*, %"class.autofill::StrikeDatabase"*, i8, i64, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.autofill::StrikeDatabase", %"class.autofill::StrikeDatabase"* %1, i64 0, i32 0
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBaseC2EPNS_18StrikeDatabaseBaseE(%"class.autofill::StrikeDatabaseIntegratorBase"* %6, %"class.autofill::StrikeDatabaseBase"* %7) #9
  %8 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 1
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 31536000000000, i64* %11, align 8
  %12 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 10, i64* %13, align 8
  %14 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 5, i64* %15, align 8
  %16 = tail call i8* @_Znwm(i64 32) #10
  %17 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %19, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i64 28, i1 false) #9
  %20 = getelementptr inbounds i8, i8* %16, i64 28
  store i8 0, i8* %20, align 1
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBase20RemoveExpiredStrikesEv(%"class.autofill::StrikeDatabaseIntegratorBase"* %6) #9
  store i8 %2, i8* %10, align 8
  store i64 %3, i64* %11, align 8
  %21 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 5
  %22 = icmp eq %"class.std::__1::basic_string"* %21, %4
  br i1 %22, label %52, label %23

23:                                               ; preds = %5
  %24 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %27, label %42, label %32

32:                                               ; preds = %23
  br i1 %31, label %36, label %33

33:                                               ; preds = %32
  %34 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #9
  br label %52

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %21, i8* %38, i64 %40) #9
  br label %52

42:                                               ; preds = %23
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %48 = zext i8 %30 to i64
  %49 = select i1 %31, i8* %44, i8* %47
  %50 = select i1 %31, i64 %46, i64 %48
  %51 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %21, i8* %49, i64 %50) #9
  br label %52

52:                                               ; preds = %5, %33, %36, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseD2Ev(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 0
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBaseD2Ev(%"class.autofill::StrikeDatabaseIntegratorBase"* %12) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8autofill28StrikeDatabaseIntegratorBaseD2Ev(%"class.autofill::StrikeDatabaseIntegratorBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseD0Ev(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN8autofill42StrikeDatabaseIntegratorTestStrikeDatabaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 0
  tail call void @_ZN8autofill28StrikeDatabaseIntegratorBaseD2Ev(%"class.autofill::StrikeDatabaseIntegratorBase"* %12) #9
  %13 = bitcast %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase16GetProjectPrefixEv(%"class.std::__1::basic_string"* noalias sret, %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %1, i64 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #9
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #9
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase18GetMaxStrikesLimitEv(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8, i64 } @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase18GetExpiryTimeDeltaEv(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8, i64 } undef, i8 %3, 0
  %7 = insertvalue { i8, i64 } %6, i64 %5, 1
  ret { i8, i64 } %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase17UniqueIdsRequiredEv(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8autofill42StrikeDatabaseIntegratorTestStrikeDatabase20SetUniqueIdsRequiredEb(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* nocapture, i1 zeroext) local_unnamed_addr #7 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 1
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8, i64 } @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase17GetMaximumEntriesEv(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8, i64 } undef, i8 %3, 0
  %7 = insertvalue { i8, i64 } %6, i64 %5, 1
  ret { i8, i64 } %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8, i64 } @_ZNK8autofill42StrikeDatabaseIntegratorTestStrikeDatabase29GetMaximumEntriesAfterCleanupEv(%"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = getelementptr inbounds %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase", %"class.autofill::StrikeDatabaseIntegratorTestStrikeDatabase"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = insertvalue { i8, i64 } undef, i8 %3, 0
  %7 = insertvalue { i8, i64 } %6, i64 %5, 1
  ret { i8, i64 } %7
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
