; ModuleID = '../../sandbox/policy/linux/bpf_gpu_policy_linux.cc'
source_filename = "../../sandbox/policy/linux/bpf_gpu_policy_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.sandbox::policy::GpuProcessPolicy" = type { %"class.sandbox::policy::BPFBasePolicy" }
%"class.sandbox::policy::BPFBasePolicy" = type { %"class.sandbox::bpf_dsl::Policy", %"class.std::__1::unique_ptr" }
%"class.sandbox::bpf_dsl::Policy" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sandbox::BaselinePolicy"* }
%"class.sandbox::BaselinePolicy" = type { %"class.sandbox::bpf_dsl::Policy", i32, i32 }
%"class.sandbox::bpf_dsl::internal::ResultExprImpl" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.2" = type { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* }
%"class.sandbox::bpf_dsl::internal::BoolExprImpl" = type opaque
%"class.sandbox::policy::SandboxLinux" = type { i32, i8, i32, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.3", %"class.sandbox::syscall_broker::BrokerProcess"* }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.sandbox::SetuidSandboxClient"* }
%"class.sandbox::SetuidSandboxClient" = type opaque
%"class.sandbox::syscall_broker::BrokerProcess" = type { i8, i32, i32, i8, i8, %"class.std::__1::bitset", %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.std::__1::unique_ptr.17" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.sandbox::syscall_broker::BrokerPermissionList" = type { i32, %"class.std::__1::vector", %"class.sandbox::syscall_broker::BrokerFilePermission"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.sandbox::syscall_broker::BrokerFilePermission"* }
%"class.sandbox::syscall_broker::BrokerFilePermission" = type <{ %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.sandbox::syscall_broker::BrokerClient"* }
%"class.sandbox::syscall_broker::BrokerClient" = type opaque

@_ZTVN7sandbox6policy16GpuProcessPolicyE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sandbox::policy::GpuProcessPolicy"*)* @_ZN7sandbox6policy16GpuProcessPolicyD2Ev to i8*), i8* bitcast (void (%"class.sandbox::policy::GpuProcessPolicy"*)* @_ZN7sandbox6policy16GpuProcessPolicyD0Ev to i8*), i8* bitcast ({ %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } (%"class.sandbox::policy::GpuProcessPolicy"*, i32)* @_ZNK7sandbox6policy16GpuProcessPolicy15EvaluateSyscallEi to i8*), i8* bitcast ({ %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } (%"class.sandbox::policy::BPFBasePolicy"*)* @_ZNK7sandbox6policy13BPFBasePolicy14InvalidSyscallEv to i8*)] }, align 8

@_ZN7sandbox6policy16GpuProcessPolicyC1Ev = hidden unnamed_addr alias void (%"class.sandbox::policy::GpuProcessPolicy"*), void (%"class.sandbox::policy::GpuProcessPolicy"*)* @_ZN7sandbox6policy16GpuProcessPolicyC2Ev
@_ZN7sandbox6policy16GpuProcessPolicyD1Ev = hidden unnamed_addr alias void (%"class.sandbox::policy::GpuProcessPolicy"*), void (%"class.sandbox::policy::GpuProcessPolicy"*)* @_ZN7sandbox6policy16GpuProcessPolicyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy16GpuProcessPolicyC2Ev(%"class.sandbox::policy::GpuProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::GpuProcessPolicy", %"class.sandbox::policy::GpuProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy13BPFBasePolicyC2Ev(%"class.sandbox::policy::BPFBasePolicy"* %2) #5
  %3 = getelementptr inbounds %"class.sandbox::policy::GpuProcessPolicy", %"class.sandbox::policy::GpuProcessPolicy"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7sandbox6policy16GpuProcessPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN7sandbox6policy13BPFBasePolicyC2Ev(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7sandbox6policy13BPFBasePolicyD2Ev(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy16GpuProcessPolicyD2Ev(%"class.sandbox::policy::GpuProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::GpuProcessPolicy", %"class.sandbox::policy::GpuProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy13BPFBasePolicyD2Ev(%"class.sandbox::policy::BPFBasePolicy"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy16GpuProcessPolicyD0Ev(%"class.sandbox::policy::GpuProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::GpuProcessPolicy", %"class.sandbox::policy::GpuProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy13BPFBasePolicyD2Ev(%"class.sandbox::policy::BPFBasePolicy"* %2) #5
  %3 = bitcast %"class.sandbox::policy::GpuProcessPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy16GpuProcessPolicy15EvaluateSyscallEi(%"class.sandbox::policy::GpuProcessPolicy"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::shared_ptr.2", align 8
  %4 = alloca %"class.std::__1::shared_ptr.2", align 8
  switch i32 %1, label %49 [
    i32 312, label %5
    i32 285, label %7
    i32 72, label %9
    i32 77, label %31
    i32 78, label %31
    i32 217, label %31
    i32 16, label %31
    i32 9, label %33
    i32 10, label %35
    i32 157, label %35
    i32 99, label %35
    i32 63, label %35
    i32 204, label %37
    i32 203, label %37
    i32 302, label %43
  ]

5:                                                ; preds = %2
  %6 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5ErrorEi(i32 38) #5
  br label %61

7:                                                ; preds = %2
  %8 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  br label %61

9:                                                ; preds = %2
  %10 = tail call i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64 4) #5
  %11 = tail call i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64 8) #5
  %12 = bitcast %"class.std::__1::shared_ptr.2"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #5
  %13 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 1, i64 4, i64 %10, i64 1033) #5
  %14 = getelementptr inbounds %"class.std::__1::shared_ptr.2", %"class.std::__1::shared_ptr.2"* %3, i64 0, i32 0
  %15 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %13, 0
  store %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %15, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.2", %"class.std::__1::shared_ptr.2"* %3, i64 0, i32 1
  %17 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %13, 1
  store %"class.std::__1::__shared_weak_count"* %17, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = icmp eq %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %15, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %9
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #5
  br label %49

20:                                               ; preds = %9
  %21 = bitcast %"class.std::__1::shared_ptr.2"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #5
  %22 = and i64 %11, -8
  %23 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 2, i64 8, i64 %22, i64 0) #5
  %24 = getelementptr inbounds %"class.std::__1::shared_ptr.2", %"class.std::__1::shared_ptr.2"* %4, i64 0, i32 0
  %25 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %23, 0
  store %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %25, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::shared_ptr.2", %"class.std::__1::shared_ptr.2"* %4, i64 0, i32 1
  %27 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %23, 1
  store %"class.std::__1::__shared_weak_count"* %27, %"class.std::__1::__shared_weak_count"** %26, align 8
  %28 = icmp eq %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %25, null
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #5
  br i1 %28, label %49, label %29

29:                                               ; preds = %20
  %30 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  br label %61

31:                                               ; preds = %2, %2, %2, %2
  %32 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  br label %61

33:                                               ; preds = %2
  %34 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  br label %61

35:                                               ; preds = %2, %2, %2, %2
  %36 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  br label %61

37:                                               ; preds = %2, %2
  %38 = getelementptr inbounds %"class.sandbox::policy::GpuProcessPolicy", %"class.sandbox::policy::GpuProcessPolicy"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.sandbox::BaselinePolicy"*, %"class.sandbox::BaselinePolicy"** %38, align 8
  %40 = getelementptr inbounds %"class.sandbox::BaselinePolicy", %"class.sandbox::BaselinePolicy"* %39, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox19RestrictSchedTargetEii(i32 %41, i32 %1) #5
  br label %61

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.sandbox::policy::GpuProcessPolicy", %"class.sandbox::policy::GpuProcessPolicy"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.sandbox::BaselinePolicy"*, %"class.sandbox::BaselinePolicy"** %44, align 8
  %46 = getelementptr inbounds %"class.sandbox::BaselinePolicy", %"class.sandbox::BaselinePolicy"* %45, i64 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox17RestrictPrlimit64Ei(i32 %47) #5
  br label %61

49:                                               ; preds = %20, %19, %2
  %50 = call zeroext i1 @_ZN7sandbox11SyscallSets21IsSystemVSharedMemoryEi(i32 %1) #5
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  br label %61

53:                                               ; preds = %49
  %54 = call %"class.sandbox::policy::SandboxLinux"* @_ZN7sandbox6policy12SandboxLinux11GetInstanceEv() #5
  %55 = call zeroext i1 @_ZNK7sandbox6policy12SandboxLinux25ShouldBrokerHandleSyscallEi(%"class.sandbox::policy::SandboxLinux"* %54, i32 %1) #5
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy12SandboxLinux15HandleViaBrokerEv(%"class.sandbox::policy::SandboxLinux"* %54) #5
  br label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.sandbox::policy::GpuProcessPolicy", %"class.sandbox::policy::GpuProcessPolicy"* %0, i64 0, i32 0
  %60 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy15EvaluateSyscallEi(%"class.sandbox::policy::BPFBasePolicy"* %59, i32 %1) #5
  br label %61

61:                                               ; preds = %29, %56, %58, %51, %43, %37, %35, %33, %31, %7, %5
  %62 = phi { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } [ %30, %29 ], [ %57, %56 ], [ %60, %58 ], [ %52, %51 ], [ %48, %43 ], [ %42, %37 ], [ %36, %35 ], [ %34, %33 ], [ %32, %31 ], [ %8, %7 ], [ %6, %5 ]
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %62
}

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5ErrorEi(i32) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox19RestrictSchedTargetEii(i32, i32) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox17RestrictPrlimit64Ei(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN7sandbox11SyscallSets21IsSystemVSharedMemoryEi(i32) local_unnamed_addr #1

declare %"class.sandbox::policy::SandboxLinux"* @_ZN7sandbox6policy12SandboxLinux11GetInstanceEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK7sandbox6policy12SandboxLinux25ShouldBrokerHandleSyscallEi(%"class.sandbox::policy::SandboxLinux"*, i32) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy12SandboxLinux15HandleViaBrokerEv(%"class.sandbox::policy::SandboxLinux"*) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy15EvaluateSyscallEi(%"class.sandbox::policy::BPFBasePolicy"*, i32) unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy14InvalidSyscallEv(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #1

declare i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32, i64, i64, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
