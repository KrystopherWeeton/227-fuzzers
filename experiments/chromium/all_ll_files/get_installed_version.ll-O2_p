; ModuleID = '../../chrome/browser/upgrade_detector/get_installed_version.cc'
source_filename = "../../chrome/browser/upgrade_detector/get_installed_version.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.InstalledAndCriticalVersion = type { %"class.base::Version", %"class.absl::optional" }
%"class.base::Version" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Version" }

@_ZN27InstalledAndCriticalVersionC1EN4base7VersionE = hidden unnamed_addr alias void (%struct.InstalledAndCriticalVersion*, %"class.base::Version"*), void (%struct.InstalledAndCriticalVersion*, %"class.base::Version"*)* @_ZN27InstalledAndCriticalVersionC2EN4base7VersionE
@_ZN27InstalledAndCriticalVersionC1EN4base7VersionES1_ = hidden unnamed_addr alias void (%struct.InstalledAndCriticalVersion*, %"class.base::Version"*, %"class.base::Version"*), void (%struct.InstalledAndCriticalVersion*, %"class.base::Version"*, %"class.base::Version"*)* @_ZN27InstalledAndCriticalVersionC2EN4base7VersionES1_
@_ZN27InstalledAndCriticalVersionC1EOS_ = hidden unnamed_addr alias void (%struct.InstalledAndCriticalVersion*, %struct.InstalledAndCriticalVersion*), void (%struct.InstalledAndCriticalVersion*, %struct.InstalledAndCriticalVersion*)* @_ZN27InstalledAndCriticalVersionC2EOS_
@_ZN27InstalledAndCriticalVersionD1Ev = hidden unnamed_addr alias void (%struct.InstalledAndCriticalVersion*), void (%struct.InstalledAndCriticalVersion*)* @_ZN27InstalledAndCriticalVersionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27InstalledAndCriticalVersionC2EN4base7VersionE(%struct.InstalledAndCriticalVersion*, %"class.base::Version"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 0
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %3, %"class.base::Version"* dereferenceable(24) %1) #4
  %4 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %union.anon* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #4
  ret void
}

declare void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"*, %"class.base::Version"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27InstalledAndCriticalVersionC2EN4base7VersionES1_(%struct.InstalledAndCriticalVersion*, %"class.base::Version"*, %"class.base::Version"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 0
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %4, %"class.base::Version"* dereferenceable(24) %1) #4
  %5 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %6, %"class.base::Version"* dereferenceable(24) %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27InstalledAndCriticalVersionC2EOS_(%struct.InstalledAndCriticalVersion*, %struct.InstalledAndCriticalVersion* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %1, i64 0, i32 0
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %3, %"class.base::Version"* dereferenceable(24) %4) #4
  %5 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base7VersionC1ERKS0_(%"class.base::Version"* %11, %"class.base::Version"* dereferenceable(24) %10) #4
  store i8 1, i8* %5, align 8
  br label %12

12:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN27InstalledAndCriticalVersionD2Ev(%struct.InstalledAndCriticalVersion*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base7VersionD1Ev(%"class.base::Version"* %6) #4
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %struct.InstalledAndCriticalVersion, %struct.InstalledAndCriticalVersion* %0, i64 0, i32 0
  tail call void @_ZN4base7VersionD1Ev(%"class.base::Version"* %8) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base7VersionD1Ev(%"class.base::Version"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
