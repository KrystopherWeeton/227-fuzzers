; ModuleID = '../../ui/events/gesture_detection/velocity_tracker.cc'
source_filename = "../../ui/events/gesture_detection/velocity_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::VelocityTracker" = type { %"class.base::TimeTicks", %"struct.ui::BitSet32", i32, %"class.std::__1::unique_ptr" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.ui::BitSet32" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::VelocityTrackerStrategy"* }
%"class.ui::VelocityTrackerStrategy" = type { i32 (...)** }
%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy" = type { %"class.ui::VelocityTrackerStrategy", i32, i32, i32, i32, [20 x %"struct.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy::Movement"] }
%"struct.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy::Movement" = type <{ %"class.base::TimeTicks", %"struct.ui::BitSet32", [16 x %"struct.ui::(anonymous namespace)::Position"], [4 x i8] }>
%"struct.ui::(anonymous namespace)::Position" = type { float, float }
%"class.ui::MotionEvent" = type { i32 (...)** }
%"struct.ui::(anonymous namespace)::Estimator" = type { %"class.base::TimeTicks", [5 x float], [5 x float], i32, float }
%"class.base::TimeDelta" = type { i64 }
%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy" = type { %"class.ui::VelocityTrackerStrategy", i32, %"struct.ui::BitSet32", [32 x %"struct.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy::State"] }
%"struct.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy::State" = type <{ %"class.base::TimeTicks", i32, float, float, float, float, float, float, [4 x i8] }>

$_ZN2ui23VelocityTrackerStrategyD2Ev = comdat any

@_ZTVN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::VelocityTrackerStrategy"*)* @_ZN2ui23VelocityTrackerStrategyD2Ev to i8*), i8* bitcast (void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)* @_ZN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyD0Ev to i8*), i8* bitcast (void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)* @_ZN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategy5ClearEv to i8*), i8* bitcast (void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*, i32)* @_ZN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategy13ClearPointersENS_8BitSet32E to i8*), i8* bitcast (void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)* @_ZN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategy11AddMovementERKN4base9TimeTicksENS_8BitSet32EPKNS0_8PositionE to i8*), i8* bitcast (i1 (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*, i32, %"struct.ui::(anonymous namespace)::Estimator"*)* @_ZNK2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategy12GetEstimatorEjPNS0_9EstimatorE to i8*)] }, align 8
@_ZTVN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategyE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::VelocityTrackerStrategy"*)* @_ZN2ui23VelocityTrackerStrategyD2Ev to i8*), i8* bitcast (void (%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"*)* @_ZN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategyD0Ev to i8*), i8* bitcast (void (%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"*)* @_ZN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategy5ClearEv to i8*), i8* bitcast (void (%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"*, i32)* @_ZN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategy13ClearPointersENS_8BitSet32E to i8*), i8* bitcast (void (%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)* @_ZN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategy11AddMovementERKN4base9TimeTicksENS_8BitSet32EPKNS0_8PositionE to i8*), i8* bitcast (i1 (%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"*, i32, %"struct.ui::(anonymous namespace)::Estimator"*)* @_ZNK2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategy12GetEstimatorEjPNS0_9EstimatorE to i8*)] }, align 8

@_ZN2ui15VelocityTrackerC1ENS0_8StrategyE = hidden unnamed_addr alias void (%"class.ui::VelocityTracker"*, i32), void (%"class.ui::VelocityTracker"*, i32)* @_ZN2ui15VelocityTrackerC2ENS0_8StrategyE
@_ZN2ui15VelocityTrackerD1Ev = hidden unnamed_addr alias void (%"class.ui::VelocityTracker"*), void (%"class.ui::VelocityTracker"*)* @_ZN2ui15VelocityTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15VelocityTrackerC2ENS0_8StrategyE(%"class.ui::VelocityTracker"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 2
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3
  switch i32 %1, label %807 [
    i32 0, label %7
    i32 1, label %101
    i32 2, label %195
    i32 3, label %289
    i32 4, label %383
    i32 5, label %477
    i32 6, label %571
    i32 7, label %665
    i32 8, label %736
  ]

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 2904) #10
  %9 = bitcast i8* %8 to %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 32
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %8, i64 168
  %22 = bitcast i8* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %8, i64 176
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %8, i64 312
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %8, i64 320
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %8, i64 456
  %30 = bitcast i8* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %8, i64 464
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %8, i64 600
  %34 = bitcast i8* %33 to i64*
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %8, i64 608
  %36 = bitcast i8* %35 to i32*
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %8, i64 744
  %38 = bitcast i8* %37 to i64*
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %8, i64 752
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %8, i64 888
  %42 = bitcast i8* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %8, i64 896
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %8, i64 1032
  %46 = bitcast i8* %45 to i64*
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %8, i64 1040
  %48 = bitcast i8* %47 to i32*
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %8, i64 1176
  %50 = bitcast i8* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %8, i64 1184
  %52 = bitcast i8* %51 to i32*
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %8, i64 1320
  %54 = bitcast i8* %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %8, i64 1328
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %8, i64 1464
  %58 = bitcast i8* %57 to i64*
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds i8, i8* %8, i64 1472
  %60 = bitcast i8* %59 to i32*
  store i32 0, i32* %60, align 4
  %61 = getelementptr inbounds i8, i8* %8, i64 1608
  %62 = bitcast i8* %61 to i64*
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %8, i64 1616
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %8, i64 1752
  %66 = bitcast i8* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %8, i64 1760
  %68 = bitcast i8* %67 to i32*
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %8, i64 1896
  %70 = bitcast i8* %69 to i64*
  store i64 0, i64* %70, align 8
  %71 = getelementptr inbounds i8, i8* %8, i64 1904
  %72 = bitcast i8* %71 to i32*
  store i32 0, i32* %72, align 4
  %73 = getelementptr inbounds i8, i8* %8, i64 2040
  %74 = bitcast i8* %73 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %8, i64 2048
  %76 = bitcast i8* %75 to i32*
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds i8, i8* %8, i64 2184
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %8, i64 2192
  %80 = bitcast i8* %79 to i32*
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds i8, i8* %8, i64 2328
  %82 = bitcast i8* %81 to i64*
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds i8, i8* %8, i64 2336
  %84 = bitcast i8* %83 to i32*
  store i32 0, i32* %84, align 4
  %85 = getelementptr inbounds i8, i8* %8, i64 2472
  %86 = bitcast i8* %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds i8, i8* %8, i64 2480
  %88 = bitcast i8* %87 to i32*
  store i32 0, i32* %88, align 4
  %89 = getelementptr inbounds i8, i8* %8, i64 2616
  %90 = bitcast i8* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds i8, i8* %8, i64 2624
  %92 = bitcast i8* %91 to i32*
  store i32 0, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %8, i64 2760
  %94 = bitcast i8* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %8, i64 2768
  %96 = bitcast i8* %95 to i32*
  store i32 0, i32* %96, align 4
  %97 = bitcast i8* %8 to void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)***
  %98 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)**, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %98, i64 2
  %100 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %99, align 8
  tail call void %100(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nonnull %9) #11
  br label %901

101:                                              ; preds = %2
  %102 = tail call i8* @_Znwm(i64 2904) #10
  %103 = bitcast i8* %102 to %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*
  %104 = bitcast i8* %102 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %104, align 8
  %105 = getelementptr inbounds i8, i8* %102, i64 8
  %106 = bitcast i8* %105 to i32*
  store i32 2, i32* %106, align 8
  %107 = getelementptr inbounds i8, i8* %102, i64 12
  %108 = bitcast i8* %107 to i32*
  store i32 0, i32* %108, align 4
  %109 = getelementptr inbounds i8, i8* %102, i64 16
  %110 = bitcast i8* %109 to i32*
  store i32 0, i32* %110, align 8
  %111 = getelementptr inbounds i8, i8* %102, i64 24
  %112 = bitcast i8* %111 to i64*
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %102, i64 32
  %114 = bitcast i8* %113 to i32*
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds i8, i8* %102, i64 168
  %116 = bitcast i8* %115 to i64*
  store i64 0, i64* %116, align 8
  %117 = getelementptr inbounds i8, i8* %102, i64 176
  %118 = bitcast i8* %117 to i32*
  store i32 0, i32* %118, align 4
  %119 = getelementptr inbounds i8, i8* %102, i64 312
  %120 = bitcast i8* %119 to i64*
  store i64 0, i64* %120, align 8
  %121 = getelementptr inbounds i8, i8* %102, i64 320
  %122 = bitcast i8* %121 to i32*
  store i32 0, i32* %122, align 4
  %123 = getelementptr inbounds i8, i8* %102, i64 456
  %124 = bitcast i8* %123 to i64*
  store i64 0, i64* %124, align 8
  %125 = getelementptr inbounds i8, i8* %102, i64 464
  %126 = bitcast i8* %125 to i32*
  store i32 0, i32* %126, align 4
  %127 = getelementptr inbounds i8, i8* %102, i64 600
  %128 = bitcast i8* %127 to i64*
  store i64 0, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %102, i64 608
  %130 = bitcast i8* %129 to i32*
  store i32 0, i32* %130, align 4
  %131 = getelementptr inbounds i8, i8* %102, i64 744
  %132 = bitcast i8* %131 to i64*
  store i64 0, i64* %132, align 8
  %133 = getelementptr inbounds i8, i8* %102, i64 752
  %134 = bitcast i8* %133 to i32*
  store i32 0, i32* %134, align 4
  %135 = getelementptr inbounds i8, i8* %102, i64 888
  %136 = bitcast i8* %135 to i64*
  store i64 0, i64* %136, align 8
  %137 = getelementptr inbounds i8, i8* %102, i64 896
  %138 = bitcast i8* %137 to i32*
  store i32 0, i32* %138, align 4
  %139 = getelementptr inbounds i8, i8* %102, i64 1032
  %140 = bitcast i8* %139 to i64*
  store i64 0, i64* %140, align 8
  %141 = getelementptr inbounds i8, i8* %102, i64 1040
  %142 = bitcast i8* %141 to i32*
  store i32 0, i32* %142, align 4
  %143 = getelementptr inbounds i8, i8* %102, i64 1176
  %144 = bitcast i8* %143 to i64*
  store i64 0, i64* %144, align 8
  %145 = getelementptr inbounds i8, i8* %102, i64 1184
  %146 = bitcast i8* %145 to i32*
  store i32 0, i32* %146, align 4
  %147 = getelementptr inbounds i8, i8* %102, i64 1320
  %148 = bitcast i8* %147 to i64*
  store i64 0, i64* %148, align 8
  %149 = getelementptr inbounds i8, i8* %102, i64 1328
  %150 = bitcast i8* %149 to i32*
  store i32 0, i32* %150, align 4
  %151 = getelementptr inbounds i8, i8* %102, i64 1464
  %152 = bitcast i8* %151 to i64*
  store i64 0, i64* %152, align 8
  %153 = getelementptr inbounds i8, i8* %102, i64 1472
  %154 = bitcast i8* %153 to i32*
  store i32 0, i32* %154, align 4
  %155 = getelementptr inbounds i8, i8* %102, i64 1608
  %156 = bitcast i8* %155 to i64*
  store i64 0, i64* %156, align 8
  %157 = getelementptr inbounds i8, i8* %102, i64 1616
  %158 = bitcast i8* %157 to i32*
  store i32 0, i32* %158, align 4
  %159 = getelementptr inbounds i8, i8* %102, i64 1752
  %160 = bitcast i8* %159 to i64*
  store i64 0, i64* %160, align 8
  %161 = getelementptr inbounds i8, i8* %102, i64 1760
  %162 = bitcast i8* %161 to i32*
  store i32 0, i32* %162, align 4
  %163 = getelementptr inbounds i8, i8* %102, i64 1896
  %164 = bitcast i8* %163 to i64*
  store i64 0, i64* %164, align 8
  %165 = getelementptr inbounds i8, i8* %102, i64 1904
  %166 = bitcast i8* %165 to i32*
  store i32 0, i32* %166, align 4
  %167 = getelementptr inbounds i8, i8* %102, i64 2040
  %168 = bitcast i8* %167 to i64*
  store i64 0, i64* %168, align 8
  %169 = getelementptr inbounds i8, i8* %102, i64 2048
  %170 = bitcast i8* %169 to i32*
  store i32 0, i32* %170, align 4
  %171 = getelementptr inbounds i8, i8* %102, i64 2184
  %172 = bitcast i8* %171 to i64*
  store i64 0, i64* %172, align 8
  %173 = getelementptr inbounds i8, i8* %102, i64 2192
  %174 = bitcast i8* %173 to i32*
  store i32 0, i32* %174, align 4
  %175 = getelementptr inbounds i8, i8* %102, i64 2328
  %176 = bitcast i8* %175 to i64*
  store i64 0, i64* %176, align 8
  %177 = getelementptr inbounds i8, i8* %102, i64 2336
  %178 = bitcast i8* %177 to i32*
  store i32 0, i32* %178, align 4
  %179 = getelementptr inbounds i8, i8* %102, i64 2472
  %180 = bitcast i8* %179 to i64*
  store i64 0, i64* %180, align 8
  %181 = getelementptr inbounds i8, i8* %102, i64 2480
  %182 = bitcast i8* %181 to i32*
  store i32 0, i32* %182, align 4
  %183 = getelementptr inbounds i8, i8* %102, i64 2616
  %184 = bitcast i8* %183 to i64*
  store i64 0, i64* %184, align 8
  %185 = getelementptr inbounds i8, i8* %102, i64 2624
  %186 = bitcast i8* %185 to i32*
  store i32 0, i32* %186, align 4
  %187 = getelementptr inbounds i8, i8* %102, i64 2760
  %188 = bitcast i8* %187 to i64*
  store i64 0, i64* %188, align 8
  %189 = getelementptr inbounds i8, i8* %102, i64 2768
  %190 = bitcast i8* %189 to i32*
  store i32 0, i32* %190, align 4
  %191 = bitcast i8* %102 to void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)***
  %192 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)**, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %192, i64 2
  %194 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %193, align 8
  tail call void %194(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nonnull %103) #11
  br label %901

195:                                              ; preds = %2
  %196 = tail call i8* @_Znwm(i64 2904) #10
  %197 = bitcast i8* %196 to %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*
  %198 = bitcast i8* %196 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %198, align 8
  %199 = getelementptr inbounds i8, i8* %196, i64 8
  %200 = bitcast i8* %199 to i32*
  store i32 2, i32* %200, align 8
  %201 = getelementptr inbounds i8, i8* %196, i64 12
  %202 = bitcast i8* %201 to i32*
  store i32 0, i32* %202, align 4
  %203 = getelementptr inbounds i8, i8* %196, i64 16
  %204 = bitcast i8* %203 to i32*
  store i32 1, i32* %204, align 8
  %205 = getelementptr inbounds i8, i8* %196, i64 24
  %206 = bitcast i8* %205 to i64*
  store i64 0, i64* %206, align 8
  %207 = getelementptr inbounds i8, i8* %196, i64 32
  %208 = bitcast i8* %207 to i32*
  store i32 0, i32* %208, align 4
  %209 = getelementptr inbounds i8, i8* %196, i64 168
  %210 = bitcast i8* %209 to i64*
  store i64 0, i64* %210, align 8
  %211 = getelementptr inbounds i8, i8* %196, i64 176
  %212 = bitcast i8* %211 to i32*
  store i32 0, i32* %212, align 4
  %213 = getelementptr inbounds i8, i8* %196, i64 312
  %214 = bitcast i8* %213 to i64*
  store i64 0, i64* %214, align 8
  %215 = getelementptr inbounds i8, i8* %196, i64 320
  %216 = bitcast i8* %215 to i32*
  store i32 0, i32* %216, align 4
  %217 = getelementptr inbounds i8, i8* %196, i64 456
  %218 = bitcast i8* %217 to i64*
  store i64 0, i64* %218, align 8
  %219 = getelementptr inbounds i8, i8* %196, i64 464
  %220 = bitcast i8* %219 to i32*
  store i32 0, i32* %220, align 4
  %221 = getelementptr inbounds i8, i8* %196, i64 600
  %222 = bitcast i8* %221 to i64*
  store i64 0, i64* %222, align 8
  %223 = getelementptr inbounds i8, i8* %196, i64 608
  %224 = bitcast i8* %223 to i32*
  store i32 0, i32* %224, align 4
  %225 = getelementptr inbounds i8, i8* %196, i64 744
  %226 = bitcast i8* %225 to i64*
  store i64 0, i64* %226, align 8
  %227 = getelementptr inbounds i8, i8* %196, i64 752
  %228 = bitcast i8* %227 to i32*
  store i32 0, i32* %228, align 4
  %229 = getelementptr inbounds i8, i8* %196, i64 888
  %230 = bitcast i8* %229 to i64*
  store i64 0, i64* %230, align 8
  %231 = getelementptr inbounds i8, i8* %196, i64 896
  %232 = bitcast i8* %231 to i32*
  store i32 0, i32* %232, align 4
  %233 = getelementptr inbounds i8, i8* %196, i64 1032
  %234 = bitcast i8* %233 to i64*
  store i64 0, i64* %234, align 8
  %235 = getelementptr inbounds i8, i8* %196, i64 1040
  %236 = bitcast i8* %235 to i32*
  store i32 0, i32* %236, align 4
  %237 = getelementptr inbounds i8, i8* %196, i64 1176
  %238 = bitcast i8* %237 to i64*
  store i64 0, i64* %238, align 8
  %239 = getelementptr inbounds i8, i8* %196, i64 1184
  %240 = bitcast i8* %239 to i32*
  store i32 0, i32* %240, align 4
  %241 = getelementptr inbounds i8, i8* %196, i64 1320
  %242 = bitcast i8* %241 to i64*
  store i64 0, i64* %242, align 8
  %243 = getelementptr inbounds i8, i8* %196, i64 1328
  %244 = bitcast i8* %243 to i32*
  store i32 0, i32* %244, align 4
  %245 = getelementptr inbounds i8, i8* %196, i64 1464
  %246 = bitcast i8* %245 to i64*
  store i64 0, i64* %246, align 8
  %247 = getelementptr inbounds i8, i8* %196, i64 1472
  %248 = bitcast i8* %247 to i32*
  store i32 0, i32* %248, align 4
  %249 = getelementptr inbounds i8, i8* %196, i64 1608
  %250 = bitcast i8* %249 to i64*
  store i64 0, i64* %250, align 8
  %251 = getelementptr inbounds i8, i8* %196, i64 1616
  %252 = bitcast i8* %251 to i32*
  store i32 0, i32* %252, align 4
  %253 = getelementptr inbounds i8, i8* %196, i64 1752
  %254 = bitcast i8* %253 to i64*
  store i64 0, i64* %254, align 8
  %255 = getelementptr inbounds i8, i8* %196, i64 1760
  %256 = bitcast i8* %255 to i32*
  store i32 0, i32* %256, align 4
  %257 = getelementptr inbounds i8, i8* %196, i64 1896
  %258 = bitcast i8* %257 to i64*
  store i64 0, i64* %258, align 8
  %259 = getelementptr inbounds i8, i8* %196, i64 1904
  %260 = bitcast i8* %259 to i32*
  store i32 0, i32* %260, align 4
  %261 = getelementptr inbounds i8, i8* %196, i64 2040
  %262 = bitcast i8* %261 to i64*
  store i64 0, i64* %262, align 8
  %263 = getelementptr inbounds i8, i8* %196, i64 2048
  %264 = bitcast i8* %263 to i32*
  store i32 0, i32* %264, align 4
  %265 = getelementptr inbounds i8, i8* %196, i64 2184
  %266 = bitcast i8* %265 to i64*
  store i64 0, i64* %266, align 8
  %267 = getelementptr inbounds i8, i8* %196, i64 2192
  %268 = bitcast i8* %267 to i32*
  store i32 0, i32* %268, align 4
  %269 = getelementptr inbounds i8, i8* %196, i64 2328
  %270 = bitcast i8* %269 to i64*
  store i64 0, i64* %270, align 8
  %271 = getelementptr inbounds i8, i8* %196, i64 2336
  %272 = bitcast i8* %271 to i32*
  store i32 0, i32* %272, align 4
  %273 = getelementptr inbounds i8, i8* %196, i64 2472
  %274 = bitcast i8* %273 to i64*
  store i64 0, i64* %274, align 8
  %275 = getelementptr inbounds i8, i8* %196, i64 2480
  %276 = bitcast i8* %275 to i32*
  store i32 0, i32* %276, align 4
  %277 = getelementptr inbounds i8, i8* %196, i64 2616
  %278 = bitcast i8* %277 to i64*
  store i64 0, i64* %278, align 8
  %279 = getelementptr inbounds i8, i8* %196, i64 2624
  %280 = bitcast i8* %279 to i32*
  store i32 0, i32* %280, align 4
  %281 = getelementptr inbounds i8, i8* %196, i64 2760
  %282 = bitcast i8* %281 to i64*
  store i64 0, i64* %282, align 8
  %283 = getelementptr inbounds i8, i8* %196, i64 2768
  %284 = bitcast i8* %283 to i32*
  store i32 0, i32* %284, align 4
  %285 = bitcast i8* %196 to void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)***
  %286 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)**, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*** %285, align 8
  %287 = getelementptr inbounds void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %286, i64 2
  %288 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %287, align 8
  tail call void %288(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nonnull %197) #11
  br label %901

289:                                              ; preds = %2
  %290 = tail call i8* @_Znwm(i64 2904) #10
  %291 = bitcast i8* %290 to %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*
  %292 = bitcast i8* %290 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %292, align 8
  %293 = getelementptr inbounds i8, i8* %290, i64 8
  %294 = bitcast i8* %293 to i32*
  store i32 3, i32* %294, align 8
  %295 = getelementptr inbounds i8, i8* %290, i64 12
  %296 = bitcast i8* %295 to i32*
  store i32 0, i32* %296, align 4
  %297 = getelementptr inbounds i8, i8* %290, i64 16
  %298 = bitcast i8* %297 to i32*
  store i32 0, i32* %298, align 8
  %299 = getelementptr inbounds i8, i8* %290, i64 24
  %300 = bitcast i8* %299 to i64*
  store i64 0, i64* %300, align 8
  %301 = getelementptr inbounds i8, i8* %290, i64 32
  %302 = bitcast i8* %301 to i32*
  store i32 0, i32* %302, align 4
  %303 = getelementptr inbounds i8, i8* %290, i64 168
  %304 = bitcast i8* %303 to i64*
  store i64 0, i64* %304, align 8
  %305 = getelementptr inbounds i8, i8* %290, i64 176
  %306 = bitcast i8* %305 to i32*
  store i32 0, i32* %306, align 4
  %307 = getelementptr inbounds i8, i8* %290, i64 312
  %308 = bitcast i8* %307 to i64*
  store i64 0, i64* %308, align 8
  %309 = getelementptr inbounds i8, i8* %290, i64 320
  %310 = bitcast i8* %309 to i32*
  store i32 0, i32* %310, align 4
  %311 = getelementptr inbounds i8, i8* %290, i64 456
  %312 = bitcast i8* %311 to i64*
  store i64 0, i64* %312, align 8
  %313 = getelementptr inbounds i8, i8* %290, i64 464
  %314 = bitcast i8* %313 to i32*
  store i32 0, i32* %314, align 4
  %315 = getelementptr inbounds i8, i8* %290, i64 600
  %316 = bitcast i8* %315 to i64*
  store i64 0, i64* %316, align 8
  %317 = getelementptr inbounds i8, i8* %290, i64 608
  %318 = bitcast i8* %317 to i32*
  store i32 0, i32* %318, align 4
  %319 = getelementptr inbounds i8, i8* %290, i64 744
  %320 = bitcast i8* %319 to i64*
  store i64 0, i64* %320, align 8
  %321 = getelementptr inbounds i8, i8* %290, i64 752
  %322 = bitcast i8* %321 to i32*
  store i32 0, i32* %322, align 4
  %323 = getelementptr inbounds i8, i8* %290, i64 888
  %324 = bitcast i8* %323 to i64*
  store i64 0, i64* %324, align 8
  %325 = getelementptr inbounds i8, i8* %290, i64 896
  %326 = bitcast i8* %325 to i32*
  store i32 0, i32* %326, align 4
  %327 = getelementptr inbounds i8, i8* %290, i64 1032
  %328 = bitcast i8* %327 to i64*
  store i64 0, i64* %328, align 8
  %329 = getelementptr inbounds i8, i8* %290, i64 1040
  %330 = bitcast i8* %329 to i32*
  store i32 0, i32* %330, align 4
  %331 = getelementptr inbounds i8, i8* %290, i64 1176
  %332 = bitcast i8* %331 to i64*
  store i64 0, i64* %332, align 8
  %333 = getelementptr inbounds i8, i8* %290, i64 1184
  %334 = bitcast i8* %333 to i32*
  store i32 0, i32* %334, align 4
  %335 = getelementptr inbounds i8, i8* %290, i64 1320
  %336 = bitcast i8* %335 to i64*
  store i64 0, i64* %336, align 8
  %337 = getelementptr inbounds i8, i8* %290, i64 1328
  %338 = bitcast i8* %337 to i32*
  store i32 0, i32* %338, align 4
  %339 = getelementptr inbounds i8, i8* %290, i64 1464
  %340 = bitcast i8* %339 to i64*
  store i64 0, i64* %340, align 8
  %341 = getelementptr inbounds i8, i8* %290, i64 1472
  %342 = bitcast i8* %341 to i32*
  store i32 0, i32* %342, align 4
  %343 = getelementptr inbounds i8, i8* %290, i64 1608
  %344 = bitcast i8* %343 to i64*
  store i64 0, i64* %344, align 8
  %345 = getelementptr inbounds i8, i8* %290, i64 1616
  %346 = bitcast i8* %345 to i32*
  store i32 0, i32* %346, align 4
  %347 = getelementptr inbounds i8, i8* %290, i64 1752
  %348 = bitcast i8* %347 to i64*
  store i64 0, i64* %348, align 8
  %349 = getelementptr inbounds i8, i8* %290, i64 1760
  %350 = bitcast i8* %349 to i32*
  store i32 0, i32* %350, align 4
  %351 = getelementptr inbounds i8, i8* %290, i64 1896
  %352 = bitcast i8* %351 to i64*
  store i64 0, i64* %352, align 8
  %353 = getelementptr inbounds i8, i8* %290, i64 1904
  %354 = bitcast i8* %353 to i32*
  store i32 0, i32* %354, align 4
  %355 = getelementptr inbounds i8, i8* %290, i64 2040
  %356 = bitcast i8* %355 to i64*
  store i64 0, i64* %356, align 8
  %357 = getelementptr inbounds i8, i8* %290, i64 2048
  %358 = bitcast i8* %357 to i32*
  store i32 0, i32* %358, align 4
  %359 = getelementptr inbounds i8, i8* %290, i64 2184
  %360 = bitcast i8* %359 to i64*
  store i64 0, i64* %360, align 8
  %361 = getelementptr inbounds i8, i8* %290, i64 2192
  %362 = bitcast i8* %361 to i32*
  store i32 0, i32* %362, align 4
  %363 = getelementptr inbounds i8, i8* %290, i64 2328
  %364 = bitcast i8* %363 to i64*
  store i64 0, i64* %364, align 8
  %365 = getelementptr inbounds i8, i8* %290, i64 2336
  %366 = bitcast i8* %365 to i32*
  store i32 0, i32* %366, align 4
  %367 = getelementptr inbounds i8, i8* %290, i64 2472
  %368 = bitcast i8* %367 to i64*
  store i64 0, i64* %368, align 8
  %369 = getelementptr inbounds i8, i8* %290, i64 2480
  %370 = bitcast i8* %369 to i32*
  store i32 0, i32* %370, align 4
  %371 = getelementptr inbounds i8, i8* %290, i64 2616
  %372 = bitcast i8* %371 to i64*
  store i64 0, i64* %372, align 8
  %373 = getelementptr inbounds i8, i8* %290, i64 2624
  %374 = bitcast i8* %373 to i32*
  store i32 0, i32* %374, align 4
  %375 = getelementptr inbounds i8, i8* %290, i64 2760
  %376 = bitcast i8* %375 to i64*
  store i64 0, i64* %376, align 8
  %377 = getelementptr inbounds i8, i8* %290, i64 2768
  %378 = bitcast i8* %377 to i32*
  store i32 0, i32* %378, align 4
  %379 = bitcast i8* %290 to void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)***
  %380 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)**, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*** %379, align 8
  %381 = getelementptr inbounds void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %380, i64 2
  %382 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %381, align 8
  tail call void %382(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nonnull %291) #11
  br label %901

383:                                              ; preds = %2
  %384 = tail call i8* @_Znwm(i64 2904) #10
  %385 = bitcast i8* %384 to %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*
  %386 = bitcast i8* %384 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %386, align 8
  %387 = getelementptr inbounds i8, i8* %384, i64 8
  %388 = bitcast i8* %387 to i32*
  store i32 2, i32* %388, align 8
  %389 = getelementptr inbounds i8, i8* %384, i64 12
  %390 = bitcast i8* %389 to i32*
  store i32 1, i32* %390, align 4
  %391 = getelementptr inbounds i8, i8* %384, i64 16
  %392 = bitcast i8* %391 to i32*
  store i32 0, i32* %392, align 8
  %393 = getelementptr inbounds i8, i8* %384, i64 24
  %394 = bitcast i8* %393 to i64*
  store i64 0, i64* %394, align 8
  %395 = getelementptr inbounds i8, i8* %384, i64 32
  %396 = bitcast i8* %395 to i32*
  store i32 0, i32* %396, align 4
  %397 = getelementptr inbounds i8, i8* %384, i64 168
  %398 = bitcast i8* %397 to i64*
  store i64 0, i64* %398, align 8
  %399 = getelementptr inbounds i8, i8* %384, i64 176
  %400 = bitcast i8* %399 to i32*
  store i32 0, i32* %400, align 4
  %401 = getelementptr inbounds i8, i8* %384, i64 312
  %402 = bitcast i8* %401 to i64*
  store i64 0, i64* %402, align 8
  %403 = getelementptr inbounds i8, i8* %384, i64 320
  %404 = bitcast i8* %403 to i32*
  store i32 0, i32* %404, align 4
  %405 = getelementptr inbounds i8, i8* %384, i64 456
  %406 = bitcast i8* %405 to i64*
  store i64 0, i64* %406, align 8
  %407 = getelementptr inbounds i8, i8* %384, i64 464
  %408 = bitcast i8* %407 to i32*
  store i32 0, i32* %408, align 4
  %409 = getelementptr inbounds i8, i8* %384, i64 600
  %410 = bitcast i8* %409 to i64*
  store i64 0, i64* %410, align 8
  %411 = getelementptr inbounds i8, i8* %384, i64 608
  %412 = bitcast i8* %411 to i32*
  store i32 0, i32* %412, align 4
  %413 = getelementptr inbounds i8, i8* %384, i64 744
  %414 = bitcast i8* %413 to i64*
  store i64 0, i64* %414, align 8
  %415 = getelementptr inbounds i8, i8* %384, i64 752
  %416 = bitcast i8* %415 to i32*
  store i32 0, i32* %416, align 4
  %417 = getelementptr inbounds i8, i8* %384, i64 888
  %418 = bitcast i8* %417 to i64*
  store i64 0, i64* %418, align 8
  %419 = getelementptr inbounds i8, i8* %384, i64 896
  %420 = bitcast i8* %419 to i32*
  store i32 0, i32* %420, align 4
  %421 = getelementptr inbounds i8, i8* %384, i64 1032
  %422 = bitcast i8* %421 to i64*
  store i64 0, i64* %422, align 8
  %423 = getelementptr inbounds i8, i8* %384, i64 1040
  %424 = bitcast i8* %423 to i32*
  store i32 0, i32* %424, align 4
  %425 = getelementptr inbounds i8, i8* %384, i64 1176
  %426 = bitcast i8* %425 to i64*
  store i64 0, i64* %426, align 8
  %427 = getelementptr inbounds i8, i8* %384, i64 1184
  %428 = bitcast i8* %427 to i32*
  store i32 0, i32* %428, align 4
  %429 = getelementptr inbounds i8, i8* %384, i64 1320
  %430 = bitcast i8* %429 to i64*
  store i64 0, i64* %430, align 8
  %431 = getelementptr inbounds i8, i8* %384, i64 1328
  %432 = bitcast i8* %431 to i32*
  store i32 0, i32* %432, align 4
  %433 = getelementptr inbounds i8, i8* %384, i64 1464
  %434 = bitcast i8* %433 to i64*
  store i64 0, i64* %434, align 8
  %435 = getelementptr inbounds i8, i8* %384, i64 1472
  %436 = bitcast i8* %435 to i32*
  store i32 0, i32* %436, align 4
  %437 = getelementptr inbounds i8, i8* %384, i64 1608
  %438 = bitcast i8* %437 to i64*
  store i64 0, i64* %438, align 8
  %439 = getelementptr inbounds i8, i8* %384, i64 1616
  %440 = bitcast i8* %439 to i32*
  store i32 0, i32* %440, align 4
  %441 = getelementptr inbounds i8, i8* %384, i64 1752
  %442 = bitcast i8* %441 to i64*
  store i64 0, i64* %442, align 8
  %443 = getelementptr inbounds i8, i8* %384, i64 1760
  %444 = bitcast i8* %443 to i32*
  store i32 0, i32* %444, align 4
  %445 = getelementptr inbounds i8, i8* %384, i64 1896
  %446 = bitcast i8* %445 to i64*
  store i64 0, i64* %446, align 8
  %447 = getelementptr inbounds i8, i8* %384, i64 1904
  %448 = bitcast i8* %447 to i32*
  store i32 0, i32* %448, align 4
  %449 = getelementptr inbounds i8, i8* %384, i64 2040
  %450 = bitcast i8* %449 to i64*
  store i64 0, i64* %450, align 8
  %451 = getelementptr inbounds i8, i8* %384, i64 2048
  %452 = bitcast i8* %451 to i32*
  store i32 0, i32* %452, align 4
  %453 = getelementptr inbounds i8, i8* %384, i64 2184
  %454 = bitcast i8* %453 to i64*
  store i64 0, i64* %454, align 8
  %455 = getelementptr inbounds i8, i8* %384, i64 2192
  %456 = bitcast i8* %455 to i32*
  store i32 0, i32* %456, align 4
  %457 = getelementptr inbounds i8, i8* %384, i64 2328
  %458 = bitcast i8* %457 to i64*
  store i64 0, i64* %458, align 8
  %459 = getelementptr inbounds i8, i8* %384, i64 2336
  %460 = bitcast i8* %459 to i32*
  store i32 0, i32* %460, align 4
  %461 = getelementptr inbounds i8, i8* %384, i64 2472
  %462 = bitcast i8* %461 to i64*
  store i64 0, i64* %462, align 8
  %463 = getelementptr inbounds i8, i8* %384, i64 2480
  %464 = bitcast i8* %463 to i32*
  store i32 0, i32* %464, align 4
  %465 = getelementptr inbounds i8, i8* %384, i64 2616
  %466 = bitcast i8* %465 to i64*
  store i64 0, i64* %466, align 8
  %467 = getelementptr inbounds i8, i8* %384, i64 2624
  %468 = bitcast i8* %467 to i32*
  store i32 0, i32* %468, align 4
  %469 = getelementptr inbounds i8, i8* %384, i64 2760
  %470 = bitcast i8* %469 to i64*
  store i64 0, i64* %470, align 8
  %471 = getelementptr inbounds i8, i8* %384, i64 2768
  %472 = bitcast i8* %471 to i32*
  store i32 0, i32* %472, align 4
  %473 = bitcast i8* %384 to void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)***
  %474 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)**, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*** %473, align 8
  %475 = getelementptr inbounds void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %474, i64 2
  %476 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %475, align 8
  tail call void %476(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nonnull %385) #11
  br label %901

477:                                              ; preds = %2
  %478 = tail call i8* @_Znwm(i64 2904) #10
  %479 = bitcast i8* %478 to %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*
  %480 = bitcast i8* %478 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %480, align 8
  %481 = getelementptr inbounds i8, i8* %478, i64 8
  %482 = bitcast i8* %481 to i32*
  store i32 2, i32* %482, align 8
  %483 = getelementptr inbounds i8, i8* %478, i64 12
  %484 = bitcast i8* %483 to i32*
  store i32 2, i32* %484, align 4
  %485 = getelementptr inbounds i8, i8* %478, i64 16
  %486 = bitcast i8* %485 to i32*
  store i32 0, i32* %486, align 8
  %487 = getelementptr inbounds i8, i8* %478, i64 24
  %488 = bitcast i8* %487 to i64*
  store i64 0, i64* %488, align 8
  %489 = getelementptr inbounds i8, i8* %478, i64 32
  %490 = bitcast i8* %489 to i32*
  store i32 0, i32* %490, align 4
  %491 = getelementptr inbounds i8, i8* %478, i64 168
  %492 = bitcast i8* %491 to i64*
  store i64 0, i64* %492, align 8
  %493 = getelementptr inbounds i8, i8* %478, i64 176
  %494 = bitcast i8* %493 to i32*
  store i32 0, i32* %494, align 4
  %495 = getelementptr inbounds i8, i8* %478, i64 312
  %496 = bitcast i8* %495 to i64*
  store i64 0, i64* %496, align 8
  %497 = getelementptr inbounds i8, i8* %478, i64 320
  %498 = bitcast i8* %497 to i32*
  store i32 0, i32* %498, align 4
  %499 = getelementptr inbounds i8, i8* %478, i64 456
  %500 = bitcast i8* %499 to i64*
  store i64 0, i64* %500, align 8
  %501 = getelementptr inbounds i8, i8* %478, i64 464
  %502 = bitcast i8* %501 to i32*
  store i32 0, i32* %502, align 4
  %503 = getelementptr inbounds i8, i8* %478, i64 600
  %504 = bitcast i8* %503 to i64*
  store i64 0, i64* %504, align 8
  %505 = getelementptr inbounds i8, i8* %478, i64 608
  %506 = bitcast i8* %505 to i32*
  store i32 0, i32* %506, align 4
  %507 = getelementptr inbounds i8, i8* %478, i64 744
  %508 = bitcast i8* %507 to i64*
  store i64 0, i64* %508, align 8
  %509 = getelementptr inbounds i8, i8* %478, i64 752
  %510 = bitcast i8* %509 to i32*
  store i32 0, i32* %510, align 4
  %511 = getelementptr inbounds i8, i8* %478, i64 888
  %512 = bitcast i8* %511 to i64*
  store i64 0, i64* %512, align 8
  %513 = getelementptr inbounds i8, i8* %478, i64 896
  %514 = bitcast i8* %513 to i32*
  store i32 0, i32* %514, align 4
  %515 = getelementptr inbounds i8, i8* %478, i64 1032
  %516 = bitcast i8* %515 to i64*
  store i64 0, i64* %516, align 8
  %517 = getelementptr inbounds i8, i8* %478, i64 1040
  %518 = bitcast i8* %517 to i32*
  store i32 0, i32* %518, align 4
  %519 = getelementptr inbounds i8, i8* %478, i64 1176
  %520 = bitcast i8* %519 to i64*
  store i64 0, i64* %520, align 8
  %521 = getelementptr inbounds i8, i8* %478, i64 1184
  %522 = bitcast i8* %521 to i32*
  store i32 0, i32* %522, align 4
  %523 = getelementptr inbounds i8, i8* %478, i64 1320
  %524 = bitcast i8* %523 to i64*
  store i64 0, i64* %524, align 8
  %525 = getelementptr inbounds i8, i8* %478, i64 1328
  %526 = bitcast i8* %525 to i32*
  store i32 0, i32* %526, align 4
  %527 = getelementptr inbounds i8, i8* %478, i64 1464
  %528 = bitcast i8* %527 to i64*
  store i64 0, i64* %528, align 8
  %529 = getelementptr inbounds i8, i8* %478, i64 1472
  %530 = bitcast i8* %529 to i32*
  store i32 0, i32* %530, align 4
  %531 = getelementptr inbounds i8, i8* %478, i64 1608
  %532 = bitcast i8* %531 to i64*
  store i64 0, i64* %532, align 8
  %533 = getelementptr inbounds i8, i8* %478, i64 1616
  %534 = bitcast i8* %533 to i32*
  store i32 0, i32* %534, align 4
  %535 = getelementptr inbounds i8, i8* %478, i64 1752
  %536 = bitcast i8* %535 to i64*
  store i64 0, i64* %536, align 8
  %537 = getelementptr inbounds i8, i8* %478, i64 1760
  %538 = bitcast i8* %537 to i32*
  store i32 0, i32* %538, align 4
  %539 = getelementptr inbounds i8, i8* %478, i64 1896
  %540 = bitcast i8* %539 to i64*
  store i64 0, i64* %540, align 8
  %541 = getelementptr inbounds i8, i8* %478, i64 1904
  %542 = bitcast i8* %541 to i32*
  store i32 0, i32* %542, align 4
  %543 = getelementptr inbounds i8, i8* %478, i64 2040
  %544 = bitcast i8* %543 to i64*
  store i64 0, i64* %544, align 8
  %545 = getelementptr inbounds i8, i8* %478, i64 2048
  %546 = bitcast i8* %545 to i32*
  store i32 0, i32* %546, align 4
  %547 = getelementptr inbounds i8, i8* %478, i64 2184
  %548 = bitcast i8* %547 to i64*
  store i64 0, i64* %548, align 8
  %549 = getelementptr inbounds i8, i8* %478, i64 2192
  %550 = bitcast i8* %549 to i32*
  store i32 0, i32* %550, align 4
  %551 = getelementptr inbounds i8, i8* %478, i64 2328
  %552 = bitcast i8* %551 to i64*
  store i64 0, i64* %552, align 8
  %553 = getelementptr inbounds i8, i8* %478, i64 2336
  %554 = bitcast i8* %553 to i32*
  store i32 0, i32* %554, align 4
  %555 = getelementptr inbounds i8, i8* %478, i64 2472
  %556 = bitcast i8* %555 to i64*
  store i64 0, i64* %556, align 8
  %557 = getelementptr inbounds i8, i8* %478, i64 2480
  %558 = bitcast i8* %557 to i32*
  store i32 0, i32* %558, align 4
  %559 = getelementptr inbounds i8, i8* %478, i64 2616
  %560 = bitcast i8* %559 to i64*
  store i64 0, i64* %560, align 8
  %561 = getelementptr inbounds i8, i8* %478, i64 2624
  %562 = bitcast i8* %561 to i32*
  store i32 0, i32* %562, align 4
  %563 = getelementptr inbounds i8, i8* %478, i64 2760
  %564 = bitcast i8* %563 to i64*
  store i64 0, i64* %564, align 8
  %565 = getelementptr inbounds i8, i8* %478, i64 2768
  %566 = bitcast i8* %565 to i32*
  store i32 0, i32* %566, align 4
  %567 = bitcast i8* %478 to void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)***
  %568 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)**, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*** %567, align 8
  %569 = getelementptr inbounds void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %568, i64 2
  %570 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %569, align 8
  tail call void %570(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nonnull %479) #11
  br label %901

571:                                              ; preds = %2
  %572 = tail call i8* @_Znwm(i64 2904) #10
  %573 = bitcast i8* %572 to %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*
  %574 = bitcast i8* %572 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %574, align 8
  %575 = getelementptr inbounds i8, i8* %572, i64 8
  %576 = bitcast i8* %575 to i32*
  store i32 2, i32* %576, align 8
  %577 = getelementptr inbounds i8, i8* %572, i64 12
  %578 = bitcast i8* %577 to i32*
  store i32 3, i32* %578, align 4
  %579 = getelementptr inbounds i8, i8* %572, i64 16
  %580 = bitcast i8* %579 to i32*
  store i32 0, i32* %580, align 8
  %581 = getelementptr inbounds i8, i8* %572, i64 24
  %582 = bitcast i8* %581 to i64*
  store i64 0, i64* %582, align 8
  %583 = getelementptr inbounds i8, i8* %572, i64 32
  %584 = bitcast i8* %583 to i32*
  store i32 0, i32* %584, align 4
  %585 = getelementptr inbounds i8, i8* %572, i64 168
  %586 = bitcast i8* %585 to i64*
  store i64 0, i64* %586, align 8
  %587 = getelementptr inbounds i8, i8* %572, i64 176
  %588 = bitcast i8* %587 to i32*
  store i32 0, i32* %588, align 4
  %589 = getelementptr inbounds i8, i8* %572, i64 312
  %590 = bitcast i8* %589 to i64*
  store i64 0, i64* %590, align 8
  %591 = getelementptr inbounds i8, i8* %572, i64 320
  %592 = bitcast i8* %591 to i32*
  store i32 0, i32* %592, align 4
  %593 = getelementptr inbounds i8, i8* %572, i64 456
  %594 = bitcast i8* %593 to i64*
  store i64 0, i64* %594, align 8
  %595 = getelementptr inbounds i8, i8* %572, i64 464
  %596 = bitcast i8* %595 to i32*
  store i32 0, i32* %596, align 4
  %597 = getelementptr inbounds i8, i8* %572, i64 600
  %598 = bitcast i8* %597 to i64*
  store i64 0, i64* %598, align 8
  %599 = getelementptr inbounds i8, i8* %572, i64 608
  %600 = bitcast i8* %599 to i32*
  store i32 0, i32* %600, align 4
  %601 = getelementptr inbounds i8, i8* %572, i64 744
  %602 = bitcast i8* %601 to i64*
  store i64 0, i64* %602, align 8
  %603 = getelementptr inbounds i8, i8* %572, i64 752
  %604 = bitcast i8* %603 to i32*
  store i32 0, i32* %604, align 4
  %605 = getelementptr inbounds i8, i8* %572, i64 888
  %606 = bitcast i8* %605 to i64*
  store i64 0, i64* %606, align 8
  %607 = getelementptr inbounds i8, i8* %572, i64 896
  %608 = bitcast i8* %607 to i32*
  store i32 0, i32* %608, align 4
  %609 = getelementptr inbounds i8, i8* %572, i64 1032
  %610 = bitcast i8* %609 to i64*
  store i64 0, i64* %610, align 8
  %611 = getelementptr inbounds i8, i8* %572, i64 1040
  %612 = bitcast i8* %611 to i32*
  store i32 0, i32* %612, align 4
  %613 = getelementptr inbounds i8, i8* %572, i64 1176
  %614 = bitcast i8* %613 to i64*
  store i64 0, i64* %614, align 8
  %615 = getelementptr inbounds i8, i8* %572, i64 1184
  %616 = bitcast i8* %615 to i32*
  store i32 0, i32* %616, align 4
  %617 = getelementptr inbounds i8, i8* %572, i64 1320
  %618 = bitcast i8* %617 to i64*
  store i64 0, i64* %618, align 8
  %619 = getelementptr inbounds i8, i8* %572, i64 1328
  %620 = bitcast i8* %619 to i32*
  store i32 0, i32* %620, align 4
  %621 = getelementptr inbounds i8, i8* %572, i64 1464
  %622 = bitcast i8* %621 to i64*
  store i64 0, i64* %622, align 8
  %623 = getelementptr inbounds i8, i8* %572, i64 1472
  %624 = bitcast i8* %623 to i32*
  store i32 0, i32* %624, align 4
  %625 = getelementptr inbounds i8, i8* %572, i64 1608
  %626 = bitcast i8* %625 to i64*
  store i64 0, i64* %626, align 8
  %627 = getelementptr inbounds i8, i8* %572, i64 1616
  %628 = bitcast i8* %627 to i32*
  store i32 0, i32* %628, align 4
  %629 = getelementptr inbounds i8, i8* %572, i64 1752
  %630 = bitcast i8* %629 to i64*
  store i64 0, i64* %630, align 8
  %631 = getelementptr inbounds i8, i8* %572, i64 1760
  %632 = bitcast i8* %631 to i32*
  store i32 0, i32* %632, align 4
  %633 = getelementptr inbounds i8, i8* %572, i64 1896
  %634 = bitcast i8* %633 to i64*
  store i64 0, i64* %634, align 8
  %635 = getelementptr inbounds i8, i8* %572, i64 1904
  %636 = bitcast i8* %635 to i32*
  store i32 0, i32* %636, align 4
  %637 = getelementptr inbounds i8, i8* %572, i64 2040
  %638 = bitcast i8* %637 to i64*
  store i64 0, i64* %638, align 8
  %639 = getelementptr inbounds i8, i8* %572, i64 2048
  %640 = bitcast i8* %639 to i32*
  store i32 0, i32* %640, align 4
  %641 = getelementptr inbounds i8, i8* %572, i64 2184
  %642 = bitcast i8* %641 to i64*
  store i64 0, i64* %642, align 8
  %643 = getelementptr inbounds i8, i8* %572, i64 2192
  %644 = bitcast i8* %643 to i32*
  store i32 0, i32* %644, align 4
  %645 = getelementptr inbounds i8, i8* %572, i64 2328
  %646 = bitcast i8* %645 to i64*
  store i64 0, i64* %646, align 8
  %647 = getelementptr inbounds i8, i8* %572, i64 2336
  %648 = bitcast i8* %647 to i32*
  store i32 0, i32* %648, align 4
  %649 = getelementptr inbounds i8, i8* %572, i64 2472
  %650 = bitcast i8* %649 to i64*
  store i64 0, i64* %650, align 8
  %651 = getelementptr inbounds i8, i8* %572, i64 2480
  %652 = bitcast i8* %651 to i32*
  store i32 0, i32* %652, align 4
  %653 = getelementptr inbounds i8, i8* %572, i64 2616
  %654 = bitcast i8* %653 to i64*
  store i64 0, i64* %654, align 8
  %655 = getelementptr inbounds i8, i8* %572, i64 2624
  %656 = bitcast i8* %655 to i32*
  store i32 0, i32* %656, align 4
  %657 = getelementptr inbounds i8, i8* %572, i64 2760
  %658 = bitcast i8* %657 to i64*
  store i64 0, i64* %658, align 8
  %659 = getelementptr inbounds i8, i8* %572, i64 2768
  %660 = bitcast i8* %659 to i32*
  store i32 0, i32* %660, align 4
  %661 = bitcast i8* %572 to void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)***
  %662 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)**, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*** %661, align 8
  %663 = getelementptr inbounds void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %662, i64 2
  %664 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %663, align 8
  tail call void %664(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nonnull %573) #11
  br label %901

665:                                              ; preds = %2
  %666 = tail call i8* @_Znwm(i64 1296) #10
  %667 = bitcast i8* %666 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %667, align 8
  %668 = getelementptr inbounds i8, i8* %666, i64 8
  %669 = bitcast i8* %668 to i32*
  store i32 1, i32* %669, align 8
  %670 = getelementptr inbounds i8, i8* %666, i64 12
  %671 = bitcast i8* %670 to i32*
  store i32 0, i32* %671, align 4
  %672 = getelementptr inbounds i8, i8* %666, i64 16
  %673 = bitcast i8* %672 to i64*
  store i64 0, i64* %673, align 8
  %674 = getelementptr inbounds i8, i8* %666, i64 56
  %675 = bitcast i8* %674 to i64*
  store i64 0, i64* %675, align 8
  %676 = getelementptr inbounds i8, i8* %666, i64 96
  %677 = bitcast i8* %676 to i64*
  store i64 0, i64* %677, align 8
  %678 = getelementptr inbounds i8, i8* %666, i64 136
  %679 = bitcast i8* %678 to i64*
  store i64 0, i64* %679, align 8
  %680 = getelementptr inbounds i8, i8* %666, i64 176
  %681 = bitcast i8* %680 to i64*
  store i64 0, i64* %681, align 8
  %682 = getelementptr inbounds i8, i8* %666, i64 216
  %683 = bitcast i8* %682 to i64*
  store i64 0, i64* %683, align 8
  %684 = getelementptr inbounds i8, i8* %666, i64 256
  %685 = bitcast i8* %684 to i64*
  store i64 0, i64* %685, align 8
  %686 = getelementptr inbounds i8, i8* %666, i64 296
  %687 = bitcast i8* %686 to i64*
  store i64 0, i64* %687, align 8
  %688 = getelementptr inbounds i8, i8* %666, i64 336
  %689 = bitcast i8* %688 to i64*
  store i64 0, i64* %689, align 8
  %690 = getelementptr inbounds i8, i8* %666, i64 376
  %691 = bitcast i8* %690 to i64*
  store i64 0, i64* %691, align 8
  %692 = getelementptr inbounds i8, i8* %666, i64 416
  %693 = bitcast i8* %692 to i64*
  store i64 0, i64* %693, align 8
  %694 = getelementptr inbounds i8, i8* %666, i64 456
  %695 = bitcast i8* %694 to i64*
  store i64 0, i64* %695, align 8
  %696 = getelementptr inbounds i8, i8* %666, i64 496
  %697 = bitcast i8* %696 to i64*
  store i64 0, i64* %697, align 8
  %698 = getelementptr inbounds i8, i8* %666, i64 536
  %699 = bitcast i8* %698 to i64*
  store i64 0, i64* %699, align 8
  %700 = getelementptr inbounds i8, i8* %666, i64 576
  %701 = bitcast i8* %700 to i64*
  store i64 0, i64* %701, align 8
  %702 = getelementptr inbounds i8, i8* %666, i64 616
  %703 = bitcast i8* %702 to i64*
  store i64 0, i64* %703, align 8
  %704 = getelementptr inbounds i8, i8* %666, i64 656
  %705 = bitcast i8* %704 to i64*
  store i64 0, i64* %705, align 8
  %706 = getelementptr inbounds i8, i8* %666, i64 696
  %707 = bitcast i8* %706 to i64*
  store i64 0, i64* %707, align 8
  %708 = getelementptr inbounds i8, i8* %666, i64 736
  %709 = bitcast i8* %708 to i64*
  store i64 0, i64* %709, align 8
  %710 = getelementptr inbounds i8, i8* %666, i64 776
  %711 = bitcast i8* %710 to i64*
  store i64 0, i64* %711, align 8
  %712 = getelementptr inbounds i8, i8* %666, i64 816
  %713 = bitcast i8* %712 to i64*
  store i64 0, i64* %713, align 8
  %714 = getelementptr inbounds i8, i8* %666, i64 856
  %715 = bitcast i8* %714 to i64*
  store i64 0, i64* %715, align 8
  %716 = getelementptr inbounds i8, i8* %666, i64 896
  %717 = bitcast i8* %716 to i64*
  store i64 0, i64* %717, align 8
  %718 = getelementptr inbounds i8, i8* %666, i64 936
  %719 = bitcast i8* %718 to i64*
  store i64 0, i64* %719, align 8
  %720 = getelementptr inbounds i8, i8* %666, i64 976
  %721 = bitcast i8* %720 to i64*
  store i64 0, i64* %721, align 8
  %722 = getelementptr inbounds i8, i8* %666, i64 1016
  %723 = bitcast i8* %722 to i64*
  store i64 0, i64* %723, align 8
  %724 = getelementptr inbounds i8, i8* %666, i64 1056
  %725 = bitcast i8* %724 to i64*
  store i64 0, i64* %725, align 8
  %726 = getelementptr inbounds i8, i8* %666, i64 1096
  %727 = bitcast i8* %726 to i64*
  store i64 0, i64* %727, align 8
  %728 = getelementptr inbounds i8, i8* %666, i64 1136
  %729 = bitcast i8* %728 to i64*
  store i64 0, i64* %729, align 8
  %730 = getelementptr inbounds i8, i8* %666, i64 1176
  %731 = bitcast i8* %730 to i64*
  store i64 0, i64* %731, align 8
  %732 = getelementptr inbounds i8, i8* %666, i64 1216
  %733 = bitcast i8* %732 to i64*
  store i64 0, i64* %733, align 8
  %734 = getelementptr inbounds i8, i8* %666, i64 1256
  %735 = bitcast i8* %734 to i64*
  store i64 0, i64* %735, align 8
  br label %901

736:                                              ; preds = %2
  %737 = tail call i8* @_Znwm(i64 1296) #10
  %738 = bitcast i8* %737 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %738, align 8
  %739 = getelementptr inbounds i8, i8* %737, i64 8
  %740 = bitcast i8* %739 to i32*
  store i32 2, i32* %740, align 8
  %741 = getelementptr inbounds i8, i8* %737, i64 12
  %742 = bitcast i8* %741 to i32*
  store i32 0, i32* %742, align 4
  %743 = getelementptr inbounds i8, i8* %737, i64 16
  %744 = bitcast i8* %743 to i64*
  store i64 0, i64* %744, align 8
  %745 = getelementptr inbounds i8, i8* %737, i64 56
  %746 = bitcast i8* %745 to i64*
  store i64 0, i64* %746, align 8
  %747 = getelementptr inbounds i8, i8* %737, i64 96
  %748 = bitcast i8* %747 to i64*
  store i64 0, i64* %748, align 8
  %749 = getelementptr inbounds i8, i8* %737, i64 136
  %750 = bitcast i8* %749 to i64*
  store i64 0, i64* %750, align 8
  %751 = getelementptr inbounds i8, i8* %737, i64 176
  %752 = bitcast i8* %751 to i64*
  store i64 0, i64* %752, align 8
  %753 = getelementptr inbounds i8, i8* %737, i64 216
  %754 = bitcast i8* %753 to i64*
  store i64 0, i64* %754, align 8
  %755 = getelementptr inbounds i8, i8* %737, i64 256
  %756 = bitcast i8* %755 to i64*
  store i64 0, i64* %756, align 8
  %757 = getelementptr inbounds i8, i8* %737, i64 296
  %758 = bitcast i8* %757 to i64*
  store i64 0, i64* %758, align 8
  %759 = getelementptr inbounds i8, i8* %737, i64 336
  %760 = bitcast i8* %759 to i64*
  store i64 0, i64* %760, align 8
  %761 = getelementptr inbounds i8, i8* %737, i64 376
  %762 = bitcast i8* %761 to i64*
  store i64 0, i64* %762, align 8
  %763 = getelementptr inbounds i8, i8* %737, i64 416
  %764 = bitcast i8* %763 to i64*
  store i64 0, i64* %764, align 8
  %765 = getelementptr inbounds i8, i8* %737, i64 456
  %766 = bitcast i8* %765 to i64*
  store i64 0, i64* %766, align 8
  %767 = getelementptr inbounds i8, i8* %737, i64 496
  %768 = bitcast i8* %767 to i64*
  store i64 0, i64* %768, align 8
  %769 = getelementptr inbounds i8, i8* %737, i64 536
  %770 = bitcast i8* %769 to i64*
  store i64 0, i64* %770, align 8
  %771 = getelementptr inbounds i8, i8* %737, i64 576
  %772 = bitcast i8* %771 to i64*
  store i64 0, i64* %772, align 8
  %773 = getelementptr inbounds i8, i8* %737, i64 616
  %774 = bitcast i8* %773 to i64*
  store i64 0, i64* %774, align 8
  %775 = getelementptr inbounds i8, i8* %737, i64 656
  %776 = bitcast i8* %775 to i64*
  store i64 0, i64* %776, align 8
  %777 = getelementptr inbounds i8, i8* %737, i64 696
  %778 = bitcast i8* %777 to i64*
  store i64 0, i64* %778, align 8
  %779 = getelementptr inbounds i8, i8* %737, i64 736
  %780 = bitcast i8* %779 to i64*
  store i64 0, i64* %780, align 8
  %781 = getelementptr inbounds i8, i8* %737, i64 776
  %782 = bitcast i8* %781 to i64*
  store i64 0, i64* %782, align 8
  %783 = getelementptr inbounds i8, i8* %737, i64 816
  %784 = bitcast i8* %783 to i64*
  store i64 0, i64* %784, align 8
  %785 = getelementptr inbounds i8, i8* %737, i64 856
  %786 = bitcast i8* %785 to i64*
  store i64 0, i64* %786, align 8
  %787 = getelementptr inbounds i8, i8* %737, i64 896
  %788 = bitcast i8* %787 to i64*
  store i64 0, i64* %788, align 8
  %789 = getelementptr inbounds i8, i8* %737, i64 936
  %790 = bitcast i8* %789 to i64*
  store i64 0, i64* %790, align 8
  %791 = getelementptr inbounds i8, i8* %737, i64 976
  %792 = bitcast i8* %791 to i64*
  store i64 0, i64* %792, align 8
  %793 = getelementptr inbounds i8, i8* %737, i64 1016
  %794 = bitcast i8* %793 to i64*
  store i64 0, i64* %794, align 8
  %795 = getelementptr inbounds i8, i8* %737, i64 1056
  %796 = bitcast i8* %795 to i64*
  store i64 0, i64* %796, align 8
  %797 = getelementptr inbounds i8, i8* %737, i64 1096
  %798 = bitcast i8* %797 to i64*
  store i64 0, i64* %798, align 8
  %799 = getelementptr inbounds i8, i8* %737, i64 1136
  %800 = bitcast i8* %799 to i64*
  store i64 0, i64* %800, align 8
  %801 = getelementptr inbounds i8, i8* %737, i64 1176
  %802 = bitcast i8* %801 to i64*
  store i64 0, i64* %802, align 8
  %803 = getelementptr inbounds i8, i8* %737, i64 1216
  %804 = bitcast i8* %803 to i64*
  store i64 0, i64* %804, align 8
  %805 = getelementptr inbounds i8, i8* %737, i64 1256
  %806 = bitcast i8* %805 to i64*
  store i64 0, i64* %806, align 8
  br label %901

807:                                              ; preds = %2
  %808 = tail call i8* @_Znwm(i64 2904) #10
  %809 = bitcast i8* %808 to %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*
  %810 = bitcast i8* %808 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %810, align 8
  %811 = getelementptr inbounds i8, i8* %808, i64 8
  %812 = bitcast i8* %811 to i32*
  store i32 2, i32* %812, align 8
  %813 = getelementptr inbounds i8, i8* %808, i64 12
  %814 = bitcast i8* %813 to i32*
  store i32 0, i32* %814, align 4
  %815 = getelementptr inbounds i8, i8* %808, i64 16
  %816 = bitcast i8* %815 to i32*
  store i32 0, i32* %816, align 8
  %817 = getelementptr inbounds i8, i8* %808, i64 24
  %818 = bitcast i8* %817 to i64*
  store i64 0, i64* %818, align 8
  %819 = getelementptr inbounds i8, i8* %808, i64 32
  %820 = bitcast i8* %819 to i32*
  store i32 0, i32* %820, align 4
  %821 = getelementptr inbounds i8, i8* %808, i64 168
  %822 = bitcast i8* %821 to i64*
  store i64 0, i64* %822, align 8
  %823 = getelementptr inbounds i8, i8* %808, i64 176
  %824 = bitcast i8* %823 to i32*
  store i32 0, i32* %824, align 4
  %825 = getelementptr inbounds i8, i8* %808, i64 312
  %826 = bitcast i8* %825 to i64*
  store i64 0, i64* %826, align 8
  %827 = getelementptr inbounds i8, i8* %808, i64 320
  %828 = bitcast i8* %827 to i32*
  store i32 0, i32* %828, align 4
  %829 = getelementptr inbounds i8, i8* %808, i64 456
  %830 = bitcast i8* %829 to i64*
  store i64 0, i64* %830, align 8
  %831 = getelementptr inbounds i8, i8* %808, i64 464
  %832 = bitcast i8* %831 to i32*
  store i32 0, i32* %832, align 4
  %833 = getelementptr inbounds i8, i8* %808, i64 600
  %834 = bitcast i8* %833 to i64*
  store i64 0, i64* %834, align 8
  %835 = getelementptr inbounds i8, i8* %808, i64 608
  %836 = bitcast i8* %835 to i32*
  store i32 0, i32* %836, align 4
  %837 = getelementptr inbounds i8, i8* %808, i64 744
  %838 = bitcast i8* %837 to i64*
  store i64 0, i64* %838, align 8
  %839 = getelementptr inbounds i8, i8* %808, i64 752
  %840 = bitcast i8* %839 to i32*
  store i32 0, i32* %840, align 4
  %841 = getelementptr inbounds i8, i8* %808, i64 888
  %842 = bitcast i8* %841 to i64*
  store i64 0, i64* %842, align 8
  %843 = getelementptr inbounds i8, i8* %808, i64 896
  %844 = bitcast i8* %843 to i32*
  store i32 0, i32* %844, align 4
  %845 = getelementptr inbounds i8, i8* %808, i64 1032
  %846 = bitcast i8* %845 to i64*
  store i64 0, i64* %846, align 8
  %847 = getelementptr inbounds i8, i8* %808, i64 1040
  %848 = bitcast i8* %847 to i32*
  store i32 0, i32* %848, align 4
  %849 = getelementptr inbounds i8, i8* %808, i64 1176
  %850 = bitcast i8* %849 to i64*
  store i64 0, i64* %850, align 8
  %851 = getelementptr inbounds i8, i8* %808, i64 1184
  %852 = bitcast i8* %851 to i32*
  store i32 0, i32* %852, align 4
  %853 = getelementptr inbounds i8, i8* %808, i64 1320
  %854 = bitcast i8* %853 to i64*
  store i64 0, i64* %854, align 8
  %855 = getelementptr inbounds i8, i8* %808, i64 1328
  %856 = bitcast i8* %855 to i32*
  store i32 0, i32* %856, align 4
  %857 = getelementptr inbounds i8, i8* %808, i64 1464
  %858 = bitcast i8* %857 to i64*
  store i64 0, i64* %858, align 8
  %859 = getelementptr inbounds i8, i8* %808, i64 1472
  %860 = bitcast i8* %859 to i32*
  store i32 0, i32* %860, align 4
  %861 = getelementptr inbounds i8, i8* %808, i64 1608
  %862 = bitcast i8* %861 to i64*
  store i64 0, i64* %862, align 8
  %863 = getelementptr inbounds i8, i8* %808, i64 1616
  %864 = bitcast i8* %863 to i32*
  store i32 0, i32* %864, align 4
  %865 = getelementptr inbounds i8, i8* %808, i64 1752
  %866 = bitcast i8* %865 to i64*
  store i64 0, i64* %866, align 8
  %867 = getelementptr inbounds i8, i8* %808, i64 1760
  %868 = bitcast i8* %867 to i32*
  store i32 0, i32* %868, align 4
  %869 = getelementptr inbounds i8, i8* %808, i64 1896
  %870 = bitcast i8* %869 to i64*
  store i64 0, i64* %870, align 8
  %871 = getelementptr inbounds i8, i8* %808, i64 1904
  %872 = bitcast i8* %871 to i32*
  store i32 0, i32* %872, align 4
  %873 = getelementptr inbounds i8, i8* %808, i64 2040
  %874 = bitcast i8* %873 to i64*
  store i64 0, i64* %874, align 8
  %875 = getelementptr inbounds i8, i8* %808, i64 2048
  %876 = bitcast i8* %875 to i32*
  store i32 0, i32* %876, align 4
  %877 = getelementptr inbounds i8, i8* %808, i64 2184
  %878 = bitcast i8* %877 to i64*
  store i64 0, i64* %878, align 8
  %879 = getelementptr inbounds i8, i8* %808, i64 2192
  %880 = bitcast i8* %879 to i32*
  store i32 0, i32* %880, align 4
  %881 = getelementptr inbounds i8, i8* %808, i64 2328
  %882 = bitcast i8* %881 to i64*
  store i64 0, i64* %882, align 8
  %883 = getelementptr inbounds i8, i8* %808, i64 2336
  %884 = bitcast i8* %883 to i32*
  store i32 0, i32* %884, align 4
  %885 = getelementptr inbounds i8, i8* %808, i64 2472
  %886 = bitcast i8* %885 to i64*
  store i64 0, i64* %886, align 8
  %887 = getelementptr inbounds i8, i8* %808, i64 2480
  %888 = bitcast i8* %887 to i32*
  store i32 0, i32* %888, align 4
  %889 = getelementptr inbounds i8, i8* %808, i64 2616
  %890 = bitcast i8* %889 to i64*
  store i64 0, i64* %890, align 8
  %891 = getelementptr inbounds i8, i8* %808, i64 2624
  %892 = bitcast i8* %891 to i32*
  store i32 0, i32* %892, align 4
  %893 = getelementptr inbounds i8, i8* %808, i64 2760
  %894 = bitcast i8* %893 to i64*
  store i64 0, i64* %894, align 8
  %895 = getelementptr inbounds i8, i8* %808, i64 2768
  %896 = bitcast i8* %895 to i32*
  store i32 0, i32* %896, align 4
  %897 = bitcast i8* %808 to void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)***
  %898 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)**, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*** %897, align 8
  %899 = getelementptr inbounds void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %898, i64 2
  %900 = load void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)*, void (%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*)** %899, align 8
  tail call void %900(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nonnull %809) #11
  br label %901

901:                                              ; preds = %7, %101, %195, %289, %383, %477, %571, %665, %736, %807
  %902 = phi i8* [ %808, %807 ], [ %737, %736 ], [ %666, %665 ], [ %572, %571 ], [ %478, %477 ], [ %384, %383 ], [ %290, %289 ], [ %196, %195 ], [ %102, %101 ], [ %8, %7 ]
  %903 = ptrtoint i8* %902 to i64
  %904 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %903, i64* %904, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15VelocityTrackerD2Ev(%"class.ui::VelocityTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %2, align 8
  store %"class.ui::VelocityTrackerStrategy"* null, %"class.ui::VelocityTrackerStrategy"** %2, align 8
  %4 = icmp eq %"class.ui::VelocityTrackerStrategy"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.ui::VelocityTrackerStrategy"* %3 to void (%"class.ui::VelocityTrackerStrategy"*)***
  %7 = load void (%"class.ui::VelocityTrackerStrategy"*)**, void (%"class.ui::VelocityTrackerStrategy"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %7, i64 1
  %9 = load void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %8, align 8
  tail call void %9(%"class.ui::VelocityTrackerStrategy"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15VelocityTracker5ClearEv(%"class.ui::VelocityTracker"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 2
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %4, align 8
  %6 = bitcast %"class.ui::VelocityTrackerStrategy"* %5 to void (%"class.ui::VelocityTrackerStrategy"*)***
  %7 = load void (%"class.ui::VelocityTrackerStrategy"*)**, void (%"class.ui::VelocityTrackerStrategy"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %7, i64 2
  %9 = load void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %8, align 8
  tail call void %9(%"class.ui::VelocityTrackerStrategy"* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15VelocityTracker13ClearPointersENS_8BitSet32E(%"class.ui::VelocityTracker"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = xor i32 %1, -1
  %6 = and i32 %4, %5
  store i32 %6, i32* %3, align 8
  %7 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %10, label %18

10:                                               ; preds = %2
  %11 = lshr i32 -2147483648, %8
  %12 = and i32 %11, %1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = icmp eq i32 %6, 0
  %16 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 true) #11, !range !2
  %17 = select i1 %15, i32 -1, i32 %16
  store i32 %17, i32* %7, align 4
  br label %18

18:                                               ; preds = %10, %14, %2
  %19 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %19, align 8
  %21 = bitcast %"class.ui::VelocityTrackerStrategy"* %20 to void (%"class.ui::VelocityTrackerStrategy"*, i32)***
  %22 = load void (%"class.ui::VelocityTrackerStrategy"*, i32)**, void (%"class.ui::VelocityTrackerStrategy"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.ui::VelocityTrackerStrategy"*, i32)*, void (%"class.ui::VelocityTrackerStrategy"*, i32)** %22, i64 3
  %24 = load void (%"class.ui::VelocityTrackerStrategy"*, i32)*, void (%"class.ui::VelocityTrackerStrategy"*, i32)** %23, align 8
  tail call void %24(%"class.ui::VelocityTrackerStrategy"* %20, i32 %1) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15VelocityTracker11AddMovementERKNS_11MotionEventE(%"class.ui::VelocityTracker"* nocapture, %"class.ui::MotionEvent"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca [16 x i32], align 16
  %4 = alloca [16 x %"struct.ui::(anonymous namespace)::Position"], align 16
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*)***
  %8 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %8, i64 3
  %10 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %9, align 8
  %11 = tail call i32 %10(%"class.ui::MotionEvent"* %1) #11
  switch i32 %11, label %292 [
    i32 1, label %12
    i32 5, label %21
    i32 3, label %72
    i32 2, label %55
    i32 6, label %55
  ]

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 1, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 2
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %15, align 8
  %17 = bitcast %"class.ui::VelocityTrackerStrategy"* %16 to void (%"class.ui::VelocityTrackerStrategy"*)***
  %18 = load void (%"class.ui::VelocityTrackerStrategy"*)**, void (%"class.ui::VelocityTrackerStrategy"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %18, i64 2
  %20 = load void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %19, align 8
  tail call void %20(%"class.ui::VelocityTrackerStrategy"* %16) #11
  br label %72

21:                                               ; preds = %2
  %22 = load i32 (%"class.ui::MotionEvent"*)**, i32 (%"class.ui::MotionEvent"*)*** %7, align 8
  %23 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %22, i64 4
  %24 = load i32 (%"class.ui::MotionEvent"*)*, i32 (%"class.ui::MotionEvent"*)** %23, align 8
  %25 = tail call i32 %24(%"class.ui::MotionEvent"* %1) #11
  %26 = sext i32 %25 to i64
  %27 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  %28 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %28, i64 6
  %30 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %29, align 8
  %31 = tail call i32 %30(%"class.ui::MotionEvent"* %1, i64 %26) #11
  %32 = lshr i32 -2147483648, %31
  %33 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = xor i32 %32, -1
  %36 = and i32 %34, %35
  store i32 %36, i32* %33, align 8
  %37 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %40, label %48

40:                                               ; preds = %21
  %41 = lshr i32 -2147483648, %38
  %42 = and i32 %41, %32
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = icmp eq i32 %36, 0
  %46 = tail call i32 @llvm.ctlz.i32(i32 %36, i1 true) #11, !range !2
  %47 = select i1 %45, i32 -1, i32 %46
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %21, %40, %44
  %49 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %49, align 8
  %51 = bitcast %"class.ui::VelocityTrackerStrategy"* %50 to void (%"class.ui::VelocityTrackerStrategy"*, i32)***
  %52 = load void (%"class.ui::VelocityTrackerStrategy"*, i32)**, void (%"class.ui::VelocityTrackerStrategy"*, i32)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.ui::VelocityTrackerStrategy"*, i32)*, void (%"class.ui::VelocityTrackerStrategy"*, i32)** %52, i64 3
  %54 = load void (%"class.ui::VelocityTrackerStrategy"*, i32)*, void (%"class.ui::VelocityTrackerStrategy"*, i32)** %53, align 8
  tail call void %54(%"class.ui::VelocityTrackerStrategy"* %50, i32 %32) #11
  br label %72

55:                                               ; preds = %2, %2
  %56 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*)***
  %57 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %57, i64 22
  %59 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %58, align 8
  %60 = tail call i64 %59(%"class.ui::MotionEvent"* %1) #11
  %61 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = sub nsw i64 %60, %62
  %64 = icmp sgt i64 %63, 79999
  br i1 %64, label %65, label %292

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %66, align 8
  %68 = bitcast %"class.ui::VelocityTrackerStrategy"* %67 to void (%"class.ui::VelocityTrackerStrategy"*)***
  %69 = load void (%"class.ui::VelocityTrackerStrategy"*)**, void (%"class.ui::VelocityTrackerStrategy"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %69, i64 2
  %71 = load void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %70, align 8
  tail call void %71(%"class.ui::VelocityTrackerStrategy"* %67) #11
  br label %292

72:                                               ; preds = %2, %48, %12
  %73 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*)***
  %74 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %73, align 8
  %75 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %74, i64 5
  %76 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %75, align 8
  %77 = tail call i64 %76(%"class.ui::MotionEvent"* %1) #11
  %78 = icmp ult i64 %77, 16
  %79 = select i1 %78, i64 %77, i64 16
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %72
  %82 = bitcast [16 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %82) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %82, i8 -86, i64 64, i1 false)
  br label %99

83:                                               ; preds = %72
  %84 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  br label %88

85:                                               ; preds = %88
  %86 = bitcast [16 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %86) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %86, i8 -86, i64 64, i1 false)
  %87 = bitcast %"class.ui::MotionEvent"* %1 to i32 (%"class.ui::MotionEvent"*, i64)***
  br label %122

88:                                               ; preds = %83, %88
  %89 = phi i64 [ 0, %83 ], [ %97, %88 ]
  %90 = phi i32 [ 0, %83 ], [ %96, %88 ]
  %91 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %84, align 8
  %92 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %91, i64 6
  %93 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %92, align 8
  %94 = tail call i32 %93(%"class.ui::MotionEvent"* %1, i64 %89) #11
  %95 = lshr i32 -2147483648, %94
  %96 = or i32 %95, %90
  %97 = add nuw i64 %89, 1
  %98 = icmp ult i64 %97, %79
  br i1 %98, label %88, label %85

99:                                               ; preds = %122, %81
  %100 = phi i8* [ %82, %81 ], [ %86, %122 ]
  %101 = phi i32 [ 0, %81 ], [ %96, %122 ]
  %102 = bitcast [16 x %"struct.ui::(anonymous namespace)::Position"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %102) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %102, i8 -1, i64 128, i1 false)
  %103 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %73, align 8
  %104 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %103, i64 24
  %105 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %104, align 8
  %106 = tail call i64 %105(%"class.ui::MotionEvent"* %1) #11
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %140, label %108

108:                                              ; preds = %99
  %109 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64, i64)***
  %110 = bitcast %"class.base::TimeTicks"* %5 to i8*
  %111 = bitcast %"class.ui::MotionEvent"* %1 to i64 (%"class.ui::MotionEvent"*, i64)***
  %112 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %113 = getelementptr inbounds [16 x %"struct.ui::(anonymous namespace)::Position"], [16 x %"struct.ui::(anonymous namespace)::Position"]* %4, i64 0, i64 0
  %114 = zext i32 %101 to i64
  %115 = call i64 @llvm.ctpop.i64(i64 %114) #11, !range !3
  %116 = trunc i64 %115 to i32
  %117 = icmp ugt i32 %116, 16
  %118 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 2
  br label %138

122:                                              ; preds = %85, %122
  %123 = phi i64 [ 0, %85 ], [ %136, %122 ]
  %124 = load i32 (%"class.ui::MotionEvent"*, i64)**, i32 (%"class.ui::MotionEvent"*, i64)*** %87, align 8
  %125 = getelementptr inbounds i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %124, i64 6
  %126 = load i32 (%"class.ui::MotionEvent"*, i64)*, i32 (%"class.ui::MotionEvent"*, i64)** %125, align 8
  %127 = tail call i32 %126(%"class.ui::MotionEvent"* %1, i64 %123) #11
  %128 = zext i32 %127 to i64
  %129 = ashr i64 -4294967296, %128
  %130 = trunc i64 %129 to i32
  %131 = and i32 %96, %130
  %132 = zext i32 %131 to i64
  %133 = tail call i64 @llvm.ctpop.i64(i64 %132) #11, !range !3
  %134 = trunc i64 %133 to i32
  %135 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %123
  store i32 %134, i32* %135, align 4
  %136 = add nuw i64 %123, 1
  %137 = icmp ult i64 %136, %79
  br i1 %137, label %122, label %99

138:                                              ; preds = %187, %108
  %139 = phi i64 [ 0, %108 ], [ %193, %187 ]
  br i1 %80, label %143, label %195

140:                                              ; preds = %187, %99
  br i1 %80, label %212, label %141

141:                                              ; preds = %140
  %142 = bitcast %"class.ui::MotionEvent"* %1 to float (%"class.ui::MotionEvent"*, i64)***
  br label %275

143:                                              ; preds = %195, %138
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #11
  %144 = load i64 (%"class.ui::MotionEvent"*, i64)**, i64 (%"class.ui::MotionEvent"*, i64)*** %111, align 8
  %145 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*, i64)*, i64 (%"class.ui::MotionEvent"*, i64)** %144, i64 25
  %146 = load i64 (%"class.ui::MotionEvent"*, i64)*, i64 (%"class.ui::MotionEvent"*, i64)** %145, align 8
  %147 = call i64 %146(%"class.ui::MotionEvent"* %1, i64 %139) #11
  store i64 %147, i64* %112, align 8
  br i1 %117, label %148, label %159

148:                                              ; preds = %143, %148
  %149 = phi i32 [ %154, %148 ], [ %101, %143 ]
  %150 = call i32 @llvm.cttz.i32(i32 %149, i1 true) #11, !range !2
  %151 = xor i32 %150, 31
  %152 = lshr i32 -2147483648, %151
  %153 = xor i32 %152, -1
  %154 = and i32 %149, %153
  %155 = zext i32 %154 to i64
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #11, !range !3
  %157 = trunc i64 %156 to i32
  %158 = icmp ugt i32 %157, 16
  br i1 %158, label %148, label %159

159:                                              ; preds = %148, %143
  %160 = phi i32 [ %101, %143 ], [ %154, %148 ]
  %161 = load i32, i32* %118, align 8
  %162 = and i32 %161, %160
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %175, label %164

164:                                              ; preds = %159
  %165 = load i64, i64* %119, align 8
  %166 = sub nsw i64 %147, %165
  %167 = icmp sgt i64 %166, 39999
  br i1 %167, label %168, label %175

168:                                              ; preds = %164
  %169 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %120, align 8
  %170 = bitcast %"class.ui::VelocityTrackerStrategy"* %169 to void (%"class.ui::VelocityTrackerStrategy"*)***
  %171 = load void (%"class.ui::VelocityTrackerStrategy"*)**, void (%"class.ui::VelocityTrackerStrategy"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %171, i64 2
  %173 = load void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %172, align 8
  call void %173(%"class.ui::VelocityTrackerStrategy"* %169) #11
  %174 = load i64, i64* %112, align 8
  br label %175

175:                                              ; preds = %168, %164, %159
  %176 = phi i64 [ %174, %168 ], [ %147, %164 ], [ %147, %159 ]
  store i64 %176, i64* %119, align 8
  store i32 %160, i32* %118, align 8
  %177 = load i32, i32* %121, align 4
  %178 = icmp slt i32 %177, 0
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = lshr i32 -2147483648, %177
  %181 = and i32 %180, %160
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %187

183:                                              ; preds = %179, %175
  %184 = icmp eq i32 %160, 0
  %185 = call i32 @llvm.ctlz.i32(i32 %160, i1 true) #11, !range !2
  %186 = select i1 %184, i32 -1, i32 %185
  store i32 %186, i32* %121, align 4
  br label %187

187:                                              ; preds = %179, %183
  %188 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %120, align 8
  %189 = bitcast %"class.ui::VelocityTrackerStrategy"* %188 to void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)***
  %190 = load void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)**, void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)*, void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)** %190, i64 4
  %192 = load void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)*, void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)** %191, align 8
  call void %192(%"class.ui::VelocityTrackerStrategy"* %188, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 %160, %"struct.ui::(anonymous namespace)::Position"* nonnull %113) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #11
  %193 = add nuw i64 %139, 1
  %194 = icmp eq i64 %193, %106
  br i1 %194, label %140, label %138

195:                                              ; preds = %138, %195
  %196 = phi i64 [ %210, %195 ], [ 0, %138 ]
  %197 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = load float (%"class.ui::MotionEvent"*, i64, i64)**, float (%"class.ui::MotionEvent"*, i64, i64)*** %109, align 8
  %200 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64, i64)*, float (%"class.ui::MotionEvent"*, i64, i64)** %199, i64 27
  %201 = load float (%"class.ui::MotionEvent"*, i64, i64)*, float (%"class.ui::MotionEvent"*, i64, i64)** %200, align 8
  %202 = call float %201(%"class.ui::MotionEvent"* %1, i64 %196, i64 %139) #11
  %203 = zext i32 %198 to i64
  %204 = getelementptr inbounds [16 x %"struct.ui::(anonymous namespace)::Position"], [16 x %"struct.ui::(anonymous namespace)::Position"]* %4, i64 0, i64 %203, i32 0
  store float %202, float* %204, align 8
  %205 = load float (%"class.ui::MotionEvent"*, i64, i64)**, float (%"class.ui::MotionEvent"*, i64, i64)*** %109, align 8
  %206 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64, i64)*, float (%"class.ui::MotionEvent"*, i64, i64)** %205, i64 28
  %207 = load float (%"class.ui::MotionEvent"*, i64, i64)*, float (%"class.ui::MotionEvent"*, i64, i64)** %206, align 8
  %208 = call float %207(%"class.ui::MotionEvent"* %1, i64 %196, i64 %139) #11
  %209 = getelementptr inbounds [16 x %"struct.ui::(anonymous namespace)::Position"], [16 x %"struct.ui::(anonymous namespace)::Position"]* %4, i64 0, i64 %203, i32 1
  store float %208, float* %209, align 4
  %210 = add nuw i64 %196, 1
  %211 = icmp ult i64 %210, %79
  br i1 %211, label %195, label %143

212:                                              ; preds = %275, %140
  %213 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #11
  %214 = load i64 (%"class.ui::MotionEvent"*)**, i64 (%"class.ui::MotionEvent"*)*** %73, align 8
  %215 = getelementptr inbounds i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %214, i64 22
  %216 = load i64 (%"class.ui::MotionEvent"*)*, i64 (%"class.ui::MotionEvent"*)** %215, align 8
  %217 = call i64 %216(%"class.ui::MotionEvent"* %1) #11
  %218 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds [16 x %"struct.ui::(anonymous namespace)::Position"], [16 x %"struct.ui::(anonymous namespace)::Position"]* %4, i64 0, i64 0
  %220 = zext i32 %101 to i64
  %221 = call i64 @llvm.ctpop.i64(i64 %220) #11, !range !3
  %222 = trunc i64 %221 to i32
  %223 = icmp ugt i32 %222, 16
  br i1 %223, label %224, label %235

224:                                              ; preds = %212, %224
  %225 = phi i32 [ %230, %224 ], [ %101, %212 ]
  %226 = call i32 @llvm.cttz.i32(i32 %225, i1 true) #11, !range !2
  %227 = xor i32 %226, 31
  %228 = lshr i32 -2147483648, %227
  %229 = xor i32 %228, -1
  %230 = and i32 %225, %229
  %231 = zext i32 %230 to i64
  %232 = call i64 @llvm.ctpop.i64(i64 %231) #11, !range !3
  %233 = trunc i64 %232 to i32
  %234 = icmp ugt i32 %233, 16
  br i1 %234, label %224, label %235

235:                                              ; preds = %224, %212
  %236 = phi i32 [ %101, %212 ], [ %230, %224 ]
  %237 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 1, i32 0
  %238 = load i32, i32* %237, align 8
  %239 = and i32 %238, %236
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %254, label %241

241:                                              ; preds = %235
  %242 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %243 = load i64, i64* %242, align 8
  %244 = sub nsw i64 %217, %243
  %245 = icmp sgt i64 %244, 39999
  br i1 %245, label %246, label %254

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %248 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %247, align 8
  %249 = bitcast %"class.ui::VelocityTrackerStrategy"* %248 to void (%"class.ui::VelocityTrackerStrategy"*)***
  %250 = load void (%"class.ui::VelocityTrackerStrategy"*)**, void (%"class.ui::VelocityTrackerStrategy"*)*** %249, align 8
  %251 = getelementptr inbounds void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %250, i64 2
  %252 = load void (%"class.ui::VelocityTrackerStrategy"*)*, void (%"class.ui::VelocityTrackerStrategy"*)** %251, align 8
  call void %252(%"class.ui::VelocityTrackerStrategy"* %248) #11
  %253 = load i64, i64* %218, align 8
  br label %254

254:                                              ; preds = %246, %241, %235
  %255 = phi i64 [ %253, %246 ], [ %217, %241 ], [ %217, %235 ]
  %256 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %255, i64* %256, align 8
  store i32 %236, i32* %237, align 8
  %257 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 2
  %258 = load i32, i32* %257, align 4
  %259 = icmp slt i32 %258, 0
  br i1 %259, label %264, label %260

260:                                              ; preds = %254
  %261 = lshr i32 -2147483648, %258
  %262 = and i32 %261, %236
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %268

264:                                              ; preds = %260, %254
  %265 = icmp eq i32 %236, 0
  %266 = call i32 @llvm.ctlz.i32(i32 %236, i1 true) #11, !range !2
  %267 = select i1 %265, i32 -1, i32 %266
  store i32 %267, i32* %257, align 4
  br label %268

268:                                              ; preds = %260, %264
  %269 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %270 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %269, align 8
  %271 = bitcast %"class.ui::VelocityTrackerStrategy"* %270 to void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)***
  %272 = load void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)**, void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)*, void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)** %272, i64 4
  %274 = load void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)*, void (%"class.ui::VelocityTrackerStrategy"*, %"class.base::TimeTicks"*, i32, %"struct.ui::(anonymous namespace)::Position"*)** %273, align 8
  call void %274(%"class.ui::VelocityTrackerStrategy"* %270, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, i32 %236, %"struct.ui::(anonymous namespace)::Position"* nonnull %219) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %102) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %100) #11
  br label %292

275:                                              ; preds = %141, %275
  %276 = phi i64 [ 0, %141 ], [ %290, %275 ]
  %277 = getelementptr inbounds [16 x i32], [16 x i32]* %3, i64 0, i64 %276
  %278 = load i32, i32* %277, align 4
  %279 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %142, align 8
  %280 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %279, i64 7
  %281 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %280, align 8
  %282 = call float %281(%"class.ui::MotionEvent"* %1, i64 %276) #11
  %283 = zext i32 %278 to i64
  %284 = getelementptr inbounds [16 x %"struct.ui::(anonymous namespace)::Position"], [16 x %"struct.ui::(anonymous namespace)::Position"]* %4, i64 0, i64 %283, i32 0
  store float %282, float* %284, align 8
  %285 = load float (%"class.ui::MotionEvent"*, i64)**, float (%"class.ui::MotionEvent"*, i64)*** %142, align 8
  %286 = getelementptr inbounds float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %285, i64 8
  %287 = load float (%"class.ui::MotionEvent"*, i64)*, float (%"class.ui::MotionEvent"*, i64)** %286, align 8
  %288 = call float %287(%"class.ui::MotionEvent"* %1, i64 %276) #11
  %289 = getelementptr inbounds [16 x %"struct.ui::(anonymous namespace)::Position"], [16 x %"struct.ui::(anonymous namespace)::Position"]* %4, i64 0, i64 %283, i32 1
  store float %288, float* %289, align 4
  %290 = add nuw i64 %276, 1
  %291 = icmp ult i64 %290, %79
  br i1 %291, label %275, label %212

292:                                              ; preds = %2, %55, %65, %268
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui15VelocityTracker11GetVelocityEjPfS1_(%"class.ui::VelocityTracker"* nocapture readonly, i32, float* nocapture, float* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.ui::(anonymous namespace)::Estimator", align 8
  %6 = bitcast %"struct.ui::(anonymous namespace)::Estimator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %5, i64 0, i32 1, i64 0
  %9 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %5, i64 0, i32 3
  %10 = bitcast float* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -1, i64 40, i1 false)
  store i32 -1431655766, i32* %9, align 8
  %11 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %5, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  store i64 0, i64* %7, align 8
  %12 = getelementptr inbounds %"class.ui::VelocityTracker", %"class.ui::VelocityTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.ui::VelocityTrackerStrategy"*, %"class.ui::VelocityTrackerStrategy"** %12, align 8
  %14 = bitcast %"class.ui::VelocityTrackerStrategy"* %13 to i1 (%"class.ui::VelocityTrackerStrategy"*, i32, %"struct.ui::(anonymous namespace)::Estimator"*)***
  %15 = load i1 (%"class.ui::VelocityTrackerStrategy"*, i32, %"struct.ui::(anonymous namespace)::Estimator"*)**, i1 (%"class.ui::VelocityTrackerStrategy"*, i32, %"struct.ui::(anonymous namespace)::Estimator"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.ui::VelocityTrackerStrategy"*, i32, %"struct.ui::(anonymous namespace)::Estimator"*)*, i1 (%"class.ui::VelocityTrackerStrategy"*, i32, %"struct.ui::(anonymous namespace)::Estimator"*)** %15, i64 5
  %17 = load i1 (%"class.ui::VelocityTrackerStrategy"*, i32, %"struct.ui::(anonymous namespace)::Estimator"*)*, i1 (%"class.ui::VelocityTrackerStrategy"*, i32, %"struct.ui::(anonymous namespace)::Estimator"*)** %16, align 8
  %18 = call zeroext i1 %17(%"class.ui::VelocityTrackerStrategy"* %13, i32 %1, %"struct.ui::(anonymous namespace)::Estimator"* nonnull %5) #11
  %19 = xor i1 %18, true
  %20 = load i32, i32* %9, align 8
  %21 = icmp eq i32 %20, 0
  %22 = or i1 %21, %19
  br i1 %22, label %30, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %5, i64 0, i32 2, i64 1
  %25 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %5, i64 0, i32 1, i64 1
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = bitcast float* %2 to i32*
  store i32 %27, i32* %28, align 4
  %29 = load float, float* %24, align 4
  br label %31

30:                                               ; preds = %4
  store float 0.000000e+00, float* %2, align 4
  br label %31

31:                                               ; preds = %30, %23
  %32 = phi float [ 0.000000e+00, %30 ], [ %29, %23 ]
  %33 = phi i1 [ false, %30 ], [ true, %23 ]
  store float %32, float* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #11
  ret i1 %33
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategyD0Ev(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategy5ClearEv(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 4
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 0, i32 1, i32 0
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategy13ClearPointersENS_8BitSet32E(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %5, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = xor i32 %1, -1
  %9 = and i32 %7, %8
  store i32 %9, i32* %6, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @_ZN2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategy11AddMovementERKN4base9TimeTicksENS_8BitSet32EPKNS0_8PositionE(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nocapture, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8), i32, %"struct.ui::(anonymous namespace)::Position"* nocapture readonly) unnamed_addr #4 align 2 {
  %5 = bitcast %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0 to i8*
  %6 = bitcast %"struct.ui::(anonymous namespace)::Position"* %3 to i8*
  %7 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, 1
  %10 = icmp eq i32 %9, 20
  %11 = select i1 %10, i32 0, i32 %9
  store i32 %11, i32* %7, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 0, i32 0, i32 0
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 1, i32 0
  store i32 %2, i32* %16, align 8
  %17 = zext i32 %2 to i64
  %18 = tail call i64 @llvm.ctpop.i64(i64 %17) #11, !range !3
  %19 = icmp eq i32 %2, 0
  br i1 %19, label %134, label %20

20:                                               ; preds = %4
  %21 = icmp ult i64 %18, 4
  br i1 %21, label %22, label %42

22:                                               ; preds = %132, %42, %20
  %23 = phi i64 [ 0, %42 ], [ 0, %20 ], [ %56, %132 ]
  %24 = xor i64 %23, -1
  %25 = add nsw i64 %18, %24
  %26 = and i64 %18, 3
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %22, %28
  %29 = phi i64 [ %36, %28 ], [ %23, %22 ]
  %30 = phi i64 [ %37, %28 ], [ %26, %22 ]
  %31 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %29
  %32 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 2, i64 %29
  %33 = bitcast %"struct.ui::(anonymous namespace)::Position"* %31 to i64*
  %34 = bitcast %"struct.ui::(anonymous namespace)::Position"* %32 to i64*
  %35 = load i64, i64* %33, align 4
  store i64 %35, i64* %34, align 4
  %36 = add nuw nsw i64 %29, 1
  %37 = add i64 %30, -1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %28, !llvm.loop !4

39:                                               ; preds = %28, %22
  %40 = phi i64 [ %23, %22 ], [ %36, %28 ]
  %41 = icmp ult i64 %25, 3
  br i1 %41, label %134, label %135

42:                                               ; preds = %20
  %43 = mul nuw nsw i64 %12, 144
  %44 = add nuw nsw i64 %43, 36
  %45 = getelementptr i8, i8* %5, i64 %44
  %46 = shl nuw nsw i64 %18, 3
  %47 = add nuw nsw i64 %43, %46
  %48 = add nuw nsw i64 %47, 36
  %49 = getelementptr i8, i8* %5, i64 %48
  %50 = getelementptr %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %18
  %51 = bitcast %"struct.ui::(anonymous namespace)::Position"* %50 to i8*
  %52 = icmp ult i8* %45, %51
  %53 = icmp ugt i8* %49, %6
  %54 = and i1 %52, %53
  br i1 %54, label %22, label %55

55:                                               ; preds = %42
  %56 = and i64 %18, 60
  %57 = add nsw i64 %56, -4
  %58 = lshr exact i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 12
  br i1 %61, label %113, label %62

62:                                               ; preds = %55
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %65
  %68 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 2, i64 %65
  %69 = bitcast %"struct.ui::(anonymous namespace)::Position"* %67 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 4, !alias.scope !6
  %71 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %67, i64 2
  %72 = bitcast %"struct.ui::(anonymous namespace)::Position"* %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 4, !alias.scope !6
  %74 = bitcast %"struct.ui::(anonymous namespace)::Position"* %68 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 4, !alias.scope !9, !noalias !6
  %75 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %68, i64 2
  %76 = bitcast %"struct.ui::(anonymous namespace)::Position"* %75 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %76, align 4, !alias.scope !9, !noalias !6
  %77 = or i64 %65, 4
  %78 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %77
  %79 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 2, i64 %77
  %80 = bitcast %"struct.ui::(anonymous namespace)::Position"* %78 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 4, !alias.scope !6
  %82 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %78, i64 2
  %83 = bitcast %"struct.ui::(anonymous namespace)::Position"* %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 4, !alias.scope !6
  %85 = bitcast %"struct.ui::(anonymous namespace)::Position"* %79 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 4, !alias.scope !9, !noalias !6
  %86 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %79, i64 2
  %87 = bitcast %"struct.ui::(anonymous namespace)::Position"* %86 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %87, align 4, !alias.scope !9, !noalias !6
  %88 = or i64 %65, 8
  %89 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %88
  %90 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 2, i64 %88
  %91 = bitcast %"struct.ui::(anonymous namespace)::Position"* %89 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 4, !alias.scope !6
  %93 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %89, i64 2
  %94 = bitcast %"struct.ui::(anonymous namespace)::Position"* %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 4, !alias.scope !6
  %96 = bitcast %"struct.ui::(anonymous namespace)::Position"* %90 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 4, !alias.scope !9, !noalias !6
  %97 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %90, i64 2
  %98 = bitcast %"struct.ui::(anonymous namespace)::Position"* %97 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %98, align 4, !alias.scope !9, !noalias !6
  %99 = or i64 %65, 12
  %100 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %99
  %101 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 2, i64 %99
  %102 = bitcast %"struct.ui::(anonymous namespace)::Position"* %100 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 4, !alias.scope !6
  %104 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %100, i64 2
  %105 = bitcast %"struct.ui::(anonymous namespace)::Position"* %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 4, !alias.scope !6
  %107 = bitcast %"struct.ui::(anonymous namespace)::Position"* %101 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 4, !alias.scope !9, !noalias !6
  %108 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %101, i64 2
  %109 = bitcast %"struct.ui::(anonymous namespace)::Position"* %108 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %109, align 4, !alias.scope !9, !noalias !6
  %110 = add i64 %65, 16
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !11

113:                                              ; preds = %64, %55
  %114 = phi i64 [ 0, %55 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %117
  %120 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 2, i64 %117
  %121 = bitcast %"struct.ui::(anonymous namespace)::Position"* %119 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 4, !alias.scope !6
  %123 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %119, i64 2
  %124 = bitcast %"struct.ui::(anonymous namespace)::Position"* %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 4, !alias.scope !6
  %126 = bitcast %"struct.ui::(anonymous namespace)::Position"* %120 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %126, align 4, !alias.scope !9, !noalias !6
  %127 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %120, i64 2
  %128 = bitcast %"struct.ui::(anonymous namespace)::Position"* %127 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %128, align 4, !alias.scope !9, !noalias !6
  %129 = add i64 %117, 4
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !13

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %18, %56
  br i1 %133, label %134, label %22

134:                                              ; preds = %39, %135, %132, %4
  ret void

135:                                              ; preds = %39, %135
  %136 = phi i64 [ %160, %135 ], [ %40, %39 ]
  %137 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %136
  %138 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 2, i64 %136
  %139 = bitcast %"struct.ui::(anonymous namespace)::Position"* %137 to i64*
  %140 = bitcast %"struct.ui::(anonymous namespace)::Position"* %138 to i64*
  %141 = load i64, i64* %139, align 4
  store i64 %141, i64* %140, align 4
  %142 = add nuw nsw i64 %136, 1
  %143 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %142
  %144 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 2, i64 %142
  %145 = bitcast %"struct.ui::(anonymous namespace)::Position"* %143 to i64*
  %146 = bitcast %"struct.ui::(anonymous namespace)::Position"* %144 to i64*
  %147 = load i64, i64* %145, align 4
  store i64 %147, i64* %146, align 4
  %148 = add nuw nsw i64 %136, 2
  %149 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %148
  %150 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 2, i64 %148
  %151 = bitcast %"struct.ui::(anonymous namespace)::Position"* %149 to i64*
  %152 = bitcast %"struct.ui::(anonymous namespace)::Position"* %150 to i64*
  %153 = load i64, i64* %151, align 4
  store i64 %153, i64* %152, align 4
  %154 = add nuw nsw i64 %136, 3
  %155 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %154
  %156 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %12, i32 2, i64 %154
  %157 = bitcast %"struct.ui::(anonymous namespace)::Position"* %155 to i64*
  %158 = bitcast %"struct.ui::(anonymous namespace)::Position"* %156 to i64*
  %159 = load i64, i64* %157, align 4
  store i64 %159, i64* %158, align 4
  %160 = add nuw nsw i64 %136, 4
  %161 = icmp eq i64 %160, %18
  br i1 %161, label %134, label %135, !llvm.loop !14
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK2ui12_GLOBAL__N_135LeastSquaresVelocityTrackerStrategy12GetEstimatorEjPNS0_9EstimatorE(%"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* nocapture readonly, i32, %"struct.ui::(anonymous namespace)::Estimator"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = alloca [20 x float], align 16
  %8 = alloca [20 x float], align 16
  %9 = alloca [20 x float], align 16
  %10 = alloca [20 x float], align 16
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = bitcast %"struct.ui::(anonymous namespace)::Estimator"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 56, i1 false) #11
  %14 = bitcast [20 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -1, i64 80, i1 false)
  %15 = bitcast [20 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -1, i64 80, i1 false)
  %16 = bitcast [20 x float]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -1, i64 80, i1 false)
  %17 = bitcast [20 x float]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %17) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -1, i64 80, i1 false)
  %18 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %20
  %22 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %20, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = lshr i32 -2147483648, %1
  %25 = and i32 %23, %24
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %236, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"struct.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy::Movement", %"struct.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy::Movement"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = zext i32 %1 to i64
  %30 = ashr i64 -4294967296, %29
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 2
  %33 = bitcast %"class.base::TimeDelta"* %6 to i8*
  %34 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  %35 = bitcast %"class.base::TimeDelta"* %5 to i8*
  %36 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  %37 = bitcast %"class.base::TimeDelta"* %4 to i8*
  %38 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  br label %46

39:                                               ; preds = %141
  %40 = add nuw nsw i64 %48, 1
  %41 = zext i32 %148 to i64
  %42 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %41, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, %24
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %154, label %46

46:                                               ; preds = %27, %39
  %47 = phi i32 [ %23, %27 ], [ %43, %39 ]
  %48 = phi i64 [ 0, %27 ], [ %40, %39 ]
  %49 = phi i64 [ %20, %27 ], [ %41, %39 ]
  %50 = phi i32 [ 0, %27 ], [ %149, %39 ]
  %51 = phi i32 [ %19, %27 ], [ %148, %39 ]
  %52 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %49, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = load i64, i64* %28, align 8
  %55 = sub nsw i64 %54, %53
  %56 = icmp sgt i64 %55, 100000
  br i1 %56, label %151, label %57

57:                                               ; preds = %46
  %58 = and i32 %47, %31
  %59 = zext i32 %58 to i64
  %60 = call i64 @llvm.ctpop.i64(i64 %59) #11, !range !3
  %61 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %49, i32 2, i64 %60
  %62 = bitcast %"struct.ui::(anonymous namespace)::Position"* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds [20 x float], [20 x float]* %7, i64 0, i64 %48
  %65 = bitcast float* %64 to i32*
  store i32 %63, i32* %65, align 4
  %66 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %49, i32 2, i64 %60, i32 1
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 %48
  %70 = bitcast float* %69 to i32*
  store i32 %68, i32* %70, align 4
  %71 = load i32, i32* %32, align 4
  switch i32 %71, label %133 [
    i32 1, label %72
    i32 2, label %92
    i32 3, label %116
  ]

72:                                               ; preds = %57
  %73 = load i32, i32* %18, align 4
  %74 = icmp eq i32 %73, %51
  br i1 %74, label %133, label %75

75:                                               ; preds = %72
  %76 = add i32 %51, 1
  %77 = urem i32 %76, 20
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %49, i32 0, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %78, i32 0, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = sub nsw i64 %82, %80
  store i64 %83, i64* %38, align 8
  %84 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %4) #11
  %85 = fptrunc double %84 to float
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %86 = fcmp olt float %85, 0.000000e+00
  br i1 %86, label %133, label %87

87:                                               ; preds = %75
  %88 = fcmp olt float %85, 1.000000e+01
  br i1 %88, label %89, label %133

89:                                               ; preds = %87
  %90 = fmul float %85, 0x3FA99999A0000000
  %91 = fadd float %90, 5.000000e-01
  br label %133

92:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %93 = load i32, i32* %18, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %49, i32 0, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %94, i32 0, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = sub nsw i64 %98, %96
  store i64 %99, i64* %36, align 8
  %100 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %5) #11
  %101 = fptrunc double %100 to float
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  %102 = fcmp olt float %101, 0.000000e+00
  br i1 %102, label %133, label %103

103:                                              ; preds = %92
  %104 = fcmp olt float %101, 1.000000e+01
  br i1 %104, label %105, label %108

105:                                              ; preds = %103
  %106 = fmul float %101, 0x3FA99999A0000000
  %107 = fadd float %106, 5.000000e-01
  br label %133

108:                                              ; preds = %103
  %109 = fcmp olt float %101, 5.000000e+01
  br i1 %109, label %133, label %110

110:                                              ; preds = %108
  %111 = fcmp olt float %101, 6.000000e+01
  br i1 %111, label %112, label %133

112:                                              ; preds = %110
  %113 = fsub float 6.000000e+01, %101
  %114 = fmul float %113, 0x3FA99999A0000000
  %115 = fadd float %114, 5.000000e-01
  br label %133

116:                                              ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %117 = load i32, i32* %18, align 4
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %49, i32 0, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %118, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = sub nsw i64 %122, %120
  store i64 %123, i64* %34, align 8
  %124 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %6) #11
  %125 = fptrunc double %124 to float
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %126 = fcmp olt float %125, 5.000000e+01
  br i1 %126, label %133, label %127

127:                                              ; preds = %116
  %128 = fcmp olt float %125, 1.000000e+02
  br i1 %128, label %129, label %133

129:                                              ; preds = %127
  %130 = fsub float 1.000000e+02, %125
  %131 = fmul float %130, 0x3F847AE140000000
  %132 = fadd float %131, 5.000000e-01
  br label %133

133:                                              ; preds = %57, %72, %75, %87, %89, %92, %105, %108, %110, %112, %116, %127, %129
  %134 = phi float [ 1.000000e+00, %72 ], [ %91, %89 ], [ 5.000000e-01, %75 ], [ 1.000000e+00, %87 ], [ %107, %105 ], [ %115, %112 ], [ 5.000000e-01, %92 ], [ 1.000000e+00, %108 ], [ 5.000000e-01, %110 ], [ %132, %129 ], [ 1.000000e+00, %116 ], [ 5.000000e-01, %127 ], [ 1.000000e+00, %57 ]
  %135 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 %48
  store float %134, float* %135, align 4
  %136 = add i64 %55, -9223372036854775807
  %137 = icmp ult i64 %136, 2
  br i1 %137, label %141, label %138

138:                                              ; preds = %133
  %139 = sitofp i64 %55 to double
  %140 = fdiv double %139, 1.000000e+06
  br label %141

141:                                              ; preds = %133, %138
  %142 = phi double [ %140, %138 ], [ 0xFFF0000000000000, %133 ]
  %143 = fptrunc double %142 to float
  %144 = fsub float -0.000000e+00, %143
  %145 = getelementptr inbounds [20 x float], [20 x float]* %10, i64 0, i64 %48
  store float %144, float* %145, align 4
  %146 = icmp eq i32 %51, 0
  %147 = add i32 %51, -1
  %148 = select i1 %146, i32 19, i32 %147
  %149 = add nuw nsw i32 %50, 1
  %150 = icmp eq i64 %48, 19
  br i1 %150, label %154, label %39

151:                                              ; preds = %46
  %152 = trunc i64 %48 to i32
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %236, label %154

154:                                              ; preds = %39, %141, %151
  %155 = phi i32 [ %152, %151 ], [ 20, %141 ], [ %149, %39 ]
  %156 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 1
  %157 = load i32, i32* %156, align 8
  %158 = add i32 %155, -1
  %159 = icmp ugt i32 %157, %158
  %160 = select i1 %159, i32 %158, i32 %157
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %222, label %162

162:                                              ; preds = %154
  %163 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %163) #11
  store float 0.000000e+00, float* %11, align 4
  %164 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164) #11
  store float 0.000000e+00, float* %12, align 4
  %165 = add i32 %160, 1
  %166 = getelementptr inbounds [20 x float], [20 x float]* %10, i64 0, i64 0
  %167 = getelementptr inbounds [20 x float], [20 x float]* %7, i64 0, i64 0
  %168 = getelementptr inbounds [20 x float], [20 x float]* %9, i64 0, i64 0
  %169 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 1, i64 0
  %170 = call fastcc zeroext i1 @_ZN2uiL17SolveLeastSquaresEPKfS1_S1_jjPfS2_(float* nonnull %166, float* nonnull %167, float* nonnull %168, i32 %155, i32 %165, float* %169, float* nonnull %11)
  br i1 %170, label %171, label %219

171:                                              ; preds = %162
  %172 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 0
  %173 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 2, i64 0
  %174 = call fastcc zeroext i1 @_ZN2uiL17SolveLeastSquaresEPKfS1_S1_jjPfS2_(float* nonnull %166, float* nonnull %172, float* nonnull %168, i32 %155, i32 %165, float* %173, float* nonnull %12)
  br i1 %174, label %175, label %219

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 3
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %210

179:                                              ; preds = %175
  %180 = load i32, i32* %22, align 4
  %181 = zext i32 %1 to i64
  %182 = ashr i64 -4294967296, %181
  %183 = trunc i64 %182 to i32
  %184 = and i32 %180, %183
  %185 = zext i32 %184 to i64
  %186 = call i64 @llvm.ctpop.i64(i64 %185) #11, !range !3
  %187 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %20, i32 2, i64 %186, i32 0
  %188 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %49, i32 1, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, %183
  %191 = zext i32 %190 to i64
  %192 = call i64 @llvm.ctpop.i64(i64 %191) #11, !range !3
  %193 = getelementptr inbounds %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy"* %0, i64 0, i32 5, i64 %49, i32 2, i64 %192, i32 0
  %194 = bitcast float* %187 to <2 x float>*
  %195 = load <2 x float>, <2 x float>* %194, align 4
  %196 = bitcast float* %193 to <2 x float>*
  %197 = load <2 x float>, <2 x float>* %196, align 4
  %198 = fsub <2 x float> %195, %197
  %199 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 1, i64 1
  %200 = load float, float* %199, align 4
  %201 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 2, i64 1
  %202 = load float, float* %201, align 4
  %203 = insertelement <2 x float> undef, float %200, i32 0
  %204 = insertelement <2 x float> %203, float %202, i32 1
  %205 = fmul <2 x float> %198, %204
  %206 = extractelement <2 x float> %205, i32 0
  %207 = extractelement <2 x float> %205, i32 1
  %208 = fadd float %206, %207
  %209 = fcmp uge float %208, 0.000000e+00
  br i1 %209, label %210, label %220

210:                                              ; preds = %179, %175
  %211 = getelementptr inbounds %"struct.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy::Movement", %"struct.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy::Movement"* %21, i64 0, i32 0, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 0, i32 0, i32 0
  %213 = load i64, i64* %211, align 8
  store i64 %213, i64* %212, align 8
  %214 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 3
  store i32 %160, i32* %214, align 8
  %215 = load float, float* %11, align 4
  %216 = load float, float* %12, align 4
  %217 = fmul float %215, %216
  %218 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 4
  store float %217, float* %218, align 4
  br label %220

219:                                              ; preds = %171, %162
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %163) #11
  br label %222

220:                                              ; preds = %179, %210
  %221 = phi i1 [ true, %210 ], [ false, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %163) #11
  br label %236

222:                                              ; preds = %219, %154
  %223 = bitcast [20 x float]* %7 to i32*
  %224 = load i32, i32* %223, align 16
  %225 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 1
  %226 = bitcast [5 x float]* %225 to i32*
  store i32 %224, i32* %226, align 8
  %227 = bitcast [20 x float]* %8 to i32*
  %228 = load i32, i32* %227, align 16
  %229 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 2
  %230 = bitcast [5 x float]* %229 to i32*
  store i32 %228, i32* %230, align 4
  %231 = getelementptr inbounds %"struct.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy::Movement", %"struct.ui::(anonymous namespace)::LeastSquaresVelocityTrackerStrategy::Movement"* %21, i64 0, i32 0, i32 0, i32 0
  %232 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 0, i32 0, i32 0
  %233 = load i64, i64* %231, align 8
  store i64 %233, i64* %232, align 8
  %234 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 3
  store i32 0, i32* %234, align 8
  %235 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 4
  store float 1.000000e+00, float* %235, align 4
  br label %236

236:                                              ; preds = %3, %220, %222, %151
  %237 = phi i1 [ false, %151 ], [ true, %222 ], [ %221, %220 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %14) #11
  ret i1 %237
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui23VelocityTrackerStrategyD2Ev(%"class.ui::VelocityTrackerStrategy"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #6

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2uiL17SolveLeastSquaresEPKfS1_S1_jjPfS2_(float* nocapture readonly, float* nocapture readonly, float* nocapture readonly, i32, i32, float* nocapture, float* nocapture) unnamed_addr #4 {
  %8 = zext i32 %4 to i64
  %9 = zext i32 %3 to i64
  %10 = mul nuw i64 %8, %9
  %11 = alloca float, i64 %10, align 16
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = bitcast float* %11 to i8*
  %15 = shl i64 %10, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -1, i64 %15, i1 false)
  br label %16

16:                                               ; preds = %13, %7
  %17 = icmp eq i32 %3, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %16
  %19 = icmp ugt i32 %4, 1
  %20 = add nsw i64 %8, -1
  %21 = add nsw i64 %8, -2
  %22 = icmp eq i32 %3, 1
  %23 = and i64 %20, 1
  %24 = icmp eq i64 %21, 0
  %25 = sub nsw i64 %20, %23
  %26 = icmp eq i64 %23, 0
  %27 = and i64 %20, 3
  %28 = icmp ult i64 %21, 3
  %29 = sub nsw i64 %20, %27
  %30 = icmp eq i64 %27, 0
  br label %33

31:                                               ; preds = %90, %16
  %32 = alloca float, i64 %10, align 16
  br i1 %12, label %118, label %115

33:                                               ; preds = %90, %18
  %34 = phi i64 [ 0, %18 ], [ %91, %90 ]
  %35 = getelementptr float, float* %11, i64 %34
  %36 = getelementptr inbounds float, float* %2, i64 %34
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds float, float* %11, i64 %34
  %40 = bitcast float* %39 to i32*
  store i32 %38, i32* %40, align 4
  br i1 %19, label %41, label %90

41:                                               ; preds = %33
  %42 = getelementptr inbounds float, float* %0, i64 %34
  %43 = load float, float* %42, align 4
  br i1 %22, label %65, label %44

44:                                               ; preds = %41
  br i1 %24, label %80, label %45

45:                                               ; preds = %44, %45
  %46 = phi i64 [ %62, %45 ], [ 1, %44 ]
  %47 = phi i64 [ %63, %45 ], [ %25, %44 ]
  %48 = add nsw i64 %46, -1
  %49 = mul nuw nsw i64 %48, %9
  %50 = getelementptr inbounds float, float* %39, i64 %49
  %51 = load float, float* %50, align 4
  %52 = fmul float %51, %43
  %53 = mul nuw nsw i64 %46, %9
  %54 = getelementptr inbounds float, float* %39, i64 %53
  store float %52, float* %54, align 4
  %55 = add nuw nsw i64 %46, 1
  %56 = mul nuw nsw i64 %46, %9
  %57 = getelementptr inbounds float, float* %39, i64 %56
  %58 = load float, float* %57, align 4
  %59 = fmul float %58, %43
  %60 = mul nuw nsw i64 %55, %9
  %61 = getelementptr inbounds float, float* %39, i64 %60
  store float %59, float* %61, align 4
  %62 = add nuw nsw i64 %46, 2
  %63 = add i64 %47, -2
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %80, label %45

65:                                               ; preds = %41
  %66 = load float, float* %35, align 4
  br i1 %28, label %67, label %93

67:                                               ; preds = %93, %65
  %68 = phi float [ %66, %65 ], [ %109, %93 ]
  %69 = phi i64 [ 1, %65 ], [ %112, %93 ]
  br i1 %30, label %90, label %70

70:                                               ; preds = %67, %70
  %71 = phi float [ %74, %70 ], [ %68, %67 ]
  %72 = phi i64 [ %77, %70 ], [ %69, %67 ]
  %73 = phi i64 [ %78, %70 ], [ %27, %67 ]
  %74 = fmul float %71, %43
  %75 = mul nuw nsw i64 %72, %9
  %76 = getelementptr inbounds float, float* %39, i64 %75
  store float %74, float* %76, align 4
  %77 = add nuw nsw i64 %72, 1
  %78 = add i64 %73, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %90, label %70, !llvm.loop !15

80:                                               ; preds = %45, %44
  %81 = phi i64 [ 1, %44 ], [ %62, %45 ]
  br i1 %26, label %90, label %82

82:                                               ; preds = %80
  %83 = add nsw i64 %81, -1
  %84 = mul nuw nsw i64 %83, %9
  %85 = getelementptr inbounds float, float* %39, i64 %84
  %86 = load float, float* %85, align 4
  %87 = fmul float %86, %43
  %88 = mul nuw nsw i64 %81, %9
  %89 = getelementptr inbounds float, float* %39, i64 %88
  store float %87, float* %89, align 4
  br label %90

90:                                               ; preds = %82, %80, %67, %70, %33
  %91 = add nuw nsw i64 %34, 1
  %92 = icmp eq i64 %91, %9
  br i1 %92, label %31, label %33

93:                                               ; preds = %65, %93
  %94 = phi float [ %109, %93 ], [ %66, %65 ]
  %95 = phi i64 [ %112, %93 ], [ 1, %65 ]
  %96 = phi i64 [ %113, %93 ], [ %29, %65 ]
  %97 = fmul float %94, %43
  %98 = mul nuw nsw i64 %95, %9
  %99 = getelementptr inbounds float, float* %39, i64 %98
  store float %97, float* %99, align 4
  %100 = add nuw nsw i64 %95, 1
  %101 = fmul float %97, %43
  %102 = mul nuw nsw i64 %100, %9
  %103 = getelementptr inbounds float, float* %39, i64 %102
  store float %101, float* %103, align 4
  %104 = add nuw nsw i64 %95, 2
  %105 = fmul float %101, %43
  %106 = mul nuw nsw i64 %104, %9
  %107 = getelementptr inbounds float, float* %39, i64 %106
  store float %105, float* %107, align 4
  %108 = add nuw nsw i64 %95, 3
  %109 = fmul float %105, %43
  %110 = mul nuw nsw i64 %108, %9
  %111 = getelementptr inbounds float, float* %39, i64 %110
  store float %109, float* %111, align 4
  %112 = add nuw nsw i64 %95, 4
  %113 = add i64 %96, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %67, label %93

115:                                              ; preds = %31
  %116 = bitcast float* %32 to i8*
  %117 = shl i64 %10, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %116, i8 -1, i64 %117, i1 false)
  br label %118

118:                                              ; preds = %115, %31
  %119 = mul nuw i64 %8, %8
  %120 = alloca float, i64 %119, align 16
  %121 = icmp eq i64 %119, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  %123 = bitcast float* %120 to i8*
  %124 = shl i64 %119, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %123, i8 -1, i64 %124, i1 false)
  br label %125

125:                                              ; preds = %122, %118
  %126 = icmp eq i32 %4, 0
  br i1 %126, label %519, label %127

127:                                              ; preds = %125
  %128 = shl nuw nsw i64 %9, 2
  %129 = add i32 %3, -1
  %130 = and i64 %9, 4294967288
  %131 = add nsw i64 %130, -8
  %132 = lshr exact i64 %131, 3
  %133 = add nuw nsw i64 %132, 1
  %134 = and i32 %3, 3
  %135 = icmp eq i32 %134, 0
  %136 = icmp ult i32 %129, 3
  %137 = icmp ult i32 %3, 8
  %138 = and i64 %9, 4294967288
  %139 = and i64 %133, 1
  %140 = icmp eq i64 %131, 0
  %141 = sub nuw nsw i64 %133, %139
  %142 = icmp eq i64 %139, 0
  %143 = icmp eq i64 %138, %9
  %144 = and i64 %9, 1
  %145 = icmp eq i64 %144, 0
  %146 = sub nsw i64 0, %9
  %147 = and i32 %3, 3
  %148 = icmp eq i32 %147, 0
  %149 = icmp ult i32 %129, 3
  %150 = icmp ult i32 %3, 8
  %151 = and i64 %9, 4294967288
  %152 = and i64 %133, 1
  %153 = icmp eq i64 %131, 0
  %154 = sub nuw nsw i64 %133, %152
  %155 = icmp eq i64 %152, 0
  %156 = icmp eq i64 %151, %9
  %157 = and i32 %3, 3
  %158 = icmp eq i32 %157, 0
  %159 = icmp ult i32 %129, 3
  br label %160

160:                                              ; preds = %516, %127
  %161 = phi i64 [ 0, %127 ], [ %517, %516 ]
  %162 = mul i64 %161, %9
  %163 = getelementptr float, float* %32, i64 %162
  %164 = add i64 %162, %9
  %165 = getelementptr float, float* %32, i64 %164
  %166 = mul nuw i64 %161, %9
  %167 = getelementptr float, float* %32, i64 %166
  br i1 %17, label %172, label %168

168:                                              ; preds = %160
  %169 = getelementptr float, float* %11, i64 %166
  %170 = bitcast float* %169 to i8*
  %171 = bitcast float* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 4 %170, i64 %128, i1 false)
  br label %172

172:                                              ; preds = %168, %160
  %173 = icmp eq i64 %161, 0
  br i1 %173, label %174, label %219

174:                                              ; preds = %371, %172
  br i1 %17, label %215, label %175

175:                                              ; preds = %174
  br i1 %148, label %188, label %176

176:                                              ; preds = %175, %176
  %177 = phi float* [ %182, %176 ], [ %167, %175 ]
  %178 = phi float [ %185, %176 ], [ 0.000000e+00, %175 ]
  %179 = phi i32 [ %181, %176 ], [ %3, %175 ]
  %180 = phi i32 [ %186, %176 ], [ %147, %175 ]
  %181 = add i32 %179, -1
  %182 = getelementptr inbounds float, float* %177, i64 1
  %183 = load float, float* %177, align 4
  %184 = fmul float %183, %183
  %185 = fadd float %178, %184
  %186 = add i32 %180, -1
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %176, !llvm.loop !16

188:                                              ; preds = %176, %175
  %189 = phi float [ undef, %175 ], [ %185, %176 ]
  %190 = phi float* [ %167, %175 ], [ %182, %176 ]
  %191 = phi float [ 0.000000e+00, %175 ], [ %185, %176 ]
  %192 = phi i32 [ %3, %175 ], [ %181, %176 ]
  br i1 %149, label %215, label %193

193:                                              ; preds = %188, %193
  %194 = phi float* [ %210, %193 ], [ %190, %188 ]
  %195 = phi float [ %213, %193 ], [ %191, %188 ]
  %196 = phi i32 [ %209, %193 ], [ %192, %188 ]
  %197 = getelementptr inbounds float, float* %194, i64 1
  %198 = load float, float* %194, align 4
  %199 = fmul float %198, %198
  %200 = fadd float %195, %199
  %201 = getelementptr inbounds float, float* %194, i64 2
  %202 = load float, float* %197, align 4
  %203 = fmul float %202, %202
  %204 = fadd float %200, %203
  %205 = getelementptr inbounds float, float* %194, i64 3
  %206 = load float, float* %201, align 4
  %207 = fmul float %206, %206
  %208 = fadd float %204, %207
  %209 = add i32 %196, -4
  %210 = getelementptr inbounds float, float* %194, i64 4
  %211 = load float, float* %205, align 4
  %212 = fmul float %211, %211
  %213 = fadd float %208, %212
  %214 = icmp eq i32 %209, 0
  br i1 %214, label %215, label %193

215:                                              ; preds = %188, %193, %174
  %216 = phi float [ 0.000000e+00, %174 ], [ %189, %188 ], [ %213, %193 ]
  %217 = call float @sqrtf(float %216) #11
  %218 = fcmp olt float %217, 0x3EB0C6F7A0000000
  br i1 %218, label %887, label %391

219:                                              ; preds = %172, %371
  %220 = phi i64 [ %372, %371 ], [ 0, %172 ]
  %221 = mul i64 %220, %9
  %222 = getelementptr float, float* %32, i64 %221
  %223 = add i64 %221, %9
  %224 = getelementptr float, float* %32, i64 %223
  %225 = mul nuw nsw i64 %220, %9
  %226 = getelementptr inbounds float, float* %32, i64 %225
  br i1 %17, label %371, label %227

227:                                              ; preds = %219
  br i1 %135, label %243, label %228

228:                                              ; preds = %227, %228
  %229 = phi float [ %240, %228 ], [ 0.000000e+00, %227 ]
  %230 = phi i32 [ %234, %228 ], [ %3, %227 ]
  %231 = phi float* [ %237, %228 ], [ %226, %227 ]
  %232 = phi float* [ %235, %228 ], [ %167, %227 ]
  %233 = phi i32 [ %241, %228 ], [ %134, %227 ]
  %234 = add i32 %230, -1
  %235 = getelementptr inbounds float, float* %232, i64 1
  %236 = load float, float* %232, align 4
  %237 = getelementptr inbounds float, float* %231, i64 1
  %238 = load float, float* %231, align 4
  %239 = fmul float %236, %238
  %240 = fadd float %229, %239
  %241 = add i32 %233, -1
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %228, !llvm.loop !17

243:                                              ; preds = %228, %227
  %244 = phi float [ undef, %227 ], [ %240, %228 ]
  %245 = phi float [ 0.000000e+00, %227 ], [ %240, %228 ]
  %246 = phi i32 [ %3, %227 ], [ %234, %228 ]
  %247 = phi float* [ %226, %227 ], [ %237, %228 ]
  %248 = phi float* [ %167, %227 ], [ %235, %228 ]
  br i1 %136, label %280, label %249

249:                                              ; preds = %243, %249
  %250 = phi float [ %278, %249 ], [ %245, %243 ]
  %251 = phi i32 [ %272, %249 ], [ %246, %243 ]
  %252 = phi float* [ %275, %249 ], [ %247, %243 ]
  %253 = phi float* [ %273, %249 ], [ %248, %243 ]
  %254 = getelementptr inbounds float, float* %253, i64 1
  %255 = load float, float* %253, align 4
  %256 = getelementptr inbounds float, float* %252, i64 1
  %257 = load float, float* %252, align 4
  %258 = fmul float %255, %257
  %259 = fadd float %250, %258
  %260 = getelementptr inbounds float, float* %253, i64 2
  %261 = load float, float* %254, align 4
  %262 = getelementptr inbounds float, float* %252, i64 2
  %263 = load float, float* %256, align 4
  %264 = fmul float %261, %263
  %265 = fadd float %259, %264
  %266 = getelementptr inbounds float, float* %253, i64 3
  %267 = load float, float* %260, align 4
  %268 = getelementptr inbounds float, float* %252, i64 3
  %269 = load float, float* %262, align 4
  %270 = fmul float %267, %269
  %271 = fadd float %265, %270
  %272 = add i32 %251, -4
  %273 = getelementptr inbounds float, float* %253, i64 4
  %274 = load float, float* %266, align 4
  %275 = getelementptr inbounds float, float* %252, i64 4
  %276 = load float, float* %268, align 4
  %277 = fmul float %274, %276
  %278 = fadd float %271, %277
  %279 = icmp eq i32 %272, 0
  br i1 %279, label %280, label %249

280:                                              ; preds = %249, %243
  %281 = phi float [ %244, %243 ], [ %278, %249 ]
  br i1 %17, label %371, label %282

282:                                              ; preds = %280
  br i1 %137, label %283, label %297

283:                                              ; preds = %370, %297, %282
  %284 = phi i64 [ 0, %297 ], [ 0, %282 ], [ %138, %370 ]
  %285 = xor i64 %284, -1
  br i1 %145, label %294, label %286

286:                                              ; preds = %283
  %287 = getelementptr inbounds float, float* %226, i64 %284
  %288 = load float, float* %287, align 4
  %289 = fmul float %281, %288
  %290 = getelementptr inbounds float, float* %167, i64 %284
  %291 = load float, float* %290, align 4
  %292 = fsub float %291, %289
  store float %292, float* %290, align 4
  %293 = or i64 %284, 1
  br label %294

294:                                              ; preds = %286, %283
  %295 = phi i64 [ %293, %286 ], [ %284, %283 ]
  %296 = icmp eq i64 %285, %146
  br i1 %296, label %371, label %374

297:                                              ; preds = %282
  %298 = icmp ult float* %163, %224
  %299 = icmp ult float* %222, %165
  %300 = and i1 %298, %299
  br i1 %300, label %283, label %301

301:                                              ; preds = %297
  %302 = insertelement <4 x float> undef, float %281, i32 0
  %303 = shufflevector <4 x float> %302, <4 x float> undef, <4 x i32> zeroinitializer
  %304 = insertelement <4 x float> undef, float %281, i32 0
  %305 = shufflevector <4 x float> %304, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %140, label %349, label %306

306:                                              ; preds = %301, %306
  %307 = phi i64 [ %346, %306 ], [ 0, %301 ]
  %308 = phi i64 [ %347, %306 ], [ %141, %301 ]
  %309 = getelementptr inbounds float, float* %226, i64 %307
  %310 = bitcast float* %309 to <4 x float>*
  %311 = load <4 x float>, <4 x float>* %310, align 4, !alias.scope !18
  %312 = getelementptr inbounds float, float* %309, i64 4
  %313 = bitcast float* %312 to <4 x float>*
  %314 = load <4 x float>, <4 x float>* %313, align 4, !alias.scope !18
  %315 = fmul <4 x float> %303, %311
  %316 = fmul <4 x float> %305, %314
  %317 = getelementptr inbounds float, float* %167, i64 %307
  %318 = bitcast float* %317 to <4 x float>*
  %319 = load <4 x float>, <4 x float>* %318, align 4, !alias.scope !21, !noalias !18
  %320 = getelementptr inbounds float, float* %317, i64 4
  %321 = bitcast float* %320 to <4 x float>*
  %322 = load <4 x float>, <4 x float>* %321, align 4, !alias.scope !21, !noalias !18
  %323 = fsub <4 x float> %319, %315
  %324 = fsub <4 x float> %322, %316
  %325 = bitcast float* %317 to <4 x float>*
  store <4 x float> %323, <4 x float>* %325, align 4, !alias.scope !21, !noalias !18
  %326 = bitcast float* %320 to <4 x float>*
  store <4 x float> %324, <4 x float>* %326, align 4, !alias.scope !21, !noalias !18
  %327 = or i64 %307, 8
  %328 = getelementptr inbounds float, float* %226, i64 %327
  %329 = bitcast float* %328 to <4 x float>*
  %330 = load <4 x float>, <4 x float>* %329, align 4, !alias.scope !18
  %331 = getelementptr inbounds float, float* %328, i64 4
  %332 = bitcast float* %331 to <4 x float>*
  %333 = load <4 x float>, <4 x float>* %332, align 4, !alias.scope !18
  %334 = fmul <4 x float> %303, %330
  %335 = fmul <4 x float> %305, %333
  %336 = getelementptr inbounds float, float* %167, i64 %327
  %337 = bitcast float* %336 to <4 x float>*
  %338 = load <4 x float>, <4 x float>* %337, align 4, !alias.scope !21, !noalias !18
  %339 = getelementptr inbounds float, float* %336, i64 4
  %340 = bitcast float* %339 to <4 x float>*
  %341 = load <4 x float>, <4 x float>* %340, align 4, !alias.scope !21, !noalias !18
  %342 = fsub <4 x float> %338, %334
  %343 = fsub <4 x float> %341, %335
  %344 = bitcast float* %336 to <4 x float>*
  store <4 x float> %342, <4 x float>* %344, align 4, !alias.scope !21, !noalias !18
  %345 = bitcast float* %339 to <4 x float>*
  store <4 x float> %343, <4 x float>* %345, align 4, !alias.scope !21, !noalias !18
  %346 = add i64 %307, 16
  %347 = add i64 %308, -2
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %306, !llvm.loop !23

349:                                              ; preds = %306, %301
  %350 = phi i64 [ 0, %301 ], [ %346, %306 ]
  br i1 %142, label %370, label %351

351:                                              ; preds = %349
  %352 = getelementptr inbounds float, float* %226, i64 %350
  %353 = bitcast float* %352 to <4 x float>*
  %354 = load <4 x float>, <4 x float>* %353, align 4, !alias.scope !18
  %355 = getelementptr inbounds float, float* %352, i64 4
  %356 = bitcast float* %355 to <4 x float>*
  %357 = load <4 x float>, <4 x float>* %356, align 4, !alias.scope !18
  %358 = fmul <4 x float> %303, %354
  %359 = fmul <4 x float> %305, %357
  %360 = getelementptr inbounds float, float* %167, i64 %350
  %361 = bitcast float* %360 to <4 x float>*
  %362 = load <4 x float>, <4 x float>* %361, align 4, !alias.scope !21, !noalias !18
  %363 = getelementptr inbounds float, float* %360, i64 4
  %364 = bitcast float* %363 to <4 x float>*
  %365 = load <4 x float>, <4 x float>* %364, align 4, !alias.scope !21, !noalias !18
  %366 = fsub <4 x float> %362, %358
  %367 = fsub <4 x float> %365, %359
  %368 = bitcast float* %360 to <4 x float>*
  store <4 x float> %366, <4 x float>* %368, align 4, !alias.scope !21, !noalias !18
  %369 = bitcast float* %363 to <4 x float>*
  store <4 x float> %367, <4 x float>* %369, align 4, !alias.scope !21, !noalias !18
  br label %370

370:                                              ; preds = %349, %351
  br i1 %143, label %371, label %283

371:                                              ; preds = %294, %374, %370, %219, %280
  %372 = add nuw nsw i64 %220, 1
  %373 = icmp eq i64 %372, %161
  br i1 %373, label %174, label %219

374:                                              ; preds = %294, %374
  %375 = phi i64 [ %389, %374 ], [ %295, %294 ]
  %376 = getelementptr inbounds float, float* %226, i64 %375
  %377 = load float, float* %376, align 4
  %378 = fmul float %281, %377
  %379 = getelementptr inbounds float, float* %167, i64 %375
  %380 = load float, float* %379, align 4
  %381 = fsub float %380, %378
  store float %381, float* %379, align 4
  %382 = add nuw nsw i64 %375, 1
  %383 = getelementptr inbounds float, float* %226, i64 %382
  %384 = load float, float* %383, align 4
  %385 = fmul float %281, %384
  %386 = getelementptr inbounds float, float* %167, i64 %382
  %387 = load float, float* %386, align 4
  %388 = fsub float %387, %385
  store float %388, float* %386, align 4
  %389 = add nuw nsw i64 %375, 2
  %390 = icmp eq i64 %389, %9
  br i1 %390, label %371, label %374, !llvm.loop !24

391:                                              ; preds = %215
  %392 = fdiv float 1.000000e+00, %217
  br i1 %17, label %442, label %393

393:                                              ; preds = %391
  br i1 %150, label %394, label %396

394:                                              ; preds = %441, %393
  %395 = phi i64 [ 0, %393 ], [ %151, %441 ]
  br label %445

396:                                              ; preds = %393
  %397 = insertelement <4 x float> undef, float %392, i32 0
  %398 = shufflevector <4 x float> %397, <4 x float> undef, <4 x i32> zeroinitializer
  %399 = insertelement <4 x float> undef, float %392, i32 0
  %400 = shufflevector <4 x float> %399, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %153, label %428, label %401

401:                                              ; preds = %396, %401
  %402 = phi i64 [ %425, %401 ], [ 0, %396 ]
  %403 = phi i64 [ %426, %401 ], [ %154, %396 ]
  %404 = getelementptr inbounds float, float* %167, i64 %402
  %405 = bitcast float* %404 to <4 x float>*
  %406 = load <4 x float>, <4 x float>* %405, align 4
  %407 = getelementptr inbounds float, float* %404, i64 4
  %408 = bitcast float* %407 to <4 x float>*
  %409 = load <4 x float>, <4 x float>* %408, align 4
  %410 = fmul <4 x float> %398, %406
  %411 = fmul <4 x float> %400, %409
  %412 = bitcast float* %404 to <4 x float>*
  store <4 x float> %410, <4 x float>* %412, align 4
  %413 = bitcast float* %407 to <4 x float>*
  store <4 x float> %411, <4 x float>* %413, align 4
  %414 = or i64 %402, 8
  %415 = getelementptr inbounds float, float* %167, i64 %414
  %416 = bitcast float* %415 to <4 x float>*
  %417 = load <4 x float>, <4 x float>* %416, align 4
  %418 = getelementptr inbounds float, float* %415, i64 4
  %419 = bitcast float* %418 to <4 x float>*
  %420 = load <4 x float>, <4 x float>* %419, align 4
  %421 = fmul <4 x float> %398, %417
  %422 = fmul <4 x float> %400, %420
  %423 = bitcast float* %415 to <4 x float>*
  store <4 x float> %421, <4 x float>* %423, align 4
  %424 = bitcast float* %418 to <4 x float>*
  store <4 x float> %422, <4 x float>* %424, align 4
  %425 = add i64 %402, 16
  %426 = add i64 %403, -2
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %401, !llvm.loop !25

428:                                              ; preds = %401, %396
  %429 = phi i64 [ 0, %396 ], [ %425, %401 ]
  br i1 %155, label %441, label %430

430:                                              ; preds = %428
  %431 = getelementptr inbounds float, float* %167, i64 %429
  %432 = bitcast float* %431 to <4 x float>*
  %433 = load <4 x float>, <4 x float>* %432, align 4
  %434 = getelementptr inbounds float, float* %431, i64 4
  %435 = bitcast float* %434 to <4 x float>*
  %436 = load <4 x float>, <4 x float>* %435, align 4
  %437 = fmul <4 x float> %398, %433
  %438 = fmul <4 x float> %400, %436
  %439 = bitcast float* %431 to <4 x float>*
  store <4 x float> %437, <4 x float>* %439, align 4
  %440 = bitcast float* %434 to <4 x float>*
  store <4 x float> %438, <4 x float>* %440, align 4
  br label %441

441:                                              ; preds = %428, %430
  br i1 %156, label %442, label %394

442:                                              ; preds = %445, %441, %391
  %443 = mul nuw nsw i64 %161, %8
  %444 = getelementptr inbounds float, float* %120, i64 %443
  br label %452

445:                                              ; preds = %394, %445
  %446 = phi i64 [ %450, %445 ], [ %395, %394 ]
  %447 = getelementptr inbounds float, float* %167, i64 %446
  %448 = load float, float* %447, align 4
  %449 = fmul float %392, %448
  store float %449, float* %447, align 4
  %450 = add nuw nsw i64 %446, 1
  %451 = icmp eq i64 %450, %9
  br i1 %451, label %442, label %445, !llvm.loop !26

452:                                              ; preds = %511, %442
  %453 = phi i64 [ 0, %442 ], [ %514, %511 ]
  %454 = icmp ult i64 %453, %161
  %455 = or i1 %454, %17
  br i1 %455, label %511, label %456

456:                                              ; preds = %452
  %457 = mul nuw nsw i64 %453, %9
  %458 = getelementptr inbounds float, float* %11, i64 %457
  br i1 %158, label %474, label %459

459:                                              ; preds = %456, %459
  %460 = phi float [ %471, %459 ], [ 0.000000e+00, %456 ]
  %461 = phi i32 [ %465, %459 ], [ %3, %456 ]
  %462 = phi float* [ %468, %459 ], [ %458, %456 ]
  %463 = phi float* [ %466, %459 ], [ %167, %456 ]
  %464 = phi i32 [ %472, %459 ], [ %157, %456 ]
  %465 = add i32 %461, -1
  %466 = getelementptr inbounds float, float* %463, i64 1
  %467 = load float, float* %463, align 4
  %468 = getelementptr inbounds float, float* %462, i64 1
  %469 = load float, float* %462, align 4
  %470 = fmul float %467, %469
  %471 = fadd float %460, %470
  %472 = add i32 %464, -1
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %459, !llvm.loop !28

474:                                              ; preds = %459, %456
  %475 = phi float [ undef, %456 ], [ %471, %459 ]
  %476 = phi float [ 0.000000e+00, %456 ], [ %471, %459 ]
  %477 = phi i32 [ %3, %456 ], [ %465, %459 ]
  %478 = phi float* [ %458, %456 ], [ %468, %459 ]
  %479 = phi float* [ %167, %456 ], [ %466, %459 ]
  br i1 %159, label %511, label %480

480:                                              ; preds = %474, %480
  %481 = phi float [ %509, %480 ], [ %476, %474 ]
  %482 = phi i32 [ %503, %480 ], [ %477, %474 ]
  %483 = phi float* [ %506, %480 ], [ %478, %474 ]
  %484 = phi float* [ %504, %480 ], [ %479, %474 ]
  %485 = getelementptr inbounds float, float* %484, i64 1
  %486 = load float, float* %484, align 4
  %487 = getelementptr inbounds float, float* %483, i64 1
  %488 = load float, float* %483, align 4
  %489 = fmul float %486, %488
  %490 = fadd float %481, %489
  %491 = getelementptr inbounds float, float* %484, i64 2
  %492 = load float, float* %485, align 4
  %493 = getelementptr inbounds float, float* %483, i64 2
  %494 = load float, float* %487, align 4
  %495 = fmul float %492, %494
  %496 = fadd float %490, %495
  %497 = getelementptr inbounds float, float* %484, i64 3
  %498 = load float, float* %491, align 4
  %499 = getelementptr inbounds float, float* %483, i64 3
  %500 = load float, float* %493, align 4
  %501 = fmul float %498, %500
  %502 = fadd float %496, %501
  %503 = add i32 %482, -4
  %504 = getelementptr inbounds float, float* %484, i64 4
  %505 = load float, float* %497, align 4
  %506 = getelementptr inbounds float, float* %483, i64 4
  %507 = load float, float* %499, align 4
  %508 = fmul float %505, %507
  %509 = fadd float %502, %508
  %510 = icmp eq i32 %503, 0
  br i1 %510, label %511, label %480

511:                                              ; preds = %474, %480, %452
  %512 = phi float [ 0.000000e+00, %452 ], [ %475, %474 ], [ %509, %480 ]
  %513 = getelementptr inbounds float, float* %444, i64 %453
  store float %512, float* %513, align 4
  %514 = add nuw nsw i64 %453, 1
  %515 = icmp eq i64 %514, %8
  br i1 %515, label %516, label %452

516:                                              ; preds = %511
  %517 = add nuw nsw i64 %161, 1
  %518 = icmp eq i64 %517, %8
  br i1 %518, label %519, label %160

519:                                              ; preds = %516, %125
  %520 = alloca float, i64 %9, align 16
  br i1 %17, label %603, label %521

521:                                              ; preds = %519
  %522 = bitcast float* %520 to i8*
  %523 = shl nuw nsw i64 %9, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %522, i8 -1, i64 %523, i1 false)
  %524 = icmp ult i32 %3, 8
  br i1 %524, label %525, label %527

525:                                              ; preds = %601, %521
  %526 = phi i64 [ 0, %521 ], [ %528, %601 ]
  br label %613

527:                                              ; preds = %521
  %528 = and i64 %9, 4294967288
  %529 = add nsw i64 %528, -8
  %530 = lshr exact i64 %529, 3
  %531 = add nuw nsw i64 %530, 1
  %532 = and i64 %531, 1
  %533 = icmp eq i64 %529, 0
  br i1 %533, label %579, label %534

534:                                              ; preds = %527
  %535 = sub nuw nsw i64 %531, %532
  br label %536

536:                                              ; preds = %536, %534
  %537 = phi i64 [ 0, %534 ], [ %576, %536 ]
  %538 = phi i64 [ %535, %534 ], [ %577, %536 ]
  %539 = getelementptr inbounds float, float* %1, i64 %537
  %540 = bitcast float* %539 to <4 x float>*
  %541 = load <4 x float>, <4 x float>* %540, align 4
  %542 = getelementptr inbounds float, float* %539, i64 4
  %543 = bitcast float* %542 to <4 x float>*
  %544 = load <4 x float>, <4 x float>* %543, align 4
  %545 = getelementptr inbounds float, float* %2, i64 %537
  %546 = bitcast float* %545 to <4 x float>*
  %547 = load <4 x float>, <4 x float>* %546, align 4
  %548 = getelementptr inbounds float, float* %545, i64 4
  %549 = bitcast float* %548 to <4 x float>*
  %550 = load <4 x float>, <4 x float>* %549, align 4
  %551 = fmul <4 x float> %541, %547
  %552 = fmul <4 x float> %544, %550
  %553 = getelementptr inbounds float, float* %520, i64 %537
  %554 = bitcast float* %553 to <4 x float>*
  store <4 x float> %551, <4 x float>* %554, align 16
  %555 = getelementptr inbounds float, float* %553, i64 4
  %556 = bitcast float* %555 to <4 x float>*
  store <4 x float> %552, <4 x float>* %556, align 16
  %557 = or i64 %537, 8
  %558 = getelementptr inbounds float, float* %1, i64 %557
  %559 = bitcast float* %558 to <4 x float>*
  %560 = load <4 x float>, <4 x float>* %559, align 4
  %561 = getelementptr inbounds float, float* %558, i64 4
  %562 = bitcast float* %561 to <4 x float>*
  %563 = load <4 x float>, <4 x float>* %562, align 4
  %564 = getelementptr inbounds float, float* %2, i64 %557
  %565 = bitcast float* %564 to <4 x float>*
  %566 = load <4 x float>, <4 x float>* %565, align 4
  %567 = getelementptr inbounds float, float* %564, i64 4
  %568 = bitcast float* %567 to <4 x float>*
  %569 = load <4 x float>, <4 x float>* %568, align 4
  %570 = fmul <4 x float> %560, %566
  %571 = fmul <4 x float> %563, %569
  %572 = getelementptr inbounds float, float* %520, i64 %557
  %573 = bitcast float* %572 to <4 x float>*
  store <4 x float> %570, <4 x float>* %573, align 16
  %574 = getelementptr inbounds float, float* %572, i64 4
  %575 = bitcast float* %574 to <4 x float>*
  store <4 x float> %571, <4 x float>* %575, align 16
  %576 = add i64 %537, 16
  %577 = add i64 %538, -2
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %579, label %536, !llvm.loop !29

579:                                              ; preds = %536, %527
  %580 = phi i64 [ 0, %527 ], [ %576, %536 ]
  %581 = icmp eq i64 %532, 0
  br i1 %581, label %601, label %582

582:                                              ; preds = %579
  %583 = getelementptr inbounds float, float* %1, i64 %580
  %584 = bitcast float* %583 to <4 x float>*
  %585 = load <4 x float>, <4 x float>* %584, align 4
  %586 = getelementptr inbounds float, float* %583, i64 4
  %587 = bitcast float* %586 to <4 x float>*
  %588 = load <4 x float>, <4 x float>* %587, align 4
  %589 = getelementptr inbounds float, float* %2, i64 %580
  %590 = bitcast float* %589 to <4 x float>*
  %591 = load <4 x float>, <4 x float>* %590, align 4
  %592 = getelementptr inbounds float, float* %589, i64 4
  %593 = bitcast float* %592 to <4 x float>*
  %594 = load <4 x float>, <4 x float>* %593, align 4
  %595 = fmul <4 x float> %585, %591
  %596 = fmul <4 x float> %588, %594
  %597 = getelementptr inbounds float, float* %520, i64 %580
  %598 = bitcast float* %597 to <4 x float>*
  store <4 x float> %595, <4 x float>* %598, align 16
  %599 = getelementptr inbounds float, float* %597, i64 4
  %600 = bitcast float* %599 to <4 x float>*
  store <4 x float> %596, <4 x float>* %600, align 16
  br label %601

601:                                              ; preds = %579, %582
  %602 = icmp eq i64 %528, %9
  br i1 %602, label %603, label %525

603:                                              ; preds = %613, %601, %519
  br i1 %126, label %623, label %604

604:                                              ; preds = %603
  %605 = add i32 %4, -1
  %606 = zext i32 %605 to i64
  %607 = add i32 %3, -1
  %608 = and i32 %3, 3
  %609 = icmp eq i32 %608, 0
  %610 = icmp ult i32 %607, 3
  %611 = getelementptr inbounds float, float* %5, i64 %606
  %612 = add nsw i64 %606, -1
  br label %630

613:                                              ; preds = %525, %613
  %614 = phi i64 [ %621, %613 ], [ %526, %525 ]
  %615 = getelementptr inbounds float, float* %1, i64 %614
  %616 = load float, float* %615, align 4
  %617 = getelementptr inbounds float, float* %2, i64 %614
  %618 = load float, float* %617, align 4
  %619 = fmul float %616, %618
  %620 = getelementptr inbounds float, float* %520, i64 %614
  store float %619, float* %620, align 4
  %621 = add nuw nsw i64 %614, 1
  %622 = icmp eq i64 %621, %9
  br i1 %622, label %603, label %613, !llvm.loop !30

623:                                              ; preds = %711, %603
  br i1 %17, label %885, label %624

624:                                              ; preds = %623
  %625 = add nsw i64 %9, -1
  %626 = and i64 %9, 7
  %627 = icmp ult i64 %625, 7
  br i1 %627, label %739, label %628

628:                                              ; preds = %624
  %629 = sub nsw i64 %9, %626
  br label %767

630:                                              ; preds = %604, %711
  %631 = phi i32 [ 0, %604 ], [ %718, %711 ]
  %632 = phi i64 [ %8, %604 ], [ %717, %711 ]
  %633 = trunc i64 %632 to i32
  %634 = add i32 %633, -1
  %635 = zext i32 %634 to i64
  br i1 %17, label %691, label %636

636:                                              ; preds = %630
  %637 = mul nuw nsw i64 %635, %9
  %638 = getelementptr inbounds float, float* %32, i64 %637
  br i1 %609, label %654, label %639

639:                                              ; preds = %636, %639
  %640 = phi float [ %651, %639 ], [ 0.000000e+00, %636 ]
  %641 = phi i32 [ %645, %639 ], [ %3, %636 ]
  %642 = phi float* [ %648, %639 ], [ %520, %636 ]
  %643 = phi float* [ %646, %639 ], [ %638, %636 ]
  %644 = phi i32 [ %652, %639 ], [ %608, %636 ]
  %645 = add i32 %641, -1
  %646 = getelementptr inbounds float, float* %643, i64 1
  %647 = load float, float* %643, align 4
  %648 = getelementptr inbounds float, float* %642, i64 1
  %649 = load float, float* %642, align 4
  %650 = fmul float %647, %649
  %651 = fadd float %640, %650
  %652 = add i32 %644, -1
  %653 = icmp eq i32 %652, 0
  br i1 %653, label %654, label %639, !llvm.loop !31

654:                                              ; preds = %639, %636
  %655 = phi float [ undef, %636 ], [ %651, %639 ]
  %656 = phi float [ 0.000000e+00, %636 ], [ %651, %639 ]
  %657 = phi i32 [ %3, %636 ], [ %645, %639 ]
  %658 = phi float* [ %520, %636 ], [ %648, %639 ]
  %659 = phi float* [ %638, %636 ], [ %646, %639 ]
  br i1 %610, label %691, label %660

660:                                              ; preds = %654, %660
  %661 = phi float [ %689, %660 ], [ %656, %654 ]
  %662 = phi i32 [ %683, %660 ], [ %657, %654 ]
  %663 = phi float* [ %686, %660 ], [ %658, %654 ]
  %664 = phi float* [ %684, %660 ], [ %659, %654 ]
  %665 = getelementptr inbounds float, float* %664, i64 1
  %666 = load float, float* %664, align 4
  %667 = getelementptr inbounds float, float* %663, i64 1
  %668 = load float, float* %663, align 4
  %669 = fmul float %666, %668
  %670 = fadd float %661, %669
  %671 = getelementptr inbounds float, float* %664, i64 2
  %672 = load float, float* %665, align 4
  %673 = getelementptr inbounds float, float* %663, i64 2
  %674 = load float, float* %667, align 4
  %675 = fmul float %672, %674
  %676 = fadd float %670, %675
  %677 = getelementptr inbounds float, float* %664, i64 3
  %678 = load float, float* %671, align 4
  %679 = getelementptr inbounds float, float* %663, i64 3
  %680 = load float, float* %673, align 4
  %681 = fmul float %678, %680
  %682 = fadd float %676, %681
  %683 = add i32 %662, -4
  %684 = getelementptr inbounds float, float* %664, i64 4
  %685 = load float, float* %677, align 4
  %686 = getelementptr inbounds float, float* %663, i64 4
  %687 = load float, float* %679, align 4
  %688 = fmul float %685, %687
  %689 = fadd float %682, %688
  %690 = icmp eq i32 %683, 0
  br i1 %690, label %691, label %660

691:                                              ; preds = %654, %660, %630
  %692 = phi float [ 0.000000e+00, %630 ], [ %655, %654 ], [ %689, %660 ]
  %693 = getelementptr inbounds float, float* %5, i64 %635
  store float %692, float* %693, align 4
  %694 = icmp ugt i32 %605, %634
  %695 = mul nuw nsw i64 %635, %8
  %696 = getelementptr inbounds float, float* %120, i64 %695
  br i1 %694, label %697, label %711

697:                                              ; preds = %691
  %698 = and i32 %631, 1
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %706, label %700

700:                                              ; preds = %697
  %701 = getelementptr inbounds float, float* %696, i64 %606
  %702 = load float, float* %701, align 4
  %703 = load float, float* %611, align 4
  %704 = fmul float %702, %703
  %705 = fsub float %692, %704
  store float %705, float* %693, align 4
  br label %706

706:                                              ; preds = %700, %697
  %707 = phi i64 [ %612, %700 ], [ %606, %697 ]
  %708 = phi float [ %705, %700 ], [ %692, %697 ]
  %709 = phi float [ %705, %700 ], [ undef, %697 ]
  %710 = icmp eq i32 %631, 1
  br i1 %710, label %711, label %719

711:                                              ; preds = %706, %719, %691
  %712 = phi float [ %692, %691 ], [ %709, %706 ], [ %734, %719 ]
  %713 = getelementptr inbounds float, float* %696, i64 %635
  %714 = load float, float* %713, align 4
  %715 = fdiv float %712, %714
  store float %715, float* %693, align 4
  %716 = icmp eq i32 %634, 0
  %717 = add nsw i64 %632, -1
  %718 = add i32 %631, 1
  br i1 %716, label %623, label %630

719:                                              ; preds = %706, %719
  %720 = phi i64 [ %738, %719 ], [ %707, %706 ]
  %721 = phi float [ %734, %719 ], [ %708, %706 ]
  %722 = getelementptr inbounds float, float* %696, i64 %720
  %723 = load float, float* %722, align 4
  %724 = getelementptr inbounds float, float* %5, i64 %720
  %725 = load float, float* %724, align 4
  %726 = fmul float %723, %725
  %727 = fsub float %721, %726
  store float %727, float* %693, align 4
  %728 = add nsw i64 %720, -1
  %729 = getelementptr inbounds float, float* %696, i64 %728
  %730 = load float, float* %729, align 4
  %731 = getelementptr inbounds float, float* %5, i64 %728
  %732 = load float, float* %731, align 4
  %733 = fmul float %730, %732
  %734 = fsub float %727, %733
  store float %734, float* %693, align 4
  %735 = trunc i64 %728 to i32
  %736 = add i32 %735, -1
  %737 = icmp ugt i32 %736, %634
  %738 = add nsw i64 %720, -2
  br i1 %737, label %719, label %711

739:                                              ; preds = %767, %624
  %740 = phi float [ undef, %624 ], [ %801, %767 ]
  %741 = phi i64 [ 0, %624 ], [ %802, %767 ]
  %742 = phi float [ 0.000000e+00, %624 ], [ %801, %767 ]
  %743 = icmp eq i64 %626, 0
  br i1 %743, label %754, label %744

744:                                              ; preds = %739, %744
  %745 = phi i64 [ %751, %744 ], [ %741, %739 ]
  %746 = phi float [ %750, %744 ], [ %742, %739 ]
  %747 = phi i64 [ %752, %744 ], [ %626, %739 ]
  %748 = getelementptr inbounds float, float* %1, i64 %745
  %749 = load float, float* %748, align 4
  %750 = fadd float %746, %749
  %751 = add nuw nsw i64 %745, 1
  %752 = add i64 %747, -1
  %753 = icmp eq i64 %752, 0
  br i1 %753, label %754, label %744, !llvm.loop !32

754:                                              ; preds = %744, %739
  %755 = phi float [ %740, %739 ], [ %750, %744 ]
  %756 = uitofp i32 %3 to float
  %757 = fdiv float %755, %756
  br i1 %17, label %885, label %758

758:                                              ; preds = %754
  %759 = load float, float* %5, align 4
  %760 = icmp ugt i32 %4, 1
  %761 = add nsw i64 %8, -1
  %762 = add nsw i64 %8, -2
  %763 = and i64 %761, 3
  %764 = icmp ult i64 %762, 3
  %765 = sub nsw i64 %761, %763
  %766 = icmp eq i64 %763, 0
  br label %808

767:                                              ; preds = %767, %628
  %768 = phi i64 [ 0, %628 ], [ %802, %767 ]
  %769 = phi float [ 0.000000e+00, %628 ], [ %801, %767 ]
  %770 = phi i64 [ %629, %628 ], [ %803, %767 ]
  %771 = getelementptr inbounds float, float* %1, i64 %768
  %772 = load float, float* %771, align 4
  %773 = fadd float %769, %772
  %774 = or i64 %768, 1
  %775 = getelementptr inbounds float, float* %1, i64 %774
  %776 = load float, float* %775, align 4
  %777 = fadd float %773, %776
  %778 = or i64 %768, 2
  %779 = getelementptr inbounds float, float* %1, i64 %778
  %780 = load float, float* %779, align 4
  %781 = fadd float %777, %780
  %782 = or i64 %768, 3
  %783 = getelementptr inbounds float, float* %1, i64 %782
  %784 = load float, float* %783, align 4
  %785 = fadd float %781, %784
  %786 = or i64 %768, 4
  %787 = getelementptr inbounds float, float* %1, i64 %786
  %788 = load float, float* %787, align 4
  %789 = fadd float %785, %788
  %790 = or i64 %768, 5
  %791 = getelementptr inbounds float, float* %1, i64 %790
  %792 = load float, float* %791, align 4
  %793 = fadd float %789, %792
  %794 = or i64 %768, 6
  %795 = getelementptr inbounds float, float* %1, i64 %794
  %796 = load float, float* %795, align 4
  %797 = fadd float %793, %796
  %798 = or i64 %768, 7
  %799 = getelementptr inbounds float, float* %1, i64 %798
  %800 = load float, float* %799, align 4
  %801 = fadd float %797, %800
  %802 = add nuw nsw i64 %768, 8
  %803 = add i64 %770, -8
  %804 = icmp eq i64 %803, 0
  br i1 %804, label %739, label %767

805:                                              ; preds = %835
  %806 = extractelement <2 x float> %847, i32 0
  %807 = fcmp ogt float %806, 0x3EB0C6F7A0000000
  br i1 %807, label %881, label %885

808:                                              ; preds = %835, %758
  %809 = phi i64 [ 0, %758 ], [ %848, %835 ]
  %810 = phi <2 x float> [ zeroinitializer, %758 ], [ %847, %835 ]
  %811 = getelementptr inbounds float, float* %1, i64 %809
  %812 = load float, float* %811, align 4
  %813 = fsub float %812, %759
  br i1 %760, label %814, label %835

814:                                              ; preds = %808
  %815 = getelementptr inbounds float, float* %0, i64 %809
  %816 = load float, float* %815, align 4
  br i1 %764, label %817, label %850

817:                                              ; preds = %850, %814
  %818 = phi float [ undef, %814 ], [ %877, %850 ]
  %819 = phi i64 [ 1, %814 ], [ %878, %850 ]
  %820 = phi float [ 1.000000e+00, %814 ], [ %873, %850 ]
  %821 = phi float [ %813, %814 ], [ %877, %850 ]
  br i1 %766, label %835, label %822

822:                                              ; preds = %817, %822
  %823 = phi i64 [ %832, %822 ], [ %819, %817 ]
  %824 = phi float [ %827, %822 ], [ %820, %817 ]
  %825 = phi float [ %831, %822 ], [ %821, %817 ]
  %826 = phi i64 [ %833, %822 ], [ %763, %817 ]
  %827 = fmul float %824, %816
  %828 = getelementptr inbounds float, float* %5, i64 %823
  %829 = load float, float* %828, align 4
  %830 = fmul float %827, %829
  %831 = fsub float %825, %830
  %832 = add nuw nsw i64 %823, 1
  %833 = add i64 %826, -1
  %834 = icmp eq i64 %833, 0
  br i1 %834, label %835, label %822, !llvm.loop !33

835:                                              ; preds = %817, %822, %808
  %836 = phi float [ %813, %808 ], [ %818, %817 ], [ %831, %822 ]
  %837 = getelementptr inbounds float, float* %2, i64 %809
  %838 = load float, float* %837, align 4
  %839 = fmul float %838, %838
  %840 = fsub float %812, %757
  %841 = insertelement <2 x float> undef, float %840, i32 0
  %842 = insertelement <2 x float> %841, float %836, i32 1
  %843 = insertelement <2 x float> undef, float %839, i32 0
  %844 = shufflevector <2 x float> %843, <2 x float> undef, <2 x i32> zeroinitializer
  %845 = fmul <2 x float> %842, %844
  %846 = fmul <2 x float> %842, %845
  %847 = fadd <2 x float> %810, %846
  %848 = add nuw nsw i64 %809, 1
  %849 = icmp eq i64 %848, %9
  br i1 %849, label %805, label %808

850:                                              ; preds = %814, %850
  %851 = phi i64 [ %878, %850 ], [ 1, %814 ]
  %852 = phi float [ %873, %850 ], [ 1.000000e+00, %814 ]
  %853 = phi float [ %877, %850 ], [ %813, %814 ]
  %854 = phi i64 [ %879, %850 ], [ %765, %814 ]
  %855 = fmul float %852, %816
  %856 = getelementptr inbounds float, float* %5, i64 %851
  %857 = load float, float* %856, align 4
  %858 = fmul float %855, %857
  %859 = fsub float %853, %858
  %860 = add nuw nsw i64 %851, 1
  %861 = fmul float %855, %816
  %862 = getelementptr inbounds float, float* %5, i64 %860
  %863 = load float, float* %862, align 4
  %864 = fmul float %861, %863
  %865 = fsub float %859, %864
  %866 = add nuw nsw i64 %851, 2
  %867 = fmul float %861, %816
  %868 = getelementptr inbounds float, float* %5, i64 %866
  %869 = load float, float* %868, align 4
  %870 = fmul float %867, %869
  %871 = fsub float %865, %870
  %872 = add nuw nsw i64 %851, 3
  %873 = fmul float %867, %816
  %874 = getelementptr inbounds float, float* %5, i64 %872
  %875 = load float, float* %874, align 4
  %876 = fmul float %873, %875
  %877 = fsub float %871, %876
  %878 = add nuw nsw i64 %851, 4
  %879 = add i64 %854, -4
  %880 = icmp eq i64 %879, 0
  br i1 %880, label %817, label %850

881:                                              ; preds = %805
  %882 = extractelement <2 x float> %847, i32 1
  %883 = fdiv float %882, %806
  %884 = fsub float 1.000000e+00, %883
  br label %885

885:                                              ; preds = %623, %754, %805, %881
  %886 = phi float [ %884, %881 ], [ 1.000000e+00, %805 ], [ 1.000000e+00, %754 ], [ 1.000000e+00, %623 ]
  store float %886, float* %6, align 4
  br label %887

887:                                              ; preds = %215, %885
  %888 = phi i1 [ true, %885 ], [ false, %215 ]
  ret i1 %888
}

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategyD0Ev(%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategy5ClearEv(%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategy13ClearPointersENS_8BitSet32E(%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* nocapture, i32) unnamed_addr #9 align 2 {
  %3 = xor i32 %1, -1
  %4 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 2, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, %3
  store i32 %6, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategy11AddMovementERKN4base9TimeTicksENS_8BitSet32EPKNS0_8PositionE(%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* nocapture, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8), i32, %"struct.ui::(anonymous namespace)::Position"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 1
  %10 = load i32, i32* %7, align 4
  br label %13

11:                                               ; preds = %129, %4
  %12 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 2, i32 0
  store i32 %2, i32* %12, align 4
  ret void

13:                                               ; preds = %6, %129
  %14 = phi i32 [ 0, %6 ], [ %21, %129 ]
  %15 = phi i32 [ %2, %6 ], [ %19, %129 ]
  %16 = tail call i32 @llvm.ctlz.i32(i32 %15, i1 true) #11, !range !2
  %17 = lshr i32 -2147483648, %16
  %18 = xor i32 %17, -1
  %19 = and i32 %15, %18
  %20 = zext i32 %16 to i64
  %21 = add i32 %14, 1
  %22 = zext i32 %14 to i64
  %23 = and i32 %10, %17
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %22, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Position", %"struct.ui::(anonymous namespace)::Position"* %3, i64 %22, i32 1
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 0, i32 0, i32 0
  br i1 %24, label %120, label %30

30:                                               ; preds = %13
  %31 = load i64, i64* %29, align 8
  %32 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %31, i64 2) #11
  %33 = extractvalue { i64, i1 } %32, 1
  %34 = extractvalue { i64, i1 } %32, 0
  %35 = select i1 %33, i64 9223372036854775807, i64 %34, !prof !34
  %36 = load i64, i64* %8, align 8
  %37 = icmp sgt i64 %36, %35
  br i1 %37, label %38, label %129

38:                                               ; preds = %30
  %39 = sub nsw i64 %36, %31
  %40 = add i64 %39, -9223372036854775807
  %41 = icmp ult i64 %40, 2
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = sitofp i64 %39 to double
  %44 = fdiv double %43, 1.000000e+06
  br label %48

45:                                               ; preds = %38
  %46 = icmp slt i64 %39, 0
  %47 = select i1 %46, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %48

48:                                               ; preds = %45, %42
  %49 = phi double [ %47, %45 ], [ %44, %42 ]
  %50 = fptrunc double %49 to float
  store i64 %36, i64* %29, align 8
  %51 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 2
  %52 = load float, float* %51, align 4
  %53 = fsub float %26, %52
  %54 = fdiv float %53, %50
  %55 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 5
  %56 = load float, float* %55, align 8
  %57 = fsub float %28, %56
  %58 = fdiv float %57, %50
  %59 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %48
  %63 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 3
  store float %54, float* %63, align 8
  %64 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 6
  store float %58, float* %64, align 4
  store i32 1, i32* %59, align 8
  br label %119

65:                                               ; preds = %48
  %66 = fadd float %50, 0x3F847AE140000000
  %67 = fdiv float %50, %66
  %68 = load i32, i32* %9, align 8
  %69 = icmp eq i32 %68, 1
  %70 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 3
  %71 = load float, float* %70, align 8
  %72 = fsub float %54, %71
  br i1 %69, label %73, label %81

73:                                               ; preds = %65
  %74 = fmul float %67, %72
  %75 = fadd float %71, %74
  store float %75, float* %70, align 8
  %76 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 6
  %77 = load float, float* %76, align 4
  %78 = fsub float %58, %77
  %79 = fmul float %67, %78
  %80 = fadd float %77, %79
  store float %80, float* %76, align 4
  br label %119

81:                                               ; preds = %65
  %82 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 6
  %83 = load float, float* %82, align 4
  %84 = fsub float %58, %83
  %85 = insertelement <2 x float> undef, float %84, i32 0
  %86 = insertelement <2 x float> %85, float %72, i32 1
  %87 = insertelement <2 x float> undef, float %50, i32 0
  %88 = shufflevector <2 x float> %87, <2 x float> undef, <2 x i32> zeroinitializer
  %89 = fdiv <2 x float> %86, %88
  %90 = icmp eq i32 %60, 1
  %91 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 4
  br i1 %90, label %92, label %96

92:                                               ; preds = %81
  %93 = extractelement <2 x float> %89, i32 1
  store float %93, float* %91, align 4
  %94 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 7
  %95 = extractelement <2 x float> %89, i32 0
  store float %95, float* %94, align 8
  store i32 2, i32* %59, align 8
  br label %109

96:                                               ; preds = %81
  %97 = load float, float* %91, align 4
  %98 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 7
  %99 = load float, float* %98, align 8
  %100 = insertelement <2 x float> undef, float %99, i32 0
  %101 = insertelement <2 x float> %100, float %97, i32 1
  %102 = fsub <2 x float> %89, %101
  %103 = insertelement <2 x float> undef, float %67, i32 0
  %104 = shufflevector <2 x float> %103, <2 x float> undef, <2 x i32> zeroinitializer
  %105 = fmul <2 x float> %104, %102
  %106 = fadd <2 x float> %101, %105
  %107 = extractelement <2 x float> %106, i32 1
  store float %107, float* %91, align 4
  %108 = extractelement <2 x float> %106, i32 0
  store float %108, float* %98, align 8
  br label %109

109:                                              ; preds = %96, %92
  %110 = phi <2 x float> [ %106, %96 ], [ %89, %92 ]
  %111 = extractelement <2 x float> %110, i32 1
  %112 = fmul float %111, %50
  %113 = fmul float %67, %112
  %114 = fadd float %71, %113
  store float %114, float* %70, align 8
  %115 = extractelement <2 x float> %110, i32 0
  %116 = fmul float %115, %50
  %117 = fmul float %67, %116
  %118 = fadd float %83, %117
  store float %118, float* %82, align 4
  br label %119

119:                                              ; preds = %109, %73, %62
  store float %26, float* %51, align 4
  store float %28, float* %55, align 8
  br label %129

120:                                              ; preds = %13
  %121 = load i64, i64* %8, align 8
  store i64 %121, i64* %29, align 8
  %122 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 1
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 2
  store float %26, float* %123, align 4
  %124 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 3
  store float 0.000000e+00, float* %124, align 8
  %125 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 4
  store float 0.000000e+00, float* %125, align 4
  %126 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 5
  store float %28, float* %126, align 8
  %127 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 6
  store float 0.000000e+00, float* %127, align 4
  %128 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %20, i32 7
  store float 0.000000e+00, float* %128, align 8
  br label %129

129:                                              ; preds = %119, %30, %120
  %130 = icmp eq i32 %19, 0
  br i1 %130, label %11, label %13
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK2ui12_GLOBAL__N_134IntegratingVelocityTrackerStrategy12GetEstimatorEjPNS0_9EstimatorE(%"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* nocapture readonly, i32, %"struct.ui::(anonymous namespace)::Estimator"* nocapture) unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.ui::(anonymous namespace)::Estimator"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 56, i1 false) #11
  %5 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 2, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 -2147483648, %1
  %8 = and i32 %6, %7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %47, label %10

10:                                               ; preds = %3
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %11, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 4
  store float 1.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %11, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 3
  store i32 %17, i32* %18, align 8
  %19 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %11, i32 2
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 1
  %23 = bitcast [5 x float]* %22 to i32*
  store i32 %21, i32* %23, align 8
  %24 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %11, i32 3
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 1, i64 1
  %28 = bitcast float* %27 to i32*
  store i32 %26, i32* %28, align 4
  %29 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %11, i32 4
  %30 = load float, float* %29, align 4
  %31 = fmul float %30, 5.000000e-01
  %32 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 1, i64 2
  store float %31, float* %32, align 8
  %33 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %11, i32 5
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 2
  %37 = bitcast [5 x float]* %36 to i32*
  store i32 %35, i32* %37, align 4
  %38 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %11, i32 6
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 2, i64 1
  %42 = bitcast float* %41 to i32*
  store i32 %40, i32* %42, align 4
  %43 = getelementptr inbounds %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy", %"class.ui::(anonymous namespace)::IntegratingVelocityTrackerStrategy"* %0, i64 0, i32 3, i64 %11, i32 7
  %44 = load float, float* %43, align 8
  %45 = fmul float %44, 5.000000e-01
  %46 = getelementptr inbounds %"struct.ui::(anonymous namespace)::Estimator", %"struct.ui::(anonymous namespace)::Estimator"* %2, i64 0, i32 2, i64 2
  store float %45, float* %46, align 4
  br label %47

47:                                               ; preds = %3, %10
  %48 = phi i1 [ true, %10 ], [ false, %3 ]
  ret i1 %48
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{i64 0, i64 33}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !5}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !5}
!16 = distinct !{!16, !5}
!17 = distinct !{!17, !5}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !12}
!24 = distinct !{!24, !12}
!25 = distinct !{!25, !12}
!26 = distinct !{!26, !27, !12}
!27 = !{!"llvm.loop.unroll.runtime.disable"}
!28 = distinct !{!28, !5}
!29 = distinct !{!29, !12}
!30 = distinct !{!30, !27, !12}
!31 = distinct !{!31, !5}
!32 = distinct !{!32, !5}
!33 = distinct !{!33, !5}
!34 = !{!"branch_weights", i32 1, i32 2000}
