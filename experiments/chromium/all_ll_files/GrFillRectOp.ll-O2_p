; ModuleID = '../../third_party/skia/src/gpu/ops/GrFillRectOp.cpp'
source_filename = "../../third_party/skia/src/gpu/ops/GrFillRectOp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__cxx_atomic_impl.248" }
%"struct.std::__1::__cxx_atomic_impl.248" = type { %"struct.std::__1::__cxx_atomic_base_impl.249" }
%"struct.std::__1::__cxx_atomic_base_impl.249" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%"class.GrQuadUtils::TessellationHelper" = type <{ %"struct.GrQuadUtils::TessellationHelper::Vertices", %"struct.GrQuadUtils::TessellationHelper::EdgeVectors", i32, i32, [8 x i8], %"struct.GrQuadUtils::TessellationHelper::OutsetRequest", %"struct.GrQuadUtils::TessellationHelper::EdgeEquations", i8, i8, i8, [13 x i8] }>
%"struct.GrQuadUtils::TessellationHelper::Vertices" = type { %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", i32, [12 x i8] }
%"struct.skvx::Vec" = type { %"struct.skvx::Vec.264", %"struct.skvx::Vec.264" }
%"struct.skvx::Vec.264" = type { %"struct.skvx::Vec.265", %"struct.skvx::Vec.265" }
%"struct.skvx::Vec.265" = type { float }
%"struct.GrQuadUtils::TessellationHelper::EdgeVectors" = type { %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec" }
%"struct.GrQuadUtils::TessellationHelper::OutsetRequest" = type <{ %"struct.skvx::Vec", i8, i8, [14 x i8] }>
%"struct.GrQuadUtils::TessellationHelper::EdgeEquations" = type { %"struct.skvx::Vec", %"struct.skvx::Vec", %"struct.skvx::Vec" }
%"struct.GrQuadPerEdgeAA::VertexSpec" = type { i16, [2 x i8] }
%struct.GrVertexWriter = type { i8* }
%class.GrQuad = type { [4 x float], [4 x float], [4 x float], i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%struct.DrawQuad = type { %class.GrQuad, %class.GrQuad, i32 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrOp* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.167" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.12, %class.SkTArray.21, %class.SkTArray.23, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.5"*, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.23, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.24 }
%class.sk_sp.24 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.12 = type { %class.SkTHashTable.13 }
%class.SkTHashTable.13 = type { i32, i32, %class.SkAutoTArray.14 }
%class.SkAutoTArray.14 = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.233" }
%"struct.std::__1::pair.233" = type { i32, %class.SkTArray.234* }
%class.SkTArray.234 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.21 = type { %"class.std::__1::unique_ptr.22"*, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.234, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.23 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.37 }
%class.SkFibBlockSizes.37 = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.44, %class.SkTArray.53, %class.GrOpsTask*, %class.SkSTArray.132, %class.SkSTArray.135, %"class.std::__1::unique_ptr.137", %class.sk_sp.153, %class.GrTokenTracker, i8, i8, %class.SkTArray.154, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.44 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.45", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.48, i8, [7 x i8] }>
%class.sk_sp.48 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.49, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.49 = type { i32 }
%class.SkTArray.53 = type { %class.sk_sp.54*, i64 }
%class.sk_sp.54 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.105, i32, i32, %class.SkSTArray.112, %class.SkSTArray.112, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.55 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.55 = type { %class.sk_sp.56*, i64 }
%class.sk_sp.56 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.57, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.100" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.57 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.60 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.58, i8* }
%class.sk_sp.58 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.59, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.59 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.60 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.61, void (i8*)*, i8* }
%class.SkNVRefCnt.61 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.62, i32, [4 x i8] }
%union.anon.62 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.57, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.97, %class.sk_sp.99, %class.sk_sp.99 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.72, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.88, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.64 }
%class.SkTHashTable.64 = type { i32, i32, %class.SkAutoTArray.65 }
%class.SkAutoTArray.65 = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.72 = type { %class.SkTHashTable.73 }
%class.SkTHashTable.73 = type { i32, i32, %class.SkAutoTArray.74 }
%class.SkAutoTArray.74 = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.81, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.81 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.82" }
%"struct.std::__1::atomic.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__cxx_atomic_impl.85" }
%"struct.std::__1::__cxx_atomic_impl.85" = type { %"struct.std::__1::__cxx_atomic_base_impl.86" }
%"struct.std::__1::__cxx_atomic_base_impl.86" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.87, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.87 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.88 = type { %class.SkTHashTable.89 }
%class.SkTHashTable.89 = type { i32, i32, %class.SkAutoTArray.90 }
%class.SkAutoTArray.90 = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.97 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.98, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.98 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.99 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl.103" }
%"struct.std::__1::__cxx_atomic_impl.103" = type { %"struct.std::__1::__cxx_atomic_base_impl.104" }
%"struct.std::__1::__cxx_atomic_base_impl.104" = type { i64 }
%class.SkTArray.105 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.106", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.112 = type { %class.SkAlignedSTStorage.113, %class.SkTArray.114 }
%class.SkAlignedSTStorage.113 = type { [8 x i8] }
%class.SkTArray.114 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.115, %class.sk_sp.129, %class.SkTArray.131, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.115 = type { %class.SkAlignedSTStorage.116, %class.SkTArray.117 }
%class.SkAlignedSTStorage.116 = type { [2000 x i8] }
%class.SkTArray.117 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr", %class.GrOp* }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.56, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.120" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.118 }
%union.anon.118 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.119, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.119 = type { i32 }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.123, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.123 = type { %class.SkAlignedSTStorage.124, %class.SkTArray.125 }
%class.SkAlignedSTStorage.124 = type { [8 x i8] }
%class.SkTArray.125 = type { %"class.std::__1::unique_ptr.120"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.129 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.130, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.130 = type { %"struct.std::__1::atomic" }
%class.SkTArray.131 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.132 = type { %class.SkAlignedSTStorage.133, %class.SkTArray.134 }
%class.SkAlignedSTStorage.133 = type { [32 x i8] }
%class.SkTArray.134 = type { i32*, i64 }
%class.SkSTArray.135 = type { %class.SkAlignedSTStorage.136, %class.SkTArray.53 }
%class.SkAlignedSTStorage.136 = type { [32 x i8] }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.140, %"class.std::__1::unique_ptr.144", %class.GrPathRenderer* }
%class.SkSTArray.140 = type { %class.SkAlignedSTStorage.141, %class.SkTArray.142 }
%class.SkAlignedSTStorage.141 = type { [64 x i8] }
%class.SkTArray.142 = type { %class.sk_sp.143*, i64 }
%class.sk_sp.143 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.153 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.154 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.155, i32, %class.GrRenderTask** }
%class.SkTHashMap.155 = type { %class.SkTHashTable.156 }
%class.SkTHashTable.156 = type { i32, i32, %class.SkAutoTArray.157 }
%class.SkAutoTArray.157 = type { %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %class.GrProxyProvider* }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.120", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%class.GrXPFactory = type { i32 (...)** }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.120", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%"class.(anonymous namespace)::FillRectOp" = type <{ %class.GrMeshDrawOp, %class.GrSimpleMeshDrawOpHelperWithStencil, %class.GrQuadBuffer, i8*, %class.GrProgramInfo*, i32, [4 x i8], %class.sk_sp.183, %class.sk_sp.183, i32, [4 x i8] }>
%class.GrMeshDrawOp = type { %class.GrDrawOp }
%class.GrDrawOp = type { %class.GrOp }
%class.GrSimpleMeshDrawOpHelperWithStencil = type { %class.GrSimpleMeshDrawOpHelper.base, %struct.GrUserStencilSettings* }
%class.GrSimpleMeshDrawOpHelper.base = type <{ %class.GrProcessorSet*, i8, i8 }>
%class.GrQuadBuffer = type <{ %class.SkTDArray.174, i32, i32, i32, [4 x i8] }>
%class.SkTDArray.174 = type { i8*, i32, i32 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.175, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.175 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.173, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.173 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.176"*, [24 x i8] }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %class.GrFragmentProcessor* }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.182, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.182 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.sk_sp.183 = type { %class.GrBuffer* }
%class.SkMatrix = type { [9 x float], i32 }
%"struct.GrSurfaceDrawContext::QuadSetEntry" = type { %struct.SkRect, %struct.SkRGBA4f, %class.SkMatrix, i32 }
%"struct.(anonymous namespace)::FillRectOp::ColorAndAA" = type { %struct.SkRGBA4f, i32 }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.187, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.184, %class.sk_sp.186, i32, i32 }
%class.sk_sp.184 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.185, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.185 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.186 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.187 = type { %class.GrOpsTask* }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.188, %class.SkAutoTMalloc }
%class.SkAutoTArray.188 = type { %"class.std::__1::unique_ptr.189" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.192 }
%union.anon.192 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.193, i32, %"struct.std::__1::atomic.82", %"struct.std::__1::atomic.82", i8, i8 }>
%class.sk_sp.193 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.194, %struct.SkRect, [4 x i8], %class.SkTDArray.195, %class.SkTDArray.196, %class.SkTDArray.197, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.194 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.195 = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.196 = type { i8*, i32, i32 }
%class.SkTDArray.197 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.198 }
%class.SkTDArray.198 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.199", [3 x i8] }
%"struct.std::__1::atomic.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__cxx_atomic_impl.201" }
%"struct.std::__1::__cxx_atomic_impl.201" = type { %"struct.std::__1::__cxx_atomic_base_impl.202" }
%"struct.std::__1::__cxx_atomic_base_impl.202" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.206" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.211, %class.SkSTArray.216, %class.SkSTArray.219 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.210" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.210" = type { %struct.SkPoint* }
%class.SkZip.211 = type { %"class.std::__1::tuple.212", i64 }
%"class.std::__1::tuple.212" = type { %"struct.std::__1::__tuple_impl.213" }
%"struct.std::__1::__tuple_impl.213" = type { %"class.std::__1::__tuple_leaf.214", %"class.std::__1::__tuple_leaf.215" }
%"class.std::__1::__tuple_leaf.214" = type { i16* }
%"class.std::__1::__tuple_leaf.215" = type { %struct.SkPoint* }
%class.SkSTArray.216 = type { %class.SkAlignedSTStorage.217, %class.SkTArray.218 }
%class.SkAlignedSTStorage.217 = type { [8 x i8] }
%class.SkTArray.218 = type { i16*, i64 }
%class.SkSTArray.219 = type { %class.SkAlignedSTStorage.220, %class.SkTArray.221 }
%class.SkAlignedSTStorage.220 = type { [32 x i8] }
%class.SkTArray.221 = type { %struct.SkPoint*, i64 }
%class.GrClip = type opaque
%"class.std::__1::function.222" = type { %"class.std::__1::__function::__policy_func.226" }
%"class.std::__1::__function::__policy_func.226" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.227", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.227" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* }
%class.GrSimpleMeshDrawOpHelper = type <{ %class.GrProcessorSet*, i8, i8, [6 x i8] }>
%"class.std::__1::function.240" = type opaque
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%class.SkEventTracer = type { i32 (...)** }
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.243, %class.SkArenaAllocList.244, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.131*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.241, %class.sk_sp.44, %class.sk_sp.48, %class.GrGpu*, i32, i8* }
%class.SkTArray.241 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.242 }
%class.sk_sp.242 = type { %class.GrBuffer* }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.243 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.244 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.129, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.183, %class.sk_sp.183, %class.sk_sp.183, i32, i32 }
%class.GrRenderTarget = type opaque
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%class.GrProcessorAnalysisColor = type { i32, %struct.SkRGBA4f }
%"class.GrQuadPerEdgeAA::Tessellator" = type { %"class.GrQuadUtils::TessellationHelper", %"struct.GrQuadPerEdgeAA::VertexSpec", %struct.GrVertexWriter, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, [8 x i8] }
%"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter" = type { %class.GrQuad, %class.GrQuad, %class.GrQuadBuffer*, i8*, i8* }

$_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = comdat any

$_ZN4GrOpD2Ev = comdat any

$_ZN4GrOpD0Ev = comdat any

$_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE = comdat any

$_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps = comdat any

$_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZTV4GrOp = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZTVN12_GLOBAL__N_110FillRectOpE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::FillRectOp"*)* @_ZN12_GLOBAL__N_110FillRectOpD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRectOp"*)* @_ZN12_GLOBAL__N_110FillRectOpD0Ev to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::FillRectOp"*)* @_ZNK12_GLOBAL__N_110FillRectOp4nameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRectOp"*, %"class.std::__1::function.240"*)* @_ZNK12_GLOBAL__N_110FillRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::FillRectOp"*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN12_GLOBAL__N_110FillRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%class.GrMeshDrawOp*, %class.GrOpFlushState*)* @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRectOp"*, %class.GrOpFlushState*, %struct.SkRect*)* @_ZN12_GLOBAL__N_110FillRectOp9onExecuteEP14GrOpFlushStateRK6SkRect to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::FillRectOp"*)* @_ZNK12_GLOBAL__N_110FillRectOp18fixedFunctionFlagsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::FillRectOp"*, %class.GrCaps*, %class.GrAppliedClip*, i32)* @_ZN12_GLOBAL__N_110FillRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRectOp"*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_110FillRectOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (%class.GrProgramInfo* (%"class.(anonymous namespace)::FillRectOp"*)* @_ZN12_GLOBAL__N_110FillRectOp11programInfoEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRectOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)* @_ZN12_GLOBAL__N_110FillRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp to i8*), i8* bitcast (void (%"class.(anonymous namespace)::FillRectOp"*, %"class.GrMeshDrawOp::Target"*)* @_ZN12_GLOBAL__N_110FillRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE to i8*)] }, align 8
@_ZZN12_GLOBAL__N_110FillRectOp7ClassIDEvE8kClassID = internal unnamed_addr global i32 0, align 4
@_ZGVZN12_GLOBAL__N_110FillRectOp7ClassIDEvE8kClassID = internal global i64 0, align 8
@_ZN4GrOp14gCurrOpClassIDE = external global %"struct.std::__1::atomic.245", align 4
@.str = private unnamed_addr constant [42 x i8] c"../../third_party/skia/src/gpu/ops/GrOp.h\00", align 1
@.str.1 = private unnamed_addr constant [80 x i8] c"This should never wrap as it should only be called once for each GrOp subclass.\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@_ZTV4GrOp = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD2Ev to i8*), i8* bitcast (void (%class.GrOp*)* @_ZN4GrOpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOp*, %"class.std::__1::function.240"*)* @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE to i8*), i8* bitcast (i32 (%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps*)* @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.7 = private unnamed_addr constant [11 x i8] c"FillRectOp\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"disabled-by-default-skia.gpu\00", align 1
@__PRETTY_FUNCTION__._ZN12_GLOBAL__N_110FillRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps = private unnamed_addr constant [123 x i8] c"virtual GrOp::CombineResult (anonymous namespace)::FillRectOp::onCombineIfPossible(GrOp *, SkArenaAlloc *, const GrCaps &)\00", align 1
@__PRETTY_FUNCTION__._ZN12_GLOBAL__N_110FillRectOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp = private unnamed_addr constant [202 x i8] c"virtual void (anonymous namespace)::FillRectOp::onPrePrepareDraws(GrRecordingContext *, const GrSurfaceProxyView &, GrAppliedClip *, const GrXferProcessor::DstProxyView &, GrXferBarrierFlags, GrLoadOp)\00", align 1
@_ZZNK12_GLOBAL__N_110FillRectOp10tessellateERKN15GrQuadPerEdgeAA10VertexSpecEPcE12kEmptyDomain = internal constant %struct.SkRect zeroinitializer, align 4
@__const._ZNK12_GLOBAL__N_110FillRectOp10tessellateERKN15GrQuadPerEdgeAA10VertexSpecEPc.tessellator = private unnamed_addr constant { %"class.GrQuadUtils::TessellationHelper", %"struct.GrQuadPerEdgeAA::VertexSpec", [4 x i8], %struct.GrVertexWriter, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, [8 x i8] } { %"class.GrQuadUtils::TessellationHelper" <{ %"struct.GrQuadUtils::TessellationHelper::Vertices" { %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, i32 -1431655766, [12 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %"struct.GrQuadUtils::TessellationHelper::EdgeVectors" { %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } } }, i32 -1431655766, i32 -1431655766, [8 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA", %"struct.GrQuadUtils::TessellationHelper::OutsetRequest" <{ %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, i8 -86, i8 -86, [14 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }>, %"struct.GrQuadUtils::TessellationHelper::EdgeEquations" { %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } }, %"struct.skvx::Vec" { %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } }, %"struct.skvx::Vec.264" { %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 }, %"struct.skvx::Vec.265" { float 0xFFFFFFFFE0000000 } } } }, i8 -86, i8 -86, i8 -86, [13 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }>, %"struct.GrQuadPerEdgeAA::VertexSpec" { i16 -21846, [2 x i8] c"\AA\AA" }, [4 x i8] c"\AA\AA\AA\AA", %struct.GrVertexWriter { i8* inttoptr (i64 -6148914691236517206 to i8*) }, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)* inttoptr (i64 -6148914691236517206 to void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*), [8 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA" }, align 16
@__PRETTY_FUNCTION__._ZN12_GLOBAL__N_110FillRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE = private unnamed_addr constant [87 x i8] c"virtual void (anonymous namespace)::FillRectOp::onPrepareDraws(GrMeshDrawOp::Target *)\00", align 1
@.str.9 = private unnamed_addr constant [52 x i8] c"../../third_party/skia/src/gpu/ops/GrFillRectOp.cpp\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"Could not allocate vertices\0A\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"Could not allocate indices\0A\00", align 1
@__const._ZN12_GLOBAL__N_110FillRectOp7addQuadEP8DrawQuadRK8SkRGBA4fIL11SkAlphaType2EE8GrAAType.extra = private unnamed_addr constant %struct.DrawQuad { %class.GrQuad { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.GrQuad { [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, i32 -1431655766 }, align 4
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@_ZZN12_GLOBAL__N_110FillRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCapsE28trace_event_unique_atomic320.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN12_GLOBAL__N_110FillRectOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOpE28trace_event_unique_atomic225.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN12_GLOBAL__N_110FillRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE28trace_event_unique_atomic260.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.GrOp* @_ZN12GrFillRectOp4MakeEP18GrRecordingContextO7GrPaint8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrRecordingContext* nocapture readnone, %class.GrPaint* dereferenceable(48), i32, %struct.DrawQuad*, %struct.GrUserStencilSettings*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = tail call fastcc %class.GrOp* @_ZN12_GLOBAL__N_110FillRectOp4MakeEP18GrRecordingContextO7GrPaint8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrPaint* dereferenceable(48) %1, i32 %2, %struct.DrawQuad* %3, %struct.GrUserStencilSettings* %4, i8 zeroext %5)
  ret %class.GrOp* %7
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc nonnull %class.GrOp* @_ZN12_GLOBAL__N_110FillRectOp4MakeEP18GrRecordingContextO7GrPaint8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrPaint* dereferenceable(48), i32, %struct.DrawQuad*, %struct.GrUserStencilSettings*, i8 zeroext) unnamed_addr #1 align 2 {
  %6 = alloca i32, align 4
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %2, i64 0, i32 0
  call void @_ZN11GrQuadUtils13ResolveAATypeE8GrAAType13GrQuadAAFlagsRK6GrQuadPS0_PS1_(i32 %1, i32 %8, %class.GrQuad* dereferenceable(52) %9, i32* nonnull %6, i32* %7) #15
  %10 = load i32, i32* %6, align 4
  %11 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %0, i64 0, i32 5
  %12 = bitcast %struct.SkRGBA4f* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %0, i64 0, i32 5, i32 2
  %15 = bitcast float* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  %17 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %0, i64 0, i32 3
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %5
  %21 = call i8* @_Znwm(i64 152) #16
  br label %26

22:                                               ; preds = %5
  %23 = call i8* @_Znwm(i64 184) #15
  %24 = getelementptr inbounds i8, i8* %23, i64 152
  %25 = bitcast i8* %24 to %class.GrProcessorSet*
  call void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet* %25, %class.GrPaint* dereferenceable(48) %0) #15
  br label %26

26:                                               ; preds = %20, %22
  %27 = phi i8* [ %21, %20 ], [ %23, %22 ]
  %28 = phi %class.GrProcessorSet* [ null, %20 ], [ %25, %22 ]
  %29 = bitcast i8* %27 to %"class.(anonymous namespace)::FillRectOp"*
  call fastcc void @_ZN12_GLOBAL__N_110FillRectOpC2EP14GrProcessorSet8SkRGBA4fIL11SkAlphaType2EE8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%"class.(anonymous namespace)::FillRectOp"* nonnull %29, %class.GrProcessorSet* %28, <2 x float> %13, <2 x float> %16, i32 %10, %struct.DrawQuad* %2, %struct.GrUserStencilSettings* %3, i8 zeroext %4) #15
  %30 = bitcast i8* %27 to %class.GrOp*
  ret %class.GrOp* %30
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.GrOp* @_ZN12GrFillRectOp13MakeNonAARectEP18GrRecordingContextO7GrPaintRK8SkMatrixRK6SkRectPK21GrUserStencilSettings(%class.GrRecordingContext* nocapture readnone, %class.GrPaint* dereferenceable(48), %class.SkMatrix* dereferenceable(40), %struct.SkRect* dereferenceable(16), %struct.GrUserStencilSettings*) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.DrawQuad, align 4
  %7 = bitcast %struct.DrawQuad* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %7) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 bitcast (%struct.DrawQuad* @__const._ZN12_GLOBAL__N_110FillRectOp7addQuadEP8DrawQuadRK8SkRGBA4fIL11SkAlphaType2EE8GrAAType.extra to i8*), i64 108, i1 false)
  %8 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 0
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* nonnull sret %8, %struct.SkRect* dereferenceable(16) %3, %class.SkMatrix* dereferenceable(40) %2) #15
  %9 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 1
  %10 = bitcast %struct.SkRect* %3 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %class.GrQuad* %9 to i32*
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 1, i32 0, i64 1
  %14 = bitcast float* %13 to i32*
  store i32 %11, i32* %14, align 4
  %15 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 1, i32 0, i64 2
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 2
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = bitcast float* %15 to i32*
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 1, i32 0, i64 3
  %21 = bitcast float* %20 to i32*
  store i32 %18, i32* %21, align 4
  %22 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 1, i32 1, i64 0
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 1
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = bitcast float* %22 to i32*
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 1, i32 1, i64 1
  %28 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 0, i32 3
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = bitcast float* %27 to i32*
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 1, i32 1, i64 2
  %33 = bitcast float* %32 to i32*
  store i32 %25, i32* %33, align 4
  %34 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 1, i32 1, i64 3
  %35 = bitcast float* %34 to i32*
  store i32 %30, i32* %35, align 4
  %36 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 1, i32 2, i64 0
  %37 = bitcast float* %36 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %37, align 4
  %38 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 1, i32 3
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %6, i64 0, i32 2
  store i32 0, i32* %39, align 4
  %40 = call fastcc %class.GrOp* @_ZN12_GLOBAL__N_110FillRectOp4MakeEP18GrRecordingContextO7GrPaint8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrPaint* dereferenceable(48) %1, i32 0, %struct.DrawQuad* nonnull %6, %struct.GrUserStencilSettings* %4, i8 zeroext 0)
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %7) #15
  ret %class.GrOp* %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* sret, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOp* @_ZN12GrFillRectOp6MakeOpEP18GrRecordingContextO7GrPaint8GrAATypeRK8SkMatrixPKN20GrSurfaceDrawContext12QuadSetEntryEiPK21GrUserStencilSettingsPi(%class.GrRecordingContext* nocapture readnone, %class.GrPaint* dereferenceable(48), i32, %class.SkMatrix* dereferenceable(40), %"struct.GrSurfaceDrawContext::QuadSetEntry"*, i32, %struct.GrUserStencilSettings*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %9 = alloca %struct.DrawQuad, align 4
  %10 = alloca %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", align 4
  %11 = alloca %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", align 4
  %12 = alloca %struct.DrawQuad, align 4
  %13 = alloca %struct.DrawQuad, align 4
  %14 = alloca i32, align 4
  %15 = bitcast %struct.DrawQuad* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %15) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 bitcast (%struct.DrawQuad* @__const._ZN12_GLOBAL__N_110FillRectOp7addQuadEP8DrawQuadRK8SkRGBA4fIL11SkAlphaType2EE8GrAAType.extra to i8*), i64 108, i1 false)
  %16 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.GrSurfaceDrawContext::QuadSetEntry", %"struct.GrSurfaceDrawContext::QuadSetEntry"* %4, i64 0, i32 0
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* nonnull sret %16, %struct.SkRect* dereferenceable(16) %17, %class.SkMatrix* dereferenceable(40) %3) #15
  %18 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.GrSurfaceDrawContext::QuadSetEntry", %"struct.GrSurfaceDrawContext::QuadSetEntry"* %4, i64 0, i32 2
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* sret %18, %struct.SkRect* dereferenceable(16) %17, %class.SkMatrix* dereferenceable(40) %19) #15
  %20 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.GrSurfaceDrawContext::QuadSetEntry", %"struct.GrSurfaceDrawContext::QuadSetEntry"* %4, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"struct.GrSurfaceDrawContext::QuadSetEntry", %"struct.GrSurfaceDrawContext::QuadSetEntry"* %4, i64 0, i32 1
  %24 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 5
  %25 = bitcast %struct.SkRGBA4f* %24 to i8*
  %26 = bitcast %struct.SkRGBA4f* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 16, i1 false) #15
  %27 = call fastcc %class.GrOp* @_ZN12_GLOBAL__N_110FillRectOp4MakeEP18GrRecordingContextO7GrPaint8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrPaint* dereferenceable(48) %1, i32 %2, %struct.DrawQuad* nonnull %12, %struct.GrUserStencilSettings* %6, i8 zeroext 0)
  store i32 1, i32* %7, align 4
  %28 = icmp sgt i32 %5, 1
  br i1 %28, label %29, label %206

29:                                               ; preds = %8
  %30 = bitcast %class.GrOp* %27 to %"class.(anonymous namespace)::FillRectOp"*
  %31 = bitcast %struct.DrawQuad* %13 to i8*
  %32 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 0
  %33 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 1
  %34 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %13, i64 0, i32 2
  %35 = bitcast i32* %14 to i8*
  %36 = getelementptr inbounds %class.GrOp, %class.GrOp* %27, i64 0, i32 6
  %37 = bitcast %struct.SkRect* %36 to i32*
  %38 = getelementptr inbounds %class.GrOp, %class.GrOp* %27, i64 0, i32 6, i32 1
  %39 = bitcast float* %38 to i32*
  %40 = getelementptr inbounds %class.GrOp, %class.GrOp* %27, i64 0, i32 6, i32 2
  %41 = bitcast float* %40 to i32*
  %42 = getelementptr inbounds %class.GrOp, %class.GrOp* %27, i64 0, i32 6, i32 3
  %43 = bitcast float* %42 to i32*
  %44 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 0, i32 3
  %45 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 0, i32 0, i64 0
  %46 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 0, i32 0, i64 1
  %47 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 0, i32 0, i64 2
  %48 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 0, i32 0, i64 3
  %49 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 0, i32 1, i64 0
  %50 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 0, i32 1, i64 1
  %51 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 0, i32 1, i64 2
  %52 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %12, i64 0, i32 0, i32 1, i64 3
  %53 = bitcast %struct.DrawQuad* %9 to i8*
  %54 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 0, i32 2, i64 0
  %55 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 0, i32 3
  %56 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 1, i32 2, i64 0
  %57 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 1, i32 3
  %58 = getelementptr inbounds %class.GrOp, %class.GrOp* %27, i64 1, i32 6, i32 2
  %59 = bitcast float* %58 to i32*
  %60 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %30, i64 0, i32 1, i32 0, i32 2
  %61 = getelementptr inbounds %class.GrOp, %class.GrOp* %27, i64 1, i32 3
  %62 = bitcast i16* %61 to %class.GrQuadBuffer*
  %63 = bitcast %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %10 to i8*
  %64 = getelementptr inbounds %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %10, i64 0, i32 1
  %65 = getelementptr inbounds %class.GrOp, %class.GrOp* %27, i64 1
  %66 = bitcast %class.GrOp* %65 to %class.GrProcessorSet**
  %67 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 0
  %68 = bitcast %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %11 to i8*
  %69 = getelementptr inbounds %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %11, i64 0, i32 1
  %70 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 2
  %71 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 1
  %72 = getelementptr inbounds %class.GrOp, %class.GrOp* %27, i64 0, i32 4
  %73 = zext i32 %5 to i64
  %74 = bitcast float* %54 to <4 x float>*
  %75 = bitcast float* %56 to <4 x float>*
  br label %76

76:                                               ; preds = %200, %29
  %77 = phi i64 [ 1, %29 ], [ %203, %200 ]
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %31) #15
  %78 = getelementptr inbounds %"struct.GrSurfaceDrawContext::QuadSetEntry", %"struct.GrSurfaceDrawContext::QuadSetEntry"* %4, i64 %77, i32 0
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* nonnull sret %32, %struct.SkRect* dereferenceable(16) %78, %class.SkMatrix* dereferenceable(40) %3) #15
  %79 = getelementptr inbounds %"struct.GrSurfaceDrawContext::QuadSetEntry", %"struct.GrSurfaceDrawContext::QuadSetEntry"* %4, i64 %77, i32 2
  call void @_ZN6GrQuad12MakeFromRectERK6SkRectRK8SkMatrix(%class.GrQuad* sret %33, %struct.SkRect* dereferenceable(16) %78, %class.SkMatrix* dereferenceable(40) %79) #15
  %80 = getelementptr inbounds %"struct.GrSurfaceDrawContext::QuadSetEntry", %"struct.GrSurfaceDrawContext::QuadSetEntry"* %4, i64 %77, i32 3
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %34, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* nonnull align 4 %31, i64 108, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %31) #15
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #15
  store i32 -1431655766, i32* %14, align 4
  call void @_ZN11GrQuadUtils13ResolveAATypeE8GrAAType13GrQuadAAFlagsRK6GrQuadPS0_PS1_(i32 %2, i32 %81, %class.GrQuad* nonnull dereferenceable(52) %16, i32* nonnull %14, i32* %20) #15
  %82 = getelementptr inbounds %"struct.GrSurfaceDrawContext::QuadSetEntry", %"struct.GrSurfaceDrawContext::QuadSetEntry"* %4, i64 %77, i32 1
  %83 = load i32, i32* %14, align 4
  %84 = load i32, i32* %37, align 4
  %85 = load i32, i32* %39, align 4
  %86 = load i32, i32* %41, align 4
  %87 = load i32, i32* %43, align 4
  %88 = load i32, i32* %44, align 4
  %89 = icmp eq i32 %88, 3
  br i1 %89, label %90, label %94

90:                                               ; preds = %76
  %91 = call { <2 x float>, <2 x float> } @_ZNK6GrQuad15projectedBoundsEv(%class.GrQuad* nonnull %16) #15
  %92 = extractvalue { <2 x float>, <2 x float> } %91, 0
  %93 = extractvalue { <2 x float>, <2 x float> } %91, 1
  br label %131

94:                                               ; preds = %76
  %95 = load float, float* %46, align 4
  %96 = load float, float* %45, align 4
  %97 = fcmp olt float %95, %96
  %98 = load float, float* %48, align 4
  %99 = load float, float* %47, align 4
  %100 = fcmp olt float %98, %99
  %101 = select i1 %100, float %98, float %99
  %102 = select i1 %97, float %95, float %96
  %103 = fcmp olt float %101, %102
  %104 = select i1 %103, float %101, float %102
  %105 = insertelement <2 x float> undef, float %104, i32 0
  %106 = load float, float* %50, align 4
  %107 = load float, float* %49, align 4
  %108 = fcmp olt float %106, %107
  %109 = load float, float* %52, align 4
  %110 = load float, float* %51, align 4
  %111 = fcmp olt float %109, %110
  %112 = select i1 %111, float %109, float %110
  %113 = select i1 %108, float %106, float %107
  %114 = fcmp olt float %112, %113
  %115 = select i1 %114, float %112, float %113
  %116 = insertelement <2 x float> %105, float %115, i32 1
  %117 = fcmp olt float %96, %95
  %118 = fcmp olt float %99, %98
  %119 = select i1 %117, float %95, float %96
  %120 = select i1 %118, float %98, float %99
  %121 = fcmp olt float %119, %120
  %122 = select i1 %121, float %120, float %119
  %123 = insertelement <2 x float> undef, float %122, i32 0
  %124 = fcmp olt float %107, %106
  %125 = fcmp olt float %110, %109
  %126 = select i1 %124, float %106, float %107
  %127 = select i1 %125, float %109, float %110
  %128 = fcmp olt float %126, %127
  %129 = select i1 %128, float %127, float %126
  %130 = insertelement <2 x float> %123, float %129, i32 1
  br label %131

131:                                              ; preds = %94, %90
  %132 = phi <2 x float> [ %92, %90 ], [ %116, %94 ]
  %133 = phi <2 x float> [ %93, %90 ], [ %130, %94 ]
  %134 = extractelement <2 x float> %132, i32 0
  %135 = bitcast i32 %84 to float
  %136 = fcmp olt float %134, %135
  %137 = bitcast float %134 to i32
  %138 = select i1 %136, i32 %137, i32 %84
  %139 = extractelement <2 x float> %132, i32 1
  %140 = bitcast i32 %85 to float
  %141 = fcmp olt float %139, %140
  %142 = bitcast float %139 to i32
  %143 = select i1 %141, i32 %142, i32 %85
  %144 = extractelement <2 x float> %133, i32 0
  %145 = bitcast i32 %86 to float
  %146 = fcmp ogt float %144, %145
  %147 = bitcast float %144 to i32
  %148 = select i1 %146, i32 %147, i32 %86
  %149 = extractelement <2 x float> %133, i32 1
  %150 = bitcast i32 %87 to float
  %151 = fcmp ogt float %149, %150
  %152 = bitcast float %149 to i32
  %153 = select i1 %151, i32 %152, i32 %87
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %53) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* align 4 bitcast (%struct.DrawQuad* @__const._ZN12_GLOBAL__N_110FillRectOp7addQuadEP8DrawQuadRK8SkRGBA4fIL11SkAlphaType2EE8GrAAType.extra to i8*), i64 108, i1 false) #15
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %74, align 4
  store i32 0, i32* %55, align 4
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %75, align 4
  store i32 0, i32* %57, align 4
  %154 = load i32, i32* %20, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %159, label %156

156:                                              ; preds = %131
  %157 = call i32 @_ZN11GrQuadUtils8ClipToW0EP8DrawQuadS1_(%struct.DrawQuad* nonnull %12, %struct.DrawQuad* nonnull %9) #15
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %200, label %159

159:                                              ; preds = %156, %131
  %160 = phi i32 [ %157, %156 ], [ 1, %131 ]
  %161 = load i32, i32* %59, align 8
  %162 = add nsw i32 %161, %160
  %163 = load i8, i8* %60, align 1
  %164 = and i8 %163, 3
  %165 = zext i8 %164 to i32
  %166 = icmp ne i32 %83, %165
  %167 = icmp ne i32 %83, 0
  %168 = and i1 %167, %166
  br i1 %168, label %169, label %179

169:                                              ; preds = %159
  %170 = call i32 @_ZN15GrQuadPerEdgeAA21CalcIndexBufferOptionE8GrAATypei(i32 %83, i32 %162) #15
  %171 = call i32 @_ZN15GrQuadPerEdgeAA9QuadLimitENS_17IndexBufferOptionE(i32 %170) #15
  %172 = icmp sgt i32 %162, %171
  br i1 %172, label %205, label %173

173:                                              ; preds = %169
  %174 = trunc i32 %83 to i8
  %175 = load i8, i8* %60, align 1
  %176 = and i8 %174, 3
  %177 = and i8 %175, -4
  %178 = or i8 %177, %176
  store i8 %178, i8* %60, align 1
  br label %183

179:                                              ; preds = %159
  %180 = call i32 @_ZN15GrQuadPerEdgeAA21CalcIndexBufferOptionE8GrAATypei(i32 %165, i32 %162) #15
  %181 = call i32 @_ZN15GrQuadPerEdgeAA9QuadLimitENS_17IndexBufferOptionE(i32 %180) #15
  %182 = icmp sgt i32 %162, %181
  br i1 %182, label %205, label %183

183:                                              ; preds = %179, %173
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %63) #15
  %184 = bitcast %struct.SkRGBA4f* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %63, i8* align 4 %184, i64 16, i1 false) #15
  %185 = load i32, i32* %20, align 4
  store i32 %185, i32* %64, align 4
  %186 = load %class.GrProcessorSet*, %class.GrProcessorSet** %66, align 8
  %187 = icmp eq %class.GrProcessorSet* %186, null
  %188 = select i1 %187, %class.GrQuad* null, %class.GrQuad* %18
  call fastcc void @_ZN12GrQuadBufferIN12_GLOBAL__N_110FillRectOp10ColorAndAAEE6appendERK6GrQuadOS2_PS5_(%class.GrQuadBuffer* %62, %class.GrQuad* nonnull dereferenceable(52) %16, %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* nonnull dereferenceable(20) %10, %class.GrQuad* %188) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %63) #15
  %189 = icmp sgt i32 %160, 1
  br i1 %189, label %190, label %195

190:                                              ; preds = %183
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %68) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %68, i8* align 4 %184, i64 16, i1 false) #15
  %191 = load i32, i32* %70, align 4
  store i32 %191, i32* %69, align 4
  %192 = load %class.GrProcessorSet*, %class.GrProcessorSet** %66, align 8
  %193 = icmp eq %class.GrProcessorSet* %192, null
  %194 = select i1 %193, %class.GrQuad* null, %class.GrQuad* %71
  call fastcc void @_ZN12GrQuadBufferIN12_GLOBAL__N_110FillRectOp10ColorAndAAEE6appendERK6GrQuadOS2_PS5_(%class.GrQuadBuffer* %62, %class.GrQuad* nonnull dereferenceable(52) %67, %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* nonnull dereferenceable(20) %11, %class.GrQuad* %194) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %68) #15
  br label %195

195:                                              ; preds = %190, %183
  %196 = load i8, i8* %60, align 1
  %197 = and i8 %196, 3
  %198 = icmp eq i8 %197, 1
  store i32 %138, i32* %37, align 8
  store i32 %143, i32* %39, align 4
  store i32 %148, i32* %41, align 8
  store i32 %153, i32* %43, align 4
  %199 = zext i1 %198 to i16
  store i16 %199, i16* %72, align 2
  br label %200

200:                                              ; preds = %195, %156
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %53) #15
  %201 = load i32, i32* %7, align 4
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #15
  %203 = add nuw nsw i64 %77, 1
  %204 = icmp eq i64 %203, %73
  br i1 %204, label %206, label %76

205:                                              ; preds = %179, %169
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %53) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #15
  br label %206

206:                                              ; preds = %200, %8, %205
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %15) #15
  ret %class.GrOp* %27
}

declare void @_ZN11GrQuadUtils13ResolveAATypeE8GrAAType13GrQuadAAFlagsRK6GrQuadPS0_PS1_(i32, i32, %class.GrQuad* dereferenceable(52), i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12GrFillRectOp14AddFillRectOpsEP20GrSurfaceDrawContextPK6GrClipP18GrRecordingContextO7GrPaint8GrAATypeRK8SkMatrixPKNS0_12QuadSetEntryEiPK21GrUserStencilSettings(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrRecordingContext* nocapture readnone, %class.GrPaint* dereferenceable(48), i32, %class.SkMatrix* dereferenceable(40), %"struct.GrSurfaceDrawContext::QuadSetEntry"*, i32, %struct.GrUserStencilSettings*) local_unnamed_addr #0 align 2 {
  %10 = alloca i32, align 4
  %11 = alloca %class.GrPaint, align 8
  %12 = alloca %"class.std::__1::function.222", align 8
  %13 = icmp eq i32 %7, 0
  br i1 %13, label %56, label %14

14:                                               ; preds = %9
  %15 = bitcast i32* %10 to i8*
  %16 = bitcast %class.GrPaint* %11 to i8*
  %17 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::function.222"* %12 to i8*
  %20 = getelementptr inbounds %"class.std::__1::function.222", %"class.std::__1::function.222"* %12, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::function.222", %"class.std::__1::function.222"* %12, i64 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.std::__1::function.222", %"class.std::__1::function.222"* %12, i64 0, i32 0, i32 0, i32 0
  br label %23

23:                                               ; preds = %14, %54
  %24 = phi i32 [ %7, %14 ], [ %47, %54 ]
  %25 = phi i32 [ 0, %14 ], [ %46, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #15
  store i32 0, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #15
  call void @_ZN7GrPaintC1ERKS_(%class.GrPaint* nonnull %11, %class.GrPaint* dereferenceable(48) %3) #15
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.GrSurfaceDrawContext::QuadSetEntry", %"struct.GrSurfaceDrawContext::QuadSetEntry"* %6, i64 %26
  %28 = call %class.GrOp* @_ZN12GrFillRectOp6MakeOpEP18GrRecordingContextO7GrPaint8GrAATypeRK8SkMatrixPKN20GrSurfaceDrawContext12QuadSetEntryEiPK21GrUserStencilSettingsPi(%class.GrRecordingContext* undef, %class.GrPaint* nonnull dereferenceable(48) %11, i32 %4, %class.SkMatrix* dereferenceable(40) %5, %"struct.GrSurfaceDrawContext::QuadSetEntry"* %27, i32 %24, %struct.GrUserStencilSettings* %8, i32* nonnull %10)
  %29 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %30 = icmp eq %class.GrFragmentProcessor* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %23
  %32 = bitcast %class.GrFragmentProcessor* %29 to void (%class.GrFragmentProcessor*)***
  %33 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %33, i64 1
  %35 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %34, align 8
  call void %35(%class.GrFragmentProcessor* nonnull %29) #15
  br label %36

36:                                               ; preds = %31, %23
  %37 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %38 = icmp eq %class.GrFragmentProcessor* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = bitcast %class.GrFragmentProcessor* %37 to void (%class.GrFragmentProcessor*)***
  %41 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %41, i64 1
  %43 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %42, align 8
  call void %43(%class.GrFragmentProcessor* nonnull %37) #15
  br label %44

44:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #15
  %45 = load i32, i32* %10, align 4
  %46 = add nsw i32 %45, %25
  %47 = sub nsw i32 %24, %45
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #15
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)* @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j, void (%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32)** %20, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %21, align 8
  call void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext* %0, %class.GrClip* %1, %class.GrOp* %28, %"class.std::__1::function.222"* nonnull dereferenceable(32) %12) #15
  %48 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %21, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %48, i64 0, i32 1
  %50 = load void (i8*)*, void (i8*)** %49, align 8
  %51 = icmp eq void (i8*)* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %44
  %53 = load i8*, i8** %22, align 8
  call void %50(i8* %53) #15
  br label %54

54:                                               ; preds = %52, %44
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #15
  %55 = icmp eq i32 %47, 0
  br i1 %55, label %56, label %23

56:                                               ; preds = %54, %9
  ret void
}

declare void @_ZN20GrSurfaceDrawContext9addDrawOpEPK6GrClipNSt3__110unique_ptrI4GrOpNS3_14default_deleteIS5_EEEERKNS3_8functionIFvPS5_jEEE(%class.GrSurfaceDrawContext*, %class.GrClip*, %class.GrOp*, %"class.std::__1::function.222"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110FillRectOpC2EP14GrProcessorSet8SkRGBA4fIL11SkAlphaType2EE8GrAATypeP8DrawQuadPK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%"class.(anonymous namespace)::FillRectOp"*, %class.GrProcessorSet*, <2 x float>, <2 x float>, i32, %struct.DrawQuad*, %struct.GrUserStencilSettings*, i8 zeroext) unnamed_addr #1 align 2 {
  %9 = alloca %struct.DrawQuad, align 4
  %10 = alloca %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", align 8
  %11 = alloca %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_110FillRectOp7ClassIDEvE8kClassID to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %23, !prof !3

15:                                               ; preds = %8
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_110FillRectOp7ClassIDEvE8kClassID) #15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %15
  %19 = atomicrmw add i32* getelementptr inbounds (%"struct.std::__1::atomic.245", %"struct.std::__1::atomic.245"* @_ZN4GrOp14gCurrOpClassIDE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i64 0, i64 0)) #17
  unreachable

22:                                               ; preds = %18
  store i32 %19, i32* @_ZZN12_GLOBAL__N_110FillRectOp7ClassIDEvE8kClassID, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_110FillRectOp7ClassIDEvE8kClassID) #15
  br label %23

23:                                               ; preds = %8, %15, %22
  %24 = load i32, i32* @_ZZN12_GLOBAL__N_110FillRectOp7ClassIDEvE8kClassID, align 4
  tail call void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp* %12, i32 %24) #15
  %25 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_110FillRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1
  tail call void @_ZN35GrSimpleMeshDrawOpHelperWithStencilC1EP14GrProcessorSet8GrAATypePK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrSimpleMeshDrawOpHelperWithStencil* %26, %class.GrProcessorSet* %1, i32 %4, %struct.GrUserStencilSettings* %6, i8 zeroext %7) #15
  %27 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %class.GrSimpleMeshDrawOpHelperWithStencil, %class.GrSimpleMeshDrawOpHelperWithStencil* %26, i64 0, i32 0, i32 0
  %29 = load %class.GrProcessorSet*, %class.GrProcessorSet** %28, align 8
  %30 = icmp eq %class.GrProcessorSet* %29, null
  %31 = bitcast %class.GrQuadBuffer* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 28, i1 false) #15
  %32 = select i1 %30, i32 60, i32 92
  %33 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 0, i32 1
  %34 = lshr exact i32 %32, 2
  %35 = add nuw nsw i32 %34, %32
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %27, i64 0, i32 0, i32 0
  %37 = zext i32 %35 to i64
  %38 = tail call i8* @_Z16sk_realloc_throwPvm(i8* null, i64 %37) #15
  store i8* %38, i8** %36, align 8
  %39 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 7, i32 0
  %41 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0
  %42 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 3
  %43 = bitcast i8** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false)
  %44 = bitcast %class.GrBuffer** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false)
  %45 = load i32, i32* %42, align 4
  %46 = icmp eq i32 %45, 3
  br i1 %46, label %47, label %51

47:                                               ; preds = %23
  %48 = tail call { <2 x float>, <2 x float> } @_ZNK6GrQuad15projectedBoundsEv(%class.GrQuad* %41) #15
  %49 = extractvalue { <2 x float>, <2 x float> } %48, 0
  %50 = extractvalue { <2 x float>, <2 x float> } %48, 1
  br label %96

51:                                               ; preds = %23
  %52 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 0, i64 0
  %53 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 0, i64 1
  %54 = load float, float* %53, align 4
  %55 = load float, float* %52, align 4
  %56 = fcmp olt float %54, %55
  %57 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 0, i64 2
  %58 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 0, i64 3
  %59 = load float, float* %58, align 4
  %60 = load float, float* %57, align 4
  %61 = fcmp olt float %59, %60
  %62 = select i1 %61, float %59, float %60
  %63 = select i1 %56, float %54, float %55
  %64 = fcmp olt float %62, %63
  %65 = select i1 %64, float %62, float %63
  %66 = insertelement <2 x float> undef, float %65, i32 0
  %67 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 1, i64 0
  %68 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 1, i64 1
  %69 = load float, float* %68, align 4
  %70 = load float, float* %67, align 4
  %71 = fcmp olt float %69, %70
  %72 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 1, i64 2
  %73 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 0, i32 1, i64 3
  %74 = load float, float* %73, align 4
  %75 = load float, float* %72, align 4
  %76 = fcmp olt float %74, %75
  %77 = select i1 %76, float %74, float %75
  %78 = select i1 %71, float %69, float %70
  %79 = fcmp olt float %77, %78
  %80 = select i1 %79, float %77, float %78
  %81 = insertelement <2 x float> %66, float %80, i32 1
  %82 = fcmp olt float %55, %54
  %83 = fcmp olt float %60, %59
  %84 = select i1 %82, float %54, float %55
  %85 = select i1 %83, float %59, float %60
  %86 = fcmp olt float %84, %85
  %87 = select i1 %86, float %85, float %84
  %88 = insertelement <2 x float> undef, float %87, i32 0
  %89 = fcmp olt float %70, %69
  %90 = fcmp olt float %75, %74
  %91 = select i1 %89, float %69, float %70
  %92 = select i1 %90, float %74, float %75
  %93 = fcmp olt float %91, %92
  %94 = select i1 %93, float %92, float %91
  %95 = insertelement <2 x float> %88, float %94, i32 1
  br label %96

96:                                               ; preds = %47, %51
  %97 = phi <2 x float> [ %49, %47 ], [ %81, %51 ]
  %98 = phi <2 x float> [ %50, %47 ], [ %95, %51 ]
  %99 = icmp eq i32 %4, 1
  %100 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %101 = bitcast %struct.SkRect* %100 to <2 x float>*
  store <2 x float> %97, <2 x float>* %101, align 8
  %102 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 2
  %103 = bitcast float* %102 to <2 x float>*
  store <2 x float> %98, <2 x float>* %103, align 8
  %104 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %105 = zext i1 %99 to i16
  store i16 %105, i16* %104, align 2
  %106 = bitcast %struct.DrawQuad* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 108, i8* nonnull %106) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %106, i8* align 4 bitcast (%struct.DrawQuad* @__const._ZN12_GLOBAL__N_110FillRectOp7addQuadEP8DrawQuadRK8SkRGBA4fIL11SkAlphaType2EE8GrAAType.extra to i8*), i64 108, i1 false)
  %107 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 0, i32 2, i64 0
  %108 = bitcast float* %107 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %108, align 4
  %109 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 0, i32 3
  store i32 0, i32* %109, align 4
  %110 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 1, i32 2, i64 0
  %111 = bitcast float* %110 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %111, align 4
  %112 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 1, i32 3
  store i32 0, i32* %112, align 4
  %113 = call i32 @_ZN11GrQuadUtils8ClipToW0EP8DrawQuadS1_(%struct.DrawQuad* %5, %struct.DrawQuad* nonnull %9) #15
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 2
  br i1 %114, label %119, label %116

116:                                              ; preds = %96
  %117 = load i32, i32* %115, align 4
  %118 = icmp sgt i32 %113, 1
  br label %120

119:                                              ; preds = %96
  store i32 0, i32* %115, align 4
  br label %120

120:                                              ; preds = %116, %119
  %121 = phi i32 [ 0, %119 ], [ %117, %116 ]
  %122 = phi i1 [ false, %119 ], [ %118, %116 ]
  %123 = bitcast %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %123) #15
  %124 = bitcast %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %10 to <2 x float>*
  store <2 x float> %2, <2 x float>* %124, align 8
  %125 = getelementptr inbounds %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %10, i64 0, i32 0, i32 2
  %126 = bitcast float* %125 to <2 x float>*
  store <2 x float> %3, <2 x float>* %126, align 8
  %127 = getelementptr inbounds %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %10, i64 0, i32 1
  store i32 %121, i32* %127, align 8
  %128 = load %class.GrProcessorSet*, %class.GrProcessorSet** %28, align 8
  %129 = icmp eq %class.GrProcessorSet* %128, null
  %130 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %5, i64 0, i32 1
  %131 = select i1 %129, %class.GrQuad* null, %class.GrQuad* %130
  call fastcc void @_ZN12GrQuadBufferIN12_GLOBAL__N_110FillRectOp10ColorAndAAEE6appendERK6GrQuadOS2_PS5_(%class.GrQuadBuffer* %27, %class.GrQuad* dereferenceable(52) %41, %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* nonnull dereferenceable(20) %10, %class.GrQuad* %131)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %123) #15
  br i1 %122, label %132, label %145

132:                                              ; preds = %120
  %133 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 0
  %134 = bitcast %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %134) #15
  %135 = bitcast %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %11 to <2 x float>*
  store <2 x float> %2, <2 x float>* %135, align 8
  %136 = getelementptr inbounds %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %11, i64 0, i32 0, i32 2
  %137 = bitcast float* %136 to <2 x float>*
  store <2 x float> %3, <2 x float>* %137, align 8
  %138 = getelementptr inbounds %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %11, i64 0, i32 1
  %139 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 2
  %140 = load i32, i32* %139, align 4
  store i32 %140, i32* %138, align 8
  %141 = load %class.GrProcessorSet*, %class.GrProcessorSet** %28, align 8
  %142 = icmp eq %class.GrProcessorSet* %141, null
  %143 = getelementptr inbounds %struct.DrawQuad, %struct.DrawQuad* %9, i64 0, i32 1
  %144 = select i1 %142, %class.GrQuad* null, %class.GrQuad* %143
  call fastcc void @_ZN12GrQuadBufferIN12_GLOBAL__N_110FillRectOp10ColorAndAAEE6appendERK6GrQuadOS2_PS5_(%class.GrQuadBuffer* %27, %class.GrQuad* nonnull dereferenceable(52) %133, %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* nonnull dereferenceable(20) %11, %class.GrQuad* %144)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %134) #15
  br label %145

145:                                              ; preds = %132, %120
  call void @llvm.lifetime.end.p0i8(i64 108, i8* nonnull %106) #15
  ret void
}

declare void @_ZN12GrMeshDrawOpC2Ej(%class.GrMeshDrawOp*, i32) unnamed_addr #3

declare void @_ZN35GrSimpleMeshDrawOpHelperWithStencilC1EP14GrProcessorSet8GrAATypePK21GrUserStencilSettingsN24GrSimpleMeshDrawOpHelper10InputFlagsE(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrProcessorSet*, i32, %struct.GrUserStencilSettings*, i8 zeroext) unnamed_addr #3

declare i32 @_ZN11GrQuadUtils8ClipToW0EP8DrawQuadS1_(%struct.DrawQuad*, %struct.DrawQuad*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12GrQuadBufferIN12_GLOBAL__N_110FillRectOp10ColorAndAAEE6appendERK6GrQuadOS2_PS5_(%class.GrQuadBuffer* nocapture, %class.GrQuad* nocapture readonly dereferenceable(52), %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* nocapture readonly dereferenceable(20), %class.GrQuad* readonly) unnamed_addr #0 align 2 {
  %5 = icmp ne %class.GrQuad* %3, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 3
  %10 = select i1 %9, i32 72, i32 56
  br label %21

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 3
  %17 = select i1 %16, i32 72, i32 56
  %18 = icmp eq i32 %13, 3
  %19 = select i1 %18, i32 48, i32 32
  %20 = add nuw nsw i32 %19, %17
  br label %21

21:                                               ; preds = %6, %11
  %22 = phi i32* [ %14, %11 ], [ %7, %6 ]
  %23 = phi i32 [ %20, %11 ], [ %10, %6 ]
  %24 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, %23
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %29, label %28

28:                                               ; preds = %21
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0)) #17
  unreachable

29:                                               ; preds = %21
  %30 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp slt i32 %31, %26
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  br label %47

36:                                               ; preds = %29
  %37 = add nuw i32 %26, 4
  %38 = lshr i32 %37, 2
  %39 = add nuw i32 %38, %37
  %40 = icmp sgt i32 %39, -1
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #17
  unreachable

42:                                               ; preds = %36
  store i32 %39, i32* %30, align 8
  %43 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = sext i32 %39 to i64
  %46 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %44, i64 %45) #15
  store i8* %46, i8** %43, align 8
  br label %47

47:                                               ; preds = %33, %42
  %48 = phi i8* [ %35, %33 ], [ %46, %42 ]
  store i32 %26, i32* %24, align 4
  %49 = sext i32 %25 to i64
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  %51 = load i32, i32* %22, align 4
  %52 = trunc i32 %51 to i8
  %53 = load i8, i8* %50, align 4
  %54 = and i8 %52, 3
  %55 = and i8 %53, -20
  %56 = zext i1 %5 to i8
  %57 = shl nuw nsw i8 %56, 4
  %58 = or i8 %54, %57
  %59 = or i8 %58, %55
  store i8 %59, i8* %50, align 4
  br i1 %5, label %60, label %66

60:                                               ; preds = %47
  %61 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = trunc i32 %62 to i8
  %64 = shl i8 %63, 2
  %65 = and i8 %64, 12
  br label %66

66:                                               ; preds = %47, %60
  %67 = phi i8 [ %65, %60 ], [ 0, %47 ]
  %68 = and i8 %59, -13
  %69 = or i8 %67, %68
  store i8 %69, i8* %50, align 4
  %70 = getelementptr inbounds i8, i8* %50, i64 4
  %71 = bitcast %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %71, i64 20, i1 false)
  %72 = getelementptr inbounds i8, i8* %50, i64 24
  %73 = load i32, i32* %22, align 4
  %74 = icmp eq i32 %73, 3
  %75 = bitcast %class.GrQuad* %1 to i8*
  br i1 %74, label %76, label %77

76:                                               ; preds = %66
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %75, i64 48, i1 false) #15
  br label %78

77:                                               ; preds = %66
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 %75, i64 32, i1 false) #15
  br label %78

78:                                               ; preds = %76, %77
  %79 = phi i64 [ 48, %76 ], [ 32, %77 ]
  %80 = getelementptr inbounds i8, i8* %72, i64 %79
  br i1 %5, label %81, label %88

81:                                               ; preds = %78
  %82 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 3
  %85 = bitcast %class.GrQuad* %3 to i8*
  br i1 %84, label %86, label %87

86:                                               ; preds = %81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* nonnull align 4 %85, i64 48, i1 false) #15
  br label %88

87:                                               ; preds = %81
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* nonnull align 4 %85, i64 32, i1 false) #15
  br label %88

88:                                               ; preds = %87, %86, %78
  %89 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %89, align 8
  %92 = load i32, i32* %22, align 4
  %93 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %92, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %88
  store i32 %92, i32* %93, align 4
  br label %97

97:                                               ; preds = %96, %88
  br i1 %5, label %98, label %105

98:                                               ; preds = %97
  %99 = getelementptr inbounds %class.GrQuad, %class.GrQuad* %3, i64 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %0, i64 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = icmp sgt i32 %100, %102
  br i1 %103, label %104, label %105

104:                                              ; preds = %98
  store i32 %100, i32* %101, align 8
  br label %105

105:                                              ; preds = %104, %98, %97
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110FillRectOpD2Ev(%"class.(anonymous namespace)::FillRectOp"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_110FillRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 8, i32 0
  %4 = load %class.GrBuffer*, %class.GrBuffer** %3, align 8
  %5 = icmp eq %class.GrBuffer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrBuffer* %4 to void (%class.GrBuffer*)***
  %8 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %8, i64 3
  %10 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, align 8
  tail call void %10(%class.GrBuffer* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 7, i32 0
  %13 = load %class.GrBuffer*, %class.GrBuffer** %12, align 8
  %14 = icmp eq %class.GrBuffer* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GrBuffer* %13 to void (%class.GrBuffer*)***
  %17 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %17, i64 3
  %19 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, align 8
  tail call void %19(%class.GrBuffer* nonnull %13) #15
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_Z7sk_freePv(i8* %22) #15
  %23 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1
  %24 = bitcast %class.GrSimpleMeshDrawOpHelperWithStencil* %23 to %class.GrSimpleMeshDrawOpHelper*
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper* %24) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %25 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %class.GrOp*, %class.GrOp** %25, align 8
  store %class.GrOp* null, %class.GrOp** %25, align 8
  %27 = icmp eq %class.GrOp* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %20
  %29 = bitcast %class.GrOp* %26 to void (%class.GrOp*)***
  %30 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %30, i64 1
  %32 = load void (%class.GrOp*)*, void (%class.GrOp*)** %31, align 8
  tail call void %32(%class.GrOp* nonnull %26) #15
  br label %33

33:                                               ; preds = %20, %28
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110FillRectOpD0Ev(%"class.(anonymous namespace)::FillRectOp"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN12_GLOBAL__N_110FillRectOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 8, i32 0
  %4 = load %class.GrBuffer*, %class.GrBuffer** %3, align 8
  %5 = icmp eq %class.GrBuffer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrBuffer* %4 to void (%class.GrBuffer*)***
  %8 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %8, i64 3
  %10 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, align 8
  tail call void %10(%class.GrBuffer* nonnull %4) #15
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 7, i32 0
  %13 = load %class.GrBuffer*, %class.GrBuffer** %12, align 8
  %14 = icmp eq %class.GrBuffer* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GrBuffer* %13 to void (%class.GrBuffer*)***
  %17 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %17, i64 3
  %19 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, align 8
  tail call void %19(%class.GrBuffer* nonnull %13) #15
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_Z7sk_freePv(i8* %22) #15
  %23 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1
  %24 = bitcast %class.GrSimpleMeshDrawOpHelperWithStencil* %23 to %class.GrSimpleMeshDrawOpHelper*
  tail call void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper* %24) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %25 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %class.GrOp*, %class.GrOp** %25, align 8
  store %class.GrOp* null, %class.GrOp** %25, align 8
  %27 = icmp eq %class.GrOp* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %20
  %29 = bitcast %class.GrOp* %26 to void (%class.GrOp*)***
  %30 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %30, i64 1
  %32 = load void (%class.GrOp*)*, void (%class.GrOp*)** %31, align 8
  tail call void %32(%class.GrOp* nonnull %26) #15
  br label %33

33:                                               ; preds = %20, %28
  %34 = bitcast %"class.(anonymous namespace)::FillRectOp"* %0 to i8*
  tail call void @_ZdlPv(i8* %34) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_110FillRectOp4nameEv(%"class.(anonymous namespace)::FillRectOp"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_110FillRectOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%"class.(anonymous namespace)::FillRectOp"* nocapture readonly, %"class.std::__1::function.240"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 4
  %4 = load %class.GrProgramInfo*, %class.GrProgramInfo** %3, align 8
  %5 = icmp eq %class.GrProgramInfo* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %4, i64 0, i32 5
  %8 = load %class.GrPipeline*, %class.GrPipeline** %7, align 8
  tail call void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline* %8, %"class.std::__1::function.240"* %1) #15
  br label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %class.GrProcessorSet*, %class.GrProcessorSet** %10, align 8
  %12 = icmp eq %class.GrProcessorSet* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nonnull %11, %"class.std::__1::function.240"* %1) #15
  br label %14

14:                                               ; preds = %13, %9, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_110FillRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps(%"class.(anonymous namespace)::FillRectOp"*, %class.GrOp*, %class.SkArenaAlloc* nocapture readnone, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %6 = load atomic i64, i64* @_ZZN12_GLOBAL__N_110FillRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCapsE28trace_event_unique_atomic320.0.0 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %11 = bitcast %class.SkEventTracer* %10 to i8* (%class.SkEventTracer*, i8*)***
  %12 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %12, i64 2
  %14 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, align 8
  %15 = tail call i8* %14(%class.SkEventTracer* %10, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0)) #15
  %16 = ptrtoint i8* %15 to i64
  store atomic i64 %16, i64* @_ZZN12_GLOBAL__N_110FillRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCapsE28trace_event_unique_atomic320.0.0 monotonic, align 8
  br label %17

17:                                               ; preds = %4, %9
  %18 = phi i8* [ %7, %4 ], [ %15, %9 ]
  %19 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %25 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %26 = load i8, i8* %18, align 1
  %27 = and i8 %26, 5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %17
  %30 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %31 = bitcast %class.SkEventTracer* %30 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %31, align 8
  %33 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %32, i64 4
  %34 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, align 8
  %35 = tail call i64 %34(%class.SkEventTracer* %30, i8 signext 88, i8* %18, i8* getelementptr inbounds ([123 x i8], [123 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_110FillRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %36 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, i64 0, i32 0
  store i8* %18, i8** %37, align 8
  store i8* getelementptr inbounds ([123 x i8], [123 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_110FillRectOp19onCombineIfPossibleEP4GrOpP12SkArenaAllocRK6GrCaps, i64 0, i64 0), i8** %22, align 8
  store i64 %35, i64* %23, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %36, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  br label %38

38:                                               ; preds = %17, %29
  %39 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1
  %40 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1, i32 0, i32 2
  %41 = load i8, i8* %40, align 1
  %42 = and i8 %41, 3
  %43 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1
  %44 = bitcast %class.GrOp* %43 to %class.GrSimpleMeshDrawOpHelperWithStencil*
  %45 = bitcast %class.GrOp* %43 to %class.GrSimpleMeshDrawOpHelper*
  %46 = getelementptr inbounds %class.GrSimpleMeshDrawOpHelper, %class.GrSimpleMeshDrawOpHelper* %45, i64 0, i32 2
  %47 = load i8, i8* %46, align 1
  %48 = and i8 %47, 3
  %49 = icmp eq i8 %42, %48
  br i1 %49, label %58, label %50

50:                                               ; preds = %38
  %51 = icmp eq i8 %42, 0
  %52 = icmp eq i8 %48, 1
  %53 = and i1 %51, %52
  br i1 %53, label %58, label %54

54:                                               ; preds = %50
  %55 = icmp eq i8 %42, 1
  %56 = icmp eq i8 %48, 0
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %148

58:                                               ; preds = %50, %54, %38
  %59 = phi i1 [ false, %38 ], [ true, %54 ], [ true, %50 ]
  %60 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2
  %61 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 1, i32 3
  %64 = getelementptr inbounds i16, i16* %63, i64 8
  %65 = bitcast i16* %64 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = add nsw i32 %66, %62
  %68 = icmp eq i8 %42, 1
  %69 = or i1 %68, %59
  br i1 %69, label %70, label %72

70:                                               ; preds = %58
  %71 = call i32 @_ZN18GrResourceProvider13MaxNumAAQuadsEv() #15
  br label %74

72:                                               ; preds = %58
  %73 = call i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() #15
  br label %74

74:                                               ; preds = %70, %72
  %75 = phi i32 [ %71, %70 ], [ %73, %72 ]
  %76 = icmp slt i32 %75, %67
  br i1 %76, label %148, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0, i32 0, i32 0, i32 6
  %79 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 0, i32 6
  %80 = call zeroext i1 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelperWithStencil* %39, %class.GrSimpleMeshDrawOpHelperWithStencil* dereferenceable(24) %44, %class.GrCaps* dereferenceable(232) %3, %struct.SkRect* dereferenceable(16) %78, %struct.SkRect* dereferenceable(16) %79, i1 zeroext true) #15
  br i1 %80, label %81, label %148

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 5
  %83 = getelementptr inbounds %class.GrOp, %class.GrOp* %1, i64 2, i32 3
  %84 = bitcast i16* %83 to i32*
  %85 = load i32, i32* %82, align 4
  %86 = load i32, i32* %84, align 4
  %87 = icmp slt i32 %85, %86
  %88 = select i1 %87, i32 %86, i32 %85
  store i32 %88, i32* %82, align 8
  br i1 %59, label %89, label %93

89:                                               ; preds = %81
  %90 = load i8, i8* %40, align 1
  %91 = and i8 %90, -4
  %92 = or i8 %91, 1
  store i8 %92, i8* %40, align 1
  br label %93

93:                                               ; preds = %89, %81
  %94 = getelementptr inbounds i16, i16* %63, i64 6
  %95 = bitcast i16* %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = bitcast i16* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %96, 0
  br i1 %101, label %129, label %102

102:                                              ; preds = %93
  %103 = add i32 %100, %96
  %104 = icmp sgt i32 %103, -1
  br i1 %104, label %106, label %105

105:                                              ; preds = %102
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0)) #17
  unreachable

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = icmp slt i32 %108, %103
  br i1 %109, label %110, label %121

110:                                              ; preds = %106
  %111 = add nuw i32 %103, 4
  %112 = lshr i32 %111, 2
  %113 = add nuw i32 %112, %111
  %114 = icmp sgt i32 %113, -1
  br i1 %114, label %116, label %115

115:                                              ; preds = %110
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #17
  unreachable

116:                                              ; preds = %110
  store i32 %113, i32* %107, align 8
  %117 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %60, i64 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = sext i32 %113 to i64
  %120 = call i8* @_Z16sk_realloc_throwPvm(i8* %118, i64 %119) #15
  store i8* %120, i8** %117, align 8
  br label %121

121:                                              ; preds = %116, %106
  store i32 %103, i32* %99, align 4
  %122 = icmp eq i8* %98, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %60, i64 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = sext i32 %100 to i64
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  %128 = sext i32 %96 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %127, i8* nonnull align 1 %98, i64 %128, i1 false) #15
  br label %129

129:                                              ; preds = %123, %121, %93
  %130 = load i32, i32* %65, align 8
  %131 = load i32, i32* %61, align 8
  %132 = add nsw i32 %131, %130
  store i32 %132, i32* %61, align 8
  %133 = getelementptr inbounds i16, i16* %63, i64 10
  %134 = bitcast i16* %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = icmp sgt i32 %135, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %129
  store i32 %135, i32* %136, align 4
  br label %140

140:                                              ; preds = %139, %129
  %141 = getelementptr inbounds i16, i16* %63, i64 12
  %142 = bitcast i16* %141 to i32*
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = icmp sgt i32 %143, %145
  br i1 %146, label %147, label %148

147:                                              ; preds = %140
  store i32 %143, i32* %144, align 8
  br label %148

148:                                              ; preds = %147, %140, %77, %74, %54
  %149 = phi i32 [ 2, %54 ], [ 2, %74 ], [ 2, %77 ], [ 0, %140 ], [ 0, %147 ]
  %150 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %20, align 8
  %151 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %148
  %153 = load i8*, i8** %21, align 8
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %165, label %156

156:                                              ; preds = %152
  %157 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %158 = load i8*, i8** %21, align 8
  %159 = load i8*, i8** %22, align 8
  %160 = load i64, i64* %23, align 8
  %161 = bitcast %class.SkEventTracer* %157 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %162 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %161, align 8
  %163 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %162, i64 5
  %164 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %163, align 8
  call void %164(%class.SkEventTracer* %157, i8* %158, i8* %159, i64 %160) #15
  br label %165

165:                                              ; preds = %148, %152, %156
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #15
  ret i32 %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrMeshDrawOp12onPrePrepareEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 comdat align 2 {
  %8 = bitcast %class.GrMeshDrawOp* %0 to void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)***
  %9 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)**, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %9, i64 10
  %11 = load void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)*, void (%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView*, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"*, i32, i32)** %10, align 8
  tail call void %11(%class.GrMeshDrawOp* %0, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #15
  ret void
}

declare void @_ZN12GrMeshDrawOp9onPrepareEP14GrOpFlushState(%class.GrMeshDrawOp*, %class.GrOpFlushState*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110FillRectOp9onExecuteEP14GrOpFlushStateRK6SkRect(%"class.(anonymous namespace)::FillRectOp"*, %class.GrOpFlushState*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.183, align 8
  %5 = alloca %class.sk_sp.183, align 8
  %6 = alloca %class.sk_sp.183, align 8
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to %"struct.GrQuadPerEdgeAA::VertexSpec"*
  %9 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %class.sk_sp.183, %class.sk_sp.183* %9, i64 0, i32 0
  %11 = load %class.GrBuffer*, %class.GrBuffer** %10, align 8
  %12 = icmp eq %class.GrBuffer* %11, null
  br i1 %12, label %150, label %13

13:                                               ; preds = %3
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1, i32 0, i32 2
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, 3
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = tail call i32 @_ZN15GrQuadPerEdgeAA21CalcIndexBufferOptionE8GrAATypei(i32 %18, i32 %20) #15
  %22 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = load i8, i8* %15, align 1
  %29 = and i8 %28, 3
  %30 = and i32 %23, 3
  %31 = shl i32 %27, 2
  %32 = and i32 %31, 12
  %33 = shl i32 %21, 4
  %34 = and i32 %33, 48
  %35 = shl i8 %28, 4
  %36 = and i8 %35, 64
  %37 = zext i8 %36 to i32
  %38 = shl i32 %25, 7
  %39 = and i32 %38, 384
  %40 = icmp eq i8 %29, 1
  %41 = zext i1 %40 to i32
  %42 = shl nuw nsw i32 %41, 10
  %43 = lshr i8 %28, 3
  %44 = and i8 %43, 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 11
  %47 = icmp sgt i32 %23, 1
  %48 = and i1 %47, %40
  %49 = zext i1 %48 to i32
  %50 = shl nuw nsw i32 %49, 12
  %51 = or i32 %34, %30
  %52 = or i32 %51, %39
  %53 = or i32 %52, %32
  %54 = or i32 %53, %37
  %55 = or i32 %54, %42
  %56 = or i32 %55, %46
  %57 = or i32 %56, %50
  store i32 %57, i32* %7, align 4
  %58 = trunc i32 %57 to i16
  %59 = and i16 %58, 48
  %60 = icmp eq i16 %59, 32
  br i1 %60, label %65, label %61

61:                                               ; preds = %13
  %62 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 8, i32 0
  %63 = load %class.GrBuffer*, %class.GrBuffer** %62, align 8
  %64 = icmp eq %class.GrBuffer* %63, null
  br i1 %64, label %149, label %65

65:                                               ; preds = %61, %13
  %66 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 4
  %67 = load %class.GrProgramInfo*, %class.GrProgramInfo** %66, align 8
  %68 = icmp eq %class.GrProgramInfo* %67, null
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0
  %71 = icmp eq %class.GrOpFlushState* %1, null
  %72 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 1
  %73 = select i1 %71, %"class.GrMeshDrawOp::Target"* null, %"class.GrMeshDrawOp::Target"* %72
  tail call void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp* %70, %"class.GrMeshDrawOp::Target"* %73) #15
  %74 = load %class.GrProgramInfo*, %class.GrProgramInfo** %66, align 8
  br label %75

75:                                               ; preds = %65, %69
  %76 = phi %class.GrProgramInfo* [ %67, %65 ], [ %74, %69 ]
  %77 = load i32, i32* %19, align 8
  %78 = and i16 %58, 1024
  %79 = icmp eq i16 %78, 0
  %80 = select i1 %79, i32 4, i32 8
  %81 = mul nsw i32 %80, %77
  %82 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 15
  %83 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %82, align 8
  tail call void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass* %83, %class.GrProgramInfo* dereferenceable(128) %76, %struct.SkRect* dereferenceable(16) %2) #15
  %84 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %76, i64 0, i32 5
  %85 = load %class.GrPipeline*, %class.GrPipeline** %84, align 8
  %86 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %85, i64 0, i32 5
  %87 = load i8, i8* %86, align 8
  %88 = and i8 %87, 32
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %75
  %91 = getelementptr inbounds %class.GrOpFlushState, %class.GrOpFlushState* %1, i64 0, i32 10
  %92 = load %"struct.GrOpFlushState::OpArgs"*, %"struct.GrOpFlushState::OpArgs"** %91, align 8
  %93 = getelementptr inbounds %"struct.GrOpFlushState::OpArgs", %"struct.GrOpFlushState::OpArgs"* %92, i64 0, i32 4
  %94 = load %class.GrAppliedClip*, %class.GrAppliedClip** %93, align 8
  %95 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %94, i64 0, i32 0, i32 0, i32 1
  %96 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %82, align 8
  tail call void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass* %96, %struct.SkIRect* dereferenceable(16) %95) #15
  br label %97

97:                                               ; preds = %75, %90
  %98 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 8
  %99 = bitcast %class.sk_sp.183* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %class.sk_sp.183* %9 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %class.sk_sp.183* %9 to <2 x %class.GrBuffer*>*
  store <2 x %class.GrBuffer*> zeroinitializer, <2 x %class.GrBuffer*>* %103, align 8
  %104 = bitcast %class.sk_sp.183* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104)
  %105 = bitcast %class.sk_sp.183* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105)
  %106 = bitcast %class.sk_sp.183* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %82, align 8
  %108 = bitcast %class.sk_sp.183* %4 to i64*
  store i64 %100, i64* %108, align 8
  %109 = bitcast %class.sk_sp.183* %5 to i64*
  store i64 0, i64* %109, align 8
  %110 = bitcast %class.sk_sp.183* %6 to i64*
  store i64 %102, i64* %110, align 8
  call void @_ZN15GrOpsRenderPass11bindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrOpsRenderPass* %107, %class.sk_sp.183* nonnull %4, %class.sk_sp.183* nonnull %5, %class.sk_sp.183* nonnull %6, i1 zeroext false) #15
  %111 = getelementptr inbounds %class.sk_sp.183, %class.sk_sp.183* %6, i64 0, i32 0
  %112 = load %class.GrBuffer*, %class.GrBuffer** %111, align 8
  %113 = icmp eq %class.GrBuffer* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %97
  %115 = bitcast %class.GrBuffer* %112 to void (%class.GrBuffer*)***
  %116 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %116, i64 3
  %118 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %117, align 8
  call void %118(%class.GrBuffer* nonnull %112) #15
  br label %119

119:                                              ; preds = %114, %97
  %120 = getelementptr inbounds %class.sk_sp.183, %class.sk_sp.183* %5, i64 0, i32 0
  %121 = load %class.GrBuffer*, %class.GrBuffer** %120, align 8
  %122 = icmp eq %class.GrBuffer* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %119
  %124 = bitcast %class.GrBuffer* %121 to void (%class.GrBuffer*)***
  %125 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %125, i64 3
  %127 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %126, align 8
  call void %127(%class.GrBuffer* nonnull %121) #15
  br label %128

128:                                              ; preds = %123, %119
  %129 = getelementptr inbounds %class.sk_sp.183, %class.sk_sp.183* %4, i64 0, i32 0
  %130 = load %class.GrBuffer*, %class.GrBuffer** %129, align 8
  %131 = icmp eq %class.GrBuffer* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = bitcast %class.GrBuffer* %130 to void (%class.GrBuffer*)***
  %134 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %133, align 8
  %135 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %134, i64 3
  %136 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %135, align 8
  call void %136(%class.GrBuffer* nonnull %130) #15
  br label %137

137:                                              ; preds = %132, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  %138 = load %class.GrProgramInfo*, %class.GrProgramInfo** %66, align 8
  %139 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %138, i64 0, i32 7
  %140 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %139, align 8
  %141 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %138, i64 0, i32 5
  %142 = load %class.GrPipeline*, %class.GrPipeline** %141, align 8
  %143 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %82, align 8
  call void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass* %143, %class.GrGeometryProcessor* dereferenceable(80) %140, %class.GrSurfaceProxy** null, %class.GrPipeline* dereferenceable(128) %142) #15
  %144 = call dereferenceable(232) %class.GrCaps* @_ZNK14GrOpFlushState4capsEv(%class.GrOpFlushState* %1) #15
  %145 = load %class.GrOpsRenderPass*, %class.GrOpsRenderPass** %82, align 8
  %146 = load i32, i32* %19, align 8
  %147 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 9
  %148 = load i32, i32* %147, align 8
  call void @_ZN15GrQuadPerEdgeAA9IssueDrawERK6GrCapsP15GrOpsRenderPassRKNS_10VertexSpecEiiii(%class.GrCaps* dereferenceable(232) %144, %class.GrOpsRenderPass* %145, %"struct.GrQuadPerEdgeAA::VertexSpec"* nonnull dereferenceable(4) %8, i32 0, i32 %146, i32 %81, i32 %148) #15
  br label %149

149:                                              ; preds = %61, %137
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #15
  br label %150

150:                                              ; preds = %3, %149
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_110FillRectOp18fixedFunctionFlagsEv(%"class.(anonymous namespace)::FillRectOp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelperWithStencil* %2) #15
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_110FillRectOp8finalizeERK6GrCapsPK13GrAppliedClip11GrClampType(%"class.(anonymous namespace)::FillRectOp"*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, i32) unnamed_addr #1 align 2 {
  %5 = alloca %class.GrProcessorAnalysisColor, align 4
  %6 = alloca %struct.SkRGBA4f, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %class.GrProcessorAnalysisColor* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %9) #15
  %10 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 0
  %11 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 1, i32 2
  %14 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 1, i32 3
  %15 = getelementptr inbounds i8, i8* %8, i64 4
  %16 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %5, i64 0, i32 1
  %17 = bitcast %struct.SkRGBA4f* %16 to i8*
  %18 = bitcast float* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 -1, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %15, i64 16, i1 false) #15
  %19 = getelementptr inbounds i8, i8* %8, i64 16
  %20 = bitcast i8* %19 to float*
  %21 = load float, float* %20, align 4
  %22 = fcmp oeq float %21, 1.000000e+00
  %23 = select i1 %22, i32 3, i32 1
  store i32 %23, i32* %10, align 4
  %24 = icmp eq i8* %8, null
  %25 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 0, i32 2
  %26 = bitcast %struct.SkRGBA4f* %6 to i8*
  %27 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %16, i64 0, i32 0
  br label %28

28:                                               ; preds = %100, %4
  %29 = phi i32 [ %23, %4 ], [ %101, %100 ]
  %30 = phi i8* [ %8, %4 ], [ %63, %100 ]
  %31 = icmp eq i8* %30, null
  br i1 %31, label %57, label %32

32:                                               ; preds = %28
  br i1 %24, label %103, label %33

33:                                               ; preds = %32
  %34 = load i32, i32* %25, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %8, i64 %35
  %37 = icmp ult i8* %30, %36
  br i1 %37, label %38, label %61

38:                                               ; preds = %33
  %39 = load i8, i8* %30, align 4
  %40 = and i8 %39, 16
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %38
  %43 = and i8 %39, 12
  %44 = and i8 %39, 3
  %45 = icmp eq i8 %44, 3
  %46 = select i1 %45, i64 72, i64 56
  %47 = icmp eq i8 %43, 12
  %48 = select i1 %47, i64 48, i64 32
  %49 = add nuw nsw i64 %48, %46
  br label %54

50:                                               ; preds = %38
  %51 = and i8 %39, 3
  %52 = icmp eq i8 %51, 3
  %53 = select i1 %52, i64 72, i64 56
  br label %54

54:                                               ; preds = %50, %42
  %55 = phi i64 [ %49, %42 ], [ %53, %50 ]
  %56 = getelementptr inbounds i8, i8* %30, i64 %55
  br label %61

57:                                               ; preds = %28
  br i1 %24, label %103, label %58

58:                                               ; preds = %57
  %59 = load i32, i32* %25, align 4
  %60 = sext i32 %59 to i64
  br label %61

61:                                               ; preds = %58, %33, %54
  %62 = phi i64 [ %60, %58 ], [ %35, %33 ], [ %35, %54 ]
  %63 = phi i8* [ %8, %58 ], [ %30, %33 ], [ %56, %54 ]
  %64 = getelementptr inbounds i8, i8* %8, i64 %62
  %65 = icmp ult i8* %63, %64
  br i1 %65, label %66, label %103

66:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26)
  %67 = getelementptr inbounds i8, i8* %63, i64 4
  %68 = bitcast i8* %67 to float*
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds i8, i8* %63, i64 8
  %71 = bitcast i8* %70 to float*
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds i8, i8* %63, i64 12
  %74 = bitcast i8* %73 to float*
  %75 = load float, float* %74, align 4
  %76 = getelementptr inbounds i8, i8* %63, i64 16
  %77 = bitcast i8* %76 to float*
  %78 = load float, float* %77, align 4
  %79 = fcmp oeq float %78, 1.000000e+00
  %80 = select i1 %79, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false), !alias.scope !4
  %81 = and i32 %80, %29
  %82 = and i32 %29, 1
  %83 = icmp ne i32 %82, 0
  %84 = load float, float* %14, align 4
  %85 = fcmp oeq float %84, %78
  %86 = and i1 %83, %85
  br i1 %86, label %87, label %97

87:                                               ; preds = %66
  %88 = load float, float* %27, align 4, !noalias !4
  %89 = fcmp oeq float %88, %69
  %90 = load float, float* %12, align 4
  %91 = fcmp oeq float %90, %72
  %92 = and i1 %89, %91
  %93 = load float, float* %13, align 4
  %94 = fcmp oeq float %93, %75
  %95 = and i1 %92, %94
  br i1 %95, label %96, label %97

96:                                               ; preds = %87
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 4 %17, i64 16, i1 false)
  br label %100

97:                                               ; preds = %66, %87
  %98 = icmp eq i32 %81, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %97
  store i32 0, i32* %10, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* nonnull align 8 %26, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26)
  br label %103

100:                                              ; preds = %97, %96
  %101 = phi i32 [ %29, %96 ], [ 2, %97 ]
  store i32 %101, i32* %10, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* nonnull align 8 %26, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26)
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %28

103:                                              ; preds = %32, %57, %100, %61, %99
  %104 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1
  %105 = bitcast %class.GrSimpleMeshDrawOpHelperWithStencil* %104 to %class.GrSimpleMeshDrawOpHelper*
  %106 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1, i32 0, i32 2
  %107 = load i8, i8* %106, align 1
  %108 = and i8 %107, 3
  %109 = icmp eq i8 %108, 1
  %110 = zext i1 %109 to i32
  %111 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1, i32 1
  %112 = load %struct.GrUserStencilSettings*, %struct.GrUserStencilSettings** %111, align 8
  %113 = call i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClipPK21GrUserStencilSettings11GrClampType27GrProcessorAnalysisCoverageP24GrProcessorAnalysisColor(%class.GrSimpleMeshDrawOpHelper* %105, %class.GrCaps* dereferenceable(232) %1, %class.GrAppliedClip* %2, %struct.GrUserStencilSettings* %112, i32 %3, i32 %110, %class.GrProcessorAnalysisColor* nonnull %5) #15
  %114 = load i32, i32* %10, align 4
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %168, label %117

117:                                              ; preds = %103
  %118 = bitcast %struct.SkRGBA4f* %16 to <2 x float>*
  %119 = load <2 x float>, <2 x float>* %118, align 4
  %120 = bitcast float* %13 to <2 x float>*
  %121 = load <2 x float>, <2 x float>* %120, align 4
  %122 = call i32 @_ZN15GrQuadPerEdgeAA12MinColorTypeE8SkRGBA4fIL11SkAlphaType2EE(<2 x float> %119, <2 x float> %121) #15
  %123 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 5
  store i32 %122, i32* %123, align 8
  br label %124

124:                                              ; preds = %163, %117
  %125 = phi i8* [ null, %117 ], [ %160, %163 ]
  %126 = icmp eq i8* %125, null
  %127 = load i8*, i8** %7, align 8
  %128 = icmp eq i8* %127, null
  br i1 %126, label %154, label %129

129:                                              ; preds = %124
  br i1 %128, label %221, label %130

130:                                              ; preds = %129
  %131 = load i32, i32* %25, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %127, i64 %132
  %134 = icmp ult i8* %125, %133
  br i1 %134, label %135, label %158

135:                                              ; preds = %130
  %136 = load i8, i8* %125, align 4
  %137 = and i8 %136, 16
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %135
  %140 = and i8 %136, 12
  %141 = and i8 %136, 3
  %142 = icmp eq i8 %141, 3
  %143 = select i1 %142, i64 72, i64 56
  %144 = icmp eq i8 %140, 12
  %145 = select i1 %144, i64 48, i64 32
  %146 = add nuw nsw i64 %145, %143
  br label %151

147:                                              ; preds = %135
  %148 = and i8 %136, 3
  %149 = icmp eq i8 %148, 3
  %150 = select i1 %149, i64 72, i64 56
  br label %151

151:                                              ; preds = %147, %139
  %152 = phi i64 [ %146, %139 ], [ %150, %147 ]
  %153 = getelementptr inbounds i8, i8* %125, i64 %152
  br label %158

154:                                              ; preds = %124
  br i1 %128, label %221, label %155

155:                                              ; preds = %154
  %156 = load i32, i32* %25, align 4
  %157 = sext i32 %156 to i64
  br label %158

158:                                              ; preds = %155, %130, %151
  %159 = phi i64 [ %157, %155 ], [ %132, %130 ], [ %132, %151 ]
  %160 = phi i8* [ %127, %155 ], [ %125, %130 ], [ %153, %151 ]
  %161 = getelementptr inbounds i8, i8* %127, i64 %159
  %162 = icmp ult i8* %160, %161
  br i1 %162, label %163, label %221

163:                                              ; preds = %158
  %164 = getelementptr inbounds i8, i8* %160, i64 4
  %165 = bitcast i8* %164 to <2 x float>*
  store <2 x float> %119, <2 x float>* %165, align 4
  %166 = getelementptr inbounds i8, i8* %160, i64 12
  %167 = bitcast i8* %166 to <2 x float>*
  store <2 x float> %121, <2 x float>* %167, align 4
  br label %124

168:                                              ; preds = %103
  %169 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 5
  br label %170

170:                                              ; preds = %210, %168
  %171 = phi i32 [ 0, %168 ], [ %220, %210 ]
  %172 = phi i8* [ null, %168 ], [ %207, %210 ]
  store i32 %171, i32* %169, align 8
  %173 = icmp eq i8* %172, null
  %174 = load i8*, i8** %7, align 8
  %175 = icmp eq i8* %174, null
  br i1 %173, label %201, label %176

176:                                              ; preds = %170
  br i1 %175, label %223, label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %25, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %174, i64 %179
  %181 = icmp ult i8* %172, %180
  br i1 %181, label %182, label %205

182:                                              ; preds = %177
  %183 = load i8, i8* %172, align 4
  %184 = and i8 %183, 16
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %194, label %186

186:                                              ; preds = %182
  %187 = and i8 %183, 12
  %188 = and i8 %183, 3
  %189 = icmp eq i8 %188, 3
  %190 = select i1 %189, i64 72, i64 56
  %191 = icmp eq i8 %187, 12
  %192 = select i1 %191, i64 48, i64 32
  %193 = add nuw nsw i64 %192, %190
  br label %198

194:                                              ; preds = %182
  %195 = and i8 %183, 3
  %196 = icmp eq i8 %195, 3
  %197 = select i1 %196, i64 72, i64 56
  br label %198

198:                                              ; preds = %194, %186
  %199 = phi i64 [ %193, %186 ], [ %197, %194 ]
  %200 = getelementptr inbounds i8, i8* %172, i64 %199
  br label %205

201:                                              ; preds = %170
  br i1 %175, label %223, label %202

202:                                              ; preds = %201
  %203 = load i32, i32* %25, align 4
  %204 = sext i32 %203 to i64
  br label %205

205:                                              ; preds = %202, %177, %198
  %206 = phi i64 [ %204, %202 ], [ %179, %177 ], [ %179, %198 ]
  %207 = phi i8* [ %174, %202 ], [ %172, %177 ], [ %200, %198 ]
  %208 = getelementptr inbounds i8, i8* %174, i64 %206
  %209 = icmp ult i8* %207, %208
  br i1 %209, label %210, label %223

210:                                              ; preds = %205
  %211 = getelementptr inbounds i8, i8* %207, i64 4
  %212 = bitcast i8* %211 to <2 x float>*
  %213 = load <2 x float>, <2 x float>* %212, align 4
  %214 = getelementptr inbounds i8, i8* %207, i64 12
  %215 = bitcast i8* %214 to <2 x float>*
  %216 = load <2 x float>, <2 x float>* %215, align 4
  %217 = call i32 @_ZN15GrQuadPerEdgeAA12MinColorTypeE8SkRGBA4fIL11SkAlphaType2EE(<2 x float> %213, <2 x float> %216) #15
  %218 = load i32, i32* %169, align 4
  %219 = icmp slt i32 %218, %217
  %220 = select i1 %219, i32 %217, i32 %218
  br label %170

221:                                              ; preds = %158, %154, %129
  %222 = load i32, i32* %123, align 8
  br label %223

223:                                              ; preds = %176, %201, %205, %221
  %224 = phi i32 [ %222, %221 ], [ %171, %205 ], [ %171, %201 ], [ %171, %176 ]
  %225 = and i32 %113, 16
  %226 = or i32 %224, %225
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %230

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 5
  store i32 1, i32* %229, align 8
  br label %230

230:                                              ; preds = %223, %228
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %9) #15
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110FillRectOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::FillRectOp"*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %8 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %9 = alloca i32, align 4
  %10 = bitcast i32* %9 to %"struct.GrQuadPerEdgeAA::VertexSpec"*
  %11 = load atomic i64, i64* @_ZZN12_GLOBAL__N_110FillRectOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOpE28trace_event_unique_atomic225.0.0 monotonic, align 8
  %12 = inttoptr i64 %11 to i8*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %7
  %15 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %16 = bitcast %class.SkEventTracer* %15 to i8* (%class.SkEventTracer*, i8*)***
  %17 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %16, align 8
  %18 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %17, i64 2
  %19 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %18, align 8
  %20 = tail call i8* %19(%class.SkEventTracer* %15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0)) #15
  %21 = ptrtoint i8* %20 to i64
  store atomic i64 %21, i64* @_ZZN12_GLOBAL__N_110FillRectOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOpE28trace_event_unique_atomic225.0.0 monotonic, align 8
  br label %22

22:                                               ; preds = %7, %14
  %23 = phi i8* [ %12, %7 ], [ %20, %14 ]
  %24 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 0
  %26 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %29 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1
  %30 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %25, align 8
  %31 = load i8, i8* %23, align 1
  %32 = and i8 %31, 5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %22
  %35 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %36 = bitcast %class.SkEventTracer* %35 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %37 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %36, align 8
  %38 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %37, i64 4
  %39 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %38, align 8
  %40 = tail call i64 %39(%class.SkEventTracer* %35, i8 signext 88, i8* %23, i8* getelementptr inbounds ([202 x i8], [202 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_110FillRectOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %41 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %8, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %41, i64 0, i32 0
  store i8* %23, i8** %42, align 8
  store i8* getelementptr inbounds ([202 x i8], [202 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_110FillRectOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp, i64 0, i64 0), i8** %27, align 8
  store i64 %40, i64* %28, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %41, %"struct.skia::tracing_internals::ScopedTracer::Data"** %25, align 8
  br label %43

43:                                               ; preds = %22, %34
  %44 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 0
  call void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp* %44, %class.GrRecordingContext* %1, %class.GrSurfaceProxyView* dereferenceable(16) %2, %class.GrAppliedClip* %3, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %4, i32 %5, i32 %6) #15
  %45 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 3
  %46 = call { %class.SkArenaAlloc*, %class.GrSubRunAllocator* } @_ZN18GrRecordingContext11OwnedArenas3getEv(%"class.GrRecordingContext::OwnedArenas"* %45) #15
  %47 = extractvalue { %class.SkArenaAlloc*, %class.GrSubRunAllocator* } %46, 0
  %48 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #15
  %49 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1, i32 0, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = and i8 %50, 3
  %52 = zext i8 %51 to i32
  %53 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = call i32 @_ZN15GrQuadPerEdgeAA21CalcIndexBufferOptionE8GrAATypei(i32 %52, i32 %54) #15
  %56 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 5
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = load i8, i8* %49, align 1
  %63 = and i8 %62, 3
  %64 = and i32 %57, 3
  %65 = shl i32 %61, 2
  %66 = and i32 %65, 12
  %67 = shl i32 %55, 4
  %68 = and i32 %67, 48
  %69 = shl i8 %62, 4
  %70 = and i8 %69, 64
  %71 = zext i8 %70 to i32
  %72 = shl i32 %59, 7
  %73 = and i32 %72, 384
  %74 = icmp eq i8 %63, 1
  %75 = zext i1 %74 to i32
  %76 = shl nuw nsw i32 %75, 10
  %77 = lshr i8 %62, 3
  %78 = and i8 %77, 1
  %79 = zext i8 %78 to i32
  %80 = shl nuw nsw i32 %79, 11
  %81 = icmp sgt i32 %57, 1
  %82 = and i1 %81, %74
  %83 = zext i1 %82 to i32
  %84 = shl nuw nsw i32 %83, 12
  %85 = or i32 %68, %64
  %86 = or i32 %85, %73
  %87 = or i32 %86, %66
  %88 = or i32 %87, %71
  %89 = or i32 %88, %76
  %90 = or i32 %89, %80
  %91 = or i32 %90, %84
  store i32 %91, i32* %9, align 4
  %92 = load i32, i32* %53, align 8
  %93 = select i1 %74, i32 8, i32 4
  %94 = mul nsw i32 %93, %92
  %95 = call i64 @_ZNK15GrQuadPerEdgeAA10VertexSpec10vertexSizeEv(%"struct.GrQuadPerEdgeAA::VertexSpec"* nonnull %10) #15
  %96 = sext i32 %94 to i64
  %97 = mul i64 %95, %96
  %98 = icmp ult i64 %97, 4294967296
  br i1 %98, label %100, label %99

99:                                               ; preds = %43
  call void @abort() #17
  unreachable

100:                                              ; preds = %43
  %101 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %47, i64 0, i32 1
  %102 = bitcast i8** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = and i64 %97, 4294967292
  %105 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %47, i64 0, i32 2
  %106 = bitcast i8** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %107, %103
  %109 = icmp ugt i64 %104, %108
  br i1 %109, label %110, label %113

110:                                              ; preds = %100
  %111 = trunc i64 %97 to i32
  call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %47, i32 %111, i32 1) #15
  %112 = load i64, i64* %102, align 8
  br label %113

113:                                              ; preds = %100, %110
  %114 = phi i64 [ %112, %110 ], [ %103, %100 ]
  %115 = inttoptr i64 %114 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 %104
  store i8* %116, i8** %101, align 8
  %117 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 3
  store i8* %115, i8** %117, align 8
  call fastcc void @_ZNK12_GLOBAL__N_110FillRectOp10tessellateERKN15GrQuadPerEdgeAA10VertexSpecEPc(%"class.(anonymous namespace)::FillRectOp"* %0, %"struct.GrQuadPerEdgeAA::VertexSpec"* nonnull dereferenceable(4) %10, i8* %115)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #15
  %118 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %25, align 8
  %119 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %113
  %121 = load i8*, i8** %26, align 8
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %133, label %124

124:                                              ; preds = %120
  %125 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %126 = load i8*, i8** %26, align 8
  %127 = load i8*, i8** %27, align 8
  %128 = load i64, i64* %28, align 8
  %129 = bitcast %class.SkEventTracer* %125 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %130 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %129, align 8
  %131 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %130, i64 5
  %132 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %131, align 8
  call void %132(%class.SkEventTracer* %125, i8* %126, i8* %127, i64 %128) #15
  br label %133

133:                                              ; preds = %113, %120, %124
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %class.GrProgramInfo* @_ZN12_GLOBAL__N_110FillRectOp11programInfoEv(%"class.(anonymous namespace)::FillRectOp"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 4
  %3 = load %class.GrProgramInfo*, %class.GrProgramInfo** %2, align 8
  ret %class.GrProgramInfo* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110FillRectOp19onCreateProgramInfoEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%"class.(anonymous namespace)::FillRectOp"*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %9 = alloca i32, align 4
  %10 = bitcast i32* %9 to %"struct.GrQuadPerEdgeAA::VertexSpec"*
  %11 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #15
  %12 = bitcast i32* %9 to i16*
  %13 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1, i32 0, i32 2
  %14 = load i8, i8* %13, align 1
  %15 = and i8 %14, 3
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = tail call i32 @_ZN15GrQuadPerEdgeAA21CalcIndexBufferOptionE8GrAATypei(i32 %16, i32 %18) #15
  %20 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = load i8, i8* %13, align 1
  %27 = and i8 %26, 3
  %28 = and i32 %21, 3
  %29 = shl i32 %25, 2
  %30 = and i32 %29, 12
  %31 = shl i32 %19, 4
  %32 = and i32 %31, 48
  %33 = shl i8 %26, 4
  %34 = and i8 %33, 64
  %35 = zext i8 %34 to i32
  %36 = shl i32 %23, 7
  %37 = and i32 %36, 384
  %38 = icmp eq i8 %27, 1
  %39 = zext i1 %38 to i32
  %40 = shl nuw nsw i32 %39, 10
  %41 = lshr i8 %26, 3
  %42 = and i8 %41, 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw nsw i32 %43, 11
  %45 = icmp sgt i32 %21, 1
  %46 = and i1 %45, %38
  %47 = zext i1 %46 to i32
  %48 = shl nuw nsw i32 %47, 12
  %49 = or i32 %32, %28
  %50 = or i32 %49, %37
  %51 = or i32 %50, %30
  %52 = or i32 %51, %35
  %53 = or i32 %52, %40
  %54 = or i32 %53, %44
  %55 = or i32 %54, %48
  store i32 %55, i32* %9, align 4
  %56 = call %class.GrGeometryProcessor* @_ZN15GrQuadPerEdgeAA13MakeProcessorEP12SkArenaAllocRKNS_10VertexSpecE(%class.SkArenaAlloc* %2, %"struct.GrQuadPerEdgeAA::VertexSpec"* nonnull dereferenceable(4) %10) #15
  %57 = load i16, i16* %12, align 4
  %58 = lshr i16 %57, 4
  %59 = and i16 %58, 3
  %60 = icmp eq i16 %59, 3
  br i1 %60, label %61, label %62

61:                                               ; preds = %8
  call void @llvm.trap() #15
  unreachable

62:                                               ; preds = %8
  %63 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1
  %64 = shl nuw nsw i16 %59, 3
  %65 = zext i16 %64 to i24
  %66 = lshr i24 65536, %65
  %67 = trunc i24 %66 to i8
  %68 = call %class.GrProgramInfo* @_ZN35GrSimpleMeshDrawOpHelperWithStencil28createProgramInfoWithStencilEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelperWithStencil* %63, %class.GrCaps* %1, %class.SkArenaAlloc* %2, %class.GrSurfaceProxyView* dereferenceable(16) %3, %class.GrAppliedClip* dereferenceable(72) %4, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32) %5, %class.GrGeometryProcessor* %56, i8 zeroext %67, i32 %6, i32 %7) #15
  %69 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 4
  store %class.GrProgramInfo* %68, %class.GrProgramInfo** %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110FillRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE(%"class.(anonymous namespace)::FillRectOp"*, %"class.GrMeshDrawOp::Target"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to %"struct.GrQuadPerEdgeAA::VertexSpec"*
  %6 = alloca %class.sk_sp.183, align 8
  %7 = load atomic i64, i64* @_ZZN12_GLOBAL__N_110FillRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE28trace_event_unique_atomic260.0.0 monotonic, align 8
  %8 = inttoptr i64 %7 to i8*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %2
  %11 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %12 = bitcast %class.SkEventTracer* %11 to i8* (%class.SkEventTracer*, i8*)***
  %13 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %13, i64 2
  %15 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %14, align 8
  %16 = tail call i8* %15(%class.SkEventTracer* %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0)) #15
  %17 = ptrtoint i8* %16 to i64
  store atomic i64 %17, i64* @_ZZN12_GLOBAL__N_110FillRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetEE28trace_event_unique_atomic260.0.0 monotonic, align 8
  br label %18

18:                                               ; preds = %2, %10
  %19 = phi i8* [ %8, %2 ], [ %16, %10 ]
  %20 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #15
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 0
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 1
  %24 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 2
  %25 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %26 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %27 = load i8, i8* %19, align 1
  %28 = and i8 %27, 5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %18
  %31 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %32 = bitcast %class.SkEventTracer* %31 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %33 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %32, align 8
  %34 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %33, i64 4
  %35 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %34, align 8
  %36 = tail call i64 %35(%class.SkEventTracer* %31, i8 signext 88, i8* %19, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_110FillRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #15
  %37 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, i64 0, i32 0
  store i8* %19, i8** %38, align 8
  store i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN12_GLOBAL__N_110FillRectOp14onPrepareDrawsEPN12GrMeshDrawOp6TargetE, i64 0, i64 0), i8** %23, align 8
  store i64 %36, i64* %24, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %37, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  br label %39

39:                                               ; preds = %18, %30
  %40 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #15
  %41 = bitcast i32* %4 to i16*
  %42 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 1, i32 0, i32 2
  %43 = load i8, i8* %42, align 1
  %44 = and i8 %43, 3
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = call i32 @_ZN15GrQuadPerEdgeAA21CalcIndexBufferOptionE8GrAATypei(i32 %45, i32 %47) #15
  %49 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 5
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = load i8, i8* %42, align 1
  %56 = and i8 %55, 3
  %57 = and i32 %50, 3
  %58 = shl i32 %54, 2
  %59 = and i32 %58, 12
  %60 = shl i32 %48, 4
  %61 = and i32 %60, 48
  %62 = shl i8 %55, 4
  %63 = and i8 %62, 64
  %64 = zext i8 %63 to i32
  %65 = shl i32 %52, 7
  %66 = and i32 %65, 384
  %67 = icmp eq i8 %56, 1
  %68 = zext i1 %67 to i32
  %69 = shl nuw nsw i32 %68, 10
  %70 = lshr i8 %55, 3
  %71 = and i8 %70, 1
  %72 = zext i8 %71 to i32
  %73 = shl nuw nsw i32 %72, 11
  %74 = icmp sgt i32 %50, 1
  %75 = and i1 %74, %67
  %76 = zext i1 %75 to i32
  %77 = shl nuw nsw i32 %76, 12
  %78 = or i32 %61, %57
  %79 = or i32 %78, %66
  %80 = or i32 %79, %59
  %81 = or i32 %80, %64
  %82 = or i32 %81, %69
  %83 = or i32 %82, %73
  %84 = or i32 %83, %77
  store i32 %84, i32* %4, align 4
  %85 = load i32, i32* %46, align 8
  %86 = select i1 %67, i32 8, i32 4
  %87 = mul nsw i32 %86, %85
  %88 = call i64 @_ZNK15GrQuadPerEdgeAA10VertexSpec10vertexSizeEv(%"struct.GrQuadPerEdgeAA::VertexSpec"* nonnull %5) #15
  %89 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 7
  %90 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 9
  %91 = bitcast %"class.GrMeshDrawOp::Target"* %1 to i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.183*, i32*)***
  %92 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.183*, i32*)**, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.183*, i32*)*** %91, align 8
  %93 = getelementptr inbounds i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.183*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.183*, i32*)** %92, i64 3
  %94 = load i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.183*, i32*)*, i8* (%"class.GrMeshDrawOp::Target"*, i64, i32, %class.sk_sp.183*, i32*)** %93, align 8
  %95 = call i8* %94(%"class.GrMeshDrawOp::Target"* %1, i64 %88, i32 %87, %class.sk_sp.183* %89, i32* %90) #15
  %96 = icmp eq i8* %95, null
  br i1 %96, label %97, label %98

97:                                               ; preds = %39
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9, i64 0, i64 0), i32 274, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0)) #15
  br label %145

98:                                               ; preds = %39
  %99 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 3
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i8* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = call i64 @_ZNK15GrQuadPerEdgeAA10VertexSpec10vertexSizeEv(%"struct.GrQuadPerEdgeAA::VertexSpec"* nonnull %5) #15
  %104 = sext i32 %87 to i64
  %105 = mul i64 %103, %104
  %106 = load i8*, i8** %99, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %95, i8* align 1 %106, i64 %105, i1 false)
  br label %108

107:                                              ; preds = %98
  call fastcc void @_ZNK12_GLOBAL__N_110FillRectOp10tessellateERKN15GrQuadPerEdgeAA10VertexSpecEPc(%"class.(anonymous namespace)::FillRectOp"* %0, %"struct.GrQuadPerEdgeAA::VertexSpec"* nonnull dereferenceable(4) %5, i8* nonnull %95)
  br label %108

108:                                              ; preds = %107, %102
  %109 = load i16, i16* %41, align 4
  %110 = and i16 %109, 48
  %111 = icmp eq i16 %110, 32
  br i1 %111, label %145, label %112

112:                                              ; preds = %108
  %113 = bitcast %class.sk_sp.183* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #15
  %114 = lshr i16 %109, 4
  %115 = and i16 %114, 3
  %116 = zext i16 %115 to i32
  call void @_ZN15GrQuadPerEdgeAA14GetIndexBufferEPN12GrMeshDrawOp6TargetENS_17IndexBufferOptionE(%class.sk_sp.183* nonnull sret %6, %"class.GrMeshDrawOp::Target"* %1, i32 %116) #15
  %117 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 8
  %118 = getelementptr inbounds %class.sk_sp.183, %class.sk_sp.183* %6, i64 0, i32 0
  %119 = bitcast %class.sk_sp.183* %6 to i64*
  %120 = load i64, i64* %119, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %118, align 8
  %121 = getelementptr inbounds %class.sk_sp.183, %class.sk_sp.183* %117, i64 0, i32 0
  %122 = load %class.GrBuffer*, %class.GrBuffer** %121, align 8
  %123 = bitcast %class.sk_sp.183* %117 to i64*
  store i64 %120, i64* %123, align 8
  %124 = icmp eq %class.GrBuffer* %122, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %112
  %126 = inttoptr i64 %120 to %class.GrBuffer*
  br label %141

127:                                              ; preds = %112
  %128 = bitcast %class.GrBuffer* %122 to void (%class.GrBuffer*)***
  %129 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %128, align 8
  %130 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %129, i64 3
  %131 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %130, align 8
  call void %131(%class.GrBuffer* nonnull %122) #15
  %132 = load %class.GrBuffer*, %class.GrBuffer** %118, align 8
  %133 = icmp eq %class.GrBuffer* %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %127
  %135 = bitcast %class.GrBuffer* %132 to void (%class.GrBuffer*)***
  %136 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %135, align 8
  %137 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %136, i64 3
  %138 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %137, align 8
  call void %138(%class.GrBuffer* nonnull %132) #15
  br label %139

139:                                              ; preds = %134, %127
  %140 = load %class.GrBuffer*, %class.GrBuffer** %121, align 8
  br label %141

141:                                              ; preds = %139, %125
  %142 = phi %class.GrBuffer* [ %140, %139 ], [ %126, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #15
  %143 = icmp eq %class.GrBuffer* %142, null
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9, i64 0, i64 0), i32 289, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0)) #15
  br label %145

145:                                              ; preds = %141, %108, %144, %97
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #15
  %146 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %21, align 8
  %147 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = load i8*, i8** %22, align 8
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %161, label %152

152:                                              ; preds = %148
  %153 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #15
  %154 = load i8*, i8** %22, align 8
  %155 = load i8*, i8** %23, align 8
  %156 = load i64, i64* %24, align 8
  %157 = bitcast %class.SkEventTracer* %153 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %158 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %157, align 8
  %159 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %158, i64 5
  %160 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %159, align 8
  call void %160(%class.SkEventTracer* %153, i8* %154, i8* %155, i64 %156) #15
  br label %161

161:                                              ; preds = %145, %148, %152
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #15
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #9

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK6GrQuad15projectedBoundsEv(%class.GrQuad*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN24GrSimpleMeshDrawOpHelperD2Ev(%class.GrSimpleMeshDrawOpHelper*) unnamed_addr #10

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD2Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV4GrOp, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOp, %class.GrOp* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.GrOp*, %class.GrOp** %3, align 8
  store %class.GrOp* null, %class.GrOp** %3, align 8
  %5 = icmp eq %class.GrOp* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrOp* %4 to void (%class.GrOp*)***
  %8 = load void (%class.GrOp*)**, void (%class.GrOp*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrOp*)*, void (%class.GrOp*)** %8, i64 1
  %10 = load void (%class.GrOp*)*, void (%class.GrOp*)** %9, align 8
  tail call void %10(%class.GrOp* nonnull %4) #15
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4GrOpD0Ev(%class.GrOp*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4GrOp12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrOp*, %"class.std::__1::function.240"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4GrOp19onCombineIfPossibleEPS_P12SkArenaAllocRK6GrCaps(%class.GrOp*, %class.GrOp*, %class.SkArenaAlloc*, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZNK10GrPipeline12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrPipeline*, %"class.std::__1::function.240"*) local_unnamed_addr #3

declare void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet*, %"class.std::__1::function.240"*) local_unnamed_addr #3

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil12isCompatibleERKS_RK6GrCapsRK6SkRectS7_b(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrSimpleMeshDrawOpHelperWithStencil* dereferenceable(24), %class.GrCaps* dereferenceable(232), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #3

declare i32 @_ZN18GrResourceProvider13MaxNumAAQuadsEv() local_unnamed_addr #3

declare i32 @_ZN18GrResourceProvider16MaxNumNonAAQuadsEv() local_unnamed_addr #3

declare void @_ZN12GrMeshDrawOp17createProgramInfoEPNS_6TargetE(%class.GrMeshDrawOp*, %"class.GrMeshDrawOp::Target"*) local_unnamed_addr #3

declare void @_ZN15GrQuadPerEdgeAA9IssueDrawERK6GrCapsP15GrOpsRenderPassRKNS_10VertexSpecEiiii(%class.GrCaps* dereferenceable(232), %class.GrOpsRenderPass*, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4), i32, i32, i32, i32) local_unnamed_addr #3

declare dereferenceable(232) %class.GrCaps* @_ZNK14GrOpFlushState4capsEv(%class.GrOpFlushState*) unnamed_addr #3

declare i32 @_ZN15GrQuadPerEdgeAA21CalcIndexBufferOptionE8GrAATypei(i32, i32) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass12bindPipelineERK13GrProgramInfoRK6SkRect(%class.GrOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass14setScissorRectERK7SkIRect(%class.GrOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass11bindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrOpsRenderPass*, %class.sk_sp.183*, %class.sk_sp.183*, %class.sk_sp.183*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN15GrOpsRenderPass12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrOpsRenderPass*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #3

declare i32 @_ZNK35GrSimpleMeshDrawOpHelperWithStencil18fixedFunctionFlagsEv(%class.GrSimpleMeshDrawOpHelperWithStencil*) local_unnamed_addr #3

declare i32 @_ZN15GrQuadPerEdgeAA12MinColorTypeE8SkRGBA4fIL11SkAlphaType2EE(<2 x float>, <2 x float>) local_unnamed_addr #3

declare i32 @_ZN24GrSimpleMeshDrawOpHelper18finalizeProcessorsERK6GrCapsPK13GrAppliedClipPK21GrUserStencilSettings11GrClampType27GrProcessorAnalysisCoverageP24GrProcessorAnalysisColor(%class.GrSimpleMeshDrawOpHelper*, %class.GrCaps* dereferenceable(232), %class.GrAppliedClip*, %struct.GrUserStencilSettings*, i32, i32, %class.GrProcessorAnalysisColor*) local_unnamed_addr #3

declare void @_ZN12GrMeshDrawOp17onPrePrepareDrawsEP18GrRecordingContextRK18GrSurfaceProxyViewP13GrAppliedClipRKN15GrXferProcessor12DstProxyViewE18GrXferBarrierFlags8GrLoadOp(%class.GrMeshDrawOp*, %class.GrRecordingContext*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), i32, i32) unnamed_addr #3

declare i64 @_ZNK15GrQuadPerEdgeAA10VertexSpec10vertexSizeEv(%"struct.GrQuadPerEdgeAA::VertexSpec"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK12_GLOBAL__N_110FillRectOp10tessellateERKN15GrQuadPerEdgeAA10VertexSpecEPc(%"class.(anonymous namespace)::FillRectOp"*, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4), i8*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.GrQuadPerEdgeAA::Tessellator", align 16
  %5 = alloca %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter", align 8
  %6 = alloca %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", align 4
  %7 = bitcast %"class.GrQuadPerEdgeAA::Tessellator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 368, i8* nonnull %7) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %7, i8* align 16 bitcast ({ %"class.GrQuadUtils::TessellationHelper", %"struct.GrQuadPerEdgeAA::VertexSpec", [4 x i8], %struct.GrVertexWriter, void (%struct.GrVertexWriter*, %"struct.GrQuadPerEdgeAA::VertexSpec"*, %class.GrQuad*, %class.GrQuad*, float*, %struct.SkRGBA4f*, %struct.SkRect*, %struct.SkRect*)*, [8 x i8] }* @__const._ZNK12_GLOBAL__N_110FillRectOp10tessellateERKN15GrQuadPerEdgeAA10VertexSpecEPc.tessellator to i8*), i64 368, i1 false)
  call void @_ZN15GrQuadPerEdgeAA11TessellatorC1ERKNS_10VertexSpecEPc(%"class.GrQuadPerEdgeAA::Tessellator"* nonnull %4, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4) %1, i8* %2) #15
  %8 = bitcast %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.(anonymous namespace)::FillRectOp", %"class.(anonymous namespace)::FillRectOp"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter"* %5, i64 0, i32 0, i32 2, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 32, i1 false) #15, !alias.scope !7
  %11 = bitcast float* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %11, align 8, !alias.scope !7
  %12 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter"* %5, i64 0, i32 0, i32 3
  %13 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter"* %5, i64 0, i32 1, i32 2, i64 0
  %14 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 36, i1 false) #15, !alias.scope !7
  %15 = bitcast float* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %15, align 4, !alias.scope !7
  %16 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter"* %5, i64 0, i32 1, i32 3
  store i32 0, i32* %16, align 4, !alias.scope !7
  %17 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter"* %5, i64 0, i32 2
  store %class.GrQuadBuffer* %9, %class.GrQuadBuffer** %17, align 8, !alias.scope !7
  %18 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter"* %5, i64 0, i32 3
  store i8* null, i8** %18, align 8, !alias.scope !7
  %19 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter"* %5, i64 0, i32 4
  %20 = bitcast %class.GrQuadBuffer* %9 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !7
  %22 = bitcast i8** %19 to i64*
  store i64 %21, i64* %22, align 8, !alias.scope !7
  %23 = inttoptr i64 %21 to i8*
  %24 = icmp eq i64 %21, 0
  br i1 %24, label %93, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter"* %5, i64 0, i32 1
  %27 = bitcast %class.GrQuad* %26 to i8*
  %28 = bitcast i8** %19 to float**
  %29 = bitcast %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %6 to i8*
  %30 = getelementptr inbounds %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %6, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.(anonymous namespace)::FillRectOp::ColorAndAA", %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter", %"class.GrQuadBuffer<(anonymous namespace)::FillRectOp::ColorAndAA>::Iter"* %5, i64 0, i32 0
  %33 = bitcast %"struct.(anonymous namespace)::FillRectOp::ColorAndAA"* %6 to i8*
  %34 = bitcast float* %10 to <4 x float>*
  %35 = bitcast float* %13 to <4 x float>*
  br label %36

36:                                               ; preds = %25, %80
  %37 = phi i8* [ %23, %25 ], [ %91, %80 ]
  %38 = phi %class.GrQuadBuffer* [ %9, %25 ], [ %89, %80 ]
  %39 = phi i8* [ %23, %25 ], [ %88, %80 ]
  %40 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %38, i64 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  %44 = icmp ult i8* %39, %43
  br i1 %44, label %45, label %93

45:                                               ; preds = %36
  store i8* %39, i8** %18, align 8
  %46 = getelementptr inbounds i8, i8* %39, i64 24
  %47 = load i8, i8* %39, align 4
  %48 = and i8 %47, 3
  %49 = zext i8 %48 to i32
  %50 = icmp eq i8 %48, 3
  br i1 %50, label %51, label %54

51:                                               ; preds = %45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 4 %46, i64 48, i1 false) #15
  %52 = getelementptr inbounds i8, i8* %39, i64 72
  %53 = bitcast i8* %52 to float*
  br label %60

54:                                               ; preds = %45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 4 %46, i64 32, i1 false) #15
  %55 = getelementptr inbounds i8, i8* %39, i64 56
  %56 = bitcast i8* %55 to float*
  %57 = load i32, i32* %12, align 8
  %58 = icmp eq i32 %57, 3
  br i1 %58, label %59, label %60

59:                                               ; preds = %54
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %34, align 8
  br label %60

60:                                               ; preds = %59, %54, %51
  %61 = phi i8* [ %52, %51 ], [ %55, %54 ], [ %55, %59 ]
  %62 = phi float* [ %53, %51 ], [ %56, %54 ], [ %56, %59 ]
  store i32 %49, i32* %12, align 8
  %63 = load i8, i8* %39, align 4
  %64 = and i8 %63, 16
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %80, label %66

66:                                               ; preds = %60
  %67 = lshr i8 %63, 2
  %68 = and i8 %67, 3
  %69 = zext i8 %68 to i32
  %70 = icmp eq i8 %68, 3
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %61, i64 48, i1 false) #15
  %72 = getelementptr inbounds float, float* %62, i64 12
  br label %78

73:                                               ; preds = %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %61, i64 32, i1 false) #15
  %74 = getelementptr inbounds float, float* %62, i64 8
  %75 = load i32, i32* %16, align 4
  %76 = icmp eq i32 %75, 3
  br i1 %76, label %77, label %78

77:                                               ; preds = %73
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %35, align 4
  br label %78

78:                                               ; preds = %77, %73, %71
  %79 = phi float* [ %72, %71 ], [ %74, %73 ], [ %74, %77 ]
  store i32 %69, i32* %16, align 4
  br label %80

80:                                               ; preds = %78, %60
  %81 = phi float* [ %79, %78 ], [ %62, %60 ]
  store float* %81, float** %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %29) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %33, i8 -1, i64 16, i1 false)
  store i32 -1431655766, i32* %31, align 4
  %82 = getelementptr inbounds i8, i8* %39, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 4 %82, i64 20, i1 false)
  %83 = load i8, i8* %39, align 4
  %84 = and i8 %83, 16
  %85 = icmp eq i8 %84, 0
  %86 = select i1 %85, %class.GrQuad* null, %class.GrQuad* %26
  %87 = load i32, i32* %31, align 4
  call void @_ZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlags(%"class.GrQuadPerEdgeAA::Tessellator"* nonnull %4, %class.GrQuad* nonnull %32, %class.GrQuad* %86, %struct.SkRGBA4f* nonnull dereferenceable(16) %30, %struct.SkRect* nonnull dereferenceable(16) @_ZZNK12_GLOBAL__N_110FillRectOp10tessellateERKN15GrQuadPerEdgeAA10VertexSpecEPcE12kEmptyDomain, i32 %87) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %29) #15
  %88 = load i8*, i8** %19, align 8
  %89 = load %class.GrQuadBuffer*, %class.GrQuadBuffer** %17, align 8
  %90 = getelementptr inbounds %class.GrQuadBuffer, %class.GrQuadBuffer* %89, i64 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %93, label %36

93:                                               ; preds = %80, %36, %3
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 368, i8* nonnull %7) #15
  ret void
}

declare { %class.SkArenaAlloc*, %class.GrSubRunAllocator* } @_ZN18GrRecordingContext11OwnedArenas3getEv(%"class.GrRecordingContext::OwnedArenas"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #3

declare void @_ZN15GrQuadPerEdgeAA11TessellatorC1ERKNS_10VertexSpecEPc(%"class.GrQuadPerEdgeAA::Tessellator"*, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4), i8*) unnamed_addr #3

declare void @_ZN15GrQuadPerEdgeAA11Tessellator6appendEP6GrQuadS2_RK8SkRGBA4fIL11SkAlphaType2EERK6SkRect13GrQuadAAFlags(%"class.GrQuadPerEdgeAA::Tessellator"*, %class.GrQuad*, %class.GrQuad*, %struct.SkRGBA4f* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

declare %class.GrGeometryProcessor* @_ZN15GrQuadPerEdgeAA13MakeProcessorEP12SkArenaAllocRKNS_10VertexSpecE(%class.SkArenaAlloc*, %"struct.GrQuadPerEdgeAA::VertexSpec"* dereferenceable(4)) local_unnamed_addr #3

declare %class.GrProgramInfo* @_ZN35GrSimpleMeshDrawOpHelperWithStencil28createProgramInfoWithStencilEPK6GrCapsP12SkArenaAllocRK18GrSurfaceProxyViewO13GrAppliedClipRKN15GrXferProcessor12DstProxyViewEP19GrGeometryProcessor15GrPrimitiveType18GrXferBarrierFlags8GrLoadOp(%class.GrSimpleMeshDrawOpHelperWithStencil*, %class.GrCaps*, %class.SkArenaAlloc*, %class.GrSurfaceProxyView* dereferenceable(16), %class.GrAppliedClip* dereferenceable(72), %"class.GrXferProcessor::DstProxyView"* dereferenceable(32), %class.GrGeometryProcessor*, i8 zeroext, i32, i32) local_unnamed_addr #3

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #3

declare void @_ZN15GrQuadPerEdgeAA14GetIndexBufferEPN12GrMeshDrawOp6TargetENS_17IndexBufferOptionE(%class.sk_sp.183* sret, %"class.GrMeshDrawOp::Target"*, i32) local_unnamed_addr #3

declare void @_ZN14GrProcessorSetC1EO7GrPaint(%class.GrProcessorSet*, %class.GrPaint* dereferenceable(48)) unnamed_addr #3

declare i32 @_ZN15GrQuadPerEdgeAA9QuadLimitENS_17IndexBufferOptionE(i32) local_unnamed_addr #3

declare void @_ZN7GrPaintC1ERKS_(%class.GrPaint*, %class.GrPaint* dereferenceable(48)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvP4GrOpjEE12__call_emptyEPKNS0_16__policy_storageES3_j(%"union.std::__1::__function::__policy_storage"*, %class.GrOp*, i32) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #18
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #14 comdat {
  tail call void @abort() #17
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN24GrProcessorAnalysisColor7CombineERKS_S1_: argument 0"}
!6 = distinct !{!6, !"_ZN24GrProcessorAnalysisColor7CombineERKS_S1_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK12GrQuadBufferIN12_GLOBAL__N_110FillRectOp10ColorAndAAEE8iteratorEv: argument 0"}
!9 = distinct !{!9, !"_ZNK12GrQuadBufferIN12_GLOBAL__N_110FillRectOp10ColorAndAAEE8iteratorEv"}
