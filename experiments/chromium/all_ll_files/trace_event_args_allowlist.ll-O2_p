; ModuleID = '../../services/tracing/public/cpp/trace_event_args_allowlist.cc'
source_filename = "../../services/tracing/public/cpp/trace_event_args_allowlist.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.tracing::(anonymous namespace)::AllowlistEntry" = type { i8*, i8*, i8** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::StringTokenizerT" = type <{ i8*, i8*, i8*, i8*, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE12QuickGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE11FullGetNextEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPKPKcS4_EJS6_EEEFbS4_EE3RunEPNS0_13BindStateBaseES4_ = comdat any

$_ZN4base8internal9BindStateIPFbPKPKcS3_EJS5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZN7tracing12_GLOBAL__N_119kEventArgsAllowlistE = internal unnamed_addr constant [35 x %"struct.tracing::(anonymous namespace)::AllowlistEntry"] [%"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN7tracing12_GLOBAL__N_132kMemoryPressureEventsAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN7tracing12_GLOBAL__N_123kPeekMessageAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.10, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN7tracing12_GLOBAL__N_132kMemoryPressureEventsAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN7tracing12_GLOBAL__N_130kScopedBlockingCallAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN7tracing12_GLOBAL__N_130kScopedBlockingCallAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN7tracing12_GLOBAL__N_130kScopedBlockingCallAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN7tracing12_GLOBAL__N_130kScopedBlockingCallAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZN7tracing12_GLOBAL__N_130kScopedBlockingCallAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN7tracing12_GLOBAL__N_132kMemoryPressureEventsAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN7tracing12_GLOBAL__N_132kMemoryPressureEventsAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN7tracing12_GLOBAL__N_114kUIAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN7tracing12_GLOBAL__N_114kUIAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZN7tracing12_GLOBAL__N_130kTopLevelIpcRunTaskAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.41, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZN7tracing12_GLOBAL__N_124kRendererHostAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @_ZN7tracing12_GLOBAL__N_122kMemoryDumpAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8** null }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZN7tracing12_GLOBAL__N_116kV8GCAllowedArgsE, i32 0, i32 0) }, %"struct.tracing::(anonymous namespace)::AllowlistEntry" zeroinitializer], align 16
@_ZN7tracing12_GLOBAL__N_118kMetadataAllowlistE = internal unnamed_addr constant [20 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.84, i32 0, i32 0), i8* null], align 16
@.str.1 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"__metadata\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"thread_name\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"process_name\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"process_uptime_seconds\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"MemoryPressureListener::Notify\00", align 1
@_ZN7tracing12_GLOBAL__N_132kMemoryPressureEventsAllowedArgsE = internal constant [2 x i8*] [i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.48, i32 0, i32 0), i8* null], align 16
@.str.9 = private unnamed_addr constant [56 x i8] c"MessagePumpForUI::ProcessNextWindowsMessage PeekMessage\00", align 1
@_ZN7tracing12_GLOBAL__N_123kPeekMessageAllowedArgsE = internal constant [2 x i8*] [i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i32 0, i32 0), i8* null], align 16
@.str.10 = private unnamed_addr constant [63 x i8] c"MultiSourceMemoryPressureMonitor::OnMemoryPressureLevelChanged\00", align 1
@.str.11 = private unnamed_addr constant [50 x i8] c"ScopedAllowBaseSyncPrimitivesOutsideBlockingScope\00", align 1
@_ZN7tracing12_GLOBAL__N_130kScopedBlockingCallAllowedArgsE = internal constant [4 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i32 0, i32 0), i8* null], align 16
@.str.12 = private unnamed_addr constant [20 x i8] c"ScopedAllowBlocking\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"ScopedAllowIO\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"ScopedBlockingCall*\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"ScopedMayLoadLibraryAtBackgroundPriority\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"browser\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"TabLoader::OnMemoryPressure\00", align 1
@.str.18 = private unnamed_addr constant [42 x i8] c"KeyedServiceFactory::GetServiceForContext\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"ipc\00", align 1
@.str.20 = private unnamed_addr constant [21 x i8] c"GpuChannelHost::Send\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"SyncChannel::Send\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"RenderThreadImpl::OnMemoryPressure\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"shutdown\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"startup\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"PrefProvider::PrefProvider\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"TestAllowlist*\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"toplevel\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"ui\00", align 1
@.str.31 = private unnamed_addr constant [30 x i8] c"HWNDMessageHandler::OnWndProc\00", align 1
@_ZN7tracing12_GLOBAL__N_114kUIAllowedArgsE = internal constant [2 x i8*] [i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.53, i32 0, i32 0), i8* null], align 16
@.str.32 = private unnamed_addr constant [44 x i8] c"HWNDMessageHandler::OnDwmCompositionChanged\00", align 1
@.str.33 = private unnamed_addr constant [33 x i8] c"disabled-by-default-cpu_profiler\00", align 1
@.str.34 = private unnamed_addr constant [31 x i8] c"disabled-by-default-lifecycles\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"task_posted_to_disabled_queue\00", align 1
@.str.36 = private unnamed_addr constant [33 x i8] c"disabled-by-default-toplevel.ipc\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"TaskAnnotator::RunTask\00", align 1
@_ZN7tracing12_GLOBAL__N_130kTopLevelIpcRunTaskAllowedArgsE = internal constant [2 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i32 0, i32 0), i8* null], align 16
@.str.38 = private unnamed_addr constant [40 x i8] c"disabled-by-default-user_action_samples\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"UserAction\00", align 1
@.str.40 = private unnamed_addr constant [23 x i8] c"chrome_library_address\00", align 1
@.str.41 = private unnamed_addr constant [22 x i8] c"chrome_library_module\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"stackFrames\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"typeNames\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"renderer_host\00", align 1
@_ZN7tracing12_GLOBAL__N_124kRendererHostAllowedArgsE = internal constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i32 0, i32 0), i8* null], align 16
@.str.45 = private unnamed_addr constant [33 x i8] c"disabled-by-default-memory-infra\00", align 1
@_ZN7tracing12_GLOBAL__N_122kMemoryDumpAllowedArgsE = internal constant [5 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i32 0, i32 0), i8* null], align 16
@.str.46 = private unnamed_addr constant [33 x i8] c"disabled-by-default-system_stats\00", align 1
@.str.47 = private unnamed_addr constant [26 x i8] c"disabled-by-default-v8.gc\00", align 1
@_ZN7tracing12_GLOBAL__N_116kV8GCAllowedArgsE = internal constant [3 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i32 0, i32 0), i8* null], align 16
@.str.48 = private unnamed_addr constant [36 x i8] c"chrome_memory_pressure_notification\00", align 1
@.str.49 = private unnamed_addr constant [20 x i8] c"chrome_message_pump\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"file_name\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"function_name\00", align 1
@.str.52 = private unnamed_addr constant [16 x i8] c"source_location\00", align 1
@.str.53 = private unnamed_addr constant [32 x i8] c"chrome_window_handle_event_info\00", align 1
@.str.54 = private unnamed_addr constant [22 x i8] c"chrome_task_annotator\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.57 = private unnamed_addr constant [18 x i8] c"should_background\00", align 1
@.str.58 = private unnamed_addr constant [18 x i8] c"has_pending_views\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"bytes_allocated\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"dumps\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.63 = private unnamed_addr constant [23 x i8] c"top_queued_message_tag\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"num_items\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"num_tasks\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"chrome-bitness\00", align 1
@.str.67 = private unnamed_addr constant [17 x i8] c"chrome-dcheck-on\00", align 1
@.str.68 = private unnamed_addr constant [20 x i8] c"chrome-library-name\00", align 1
@.str.69 = private unnamed_addr constant [13 x i8] c"clock-domain\00", align 1
@.str.70 = private unnamed_addr constant [7 x i8] c"config\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"cpu-*\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c"field-trials\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"gpu-*\00", align 1
@.str.74 = private unnamed_addr constant [14 x i8] c"highres-ticks\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"hardware-class\00", align 1
@.str.76 = private unnamed_addr constant [20 x i8] c"last_triggered_rule\00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c"network-type\00", align 1
@.str.78 = private unnamed_addr constant [9 x i8] c"num-cpus\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"os-*\00", align 1
@.str.80 = private unnamed_addr constant [16 x i8] c"physical-memory\00", align 1
@.str.81 = private unnamed_addr constant [16 x i8] c"product-version\00", align 1
@.str.82 = private unnamed_addr constant [14 x i8] c"scenario_name\00", align 1
@.str.83 = private unnamed_addr constant [13 x i8] c"trace-config\00", align 1
@.str.84 = private unnamed_addr constant [11 x i8] c"user-agent\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7tracing30IsTraceArgumentNameAllowlistedEPKPKcS1_(i8** nocapture readonly, i8*) #0 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load i8*, i8** %0, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %2
  %8 = icmp eq i8* %1, null
  %9 = bitcast %"class.logging::CheckError"* %4 to i8*
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %15

11:                                               ; preds = %31
  %12 = getelementptr inbounds i8*, i8** %0, i64 %36
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %7, %11
  %16 = phi i8* [ %5, %7 ], [ %13, %11 ]
  %17 = phi i64 [ 0, %7 ], [ %36, %11 ]
  %18 = phi i8** [ %0, %7 ], [ %12, %11 ]
  br i1 %8, label %21, label %19

19:                                               ; preds = %15
  %20 = call i64 @strlen(i8* nonnull %1) #7
  br label %25

21:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #7
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  %23 = load i8*, i8** %18, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %19, %21
  %26 = phi i64 [ %20, %19 ], [ 0, %21 ]
  %27 = phi i8* [ %16, %19 ], [ %23, %21 ]
  %28 = call i64 @strlen(i8* nonnull %27) #7
  br label %31

29:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #7
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi i64 [ 0, %29 ], [ %26, %25 ]
  %33 = phi i8* [ null, %29 ], [ %27, %25 ]
  %34 = phi i64 [ 0, %29 ], [ %28, %25 ]
  %35 = call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %1, i64 %32, i8* %33, i64 %34) #7
  %36 = add nuw i64 %17, 1
  br i1 %35, label %37, label %11

37:                                               ; preds = %31, %11, %2
  %38 = phi i1 [ false, %2 ], [ false, %11 ], [ true, %31 ]
  ret i1 %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7tracing27IsTraceEventArgsAllowlistedEPKcS1_PN4base17RepeatingCallbackIFbS1_EEE(i8*, i8*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::StringTokenizerT", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = bitcast %"class.base::StringTokenizerT"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 96, i1 false)
  %9 = tail call i64 @strlen(i8* %0) #8
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7
  %12 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 1, i8* %13, align 1
  store i8 44, i8* %11, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 1
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 4
  %16 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %17 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #7
  store i8* %0, i8** %17, align 8
  %20 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 1
  store i8* %0, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 2
  store i8* %0, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 3
  store i8* %10, i8** %22, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %11, i64 24, i1 false) #7
  %23 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 6
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 7
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 9
  store i32 0, i32* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 5
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %5, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast i8** %21 to i64*
  %31 = icmp eq i8* %1, null
  %32 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %37

33:                                               ; preds = %93
  %34 = load i8, i8* %28, align 1
  %35 = load i64, i64* %29, align 8
  %36 = load i32, i32* %23, align 8
  br label %37

37:                                               ; preds = %33, %3
  %38 = phi i32 [ %36, %33 ], [ 0, %3 ]
  %39 = phi i64 [ %35, %33 ], [ 0, %3 ]
  %40 = phi i8 [ %34, %33 ], [ 0, %3 ]
  %41 = icmp slt i8 %40, 0
  %42 = zext i8 %40 to i64
  %43 = select i1 %41, i64 %39, i64 %42
  %44 = icmp eq i64 %43, 0
  %45 = icmp eq i32 %38, 0
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %37
  %48 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %5) #7
  br i1 %48, label %51, label %96

49:                                               ; preds = %37
  %50 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %5) #7
  br i1 %50, label %51, label %96

51:                                               ; preds = %47, %49
  %52 = load i8*, i8** %20, align 8
  %53 = load i64, i64* %30, align 8
  %54 = ptrtoint i8* %52 to i64
  %55 = sub i64 %53, %54
  br label %56

56:                                               ; preds = %51, %93
  %57 = phi i64 [ 0, %51 ], [ %94, %93 ]
  %58 = getelementptr inbounds [35 x %"struct.tracing::(anonymous namespace)::AllowlistEntry"], [35 x %"struct.tracing::(anonymous namespace)::AllowlistEntry"]* @_ZN7tracing12_GLOBAL__N_119kEventArgsAllowlistE, i64 0, i64 %57, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = call i64 @strlen(i8* nonnull %59) #7
  %61 = call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %52, i64 %55, i8* %59, i64 %60) #7
  br i1 %61, label %62, label %93

62:                                               ; preds = %56
  br i1 %31, label %65, label %63

63:                                               ; preds = %62
  %64 = call i64 @strlen(i8* nonnull %1) #7
  br label %67

65:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #7
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  br label %67

67:                                               ; preds = %63, %65
  %68 = phi i64 [ 0, %65 ], [ %64, %63 ]
  %69 = getelementptr inbounds [35 x %"struct.tracing::(anonymous namespace)::AllowlistEntry"], [35 x %"struct.tracing::(anonymous namespace)::AllowlistEntry"]* @_ZN7tracing12_GLOBAL__N_119kEventArgsAllowlistE, i64 0, i64 %57, i32 1
  %70 = load i8*, i8** %69, align 8
  %71 = call i64 @strlen(i8* nonnull %70) #7
  %72 = call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %1, i64 %68, i8* %70, i64 %71) #7
  br i1 %72, label %73, label %93

73:                                               ; preds = %67
  %74 = lshr i64 11831119864, %57
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds [35 x %"struct.tracing::(anonymous namespace)::AllowlistEntry"], [35 x %"struct.tracing::(anonymous namespace)::AllowlistEntry"]* @_ZN7tracing12_GLOBAL__N_119kEventArgsAllowlistE, i64 0, i64 %57, i32 2
  %79 = bitcast %"class.base::RepeatingCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #7
  %80 = call i8* @_Znwm(i64 48) #9, !noalias !2
  %81 = bitcast i8* %80 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %81, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, i8*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKPKcS4_EJS6_EEEFbS4_EE3RunEPNS0_13BindStateBaseES4_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPKPKcS3_EJS5_EE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !2
  %82 = getelementptr inbounds i8, i8* %80, i64 32
  %83 = bitcast i8* %82 to i64*
  store i64 ptrtoint (i1 (i8**, i8*)* @_ZN7tracing30IsTraceArgumentNameAllowlistedEPKPKcS1_ to i64), i64* %83, align 8, !noalias !2
  %84 = getelementptr inbounds i8, i8* %80, i64 40
  %85 = bitcast i8*** %78 to i64*
  %86 = load i64, i64* %85, align 8, !noalias !2
  %87 = bitcast i8* %84 to i64*
  store i64 %86, i64* %87, align 8, !noalias !2
  %88 = bitcast %"class.base::RepeatingCallback"* %7 to i8**
  store i8* %80, i8** %88, align 8, !alias.scope !2
  %89 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0
  %90 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0
  %91 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %89, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %90) #7
  %92 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %92) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #7
  br label %96

93:                                               ; preds = %56, %67
  %94 = add nuw nsw i64 %57, 1
  %95 = icmp eq i64 %94, 34
  br i1 %95, label %33, label %56

96:                                               ; preds = %47, %49, %73, %77
  %97 = phi i1 [ true, %77 ], [ true, %73 ], [ false, %49 ], [ false, %47 ]
  %98 = load i8, i8* %28, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #9
  br label %103

103:                                              ; preds = %100, %96
  %104 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %110) #9
  br label %111

111:                                              ; preds = %103, %108
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #7
  ret i1 %97
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7tracing21IsMetadataAllowlistedERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %9

7:                                                ; preds = %9
  %8 = icmp eq i64 %22, 19
  br i1 %8, label %23, label %9

9:                                                ; preds = %1, %7
  %10 = phi i64 [ 0, %1 ], [ %22, %7 ]
  %11 = getelementptr inbounds [20 x i8*], [20 x i8*]* @_ZN7tracing12_GLOBAL__N_118kMetadataAllowlistE, i64 0, i64 %10
  %12 = load i8, i8* %3, align 1
  %13 = icmp slt i8 %12, 0
  %14 = load i8*, i8** %4, align 8
  %15 = select i1 %13, i8* %14, i8* %5
  %16 = load i64, i64* %6, align 8
  %17 = zext i8 %12 to i64
  %18 = select i1 %13, i64 %16, i64 %17
  %19 = load i8*, i8** %11, align 8
  %20 = tail call i64 @strlen(i8* nonnull %19) #7
  %21 = tail call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %15, i64 %18, i8* %19, i64 %20) #7
  %22 = add nuw nsw i64 %10, 1
  br i1 %21, label %23, label %7

23:                                               ; preds = %7, %9
  %24 = phi i1 [ true, %9 ], [ false, %7 ]
  ret i1 %24
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE12QuickGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, %8
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  br label %16

15:                                               ; preds = %32, %1
  store i8 1, i8* %2, align 4
  br label %59

16:                                               ; preds = %12, %32
  %17 = phi i8* [ %8, %12 ], [ %34, %32 ]
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  store i8* %18, i8** %3, align 8
  %19 = load i8, i8* %17, align 1
  %20 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %13, i8 signext %19, i64 0) #7
  %21 = icmp eq i64 %20, -1
  br i1 %21, label %22, label %32

22:                                               ; preds = %16
  %23 = load i32, i32* %14, align 8
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = load i8*, i8** %6, align 8
  %27 = load i8, i8* %26, align 1
  switch i8 %27, label %28 [
    i8 32, label %32
    i8 13, label %32
    i8 10, label %32
    i8 9, label %32
    i8 12, label %32
  ]

28:                                               ; preds = %25, %22
  %29 = load i8*, i8** %3, align 8
  %30 = load i8*, i8** %9, align 8
  %31 = icmp eq i8* %29, %30
  br i1 %31, label %59, label %37

32:                                               ; preds = %25, %25, %25, %25, %25, %16
  %33 = load i64, i64* %4, align 8
  store i64 %33, i64* %7, align 8
  %34 = inttoptr i64 %33 to i8*
  %35 = load i8*, i8** %9, align 8
  %36 = icmp eq i8* %35, %34
  br i1 %36, label %15, label %16

37:                                               ; preds = %28, %50
  %38 = phi i8* [ %51, %50 ], [ %29, %28 ]
  %39 = load i8, i8* %38, align 1
  %40 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %13, i8 signext %39, i64 0) #7
  %41 = icmp eq i64 %40, -1
  br i1 %41, label %42, label %59

42:                                               ; preds = %37
  %43 = load i8*, i8** %3, align 8
  %44 = load i32, i32* %14, align 8
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = load i8, i8* %43, align 1
  %48 = add i8 %47, -9
  %49 = icmp ult i8 %48, 24
  br i1 %49, label %54, label %50

50:                                               ; preds = %54, %46, %42
  %51 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %51, i8** %3, align 8
  %52 = load i8*, i8** %9, align 8
  %53 = icmp eq i8* %51, %52
  br i1 %53, label %59, label %37

54:                                               ; preds = %46
  %55 = zext i8 %48 to i32
  %56 = lshr i32 8388635, %55
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %50, label %59

59:                                               ; preds = %15, %28, %37, %50, %54
  %60 = phi i1 [ true, %54 ], [ false, %15 ], [ true, %28 ], [ true, %37 ], [ true, %50 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  %7 = ptrtoint i8* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i8* [ %17, %16 ], [ %3, %8 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %22 [
    i8 32, label %16
    i8 13, label %16
    i8 10, label %16
    i8 9, label %16
    i8 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %17, i8** %2, align 8
  %18 = icmp eq i8* %17, %5
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i8* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = phi i8* [ %3, %8 ], [ %3, %1 ], [ %5, %20 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %32 = load i8, i8* %26, align 4, !range !7
  %33 = icmp eq i8 %32, 0
  br label %34

34:                                               ; preds = %111, %22
  %35 = phi i8* [ %5, %22 ], [ %104, %111 ]
  %36 = phi i64 [ %23, %22 ], [ %116, %111 ]
  %37 = phi i8* [ %24, %22 ], [ %112, %111 ]
  %38 = phi i1 [ %33, %22 ], [ false, %111 ]
  %39 = phi i8 [ 0, %22 ], [ %106, %111 ]
  %40 = phi i8 [ 0, %22 ], [ %107, %111 ]
  %41 = phi i8 [ 0, %22 ], [ %108, %111 ]
  br i1 %38, label %103, label %42

42:                                               ; preds = %34
  store i8 0, i8* %26, align 4
  store i64 %36, i64* %28, align 8
  %43 = inttoptr i64 %36 to i8*
  %44 = icmp eq i8* %35, %43
  br i1 %44, label %89, label %45

45:                                               ; preds = %42, %74
  %46 = phi i8* [ %75, %74 ], [ %35, %42 ]
  %47 = phi i8* [ %80, %74 ], [ %37, %42 ]
  %48 = phi i8* [ %80, %74 ], [ %43, %42 ]
  %49 = phi i8 [ %79, %74 ], [ %41, %42 ]
  %50 = phi i8 [ %78, %74 ], [ %40, %42 ]
  %51 = phi i8 [ %77, %74 ], [ %39, %42 ]
  %52 = load i8, i8* %48, align 1
  %53 = icmp eq i8 %49, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %45
  %55 = icmp eq i8 %50, 0
  br i1 %55, label %56, label %74

56:                                               ; preds = %54
  %57 = icmp eq i8 %52, 92
  br i1 %57, label %74, label %58

58:                                               ; preds = %56
  %59 = icmp eq i8 %51, %52
  %60 = select i1 %59, i8 0, i8 %49
  br label %74

61:                                               ; preds = %45
  %62 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %29, i8 signext %52, i64 0) #7
  %63 = icmp eq i64 %62, -1
  br i1 %63, label %64, label %82

64:                                               ; preds = %61
  %65 = load i32, i32* %30, align 8
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  switch i8 %52, label %68 [
    i8 32, label %82
    i8 13, label %82
    i8 10, label %82
    i8 9, label %82
    i8 12, label %82
  ]

68:                                               ; preds = %67, %64
  %69 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %31, i8 signext %52, i64 0) #7
  %70 = icmp ne i64 %69, -1
  %71 = zext i1 %70 to i8
  %72 = load i8*, i8** %2, align 8
  %73 = load i8*, i8** %4, align 8
  br label %74

74:                                               ; preds = %58, %68, %54, %56
  %75 = phi i8* [ %46, %56 ], [ %46, %54 ], [ %73, %68 ], [ %46, %58 ]
  %76 = phi i8* [ %47, %56 ], [ %47, %54 ], [ %72, %68 ], [ %47, %58 ]
  %77 = phi i8 [ %51, %56 ], [ %51, %54 ], [ %52, %68 ], [ %51, %58 ]
  %78 = phi i8 [ 1, %56 ], [ 0, %54 ], [ %50, %68 ], [ 0, %58 ]
  %79 = phi i8 [ %49, %56 ], [ %49, %54 ], [ %71, %68 ], [ %60, %58 ]
  %80 = getelementptr inbounds i8, i8* %76, i64 1
  store i8* %80, i8** %2, align 8
  %81 = icmp eq i8* %80, %75
  br i1 %81, label %82, label %45

82:                                               ; preds = %67, %67, %67, %67, %67, %61, %74
  %83 = phi i8 [ %77, %74 ], [ %51, %61 ], [ %51, %67 ], [ %51, %67 ], [ %51, %67 ], [ %51, %67 ], [ %51, %67 ]
  %84 = phi i8 [ %78, %74 ], [ %50, %61 ], [ %50, %67 ], [ %50, %67 ], [ %50, %67 ], [ %50, %67 ], [ %50, %67 ]
  %85 = phi i8 [ %79, %74 ], [ 0, %61 ], [ 0, %67 ], [ 0, %67 ], [ 0, %67 ], [ 0, %67 ], [ 0, %67 ]
  %86 = load i8*, i8** %27, align 8
  %87 = load i8*, i8** %2, align 8
  %88 = ptrtoint i8* %87 to i64
  br label %89

89:                                               ; preds = %82, %42
  %90 = phi i64 [ %36, %42 ], [ %88, %82 ]
  %91 = phi i8* [ %37, %42 ], [ %87, %82 ]
  %92 = phi i8* [ %35, %42 ], [ %86, %82 ]
  %93 = phi i8 [ %39, %42 ], [ %83, %82 ]
  %94 = phi i8 [ %40, %42 ], [ %84, %82 ]
  %95 = phi i8 [ %41, %42 ], [ %85, %82 ]
  %96 = icmp eq i8* %92, %91
  br i1 %96, label %97, label %117

97:                                               ; preds = %89
  %98 = load i32, i32* %25, align 8
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %117

101:                                              ; preds = %97
  %102 = load i8*, i8** %4, align 8
  br label %103

103:                                              ; preds = %101, %34
  %104 = phi i8* [ %35, %34 ], [ %102, %101 ]
  %105 = phi i64 [ %36, %34 ], [ %90, %101 ]
  %106 = phi i8 [ %39, %34 ], [ %93, %101 ]
  %107 = phi i8 [ %40, %34 ], [ %94, %101 ]
  %108 = phi i8 [ %41, %34 ], [ %95, %101 ]
  store i8 1, i8* %26, align 4
  store i64 %105, i64* %28, align 8
  %109 = inttoptr i64 %105 to i8*
  %110 = icmp eq i8* %104, %109
  br i1 %110, label %117, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds i8, i8* %109, i64 1
  store i8* %112, i8** %2, align 8
  %113 = load i32, i32* %25, align 8
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = ptrtoint i8* %112 to i64
  br i1 %115, label %34, label %117

117:                                              ; preds = %111, %103, %89, %97
  %118 = phi i1 [ true, %97 ], [ true, %89 ], [ false, %103 ], [ true, %111 ]
  ret i1 %118
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKPKcS4_EJS6_EEEFbS4_EE3RunEPNS0_13BindStateBaseES4_(%"class.base::internal::BindStateBase"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to i1 (i8**, i8*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to i8***
  %7 = load i1 (i8**, i8*)*, i1 (i8**, i8*)** %4, align 8
  %8 = load i8**, i8*** %6, align 8
  %9 = tail call zeroext i1 %7(i8** %8, i8* %1) #7
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPKPKcS3_EJS5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFbPKPKcS4_EJRKS6_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFbPKPKcS4_EJRKS6_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIPFbPKPKcS2_EJRKS4_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIPFbPKPKcS2_EJRKS4_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!7 = !{i8 0, i8 2}
