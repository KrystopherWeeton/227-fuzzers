; ModuleID = '../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_sha1.c'
source_filename = "../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_sha1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sctp_sha1_context = type { %struct.sha_state_st }
%struct.sha_state_st = type { %union.anon, i32, i32, [64 x i8], i32 }
%union.anon = type { [5 x i32] }

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_sha1_init(%struct.sctp_sha1_context*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.sctp_sha1_context, %struct.sctp_sha1_context* %0, i64 0, i32 0
  %3 = tail call i32 @SHA1_Init(%struct.sha_state_st* %2) #2
  ret void
}

declare i32 @SHA1_Init(%struct.sha_state_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_sha1_update(%struct.sctp_sha1_context*, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.sctp_sha1_context, %struct.sctp_sha1_context* %0, i64 0, i32 0
  %5 = zext i32 %2 to i64
  %6 = tail call i32 @SHA1_Update(%struct.sha_state_st* %4, i8* %1, i64 %5) #2
  ret void
}

declare i32 @SHA1_Update(%struct.sha_state_st*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_sha1_final(i8*, %struct.sctp_sha1_context*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.sctp_sha1_context, %struct.sctp_sha1_context* %1, i64 0, i32 0
  %4 = tail call i32 @SHA1_Final(i8* %0, %struct.sha_state_st* %3) #2
  ret void
}

declare i32 @SHA1_Final(i8*, %struct.sha_state_st*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
