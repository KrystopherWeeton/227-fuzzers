; ModuleID = '../../net/cert/signed_certificate_timestamp.cc'
source_filename = "../../net/cert/signed_certificate_timestamp.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::ct::SignedEntryData" = type { i32, %"class.std::__1::basic_string", %"struct.net::SHA256HashValue", %"class.std::__1::basic_string" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"struct.net::ct::SignedCertificateTimestamp::LessThan" = type { i8 }
%class.scoped_refptr = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }

@_ZN3net2ct26SignedCertificateTimestampC1Ev = hidden unnamed_addr alias void (%"struct.net::ct::SignedCertificateTimestamp"*), void (%"struct.net::ct::SignedCertificateTimestamp"*)* @_ZN3net2ct26SignedCertificateTimestampC2Ev
@_ZN3net2ct26SignedCertificateTimestampD1Ev = hidden unnamed_addr alias void (%"struct.net::ct::SignedCertificateTimestamp"*), void (%"struct.net::ct::SignedCertificateTimestamp"*)* @_ZN3net2ct26SignedCertificateTimestampD2Ev
@_ZN3net2ct15SignedEntryDataC1Ev = hidden unnamed_addr alias void (%"struct.net::ct::SignedEntryData"*), void (%"struct.net::ct::SignedEntryData"*)* @_ZN3net2ct15SignedEntryDataC2Ev
@_ZN3net2ct15SignedEntryDataD1Ev = hidden unnamed_addr alias void (%"struct.net::ct::SignedEntryData"*), void (%"struct.net::ct::SignedEntryData"*)* @_ZN3net2ct15SignedEntryDataD2Ev
@_ZN3net2ct15DigitallySignedC1Ev = hidden unnamed_addr alias void (%"struct.net::ct::DigitallySigned"*), void (%"struct.net::ct::DigitallySigned"*)* @_ZN3net2ct15DigitallySignedC2Ev
@_ZN3net2ct15DigitallySignedD1Ev = hidden unnamed_addr alias void (%"struct.net::ct::DigitallySigned"*), void (%"struct.net::ct::DigitallySigned"*)* @_ZN3net2ct15DigitallySignedD2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net2ct26SignedCertificateTimestamp8LessThanclERK13scoped_refptrIS1_ES6_(%"struct.net::ct::SignedCertificateTimestamp::LessThan"* nocapture readnone, %class.scoped_refptr* nocapture readonly dereferenceable(8), %class.scoped_refptr* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %5 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %4, align 8
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %7 = load %"struct.net::ct::SignedCertificateTimestamp"*, %"struct.net::ct::SignedCertificateTimestamp"** %6, align 8
  %8 = icmp eq %"struct.net::ct::SignedCertificateTimestamp"* %5, %7
  br i1 %8, label %253, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %5, i64 0, i32 5, i32 2
  %11 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %7, i64 0, i32 5, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %5, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %7, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp eq i64 %19, %27
  br i1 %28, label %29, label %61

29:                                               ; preds = %9
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %33 = select i1 %15, i8* %31, i8* %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %37 = select i1 %23, i8* %35, i8* %36
  %38 = icmp eq i64 %19, 0
  br i1 %15, label %45, label %39

39:                                               ; preds = %29
  br i1 %38, label %83, label %40

40:                                               ; preds = %39
  %41 = ptrtoint i8* %31 to i64
  %42 = trunc i64 %41 to i8
  %43 = load i8, i8* %37, align 1
  %44 = icmp eq i8 %43, %42
  br i1 %44, label %46, label %61

45:                                               ; preds = %29
  br i1 %38, label %83, label %58

46:                                               ; preds = %40, %53
  %47 = phi i64 [ %50, %53 ], [ %18, %40 ]
  %48 = phi i8* [ %51, %53 ], [ %32, %40 ]
  %49 = phi i8* [ %54, %53 ], [ %37, %40 ]
  %50 = add i64 %47, -1
  %51 = getelementptr inbounds i8, i8* %48, i64 1
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %83, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds i8, i8* %49, i64 1
  %55 = load i8, i8* %51, align 1
  %56 = load i8, i8* %54, align 1
  %57 = icmp eq i8 %55, %56
  br i1 %57, label %46, label %61

58:                                               ; preds = %45
  %59 = tail call i32 @bcmp(i8* %33, i8* %37, i64 %19) #10
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %83, label %61

61:                                               ; preds = %53, %40, %58, %9
  %62 = icmp ult i64 %27, %19
  %63 = select i1 %62, i64 %27, i64 %19
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %69 = select i1 %15, i8* %67, i8* %68
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %73 = select i1 %23, i8* %71, i8* %72
  %74 = tail call i32 @memcmp(i8* %69, i8* %73, i64 %63) #10
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %65, %61
  %77 = icmp ult i64 %19, %27
  %78 = zext i1 %62 to i32
  %79 = select i1 %77, i32 -1, i32 %78
  br label %80

80:                                               ; preds = %65, %76
  %81 = phi i32 [ %79, %76 ], [ %74, %65 ]
  %82 = icmp slt i32 %81, 0
  br label %253

83:                                               ; preds = %46, %58, %39, %45
  %84 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %5, i64 0, i32 2
  %85 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %7, i64 0, i32 2
  %86 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = zext i8 %88 to i64
  %93 = select i1 %89, i64 %91, i64 %92
  %94 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  %98 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = zext i8 %96 to i64
  %101 = select i1 %97, i64 %99, i64 %100
  %102 = icmp eq i64 %93, %101
  br i1 %102, label %103, label %135

103:                                              ; preds = %83
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  %107 = select i1 %89, i8* %105, i8* %106
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %111 = select i1 %97, i8* %109, i8* %110
  %112 = icmp eq i64 %93, 0
  br i1 %89, label %119, label %113

113:                                              ; preds = %103
  br i1 %112, label %157, label %114

114:                                              ; preds = %113
  %115 = ptrtoint i8* %105 to i64
  %116 = trunc i64 %115 to i8
  %117 = load i8, i8* %111, align 1
  %118 = icmp eq i8 %117, %116
  br i1 %118, label %120, label %135

119:                                              ; preds = %103
  br i1 %112, label %157, label %132

120:                                              ; preds = %114, %127
  %121 = phi i64 [ %124, %127 ], [ %92, %114 ]
  %122 = phi i8* [ %125, %127 ], [ %106, %114 ]
  %123 = phi i8* [ %128, %127 ], [ %111, %114 ]
  %124 = add i64 %121, -1
  %125 = getelementptr inbounds i8, i8* %122, i64 1
  %126 = icmp eq i64 %124, 0
  br i1 %126, label %157, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = load i8, i8* %125, align 1
  %130 = load i8, i8* %128, align 1
  %131 = icmp eq i8 %129, %130
  br i1 %131, label %120, label %135

132:                                              ; preds = %119
  %133 = tail call i32 @bcmp(i8* %107, i8* %111, i64 %93) #10
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %157, label %135

135:                                              ; preds = %127, %114, %132, %83
  %136 = icmp ult i64 %101, %93
  %137 = select i1 %136, i64 %101, i64 %93
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  %143 = select i1 %89, i8* %141, i8* %142
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %147 = select i1 %97, i8* %145, i8* %146
  %148 = tail call i32 @memcmp(i8* %143, i8* %147, i64 %137) #10
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %139, %135
  %151 = icmp ult i64 %93, %101
  %152 = zext i1 %136 to i32
  %153 = select i1 %151, i32 -1, i32 %152
  br label %154

154:                                              ; preds = %139, %150
  %155 = phi i32 [ %153, %150 ], [ %148, %139 ]
  %156 = icmp slt i32 %155, 0
  br label %253

157:                                              ; preds = %120, %132, %113, %119
  %158 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %7, i64 0, i32 3, i32 0, i32 0
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %5, i64 0, i32 3, i32 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = icmp eq i64 %161, %159
  br i1 %162, label %165, label %163

163:                                              ; preds = %157
  %164 = icmp slt i64 %161, %159
  br label %253

165:                                              ; preds = %157
  %166 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %5, i64 0, i32 4
  %167 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %7, i64 0, i32 4
  %168 = bitcast %"class.std::__1::basic_string"* %166 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  %172 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = zext i8 %170 to i64
  %175 = select i1 %171, i64 %173, i64 %174
  %176 = bitcast %"class.std::__1::basic_string"* %167 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  %180 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %7, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = zext i8 %178 to i64
  %183 = select i1 %179, i64 %181, i64 %182
  %184 = icmp eq i64 %175, %183
  br i1 %184, label %185, label %217

185:                                              ; preds = %165
  %186 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = bitcast %"class.std::__1::basic_string"* %166 to i8*
  %189 = select i1 %171, i8* %187, i8* %188
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = bitcast %"class.std::__1::basic_string"* %167 to i8*
  %193 = select i1 %179, i8* %191, i8* %192
  %194 = icmp eq i64 %175, 0
  br i1 %171, label %201, label %195

195:                                              ; preds = %185
  br i1 %194, label %239, label %196

196:                                              ; preds = %195
  %197 = ptrtoint i8* %187 to i64
  %198 = trunc i64 %197 to i8
  %199 = load i8, i8* %193, align 1
  %200 = icmp eq i8 %199, %198
  br i1 %200, label %202, label %217

201:                                              ; preds = %185
  br i1 %194, label %239, label %214

202:                                              ; preds = %196, %209
  %203 = phi i64 [ %206, %209 ], [ %174, %196 ]
  %204 = phi i8* [ %207, %209 ], [ %188, %196 ]
  %205 = phi i8* [ %210, %209 ], [ %193, %196 ]
  %206 = add i64 %203, -1
  %207 = getelementptr inbounds i8, i8* %204, i64 1
  %208 = icmp eq i64 %206, 0
  br i1 %208, label %239, label %209

209:                                              ; preds = %202
  %210 = getelementptr inbounds i8, i8* %205, i64 1
  %211 = load i8, i8* %207, align 1
  %212 = load i8, i8* %210, align 1
  %213 = icmp eq i8 %211, %212
  br i1 %213, label %202, label %217

214:                                              ; preds = %201
  %215 = tail call i32 @bcmp(i8* %189, i8* %193, i64 %175) #10
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %239, label %217

217:                                              ; preds = %209, %196, %214, %165
  %218 = icmp ult i64 %183, %175
  %219 = select i1 %218, i64 %183, i64 %175
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %232, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = bitcast %"class.std::__1::basic_string"* %166 to i8*
  %225 = select i1 %171, i8* %223, i8* %224
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i8*, i8** %226, align 8
  %228 = bitcast %"class.std::__1::basic_string"* %167 to i8*
  %229 = select i1 %179, i8* %227, i8* %228
  %230 = tail call i32 @memcmp(i8* %225, i8* %229, i64 %219) #10
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %236

232:                                              ; preds = %221, %217
  %233 = icmp ult i64 %175, %183
  %234 = zext i1 %218 to i32
  %235 = select i1 %233, i32 -1, i32 %234
  br label %236

236:                                              ; preds = %221, %232
  %237 = phi i32 [ %235, %232 ], [ %230, %221 ]
  %238 = icmp slt i32 %237, 0
  br label %253

239:                                              ; preds = %202, %214, %195, %201
  %240 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %5, i64 0, i32 6
  %241 = load i32, i32* %240, align 8
  %242 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %7, i64 0, i32 6
  %243 = load i32, i32* %242, align 8
  %244 = icmp eq i32 %241, %243
  br i1 %244, label %247, label %245

245:                                              ; preds = %239
  %246 = icmp slt i32 %241, %243
  br label %253

247:                                              ; preds = %239
  %248 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %5, i64 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %7, i64 0, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = icmp slt i32 %249, %251
  br label %253

253:                                              ; preds = %3, %247, %245, %236, %163, %154, %80
  %254 = phi i1 [ %82, %80 ], [ %156, %154 ], [ %164, %163 ], [ %238, %236 ], [ %246, %245 ], [ %252, %247 ], [ false, %3 ]
  ret i1 %254
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct26SignedCertificateTimestampC2Ev(%"struct.net::ct::SignedCertificateTimestamp"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 7
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = bitcast %"struct.net::ct::SignedCertificateTimestamp"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 100, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct26SignedCertificateTimestampD2Ev(%"struct.net::ct::SignedCertificateTimestamp"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 7
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 5, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 4
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %28, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct26SignedCertificateTimestamp7PersistEPN4base6PickleE(%"struct.net::ct::SignedCertificateTimestamp"*, %"class.base::Pickle"*) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca %"class.base::BasicStringPiece", align 8
  %12 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  store i32 %13, i32* %7, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  %15 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %25 = select i1 %21, i8* %23, i8* %24
  store i8* %25, i8** %17, align 8
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %20 to i64
  %30 = select i1 %21, i64 %28, i64 %29
  store i64 %30, i64* %26, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  %31 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  store i64 %32, i64* %4, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  %34 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %44 = select i1 %40, i8* %42, i8* %43
  store i8* %44, i8** %36, align 8
  %45 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %39 to i64
  %49 = select i1 %40, i64 %47, i64 %48
  store i64 %49, i64* %45, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  %50 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 5, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52)
  store i32 %51, i32* %3, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %52) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52)
  %53 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 5, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55)
  store i32 %54, i32* %5, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %55) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55)
  %56 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #10
  %57 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 5, i32 2
  %58 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  %66 = select i1 %62, i8* %64, i8* %65
  store i8* %66, i8** %58, align 8
  %67 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  %68 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = zext i8 %61 to i64
  %71 = select i1 %62, i64 %69, i64 %70
  store i64 %71, i64* %67, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #10
  %72 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 6
  %73 = load i32, i32* %72, align 8
  %74 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74)
  store i32 %73, i32* %6, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %74) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74)
  %75 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 7
  %77 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  %78 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %85 = select i1 %81, i8* %83, i8* %84
  store i8* %85, i8** %77, align 8
  %86 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %80 to i64
  %90 = select i1 %81, i64 %88, i64 %89
  store i64 %90, i64* %86, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #10
  ret void
}

declare void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.net::ct::SignedCertificateTimestamp"* @_ZN3net2ct26SignedCertificateTimestamp16CreateFromPickleEPN4base14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #1 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #10
  store i32 -1431655766, i32* %2, align 4
  %8 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  store i64 -6148914691236517206, i64* %3, align 8
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #10
  store i32 -1431655766, i32* %4, align 4
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  store i32 -1431655766, i32* %5, align 4
  %11 = tail call i8* @_Znwm(i64 128) #11
  %12 = getelementptr inbounds i8, i8* %11, i64 104
  %13 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 100, i1 false) #10
  %14 = bitcast i8* %11 to i32*
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #10
  store i32 -1431655766, i32* %6, align 4
  %17 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %0, i32* nonnull %2) #10
  br i1 %17, label %18, label %57

18:                                               ; preds = %1
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to %"class.std::__1::basic_string"*
  %21 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* %0, %"class.std::__1::basic_string"* %20) #10
  br i1 %21, label %22, label %57

22:                                               ; preds = %18
  %23 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* %0, i64* nonnull %3) #10
  br i1 %23, label %24, label %57

24:                                               ; preds = %22
  %25 = getelementptr inbounds i8, i8* %11, i64 40
  %26 = bitcast i8* %25 to %"class.std::__1::basic_string"*
  %27 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* %0, %"class.std::__1::basic_string"* %26) #10
  br i1 %27, label %28, label %57

28:                                               ; preds = %24
  %29 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %0, i32* nonnull %4) #10
  br i1 %29, label %30, label %57

30:                                               ; preds = %28
  %31 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %0, i32* nonnull %5) #10
  br i1 %31, label %32, label %57

32:                                               ; preds = %30
  %33 = getelementptr inbounds i8, i8* %11, i64 72
  %34 = bitcast i8* %33 to %"class.std::__1::basic_string"*
  %35 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* %0, %"class.std::__1::basic_string"* %34) #10
  br i1 %35, label %36, label %57

36:                                               ; preds = %32
  %37 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* %0, i32* nonnull %6) #10
  br i1 %37, label %38, label %57

38:                                               ; preds = %36
  %39 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* %0, %"class.std::__1::basic_string"* %13) #10
  br i1 %39, label %40, label %57

40:                                               ; preds = %38
  %41 = load i32, i32* %2, align 4
  %42 = getelementptr inbounds i8, i8* %11, i64 4
  %43 = bitcast i8* %42 to i32*
  store i32 %41, i32* %43, align 4
  %44 = load i64, i64* %3, align 8
  %45 = getelementptr inbounds i8, i8* %11, i64 32
  %46 = bitcast i8* %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = load i32, i32* %4, align 4
  %48 = getelementptr inbounds i8, i8* %11, i64 64
  %49 = bitcast i8* %48 to i32*
  store i32 %47, i32* %49, align 8
  %50 = load i32, i32* %5, align 4
  %51 = getelementptr inbounds i8, i8* %11, i64 68
  %52 = bitcast i8* %51 to i32*
  store i32 %50, i32* %52, align 4
  %53 = load i32, i32* %6, align 4
  %54 = getelementptr inbounds i8, i8* %11, i64 96
  %55 = bitcast i8* %54 to i32*
  store i32 %53, i32* %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #10
  %56 = bitcast i8* %11 to %"struct.net::ct::SignedCertificateTimestamp"*
  br label %92

57:                                               ; preds = %1, %18, %22, %24, %28, %30, %32, %36, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #10
  %58 = atomicrmw sub i32* %14, i32 1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %92

60:                                               ; preds = %57
  %61 = getelementptr inbounds i8, i8* %11, i64 127
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = bitcast i8* %12 to i8**
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %64, %60
  %68 = getelementptr inbounds i8, i8* %11, i64 95
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds i8, i8* %11, i64 72
  %73 = bitcast i8* %72 to i8**
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %71, %67
  %76 = getelementptr inbounds i8, i8* %11, i64 63
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = getelementptr inbounds i8, i8* %11, i64 40
  %81 = bitcast i8* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #11
  br label %83

83:                                               ; preds = %79, %75
  %84 = getelementptr inbounds i8, i8* %11, i64 31
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = getelementptr inbounds i8, i8* %11, i64 8
  %89 = bitcast i8* %88 to i8**
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #11
  br label %91

91:                                               ; preds = %83, %87
  call void @_ZdlPv(i8* nonnull %11) #11
  br label %92

92:                                               ; preds = %40, %57, %91
  %93 = phi %"struct.net::ct::SignedCertificateTimestamp"* [ %56, %40 ], [ null, %57 ], [ null, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #10
  ret %"struct.net::ct::SignedCertificateTimestamp"* %93
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct15SignedEntryDataC2Ev(%"struct.net::ct::SignedEntryData"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct15SignedEntryDataD2Ev(%"struct.net::ct::SignedEntryData"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 3
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %10, %16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net2ct15SignedEntryData5ResetEv(%"struct.net::ct::SignedEntryData"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %11, align 8
  br label %14

12:                                               ; preds = %1
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  store i8 0, i8* %13, align 1
  store i8 0, i8* %5, align 1
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 3
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"struct.net::ct::SignedEntryData", %"struct.net::ct::SignedEntryData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  br label %26

24:                                               ; preds = %14
  %25 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  store i8 0, i8* %25, align 1
  store i8 0, i8* %17, align 1
  br label %26

26:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct15DigitallySignedC2Ev(%"struct.net::ct::DigitallySigned"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.net::ct::DigitallySigned"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net2ct15DigitallySignedD2Ev(%"struct.net::ct::DigitallySigned"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net2ct15DigitallySigned24SignatureParametersMatchENS1_13HashAlgorithmENS1_18SignatureAlgorithmE(%"struct.net::ct::DigitallySigned"* nocapture readonly, i32, i32) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, %1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.net::ct::DigitallySigned", %"struct.net::ct::DigitallySigned"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, %2
  br label %11

11:                                               ; preds = %7, %3
  %12 = phi i1 [ false, %3 ], [ %10, %7 ]
  ret i1 %12
}

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

declare void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
