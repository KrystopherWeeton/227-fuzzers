; ModuleID = '../../third_party/skia/src/core/SkPathBuilder.cpp'
source_filename = "../../third_party/skia/src/core/SkPathBuilder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPathBuilder = type { %class.SkTDArray, %class.SkTDArray.0, %class.SkTDArray.1, i32, i8, i32, %struct.SkPoint, i8, i32, i32, i8, i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.0 = type { i8*, i32, i32 }
%class.SkTDArray.1 = type { float*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.0, %class.SkTDArray.1, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkConic = type { [3 x %struct.SkPoint], float }
%"class.(anonymous namespace)::OvalPointIterator" = type { %"class.(anonymous namespace)::PointIterator" }
%"class.(anonymous namespace)::PointIterator" = type { [4 x %struct.SkPoint], i32, i32 }
%"class.(anonymous namespace)::RectPointIterator" = type { %"class.(anonymous namespace)::PointIterator" }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.(anonymous namespace)::RRectPointIterator" = type { %"class.(anonymous namespace)::PointIterator.16" }
%"class.(anonymous namespace)::PointIterator.16" = type { [8 x %struct.SkPoint], i32, i32 }
%"class.SkPath::RawIter" = type <{ %"class.SkPath::RangeIter", %"class.SkPath::RangeIter", float, [4 x i8] }>
%"class.SkPath::RangeIter" = type { i8*, %struct.SkPoint*, float* }

$_ZZN10SkPathPriv9PtsInVerbEjE10gPtsInVerb = comdat any

@_ZZN10SkPathPriv9PtsInVerbEjE10gPtsInVerb = linkonce_odr hidden local_unnamed_addr constant [7 x i8] c"\01\01\02\02\03\00\00", comdat, align 1
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1

@_ZN13SkPathBuilderC1Ev = hidden unnamed_addr alias void (%class.SkPathBuilder*), void (%class.SkPathBuilder*)* @_ZN13SkPathBuilderC2Ev
@_ZN13SkPathBuilderC1E14SkPathFillType = hidden unnamed_addr alias void (%class.SkPathBuilder*, i32), void (%class.SkPathBuilder*, i32)* @_ZN13SkPathBuilderC2E14SkPathFillType
@_ZN13SkPathBuilderC1ERK6SkPath = hidden unnamed_addr alias void (%class.SkPathBuilder*, %class.SkPath*), void (%class.SkPathBuilder*, %class.SkPath*)* @_ZN13SkPathBuilderC2ERK6SkPath
@_ZN13SkPathBuilderD1Ev = hidden unnamed_addr alias void (%class.SkPathBuilder*), void (%class.SkPathBuilder*)* @_ZN13SkPathBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathBuilderC2Ev(%class.SkPathBuilder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 9
  %4 = bitcast %class.SkPathBuilder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 48, i1 false)
  store i32 -1, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 10
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 11
  %7 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 4
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 5
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6, i32 0
  store float 0.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6, i32 1
  store float 0.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  store i8 1, i8* %12, align 4
  store i32 2, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5resetEv(%class.SkPathBuilder* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %3 = load %struct.SkPoint*, %struct.SkPoint** %2, align 8
  %4 = icmp eq %struct.SkPoint* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = bitcast %struct.SkPoint* %3 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %6) #11
  %7 = bitcast %class.SkPathBuilder* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  br label %8

8:                                                ; preds = %1, %5
  %9 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1
  %10 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %9, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  tail call void @_Z7sk_freePv(i8* nonnull %11) #11
  %14 = bitcast %class.SkTDArray.0* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #11
  br label %15

15:                                               ; preds = %8, %13
  %16 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 2
  %17 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %16, i64 0, i32 0
  %18 = load float*, float** %17, align 8
  %19 = icmp eq float* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = bitcast float* %18 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %21) #11
  %22 = bitcast %class.SkTDArray.1* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #11
  br label %23

23:                                               ; preds = %15, %20
  %24 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 3
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 4
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 5
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6, i32 0
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6, i32 1
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  store i8 1, i8* %29, align 4
  %30 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 11
  store i32 2, i32* %30, align 4
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathBuilderC2E14SkPathFillType(%class.SkPathBuilder* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 9
  %5 = bitcast %class.SkPathBuilder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false)
  store i32 -1, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 10
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 11
  %8 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 3
  %9 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 4
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 5
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6, i32 0
  store float 0.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6, i32 1
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  store i8 1, i8* %13, align 4
  store i32 2, i32* %7, align 4
  store i32 %1, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathBuilderC2ERK6SkPath(%class.SkPathBuilder*, %class.SkPath* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 9
  %5 = bitcast %class.SkPathBuilder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false)
  store i32 -1, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 10
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 11
  store i32 2, i32* %7, align 4
  %8 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilderaSERK6SkPath(%class.SkPathBuilder* %0, %class.SkPath* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilderaSERK6SkPath(%class.SkPathBuilder* returned, %class.SkPath* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %4 = load %struct.SkPoint*, %struct.SkPoint** %3, align 8
  %5 = icmp eq %struct.SkPoint* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.SkPoint* %4 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %7) #11
  %8 = bitcast %class.SkPathBuilder* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  br label %9

9:                                                ; preds = %6, %2
  %10 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %10, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  tail call void @_Z7sk_freePv(i8* nonnull %12) #11
  %15 = bitcast %class.SkTDArray.0* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #11
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 2
  %18 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %17, i64 0, i32 0
  %19 = load float*, float** %18, align 8
  %20 = icmp eq float* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = bitcast float* %19 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %22) #11
  %23 = bitcast %class.SkTDArray.1* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11
  br label %24

24:                                               ; preds = %16, %21
  %25 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 3
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 4
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 5
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6, i32 0
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6, i32 1
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  store i8 1, i8* %30, align 4
  %31 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 11
  store i32 2, i32* %31, align 4
  %32 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %33 = load i8, i8* %32, align 2
  %34 = and i8 %33, 3
  %35 = zext i8 %34 to i32
  store i32 %35, i32* %25, align 8
  %36 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %37 = load %class.SkPathRef*, %class.SkPathRef** %36, align 8
  %38 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 4, i32 0
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 9
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %24
  %45 = inttoptr i64 %40 to i8*
  %46 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 10
  %47 = load i8, i8* %46, align 1, !range !2
  br label %60

48:                                               ; preds = %24
  %49 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 1
  %50 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 3, i32 0
  %51 = load %struct.SkPoint*, %struct.SkPoint** %50, align 8
  %52 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 3, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %49, %struct.SkPoint* %51, i32 %53) #11
  %55 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 10
  %56 = zext i1 %54 to i8
  store i8 %56, i8* %55, align 1
  store i8 0, i8* %41, align 8
  %57 = load %class.SkPathRef*, %class.SkPathRef** %36, align 8
  %58 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %57, i64 0, i32 4, i32 0
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %48, %44
  %61 = phi i8* [ %45, %44 ], [ %59, %48 ]
  %62 = phi %class.SkPathRef* [ %37, %44 ], [ %57, %48 ]
  %63 = phi i8 [ %47, %44 ], [ %56, %48 ]
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %60
  %66 = icmp eq i8* %61, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %62, i64 0, i32 4, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %61, i64 %70
  br label %72

72:                                               ; preds = %60, %65, %67
  %73 = phi i8* [ %71, %67 ], [ null, %65 ], [ %61, %60 ]
  %74 = inttoptr i64 %40 to i8*
  %75 = icmp eq i8* %73, %74
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %62, i64 0, i32 5, i32 0
  %78 = bitcast float** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %62, i64 0, i32 3, i32 0
  %81 = bitcast %struct.SkPoint** %80 to i64*
  %82 = load i64, i64* %81, align 8
  br label %84

83:                                               ; preds = %148, %72
  ret %class.SkPathBuilder* %0

84:                                               ; preds = %76, %148
  %85 = phi i8* [ %134, %148 ], [ %74, %76 ]
  %86 = phi i64 [ %150, %148 ], [ %79, %76 ]
  %87 = phi i64 [ %151, %148 ], [ %82, %76 ]
  %88 = load i8, i8* %85, align 1, !noalias !3
  switch i8 %88, label %89 [
    i8 0, label %90
    i8 1, label %95
    i8 2, label %100
    i8 3, label %108
    i8 4, label %118
    i8 5, label %129
  ]

89:                                               ; preds = %84
  tail call void @llvm.trap() #11, !noalias !3
  unreachable

90:                                               ; preds = %84
  %91 = inttoptr i64 %87 to %struct.SkPoint*
  %92 = inttoptr i64 %87 to <2 x float>*
  %93 = load <2 x float>, <2 x float>* %92, align 4
  %94 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %93)
  br label %132

95:                                               ; preds = %84
  %96 = inttoptr i64 %87 to %struct.SkPoint*
  %97 = inttoptr i64 %87 to <2 x float>*
  %98 = load <2 x float>, <2 x float>* %97, align 4
  %99 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %98)
  br label %132

100:                                              ; preds = %84
  %101 = inttoptr i64 %87 to %struct.SkPoint*
  %102 = inttoptr i64 %87 to <2 x float>*
  %103 = load <2 x float>, <2 x float>* %102, align 4
  %104 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %101, i64 1
  %105 = bitcast %struct.SkPoint* %104 to <2 x float>*
  %106 = load <2 x float>, <2 x float>* %105, align 4
  %107 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder* %0, <2 x float> %103, <2 x float> %106)
  br label %132

108:                                              ; preds = %84
  %109 = inttoptr i64 %87 to %struct.SkPoint*
  %110 = inttoptr i64 %87 to <2 x float>*
  %111 = load <2 x float>, <2 x float>* %110, align 4
  %112 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %109, i64 1
  %113 = bitcast %struct.SkPoint* %112 to <2 x float>*
  %114 = load <2 x float>, <2 x float>* %113, align 4
  %115 = inttoptr i64 %86 to float*
  %116 = load float, float* %115, align 4
  %117 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %111, <2 x float> %114, float %116)
  br label %132

118:                                              ; preds = %84
  %119 = inttoptr i64 %87 to %struct.SkPoint*
  %120 = inttoptr i64 %87 to <2 x float>*
  %121 = load <2 x float>, <2 x float>* %120, align 4
  %122 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %119, i64 1
  %123 = bitcast %struct.SkPoint* %122 to <2 x float>*
  %124 = load <2 x float>, <2 x float>* %123, align 4
  %125 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %119, i64 2
  %126 = bitcast %struct.SkPoint* %125 to <2 x float>*
  %127 = load <2 x float>, <2 x float>* %126, align 4
  %128 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* %0, <2 x float> %121, <2 x float> %124, <2 x float> %127)
  br label %132

129:                                              ; preds = %84
  %130 = inttoptr i64 %87 to %struct.SkPoint*
  %131 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* %0)
  br label %132

132:                                              ; preds = %129, %118, %108, %100, %95, %90
  %133 = phi %struct.SkPoint* [ %130, %129 ], [ %119, %118 ], [ %109, %108 ], [ %101, %100 ], [ %96, %95 ], [ %91, %90 ]
  %134 = getelementptr inbounds i8, i8* %85, i64 1
  %135 = load i8, i8* %85, align 1
  switch i8 %135, label %139 [
    i8 0, label %140
    i8 1, label %140
    i8 2, label %136
    i8 3, label %143
    i8 4, label %137
    i8 5, label %138
  ]

136:                                              ; preds = %132
  br label %140

137:                                              ; preds = %132
  br label %140

138:                                              ; preds = %132
  br label %140

139:                                              ; preds = %132
  tail call void @llvm.trap() #11
  unreachable

140:                                              ; preds = %138, %137, %136, %132, %132
  %141 = phi i64 [ 1, %132 ], [ 1, %132 ], [ 2, %136 ], [ 3, %137 ], [ 0, %138 ]
  %142 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %133, i64 %141
  br label %148

143:                                              ; preds = %132
  %144 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %133, i64 2
  %145 = inttoptr i64 %86 to float*
  %146 = getelementptr inbounds float, float* %145, i64 1
  %147 = ptrtoint float* %146 to i64
  br label %148

148:                                              ; preds = %140, %143
  %149 = phi %struct.SkPoint* [ %142, %140 ], [ %144, %143 ]
  %150 = phi i64 [ %86, %140 ], [ %147, %143 ]
  %151 = ptrtoint %struct.SkPoint* %149 to i64
  %152 = icmp eq i8* %73, %134
  br i1 %152, label %83, label %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathBuilderD2Ev(%class.SkPathBuilder* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 2
  %3 = bitcast %class.SkTDArray.1* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  tail call void @_Z7sk_freePv(i8* %4) #11
  %5 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  tail call void @_Z7sk_freePv(i8* %6) #11
  %7 = bitcast %class.SkPathBuilder* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @_Z7sk_freePv(i8* %8) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* returned, <2 x float>) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, %5
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %14 = load %struct.SkPoint*, %struct.SkPoint** %13, align 8
  br label %28

15:                                               ; preds = %8
  %16 = add i32 %4, 5
  %17 = lshr i32 %16, 2
  %18 = add nuw i32 %17, %16
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

21:                                               ; preds = %15
  store i32 %18, i32* %9, align 8
  %22 = bitcast %class.SkPathBuilder* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = sext i32 %18 to i64
  %25 = shl nsw i64 %24, 3
  %26 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %23, i64 %25) #11
  store i8* %26, i8** %22, align 8
  %27 = bitcast i8* %26 to %struct.SkPoint*
  br label %28

28:                                               ; preds = %12, %21
  %29 = phi %struct.SkPoint* [ %14, %12 ], [ %27, %21 ]
  store i32 %5, i32* %3, align 4
  %30 = sext i32 %4 to i64
  %31 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 %30
  %32 = bitcast %struct.SkPoint* %31 to <2 x float>*
  store <2 x float> %1, <2 x float>* %32, align 4
  %33 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1
  %34 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, 1
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %39, label %38

38:                                               ; preds = %28
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

39:                                               ; preds = %28
  %40 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp slt i32 %41, %36
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %33, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  br label %57

46:                                               ; preds = %39
  %47 = add i32 %35, 5
  %48 = lshr i32 %47, 2
  %49 = add nuw i32 %48, %47
  %50 = icmp sgt i32 %49, -1
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

52:                                               ; preds = %46
  store i32 %49, i32* %40, align 8
  %53 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %33, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = sext i32 %49 to i64
  %56 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %54, i64 %55) #11
  store i8* %56, i8** %53, align 8
  br label %57

57:                                               ; preds = %43, %52
  %58 = phi i8* [ %45, %43 ], [ %56, %52 ]
  store i32 %36, i32* %34, align 4
  %59 = sext i32 %35 to i64
  %60 = getelementptr inbounds i8, i8* %58, i64 %59
  store i8 0, i8* %60, align 1
  %61 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %62 = bitcast %struct.SkPoint* %61 to <2 x float>*
  store <2 x float> %1, <2 x float>* %62, align 4
  %63 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  store i8 0, i8* %63, align 4
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* returned, <2 x float>) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %9 = bitcast %struct.SkPoint* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %10) #11
  br label %12

12:                                               ; preds = %2, %7
  %13 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, 1
  %16 = icmp sgt i32 %15, -1
  br i1 %16, label %18, label %17

17:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %20, %15
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %24 = load %struct.SkPoint*, %struct.SkPoint** %23, align 8
  br label %38

25:                                               ; preds = %18
  %26 = add i32 %14, 5
  %27 = lshr i32 %26, 2
  %28 = add nuw i32 %27, %26
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

31:                                               ; preds = %25
  store i32 %28, i32* %19, align 8
  %32 = bitcast %class.SkPathBuilder* %0 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = sext i32 %28 to i64
  %35 = shl nsw i64 %34, 3
  %36 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %33, i64 %35) #11
  store i8* %36, i8** %32, align 8
  %37 = bitcast i8* %36 to %struct.SkPoint*
  br label %38

38:                                               ; preds = %22, %31
  %39 = phi %struct.SkPoint* [ %24, %22 ], [ %37, %31 ]
  store i32 %15, i32* %13, align 4
  %40 = sext i32 %14 to i64
  %41 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %39, i64 %40
  %42 = bitcast %struct.SkPoint* %41 to <2 x float>*
  store <2 x float> %1, <2 x float>* %42, align 4
  %43 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1
  %44 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, 1
  %47 = icmp sgt i32 %46, -1
  br i1 %47, label %49, label %48

48:                                               ; preds = %38
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

49:                                               ; preds = %38
  %50 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, %46
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %43, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  br label %67

56:                                               ; preds = %49
  %57 = add i32 %45, 5
  %58 = lshr i32 %57, 2
  %59 = add nuw i32 %58, %57
  %60 = icmp sgt i32 %59, -1
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

62:                                               ; preds = %56
  store i32 %59, i32* %50, align 8
  %63 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %43, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = sext i32 %59 to i64
  %66 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %64, i64 %65) #11
  store i8* %66, i8** %63, align 8
  br label %67

67:                                               ; preds = %53, %62
  %68 = phi i8* [ %55, %53 ], [ %66, %62 ]
  store i32 %46, i32* %44, align 4
  %69 = sext i32 %45 to i64
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  store i8 1, i8* %70, align 1
  %71 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 5
  %72 = load i32, i32* %71, align 8
  %73 = or i32 %72, 1
  store i32 %73, i32* %71, align 8
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder* returned, <2 x float>, <2 x float>) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %10 = bitcast %struct.SkPoint* %9 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %11) #11
  br label %13

13:                                               ; preds = %3, %8
  %14 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %15, 2
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, %16
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %25 = load %struct.SkPoint*, %struct.SkPoint** %24, align 8
  br label %39

26:                                               ; preds = %19
  %27 = add i32 %15, 6
  %28 = lshr i32 %27, 2
  %29 = add nuw i32 %28, %27
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

32:                                               ; preds = %26
  store i32 %29, i32* %20, align 8
  %33 = bitcast %class.SkPathBuilder* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = sext i32 %29 to i64
  %36 = shl nsw i64 %35, 3
  %37 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %34, i64 %36) #11
  store i8* %37, i8** %33, align 8
  %38 = bitcast i8* %37 to %struct.SkPoint*
  br label %39

39:                                               ; preds = %23, %32
  %40 = phi %struct.SkPoint* [ %25, %23 ], [ %38, %32 ]
  store i32 %16, i32* %14, align 4
  %41 = sext i32 %15 to i64
  %42 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %40, i64 %41
  %43 = bitcast %struct.SkPoint* %42 to <2 x float>*
  store <2 x float> %1, <2 x float>* %43, align 4
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %42, i64 1
  %45 = bitcast %struct.SkPoint* %44 to <2 x float>*
  store <2 x float> %2, <2 x float>* %45, align 4
  %46 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1
  %47 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, 1
  %50 = icmp sgt i32 %49, -1
  br i1 %50, label %52, label %51

51:                                               ; preds = %39
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

52:                                               ; preds = %39
  %53 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp slt i32 %54, %49
  br i1 %55, label %59, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %46, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  br label %70

59:                                               ; preds = %52
  %60 = add i32 %48, 5
  %61 = lshr i32 %60, 2
  %62 = add nuw i32 %61, %60
  %63 = icmp sgt i32 %62, -1
  br i1 %63, label %65, label %64

64:                                               ; preds = %59
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

65:                                               ; preds = %59
  store i32 %62, i32* %53, align 8
  %66 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %46, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = sext i32 %62 to i64
  %69 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %67, i64 %68) #11
  store i8* %69, i8** %66, align 8
  br label %70

70:                                               ; preds = %56, %65
  %71 = phi i8* [ %58, %56 ], [ %69, %65 ]
  store i32 %49, i32* %47, align 4
  %72 = sext i32 %48 to i64
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  store i8 2, i8* %73, align 1
  %74 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 5
  %75 = load i32, i32* %74, align 8
  %76 = or i32 %75, 2
  store i32 %76, i32* %74, align 8
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* returned, <2 x float>, <2 x float>, float) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %11 = bitcast %struct.SkPoint* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %12) #11
  br label %14

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, 2
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, %17
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %26 = load %struct.SkPoint*, %struct.SkPoint** %25, align 8
  br label %40

27:                                               ; preds = %20
  %28 = add i32 %16, 6
  %29 = lshr i32 %28, 2
  %30 = add nuw i32 %29, %28
  %31 = icmp sgt i32 %30, -1
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

33:                                               ; preds = %27
  store i32 %30, i32* %21, align 8
  %34 = bitcast %class.SkPathBuilder* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = sext i32 %30 to i64
  %37 = shl nsw i64 %36, 3
  %38 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %35, i64 %37) #11
  store i8* %38, i8** %34, align 8
  %39 = bitcast i8* %38 to %struct.SkPoint*
  br label %40

40:                                               ; preds = %24, %33
  %41 = phi %struct.SkPoint* [ %26, %24 ], [ %39, %33 ]
  store i32 %17, i32* %15, align 4
  %42 = sext i32 %16 to i64
  %43 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %41, i64 %42
  %44 = bitcast %struct.SkPoint* %43 to <2 x float>*
  store <2 x float> %1, <2 x float>* %44, align 4
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %43, i64 1
  %46 = bitcast %struct.SkPoint* %45 to <2 x float>*
  store <2 x float> %2, <2 x float>* %46, align 4
  %47 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1
  %48 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, 1
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %53, label %52

52:                                               ; preds = %40
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

53:                                               ; preds = %40
  %54 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %55, %50
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %47, i64 0, i32 0
  %59 = load i8*, i8** %58, align 8
  br label %71

60:                                               ; preds = %53
  %61 = add i32 %49, 5
  %62 = lshr i32 %61, 2
  %63 = add nuw i32 %62, %61
  %64 = icmp sgt i32 %63, -1
  br i1 %64, label %66, label %65

65:                                               ; preds = %60
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

66:                                               ; preds = %60
  store i32 %63, i32* %54, align 8
  %67 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %47, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = sext i32 %63 to i64
  %70 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %68, i64 %69) #11
  store i8* %70, i8** %67, align 8
  br label %71

71:                                               ; preds = %57, %66
  %72 = phi i8* [ %59, %57 ], [ %70, %66 ]
  store i32 %50, i32* %48, align 4
  %73 = sext i32 %49 to i64
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  store i8 3, i8* %74, align 1
  %75 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 2
  %76 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 2, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %77, 1
  %79 = icmp sgt i32 %78, -1
  br i1 %79, label %81, label %80

80:                                               ; preds = %71
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

81:                                               ; preds = %71
  %82 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 2, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = icmp slt i32 %83, %78
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %75, i64 0, i32 0
  %87 = load float*, float** %86, align 8
  br label %101

88:                                               ; preds = %81
  %89 = add i32 %77, 5
  %90 = lshr i32 %89, 2
  %91 = add nuw i32 %90, %89
  %92 = icmp sgt i32 %91, -1
  br i1 %92, label %94, label %93

93:                                               ; preds = %88
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

94:                                               ; preds = %88
  store i32 %91, i32* %82, align 8
  %95 = bitcast %class.SkTDArray.1* %75 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = sext i32 %91 to i64
  %98 = shl nsw i64 %97, 2
  %99 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %96, i64 %98) #11
  store i8* %99, i8** %95, align 8
  %100 = bitcast i8* %99 to float*
  br label %101

101:                                              ; preds = %85, %94
  %102 = phi float* [ %87, %85 ], [ %100, %94 ]
  store i32 %78, i32* %76, align 4
  %103 = sext i32 %77 to i64
  %104 = getelementptr inbounds float, float* %102, i64 %103
  store float %3, float* %104, align 4
  %105 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 5
  %106 = load i32, i32* %105, align 8
  %107 = or i32 %106, 4
  store i32 %107, i32* %105, align 8
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* returned, <2 x float>, <2 x float>, <2 x float>) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %11 = bitcast %struct.SkPoint* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %12) #11
  br label %14

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, 3
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %22, %17
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %26 = load %struct.SkPoint*, %struct.SkPoint** %25, align 8
  br label %40

27:                                               ; preds = %20
  %28 = add i32 %16, 7
  %29 = lshr i32 %28, 2
  %30 = add nuw i32 %29, %28
  %31 = icmp sgt i32 %30, -1
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

33:                                               ; preds = %27
  store i32 %30, i32* %21, align 8
  %34 = bitcast %class.SkPathBuilder* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = sext i32 %30 to i64
  %37 = shl nsw i64 %36, 3
  %38 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %35, i64 %37) #11
  store i8* %38, i8** %34, align 8
  %39 = bitcast i8* %38 to %struct.SkPoint*
  br label %40

40:                                               ; preds = %24, %33
  %41 = phi %struct.SkPoint* [ %26, %24 ], [ %39, %33 ]
  store i32 %17, i32* %15, align 4
  %42 = sext i32 %16 to i64
  %43 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %41, i64 %42
  %44 = bitcast %struct.SkPoint* %43 to <2 x float>*
  store <2 x float> %1, <2 x float>* %44, align 4
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %43, i64 1
  %46 = bitcast %struct.SkPoint* %45 to <2 x float>*
  store <2 x float> %2, <2 x float>* %46, align 4
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %43, i64 2
  %48 = bitcast %struct.SkPoint* %47 to <2 x float>*
  store <2 x float> %3, <2 x float>* %48, align 4
  %49 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1
  %50 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, 1
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %55, label %54

54:                                               ; preds = %40
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

55:                                               ; preds = %40
  %56 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp slt i32 %57, %52
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %49, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  br label %73

62:                                               ; preds = %55
  %63 = add i32 %51, 5
  %64 = lshr i32 %63, 2
  %65 = add nuw i32 %64, %63
  %66 = icmp sgt i32 %65, -1
  br i1 %66, label %68, label %67

67:                                               ; preds = %62
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

68:                                               ; preds = %62
  store i32 %65, i32* %56, align 8
  %69 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %49, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = sext i32 %65 to i64
  %72 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %70, i64 %71) #11
  store i8* %72, i8** %69, align 8
  br label %73

73:                                               ; preds = %59, %68
  %74 = phi i8* [ %61, %59 ], [ %72, %68 ]
  store i32 %52, i32* %50, align 4
  %75 = sext i32 %51 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  store i8 4, i8* %76, align 1
  %77 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 5
  %78 = load i32, i32* %77, align 8
  %79 = or i32 %78, 8
  store i32 %79, i32* %77, align 8
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* returned) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %44

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %13 = bitcast %struct.SkPoint* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %14) #11
  %16 = load i32, i32* %3, align 4
  br label %17

17:                                               ; preds = %6, %11
  %18 = phi i32 [ %4, %6 ], [ %16, %11 ]
  %19 = add i32 %18, 1
  %20 = icmp sgt i32 %19, -1
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, %19
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  br label %40

29:                                               ; preds = %22
  %30 = add i32 %18, 5
  %31 = lshr i32 %30, 2
  %32 = add nuw i32 %31, %30
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %35, label %34

34:                                               ; preds = %29
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

35:                                               ; preds = %29
  store i32 %32, i32* %23, align 8
  %36 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = sext i32 %32 to i64
  %39 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %37, i64 %38) #11
  store i8* %39, i8** %36, align 8
  br label %40

40:                                               ; preds = %26, %35
  %41 = phi i8* [ %28, %26 ], [ %39, %35 ]
  store i32 %19, i32* %3, align 4
  %42 = sext i32 %18 to i64
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  store i8 5, i8* %43, align 1
  store i8 1, i8* %8, align 4
  br label %44

44:                                               ; preds = %40, %1
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = sext i32 %1 to i64
  %8 = add nsw i64 %6, %7
  %9 = icmp slt i64 %8, 2147483647
  %10 = select i1 %9, i64 %8, i64 2147483647
  %11 = icmp sgt i64 %10, -2147483647
  %12 = select i1 %11, i64 %10, i64 -2147483647
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %15, %13
  br i1 %16, label %17, label %29

17:                                               ; preds = %3
  %18 = add i32 %13, 4
  %19 = lshr i32 %18, 2
  %20 = add i32 %19, %18
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

23:                                               ; preds = %17
  store i32 %20, i32* %14, align 8
  %24 = bitcast %class.SkPathBuilder* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = sext i32 %20 to i64
  %27 = shl nsw i64 %26, 3
  %28 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %25, i64 %27) #11
  store i8* %28, i8** %24, align 8
  br label %29

29:                                               ; preds = %3, %23
  %30 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = sext i32 %2 to i64
  %34 = add nsw i64 %32, %33
  %35 = icmp slt i64 %34, 2147483647
  %36 = select i1 %35, i64 %34, i64 2147483647
  %37 = icmp sgt i64 %36, -2147483647
  %38 = select i1 %37, i64 %36, i64 -2147483647
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %43, label %54

43:                                               ; preds = %29
  %44 = add i32 %39, 4
  %45 = lshr i32 %44, 2
  %46 = add i32 %45, %44
  %47 = icmp sgt i32 %46, -1
  br i1 %47, label %49, label %48

48:                                               ; preds = %43
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

49:                                               ; preds = %43
  store i32 %46, i32* %40, align 8
  %50 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = sext i32 %46 to i64
  %53 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %51, i64 %52) #11
  store i8* %53, i8** %50, align 8
  br label %54

54:                                               ; preds = %29, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13SkPathBuilder13computeBoundsEv(%class.SkPathBuilder* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %struct.SkRect*
  %4 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %5 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -1, i64 16, i1 false)
  %6 = load %struct.SkPoint*, %struct.SkPoint** %4, align 8
  %7 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %3, %struct.SkPoint* %6, i32 %8) #11
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %11 = load <2 x float>, <2 x float>* %10, align 8
  %12 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %11, 0
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %14 = load <2 x float>, <2 x float>* %13, align 8
  %15 = insertvalue { <2 x float>, <2 x float> } %12, <2 x float> %14, 1
  ret { <2 x float>, <2 x float> } %15
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7rLineToE7SkPoint(%class.SkPathBuilder* returned, <2 x float>) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %9 = bitcast %struct.SkPoint* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %10) #11
  br label %12

12:                                               ; preds = %2, %7
  %13 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %14 = load %struct.SkPoint*, %struct.SkPoint** %13, align 8
  %15 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, -1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 %18, i32 0
  %20 = bitcast float* %19 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 4
  %22 = fadd <2 x float> %21, %1
  %23 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %22)
  ret %class.SkPathBuilder* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7rQuadToE7SkPointS0_(%class.SkPathBuilder* returned, <2 x float>, <2 x float>) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %10 = bitcast %struct.SkPoint* %9 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %11) #11
  br label %13

13:                                               ; preds = %3, %8
  %14 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %15 = load %struct.SkPoint*, %struct.SkPoint** %14, align 8
  %16 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, -1
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %15, i64 %19, i32 0
  %21 = bitcast float* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = fadd <2 x float> %22, %1
  %24 = fadd <2 x float> %22, %2
  %25 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder* %0, <2 x float> %23, <2 x float> %24)
  ret %class.SkPathBuilder* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder8rConicToE7SkPointS0_f(%class.SkPathBuilder* returned, <2 x float>, <2 x float>, float) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %11 = bitcast %struct.SkPoint* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %12) #11
  br label %14

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %16 = load %struct.SkPoint*, %struct.SkPoint** %15, align 8
  %17 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, -1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 %20, i32 0
  %22 = bitcast float* %21 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 4
  %24 = fadd <2 x float> %23, %1
  %25 = fadd <2 x float> %23, %2
  %26 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %24, <2 x float> %25, float %3)
  ret %class.SkPathBuilder* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder8rCubicToE7SkPointS0_S0_(%class.SkPathBuilder* returned, <2 x float>, <2 x float>, <2 x float>) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %11 = bitcast %struct.SkPoint* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %12) #11
  br label %14

14:                                               ; preds = %4, %9
  %15 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %16 = load %struct.SkPoint*, %struct.SkPoint** %15, align 8
  %17 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, -1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 %20, i32 0
  %22 = bitcast float* %21 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 4
  %24 = fadd <2 x float> %23, %1
  %25 = fadd <2 x float> %23, %2
  %26 = fadd <2 x float> %23, %3
  %27 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* %0, <2 x float> %24, <2 x float> %25, <2 x float> %26)
  ret %class.SkPathBuilder* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPathBuilder4makeE5sk_spI9SkPathRefE(%class.SkPath* noalias sret, %class.SkPathBuilder* nocapture readonly, %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 8
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %33 [
    i32 2, label %7
    i32 3, label %15
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %9 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %10 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 10
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 9
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 11
  store i8 1, i8* %14, align 2
  br label %23

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %17 = load %class.SkPathRef*, %class.SkPathRef** %16, align 8
  %18 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 10
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 9
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 12
  store i8 1, i8* %22, align 1
  br label %23

23:                                               ; preds = %7, %15
  %24 = phi %class.SkPathRef* [ %17, %15 ], [ %9, %7 ]
  %25 = phi i8 [ %19, %15 ], [ %11, %7 ]
  %26 = phi i32 [ %21, %15 ], [ %13, %7 ]
  %27 = phi i8* [ %18, %15 ], [ %10, %7 ]
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %24, i64 0, i32 13
  store i8 %25, i8* %28, align 4
  %29 = trunc i32 %26 to i8
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %24, i64 0, i32 14
  store i8 %29, i8* %30, align 1
  %31 = load i8, i8* %27, align 8, !range !2
  %32 = zext i8 %31 to i32
  br label %33

33:                                               ; preds = %23, %3
  %34 = phi i32 [ 2, %3 ], [ 0, %23 ]
  %35 = phi i32 [ 2, %3 ], [ %32, %23 ]
  %36 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 11
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 2
  %39 = select i1 %38, i32 %34, i32 %37
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %41 = bitcast %class.sk_sp* %2 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.SkPathRef* null, %class.SkPathRef** %40, align 8
  %43 = bitcast %class.sk_sp* %4 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 4
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp ne i8 %47, 0
  call void @_ZN6SkPathC1E5sk_spI9SkPathRefE14SkPathFillTypeb15SkPathConvexity20SkPathFirstDirection(%class.SkPath* %0, %class.sk_sp* nonnull %4, i32 %45, i1 zeroext %48, i32 %39, i32 %35) #11
  %49 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %50 = load %class.SkPathRef*, %class.SkPathRef** %49, align 8
  %51 = icmp eq %class.SkPathRef* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %33
  %53 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %50) #11
  %57 = bitcast %class.SkPathRef* %50 to i8*
  call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %33, %52, %56
  ret void
}

declare void @_ZN6SkPathC1E5sk_spI9SkPathRefE14SkPathFillTypeb15SkPathConvexity20SkPathFirstDirection(%class.SkPath*, %class.sk_sp*, i32, i1 zeroext, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPathBuilder8snapshotEv(%class.SkPath* noalias sret, %class.SkPathBuilder* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = tail call i8* @_Znwm(i64 120) #13
  %5 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = bitcast %class.SkPathBuilder* %1 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = shl nsw i64 %11, 3
  %13 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %12, i32 2) #11
  %14 = ptrtoint i8* %13 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %10, i64 %12, i1 false) #11
  br label %15

15:                                               ; preds = %2, %8
  %16 = phi i64 [ %14, %8 ], [ 0, %2 ]
  tail call void @_Z7sk_freePv(i8* null) #11
  %17 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 1, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %23, i32 2) #11
  %25 = ptrtoint i8* %24 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %22, i64 %23, i1 false) #11
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i64 [ 0, %15 ], [ %25, %20 ]
  tail call void @_Z7sk_freePv(i8* null) #11
  %28 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 2, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 2
  %33 = bitcast %class.SkTDArray.1* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = sext i32 %29 to i64
  %36 = shl nsw i64 %35, 2
  %37 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %36, i32 2) #11
  %38 = ptrtoint i8* %37 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %34, i64 %36, i1 false) #11
  br label %39

39:                                               ; preds = %26, %31
  %40 = phi i64 [ %38, %31 ], [ 0, %26 ]
  tail call void @_Z7sk_freePv(i8* null) #11
  %41 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = bitcast i8* %4 to i32*
  store i32 1, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %4, i64 24
  %45 = getelementptr inbounds i8, i8* %4, i64 32
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr inbounds i8, i8* %4, i64 36
  %48 = bitcast i8* %47 to i32*
  %49 = bitcast i8* %44 to i64*
  store i64 %16, i64* %49, align 8
  store i32 %6, i32* %46, align 4
  store i32 %6, i32* %48, align 4
  %50 = getelementptr inbounds i8, i8* %4, i64 40
  %51 = getelementptr inbounds i8, i8* %4, i64 48
  %52 = bitcast i8* %51 to i32*
  %53 = getelementptr inbounds i8, i8* %4, i64 52
  %54 = bitcast i8* %53 to i32*
  %55 = bitcast i8* %50 to i64*
  store i64 %27, i64* %55, align 8
  store i32 %18, i32* %52, align 4
  store i32 %18, i32* %54, align 4
  %56 = getelementptr inbounds i8, i8* %4, i64 56
  %57 = getelementptr inbounds i8, i8* %4, i64 64
  %58 = bitcast i8* %57 to i32*
  %59 = getelementptr inbounds i8, i8* %4, i64 68
  %60 = bitcast i8* %59 to i32*
  %61 = bitcast i8* %56 to i64*
  store i64 %40, i64* %61, align 8
  store i32 %29, i32* %58, align 4
  store i32 %29, i32* %60, align 4
  %62 = getelementptr inbounds i8, i8* %4, i64 80
  %63 = bitcast i8* %62 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %63) #11
  %64 = getelementptr inbounds i8, i8* %4, i64 112
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds i8, i8* %4, i64 72
  %66 = bitcast i8* %65 to i32*
  store i32 0, i32* %66, align 8
  %67 = trunc i32 %42 to i8
  %68 = getelementptr inbounds i8, i8* %4, i64 118
  store i8 %67, i8* %68, align 2
  %69 = getelementptr inbounds i8, i8* %4, i64 114
  store i8 0, i8* %69, align 2
  %70 = getelementptr inbounds i8, i8* %4, i64 115
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds i8, i8* %4, i64 116
  store i8 0, i8* %71, align 4
  %72 = getelementptr inbounds i8, i8* %4, i64 117
  store i8 -84, i8* %72, align 1
  %73 = getelementptr inbounds i8, i8* %4, i64 4
  %74 = bitcast i8* %73 to %struct.SkRect*
  %75 = bitcast i8* %44 to %struct.SkPoint**
  %76 = load %struct.SkPoint*, %struct.SkPoint** %75, align 8
  %77 = load i32, i32* %48, align 4
  %78 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %74, %struct.SkPoint* %76, i32 %77) #11
  %79 = getelementptr inbounds i8, i8* %4, i64 113
  %80 = zext i1 %78 to i8
  store i8 %80, i8* %79, align 1
  store i8 0, i8* %64, align 8
  %81 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %82 = bitcast %class.sk_sp* %3 to i8**
  store i8* %4, i8** %82, align 8
  call void @_ZNK13SkPathBuilder4makeE5sk_spI9SkPathRefE(%class.SkPath* sret %0, %class.SkPathBuilder* %1, %class.sk_sp* nonnull %3)
  %83 = load %class.SkPathRef*, %class.SkPathRef** %81, align 8
  %84 = icmp eq %class.SkPathRef* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %39
  %86 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %83) #11
  %90 = bitcast %class.SkPathRef* %83 to i8*
  tail call void @_ZdlPv(i8* %90) #13
  br label %91

91:                                               ; preds = %39, %85, %89
  tail call void @_Z7sk_freePv(i8* null) #11
  tail call void @_Z7sk_freePv(i8* null) #11
  tail call void @_Z7sk_freePv(i8* null) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathBuilder6detachEv(%class.SkPath* noalias sret, %class.SkPathBuilder* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = bitcast %class.SkPath* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 16, i1 false)
  %5 = tail call i8* @_Znwm(i64 120) #13
  %6 = bitcast %class.SkPathBuilder* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store i64 0, i64* %6, align 8
  %8 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  store i32 0, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  store i32 0, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 1
  %13 = bitcast %class.SkTDArray.0* %12 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 0, i64* %13, align 8
  %15 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 0, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 1, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 0, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 2
  %20 = bitcast %class.SkTDArray.1* %19 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 0, i64* %20, align 8
  %22 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 2, i32 1
  %23 = load i32, i32* %22, align 4
  store i32 0, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 2, i32 2
  %25 = load i32, i32* %24, align 4
  store i32 0, i32* %24, align 4
  %26 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 5
  %27 = load i32, i32* %26, align 8
  %28 = bitcast i8* %5 to i32*
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %5, i64 24
  %30 = getelementptr inbounds i8, i8* %5, i64 32
  %31 = bitcast i8* %30 to i32*
  %32 = getelementptr inbounds i8, i8* %5, i64 36
  %33 = bitcast i8* %32 to i32*
  %34 = bitcast i8* %29 to i64*
  store i64 %7, i64* %34, align 8
  store i32 %9, i32* %31, align 4
  store i32 %11, i32* %33, align 4
  %35 = getelementptr inbounds i8, i8* %5, i64 40
  %36 = getelementptr inbounds i8, i8* %5, i64 48
  %37 = bitcast i8* %36 to i32*
  %38 = getelementptr inbounds i8, i8* %5, i64 52
  %39 = bitcast i8* %38 to i32*
  %40 = bitcast i8* %35 to i64*
  store i64 %14, i64* %40, align 8
  store i32 %16, i32* %37, align 4
  store i32 %18, i32* %39, align 4
  %41 = getelementptr inbounds i8, i8* %5, i64 56
  %42 = getelementptr inbounds i8, i8* %5, i64 64
  %43 = bitcast i8* %42 to i32*
  %44 = getelementptr inbounds i8, i8* %5, i64 68
  %45 = bitcast i8* %44 to i32*
  %46 = bitcast i8* %41 to i64*
  store i64 %21, i64* %46, align 8
  store i32 %23, i32* %43, align 4
  store i32 %25, i32* %45, align 4
  %47 = getelementptr inbounds i8, i8* %5, i64 80
  %48 = bitcast i8* %47 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %48) #11
  %49 = getelementptr inbounds i8, i8* %5, i64 112
  store i8 1, i8* %49, align 8
  %50 = getelementptr inbounds i8, i8* %5, i64 72
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 8
  %52 = trunc i32 %27 to i8
  %53 = getelementptr inbounds i8, i8* %5, i64 118
  store i8 %52, i8* %53, align 2
  %54 = getelementptr inbounds i8, i8* %5, i64 114
  store i8 0, i8* %54, align 2
  %55 = getelementptr inbounds i8, i8* %5, i64 115
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds i8, i8* %5, i64 116
  store i8 0, i8* %56, align 4
  %57 = getelementptr inbounds i8, i8* %5, i64 117
  store i8 -84, i8* %57, align 1
  %58 = getelementptr inbounds i8, i8* %5, i64 4
  %59 = bitcast i8* %58 to %struct.SkRect*
  %60 = bitcast i8* %29 to %struct.SkPoint**
  %61 = load %struct.SkPoint*, %struct.SkPoint** %60, align 8
  %62 = load i32, i32* %33, align 4
  %63 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %59, %struct.SkPoint* %61, i32 %62) #11
  %64 = getelementptr inbounds i8, i8* %5, i64 113
  %65 = zext i1 %63 to i8
  store i8 %65, i8* %64, align 1
  store i8 0, i8* %49, align 8
  %66 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %67 = bitcast %class.sk_sp* %3 to i8**
  store i8* %5, i8** %67, align 8
  call void @_ZNK13SkPathBuilder4makeE5sk_spI9SkPathRefE(%class.SkPath* sret %0, %class.SkPathBuilder* %1, %class.sk_sp* nonnull %3)
  %68 = load %class.SkPathRef*, %class.SkPathRef** %66, align 8
  %69 = icmp eq %class.SkPathRef* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %2
  %71 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %68) #11
  %75 = bitcast %class.SkPathRef* %68 to i8*
  tail call void @_ZdlPv(i8* %75) #13
  br label %76

76:                                               ; preds = %2, %70, %74
  tail call void @_Z7sk_freePv(i8* null) #11
  tail call void @_Z7sk_freePv(i8* null) #11
  tail call void @_Z7sk_freePv(i8* null) #11
  %77 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 0, i32 0
  %78 = load %struct.SkPoint*, %struct.SkPoint** %77, align 8
  %79 = icmp eq %struct.SkPoint* %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = bitcast %struct.SkPoint* %78 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %81) #11
  %82 = bitcast %class.SkPathBuilder* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false) #11
  br label %83

83:                                               ; preds = %80, %76
  %84 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %12, i64 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  tail call void @_Z7sk_freePv(i8* nonnull %85) #11
  %88 = bitcast %class.SkTDArray.0* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #11
  br label %89

89:                                               ; preds = %87, %83
  %90 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %19, i64 0, i32 0
  %91 = load float*, float** %90, align 8
  %92 = icmp eq float* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = bitcast float* %91 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %94) #11
  %95 = bitcast %class.SkTDArray.1* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #11
  br label %96

96:                                               ; preds = %89, %93
  %97 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 3
  store i32 0, i32* %97, align 8
  %98 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 4
  store i8 0, i8* %98, align 4
  store i32 0, i32* %26, align 8
  %99 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 6, i32 0
  store float 0.000000e+00, float* %99, align 4
  %100 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 6, i32 1
  store float 0.000000e+00, float* %100, align 4
  %101 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 7
  store i8 1, i8* %101, align 4
  %102 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %1, i64 0, i32 11
  store i32 2, i32* %102, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5arcToERK6SkRectffb(%class.SkPathBuilder*, %struct.SkRect* readonly dereferenceable(16), float, float, i1 zeroext) local_unnamed_addr #1 align 2 {
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca %struct.SkPoint, align 4
  %8 = alloca %struct.SkPoint, align 4
  %9 = alloca <2 x float>, align 8
  %10 = bitcast <2 x float>* %9 to %struct.SkPoint*
  %11 = alloca [5 x %struct.SkConic], align 16
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fsub float %13, %15
  %17 = fcmp olt float %16, 0.000000e+00
  br i1 %17, label %272, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = fsub float %20, %22
  %24 = fcmp olt float %23, 0.000000e+00
  br i1 %24, label %272, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  %29 = or i1 %28, %4
  %30 = fcmp oeq float %3, 0.000000e+00
  br i1 %30, label %31, label %39

31:                                               ; preds = %25
  %32 = fcmp oeq float %2, 0.000000e+00
  %33 = fcmp oeq float %2, 3.600000e+02
  %34 = or i1 %32, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = fmul float %22, 5.000000e-01
  %37 = fmul float %20, 5.000000e-01
  %38 = fadd float %37, %36
  br label %43

39:                                               ; preds = %31, %25
  %40 = fcmp oeq float %16, 0.000000e+00
  %41 = fcmp oeq float %23, 0.000000e+00
  %42 = and i1 %40, %41
  br i1 %42, label %43, label %51

43:                                               ; preds = %39, %35
  %44 = phi float [ %38, %35 ], [ %22, %39 ]
  %45 = insertelement <2 x float> undef, float %13, i32 0
  %46 = insertelement <2 x float> %45, float %44, i32 1
  br i1 %29, label %47, label %49

47:                                               ; preds = %43
  %48 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %46)
  br label %272

49:                                               ; preds = %43
  %50 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %46)
  br label %272

51:                                               ; preds = %39
  %52 = bitcast %struct.SkPoint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 0
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  %55 = bitcast %struct.SkPoint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 0
  %57 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  %58 = fmul float %2, 0x3F91DF46A0000000
  %59 = fadd float %2, %3
  %60 = fmul float %59, 0x3F91DF46A0000000
  %61 = tail call float @sinf(float %58) #11
  %62 = tail call float @llvm.fabs.f32(float %61) #11
  %63 = fcmp ole float %62, 0x3F30000000000000
  %64 = select i1 %63, float 0.000000e+00, float %61
  store float %64, float* %54, align 4
  %65 = tail call float @cosf(float %58) #11
  %66 = tail call float @llvm.fabs.f32(float %65) #11
  %67 = fcmp ole float %66, 0x3F30000000000000
  %68 = select i1 %67, float 0.000000e+00, float %65
  store float %68, float* %53, align 4
  %69 = tail call float @sinf(float %60) #11
  %70 = tail call float @llvm.fabs.f32(float %69) #11
  %71 = fcmp ole float %70, 0x3F30000000000000
  %72 = select i1 %71, float 0.000000e+00, float %69
  store float %72, float* %57, align 4
  %73 = tail call float @cosf(float %60) #11
  %74 = tail call float @llvm.fabs.f32(float %73) #11
  %75 = fcmp ole float %74, 0x3F30000000000000
  %76 = select i1 %75, float 0.000000e+00, float %73
  store float %76, float* %56, align 4
  %77 = fcmp oeq float %68, %76
  %78 = fcmp oeq float %64, %72
  %79 = and i1 %77, %78
  br i1 %79, label %80, label %102

80:                                               ; preds = %51
  %81 = tail call float @llvm.fabs.f32(float %3) #11
  %82 = fcmp olt float %81, 3.600000e+02
  %83 = fcmp ogt float %81, 3.590000e+02
  %84 = and i1 %82, %83
  br i1 %84, label %85, label %102

85:                                               ; preds = %80
  %86 = tail call float @llvm.copysign.f32(float 0x3F60000000000000, float %3) #11
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi float [ %60, %85 ], [ %89, %87 ]
  %89 = fsub float %88, %86
  %90 = tail call float @sinf(float %89) #11
  %91 = tail call float @llvm.fabs.f32(float %90) #11
  %92 = fcmp ole float %91, 0x3F30000000000000
  %93 = select i1 %92, float 0.000000e+00, float %90
  %94 = tail call float @cosf(float %89) #11
  %95 = tail call float @llvm.fabs.f32(float %94) #11
  %96 = fcmp ole float %95, 0x3F30000000000000
  %97 = select i1 %96, float 0.000000e+00, float %94
  %98 = fcmp oeq float %68, %97
  %99 = fcmp oeq float %64, %93
  %100 = and i1 %98, %99
  br i1 %100, label %87, label %101

101:                                              ; preds = %87
  store float %93, float* %57, align 4
  store float %97, float* %56, align 4
  br label %102

102:                                              ; preds = %101, %51, %80
  %103 = phi float [ %93, %101 ], [ %72, %51 ], [ %72, %80 ]
  %104 = phi float [ %97, %101 ], [ %76, %51 ], [ %76, %80 ]
  %105 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  %106 = getelementptr inbounds <2 x float>, <2 x float>* %9, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %106, align 8
  %107 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %107, align 4
  %108 = fcmp oeq float %68, %104
  %109 = fcmp oeq float %64, %103
  %110 = and i1 %108, %109
  br i1 %110, label %111, label %158

111:                                              ; preds = %102
  %112 = load float, float* %12, align 4
  %113 = load float, float* %14, align 4
  %114 = fsub float %112, %113
  %115 = fmul float %114, 5.000000e-01
  %116 = load float, float* %19, align 4
  %117 = load float, float* %21, align 4
  %118 = fsub float %116, %117
  %119 = fmul float %118, 5.000000e-01
  %120 = fmul float %113, 5.000000e-01
  %121 = fmul float %112, 5.000000e-01
  %122 = fadd float %121, %120
  %123 = tail call float @cosf(float %60) #11
  %124 = fmul float %115, %123
  %125 = fadd float %122, %124
  %126 = load float, float* %21, align 4
  %127 = fmul float %126, 5.000000e-01
  %128 = load float, float* %19, align 4
  %129 = fmul float %128, 5.000000e-01
  %130 = fadd float %127, %129
  %131 = tail call float @sinf(float %60) #11
  %132 = fmul float %119, %131
  %133 = fadd float %130, %132
  store float %125, float* %106, align 8
  store float %133, float* %107, align 4
  br i1 %29, label %134, label %137

134:                                              ; preds = %111
  %135 = load <2 x float>, <2 x float>* %9, align 8
  %136 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %135) #11
  br label %271

137:                                              ; preds = %111
  %138 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %139 = load %struct.SkPoint*, %struct.SkPoint** %138, align 8
  %140 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = add nsw i32 %141, -1
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %143, i32 0
  %145 = load float, float* %144, align 4
  %146 = fsub float %145, %125
  %147 = tail call float @llvm.fabs.f32(float %146) #11
  %148 = fcmp ugt float %147, 0x3F30000000000000
  br i1 %148, label %155, label %149

149:                                              ; preds = %137
  %150 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %139, i64 %143, i32 1
  %151 = load float, float* %150, align 4
  %152 = fsub float %151, %133
  %153 = tail call float @llvm.fabs.f32(float %152) #11
  %154 = fcmp ugt float %153, 0x3F30000000000000
  br i1 %154, label %155, label %271

155:                                              ; preds = %149, %137
  %156 = load <2 x float>, <2 x float>* %9, align 8
  %157 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %156) #11
  br label %271

158:                                              ; preds = %102
  %159 = fcmp ule float %3, 0.000000e+00
  %160 = zext i1 %159 to i32
  %161 = bitcast [5 x %struct.SkConic]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 140, i8* nonnull %161) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %161, i8 -1, i64 140, i1 false)
  %162 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %11, i64 0, i64 0
  %163 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %163) #11
  %164 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %165 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %165, align 16
  %166 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %167 = bitcast float* %166 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %167, align 16
  %168 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %168, align 16
  store i32 16, i32* %164, align 4
  %169 = load float, float* %12, align 4
  %170 = load float, float* %14, align 4
  %171 = fsub float %169, %170
  %172 = fmul float %171, 5.000000e-01
  %173 = load float, float* %19, align 4
  %174 = load float, float* %21, align 4
  %175 = fsub float %173, %174
  %176 = fmul float %175, 5.000000e-01
  %177 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %6, float %172, float %176) #11
  %178 = load float, float* %14, align 4
  %179 = fmul float %178, 5.000000e-01
  %180 = load float, float* %12, align 4
  %181 = fmul float %180, 5.000000e-01
  %182 = fadd float %179, %181
  %183 = load float, float* %21, align 4
  %184 = fmul float %183, 5.000000e-01
  %185 = load float, float* %19, align 4
  %186 = fmul float %185, 5.000000e-01
  %187 = fadd float %184, %186
  %188 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %6, float %182, float %187) #11
  %189 = call i32 @_ZN7SkConic12BuildUnitArcERK7SkPointS2_19SkRotationDirectionPK8SkMatrixPS_(%struct.SkPoint* nonnull dereferenceable(8) %7, %struct.SkPoint* nonnull dereferenceable(8) %8, i32 %160, %class.SkMatrix* nonnull %6, %struct.SkConic* nonnull %162) #11
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %241, label %191

191:                                              ; preds = %158
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %163) #11
  %192 = shl nsw i32 %189, 1
  %193 = or i32 %192, 1
  call void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder* %0, i32 %193, i32 %193) #11
  br i1 %29, label %194, label %198

194:                                              ; preds = %191
  %195 = bitcast [5 x %struct.SkConic]* %11 to <2 x float>*
  %196 = load <2 x float>, <2 x float>* %195, align 16
  %197 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %196) #11
  br label %224

198:                                              ; preds = %191
  %199 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %200 = load %struct.SkPoint*, %struct.SkPoint** %199, align 8
  %201 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %202 = load i32, i32* %201, align 4
  %203 = add nsw i32 %202, -1
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %200, i64 %204, i32 0
  %206 = load float, float* %205, align 4
  %207 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %11, i64 0, i64 0, i32 0, i64 0, i32 0
  %208 = load float, float* %207, align 16
  %209 = fsub float %206, %208
  %210 = call float @llvm.fabs.f32(float %209) #11
  %211 = fcmp ugt float %210, 0x3F30000000000000
  br i1 %211, label %220, label %212

212:                                              ; preds = %198
  %213 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %200, i64 %204, i32 1
  %214 = load float, float* %213, align 4
  %215 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %11, i64 0, i64 0, i32 0, i64 0, i32 1
  %216 = load float, float* %215, align 4
  %217 = fsub float %214, %216
  %218 = call float @llvm.fabs.f32(float %217) #11
  %219 = fcmp ugt float %218, 0x3F30000000000000
  br i1 %219, label %220, label %224

220:                                              ; preds = %212, %198
  %221 = bitcast [5 x %struct.SkConic]* %11 to <2 x float>*
  %222 = load <2 x float>, <2 x float>* %221, align 16
  %223 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %222) #11
  br label %224

224:                                              ; preds = %194, %212, %220
  %225 = icmp sgt i32 %189, 0
  br i1 %225, label %226, label %270

226:                                              ; preds = %224
  %227 = zext i32 %189 to i64
  br label %228

228:                                              ; preds = %228, %226
  %229 = phi i64 [ 0, %226 ], [ %239, %228 ]
  %230 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %11, i64 0, i64 %229, i32 0, i64 1
  %231 = bitcast %struct.SkPoint* %230 to <2 x float>*
  %232 = load <2 x float>, <2 x float>* %231, align 4
  %233 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %11, i64 0, i64 %229, i32 0, i64 2
  %234 = bitcast %struct.SkPoint* %233 to <2 x float>*
  %235 = load <2 x float>, <2 x float>* %234, align 4
  %236 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %11, i64 0, i64 %229, i32 1
  %237 = load float, float* %236, align 4
  %238 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %232, <2 x float> %235, float %237)
  %239 = add nuw nsw i64 %229, 1
  %240 = icmp eq i64 %239, %227
  br i1 %240, label %270, label %228

241:                                              ; preds = %158
  %242 = load float, float* %56, align 4
  %243 = load float, float* %57, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* nonnull %6, float %242, float %243, %struct.SkPoint* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %163) #11
  br i1 %29, label %244, label %247

244:                                              ; preds = %241
  %245 = load <2 x float>, <2 x float>* %9, align 8
  %246 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %245) #11
  br label %270

247:                                              ; preds = %241
  %248 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %249 = load %struct.SkPoint*, %struct.SkPoint** %248, align 8
  %250 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %251 = load i32, i32* %250, align 4
  %252 = add nsw i32 %251, -1
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %249, i64 %253, i32 0
  %255 = load float, float* %254, align 4
  %256 = load float, float* %106, align 8
  %257 = fsub float %255, %256
  %258 = call float @llvm.fabs.f32(float %257) #11
  %259 = fcmp ugt float %258, 0x3F30000000000000
  br i1 %259, label %267, label %260

260:                                              ; preds = %247
  %261 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %249, i64 %253, i32 1
  %262 = load float, float* %261, align 4
  %263 = load float, float* %107, align 4
  %264 = fsub float %262, %263
  %265 = call float @llvm.fabs.f32(float %264) #11
  %266 = fcmp ugt float %265, 0x3F30000000000000
  br i1 %266, label %267, label %270

267:                                              ; preds = %260, %247
  %268 = load <2 x float>, <2 x float>* %9, align 8
  %269 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %268) #11
  br label %270

270:                                              ; preds = %228, %224, %267, %260, %244
  call void @llvm.lifetime.end.p0i8(i64 140, i8* nonnull %161) #11
  br label %271

271:                                              ; preds = %155, %149, %134, %270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %272

272:                                              ; preds = %271, %49, %47, %5, %18
  %273 = phi %class.SkPathBuilder* [ %0, %18 ], [ %0, %5 ], [ %0, %271 ], [ %48, %47 ], [ %50, %49 ]
  ret %class.SkPathBuilder* %273
}

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6addArcERK6SkRectff(%class.SkPathBuilder*, %struct.SkRect* readonly dereferenceable(16), float, float) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %8 = load float, float* %7, align 4
  %9 = fcmp olt float %6, %8
  br i1 %9, label %10, label %41

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %14 = load float, float* %13, align 4
  %15 = fcmp uge float %12, %14
  %16 = fcmp oeq float %3, 0.000000e+00
  %17 = or i1 %16, %15
  br i1 %17, label %41, label %18

18:                                               ; preds = %10
  %19 = fcmp oge float %3, 3.600000e+02
  %20 = fcmp ole float %3, -3.600000e+02
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %39

22:                                               ; preds = %18
  %23 = fdiv float %2, 9.000000e+01
  %24 = fadd float %23, 5.000000e-01
  %25 = tail call float @llvm.floor.f32(float %24)
  %26 = fsub float %23, %25
  %27 = tail call float @llvm.fabs.f32(float %26) #11
  %28 = fcmp ugt float %27, 0x3F30000000000000
  br i1 %28, label %39, label %29

29:                                               ; preds = %22
  %30 = fadd float %25, 1.000000e+00
  %31 = tail call float @fmodf(float %30, float 4.000000e+00) #11
  %32 = fcmp olt float %31, 0.000000e+00
  %33 = fadd float %31, 4.000000e+00
  %34 = select i1 %32, float %33, float %31
  %35 = fcmp ule float %3, 0.000000e+00
  %36 = zext i1 %35 to i32
  %37 = fptoui float %34 to i32
  %38 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addOvalERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* %0, %struct.SkRect* dereferenceable(16) %1, i32 %36, i32 %37)
  br label %41

39:                                               ; preds = %22, %18
  %40 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5arcToERK6SkRectffb(%class.SkPathBuilder* %0, %struct.SkRect* dereferenceable(16) %1, float %2, float %3, i1 zeroext true)
  br label %41

41:                                               ; preds = %4, %29, %39, %10
  %42 = phi %class.SkPathBuilder* [ %0, %10 ], [ %40, %39 ], [ %38, %29 ], [ %0, %4 ]
  ret %class.SkPathBuilder* %42
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addOvalERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* returned, %struct.SkRect* nocapture readonly dereferenceable(16), i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.(anonymous namespace)::OvalPointIterator", align 8
  %6 = alloca %"class.(anonymous namespace)::RectPointIterator", align 8
  %7 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder* %0, i32 9, i32 6)
  %9 = bitcast %"class.(anonymous namespace)::OvalPointIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.(anonymous namespace)::OvalPointIterator", %"class.(anonymous namespace)::OvalPointIterator"* %5, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.(anonymous namespace)::OvalPointIterator", %"class.(anonymous namespace)::OvalPointIterator"* %5, i64 0, i32 0, i32 2
  %12 = and i32 %3, 3
  store i32 %12, i32* %10, align 8
  %13 = icmp eq i32 %2, 0
  %14 = select i1 %13, i32 1, i32 3
  store i32 %14, i32* %11, align 4
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = fmul float %16, 5.000000e-01
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %19 = load float, float* %18, align 4
  %20 = fmul float %19, 5.000000e-01
  %21 = fadd float %17, %20
  %22 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = fmul float %23, 5.000000e-01
  %25 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %26 = load float, float* %25, align 4
  %27 = fmul float %26, 5.000000e-01
  %28 = fadd float %24, %27
  %29 = insertelement <2 x float> undef, float %21, i32 0
  %30 = insertelement <2 x float> %29, float %23, i32 1
  %31 = bitcast %"class.(anonymous namespace)::OvalPointIterator"* %5 to <2 x float>*
  store <2 x float> %30, <2 x float>* %31, align 8
  %32 = insertelement <2 x float> undef, float %19, i32 0
  %33 = insertelement <2 x float> %32, float %28, i32 1
  %34 = getelementptr inbounds %"class.(anonymous namespace)::OvalPointIterator", %"class.(anonymous namespace)::OvalPointIterator"* %5, i64 0, i32 0, i32 0, i64 1
  %35 = bitcast %struct.SkPoint* %34 to <2 x float>*
  store <2 x float> %33, <2 x float>* %35, align 8
  %36 = insertelement <2 x float> %29, float %26, i32 1
  %37 = getelementptr inbounds %"class.(anonymous namespace)::OvalPointIterator", %"class.(anonymous namespace)::OvalPointIterator"* %5, i64 0, i32 0, i32 0, i64 2
  %38 = bitcast %struct.SkPoint* %37 to <2 x float>*
  store <2 x float> %36, <2 x float>* %38, align 8
  %39 = insertelement <2 x float> undef, float %16, i32 0
  %40 = insertelement <2 x float> %39, float %28, i32 1
  %41 = getelementptr inbounds %"class.(anonymous namespace)::OvalPointIterator", %"class.(anonymous namespace)::OvalPointIterator"* %5, i64 0, i32 0, i32 0, i64 3
  %42 = bitcast %struct.SkPoint* %41 to <2 x float>*
  store <2 x float> %40, <2 x float>* %42, align 8
  %43 = bitcast %"class.(anonymous namespace)::RectPointIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %6, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %6, i64 0, i32 0, i32 2
  %46 = icmp ne i32 %2, 0
  %47 = zext i1 %46 to i32
  %48 = add i32 %47, %3
  store i32 %14, i32* %45, align 4
  %49 = insertelement <2 x float> %39, float %23, i32 1
  %50 = bitcast %"class.(anonymous namespace)::RectPointIterator"* %6 to <2 x float>*
  store <2 x float> %49, <2 x float>* %50, align 8
  %51 = insertelement <2 x float> %32, float %23, i32 1
  %52 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %6, i64 0, i32 0, i32 0, i64 1
  %53 = bitcast %struct.SkPoint* %52 to <2 x float>*
  store <2 x float> %51, <2 x float>* %53, align 8
  %54 = insertelement <2 x float> %32, float %26, i32 1
  %55 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %6, i64 0, i32 0, i32 0, i64 2
  %56 = bitcast %struct.SkPoint* %55 to <2 x float>*
  store <2 x float> %54, <2 x float>* %56, align 8
  %57 = insertelement <2 x float> %39, float %26, i32 1
  %58 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %6, i64 0, i32 0, i32 0, i64 3
  %59 = bitcast %struct.SkPoint* %58 to <2 x float>*
  store <2 x float> %57, <2 x float>* %59, align 8
  %60 = zext i32 %12 to i64
  %61 = getelementptr inbounds %"class.(anonymous namespace)::OvalPointIterator", %"class.(anonymous namespace)::OvalPointIterator"* %5, i64 0, i32 0, i32 0, i64 %60
  %62 = bitcast %struct.SkPoint* %61 to <2 x float>*
  %63 = load <2 x float>, <2 x float>* %62, align 8
  %64 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %63)
  %65 = add i32 %14, %48
  %66 = and i32 %65, 3
  store i32 %66, i32* %44, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %67
  %69 = bitcast %struct.SkPoint* %68 to <2 x float>*
  %70 = load <2 x float>, <2 x float>* %69, align 8
  %71 = add i32 %14, %3
  %72 = and i32 %71, 3
  store i32 %72, i32* %10, align 8
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.(anonymous namespace)::OvalPointIterator", %"class.(anonymous namespace)::OvalPointIterator"* %5, i64 0, i32 0, i32 0, i64 %73
  %75 = bitcast %struct.SkPoint* %74 to <2 x float>*
  %76 = load <2 x float>, <2 x float>* %75, align 8
  %77 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %70, <2 x float> %76, float 0x3FE6A09E60000000)
  %78 = add i32 %14, %65
  %79 = and i32 %78, 3
  store i32 %79, i32* %44, align 8
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %80
  %82 = bitcast %struct.SkPoint* %81 to <2 x float>*
  %83 = load <2 x float>, <2 x float>* %82, align 8
  %84 = load i32, i32* %11, align 4
  %85 = add i32 %84, %71
  %86 = and i32 %85, 3
  store i32 %86, i32* %10, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"class.(anonymous namespace)::OvalPointIterator", %"class.(anonymous namespace)::OvalPointIterator"* %5, i64 0, i32 0, i32 0, i64 %87
  %89 = bitcast %struct.SkPoint* %88 to <2 x float>*
  %90 = load <2 x float>, <2 x float>* %89, align 8
  %91 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %83, <2 x float> %90, float 0x3FE6A09E60000000)
  %92 = add i32 %14, %78
  %93 = and i32 %92, 3
  store i32 %93, i32* %44, align 8
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %94
  %96 = bitcast %struct.SkPoint* %95 to <2 x float>*
  %97 = load <2 x float>, <2 x float>* %96, align 8
  %98 = add i32 %84, %85
  %99 = and i32 %98, 3
  store i32 %99, i32* %10, align 8
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"class.(anonymous namespace)::OvalPointIterator", %"class.(anonymous namespace)::OvalPointIterator"* %5, i64 0, i32 0, i32 0, i64 %100
  %102 = bitcast %struct.SkPoint* %101 to <2 x float>*
  %103 = load <2 x float>, <2 x float>* %102, align 8
  %104 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %97, <2 x float> %103, float 0x3FE6A09E60000000)
  %105 = add i32 %14, %92
  %106 = and i32 %105, 3
  store i32 %106, i32* %44, align 8
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %107
  %109 = bitcast %struct.SkPoint* %108 to <2 x float>*
  %110 = load <2 x float>, <2 x float>* %109, align 8
  %111 = add i32 %84, %98
  %112 = and i32 %111, 3
  store i32 %112, i32* %10, align 8
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.(anonymous namespace)::OvalPointIterator", %"class.(anonymous namespace)::OvalPointIterator"* %5, i64 0, i32 0, i32 0, i64 %113
  %115 = bitcast %struct.SkPoint* %114 to <2 x float>*
  %116 = load <2 x float>, <2 x float>* %115, align 8
  %117 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %110, <2 x float> %116, float 0x3FE6A09E60000000)
  %118 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* %0)
  %119 = icmp eq i32 %8, 0
  br i1 %119, label %120, label %125

120:                                              ; preds = %4
  store i32 2, i32* %7, align 8
  %121 = icmp eq i32 %2, 1
  %122 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 10
  %123 = zext i1 %121 to i8
  store i8 %123, i8* %122, align 8
  %124 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 9
  store i32 %12, i32* %124, align 4
  br label %125

125:                                              ; preds = %120, %4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #11
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5arcToE7SkPointS0_f(%class.SkPathBuilder*, <2 x float>, <2 x float>, float) local_unnamed_addr #1 align 2 {
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %struct.SkPoint*
  %7 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %13 = bitcast %struct.SkPoint* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  %15 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %14) #11
  br label %16

16:                                               ; preds = %4, %11
  %17 = fcmp oeq float %3, 0.000000e+00
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %1)
  br label %103

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %22 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %23 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, -1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %22, i64 %26, i32 0
  %28 = bitcast float* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = fsub <2 x float> %1, %29
  %31 = fpext <2 x float> %30 to <2 x double>
  %32 = fmul <2 x double> %31, %31
  %33 = extractelement <2 x double> %32, i32 0
  %34 = extractelement <2 x double> %32, i32 1
  %35 = fadd double %33, %34
  %36 = tail call double @sqrt(double %35) #11
  %37 = fdiv double 1.000000e+00, %36
  %38 = insertelement <2 x double> undef, double %37, i32 0
  %39 = shufflevector <2 x double> %38, <2 x double> undef, <2 x i32> zeroinitializer
  %40 = fmul <2 x double> %39, %31
  %41 = fsub <2 x float> %2, %1
  %42 = fpext <2 x float> %41 to <2 x double>
  %43 = fmul <2 x double> %42, %42
  %44 = extractelement <2 x double> %43, i32 0
  %45 = extractelement <2 x double> %43, i32 1
  %46 = fadd double %44, %45
  %47 = tail call double @sqrt(double %46) #11
  %48 = fdiv double 1.000000e+00, %47
  %49 = insertelement <2 x double> undef, double %48, i32 0
  %50 = shufflevector <2 x double> %49, <2 x double> undef, <2 x i32> zeroinitializer
  %51 = fmul <2 x double> %50, %42
  %52 = extractelement <2 x double> %51, i32 0
  %53 = extractelement <2 x double> %40, i32 0
  %54 = fmul double %53, %52
  %55 = extractelement <2 x double> %51, i32 1
  %56 = extractelement <2 x double> %40, i32 1
  %57 = fmul double %56, %55
  %58 = fadd double %54, %57
  %59 = fmul double %53, %55
  %60 = fmul double %56, %52
  %61 = fsub double %59, %60
  %62 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %40)
  %63 = fcmp ueq <2 x double> %62, <double 0x7FF0000000000000, double 0x7FF0000000000000>
  %64 = extractelement <2 x i1> %63, i32 0
  %65 = extractelement <2 x i1> %63, i32 1
  %66 = or i1 %65, %64
  %67 = tail call double @llvm.fabs.f64(double %52) #14
  %68 = fcmp ueq double %67, 0x7FF0000000000000
  %69 = or i1 %66, %68
  %70 = xor i1 %69, true
  %71 = tail call double @llvm.fabs.f64(double %55) #14
  %72 = fcmp one double %71, 0x7FF0000000000000
  %73 = and i1 %72, %70
  br i1 %73, label %74, label %78

74:                                               ; preds = %20
  %75 = fptrunc double %61 to float
  %76 = tail call float @llvm.fabs.f32(float %75) #11
  %77 = fcmp ugt float %76, 0x3F30000000000000
  br i1 %77, label %80, label %78

78:                                               ; preds = %74, %20
  %79 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %1)
  br label %103

80:                                               ; preds = %74
  %81 = fptrunc <2 x double> %40 to <2 x float>
  %82 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = fptrunc <2 x double> %51 to <2 x float>
  store <2 x float> %83, <2 x float>* %5, align 8
  %84 = fpext float %3 to double
  %85 = fsub double 1.000000e+00, %58
  %86 = fmul double %85, %84
  %87 = fdiv double %86, %61
  %88 = fptrunc double %87 to float
  %89 = tail call float @llvm.fabs.f32(float %88)
  %90 = insertelement <2 x float> undef, float %89, i32 0
  %91 = shufflevector <2 x float> %90, <2 x float> undef, <2 x i32> zeroinitializer
  %92 = fmul <2 x float> %91, %81
  %93 = fsub <2 x float> %1, %92
  %94 = call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nonnull %6, float %89) #11
  %95 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %93) #11
  %96 = fmul double %58, 5.000000e-01
  %97 = fadd double %96, 5.000000e-01
  %98 = fptrunc double %97 to float
  %99 = call float @sqrtf(float %98) #11
  %100 = load <2 x float>, <2 x float>* %5, align 8
  %101 = fadd <2 x float> %100, %1
  %102 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %1, <2 x float> %101, float %99)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  br label %103

103:                                              ; preds = %78, %80, %18
  %104 = phi %class.SkPathBuilder* [ %19, %18 ], [ %79, %78 ], [ %102, %80 ]
  ret %class.SkPathBuilder* %104
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

declare zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint*, float) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5arcToE7SkPointfNS_7ArcSizeE15SkPathDirectionS0_(%class.SkPathBuilder*, <2 x float>, float, i32, i32, <2 x float>) local_unnamed_addr #1 align 2 {
  %7 = alloca [2 x %struct.SkPoint], align 16
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %struct.SkPoint*
  %10 = alloca %class.SkMatrix, align 16
  %11 = alloca <2 x float>, align 8
  %12 = bitcast <2 x float>* %11 to %struct.SkPoint*
  %13 = alloca <4 x float>, align 16
  %14 = bitcast <4 x float>* %13 to [2 x %struct.SkPoint]*
  %15 = alloca <2 x float>, align 8
  %16 = bitcast <2 x float>* %15 to %struct.SkPoint*
  %17 = alloca <4 x float>, align 16
  %18 = bitcast <4 x float>* %17 to [2 x %struct.SkPoint]*
  %19 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %19, align 8
  %20 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %6
  %24 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %25 = bitcast %struct.SkPoint* %24 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %26) #11
  br label %28

28:                                               ; preds = %6, %23
  %29 = bitcast [2 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #11
  %30 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0
  %31 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 1
  %32 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %33 = bitcast [2 x %struct.SkPoint]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -1, i64 16, i1 false)
  %34 = load %struct.SkPoint*, %struct.SkPoint** %32, align 8
  %35 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %36, -1
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %34, i64 %38
  %40 = bitcast %struct.SkPoint* %39 to i64*
  %41 = bitcast [2 x %struct.SkPoint]* %7 to i64*
  %42 = load i64, i64* %40, align 4
  store i64 %42, i64* %41, align 16
  %43 = bitcast %struct.SkPoint* %31 to <2 x float>*
  store <2 x float> %5, <2 x float>* %43, align 8
  %44 = extractelement <2 x float> %1, i32 0
  %45 = fcmp une float %44, 0.000000e+00
  %46 = trunc i64 %42 to i32
  %47 = bitcast i32 %46 to float
  %48 = extractelement <2 x float> %5, i32 0
  %49 = lshr i64 %42, 32
  %50 = trunc i64 %49 to i32
  %51 = bitcast i32 %50 to float
  %52 = extractelement <2 x float> %5, i32 1
  %53 = extractelement <2 x float> %1, i32 1
  %54 = fcmp une float %53, 0.000000e+00
  %55 = and i1 %45, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %28
  %57 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %5)
  br label %267

58:                                               ; preds = %28
  %59 = fcmp oeq float %48, %47
  %60 = fcmp oeq float %52, %51
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %5)
  br label %267

64:                                               ; preds = %58
  %65 = shufflevector <2 x float> %1, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %66 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %65)
  %67 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #11
  %68 = getelementptr inbounds <2 x float>, <2 x float>* %8, i64 0, i64 0
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  %70 = fsub float %47, %48
  %71 = fsub float %51, %52
  %72 = fmul float %70, 5.000000e-01
  store float %72, float* %68, align 8
  %73 = fmul float %71, 5.000000e-01
  store float %73, float* %69, align 4
  %74 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #11
  %75 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  %76 = bitcast %class.SkMatrix* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %76, align 16
  %77 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 4
  %78 = bitcast float* %77 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %78, align 16
  %79 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %79, align 16
  store i32 16, i32* %75, align 4
  %80 = fsub float -0.000000e+00, %2
  %81 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setRotateEf(%class.SkMatrix* nonnull %10, float %80) #11
  %82 = bitcast <2 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds <2 x float>, <2 x float>* %11, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %83, align 8
  %84 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %84, align 4
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %10, %struct.SkPoint* nonnull %12, %struct.SkPoint* nonnull %9, i32 1) #11
  %85 = fmul <2 x float> %1, %1
  %86 = load <2 x float>, <2 x float>* %11, align 8
  %87 = fmul <2 x float> %86, %86
  %88 = fdiv <2 x float> %87, %85
  %89 = extractelement <2 x float> %88, i32 0
  %90 = extractelement <2 x float> %88, i32 1
  %91 = fadd float %89, %90
  %92 = fcmp ogt float %91, 1.000000e+00
  br i1 %92, label %93, label %98

93:                                               ; preds = %64
  %94 = call float @sqrtf(float %91) #11
  %95 = insertelement <2 x float> undef, float %94, i32 0
  %96 = shufflevector <2 x float> %95, <2 x float> undef, <2 x i32> zeroinitializer
  %97 = fmul <2 x float> %66, %96
  br label %98

98:                                               ; preds = %93, %64
  %99 = phi <2 x float> [ %97, %93 ], [ %66, %64 ]
  %100 = extractelement <2 x float> %99, i32 1
  %101 = fdiv float 1.000000e+00, %100
  %102 = extractelement <2 x float> %99, i32 0
  %103 = fdiv float 1.000000e+00, %102
  %104 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %10, float %101, float %103) #11
  %105 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preRotateEf(%class.SkMatrix* nonnull %10, float %80) #11
  %106 = bitcast <4 x float>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #11
  %107 = bitcast <4 x float>* %13 to %struct.SkPoint*
  %108 = getelementptr inbounds <4 x float>, <4 x float>* %13, i64 0, i64 0
  %109 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %14, i64 0, i64 0, i32 1
  %110 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %14, i64 0, i64 1
  %111 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %110, i64 0, i32 0
  %112 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %14, i64 0, i64 1, i32 1
  %113 = bitcast <4 x float>* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %113, i8 -1, i64 16, i1 false)
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %10, %struct.SkPoint* nonnull %107, %struct.SkPoint* nonnull %30, i32 2) #11
  %114 = bitcast <2 x float>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #11
  %115 = bitcast %struct.SkPoint* %110 to <2 x float>*
  %116 = load <2 x float>, <2 x float>* %115, align 8
  %117 = bitcast <4 x float>* %13 to <2 x float>*
  %118 = load <2 x float>, <2 x float>* %117, align 16
  %119 = fsub <2 x float> %116, %118
  store <2 x float> %119, <2 x float>* %15, align 8
  %120 = fmul <2 x float> %119, %119
  %121 = extractelement <2 x float> %120, i32 0
  %122 = extractelement <2 x float> %120, i32 1
  %123 = fadd float %121, %122
  %124 = fdiv float 1.000000e+00, %123
  %125 = fadd float %124, -2.500000e-01
  %126 = fcmp olt float %125, 0.000000e+00
  %127 = select i1 %126, float 0.000000e+00, float %125
  %128 = call float @sqrtf(float %127) #11
  %129 = icmp eq i32 %4, 1
  %130 = icmp ne i32 %3, 0
  %131 = xor i1 %130, %129
  %132 = fsub float -0.000000e+00, %128
  %133 = select i1 %131, float %132, float %128
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %16, float %133, %struct.SkPoint* nonnull %16) #11
  %134 = load <4 x float>, <4 x float>* %13, align 16
  %135 = shufflevector <4 x float> %134, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %136 = shufflevector <4 x float> %134, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %137 = fadd <2 x float> %135, %136
  %138 = fmul <2 x float> %137, <float 5.000000e-01, float 5.000000e-01>
  %139 = load <2 x float>, <2 x float>* %15, align 8
  %140 = shufflevector <2 x float> %139, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %141 = fsub <2 x float> %138, %140
  %142 = fadd <2 x float> %138, %140
  %143 = shufflevector <2 x float> %141, <2 x float> %142, <2 x i32> <i32 0, i32 3>
  %144 = shufflevector <2 x float> %143, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %145 = fsub <4 x float> %134, %144
  store <4 x float> %145, <4 x float>* %13, align 16
  %146 = extractelement <4 x float> %145, i32 0
  %147 = extractelement <4 x float> %145, i32 1
  %148 = call float @atan2f(float %147, float %146) #11
  %149 = load float, float* %112, align 4
  %150 = load float, float* %111, align 8
  %151 = call float @atan2f(float %149, float %150) #11
  %152 = fsub float %151, %148
  %153 = fcmp olt float %152, 0.000000e+00
  %154 = icmp eq i32 %4, 0
  %155 = and i1 %154, %153
  br i1 %155, label %156, label %158

156:                                              ; preds = %98
  %157 = fadd float %152, 0x401921FB60000000
  br label %164

158:                                              ; preds = %98
  %159 = fcmp ogt float %152, 0.000000e+00
  %160 = icmp ne i32 %4, 0
  %161 = and i1 %160, %159
  %162 = fadd float %152, 0xC01921FB60000000
  %163 = select i1 %161, float %162, float %152
  br label %164

164:                                              ; preds = %158, %156
  %165 = phi float [ %157, %156 ], [ %163, %158 ]
  %166 = call float @llvm.fabs.f32(float %165)
  %167 = fcmp olt float %166, 0x3ECA5A84E0000000
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %5)
  br label %265

170:                                              ; preds = %164
  %171 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setRotateEf(%class.SkMatrix* nonnull %10, float %2) #11
  %172 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* nonnull %10, float %100, float %102) #11
  %173 = fdiv float %165, 0x4000C15240000000
  %174 = call float @llvm.fabs.f32(float %173)
  %175 = call float @llvm.ceil.f32(float %174)
  %176 = fcmp olt float %175, 0x41DFFFFFE0000000
  %177 = select i1 %176, float %175, float 0x41DFFFFFE0000000
  %178 = fcmp ogt float %177, 0xC1DFFFFFE0000000
  %179 = select i1 %178, float %177, float 0xC1DFFFFFE0000000
  %180 = fptosi float %179 to i32
  %181 = sitofp i32 %180 to float
  %182 = fdiv float %165, %181
  %183 = fmul float %182, 5.000000e-01
  %184 = call float @tanf(float %183) #11
  %185 = bitcast float %184 to i32
  %186 = and i32 %185, 2139095040
  %187 = icmp eq i32 %186, 2139095040
  br i1 %187, label %265, label %188

188:                                              ; preds = %170
  %189 = call float @cosf(float %182) #11
  %190 = fmul float %189, 5.000000e-01
  %191 = fadd float %190, 5.000000e-01
  %192 = call float @sqrtf(float %191) #11
  %193 = call float @llvm.fabs.f32(float %182)
  %194 = fsub float 0x3FF921FB60000000, %193
  %195 = call float @llvm.fabs.f32(float %194) #11
  %196 = fcmp ole float %195, 0x3F30000000000000
  %197 = call float @llvm.floor.f32(float %100) #11
  %198 = fcmp oeq float %197, %100
  %199 = and i1 %198, %196
  %200 = call float @llvm.floor.f32(float %102) #11
  %201 = fcmp oeq float %200, %102
  %202 = and i1 %201, %199
  br i1 %202, label %203, label %211

203:                                              ; preds = %188
  %204 = extractelement <2 x float> %5, i32 0
  %205 = call float @llvm.floor.f32(float %204) #11
  %206 = fcmp oeq float %205, %204
  br i1 %206, label %207, label %211

207:                                              ; preds = %203
  %208 = extractelement <2 x float> %5, i32 1
  %209 = call float @llvm.floor.f32(float %208) #11
  %210 = fcmp oeq float %209, %208
  br label %211

211:                                              ; preds = %207, %203, %188
  %212 = phi i1 [ false, %203 ], [ false, %188 ], [ %210, %207 ]
  %213 = icmp sgt i32 %180, 0
  br i1 %213, label %214, label %224

214:                                              ; preds = %211
  %215 = bitcast %struct.SkPoint* %110 to i64*
  %216 = bitcast <4 x float>* %17 to i8*
  %217 = bitcast <4 x float>* %17 to %struct.SkPoint*
  %218 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %18, i64 0, i64 1
  %219 = bitcast <4 x float>* %17 to <2 x float>*
  %220 = bitcast %struct.SkPoint* %218 to <2 x float>*
  %221 = bitcast <4 x float>* %17 to i8*
  %222 = extractelement <2 x float> %141, i32 0
  %223 = extractelement <2 x float> %142, i32 1
  br label %231

224:                                              ; preds = %259, %211
  %225 = load %struct.SkPoint*, %struct.SkPoint** %32, align 8
  %226 = load i32, i32* %35, align 4
  %227 = add nsw i32 %226, -1
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %225, i64 %228
  %230 = bitcast %struct.SkPoint* %229 to <2 x float>*
  store <2 x float> %5, <2 x float>* %230, align 4
  br label %265

231:                                              ; preds = %259, %214
  %232 = phi i32 [ 0, %214 ], [ %263, %259 ]
  %233 = phi float [ %148, %214 ], [ %234, %259 ]
  %234 = fadd float %182, %233
  %235 = call float @sinf(float %234) #11
  %236 = call float @llvm.fabs.f32(float %235) #11
  %237 = fcmp ole float %236, 0x3F30000000000000
  %238 = select i1 %237, float 0.000000e+00, float %235
  %239 = call float @cosf(float %234) #11
  %240 = call float @llvm.fabs.f32(float %239) #11
  %241 = fcmp ole float %240, 0x3F30000000000000
  %242 = select i1 %241, float 0.000000e+00, float %239
  %243 = fadd float %222, %242
  store float %243, float* %111, align 8
  %244 = fadd float %223, %238
  store float %244, float* %112, align 4
  %245 = load i64, i64* %215, align 8
  %246 = fmul float %184, %238
  %247 = fmul float %184, %242
  %248 = trunc i64 %245 to i32
  %249 = bitcast i32 %248 to float
  %250 = fadd float %246, %249
  store float %250, float* %108, align 16
  %251 = lshr i64 %245, 32
  %252 = trunc i64 %251 to i32
  %253 = bitcast i32 %252 to float
  %254 = fsub float %253, %247
  store float %254, float* %109, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %216) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %221, i8 -1, i64 16, i1 false)
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %10, %struct.SkPoint* nonnull %217, %struct.SkPoint* nonnull %107, i32 2) #11
  br i1 %212, label %255, label %259

255:                                              ; preds = %231
  %256 = load <4 x float>, <4 x float>* %17, align 16
  %257 = fadd <4 x float> %256, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %258 = call <4 x float> @llvm.floor.v4f32(<4 x float> %257)
  store <4 x float> %258, <4 x float>* %17, align 16
  br label %259

259:                                              ; preds = %255, %231
  %260 = load <2 x float>, <2 x float>* %219, align 16
  %261 = load <2 x float>, <2 x float>* %220, align 8
  %262 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %260, <2 x float> %261, float %192)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %216) #11
  %263 = add nuw nsw i32 %232, 1
  %264 = icmp eq i32 %263, %180
  br i1 %264, label %224, label %231

265:                                              ; preds = %170, %224, %168
  %266 = phi %class.SkPathBuilder* [ %169, %168 ], [ %0, %170 ], [ %0, %224 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #11
  br label %267

267:                                              ; preds = %265, %62, %56
  %268 = phi %class.SkPathBuilder* [ %63, %62 ], [ %266, %265 ], [ %57, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  ret %class.SkPathBuilder* %268
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setRotateEf(%class.SkMatrix*, float) local_unnamed_addr #3

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preRotateEf(%class.SkMatrix*, float) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare float @atan2f(float, float) local_unnamed_addr #5

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

; Function Attrs: nofree nounwind
declare float @tanf(float) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addRectERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* returned, %struct.SkRect* nocapture readonly dereferenceable(16), i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.(anonymous namespace)::RectPointIterator", align 8
  tail call void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder* %0, i32 4, i32 5)
  %6 = bitcast %"class.(anonymous namespace)::RectPointIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 2
  %9 = and i32 %3, 3
  store i32 %9, i32* %7, align 8
  %10 = icmp eq i32 %2, 0
  %11 = select i1 %10, i32 1, i32 3
  store i32 %11, i32* %8, align 4
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = insertelement <2 x float> undef, float %13, i32 0
  %17 = insertelement <2 x float> %16, float %15, i32 1
  %18 = bitcast %"class.(anonymous namespace)::RectPointIterator"* %5 to <2 x float>*
  store <2 x float> %17, <2 x float>* %18, align 8
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %20 = load float, float* %19, align 4
  %21 = insertelement <2 x float> undef, float %20, i32 0
  %22 = insertelement <2 x float> %21, float %15, i32 1
  %23 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 1
  %24 = bitcast %struct.SkPoint* %23 to <2 x float>*
  store <2 x float> %22, <2 x float>* %24, align 8
  %25 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %26 = load float, float* %25, align 4
  %27 = insertelement <2 x float> %21, float %26, i32 1
  %28 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 2
  %29 = bitcast %struct.SkPoint* %28 to <2 x float>*
  store <2 x float> %27, <2 x float>* %29, align 8
  %30 = insertelement <2 x float> %16, float %26, i32 1
  %31 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 3
  %32 = bitcast %struct.SkPoint* %31 to <2 x float>*
  store <2 x float> %30, <2 x float>* %32, align 8
  %33 = zext i32 %9 to i64
  %34 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 %33
  %35 = bitcast %struct.SkPoint* %34 to <2 x float>*
  %36 = load <2 x float>, <2 x float>* %35, align 8
  %37 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %36)
  %38 = add nuw nsw i32 %11, %9
  %39 = and i32 %38, 3
  store i32 %39, i32* %7, align 8
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 %40
  %42 = bitcast %struct.SkPoint* %41 to <2 x float>*
  %43 = load <2 x float>, <2 x float>* %42, align 8
  %44 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %43)
  %45 = add nuw nsw i32 %38, %11
  %46 = and i32 %45, 3
  store i32 %46, i32* %7, align 8
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 %47
  %49 = bitcast %struct.SkPoint* %48 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 8
  %51 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %50)
  %52 = add nuw nsw i32 %45, %11
  %53 = and i32 %52, 3
  store i32 %53, i32* %7, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 %54
  %56 = bitcast %struct.SkPoint* %55 to <2 x float>*
  %57 = load <2 x float>, <2 x float>* %56, align 8
  %58 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %57)
  %59 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* %0)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  ret %class.SkPathBuilder* %59
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPathBuilder* returned, %class.SkRRect* nocapture readonly dereferenceable(52), i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.(anonymous namespace)::RectPointIterator", align 8
  %6 = alloca %"class.(anonymous namespace)::RRectPointIterator", align 8
  %7 = alloca %"class.(anonymous namespace)::RectPointIterator", align 8
  %8 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %73 [
    i32 1, label %12
    i32 0, label %12
    i32 2, label %69
  ]

12:                                               ; preds = %4, %4
  %13 = add i32 %3, 1
  %14 = lshr i32 %13, 1
  tail call void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder* %0, i32 4, i32 5) #11
  %15 = bitcast %"class.(anonymous namespace)::RectPointIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 2
  %18 = and i32 %14, 3
  store i32 %18, i32* %16, align 8
  %19 = icmp eq i32 %2, 0
  %20 = select i1 %19, i32 1, i32 3
  store i32 %20, i32* %17, align 4
  %21 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = insertelement <2 x float> undef, float %22, i32 0
  %26 = insertelement <2 x float> %25, float %24, i32 1
  %27 = bitcast %"class.(anonymous namespace)::RectPointIterator"* %5 to <2 x float>*
  store <2 x float> %26, <2 x float>* %27, align 8
  %28 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 2
  %29 = load float, float* %28, align 4
  %30 = insertelement <2 x float> undef, float %29, i32 0
  %31 = insertelement <2 x float> %30, float %24, i32 1
  %32 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 1
  %33 = bitcast %struct.SkPoint* %32 to <2 x float>*
  store <2 x float> %31, <2 x float>* %33, align 8
  %34 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 3
  %35 = load float, float* %34, align 4
  %36 = insertelement <2 x float> %30, float %35, i32 1
  %37 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 2
  %38 = bitcast %struct.SkPoint* %37 to <2 x float>*
  store <2 x float> %36, <2 x float>* %38, align 8
  %39 = insertelement <2 x float> %25, float %35, i32 1
  %40 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 3
  %41 = bitcast %struct.SkPoint* %40 to <2 x float>*
  store <2 x float> %39, <2 x float>* %41, align 8
  %42 = zext i32 %18 to i64
  %43 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 %42
  %44 = bitcast %struct.SkPoint* %43 to <2 x float>*
  %45 = load <2 x float>, <2 x float>* %44, align 8
  %46 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %45) #11
  %47 = add nuw nsw i32 %18, %20
  %48 = and i32 %47, 3
  store i32 %48, i32* %16, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 %49
  %51 = bitcast %struct.SkPoint* %50 to <2 x float>*
  %52 = load <2 x float>, <2 x float>* %51, align 8
  %53 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %52) #11
  %54 = add nuw nsw i32 %47, %20
  %55 = and i32 %54, 3
  store i32 %55, i32* %16, align 8
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 %56
  %58 = bitcast %struct.SkPoint* %57 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 8
  %60 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %59) #11
  %61 = add nuw nsw i32 %54, %20
  %62 = and i32 %61, 3
  store i32 %62, i32* %16, align 8
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %5, i64 0, i32 0, i32 0, i64 %63
  %65 = bitcast %struct.SkPoint* %64 to <2 x float>*
  %66 = load <2 x float>, <2 x float>* %65, align 8
  %67 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %66) #11
  %68 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* %0) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #11
  br label %332

69:                                               ; preds = %4
  %70 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0
  %71 = lshr i32 %3, 1
  %72 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addOvalERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* %0, %struct.SkRect* dereferenceable(16) %70, i32 %2, i32 %71)
  br label %332

73:                                               ; preds = %4
  %74 = icmp eq i32 %2, 0
  %75 = and i32 %3, 1
  %76 = icmp ne i32 %75, 0
  %77 = xor i1 %74, %76
  %78 = select i1 %77, i32 10, i32 9
  tail call void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder* %0, i32 %78, i32 %78) #11
  %79 = bitcast %"class.(anonymous namespace)::RRectPointIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %79) #11
  %80 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 1
  %81 = and i32 %3, 7
  store i32 %81, i32* %80, align 8
  %82 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 2
  %83 = select i1 %74, i32 1, i32 7
  store i32 %83, i32* %82, align 4
  %84 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 0
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 1
  %87 = load float, float* %86, align 4
  %88 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 2
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 3
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 0
  %93 = bitcast %struct.SkPoint* %92 to <2 x float>*
  %94 = load <2 x float>, <2 x float>* %93, align 4
  %95 = extractelement <2 x float> %94, i32 0
  %96 = fadd float %85, %95
  %97 = insertelement <2 x float> undef, float %96, i32 0
  %98 = insertelement <2 x float> %97, float %87, i32 1
  %99 = bitcast %"class.(anonymous namespace)::RRectPointIterator"* %6 to <2 x float>*
  store <2 x float> %98, <2 x float>* %99, align 8
  %100 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 1
  %101 = bitcast %struct.SkPoint* %100 to <2 x float>*
  %102 = load <2 x float>, <2 x float>* %101, align 4
  %103 = extractelement <2 x float> %102, i32 0
  %104 = fsub float %89, %103
  %105 = insertelement <2 x float> undef, float %104, i32 0
  %106 = insertelement <2 x float> %105, float %87, i32 1
  %107 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 1
  %108 = bitcast %struct.SkPoint* %107 to <2 x float>*
  store <2 x float> %106, <2 x float>* %108, align 8
  %109 = extractelement <2 x float> %102, i32 1
  %110 = fadd float %87, %109
  %111 = insertelement <2 x float> undef, float %89, i32 0
  %112 = insertelement <2 x float> %111, float %110, i32 1
  %113 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 2
  %114 = bitcast %struct.SkPoint* %113 to <2 x float>*
  store <2 x float> %112, <2 x float>* %114, align 8
  %115 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 2
  %116 = bitcast %struct.SkPoint* %115 to <2 x float>*
  %117 = load <2 x float>, <2 x float>* %116, align 4
  %118 = extractelement <2 x float> %117, i32 1
  %119 = fsub float %91, %118
  %120 = insertelement <2 x float> %111, float %119, i32 1
  %121 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 3
  %122 = bitcast %struct.SkPoint* %121 to <2 x float>*
  store <2 x float> %120, <2 x float>* %122, align 8
  %123 = extractelement <2 x float> %117, i32 0
  %124 = fsub float %89, %123
  %125 = insertelement <2 x float> undef, float %124, i32 0
  %126 = insertelement <2 x float> %125, float %91, i32 1
  %127 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 4
  %128 = bitcast %struct.SkPoint* %127 to <2 x float>*
  store <2 x float> %126, <2 x float>* %128, align 8
  %129 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 3
  %130 = bitcast %struct.SkPoint* %129 to <2 x float>*
  %131 = load <2 x float>, <2 x float>* %130, align 4
  %132 = extractelement <2 x float> %131, i32 0
  %133 = fadd float %85, %132
  %134 = insertelement <2 x float> undef, float %133, i32 0
  %135 = insertelement <2 x float> %134, float %91, i32 1
  %136 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 5
  %137 = bitcast %struct.SkPoint* %136 to <2 x float>*
  store <2 x float> %135, <2 x float>* %137, align 8
  %138 = extractelement <2 x float> %131, i32 1
  %139 = fsub float %91, %138
  %140 = insertelement <2 x float> undef, float %85, i32 0
  %141 = insertelement <2 x float> %140, float %139, i32 1
  %142 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 6
  %143 = bitcast %struct.SkPoint* %142 to <2 x float>*
  store <2 x float> %141, <2 x float>* %143, align 8
  %144 = extractelement <2 x float> %94, i32 1
  %145 = fadd float %87, %144
  %146 = insertelement <2 x float> %140, float %145, i32 1
  %147 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 7
  %148 = bitcast %struct.SkPoint* %147 to <2 x float>*
  store <2 x float> %146, <2 x float>* %148, align 8
  %149 = lshr i32 %3, 1
  %150 = xor i1 %74, true
  %151 = zext i1 %150 to i32
  %152 = add nuw i32 %149, %151
  %153 = bitcast %"class.(anonymous namespace)::RectPointIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %153) #11
  %154 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 1
  %155 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 2
  %156 = and i32 %152, 3
  store i32 %156, i32* %154, align 8
  %157 = select i1 %74, i32 1, i32 3
  store i32 %157, i32* %155, align 4
  %158 = load float, float* %84, align 4
  %159 = load float, float* %86, align 4
  %160 = insertelement <2 x float> undef, float %158, i32 0
  %161 = insertelement <2 x float> %160, float %159, i32 1
  %162 = bitcast %"class.(anonymous namespace)::RectPointIterator"* %7 to <2 x float>*
  store <2 x float> %161, <2 x float>* %162, align 8
  %163 = load float, float* %88, align 4
  %164 = insertelement <2 x float> undef, float %163, i32 0
  %165 = insertelement <2 x float> %164, float %159, i32 1
  %166 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 0, i64 1
  %167 = bitcast %struct.SkPoint* %166 to <2 x float>*
  store <2 x float> %165, <2 x float>* %167, align 8
  %168 = load float, float* %90, align 4
  %169 = insertelement <2 x float> %164, float %168, i32 1
  %170 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 0, i64 2
  %171 = bitcast %struct.SkPoint* %170 to <2 x float>*
  store <2 x float> %169, <2 x float>* %171, align 8
  %172 = insertelement <2 x float> %160, float %168, i32 1
  %173 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 0, i64 3
  %174 = bitcast %struct.SkPoint* %173 to <2 x float>*
  store <2 x float> %172, <2 x float>* %174, align 8
  %175 = load i32, i32* %80, align 8
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %176
  %178 = bitcast %struct.SkPoint* %177 to <2 x float>*
  %179 = load <2 x float>, <2 x float>* %178, align 8
  %180 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %179)
  br i1 %77, label %181, label %253

181:                                              ; preds = %73
  %182 = load i32, i32* %82, align 4
  %183 = add i32 %182, %175
  %184 = and i32 %183, 7
  store i32 %184, i32* %80, align 8
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %185
  %187 = bitcast %struct.SkPoint* %186 to <2 x float>*
  %188 = load <2 x float>, <2 x float>* %187, align 8
  %189 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %188)
  %190 = add nuw i32 %157, %152
  %191 = and i32 %190, 3
  store i32 %191, i32* %154, align 8
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 0, i64 %192
  %194 = bitcast %struct.SkPoint* %193 to <2 x float>*
  %195 = load <2 x float>, <2 x float>* %194, align 8
  %196 = add i32 %183, %182
  %197 = and i32 %196, 7
  store i32 %197, i32* %80, align 8
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %198
  %200 = bitcast %struct.SkPoint* %199 to <2 x float>*
  %201 = load <2 x float>, <2 x float>* %200, align 8
  %202 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %195, <2 x float> %201, float 0x3FE6A09E60000000)
  %203 = add i32 %182, %197
  %204 = and i32 %203, 7
  store i32 %204, i32* %80, align 8
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %205
  %207 = bitcast %struct.SkPoint* %206 to <2 x float>*
  %208 = load <2 x float>, <2 x float>* %207, align 8
  %209 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %208)
  %210 = add nuw i32 %157, %190
  %211 = and i32 %210, 3
  store i32 %211, i32* %154, align 8
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 0, i64 %212
  %214 = bitcast %struct.SkPoint* %213 to <2 x float>*
  %215 = load <2 x float>, <2 x float>* %214, align 8
  %216 = add i32 %203, %182
  %217 = and i32 %216, 7
  store i32 %217, i32* %80, align 8
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %218
  %220 = bitcast %struct.SkPoint* %219 to <2 x float>*
  %221 = load <2 x float>, <2 x float>* %220, align 8
  %222 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %215, <2 x float> %221, float 0x3FE6A09E60000000)
  %223 = add i32 %182, %217
  %224 = and i32 %223, 7
  store i32 %224, i32* %80, align 8
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %225
  %227 = bitcast %struct.SkPoint* %226 to <2 x float>*
  %228 = load <2 x float>, <2 x float>* %227, align 8
  %229 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %228)
  %230 = add nuw i32 %157, %210
  %231 = and i32 %230, 3
  store i32 %231, i32* %154, align 8
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 0, i64 %232
  %234 = bitcast %struct.SkPoint* %233 to <2 x float>*
  %235 = load <2 x float>, <2 x float>* %234, align 8
  %236 = add i32 %223, %182
  %237 = and i32 %236, 7
  store i32 %237, i32* %80, align 8
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %238
  %240 = bitcast %struct.SkPoint* %239 to <2 x float>*
  %241 = load <2 x float>, <2 x float>* %240, align 8
  %242 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %235, <2 x float> %241, float 0x3FE6A09E60000000)
  %243 = add i32 %182, %237
  %244 = and i32 %243, 7
  store i32 %244, i32* %80, align 8
  %245 = zext i32 %244 to i64
  %246 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %245
  %247 = bitcast %struct.SkPoint* %246 to <2 x float>*
  %248 = load <2 x float>, <2 x float>* %247, align 8
  %249 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %248)
  %250 = add nuw i32 %157, %230
  %251 = and i32 %250, 3
  store i32 %251, i32* %154, align 8
  %252 = add i32 %243, %182
  br label %318

253:                                              ; preds = %73
  %254 = add nuw i32 %157, %152
  %255 = and i32 %254, 3
  store i32 %255, i32* %154, align 8
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 0, i64 %256
  %258 = bitcast %struct.SkPoint* %257 to <2 x float>*
  %259 = load <2 x float>, <2 x float>* %258, align 8
  %260 = load i32, i32* %82, align 4
  %261 = add i32 %260, %175
  %262 = and i32 %261, 7
  store i32 %262, i32* %80, align 8
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %263
  %265 = bitcast %struct.SkPoint* %264 to <2 x float>*
  %266 = load <2 x float>, <2 x float>* %265, align 8
  %267 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %259, <2 x float> %266, float 0x3FE6A09E60000000)
  %268 = add i32 %261, %260
  %269 = and i32 %268, 7
  store i32 %269, i32* %80, align 8
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %270
  %272 = bitcast %struct.SkPoint* %271 to <2 x float>*
  %273 = load <2 x float>, <2 x float>* %272, align 8
  %274 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %273)
  %275 = add nuw i32 %157, %254
  %276 = and i32 %275, 3
  store i32 %276, i32* %154, align 8
  %277 = zext i32 %276 to i64
  %278 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 0, i64 %277
  %279 = bitcast %struct.SkPoint* %278 to <2 x float>*
  %280 = load <2 x float>, <2 x float>* %279, align 8
  %281 = add i32 %260, %269
  %282 = and i32 %281, 7
  store i32 %282, i32* %80, align 8
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %283
  %285 = bitcast %struct.SkPoint* %284 to <2 x float>*
  %286 = load <2 x float>, <2 x float>* %285, align 8
  %287 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %280, <2 x float> %286, float 0x3FE6A09E60000000)
  %288 = add i32 %281, %260
  %289 = and i32 %288, 7
  store i32 %289, i32* %80, align 8
  %290 = zext i32 %289 to i64
  %291 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %290
  %292 = bitcast %struct.SkPoint* %291 to <2 x float>*
  %293 = load <2 x float>, <2 x float>* %292, align 8
  %294 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %293)
  %295 = add nuw i32 %157, %275
  %296 = and i32 %295, 3
  store i32 %296, i32* %154, align 8
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 0, i64 %297
  %299 = bitcast %struct.SkPoint* %298 to <2 x float>*
  %300 = load <2 x float>, <2 x float>* %299, align 8
  %301 = add i32 %260, %289
  %302 = and i32 %301, 7
  store i32 %302, i32* %80, align 8
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %303
  %305 = bitcast %struct.SkPoint* %304 to <2 x float>*
  %306 = load <2 x float>, <2 x float>* %305, align 8
  %307 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %300, <2 x float> %306, float 0x3FE6A09E60000000)
  %308 = add i32 %301, %260
  %309 = and i32 %308, 7
  store i32 %309, i32* %80, align 8
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %310
  %312 = bitcast %struct.SkPoint* %311 to <2 x float>*
  %313 = load <2 x float>, <2 x float>* %312, align 8
  %314 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %313)
  %315 = add nuw i32 %157, %295
  %316 = and i32 %315, 3
  store i32 %316, i32* %154, align 8
  %317 = add i32 %260, %308
  br label %318

318:                                              ; preds = %253, %181
  %319 = phi i32 [ %317, %253 ], [ %252, %181 ]
  %320 = phi i32 [ %316, %253 ], [ %251, %181 ]
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds %"class.(anonymous namespace)::RectPointIterator", %"class.(anonymous namespace)::RectPointIterator"* %7, i64 0, i32 0, i32 0, i64 %321
  %323 = bitcast %struct.SkPoint* %322 to <2 x float>*
  %324 = load <2 x float>, <2 x float>* %323, align 8
  %325 = and i32 %319, 7
  store i32 %325, i32* %80, align 8
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds %"class.(anonymous namespace)::RRectPointIterator", %"class.(anonymous namespace)::RRectPointIterator"* %6, i64 0, i32 0, i32 0, i64 %326
  %328 = bitcast %struct.SkPoint* %327 to <2 x float>*
  %329 = load <2 x float>, <2 x float>* %328, align 8
  %330 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %324, <2 x float> %329, float 0x3FE6A09E60000000)
  %331 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* %0)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %153) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %79) #11
  br label %332

332:                                              ; preds = %69, %318, %12
  %333 = icmp eq i32 %9, 0
  br i1 %333, label %334, label %340

334:                                              ; preds = %332
  store i32 3, i32* %8, align 8
  %335 = icmp eq i32 %2, 1
  %336 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 10
  %337 = zext i1 %335 to i8
  store i8 %337, i8* %336, align 8
  %338 = and i32 %3, 7
  %339 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 9
  store i32 %338, i32* %339, align 4
  br label %340

340:                                              ; preds = %334, %332
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder9addCircleEfff15SkPathDirection(%class.SkPathBuilder* returned, float, float, float, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = fcmp ult float %3, 0.000000e+00
  br i1 %7, label %22, label %8

8:                                                ; preds = %5
  %9 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %10 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = fsub float %1, %3
  %12 = fsub float %2, %3
  %13 = fadd float %1, %3
  %14 = fadd float %2, %3
  %15 = insertelement <2 x float> undef, float %11, i32 0
  %16 = insertelement <2 x float> %15, float %12, i32 1
  %17 = insertelement <2 x float> undef, float %13, i32 0
  %18 = insertelement <2 x float> %17, float %14, i32 1
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %16, <2 x float>* %19, align 8
  %20 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %18, <2 x float>* %20, align 8
  %21 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addOvalERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* %0, %struct.SkRect* nonnull dereferenceable(16) %9, i32 %4, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  br label %22

22:                                               ; preds = %5, %8
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder10addPolygonEPK7SkPointib(%class.SkPathBuilder* returned, %struct.SkPoint* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = icmp slt i32 %2, 1
  br i1 %5, label %15, label %6

6:                                                ; preds = %4
  %7 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %8)
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %11 = add nsw i32 %2, -1
  %12 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder10polylineToEPK7SkPointi(%class.SkPathBuilder* %0, %struct.SkPoint* %10, i32 %11)
  br i1 %3, label %13, label %15

13:                                               ; preds = %6
  %14 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* %0)
  br label %15

15:                                               ; preds = %6, %13, %4
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder10polylineToEPK7SkPointi(%class.SkPathBuilder* returned, %struct.SkPoint* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %80

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 8
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 6
  %12 = bitcast %struct.SkPoint* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %13) #11
  br label %15

15:                                               ; preds = %10, %5
  tail call void @_ZN13SkPathBuilder10incReserveEii(%class.SkPathBuilder* %0, i32 %2, i32 %2)
  %16 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, %2
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

21:                                               ; preds = %15
  %22 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, %18
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %27 = load %struct.SkPoint*, %struct.SkPoint** %26, align 8
  br label %41

28:                                               ; preds = %21
  %29 = add nuw i32 %18, 4
  %30 = lshr i32 %29, 2
  %31 = add nuw i32 %30, %29
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

34:                                               ; preds = %28
  store i32 %31, i32* %22, align 8
  %35 = bitcast %class.SkPathBuilder* %0 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = sext i32 %31 to i64
  %38 = shl nsw i64 %37, 3
  %39 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %36, i64 %38) #11
  store i8* %39, i8** %35, align 8
  %40 = bitcast i8* %39 to %struct.SkPoint*
  br label %41

41:                                               ; preds = %25, %34
  %42 = phi %struct.SkPoint* [ %27, %25 ], [ %40, %34 ]
  store i32 %18, i32* %16, align 4
  %43 = sext i32 %17 to i64
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %42, i64 %43
  %45 = bitcast %struct.SkPoint* %44 to i8*
  %46 = bitcast %struct.SkPoint* %1 to i8*
  %47 = sext i32 %2 to i64
  %48 = shl nsw i64 %47, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 %48, i1 false)
  %49 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1
  %50 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, %2
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %55, label %54

54:                                               ; preds = %41
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

55:                                               ; preds = %41
  %56 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 1, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp slt i32 %57, %52
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %49, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  br label %73

62:                                               ; preds = %55
  %63 = add nuw i32 %52, 4
  %64 = lshr i32 %63, 2
  %65 = add nuw i32 %64, %63
  %66 = icmp sgt i32 %65, -1
  br i1 %66, label %68, label %67

67:                                               ; preds = %62
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

68:                                               ; preds = %62
  store i32 %65, i32* %56, align 8
  %69 = getelementptr inbounds %class.SkTDArray.0, %class.SkTDArray.0* %49, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = sext i32 %65 to i64
  %72 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %70, i64 %71) #11
  store i8* %72, i8** %69, align 8
  br label %73

73:                                               ; preds = %59, %68
  %74 = phi i8* [ %61, %59 ], [ %72, %68 ]
  store i32 %52, i32* %50, align 4
  %75 = sext i32 %51 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %76, i8 1, i64 %47, i1 false)
  %77 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 5
  %78 = load i32, i32* %77, align 8
  %79 = or i32 %78, 1
  store i32 %79, i32* %77, align 8
  br label %80

80:                                               ; preds = %73, %3
  ret %class.SkPathBuilder* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6offsetEff(%class.SkPathBuilder* readonly returned, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 0
  %5 = load %struct.SkPoint*, %struct.SkPoint** %4, align 8
  %6 = icmp eq %struct.SkPoint* %5, null
  br i1 %6, label %81, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %0, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %81, label %13

13:                                               ; preds = %7
  %14 = shl nsw i64 %10, 3
  %15 = add nsw i64 %14, -8
  %16 = lshr exact i64 %15, 3
  %17 = add nuw nsw i64 %16, 1
  %18 = icmp ult i64 %17, 4
  br i1 %18, label %19, label %21

19:                                               ; preds = %79, %13
  %20 = phi %struct.SkPoint* [ %5, %13 ], [ %23, %79 ]
  br label %82

21:                                               ; preds = %13
  %22 = and i64 %17, 4611686018427387900
  %23 = getelementptr %struct.SkPoint, %struct.SkPoint* %5, i64 %22
  %24 = insertelement <4 x float> undef, float %1, i32 0
  %25 = shufflevector <4 x float> %24, <4 x float> undef, <4 x i32> zeroinitializer
  %26 = insertelement <4 x float> undef, float %2, i32 0
  %27 = shufflevector <4 x float> %26, <4 x float> undef, <4 x i32> zeroinitializer
  %28 = add nsw i64 %22, -4
  %29 = lshr exact i64 %28, 2
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 1
  %32 = icmp eq i64 %28, 0
  br i1 %32, label %64, label %33

33:                                               ; preds = %21
  %34 = sub nuw nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %61, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %62, %35 ]
  %38 = getelementptr %struct.SkPoint, %struct.SkPoint* %5, i64 %36
  %39 = bitcast %struct.SkPoint* %38 to <8 x float>*
  %40 = load <8 x float>, <8 x float>* %39, align 4
  %41 = shufflevector <8 x float> %40, <8 x float> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %42 = shufflevector <8 x float> %40, <8 x float> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %43 = fadd <4 x float> %41, %25
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 %36, i32 1
  %45 = fadd <4 x float> %42, %27
  %46 = getelementptr inbounds float, float* %44, i64 -1
  %47 = bitcast float* %46 to <8 x float>*
  %48 = shufflevector <4 x float> %43, <4 x float> %45, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x float> %48, <8 x float>* %47, align 4
  %49 = or i64 %36, 4
  %50 = getelementptr %struct.SkPoint, %struct.SkPoint* %5, i64 %49
  %51 = bitcast %struct.SkPoint* %50 to <8 x float>*
  %52 = load <8 x float>, <8 x float>* %51, align 4
  %53 = shufflevector <8 x float> %52, <8 x float> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %54 = shufflevector <8 x float> %52, <8 x float> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %55 = fadd <4 x float> %53, %25
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 %49, i32 1
  %57 = fadd <4 x float> %54, %27
  %58 = getelementptr inbounds float, float* %56, i64 -1
  %59 = bitcast float* %58 to <8 x float>*
  %60 = shufflevector <4 x float> %55, <4 x float> %57, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x float> %60, <8 x float>* %59, align 4
  %61 = add i64 %36, 8
  %62 = add i64 %37, -2
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %35, !llvm.loop !6

64:                                               ; preds = %35, %21
  %65 = phi i64 [ 0, %21 ], [ %61, %35 ]
  %66 = icmp eq i64 %31, 0
  br i1 %66, label %79, label %67

67:                                               ; preds = %64
  %68 = getelementptr %struct.SkPoint, %struct.SkPoint* %5, i64 %65
  %69 = bitcast %struct.SkPoint* %68 to <8 x float>*
  %70 = load <8 x float>, <8 x float>* %69, align 4
  %71 = shufflevector <8 x float> %70, <8 x float> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %72 = shufflevector <8 x float> %70, <8 x float> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %73 = fadd <4 x float> %71, %25
  %74 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 %65, i32 1
  %75 = fadd <4 x float> %72, %27
  %76 = getelementptr inbounds float, float* %74, i64 -1
  %77 = bitcast float* %76 to <8 x float>*
  %78 = shufflevector <4 x float> %73, <4 x float> %75, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x float> %78, <8 x float>* %77, align 4
  br label %79

79:                                               ; preds = %64, %67
  %80 = icmp eq i64 %17, %22
  br i1 %80, label %81, label %19

81:                                               ; preds = %82, %79, %3, %7
  ret %class.SkPathBuilder* %0

82:                                               ; preds = %19, %82
  %83 = phi %struct.SkPoint* [ %90, %82 ], [ %20, %19 ]
  %84 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %83, i64 0, i32 0
  %85 = load float, float* %84, align 4
  %86 = fadd float %85, %1
  store float %86, float* %84, align 4
  %87 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %83, i64 0, i32 1
  %88 = load float, float* %87, align 4
  %89 = fadd float %88, %2
  store float %89, float* %87, align 4
  %90 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %83, i64 1
  %91 = icmp eq %struct.SkPoint* %90, %11
  br i1 %91, label %81, label %82, !llvm.loop !8
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addPathERK6SkPath(%class.SkPathBuilder* returned, %class.SkPath* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.SkPath::RawIter", align 8
  %4 = alloca [4 x %struct.SkPoint], align 16
  %5 = bitcast %"class.SkPath::RawIter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %3, i64 0, i32 3, i64 0
  %8 = bitcast i8* %7 to i32*
  store i32 -1431655766, i32* %8, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 52, i1 false) #11
  call void @_ZN6SkPath7RawIter7setPathERKS_(%"class.SkPath::RawIter"* nonnull %3, %class.SkPath* dereferenceable(16) %1) #11
  %9 = bitcast [4 x %struct.SkPoint]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #11
  %10 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 0
  %11 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 1
  %12 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 2
  %13 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 3
  %14 = bitcast %struct.SkPoint* %11 to <2 x float>*
  %15 = bitcast %struct.SkPoint* %12 to <2 x float>*
  %16 = bitcast %struct.SkPoint* %13 to <2 x float>*
  %17 = bitcast [4 x %struct.SkPoint]* %4 to <2 x float>*
  %18 = bitcast [4 x %struct.SkPoint]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -1, i64 32, i1 false)
  br label %19

19:                                               ; preds = %21, %2
  %20 = call i32 @_ZN6SkPath7RawIter4nextEP7SkPoint(%"class.SkPath::RawIter"* nonnull %3, %struct.SkPoint* nonnull %10) #11
  switch i32 %20, label %21 [
    i32 6, label %44
    i32 0, label %22
    i32 1, label %25
    i32 2, label %28
    i32 4, label %32
    i32 3, label %37
    i32 5, label %42
  ]

21:                                               ; preds = %19, %42, %37, %32, %28, %25, %22
  br label %19

22:                                               ; preds = %19
  %23 = load <2 x float>, <2 x float>* %17, align 16
  %24 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %23)
  br label %21

25:                                               ; preds = %19
  %26 = load <2 x float>, <2 x float>* %14, align 8
  %27 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %26)
  br label %21

28:                                               ; preds = %19
  %29 = load <2 x float>, <2 x float>* %14, align 8
  %30 = load <2 x float>, <2 x float>* %15, align 16
  %31 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder* %0, <2 x float> %29, <2 x float> %30)
  br label %21

32:                                               ; preds = %19
  %33 = load <2 x float>, <2 x float>* %14, align 8
  %34 = load <2 x float>, <2 x float>* %15, align 16
  %35 = load <2 x float>, <2 x float>* %16, align 8
  %36 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* %0, <2 x float> %33, <2 x float> %34, <2 x float> %35)
  br label %21

37:                                               ; preds = %19
  %38 = load <2 x float>, <2 x float>* %14, align 8
  %39 = load <2 x float>, <2 x float>* %15, align 16
  %40 = load float, float* %6, align 8
  %41 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %38, <2 x float> %39, float %40)
  br label %21

42:                                               ; preds = %19
  %43 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* %0)
  br label %21

44:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #11
  ret %class.SkPathBuilder* %0
}

declare i32 @_ZN6SkPath7RawIter4nextEP7SkPoint(%"class.SkPath::RawIter"*, %struct.SkPoint*) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder21privateReverseAddPathERK6SkPath(%class.SkPathBuilder* returned, %class.SkPath* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i8* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %16 = load %struct.SkPoint*, %struct.SkPoint** %15, align 8
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 %19
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 5, i32 0
  %22 = load float*, float** %21, align 8
  %23 = icmp eq float* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 5, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds float, float* %22, i64 %27
  br label %29

29:                                               ; preds = %13, %24
  %30 = phi float* [ %28, %24 ], [ null, %13 ]
  %31 = icmp ugt i8* %14, %6
  br i1 %31, label %32, label %101

32:                                               ; preds = %29, %95
  %33 = phi i8* [ %38, %95 ], [ %14, %29 ]
  %34 = phi %struct.SkPoint* [ %99, %95 ], [ %20, %29 ]
  %35 = phi float* [ %98, %95 ], [ %30, %29 ]
  %36 = phi i8 [ %97, %95 ], [ 1, %29 ]
  %37 = phi i8 [ %96, %95 ], [ 0, %29 ]
  %38 = getelementptr inbounds i8, i8* %33, i64 -1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZZN10SkPathPriv9PtsInVerbEjE10gPtsInVerb, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = and i8 %36, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %32
  %46 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %34, i64 -1
  %47 = bitcast %struct.SkPoint* %46 to <2 x float>*
  %48 = load <2 x float>, <2 x float>* %47, align 4
  %49 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %48) #11
  br label %50

50:                                               ; preds = %32, %45
  %51 = phi i8 [ 0, %45 ], [ %36, %32 ]
  %52 = phi %struct.SkPoint* [ %46, %45 ], [ %34, %32 ]
  %53 = zext i8 %42 to i64
  %54 = sub nsw i64 0, %53
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 %54
  switch i8 %39, label %95 [
    i8 0, label %56
    i8 1, label %64
    i8 2, label %68
    i8 3, label %75
    i8 4, label %84
    i8 5, label %94
  ]

56:                                               ; preds = %50
  %57 = and i8 %37, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder5closeEv(%class.SkPathBuilder* %0)
  br label %61

61:                                               ; preds = %56, %59
  %62 = phi i8 [ 0, %59 ], [ %37, %56 ]
  %63 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %55, i64 1
  br label %95

64:                                               ; preds = %50
  %65 = bitcast %struct.SkPoint* %55 to <2 x float>*
  %66 = load <2 x float>, <2 x float>* %65, align 4
  %67 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %0, <2 x float> %66)
  br label %95

68:                                               ; preds = %50
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %55, i64 1
  %70 = bitcast %struct.SkPoint* %69 to <2 x float>*
  %71 = load <2 x float>, <2 x float>* %70, align 4
  %72 = bitcast %struct.SkPoint* %55 to <2 x float>*
  %73 = load <2 x float>, <2 x float>* %72, align 4
  %74 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder* %0, <2 x float> %71, <2 x float> %73)
  br label %95

75:                                               ; preds = %50
  %76 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %55, i64 1
  %77 = bitcast %struct.SkPoint* %76 to <2 x float>*
  %78 = load <2 x float>, <2 x float>* %77, align 4
  %79 = bitcast %struct.SkPoint* %55 to <2 x float>*
  %80 = load <2 x float>, <2 x float>* %79, align 4
  %81 = getelementptr inbounds float, float* %35, i64 -1
  %82 = load float, float* %81, align 4
  %83 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7conicToE7SkPointS0_f(%class.SkPathBuilder* %0, <2 x float> %78, <2 x float> %80, float %82)
  br label %95

84:                                               ; preds = %50
  %85 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %55, i64 2
  %86 = bitcast %struct.SkPoint* %85 to <2 x float>*
  %87 = load <2 x float>, <2 x float>* %86, align 4
  %88 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %55, i64 1
  %89 = bitcast %struct.SkPoint* %88 to <2 x float>*
  %90 = load <2 x float>, <2 x float>* %89, align 4
  %91 = bitcast %struct.SkPoint* %55 to <2 x float>*
  %92 = load <2 x float>, <2 x float>* %91, align 4
  %93 = tail call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* %0, <2 x float> %87, <2 x float> %90, <2 x float> %92)
  br label %95

94:                                               ; preds = %50
  br label %95

95:                                               ; preds = %50, %94, %84, %75, %68, %64, %61
  %96 = phi i8 [ %37, %50 ], [ 1, %94 ], [ %37, %84 ], [ %37, %75 ], [ %37, %68 ], [ %37, %64 ], [ %62, %61 ]
  %97 = phi i8 [ %51, %50 ], [ %51, %94 ], [ %51, %84 ], [ %51, %75 ], [ %51, %68 ], [ %51, %64 ], [ 1, %61 ]
  %98 = phi float* [ %35, %50 ], [ %35, %94 ], [ %35, %84 ], [ %81, %75 ], [ %35, %68 ], [ %35, %64 ], [ %35, %61 ]
  %99 = phi %struct.SkPoint* [ %55, %50 ], [ %55, %94 ], [ %55, %84 ], [ %55, %75 ], [ %55, %68 ], [ %55, %64 ], [ %63, %61 ]
  %100 = icmp ugt i8* %38, %6
  br i1 %100, label %32, label %101

101:                                              ; preds = %95, %29
  ret %class.SkPathBuilder* %0
}

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.copysign.f32(float, float) #6

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare i32 @_ZN7SkConic12BuildUnitArcERK7SkPointS2_19SkRotationDirectionPK8SkMatrixPS_(%struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8), i32, %class.SkMatrix*, %struct.SkConic*) local_unnamed_addr #3

declare void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix*, float, float, %struct.SkPoint*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare float @fmodf(float, float) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

declare void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint*, float, %struct.SkPoint*) local_unnamed_addr #3

declare void @_ZN6SkPath7RawIter7setPathERKS_(%"class.SkPath::RawIter"*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN9SkPathRefD1Ev(%class.SkPathRef*) unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #6

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.floor.v4f32(<4 x float>) #6

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK6SkPath9RangeIterdeEv: argument 0"}
!5 = distinct !{!5, !"_ZNK6SkPath9RangeIterdeEv"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !9, !7}
!9 = !{!"llvm.loop.unroll.runtime.disable"}
