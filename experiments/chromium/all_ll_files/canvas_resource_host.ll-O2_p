; ModuleID = '../../third_party/blink/renderer/platform/graphics/canvas_resource_host.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/canvas_resource_host.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.7", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.38", i8, i32, i32, i32, %"class.WTF::Vector", i8, i8, i64, i64, %"class.base::RepeatingCallback.54", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.70" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.7" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.29", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.12, [384 x i64], %class.sk_sp.13, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.14", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.20" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.12 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.13 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.26, %class.SkPixmap, %class.sk_sp.28 }
%class.sk_sp.26 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.27, i32, i32 }
%class.sk_sp.27 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.28 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.41, %"class.std::__1::unique_ptr.42" }
%class.scoped_refptr.41 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.49", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.49" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.53*, i32, i32 }
%class.scoped_refptr.53 = type opaque
%"class.base::RepeatingCallback.54" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.55" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.67" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68", %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.27, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.70" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasResourceHost" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.71", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::CanvasResourceProvider"* }

$_ZN5blink18CanvasResourceHostD2Ev = comdat any

$_ZN5blink18CanvasResourceHostD0Ev = comdat any

$_ZNK5blink18CanvasResourceHost17LowLatencyEnabledEv = comdat any

$_ZNK5blink18CanvasResourceHost10IsPrintingEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18CanvasResourceHostEFvPN2cc11PaintCanvasEEJNS0_17UnretainedWrapperIS4_EEEEEFvS7_EE3RunEPNS0_13BindStateBaseES7_ = comdat any

$_ZN4base8internal9BindStateIMN5blink18CanvasResourceHostEFvPN2cc11PaintCanvasEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN5blink18CanvasResourceHostE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CanvasResourceHost"*)* @_ZN5blink18CanvasResourceHostD2Ev to i8*), i8* bitcast (void (%"class.blink::CanvasResourceHost"*)* @_ZN5blink18CanvasResourceHostD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::CanvasResourceHost"*, i32)* @_ZN5blink18CanvasResourceHost16SetFilterQualityE15SkFilterQuality to i8*), i8* bitcast (i1 (%"class.blink::CanvasResourceHost"*)* @_ZNK5blink18CanvasResourceHost17LowLatencyEnabledEv to i8*), i8* bitcast (void (%"class.blink::CanvasResourceHost"*)* @_ZN5blink18CanvasResourceHost23DiscardResourceProviderEv to i8*), i8* bitcast (i1 (%"class.blink::CanvasResourceHost"*)* @_ZNK5blink18CanvasResourceHost10IsPrintingEv to i8*)] }, align 8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CanvasResourceProvider"* @_ZNK5blink18CanvasResourceHost16ResourceProviderEv(%"class.blink::CanvasResourceHost"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasResourceHost", %"class.blink::CanvasResourceHost"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %2, align 8
  ret %"class.blink::CanvasResourceProvider"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CanvasResourceProvider"* @_ZN5blink18CanvasResourceHost23ReplaceResourceProviderENSt3__110unique_ptrINS_22CanvasResourceProviderENS1_14default_deleteIS3_EEEE(%"class.blink::CanvasResourceHost"*, %"class.blink::CanvasResourceProvider"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::RepeatingCallback.54", align 8
  %4 = alloca %"class.base::RepeatingCallback.54", align 8
  %5 = ptrtoint %"class.blink::CanvasResourceProvider"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::CanvasResourceHost", %"class.blink::CanvasResourceHost"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr.71"* %6 to i64*
  %9 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %7, align 8
  store i64 %5, i64* %8, align 8
  %10 = bitcast %"class.blink::CanvasResourceHost"* %0 to void (%"class.blink::CanvasResourceHost"*)***
  %11 = load void (%"class.blink::CanvasResourceHost"*)**, void (%"class.blink::CanvasResourceHost"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::CanvasResourceHost"*)*, void (%"class.blink::CanvasResourceHost"*)** %11, i64 5
  %13 = load void (%"class.blink::CanvasResourceHost"*)*, void (%"class.blink::CanvasResourceHost"*)** %12, align 8
  tail call void %13(%"class.blink::CanvasResourceHost"* %0) #8
  %14 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %7, align 8
  %15 = icmp eq %"class.blink::CanvasResourceProvider"* %14, null
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = tail call %"class.cc::PaintCanvas"* @_ZN5blink22CanvasResourceProvider6CanvasEb(%"class.blink::CanvasResourceProvider"* nonnull %14, i1 zeroext false) #8
  %18 = bitcast %"class.cc::PaintCanvas"* %17 to void (%"class.cc::PaintCanvas"*, i32)***
  %19 = load void (%"class.cc::PaintCanvas"*, i32)**, void (%"class.cc::PaintCanvas"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, i32)*, void (%"class.cc::PaintCanvas"*, i32)** %19, i64 10
  %21 = load void (%"class.cc::PaintCanvas"*, i32)*, void (%"class.cc::PaintCanvas"*, i32)** %20, align 8
  tail call void %21(%"class.cc::PaintCanvas"* %17, i32 1) #8
  %22 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %7, align 8
  %23 = tail call %"class.cc::PaintCanvas"* @_ZN5blink22CanvasResourceProvider6CanvasEb(%"class.blink::CanvasResourceProvider"* %22, i1 zeroext false) #8
  %24 = bitcast %"class.cc::PaintCanvas"* %23 to i32 (%"class.cc::PaintCanvas"*)***
  %25 = load i32 (%"class.cc::PaintCanvas"*)**, i32 (%"class.cc::PaintCanvas"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %25, i64 5
  %27 = load i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %26, align 8
  %28 = tail call i32 %27(%"class.cc::PaintCanvas"* %23) #8
  %29 = bitcast %"class.blink::CanvasResourceHost"* %0 to void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)***
  %30 = load void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)**, void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)*, void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)** %30, i64 4
  %32 = load void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)*, void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)** %31, align 8
  tail call void %32(%"class.blink::CanvasResourceHost"* %0, %"class.cc::PaintCanvas"* %23) #8
  %33 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %7, align 8
  %34 = ptrtoint %"class.blink::CanvasResourceHost"* %0 to i64
  %35 = tail call i8* @_Znwm(i64 56) #9, !noalias !2
  %36 = bitcast i8* %35 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %36, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.cc::PaintCanvas"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18CanvasResourceHostEFvPN2cc11PaintCanvasEEJNS0_17UnretainedWrapperIS4_EEEEEFvS7_EE3RunEPNS0_13BindStateBaseES7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink18CanvasResourceHostEFvPN2cc11PaintCanvasEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !2
  %37 = getelementptr inbounds i8, i8* %35, i64 32
  %38 = bitcast i8* %37 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)* @_ZN5blink18CanvasResourceHost22InitializeForRecordingEPN2cc11PaintCanvasE to i64), i64 0>, <2 x i64>* %38, align 8, !noalias !2
  %39 = getelementptr inbounds i8, i8* %35, i64 48
  %40 = bitcast i8* %39 to i64*
  store i64 %34, i64* %40, align 8, !noalias !2
  %41 = bitcast %"class.base::RepeatingCallback.54"* %3 to i8**
  store i8* %35, i8** %41, align 8, !alias.scope !2
  call void @_ZN5blink22CanvasResourceProvider27SetRestoreClipStackCallbackEN4base17RepeatingCallbackIFvPN2cc11PaintCanvasEEEE(%"class.blink::CanvasResourceProvider"* %33, %"class.base::RepeatingCallback.54"* nonnull %3) #8
  %42 = getelementptr inbounds %"class.base::RepeatingCallback.54", %"class.base::RepeatingCallback.54"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #8
  br label %43

43:                                               ; preds = %2, %16
  %44 = icmp eq %"class.blink::CanvasResourceProvider"* %9, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.base::RepeatingCallback.54", %"class.base::RepeatingCallback.54"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8
  call void @_ZN5blink22CanvasResourceProvider27SetRestoreClipStackCallbackEN4base17RepeatingCallbackIFvPN2cc11PaintCanvasEEEE(%"class.blink::CanvasResourceProvider"* nonnull %9, %"class.base::RepeatingCallback.54"* nonnull %4) #8
  %47 = getelementptr inbounds %"class.base::RepeatingCallback.54", %"class.base::RepeatingCallback.54"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #8
  br label %48

48:                                               ; preds = %43, %45
  ret %"class.blink::CanvasResourceProvider"* %9
}

declare %"class.cc::PaintCanvas"* @_ZN5blink22CanvasResourceProvider6CanvasEb(%"class.blink::CanvasResourceProvider"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18CanvasResourceHost22InitializeForRecordingEPN2cc11PaintCanvasE(%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*) #1 align 2 {
  %3 = bitcast %"class.cc::PaintCanvas"* %1 to i32 (%"class.cc::PaintCanvas"*)***
  %4 = load i32 (%"class.cc::PaintCanvas"*)**, i32 (%"class.cc::PaintCanvas"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %4, i64 5
  %6 = load i32 (%"class.cc::PaintCanvas"*)*, i32 (%"class.cc::PaintCanvas"*)** %5, align 8
  %7 = tail call i32 %6(%"class.cc::PaintCanvas"* %1) #8
  %8 = bitcast %"class.blink::CanvasResourceHost"* %0 to void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)***
  %9 = load void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)**, void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)*, void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)** %9, i64 4
  %11 = load void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)*, void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)** %10, align 8
  tail call void %11(%"class.blink::CanvasResourceHost"* %0, %"class.cc::PaintCanvas"* %1) #8
  ret void
}

declare void @_ZN5blink22CanvasResourceProvider27SetRestoreClipStackCallbackEN4base17RepeatingCallbackIFvPN2cc11PaintCanvasEEEE(%"class.blink::CanvasResourceProvider"*, %"class.base::RepeatingCallback.54"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18CanvasResourceHost23DiscardResourceProviderEv(%"class.blink::CanvasResourceHost"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasResourceHost", %"class.blink::CanvasResourceHost"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %2, align 8
  store %"class.blink::CanvasResourceProvider"* null, %"class.blink::CanvasResourceProvider"** %2, align 8
  %4 = icmp eq %"class.blink::CanvasResourceProvider"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CanvasResourceProvider"* %3 to void (%"class.blink::CanvasResourceProvider"*)***
  %7 = load void (%"class.blink::CanvasResourceProvider"*)**, void (%"class.blink::CanvasResourceProvider"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %7, i64 1
  %9 = load void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %8, align 8
  tail call void %9(%"class.blink::CanvasResourceProvider"* nonnull %3) #8
  br label %10

10:                                               ; preds = %1, %5
  %11 = bitcast %"class.blink::CanvasResourceHost"* %0 to void (%"class.blink::CanvasResourceHost"*)***
  %12 = load void (%"class.blink::CanvasResourceHost"*)**, void (%"class.blink::CanvasResourceHost"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::CanvasResourceHost"*)*, void (%"class.blink::CanvasResourceHost"*)** %12, i64 5
  %14 = load void (%"class.blink::CanvasResourceHost"*)*, void (%"class.blink::CanvasResourceHost"*)** %13, align 8
  tail call void %14(%"class.blink::CanvasResourceHost"* %0) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18CanvasResourceHost16SetFilterQualityE15SkFilterQuality(%"class.blink::CanvasResourceHost"* nocapture, i32) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::CanvasResourceHost", %"class.blink::CanvasResourceHost"* %0, i64 0, i32 2
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18CanvasResourceHostD2Ev(%"class.blink::CanvasResourceHost"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasResourceHost", %"class.blink::CanvasResourceHost"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink18CanvasResourceHostE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CanvasResourceHost", %"class.blink::CanvasResourceHost"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CanvasResourceProvider"*, %"class.blink::CanvasResourceProvider"** %3, align 8
  store %"class.blink::CanvasResourceProvider"* null, %"class.blink::CanvasResourceProvider"** %3, align 8
  %5 = icmp eq %"class.blink::CanvasResourceProvider"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::CanvasResourceProvider"* %4 to void (%"class.blink::CanvasResourceProvider"*)***
  %8 = load void (%"class.blink::CanvasResourceProvider"*)**, void (%"class.blink::CanvasResourceProvider"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %8, i64 1
  %10 = load void (%"class.blink::CanvasResourceProvider"*)*, void (%"class.blink::CanvasResourceProvider"*)** %9, align 8
  tail call void %10(%"class.blink::CanvasResourceProvider"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18CanvasResourceHostD0Ev(%"class.blink::CanvasResourceHost"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18CanvasResourceHost17LowLatencyEnabledEv(%"class.blink::CanvasResourceHost"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18CanvasResourceHost10IsPrintingEv(%"class.blink::CanvasResourceHost"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18CanvasResourceHostEFvPN2cc11PaintCanvasEEJNS0_17UnretainedWrapperIS4_EEEEEFvS7_EE3RunEPNS0_13BindStateBaseES7_(%"class.base::internal::BindStateBase"*, %"class.cc::PaintCanvas"*) #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.blink::CanvasResourceHost"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)**
  %22 = load void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)*, void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.blink::CanvasResourceHost"*, %"class.cc::PaintCanvas"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.blink::CanvasResourceHost"* %13, %"class.cc::PaintCanvas"* %1) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink18CanvasResourceHostEFvPN2cc11PaintCanvasEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5blink18CanvasResourceHostEFvPN2cc11PaintCanvasEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5blink18CanvasResourceHostEFvPN2cc11PaintCanvasEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN5blink18CanvasResourceHostEFvPN2cc11PaintCanvasEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN5blink18CanvasResourceHostEFvPN2cc11PaintCanvasEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
