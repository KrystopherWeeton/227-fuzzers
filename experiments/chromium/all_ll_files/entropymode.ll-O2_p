; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/entropymode.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/entropymode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.vp8_token_struct = type { i32, i32 }
%union.int_mv = type { i32 }
%struct.VP8Common = type { %struct.vpx_internal_error_info, [8 x i8], [128 x [2 x i16]], [128 x [2 x i16]], [128 x [2 x i16]], i32, i32, i32, i32, i32, %struct.yv12_buffer_config*, [4 x %struct.yv12_buffer_config], [4 x i32], i32, i32, i32, i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, %struct.yv12_buffer_config, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.modeinfo*, %struct.modeinfo*, %struct.modeinfo*, i32, [12 x i8], %struct.loop_filter_info_n, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32], %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES, %struct.frame_contexts, %struct.frame_contexts, i32, i32, i32, i32, %struct.postproc_state, i32, [12 x i8] }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.modeinfo = type { %struct.MB_MODE_INFO, [16 x %union.b_mode_info] }
%struct.MB_MODE_INFO = type { i8, i8, i8, i8, %union.int_mv, i8, i8, i8, i8 }
%union.b_mode_info = type { i32 }
%struct.loop_filter_info_n = type { [64 x [16 x i8]], [64 x [16 x i8]], [64 x [16 x i8]], [4 x [16 x i8]], [4 x [4 x [4 x i8]]], [2 x [64 x i8]], [10 x i8], [6 x i8] }
%struct.ENTROPY_CONTEXT_PLANES = type { [4 x i8], [2 x i8], [2 x i8], i8 }
%struct.frame_contexts = type { [9 x i8], [4 x i8], [3 x i8], [3 x i8], [4 x [8 x [3 x [11 x i8]]]], [2 x %struct.mv_context] }
%struct.mv_context = type { [19 x i8] }
%struct.postproc_state = type { i32, i32, i32, i32, i32, i8* }

@vp8_bmode_encodings = hidden local_unnamed_addr constant [10 x %struct.vp8_token_struct] [%struct.vp8_token_struct { i32 0, i32 1 }, %struct.vp8_token_struct { i32 2, i32 2 }, %struct.vp8_token_struct { i32 6, i32 3 }, %struct.vp8_token_struct { i32 28, i32 5 }, %struct.vp8_token_struct { i32 30, i32 5 }, %struct.vp8_token_struct { i32 58, i32 6 }, %struct.vp8_token_struct { i32 59, i32 6 }, %struct.vp8_token_struct { i32 62, i32 6 }, %struct.vp8_token_struct { i32 126, i32 7 }, %struct.vp8_token_struct { i32 127, i32 7 }], align 16
@vp8_ymode_encodings = hidden local_unnamed_addr constant [5 x %struct.vp8_token_struct] [%struct.vp8_token_struct { i32 0, i32 1 }, %struct.vp8_token_struct { i32 4, i32 3 }, %struct.vp8_token_struct { i32 5, i32 3 }, %struct.vp8_token_struct { i32 6, i32 3 }, %struct.vp8_token_struct { i32 7, i32 3 }], align 16
@vp8_kf_ymode_encodings = hidden local_unnamed_addr constant [5 x %struct.vp8_token_struct] [%struct.vp8_token_struct { i32 4, i32 3 }, %struct.vp8_token_struct { i32 5, i32 3 }, %struct.vp8_token_struct { i32 6, i32 3 }, %struct.vp8_token_struct { i32 7, i32 3 }, %struct.vp8_token_struct { i32 0, i32 1 }], align 16
@vp8_uv_mode_encodings = hidden local_unnamed_addr constant [4 x %struct.vp8_token_struct] [%struct.vp8_token_struct { i32 0, i32 1 }, %struct.vp8_token_struct { i32 2, i32 2 }, %struct.vp8_token_struct { i32 6, i32 3 }, %struct.vp8_token_struct { i32 7, i32 3 }], align 16
@vp8_mbsplit_encodings = hidden local_unnamed_addr constant [4 x %struct.vp8_token_struct] [%struct.vp8_token_struct { i32 6, i32 3 }, %struct.vp8_token_struct { i32 7, i32 3 }, %struct.vp8_token_struct { i32 2, i32 2 }, %struct.vp8_token_struct { i32 0, i32 1 }], align 16
@vp8_mv_ref_encoding_array = hidden local_unnamed_addr constant [5 x %struct.vp8_token_struct] [%struct.vp8_token_struct { i32 2, i32 2 }, %struct.vp8_token_struct { i32 6, i32 3 }, %struct.vp8_token_struct { i32 0, i32 1 }, %struct.vp8_token_struct { i32 14, i32 4 }, %struct.vp8_token_struct { i32 15, i32 4 }], align 16
@vp8_sub_mv_ref_encoding_array = hidden local_unnamed_addr constant [4 x %struct.vp8_token_struct] [%struct.vp8_token_struct { i32 0, i32 1 }, %struct.vp8_token_struct { i32 2, i32 2 }, %struct.vp8_token_struct { i32 6, i32 3 }, %struct.vp8_token_struct { i32 7, i32 3 }], align 16
@vp8_small_mvencodings = hidden local_unnamed_addr constant [8 x %struct.vp8_token_struct] [%struct.vp8_token_struct { i32 0, i32 3 }, %struct.vp8_token_struct { i32 1, i32 3 }, %struct.vp8_token_struct { i32 2, i32 3 }, %struct.vp8_token_struct { i32 3, i32 3 }, %struct.vp8_token_struct { i32 4, i32 3 }, %struct.vp8_token_struct { i32 5, i32 3 }, %struct.vp8_token_struct { i32 6, i32 3 }, %struct.vp8_token_struct { i32 7, i32 3 }], align 16
@vp8_ymode_prob = hidden local_unnamed_addr constant [4 x i8] c"pV\8C%", align 1
@vp8_kf_ymode_prob = hidden local_unnamed_addr constant [4 x i8] c"\91\9C\A3\80", align 1
@vp8_uv_mode_prob = hidden local_unnamed_addr constant [3 x i8] c"\A2e\CC", align 1
@vp8_kf_uv_mode_prob = hidden local_unnamed_addr constant [3 x i8] c"\8Er\B7", align 1
@vp8_bmode_prob = hidden local_unnamed_addr constant [9 x i8] c"xZO\85WUPo\97", align 1
@vp8_kf_bmode_prob = hidden local_unnamed_addr constant [10 x [10 x [9 x i8]]] [[10 x [9 x i8]] [[9 x i8] c"\E7x0Ysqx\98p", [9 x i8] c"\98\B3@~\AAv.F_", [9 x i8] c"\AFE\8FPURH\9Bg", [9 x i8] c"8:\0A\AB\DA\BD\11\0D\98", [9 x i8] c"\90G\0A&\AB\D5\90\22\1A", [9 x i8] c"r\1A\11\A3,\C3\15\0A\AD", [9 x i8] c"y\18P\C3\1A>,@U", [9 x i8] c"\AA.7\13\88\A0!\CEG", [9 x i8] c"?\14\08rr\D0\0C\09\E2", [9 x i8] c"Q(\0B`\B6T\1D\10$"], [10 x [9 x i8]] [[9 x i8] c"\86\B7Y\89bej\A5\94", [9 x i8] c"H\BBd\82\9Do KP", [9 x i8] c"Bf\A7cJ>(\EA\80", [9 x i8] c")5\09\B2\F1\8D\1A\08k", [9 x i8] c"hO\0C\1B\D9\FFW\11\07", [9 x i8] c"J+\1A\92I\A61\17\9D", [9 x i8] c"A&i\A034\1Fs\80", [9 x i8] c"WDG,r3\0F\BA\17", [9 x i8] c"/)\0En\B6\B7\15\11\C2", [9 x i8] c"B-\19f\C5\BD\17\12\16"], [10 x [9 x i8]] [[9 x i8] c"XX\93\96*.-\C4\CD", [9 x i8] c"+a\B7uU&#\B3=", [9 x i8] c"'5\C8W\1A\15+\E8\AB", [9 x i8] c"8\223hrf\1D]M", [9 x i8] c"k6 \1A3\01Q+\1F", [9 x i8] c"'\1CU\AB:\A5Zb@", [9 x i8] c"\22\16t\CE\17\22+\A6I", [9 x i8] c"D\19j\16@\AB$\E1r", [9 x i8] c"\22\13\15f\84\BC\10L|", [9 x i8] c">\12N_U9203"], [10 x [9 x i8]] [[9 x i8] c"\C1e#\9F\D7oY.o", [9 x i8] c"<\94\1F\AC\DB\E4\15\12o", [9 x i8] c"pqMU\B3\FF&xr", [9 x i8] c"(*\01\C4\F5\D1\0A\19m", [9 x i8] c"dP\08+\9A\013\1AG", [9 x i8] c"X+\1D\8C\A6\D5%+\9A", [9 x i8] c"=?\1E\9BC-D\01\D1", [9 x i8] c"\8ENN\10\FF\80\22\C5\AB", [9 x i8] c")(\05f\D3\B7\04\01\DD", [9 x i8] c"32\11\A8\D1\C0\17\19R"], [10 x [9 x i8]] [[9 x i8] c"}b*XhUu\AFR", [9 x i8] c"_T5Y\80dqe-", [9 x i8] c"KO{/3\80Q\AB\01", [9 x i8] c"9\11\05Gf95)1", [9 x i8] c"s\15\02\0Af\FF\A6\17\06", [9 x i8] c"&!\0Dy9I\1A\01U", [9 x i8] c")\0AC\8AMnZ/r", [9 x i8] c"e\1D\10\0AU\80e\C4\1A", [9 x i8] c"9\12\0Aff\D5\22\14+", [9 x i8] c"u\14\0F$\A3\80D\01\1A"], [10 x [9 x i8]] [[9 x i8] c"\8A\1F$\AB\1B\A6&,\E5", [9 x i8] c"CW:\A9Rs\1A;\B3", [9 x i8] c"?;Z\B4;\A6]I\9A", [9 x i8] c"((\15t\8F\D1\22'\AF", [9 x i8] c"9.\16\18\80\016\11%", [9 x i8] c"/\0F\10\B7\22\DF1-\B7", [9 x i8] c".\11!\B7\06b\0F \B7", [9 x i8] c"A Is\1C\80\17\80\CD", [9 x i8] c"(\03\09s3\C0\12\06\DF", [9 x i8] c"W%\09s;M@\15/"], [10 x [9 x i8]] [[9 x i8] c"h7,\DA\0965\82\E2", [9 x i8] c"@ZF\CD()\17\1A9", [9 x i8] c"69p\B8\05)&\A6\D5", [9 x i8] c"\1E\22\1A\85\98t\0A \86", [9 x i8] c"K \0C3\C0\FF\A0+3", [9 x i8] c"'\135\DD\1Ar I\FF", [9 x i8] c"\1F\09A\EA\02\0F\01vI", [9 x i8] c"X\1F#CfU7\BAU", [9 x i8] c"8\15\17o;\CD-%\C0", [9 x i8] c"7&F|If\01\22b"], [10 x [9 x i8]] [[9 x i8] c"f=G%\225\1F\F3\C0", [9 x i8] c"E<G&Iw\1C\DE%", [9 x i8] c"D-\80\22\01/\0B\F5\AB", [9 x i8] c">\11\13F\92U7>F", [9 x i8] c"K\0F\09\09@\FF\B8w\10", [9 x i8] c"%+%\9Ad\A3U\A0\01", [9 x i8] c"?\09\5C\88\1C@ \C9U", [9 x i8] c"V\06\1C\05@\FF\19\F8\01", [9 x i8] c"8\08\11\84\89\FF7t\80", [9 x i8] c":\0F\14R\879\1Ay("], [10 x [9 x i8]] [[9 x i8] c"\A42\1F\89\9A\85\19#\DA", [9 x i8] c"3g,\83\83{\1F\06\9E", [9 x i8] c"V(@\87\94\E0-\B7\80", [9 x i8] c"\16\1A\11\83\F0\9A\0E\01\D1", [9 x i8] c"S\0C\0D6\C0\FFD/\1C", [9 x i8] c"-\10\15[@\DE\07\01\C5", [9 x i8] c"8\15'\9B<\8A\17f\D5", [9 x i8] c"U\1AUU\80\80 \92\AB", [9 x i8] c"\12\0B\07?\90\AB\04\04\F6", [9 x i8] c"#\1B\0A\92\AE\AB\0C\1A\80"], [10 x [9 x i8]] [[9 x i8] c"\BEP#c\B4P~6-", [9 x i8] c"U~/W\B03)\14 ", [9 x i8] c"eK\80\8Bv\92t\80U", [9 x i8] c"8)\0F\B0\ECU%\09>", [9 x i8] c"\92$\13\1E\AB\FFa\1B\14", [9 x i8] c"G\1E\11wv\FF\11\12\8A", [9 x i8] c"e&<\8A7F+\1A\8E", [9 x i8] c"\8A-=>\DB\01Q\BC@", [9 x i8] c" )\14u\97\8E\14\15\A3", [9 x i8] c"p\13\0C=\C3\800\04\18"]], align 16
@vp8_sub_mv_ref_prob2 = hidden local_unnamed_addr constant [5 x [3 x i8]] [[3 x i8] c"\93\88\12", [3 x i8] c"j\91\01", [3 x i8] c"\B3y\01", [3 x i8] c"\DF\01\22", [3 x i8] c"\D0\01\01"], align 1
@vp8_mbsplits = hidden local_unnamed_addr constant [4 x [16 x i32]] [[16 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1], [16 x i32] [i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1], [16 x i32] [i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 2, i32 2, i32 3, i32 3], [16 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15]], align 16
@vp8_mbsplit_count = hidden local_unnamed_addr constant [4 x i32] [i32 2, i32 2, i32 4, i32 16], align 16
@vp8_mbsplit_probs = hidden local_unnamed_addr constant [3 x i8] c"no\96", align 1
@vp8_bmode_tree = hidden local_unnamed_addr constant [18 x i8] c"\00\02\FF\04\FE\06\08\0C\FD\0A\FB\FA\FC\0E\F9\10\F8\F7", align 16
@vp8_ymode_tree = hidden local_unnamed_addr constant [8 x i8] c"\00\02\04\06\FF\FE\FD\FC", align 1
@vp8_kf_ymode_tree = hidden local_unnamed_addr constant [8 x i8] c"\FC\02\04\06\00\FF\FE\FD", align 1
@vp8_uv_mode_tree = hidden local_unnamed_addr constant [6 x i8] c"\00\02\FF\04\FE\FD", align 1
@vp8_mbsplit_tree = hidden local_unnamed_addr constant [6 x i8] c"\FD\02\FE\04\00\FF", align 1
@vp8_mv_ref_tree = hidden local_unnamed_addr constant [8 x i8] c"\F9\02\FB\04\FA\06\F8\F7", align 1
@vp8_sub_mv_ref_tree = hidden local_unnamed_addr constant [6 x i8] c"\F6\02\F5\04\F4\F3", align 1
@vp8_small_mvtree = hidden local_unnamed_addr constant [14 x i8] c"\02\08\04\06\00\FF\FE\FD\0A\0C\FC\FB\FA\F9", align 1
@sub_mv_ref_prob = internal unnamed_addr constant [3 x i8] c"\B4\A2\19", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vp8_mv_cont(%union.int_mv* nocapture readonly, %union.int_mv* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %union.int_mv, %union.int_mv* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %union.int_mv, %union.int_mv* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %4, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, 0
  %11 = zext i1 %5 to i32
  %12 = select i1 %10, i32 2, i32 %11
  ret i32 %12

13:                                               ; preds = %2
  %14 = select i1 %5, i32 4, i32 3
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_init_mbmode_probs(%struct.VP8Common* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 59, i32 1, i64 0
  %3 = bitcast i8* %2 to i32*
  store i32 629954160, i32* %3, align 1
  %4 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 59, i32 2, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @vp8_uv_mode_prob, i64 0, i64 0), i64 3, i1 false)
  %5 = getelementptr inbounds %struct.VP8Common, %struct.VP8Common* %0, i64 0, i32 59, i32 3, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %5, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @sub_mv_ref_prob, i64 0, i64 0), i64 3, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_default_bmode_probs(i8* nocapture) local_unnamed_addr #1 {
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @vp8_bmode_prob, i64 0, i64 0), i64 9, i1 false)
  ret void
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
