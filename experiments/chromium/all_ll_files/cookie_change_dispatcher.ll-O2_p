; ModuleID = '../../net/cookies/cookie_change_dispatcher.cc'
source_filename = "../../net/cookies/cookie_change_dispatcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::CookieChangeInfo" = type { %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", i32 }
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }

@.str = private unnamed_addr constant [8 x i8] c"INVALID\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"inserted\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"explicit\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"overwrite\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"expired\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"evicted\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"expired_overwrite\00", align 1
@switch.table._ZN3net25CookieChangeCauseToStringENS_17CookieChangeCauseE = private unnamed_addr constant [7 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0)], align 8

@_ZN3net16CookieChangeInfoC1Ev = hidden unnamed_addr alias void (%"struct.net::CookieChangeInfo"*), void (%"struct.net::CookieChangeInfo"*)* @_ZN3net16CookieChangeInfoC2Ev
@_ZN3net16CookieChangeInfoC1ERKNS_15CanonicalCookieENS_18CookieAccessResultENS_17CookieChangeCauseE = hidden unnamed_addr alias void (%"struct.net::CookieChangeInfo"*, %"class.net::CanonicalCookie"*, %"struct.net::CookieAccessResult"*, i32), void (%"struct.net::CookieChangeInfo"*, %"class.net::CanonicalCookie"*, %"struct.net::CookieAccessResult"*, i32)* @_ZN3net16CookieChangeInfoC2ERKNS_15CanonicalCookieENS_18CookieAccessResultENS_17CookieChangeCauseE
@_ZN3net16CookieChangeInfoD1Ev = hidden unnamed_addr alias void (%"struct.net::CookieChangeInfo"*), void (%"struct.net::CookieChangeInfo"*)* @_ZN3net16CookieChangeInfoD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN3net25CookieChangeCauseToStringENS_17CookieChangeCauseE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 7
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [7 x i8*], [7 x i8*]* @switch.table._ZN3net25CookieChangeCauseToStringENS_17CookieChangeCauseE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16CookieChangeInfoC2Ev(%"struct.net::CookieChangeInfo"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::CookieChangeInfo", %"struct.net::CookieChangeInfo"* %0, i64 0, i32 0
  tail call void @_ZN3net15CanonicalCookieC1Ev(%"class.net::CanonicalCookie"* %2) #4
  %3 = getelementptr inbounds %"struct.net::CookieChangeInfo", %"struct.net::CookieChangeInfo"* %0, i64 0, i32 1
  tail call void @_ZN3net18CookieAccessResultC1Ev(%"struct.net::CookieAccessResult"* %3) #4
  %4 = getelementptr inbounds %"struct.net::CookieChangeInfo", %"struct.net::CookieChangeInfo"* %0, i64 0, i32 2
  store i32 1, i32* %4, align 4
  ret void
}

declare void @_ZN3net15CanonicalCookieC1Ev(%"class.net::CanonicalCookie"*) unnamed_addr #2

declare void @_ZN3net18CookieAccessResultC1Ev(%"struct.net::CookieAccessResult"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16CookieChangeInfoC2ERKNS_15CanonicalCookieENS_18CookieAccessResultENS_17CookieChangeCauseE(%"struct.net::CookieChangeInfo"*, %"class.net::CanonicalCookie"* dereferenceable(144), %"struct.net::CookieAccessResult"*, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"struct.net::CookieChangeInfo", %"struct.net::CookieChangeInfo"* %0, i64 0, i32 0
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %5, %"class.net::CanonicalCookie"* dereferenceable(144) %1) #4
  %6 = getelementptr inbounds %"struct.net::CookieChangeInfo", %"struct.net::CookieChangeInfo"* %0, i64 0, i32 1
  tail call void @_ZN3net18CookieAccessResultC1ERKS0_(%"struct.net::CookieAccessResult"* %6, %"struct.net::CookieAccessResult"* dereferenceable(20) %2) #4
  %7 = getelementptr inbounds %"struct.net::CookieChangeInfo", %"struct.net::CookieChangeInfo"* %0, i64 0, i32 2
  store i32 %3, i32* %7, align 4
  ret void
}

declare void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"* dereferenceable(144)) unnamed_addr #2

declare void @_ZN3net18CookieAccessResultC1ERKS0_(%"struct.net::CookieAccessResult"*, %"struct.net::CookieAccessResult"* dereferenceable(20)) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net27CookieChangeCauseIsDeletionENS_17CookieChangeCauseE(i32) local_unnamed_addr #0 {
  %2 = icmp ne i32 %0, 0
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16CookieChangeInfoD2Ev(%"struct.net::CookieChangeInfo"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::CookieChangeInfo", %"struct.net::CookieChangeInfo"* %0, i64 0, i32 1
  tail call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* %2) #4
  %3 = getelementptr inbounds %"struct.net::CookieChangeInfo", %"struct.net::CookieChangeInfo"* %0, i64 0, i32 0
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %3) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"*) unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
