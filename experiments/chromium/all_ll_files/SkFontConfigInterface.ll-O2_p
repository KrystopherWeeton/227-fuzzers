; ModuleID = '../../third_party/skia/src/ports/SkFontConfigInterface.cpp'
source_filename = "../../third_party/skia/src/ports/SkFontConfigInterface.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkFontConfigInterface = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.sk_sp = type { %class.SkFontConfigInterface* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

@_ZL20gFontConfigInterface = internal unnamed_addr global %class.SkFontConfigInterface* null, align 8
@_ZZL27font_config_interface_mutexvE5mutex = internal unnamed_addr global %class.SkMutex* null, align 8
@_ZGVZL27font_config_interface_mutexvE5mutex = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkFontConfigInterface9RefGlobalEv(%class.sk_sp* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZL27font_config_interface_mutexvE5mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %13, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL27font_config_interface_mutexvE5mutex) #4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 16) #5
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %12, align 8
  store i8* %8, i8** bitcast (%class.SkMutex** @_ZZL27font_config_interface_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL27font_config_interface_mutexvE5mutex) #4
  br label %13

13:                                               ; preds = %1, %4, %7
  %14 = load %class.SkMutex*, %class.SkMutex** @_ZZL27font_config_interface_mutexvE5mutex, align 8
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acquire
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %19) #4
  br label %20

20:                                               ; preds = %13, %18
  %21 = load %class.SkFontConfigInterface*, %class.SkFontConfigInterface** @_ZL20gFontConfigInterface, align 8
  %22 = icmp eq %class.SkFontConfigInterface* %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = tail call %class.SkFontConfigInterface* @_ZN21SkFontConfigInterface27GetSingletonDirectInterfaceEv() #4
  %25 = icmp eq %class.SkFontConfigInterface* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %23, %20
  %27 = phi %class.SkFontConfigInterface* [ %21, %20 ], [ %24, %23 ]
  %28 = getelementptr inbounds %class.SkFontConfigInterface, %class.SkFontConfigInterface* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic, !noalias !3
  br label %30

30:                                               ; preds = %26, %23
  %31 = phi %class.SkFontConfigInterface* [ %24, %23 ], [ %27, %26 ]
  %32 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkFontConfigInterface* %31, %class.SkFontConfigInterface** %32, align 8, !alias.scope !4
  %33 = atomicrmw add i32* %15, i32 1 release
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %36, i32 1) #4
  br label %37

37:                                               ; preds = %30, %35
  ret void
}

declare %class.SkFontConfigInterface* @_ZN21SkFontConfigInterface27GetSingletonDirectInterfaceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkFontConfigInterface9SetGlobalE5sk_spIS_E(%class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZL27font_config_interface_mutexvE5mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %13, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL27font_config_interface_mutexvE5mutex) #4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 16) #5
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %12, align 8
  store i8* %8, i8** bitcast (%class.SkMutex** @_ZZL27font_config_interface_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL27font_config_interface_mutexvE5mutex) #4
  br label %13

13:                                               ; preds = %1, %4, %7
  %14 = load %class.SkMutex*, %class.SkMutex** @_ZZL27font_config_interface_mutexvE5mutex, align 8
  %15 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw sub i32* %15, i32 1 acquire
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %19) #4
  br label %20

20:                                               ; preds = %13, %18
  %21 = load %class.SkFontConfigInterface*, %class.SkFontConfigInterface** @_ZL20gFontConfigInterface, align 8
  %22 = icmp eq %class.SkFontConfigInterface* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %class.SkFontConfigInterface, %class.SkFontConfigInterface* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkFontConfigInterface* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkFontConfigInterface* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #4
  br label %33

33:                                               ; preds = %20, %23, %27
  %34 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %35 = bitcast %class.sk_sp* %0 to i64*
  %36 = load i64, i64* %35, align 8
  store %class.SkFontConfigInterface* null, %class.SkFontConfigInterface** %34, align 8
  store i64 %36, i64* bitcast (%class.SkFontConfigInterface** @_ZL20gFontConfigInterface to i64*), align 8
  %37 = atomicrmw add i32* %15, i32 1 release
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %40, i32 1) #4
  br label %41

41:                                               ; preds = %33, %39
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #1

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_Z9sk_ref_spI21SkFontConfigInterfaceE5sk_spIT_EPS2_: argument 0"}
!6 = distinct !{!6, !"_Z9sk_ref_spI21SkFontConfigInterfaceE5sk_spIT_EPS2_"}
!7 = distinct !{!7, !8, !"_Z9sk_ref_spI21SkFontConfigInterfaceE5sk_spIT_EPS2_: argument 0"}
!8 = distinct !{!8, !"_Z9sk_ref_spI21SkFontConfigInterfaceE5sk_spIT_EPS2_"}
