; ModuleID = '../../third_party/blink/renderer/core/html/media/media_source_attachment.cc'
source_filename = "../../third_party/blink/renderer/core/html/media/media_source_attachment.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::URLRegistry" = type { i32 (...)** }
%"class.blink::MediaSourceAttachment" = type <{ %"class.blink::URLRegistrable", %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::MediaSourceRegistry" = type { %"class.blink::URLRegistry" }
%"class.WTF::String" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.8", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.11, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.2", [4 x i8] }>
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.10", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.11 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.12" }>
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

$_ZNK5blink21MediaSourceAttachment8RegistryEv = comdat any

$_ZN5blink14URLRegistrable10IsMojoBlobEv = comdat any

$_ZN5blink14URLRegistrable13CloneMojoBlobEN4mojo15PendingReceiverINS_5mojom5blink4BlobEEE = comdat any

@_ZN5blink21MediaSourceAttachment9registry_E = hidden local_unnamed_addr global %"class.blink::URLRegistry"* null, align 8
@_ZTVN5blink21MediaSourceAttachmentE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::MediaSourceAttachment"*)* @_ZN5blink21MediaSourceAttachmentD2Ev to i8*), i8* bitcast (void (%"class.blink::MediaSourceAttachment"*)* @_ZN5blink21MediaSourceAttachmentD0Ev to i8*), i8* bitcast (%"class.blink::URLRegistry"* (%"class.blink::MediaSourceAttachment"*)* @_ZNK5blink21MediaSourceAttachment8RegistryEv to i8*), i8* bitcast (i1 (%"class.blink::URLRegistrable"*)* @_ZN5blink14URLRegistrable10IsMojoBlobEv to i8*), i8* bitcast (void (%"class.blink::URLRegistrable"*, %"class.mojo::PendingReceiver"*)* @_ZN5blink14URLRegistrable13CloneMojoBlobEN4mojo15PendingReceiverINS_5mojom5blink4BlobEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink21MediaSourceAttachmentD1Ev = hidden unnamed_addr alias void (%"class.blink::MediaSourceAttachment"*), void (%"class.blink::MediaSourceAttachment"*)* @_ZN5blink21MediaSourceAttachmentD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink21MediaSourceAttachment11SetRegistryEPNS_19MediaSourceRegistryE(%"class.blink::MediaSourceRegistry"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaSourceRegistry", %"class.blink::MediaSourceRegistry"* %0, i64 0, i32 0
  store %"class.blink::URLRegistry"* %2, %"class.blink::URLRegistry"** @_ZN5blink21MediaSourceAttachment9registry_E, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaSourceAttachment"* @_ZN5blink21MediaSourceAttachment17LookupMediaSourceERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %2 = load %"class.blink::URLRegistry"*, %"class.blink::URLRegistry"** @_ZN5blink21MediaSourceAttachment9registry_E, align 8
  %3 = icmp eq %"class.blink::URLRegistry"* %2, null
  %4 = bitcast %"class.blink::URLRegistry"* %2 to %"class.blink::MediaSourceRegistry"*
  br i1 %3, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::URLRegistry"* %2 to %"class.blink::MediaSourceAttachment"* (%"class.blink::MediaSourceRegistry"*, %"class.WTF::String"*)***
  %15 = load %"class.blink::MediaSourceAttachment"* (%"class.blink::MediaSourceRegistry"*, %"class.WTF::String"*)**, %"class.blink::MediaSourceAttachment"* (%"class.blink::MediaSourceRegistry"*, %"class.WTF::String"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::MediaSourceAttachment"* (%"class.blink::MediaSourceRegistry"*, %"class.WTF::String"*)*, %"class.blink::MediaSourceAttachment"* (%"class.blink::MediaSourceRegistry"*, %"class.WTF::String"*)** %15, i64 6
  %17 = load %"class.blink::MediaSourceAttachment"* (%"class.blink::MediaSourceRegistry"*, %"class.WTF::String"*)*, %"class.blink::MediaSourceAttachment"* (%"class.blink::MediaSourceRegistry"*, %"class.WTF::String"*)** %16, align 8
  %18 = tail call %"class.blink::MediaSourceAttachment"* %17(%"class.blink::MediaSourceRegistry"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %0) #5
  br label %19

19:                                               ; preds = %5, %9, %1, %13
  %20 = phi %"class.blink::MediaSourceAttachment"* [ %18, %13 ], [ null, %1 ], [ null, %9 ], [ null, %5 ]
  ret %"class.blink::MediaSourceAttachment"* %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink21MediaSourceAttachmentC2Ev(%"class.blink::MediaSourceAttachment"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::MediaSourceAttachment", %"class.blink::MediaSourceAttachment"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5blink21MediaSourceAttachmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink21MediaSourceAttachmentD2Ev(%"class.blink::MediaSourceAttachment"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink21MediaSourceAttachmentD0Ev(%"class.blink::MediaSourceAttachment"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::URLRegistry"* @_ZNK5blink21MediaSourceAttachment8RegistryEv(%"class.blink::MediaSourceAttachment"*) unnamed_addr #1 comdat align 2 {
  %2 = load %"class.blink::URLRegistry"*, %"class.blink::URLRegistry"** @_ZN5blink21MediaSourceAttachment9registry_E, align 8
  ret %"class.blink::URLRegistry"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink14URLRegistrable10IsMojoBlobEv(%"class.blink::URLRegistrable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14URLRegistrable13CloneMojoBlobEN4mojo15PendingReceiverINS_5mojom5blink4BlobEEE(%"class.blink::URLRegistrable"*, %"class.mojo::PendingReceiver"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
