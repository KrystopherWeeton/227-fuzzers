; ModuleID = '../../third_party/crashpad/crashpad/minidump/minidump_handle_writer.cc'
source_filename = "../../third_party/crashpad/crashpad/minidump/minidump_handle_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.crashpad::MinidumpHandleDataWriter" = type { %"class.crashpad::internal::MinidumpStreamWriter", %struct.MINIDUMP_HANDLE_DATA_STREAM, %"class.std::__1::vector.8", %"class.std::__1::map" }
%"class.crashpad::internal::MinidumpStreamWriter" = type { %"class.crashpad::internal::MinidumpWritable.base", %struct.MINIDUMP_DIRECTORY }
%"class.crashpad::internal::MinidumpWritable.base" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32**, i32**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %"class.std::__1::__compressed_pair.3" }
%struct.MINIDUMP_LOCATION_DESCRIPTOR = type { i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR** }
%struct.MINIDUMP_DIRECTORY = type { i32, %struct.MINIDUMP_LOCATION_DESCRIPTOR }
%struct.MINIDUMP_HANDLE_DATA_STREAM = type { i32, i32, i32, i32 }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %struct.MINIDUMP_HANDLE_DESCRIPTOR*, %struct.MINIDUMP_HANDLE_DESCRIPTOR*, %"class.std::__1::__compressed_pair.10" }
%struct.MINIDUMP_HANDLE_DESCRIPTOR = type { i64, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %struct.MINIDUMP_HANDLE_DESCRIPTOR* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.crashpad::internal::MinidumpUTF16StringWriter"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.crashpad::internal::MinidumpUTF16StringWriter" = type { %"class.crashpad::internal::MinidumpStringWriter" }
%"class.crashpad::internal::MinidumpStringWriter" = type { %"class.crashpad::internal::MinidumpWritable.base", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string.31" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %struct.MINIDUMP_STRING* }
%struct.MINIDUMP_STRING = type { i32, [0 x i16] }
%"class.std::__1::basic_string.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.34 }
%union.anon.34 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.crashpad::HandleSnapshot"*, %"struct.crashpad::HandleSnapshot"*, %"class.std::__1::__compressed_pair.42" }
%"struct.crashpad::HandleSnapshot" = type <{ %"class.std::__1::basic_string", i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.crashpad::HandleSnapshot"* }
%"struct.std::__1::pair.47" = type { %"class.std::__1::basic_string", %"class.crashpad::internal::MinidumpUTF16StringWriter"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.crashpad::internal::MinidumpWritable" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32, [4 x i8] }>
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"**, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.crashpad::internal::MinidumpWritable"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.crashpad::FileWriterInterface" = type { %"class.crashpad::FileSeekerInterface" }
%"class.crashpad::FileSeekerInterface" = type { i32 (...)** }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.crashpad::WritableIoVec"*, %"struct.crashpad::WritableIoVec"*, %"class.std::__1::__compressed_pair.57" }
%"struct.crashpad::WritableIoVec" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.crashpad::WritableIoVec"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE = comdat any

$_ZNSt3__16vectorI26MINIDUMP_HANDLE_DESCRIPTORNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_SL_EElEERPNS_15__tree_end_nodeISN_EESO_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISN_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN8crashpad24MinidumpHandleDataWriterE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::MinidumpHandleDataWriter"*)* @_ZN8crashpad24MinidumpHandleDataWriterD2Ev to i8*), i8* bitcast (void (%"class.crashpad::MinidumpHandleDataWriter"*)* @_ZN8crashpad24MinidumpHandleDataWriterD0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::MinidumpHandleDataWriter"*)* @_ZN8crashpad24MinidumpHandleDataWriter6FreezeEv to i8*), i8* bitcast (i64 (%"class.crashpad::MinidumpHandleDataWriter"*)* @_ZN8crashpad24MinidumpHandleDataWriter12SizeOfObjectEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void (%"class.std::__1::vector.48"*, %"class.crashpad::MinidumpHandleDataWriter"*)* @_ZN8crashpad24MinidumpHandleDataWriter8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (i1 (%"class.crashpad::MinidumpHandleDataWriter"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad24MinidumpHandleDataWriter11WriteObjectEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i32 (%"class.crashpad::MinidumpHandleDataWriter"*)* @_ZNK8crashpad24MinidumpHandleDataWriter10StreamTypeEv to i8*)] }, align 8
@.str = private unnamed_addr constant [71 x i8] c"../../third_party/crashpad/crashpad/minidump/minidump_handle_writer.cc\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"handle_count \00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c" out of range\00", align 1
@_ZTVN8crashpad8internal25MinidumpUTF16StringWriterE = external unnamed_addr constant { [12 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN8crashpad24MinidumpHandleDataWriterC1Ev = hidden unnamed_addr alias void (%"class.crashpad::MinidumpHandleDataWriter"*), void (%"class.crashpad::MinidumpHandleDataWriter"*)* @_ZN8crashpad24MinidumpHandleDataWriterC2Ev
@_ZN8crashpad24MinidumpHandleDataWriterD1Ev = hidden unnamed_addr alias void (%"class.crashpad::MinidumpHandleDataWriter"*), void (%"class.crashpad::MinidumpHandleDataWriter"*)* @_ZN8crashpad24MinidumpHandleDataWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad24MinidumpHandleDataWriterC2Ev(%"class.crashpad::MinidumpHandleDataWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal20MinidumpStreamWriterC2Ev(%"class.crashpad::internal::MinidumpStreamWriter"* %2) #12
  %3 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN8crashpad24MinidumpHandleDataWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #12
  %9 = bitcast %struct.MINIDUMP_HANDLE_DATA_STREAM* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false)
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  ret void
}

declare void @_ZN8crashpad8internal20MinidumpStreamWriterC2Ev(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad24MinidumpHandleDataWriterD2Ev(%"class.crashpad::MinidumpHandleDataWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN8crashpad24MinidumpHandleDataWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %8, label %22

8:                                                ; preds = %61, %1
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %9, %"class.std::__1::__tree_node"* %11) #12
  %12 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %struct.MINIDUMP_HANDLE_DESCRIPTOR*, %struct.MINIDUMP_HANDLE_DESCRIPTOR** %12, align 8
  %14 = icmp eq %struct.MINIDUMP_HANDLE_DESCRIPTOR* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %8
  %16 = ptrtoint %struct.MINIDUMP_HANDLE_DESCRIPTOR* %13 to i64
  %17 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %8, %15
  %21 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev(%"class.crashpad::internal::MinidumpStreamWriter"* %21) #12
  ret void

22:                                               ; preds = %1, %61
  %23 = phi %"class.std::__1::__tree_end_node"* [ %62, %61 ], [ %5, %1 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 7
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.crashpad::internal::MinidumpUTF16StringWriter"**
  %26 = load %"class.crashpad::internal::MinidumpUTF16StringWriter"*, %"class.crashpad::internal::MinidumpUTF16StringWriter"** %25, align 8
  %27 = icmp eq %"class.crashpad::internal::MinidumpUTF16StringWriter"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.crashpad::internal::MinidumpUTF16StringWriter"* %26 to void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*)***
  %30 = load void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*)**, void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*)*, void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*)** %30, i64 1
  %32 = load void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*)*, void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*)** %31, align 8
  tail call void %32(%"class.crashpad::internal::MinidumpUTF16StringWriter"* nonnull %26) #12
  br label %33

33:                                               ; preds = %28, %22
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 1, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node_base"*
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 2
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_end_node"**
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, %38
  br i1 %44, label %61, label %52

45:                                               ; preds = %33, %45
  %46 = phi %"class.std::__1::__tree_node_base"* [ %48, %45 ], [ %35, %33 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 0
  br label %61

52:                                               ; preds = %37, %52
  %53 = phi %"class.std::__1::__tree_end_node"** [ %56, %52 ], [ %40, %37 ]
  %54 = bitcast %"class.std::__1::__tree_end_node"** %53 to %"class.std::__1::__tree_node_base"**
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 2
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, %55
  br i1 %60, label %61, label %52

61:                                               ; preds = %52, %37, %50
  %62 = phi %"class.std::__1::__tree_end_node"* [ %51, %50 ], [ %41, %37 ], [ %57, %52 ]
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %62, %6
  br i1 %63, label %8, label %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN8crashpad8internal20MinidumpStreamWriterD2Ev(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad24MinidumpHandleDataWriterD0Ev(%"class.crashpad::MinidumpHandleDataWriter"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8crashpad24MinidumpHandleDataWriterD2Ev(%"class.crashpad::MinidumpHandleDataWriter"* %0) #12
  %2 = bitcast %"class.crashpad::MinidumpHandleDataWriter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad24MinidumpHandleDataWriter22InitializeFromSnapshotERKNSt3__16vectorINS_14HandleSnapshotENS1_9allocatorIS3_EEEE(%"class.crashpad::MinidumpHandleDataWriter"*, %"class.std::__1::vector.40"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %5 = alloca %"struct.std::__1::pair.47", align 8
  %6 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.crashpad::HandleSnapshot"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.40"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 48
  %14 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.8"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 5
  %21 = icmp ugt i64 %13, %20
  %22 = inttoptr i64 %18 to %struct.MINIDUMP_HANDLE_DESCRIPTOR*
  br i1 %21, label %23, label %25

23:                                               ; preds = %2
  %24 = sub nsw i64 %13, %20
  tail call void @_ZNSt3__16vectorI26MINIDUMP_HANDLE_DESCRIPTORNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.8"* %6, i64 %24) #12
  br label %29

25:                                               ; preds = %2
  %26 = icmp ult i64 %13, %20
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %22, i64 %13
  store %struct.MINIDUMP_HANDLE_DESCRIPTOR* %28, %struct.MINIDUMP_HANDLE_DESCRIPTOR** %14, align 8
  br label %29

29:                                               ; preds = %23, %25, %27
  %30 = load i64, i64* %8, align 8
  %31 = load i64, i64* %10, align 8
  %32 = icmp eq i64 %30, %31
  br i1 %32, label %53, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %6, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 3
  %36 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node"**
  %38 = bitcast %"struct.std::__1::pair.47"* %5 to i8*
  %39 = getelementptr inbounds %"struct.std::__1::pair.47", %"struct.std::__1::pair.47"* %5, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.std::__1::pair.47", %"struct.std::__1::pair.47"* %5, i64 0, i32 1
  %41 = bitcast %"class.crashpad::internal::MinidumpUTF16StringWriter"** %40 to i64*
  %42 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %35, i64 0, i32 0
  %43 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  %44 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  %45 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %46 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %35, i64 0, i32 0, i32 0
  %47 = bitcast %"class.std::__1::map"* %35 to i64*
  %48 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"struct.std::__1::pair.47"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::pair.47", %"struct.std::__1::pair.47"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %54

53:                                               ; preds = %228, %29
  ret void

54:                                               ; preds = %33, %228
  %55 = phi i64 [ %31, %33 ], [ %244, %228 ]
  %56 = phi i64 [ 0, %33 ], [ %242, %228 ]
  %57 = inttoptr i64 %55 to %"struct.crashpad::HandleSnapshot"*
  %58 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %57, i64 %56
  %59 = load %struct.MINIDUMP_HANDLE_DESCRIPTOR*, %struct.MINIDUMP_HANDLE_DESCRIPTOR** %34, align 8
  %60 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %57, i64 %56, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %59, i64 %56, i32 0
  store i64 %62, i64* %63, align 4
  %64 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %58, i64 0, i32 0
  %65 = bitcast %"struct.crashpad::HandleSnapshot"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %57, i64 %56, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  br label %74

72:                                               ; preds = %54
  %73 = zext i8 %67 to i64
  br label %74

74:                                               ; preds = %69, %72
  %75 = phi i64 [ %71, %69 ], [ %73, %72 ]
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %59, i64 %56, i32 1
  store i32 0, i32* %78, align 4
  br label %228

79:                                               ; preds = %74
  %80 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %37, align 8
  %81 = icmp eq %"class.std::__1::__tree_node"* %80, null
  br i1 %81, label %174, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %57, i64 %56, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %67 to i64
  %86 = select i1 %68, i64 %84, i64 %85
  %87 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast %"struct.crashpad::HandleSnapshot"* %58 to i8*
  %90 = select i1 %68, i8* %88, i8* %89
  br label %91

91:                                               ; preds = %117, %82
  %92 = phi %"class.std::__1::__tree_end_node"* [ %36, %82 ], [ %125, %117 ]
  %93 = phi %"class.std::__1::__tree_node"* [ %80, %82 ], [ %126, %117 ]
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 1
  %95 = bitcast %"struct.std::__1::__value_type"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = zext i8 %97 to i64
  %102 = select i1 %98, i64 %100, i64 %101
  %103 = icmp ult i64 %86, %102
  %104 = select i1 %103, i64 %86, i64 %102
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %113, label %106

106:                                              ; preds = %91
  %107 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = bitcast %"struct.std::__1::__value_type"* %94 to i8*
  %110 = select i1 %98, i8* %108, i8* %109
  %111 = call i32 @memcmp(i8* %110, i8* %90, i64 %104) #12
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %117

113:                                              ; preds = %106, %91
  %114 = icmp ult i64 %102, %86
  %115 = zext i1 %103 to i32
  %116 = select i1 %114, i32 -1, i32 %115
  br label %117

117:                                              ; preds = %113, %106
  %118 = phi i32 [ %116, %113 ], [ %111, %106 ]
  %119 = icmp slt i32 %118, 0
  %120 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 1
  %121 = bitcast %"class.std::__1::__tree_node_base"** %120 to %"class.std::__1::__tree_node"**
  %122 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::__tree_node"* %93 to %"class.std::__1::__tree_node"**
  %124 = select i1 %119, %"class.std::__1::__tree_node"** %121, %"class.std::__1::__tree_node"** %123
  %125 = select i1 %119, %"class.std::__1::__tree_end_node"* %92, %"class.std::__1::__tree_end_node"* %122
  %126 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %124, align 8
  %127 = icmp eq %"class.std::__1::__tree_node"* %126, null
  br i1 %127, label %128, label %91

128:                                              ; preds = %117
  %129 = icmp eq %"class.std::__1::__tree_end_node"* %125, %36
  br i1 %129, label %174, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 4
  %132 = bitcast %"class.std::__1::__tree_end_node"* %131 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %132, i64 0, i32 1, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = icmp slt i8 %134, 0
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 5
  %137 = bitcast %"class.std::__1::__tree_end_node"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = zext i8 %134 to i64
  %140 = select i1 %135, i64 %138, i64 %139
  %141 = icmp eq i64 %140, %86
  br i1 %141, label %142, label %174

142:                                              ; preds = %130
  %143 = bitcast %"class.std::__1::__tree_end_node"* %131 to i8**
  %144 = load i8*, i8** %143, align 8
  %145 = bitcast %"class.std::__1::__tree_end_node"* %131 to i8*
  %146 = select i1 %135, i8* %144, i8* %145
  %147 = icmp eq i64 %86, 0
  br i1 %135, label %154, label %148

148:                                              ; preds = %142
  br i1 %147, label %170, label %149

149:                                              ; preds = %148
  %150 = ptrtoint i8* %144 to i64
  %151 = trunc i64 %150 to i8
  %152 = load i8, i8* %90, align 1
  %153 = icmp eq i8 %152, %151
  br i1 %153, label %155, label %174

154:                                              ; preds = %142
  br i1 %147, label %170, label %167

155:                                              ; preds = %149, %162
  %156 = phi i64 [ %159, %162 ], [ %139, %149 ]
  %157 = phi i8* [ %160, %162 ], [ %145, %149 ]
  %158 = phi i8* [ %163, %162 ], [ %90, %149 ]
  %159 = add i64 %156, -1
  %160 = getelementptr inbounds i8, i8* %157, i64 1
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %170, label %162

162:                                              ; preds = %155
  %163 = getelementptr inbounds i8, i8* %158, i64 1
  %164 = load i8, i8* %160, align 1
  %165 = load i8, i8* %163, align 1
  %166 = icmp eq i8 %164, %165
  br i1 %166, label %155, label %174

167:                                              ; preds = %154
  %168 = call i32 @bcmp(i8* %146, i8* %90, i64 %86) #12
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %174

170:                                              ; preds = %155, %148, %154, %167
  %171 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %125, i64 7
  %172 = bitcast %"class.std::__1::__tree_end_node"* %171 to i64*
  %173 = load i64, i64* %172, align 8
  br label %224

174:                                              ; preds = %162, %149, %128, %130, %79, %167
  %175 = phi %"class.std::__1::__tree_end_node"* [ %125, %167 ], [ %36, %128 ], [ %36, %79 ], [ %125, %130 ], [ %125, %149 ], [ %125, %162 ]
  %176 = call i8* @_Znwm(i64 104) #13
  %177 = bitcast i8* %176 to %"class.crashpad::internal::MinidumpStringWriter"*
  call void @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEC2Ev(%"class.crashpad::internal::MinidumpStringWriter"* nonnull %177) #12
  %178 = bitcast i8* %176 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal25MinidumpUTF16StringWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %178, align 8
  %179 = ptrtoint i8* %176 to i64
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #12
  %180 = load i8, i8* %66, align 1, !noalias !2
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %184, label %182

182:                                              ; preds = %174
  %183 = bitcast %"struct.crashpad::HandleSnapshot"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %183, i64 24, i1 false) #12
  br label %189

184:                                              ; preds = %174
  %185 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8, !noalias !2
  %187 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %57, i64 %56, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %188 = load i64, i64* %187, align 8, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %39, i8* %186, i64 %188) #12
  br label %189

189:                                              ; preds = %182, %184
  store i64 %179, i64* %41, align 8, !alias.scope !2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #12
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %4, align 8
  %190 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_SL_EElEERPNS_15__tree_end_nodeISN_EESO_RKT_(%"class.std::__1::__tree"* %42, %"class.std::__1::__tree_end_node"* %175, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %39) #12
  %191 = bitcast %"class.std::__1::__tree_node_base"** %190 to %"class.std::__1::__tree_node"**
  %192 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_node"* %192, null
  br i1 %193, label %194, label %217

194:                                              ; preds = %189
  %195 = call i8* @_Znwm(i64 64) #13, !noalias !5
  %196 = getelementptr inbounds i8, i8* %195, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* nonnull align 8 %38, i64 24, i1 false) #12, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #12, !noalias !5
  %197 = getelementptr inbounds i8, i8* %195, i64 56
  %198 = load i64, i64* %41, align 8, !noalias !5
  %199 = bitcast i8* %197 to i64*
  store i64 %198, i64* %199, align 8, !noalias !5
  %200 = load i64, i64* %45, align 8
  %201 = bitcast i8* %195 to %"class.std::__1::__tree_node_base"*
  %202 = getelementptr inbounds i8, i8* %195, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 0, i64 16, i1 false) #12
  %203 = bitcast i8* %202 to i64*
  store i64 %200, i64* %203, align 8
  %204 = bitcast %"class.std::__1::__tree_node_base"** %190 to i8**
  store i8* %195, i8** %204, align 8
  %205 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %46, align 8
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %205, i64 0, i32 0
  %207 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %206, align 8
  %208 = icmp eq %"class.std::__1::__tree_node_base"* %207, null
  br i1 %208, label %212, label %209

209:                                              ; preds = %194
  %210 = ptrtoint %"class.std::__1::__tree_node_base"* %207 to i64
  store i64 %210, i64* %47, align 8
  %211 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  br label %212

212:                                              ; preds = %209, %194
  %213 = phi %"class.std::__1::__tree_node_base"* [ %201, %194 ], [ %211, %209 ]
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %214, %"class.std::__1::__tree_node_base"* %213) #12
  %215 = load i64, i64* %49, align 8
  %216 = add i64 %215, 1
  store i64 %216, i64* %49, align 8
  br label %217

217:                                              ; preds = %189, %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  %218 = load i8, i8* %51, align 1
  %219 = icmp slt i8 %218, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %217
  %221 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %221) #13
  br label %222

222:                                              ; preds = %217, %220
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #12
  %223 = bitcast i8* %176 to %"class.crashpad::internal::MinidumpUTF16StringWriter"*
  call void @_ZN8crashpad8internal25MinidumpUTF16StringWriter7SetUTF8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.crashpad::internal::MinidumpUTF16StringWriter"* nonnull %223, %"class.std::__1::basic_string"* dereferenceable(24) %64) #12
  br label %224

224:                                              ; preds = %222, %170
  %225 = phi i64 [ %173, %170 ], [ %179, %222 ]
  %226 = inttoptr i64 %225 to %"class.crashpad::internal::MinidumpWritable"*
  %227 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %59, i64 %56, i32 1
  call void @_ZN8crashpad8internal16MinidumpWritable11RegisterRVAEPj(%"class.crashpad::internal::MinidumpWritable"* %226, i32* %227) #12
  br label %228

228:                                              ; preds = %224, %77
  %229 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %59, i64 %56, i32 2
  store i32 0, i32* %229, align 4
  %230 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %57, i64 %56, i32 2
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %59, i64 %56, i32 3
  store i32 %231, i32* %232, align 4
  %233 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %57, i64 %56, i32 3
  %234 = load i32, i32* %233, align 8
  %235 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %59, i64 %56, i32 4
  store i32 %234, i32* %235, align 4
  %236 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %57, i64 %56, i32 5
  %237 = load i32, i32* %236, align 8
  %238 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %59, i64 %56, i32 5
  store i32 %237, i32* %238, align 4
  %239 = getelementptr inbounds %"struct.crashpad::HandleSnapshot", %"struct.crashpad::HandleSnapshot"* %57, i64 %56, i32 4
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %59, i64 %56, i32 6
  store i32 %240, i32* %241, align 4
  %242 = add nuw i64 %56, 1
  %243 = load i64, i64* %8, align 8
  %244 = load i64, i64* %10, align 8
  %245 = sub i64 %243, %244
  %246 = sdiv exact i64 %245, 48
  %247 = icmp ult i64 %242, %246
  br i1 %247, label %54, label %53
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN8crashpad8internal25MinidumpUTF16StringWriter7SetUTF8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.crashpad::internal::MinidumpUTF16StringWriter"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN8crashpad8internal16MinidumpWritable11RegisterRVAEPj(%"class.crashpad::internal::MinidumpWritable"*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad24MinidumpHandleDataWriter6FreezeEv(%"class.crashpad::MinidumpHandleDataWriter"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZN8crashpad8internal20MinidumpStreamWriter6FreezeEv(%"class.crashpad::internal::MinidumpStreamWriter"* %3) #12
  br i1 %4, label %5, label %30

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 1, i32 0
  store i32 16, i32* %6, align 8
  %7 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 1, i32 1
  store i32 32, i32* %7, align 4
  %8 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 5
  %16 = icmp ult i64 %15, 4294967296
  br i1 %16, label %26, label %17

17:                                               ; preds = %5
  %18 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %18, label %19, label %30

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %20) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 83, i32 2) #12
  %21 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_ostringstream"* %21 to %"class.std::__1::basic_ostream"*
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 13) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %23, i64 %15) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %20) #12
  br label %30

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 1, i32 2
  %28 = trunc i64 %15 to i32
  store i32 %28, i32* %27, align 4
  %29 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %29, align 4
  br label %30

30:                                               ; preds = %19, %17, %26, %1
  %31 = phi i1 [ false, %1 ], [ true, %26 ], [ false, %17 ], [ false, %19 ]
  ret i1 %31
}

declare zeroext i1 @_ZN8crashpad8internal20MinidumpStreamWriter6FreezeEv(%"class.crashpad::internal::MinidumpStreamWriter"*) unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN8crashpad24MinidumpHandleDataWriter12SizeOfObjectEv(%"class.crashpad::MinidumpHandleDataWriter"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.8"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = or i64 %8, 16
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad24MinidumpHandleDataWriter8ChildrenEv(%"class.std::__1::vector.48"* noalias sret, %"class.crashpad::MinidumpHandleDataWriter"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.48"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.crashpad::internal::MinidumpWritable"*** %3 to i64*
  %12 = bitcast %"class.std::__1::vector.48"* %0 to i64*
  %13 = bitcast %"class.crashpad::internal::MinidumpWritable"*** %4 to i64*
  br label %15

14:                                               ; preds = %105, %2
  ret void

15:                                               ; preds = %108, %10
  %16 = phi i64 [ 0, %10 ], [ %111, %108 ]
  %17 = phi %"class.crashpad::internal::MinidumpWritable"** [ null, %10 ], [ %110, %108 ]
  %18 = phi %"class.crashpad::internal::MinidumpWritable"** [ null, %10 ], [ %109, %108 ]
  %19 = phi %"class.std::__1::__tree_end_node"* [ %7, %10 ], [ %106, %108 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 7
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult %"class.crashpad::internal::MinidumpWritable"** %18, %17
  %24 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %17 to i64
  br i1 %23, label %25, label %29

25:                                               ; preds = %15
  %26 = bitcast %"class.crashpad::internal::MinidumpWritable"** %18 to i64*
  store i64 %22, i64* %26, align 8
  %27 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %18, i64 1
  %28 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %27 to i64
  store i64 %28, i64* %11, align 8
  br label %77

29:                                               ; preds = %15
  %30 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %18 to i64
  %31 = load i64, i64* %12, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = add nsw i64 %33, 1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.48"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %24, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %47, %38
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %"class.crashpad::internal::MinidumpWritable"**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.crashpad::internal::MinidumpWritable"** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %57, i64 %33
  %59 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %57, i64 %56
  %60 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %59 to i64
  %61 = bitcast %"class.crashpad::internal::MinidumpWritable"** %58 to i64*
  store i64 %22, i64* %61, align 8
  %62 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %58, i64 1
  %63 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %62 to i64
  %64 = sub i64 %16, %31
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds %"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::internal::MinidumpWritable"** %58, i64 %66
  %68 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %55
  %71 = bitcast %"class.crashpad::internal::MinidumpWritable"** %67 to i8*
  %72 = inttoptr i64 %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #12
  br label %73

73:                                               ; preds = %70, %55
  store i64 %68, i64* %12, align 8
  store i64 %63, i64* %11, align 8
  store i64 %60, i64* %13, align 8
  %74 = icmp eq i64 %31, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = inttoptr i64 %31 to i8*
  tail call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %25, %73, %75
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 1, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %81, label %89

81:                                               ; preds = %77
  %82 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 2
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_end_node"**
  %85 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, %82
  br i1 %88, label %105, label %96

89:                                               ; preds = %77, %89
  %90 = phi %"class.std::__1::__tree_node_base"* [ %92, %89 ], [ %79, %77 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %94, label %89

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 0
  br label %105

96:                                               ; preds = %81, %96
  %97 = phi %"class.std::__1::__tree_end_node"** [ %100, %96 ], [ %84, %81 ]
  %98 = bitcast %"class.std::__1::__tree_end_node"** %97 to %"class.std::__1::__tree_node_base"**
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  br i1 %104, label %105, label %96

105:                                              ; preds = %96, %81, %94
  %106 = phi %"class.std::__1::__tree_end_node"* [ %95, %94 ], [ %85, %81 ], [ %101, %96 ]
  %107 = icmp eq %"class.std::__1::__tree_end_node"* %106, %8
  br i1 %107, label %14, label %108

108:                                              ; preds = %105
  %109 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %3, align 8
  %110 = load %"class.crashpad::internal::MinidumpWritable"**, %"class.crashpad::internal::MinidumpWritable"*** %4, align 8
  %111 = ptrtoint %"class.crashpad::internal::MinidumpWritable"** %109 to i64
  br label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8crashpad24MinidumpHandleDataWriter11WriteObjectEPNS_19FileWriterInterfaceE(%"class.crashpad::MinidumpHandleDataWriter"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.55", align 8
  %4 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector.55"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 16) #13
  %10 = bitcast %"class.std::__1::vector.55"* %3 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 16
  %12 = bitcast %"struct.crashpad::WritableIoVec"** %8 to i8**
  store i8* %11, i8** %12, align 8
  %13 = bitcast i8* %9 to %struct.MINIDUMP_HANDLE_DATA_STREAM**
  store %struct.MINIDUMP_HANDLE_DATA_STREAM* %4, %struct.MINIDUMP_HANDLE_DATA_STREAM** %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  store i64 16, i64* %15, align 8
  %16 = bitcast %"struct.crashpad::WritableIoVec"** %7 to i64*
  %17 = ptrtoint i8* %11 to i64
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = load %struct.MINIDUMP_HANDLE_DESCRIPTOR*, %struct.MINIDUMP_HANDLE_DESCRIPTOR** %18, align 8
  %20 = getelementptr inbounds %"class.crashpad::MinidumpHandleDataWriter", %"class.crashpad::MinidumpHandleDataWriter"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load %struct.MINIDUMP_HANDLE_DESCRIPTOR*, %struct.MINIDUMP_HANDLE_DESCRIPTOR** %20, align 8
  %22 = icmp eq %struct.MINIDUMP_HANDLE_DESCRIPTOR* %19, %21
  br i1 %22, label %28, label %23

23:                                               ; preds = %2
  %24 = bitcast i8* %11 to %"struct.crashpad::WritableIoVec"*
  %25 = bitcast i8* %11 to %"struct.crashpad::WritableIoVec"*
  %26 = bitcast %"class.std::__1::vector.55"* %3 to i64*
  %27 = bitcast %"struct.crashpad::WritableIoVec"** %8 to i64*
  br label %40

28:                                               ; preds = %98, %2
  %29 = bitcast %"class.crashpad::FileWriterInterface"* %1 to i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.55"*)***
  %30 = load i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.55"*)**, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.55"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.55"*)*, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.55"*)** %30, i64 4
  %32 = load i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.55"*)*, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.55"*)** %31, align 8
  %33 = call zeroext i1 %32(%"class.crashpad::FileWriterInterface"* %1, %"class.std::__1::vector.55"* nonnull %3) #12
  %34 = load %"struct.crashpad::WritableIoVec"*, %"struct.crashpad::WritableIoVec"** %6, align 8
  %35 = icmp eq %"struct.crashpad::WritableIoVec"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %28
  %37 = ptrtoint %"struct.crashpad::WritableIoVec"* %34 to i64
  store i64 %37, i64* %16, align 8
  %38 = bitcast %"struct.crashpad::WritableIoVec"* %34 to i8*
  call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %28, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret i1 %33

40:                                               ; preds = %103, %23
  %41 = phi i64 [ %17, %23 ], [ %99, %103 ]
  %42 = phi %"struct.crashpad::WritableIoVec"* [ %24, %23 ], [ %104, %103 ]
  %43 = phi %"struct.crashpad::WritableIoVec"* [ %25, %23 ], [ %100, %103 ]
  %44 = phi %struct.MINIDUMP_HANDLE_DESCRIPTOR* [ %19, %23 ], [ %101, %103 ]
  %45 = icmp eq %"struct.crashpad::WritableIoVec"* %43, %42
  br i1 %45, label %51, label %46

46:                                               ; preds = %40
  %47 = bitcast %"struct.crashpad::WritableIoVec"* %43 to %struct.MINIDUMP_HANDLE_DESCRIPTOR**
  store %struct.MINIDUMP_HANDLE_DESCRIPTOR* %44, %struct.MINIDUMP_HANDLE_DESCRIPTOR** %47, align 8
  %48 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %43, i64 0, i32 1
  store i64 32, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %43, i64 1
  %50 = ptrtoint %"struct.crashpad::WritableIoVec"* %49 to i64
  store i64 %50, i64* %16, align 8
  br label %98

51:                                               ; preds = %40
  %52 = ptrtoint %"struct.crashpad::WritableIoVec"* %42 to i64
  %53 = load i64, i64* %26, align 8
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 4
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 1152921504606846975
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::vector.55"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %59) #14
  unreachable

60:                                               ; preds = %51
  %61 = icmp ult i64 %55, 576460752303423487
  br i1 %61, label %62, label %70

62:                                               ; preds = %60
  %63 = ashr exact i64 %54, 3
  %64 = icmp ult i64 %63, %56
  %65 = select i1 %64, i64 %56, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %62
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  tail call void @abort() #14
  unreachable

70:                                               ; preds = %67, %60
  %71 = phi i64 [ %65, %67 ], [ 1152921504606846975, %60 ]
  %72 = shl i64 %71, 4
  %73 = tail call i8* @_Znwm(i64 %72) #13
  %74 = bitcast i8* %73 to %"struct.crashpad::WritableIoVec"*
  br label %75

75:                                               ; preds = %70, %62
  %76 = phi i64 [ %71, %70 ], [ 0, %62 ]
  %77 = phi %"struct.crashpad::WritableIoVec"* [ %74, %70 ], [ null, %62 ]
  %78 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %77, i64 %55
  %79 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %77, i64 %76
  %80 = ptrtoint %"struct.crashpad::WritableIoVec"* %79 to i64
  %81 = bitcast %"struct.crashpad::WritableIoVec"* %78 to %struct.MINIDUMP_HANDLE_DESCRIPTOR**
  store %struct.MINIDUMP_HANDLE_DESCRIPTOR* %44, %struct.MINIDUMP_HANDLE_DESCRIPTOR** %81, align 8
  %82 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %77, i64 %55, i32 1
  store i64 32, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %78, i64 1
  %84 = ptrtoint %"struct.crashpad::WritableIoVec"* %83 to i64
  %85 = sub i64 %41, %53
  %86 = ashr exact i64 %85, 4
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds %"struct.crashpad::WritableIoVec", %"struct.crashpad::WritableIoVec"* %78, i64 %87
  %89 = ptrtoint %"struct.crashpad::WritableIoVec"* %88 to i64
  %90 = icmp sgt i64 %85, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %75
  %92 = bitcast %"struct.crashpad::WritableIoVec"* %88 to i8*
  %93 = inttoptr i64 %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 %85, i1 false) #12
  br label %94

94:                                               ; preds = %91, %75
  store i64 %89, i64* %26, align 8
  store i64 %84, i64* %16, align 8
  store i64 %80, i64* %27, align 8
  %95 = icmp eq i64 %53, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %53 to i8*
  tail call void @_ZdlPv(i8* %97) #13
  br label %98

98:                                               ; preds = %46, %94, %96
  %99 = phi i64 [ %50, %46 ], [ %84, %94 ], [ %84, %96 ]
  %100 = phi %"struct.crashpad::WritableIoVec"* [ %49, %46 ], [ %83, %94 ], [ %83, %96 ]
  %101 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %44, i64 1
  %102 = icmp eq %struct.MINIDUMP_HANDLE_DESCRIPTOR* %101, %21
  br i1 %102, label %28, label %103

103:                                              ; preds = %98
  %104 = load %"struct.crashpad::WritableIoVec"*, %"struct.crashpad::WritableIoVec"** %8, align 8
  br label %40
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK8crashpad24MinidumpHandleDataWriter10StreamTypeEv(%"class.crashpad::MinidumpHandleDataWriter"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 12
}

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE(%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #1

declare i64 @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #1

declare i32 @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #1

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl(%"class.crashpad::internal::MinidumpWritable"*, i64) unnamed_addr #1

declare void @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEC2Ev(%"class.crashpad::internal::MinidumpStringWriter"*) unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI26MINIDUMP_HANDLE_DESCRIPTORNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.8"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.MINIDUMP_HANDLE_DESCRIPTOR*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %13, i64 %18, i32 0
  %20 = bitcast i64* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 32
  %25 = and i64 %24, -32
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %struct.MINIDUMP_HANDLE_DESCRIPTOR* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 5
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 576460752303423487
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 5
  %41 = icmp ult i64 %40, 288230376151711743
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 4
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 576460752303423487
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 576460752303423487, %38 ]
  %52 = shl i64 %51, 5
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %struct.MINIDUMP_HANDLE_DESCRIPTOR*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %struct.MINIDUMP_HANDLE_DESCRIPTOR* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %57, i64 %33
  %59 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR* %58 to i8*
  %60 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %57, i64 %56
  %61 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %58, i64 %1
  %62 = shl nsw i64 %1, 5
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %struct.MINIDUMP_HANDLE_DESCRIPTOR* %60 to i64
  %64 = ptrtoint %struct.MINIDUMP_HANDLE_DESCRIPTOR* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %66 = load %struct.MINIDUMP_HANDLE_DESCRIPTOR*, %struct.MINIDUMP_HANDLE_DESCRIPTOR** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %struct.MINIDUMP_HANDLE_DESCRIPTOR* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 5
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %struct.MINIDUMP_HANDLE_DESCRIPTOR, %struct.MINIDUMP_HANDLE_DESCRIPTOR* %58, i64 %71
  %73 = ptrtoint %struct.MINIDUMP_HANDLE_DESCRIPTOR* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR* %72 to i8*
  %77 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #12
  %78 = load %struct.MINIDUMP_HANDLE_DESCRIPTOR*, %struct.MINIDUMP_HANDLE_DESCRIPTOR** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %struct.MINIDUMP_HANDLE_DESCRIPTOR* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %struct.MINIDUMP_HANDLE_DESCRIPTOR* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %struct.MINIDUMP_HANDLE_DESCRIPTOR* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISC_PNS_11__tree_nodeISC_SL_EElEERPNS_15__tree_end_nodeISN_EESO_RKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %46, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i64 %17, i64 %18
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %19, %27
  %29 = select i1 %28, i64 %19, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %35 = select i1 %23, i8* %33, i8* %34
  %36 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %39 = select i1 %14, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %35, i8* %39, i64 %29) #12
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %31, %9
  %43 = icmp ult i64 %27, %19
  br i1 %43, label %46, label %120

44:                                               ; preds = %31
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %130

46:                                               ; preds = %42, %5, %44
  %47 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %1
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br i1 %49, label %109, label %52

52:                                               ; preds = %46
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %52, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %51, %52 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %70, label %54

59:                                               ; preds = %52, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %64, %59 ], [ %1, %52 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 2
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_end_node"**
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %61
  br i1 %67, label %59, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  br label %70

70:                                               ; preds = %54, %68
  %71 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %54 ]
  %72 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1
  %74 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1, i32 1
  %87 = bitcast %"class.std::__1::__tree_node_base"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %84 to i64
  %90 = select i1 %85, i64 %88, i64 %89
  %91 = icmp ult i64 %81, %90
  %92 = select i1 %91, i64 %81, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %70
  %95 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8*
  %98 = select i1 %85, i8* %96, i8* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %102 = select i1 %77, i8* %100, i8* %101
  %103 = tail call i32 @memcmp(i8* %98, i8* %102, i64 %92) #12
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %94, %70
  %106 = icmp ult i64 %90, %81
  br i1 %106, label %109, label %118

107:                                              ; preds = %94
  %108 = icmp slt i32 %103, 0
  br i1 %108, label %109, label %118

109:                                              ; preds = %46, %105, %107
  %110 = phi i64 [ %72, %107 ], [ %72, %105 ], [ %6, %46 ]
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %208

114:                                              ; preds = %109
  %115 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %110, i64* %115, align 8
  %116 = inttoptr i64 %110 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 1
  br label %208

118:                                              ; preds = %105, %107
  %119 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISN_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  br label %208

120:                                              ; preds = %42
  br i1 %30, label %135, label %121

121:                                              ; preds = %120
  %122 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %127 = select i1 %14, i8* %123, i8* %126
  %128 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %129 = select i1 %23, i8* %125, i8* %128
  br label %130

130:                                              ; preds = %121, %44
  %131 = phi i8* [ %129, %121 ], [ %35, %44 ]
  %132 = phi i8* [ %127, %121 ], [ %39, %44 ]
  %133 = tail call i32 @memcmp(i8* %132, i8* %131, i64 %29) #12
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %130, %120
  br i1 %28, label %138, label %205

136:                                              ; preds = %130
  %137 = icmp slt i32 %133, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %135, %136
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %145 = bitcast %"class.std::__1::__tree_end_node"* %144 to %"class.std::__1::__tree_end_node"**
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, %143
  br i1 %149, label %166, label %157

150:                                              ; preds = %138, %150
  %151 = phi %"class.std::__1::__tree_node_base"* [ %153, %150 ], [ %140, %138 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %150

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0
  br label %166

157:                                              ; preds = %142, %157
  %158 = phi %"class.std::__1::__tree_end_node"** [ %161, %157 ], [ %145, %142 ]
  %159 = bitcast %"class.std::__1::__tree_end_node"** %158 to %"class.std::__1::__tree_node_base"**
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %160, i64 0, i32 2
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %160
  br i1 %165, label %166, label %157

166:                                              ; preds = %157, %155, %142
  %167 = phi %"class.std::__1::__tree_end_node"* [ %156, %155 ], [ %146, %142 ], [ %162, %157 ]
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %167, %7
  br i1 %168, label %198, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 4
  %171 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 5
  %176 = bitcast %"class.std::__1::__tree_end_node"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = zext i8 %173 to i64
  %179 = select i1 %174, i64 %177, i64 %178
  %180 = icmp ult i64 %179, %27
  %181 = select i1 %180, i64 %179, i64 %27
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %169
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %187 = select i1 %23, i8* %185, i8* %186
  %188 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8*
  %191 = select i1 %174, i8* %189, i8* %190
  %192 = tail call i32 @memcmp(i8* %187, i8* %191, i64 %181) #12
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %183, %169
  %195 = icmp ult i64 %27, %179
  br i1 %195, label %198, label %203

196:                                              ; preds = %183
  %197 = icmp slt i32 %192, 0
  br i1 %197, label %198, label %203

198:                                              ; preds = %194, %166, %196
  br i1 %141, label %199, label %201

199:                                              ; preds = %198
  %200 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %200, align 8
  br label %208

201:                                              ; preds = %198
  store %"class.std::__1::__tree_end_node"* %167, %"class.std::__1::__tree_end_node"** %2, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  br label %208

203:                                              ; preds = %194, %196
  %204 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISN_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  br label %208

205:                                              ; preds = %135, %136
  %206 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %206, align 8
  %207 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %207, align 8
  br label %208

208:                                              ; preds = %199, %201, %203, %112, %114, %118, %205
  %209 = phi %"class.std::__1::__tree_node_base"** [ %3, %205 ], [ %113, %112 ], [ %117, %114 ], [ %119, %118 ], [ %139, %199 ], [ %202, %201 ], [ %204, %203 ]
  ret %"class.std::__1::__tree_node_base"** %209
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISN_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__19make_pairIRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__19make_pairIRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSF_IT0_E4typeEEEOSG_OSJ_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE16__construct_nodeIJNS_4pairIS7_SB_EEEEENS_10unique_ptrINS_11__tree_nodeISC_PvEENS_22__tree_node_destructorINS5_ISP_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN8crashpad8internal25MinidumpUTF16StringWriterEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE16__construct_nodeIJNS_4pairIS7_SB_EEEEENS_10unique_ptrINS_11__tree_nodeISC_PvEENS_22__tree_node_destructorINS5_ISP_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
