; ModuleID = '../../third_party/boringssl/src/crypto/x509/x509name.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x509name.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.X509_name_entry_st = type { %struct.asn1_object_st*, %struct.asn1_string_st*, i32, i32 }

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/x509/x509name.c\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"name=\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_get_text_by_NID(%struct.X509_name_st* readonly, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 %1) #5
  %6 = icmp eq %struct.asn1_object_st* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @X509_NAME_get_text_by_OBJ(%struct.X509_name_st* %0, %struct.asn1_object_st* nonnull %5, i8* %2, i32 %3)
  br label %9

9:                                                ; preds = %4, %7
  %10 = phi i32 [ %8, %7 ], [ -1, %4 ]
  ret i32 %10
}

declare %struct.asn1_object_st* @OBJ_nid2obj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_get_text_by_OBJ(%struct.X509_name_st* readonly, %struct.asn1_object_st*, i8*, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.X509_name_st* %0, null
  br i1 %5, label %55, label %6

6:                                                ; preds = %4
  %7 = bitcast %struct.X509_name_st* %0 to %struct.stack_st**
  %8 = load %struct.stack_st*, %struct.stack_st** %7, align 8
  %9 = tail call i64 @sk_num(%struct.stack_st* %8) #5
  %10 = shl i64 %9, 32
  %11 = ashr exact i64 %10, 32
  br label %12

12:                                               ; preds = %16, %6
  %13 = phi i64 [ %14, %16 ], [ -1, %6 ]
  %14 = add nsw i64 %13, 1
  %15 = icmp slt i64 %14, %11
  br i1 %15, label %16, label %55

16:                                               ; preds = %12
  %17 = tail call i8* @sk_value(%struct.stack_st* %8, i64 %14) #5
  %18 = bitcast i8* %17 to %struct.asn1_object_st**
  %19 = load %struct.asn1_object_st*, %struct.asn1_object_st** %18, align 8
  %20 = tail call i32 @OBJ_cmp(%struct.asn1_object_st* %19, %struct.asn1_object_st* %1) #5
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %12

22:                                               ; preds = %16
  %23 = trunc i64 %14 to i32
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %55, label %25

25:                                               ; preds = %22
  %26 = load %struct.stack_st*, %struct.stack_st** %7, align 8
  %27 = tail call i64 @sk_num(%struct.stack_st* %26) #5
  %28 = shl i64 %14, 32
  %29 = ashr exact i64 %28, 32
  %30 = icmp ugt i64 %27, %29
  br i1 %30, label %31, label %39

31:                                               ; preds = %25
  %32 = load %struct.stack_st*, %struct.stack_st** %7, align 8
  %33 = tail call i8* @sk_value(%struct.stack_st* %32, i64 %29) #5
  %34 = icmp eq i8* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds i8, i8* %33, i64 8
  %37 = bitcast i8* %36 to %struct.asn1_string_st**
  %38 = load %struct.asn1_string_st*, %struct.asn1_string_st** %37, align 8
  br label %39

39:                                               ; preds = %25, %31, %35
  %40 = phi %struct.asn1_string_st* [ %38, %35 ], [ null, %31 ], [ null, %25 ]
  %41 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp slt i32 %42, %3
  %44 = add nsw i32 %3, -1
  %45 = select i1 %43, i32 %42, i32 %44
  %46 = icmp eq i8* %2, null
  br i1 %46, label %55, label %47

47:                                               ; preds = %39
  %48 = sext i32 %45 to i64
  %49 = icmp eq i32 %45, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %40, i64 0, i32 2
  %52 = load i8*, i8** %51, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %2, i8* align 1 %52, i64 %48, i1 false) #5
  br label %53

53:                                               ; preds = %47, %50
  %54 = getelementptr inbounds i8, i8* %2, i64 %48
  store i8 0, i8* %54, align 1
  br label %55

55:                                               ; preds = %12, %4, %39, %22, %53
  %56 = phi i32 [ %45, %53 ], [ -1, %22 ], [ %42, %39 ], [ -1, %4 ], [ -1, %12 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_get_index_by_OBJ(%struct.X509_name_st* readonly, %struct.asn1_object_st*, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.X509_name_st* %0, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %3
  %6 = icmp sgt i32 %2, -1
  %7 = select i1 %6, i32 %2, i32 -1
  %8 = bitcast %struct.X509_name_st* %0 to %struct.stack_st**
  %9 = load %struct.stack_st*, %struct.stack_st** %8, align 8
  %10 = tail call i64 @sk_num(%struct.stack_st* %9) #5
  %11 = sext i32 %7 to i64
  %12 = shl i64 %10, 32
  %13 = ashr exact i64 %12, 32
  br label %14

14:                                               ; preds = %18, %5
  %15 = phi i64 [ %16, %18 ], [ %11, %5 ]
  %16 = add nsw i64 %15, 1
  %17 = icmp slt i64 %16, %13
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  %19 = tail call i8* @sk_value(%struct.stack_st* %9, i64 %16) #5
  %20 = bitcast i8* %19 to %struct.asn1_object_st**
  %21 = load %struct.asn1_object_st*, %struct.asn1_object_st** %20, align 8
  %22 = tail call i32 @OBJ_cmp(%struct.asn1_object_st* %21, %struct.asn1_object_st* %1) #5
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %14

24:                                               ; preds = %18
  %25 = trunc i64 %16 to i32
  br label %26

26:                                               ; preds = %14, %24, %3
  %27 = phi i32 [ -1, %3 ], [ %25, %24 ], [ -1, %14 ]
  ret i32 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_NAME_ENTRY_get_data(%struct.X509_name_entry_st* readonly) local_unnamed_addr #2 {
  %2 = icmp eq %struct.X509_name_entry_st* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %0, i64 0, i32 1
  %5 = load %struct.asn1_string_st*, %struct.asn1_string_st** %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi %struct.asn1_string_st* [ %5, %3 ], [ null, %1 ]
  ret %struct.asn1_string_st* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_entry_st* @X509_NAME_get_entry(%struct.X509_name_st* readonly, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.X509_name_st* %0, null
  %4 = icmp slt i32 %1, 0
  %5 = or i1 %3, %4
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.X509_name_st* %0 to %struct.stack_st**
  %8 = load %struct.stack_st*, %struct.stack_st** %7, align 8
  %9 = tail call i64 @sk_num(%struct.stack_st* %8) #5
  %10 = sext i32 %1 to i64
  %11 = icmp ugt i64 %9, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %6
  %13 = load %struct.stack_st*, %struct.stack_st** %7, align 8
  %14 = tail call i8* @sk_value(%struct.stack_st* %13, i64 %10) #5
  %15 = bitcast i8* %14 to %struct.X509_name_entry_st*
  br label %16

16:                                               ; preds = %2, %6, %12
  %17 = phi %struct.X509_name_entry_st* [ %15, %12 ], [ null, %6 ], [ null, %2 ]
  ret %struct.X509_name_entry_st* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_entry_count(%struct.X509_name_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.X509_name_st* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.X509_name_st* %0 to %struct.stack_st**
  %5 = load %struct.stack_st*, %struct.stack_st** %4, align 8
  %6 = tail call i64 @sk_num(%struct.stack_st* %5) #5
  %7 = trunc i64 %6 to i32
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi i32 [ %7, %3 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_get_index_by_NID(%struct.X509_name_st* readonly, i32, i32) local_unnamed_addr #0 {
  %4 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 %1) #5
  %5 = icmp eq %struct.asn1_object_st* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %3
  %7 = icmp eq %struct.X509_name_st* %0, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %6
  %9 = icmp sgt i32 %2, -1
  %10 = select i1 %9, i32 %2, i32 -1
  %11 = bitcast %struct.X509_name_st* %0 to %struct.stack_st**
  %12 = load %struct.stack_st*, %struct.stack_st** %11, align 8
  %13 = tail call i64 @sk_num(%struct.stack_st* %12) #5
  %14 = sext i32 %10 to i64
  %15 = shl i64 %13, 32
  %16 = ashr exact i64 %15, 32
  br label %17

17:                                               ; preds = %21, %8
  %18 = phi i64 [ %19, %21 ], [ %14, %8 ]
  %19 = add nsw i64 %18, 1
  %20 = icmp slt i64 %19, %16
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = tail call i8* @sk_value(%struct.stack_st* %12, i64 %19) #5
  %23 = bitcast i8* %22 to %struct.asn1_object_st**
  %24 = load %struct.asn1_object_st*, %struct.asn1_object_st** %23, align 8
  %25 = tail call i32 @OBJ_cmp(%struct.asn1_object_st* %24, %struct.asn1_object_st* nonnull %4) #5
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %17

27:                                               ; preds = %21
  %28 = trunc i64 %19 to i32
  br label %29

29:                                               ; preds = %17, %27, %6, %3
  %30 = phi i32 [ -2, %3 ], [ -1, %6 ], [ %28, %27 ], [ -1, %17 ]
  ret i32 %30
}

declare i32 @OBJ_cmp(%struct.asn1_object_st*, %struct.asn1_object_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_entry_st* @X509_NAME_delete_entry(%struct.X509_name_st*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.X509_name_st* %0, null
  %4 = icmp slt i32 %1, 0
  %5 = or i1 %3, %4
  br i1 %5, label %54, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.X509_name_st* %0 to %struct.stack_st**
  %8 = load %struct.stack_st*, %struct.stack_st** %7, align 8
  %9 = tail call i64 @sk_num(%struct.stack_st* %8) #5
  %10 = sext i32 %1 to i64
  %11 = icmp ugt i64 %9, %10
  br i1 %11, label %12, label %54

12:                                               ; preds = %6
  %13 = load %struct.stack_st*, %struct.stack_st** %7, align 8
  %14 = tail call i8* @sk_delete(%struct.stack_st* %13, i64 %10) #5
  %15 = bitcast i8* %14 to %struct.X509_name_entry_st*
  %16 = tail call i64 @sk_num(%struct.stack_st* %13) #5
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 1
  store i32 1, i32* %18, align 8
  %19 = icmp eq i32 %17, %1
  br i1 %19, label %54, label %20

20:                                               ; preds = %12
  %21 = icmp eq i32 %1, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %20
  %23 = add nsw i32 %1, -1
  %24 = sext i32 %23 to i64
  %25 = tail call i8* @sk_value(%struct.stack_st* %13, i64 %24) #5
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  br label %34

29:                                               ; preds = %20
  %30 = getelementptr inbounds i8, i8* %14, i64 16
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = add nsw i32 %32, -1
  br label %34

34:                                               ; preds = %29, %22
  %35 = phi i32 [ %28, %22 ], [ %33, %29 ]
  %36 = tail call i8* @sk_value(%struct.stack_st* %13, i64 %10) #5
  %37 = getelementptr inbounds i8, i8* %36, i64 16
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = add nsw i32 %35, 1
  %41 = icmp slt i32 %40, %39
  %42 = icmp sgt i32 %17, %1
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %54

44:                                               ; preds = %34, %44
  %45 = phi i64 [ %51, %44 ], [ %10, %34 ]
  %46 = tail call i8* @sk_value(%struct.stack_st* %13, i64 %45) #5
  %47 = getelementptr inbounds i8, i8* %46, i64 16
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %48, align 8
  %51 = add nsw i64 %45, 1
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, %17
  br i1 %53, label %54, label %44

54:                                               ; preds = %44, %34, %12, %2, %6
  %55 = phi %struct.X509_name_entry_st* [ null, %6 ], [ null, %2 ], [ %15, %12 ], [ %15, %34 ], [ %15, %44 ]
  ret %struct.X509_name_entry_st* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_add_entry_by_OBJ(%struct.X509_name_st*, %struct.asn1_object_st*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %8 = tail call %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_OBJ(%struct.X509_name_entry_st** null, %struct.asn1_object_st* %1, i32 %2, i8* %3, i32 %4)
  %9 = icmp eq %struct.X509_name_entry_st* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @X509_NAME_add_entry(%struct.X509_name_st* %0, %struct.X509_name_entry_st* nonnull %8, i32 %5, i32 %6)
  tail call void @X509_NAME_ENTRY_free(%struct.X509_name_entry_st* nonnull %8) #5
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i32 [ %11, %10 ], [ 0, %7 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_OBJ(%struct.X509_name_entry_st**, %struct.asn1_object_st*, i32, i8*, i32) local_unnamed_addr #0 {
  %6 = icmp eq %struct.X509_name_entry_st** %0, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = load %struct.X509_name_entry_st*, %struct.X509_name_entry_st** %0, align 8
  %9 = icmp eq %struct.X509_name_entry_st* %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %7, %5
  %11 = tail call %struct.X509_name_entry_st* @X509_NAME_ENTRY_new() #5
  %12 = icmp eq %struct.X509_name_entry_st* %11, null
  br i1 %12, label %37, label %13

13:                                               ; preds = %7, %10
  %14 = phi %struct.X509_name_entry_st* [ %11, %10 ], [ %8, %7 ]
  %15 = icmp eq %struct.X509_name_entry_st* %14, null
  %16 = icmp eq %struct.asn1_object_st* %1, null
  %17 = or i1 %16, %15
  br i1 %17, label %18, label %19

18:                                               ; preds = %13
  tail call void @ERR_put_error(i32 11, i32 0, i32 67, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 345) #5
  br label %32

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %14, i64 0, i32 0
  %21 = load %struct.asn1_object_st*, %struct.asn1_object_st** %20, align 8
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* %21) #5
  %22 = tail call %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st* nonnull %1) #5
  store %struct.asn1_object_st* %22, %struct.asn1_object_st** %20, align 8
  %23 = icmp eq %struct.asn1_object_st* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = tail call i32 @X509_NAME_ENTRY_set_data(%struct.X509_name_entry_st* nonnull %14, i32 %2, i8* %3, i32 %4)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  br i1 %6, label %37, label %28

28:                                               ; preds = %27
  %29 = load %struct.X509_name_entry_st*, %struct.X509_name_entry_st** %0, align 8
  %30 = icmp eq %struct.X509_name_entry_st* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %28
  store %struct.X509_name_entry_st* %14, %struct.X509_name_entry_st** %0, align 8
  br label %37

32:                                               ; preds = %18, %24, %19
  br i1 %6, label %36, label %33

33:                                               ; preds = %32
  %34 = load %struct.X509_name_entry_st*, %struct.X509_name_entry_st** %0, align 8
  %35 = icmp eq %struct.X509_name_entry_st* %14, %34
  br i1 %35, label %37, label %36

36:                                               ; preds = %33, %32
  tail call void @X509_NAME_ENTRY_free(%struct.X509_name_entry_st* nonnull %14) #5
  br label %37

37:                                               ; preds = %36, %33, %28, %31, %27, %10
  %38 = phi %struct.X509_name_entry_st* [ null, %10 ], [ %14, %27 ], [ %14, %31 ], [ %14, %28 ], [ null, %33 ], [ null, %36 ]
  ret %struct.X509_name_entry_st* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_add_entry(%struct.X509_name_st*, %struct.X509_name_entry_st*, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.X509_name_st* %0, null
  br i1 %5, label %77, label %6

6:                                                ; preds = %4
  %7 = bitcast %struct.X509_name_st* %0 to %struct.stack_st**
  %8 = load %struct.stack_st*, %struct.stack_st** %7, align 8
  %9 = tail call i64 @sk_num(%struct.stack_st* %8) #5
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %10, %2
  %12 = icmp slt i32 %2, 0
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 %10, i32 %2
  %15 = icmp eq i32 %3, 0
  %16 = zext i1 %15 to i32
  %17 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 1
  store i32 1, i32* %17, align 8
  %18 = icmp eq i32 %3, -1
  br i1 %18, label %19, label %28

19:                                               ; preds = %6
  %20 = icmp eq i32 %14, 0
  br i1 %20, label %46, label %21

21:                                               ; preds = %19
  %22 = add nsw i32 %14, -1
  %23 = sext i32 %22 to i64
  %24 = tail call i8* @sk_value(%struct.stack_st* %8, i64 %23) #5
  %25 = getelementptr inbounds i8, i8* %24, i64 16
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 8
  br label %46

28:                                               ; preds = %6
  %29 = icmp slt i32 %14, %10
  br i1 %29, label %40, label %30

30:                                               ; preds = %28
  %31 = icmp eq i32 %14, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %30
  %33 = add nsw i32 %14, -1
  %34 = sext i32 %33 to i64
  %35 = tail call i8* @sk_value(%struct.stack_st* %8, i64 %34) #5
  %36 = getelementptr inbounds i8, i8* %35, i64 16
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, 1
  br label %46

40:                                               ; preds = %28
  %41 = sext i32 %14 to i64
  %42 = tail call i8* @sk_value(%struct.stack_st* %8, i64 %41) #5
  %43 = getelementptr inbounds i8, i8* %42, i64 16
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 8
  br label %46

46:                                               ; preds = %30, %19, %40, %32, %21
  %47 = phi i32 [ %27, %21 ], [ %39, %32 ], [ %45, %40 ], [ 0, %19 ], [ 0, %30 ]
  %48 = phi i32 [ %16, %21 ], [ %16, %32 ], [ %16, %40 ], [ 1, %19 ], [ %16, %30 ]
  %49 = tail call %struct.X509_name_entry_st* @X509_NAME_ENTRY_dup(%struct.X509_name_entry_st* %1) #5
  %50 = icmp eq %struct.X509_name_entry_st* %49, null
  br i1 %50, label %77, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %49, i64 0, i32 2
  store i32 %47, i32* %52, align 8
  %53 = sext i32 %14 to i64
  %54 = bitcast %struct.X509_name_entry_st* %49 to i8*
  %55 = tail call i64 @sk_insert(%struct.stack_st* %8, i8* nonnull %54, i64 %53) #5
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %51
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 267) #5
  tail call void @X509_NAME_ENTRY_free(%struct.X509_name_entry_st* nonnull %49) #5
  br label %77

58:                                               ; preds = %51
  %59 = icmp eq i32 %48, 0
  br i1 %59, label %77, label %60

60:                                               ; preds = %58
  %61 = tail call i64 @sk_num(%struct.stack_st* %8) #5
  %62 = trunc i64 %61 to i32
  %63 = add i32 %14, 1
  %64 = icmp slt i32 %63, %62
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = sext i32 %63 to i64
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ %66, %65 ], [ %74, %67 ]
  %69 = tail call i8* @sk_value(%struct.stack_st* %8, i64 %68) #5
  %70 = getelementptr inbounds i8, i8* %69, i64 16
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 8
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %71, align 8
  %74 = add nsw i64 %68, 1
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %75, %62
  br i1 %76, label %77, label %67

77:                                               ; preds = %67, %60, %46, %57, %58, %4
  %78 = phi i32 [ 0, %4 ], [ 1, %58 ], [ 0, %46 ], [ 0, %57 ], [ 1, %60 ], [ 1, %67 ]
  ret i32 %78
}

declare void @X509_NAME_ENTRY_free(%struct.X509_name_entry_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_add_entry_by_NID(%struct.X509_name_st*, i32, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %8 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 %1) #5
  %9 = icmp eq %struct.asn1_object_st* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  tail call void @ERR_put_error(i32 11, i32 0, i32 129, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 308) #5
  br label %16

11:                                               ; preds = %7
  %12 = tail call %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_OBJ(%struct.X509_name_entry_st** null, %struct.asn1_object_st* nonnull %8, i32 %2, i8* %3, i32 %4) #5
  %13 = icmp eq %struct.X509_name_entry_st* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call i32 @X509_NAME_add_entry(%struct.X509_name_st* %0, %struct.X509_name_entry_st* nonnull %12, i32 %5, i32 %6)
  tail call void @X509_NAME_ENTRY_free(%struct.X509_name_entry_st* nonnull %12) #5
  br label %16

16:                                               ; preds = %10, %11, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %11 ], [ 0, %10 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_NID(%struct.X509_name_entry_st**, i32, i32, i8*, i32) local_unnamed_addr #0 {
  %6 = tail call %struct.asn1_object_st* @OBJ_nid2obj(i32 %1) #5
  %7 = icmp eq %struct.asn1_object_st* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @ERR_put_error(i32 11, i32 0, i32 129, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 308) #5
  br label %11

9:                                                ; preds = %5
  %10 = tail call %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_OBJ(%struct.X509_name_entry_st** %0, %struct.asn1_object_st* nonnull %6, i32 %2, i8* %3, i32 %4)
  br label %11

11:                                               ; preds = %9, %8
  %12 = phi %struct.X509_name_entry_st* [ null, %8 ], [ %10, %9 ]
  ret %struct.X509_name_entry_st* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_add_entry_by_txt(%struct.X509_name_st*, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #0 {
  %8 = tail call %struct.asn1_object_st* @OBJ_txt2obj(i8* %1, i32 0) #5
  %9 = icmp eq %struct.asn1_object_st* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %7
  tail call void @ERR_put_error(i32 11, i32 0, i32 111, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 292) #5
  tail call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* %1) #5
  br label %16

11:                                               ; preds = %7
  %12 = tail call %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_OBJ(%struct.X509_name_entry_st** null, %struct.asn1_object_st* nonnull %8, i32 %2, i8* %3, i32 %4) #5
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* nonnull %8) #5
  %13 = icmp eq %struct.X509_name_entry_st* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call i32 @X509_NAME_add_entry(%struct.X509_name_st* %0, %struct.X509_name_entry_st* nonnull %12, i32 %5, i32 %6)
  tail call void @X509_NAME_ENTRY_free(%struct.X509_name_entry_st* nonnull %12) #5
  br label %16

16:                                               ; preds = %10, %11, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %11 ], [ 0, %10 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_txt(%struct.X509_name_entry_st**, i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %6 = tail call %struct.asn1_object_st* @OBJ_txt2obj(i8* %1, i32 0) #5
  %7 = icmp eq %struct.asn1_object_st* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @ERR_put_error(i32 11, i32 0, i32 111, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 292) #5
  tail call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* %1) #5
  br label %11

9:                                                ; preds = %5
  %10 = tail call %struct.X509_name_entry_st* @X509_NAME_ENTRY_create_by_OBJ(%struct.X509_name_entry_st** %0, %struct.asn1_object_st* nonnull %6, i32 %2, i8* %3, i32 %4)
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* nonnull %6) #5
  br label %11

11:                                               ; preds = %9, %8
  %12 = phi %struct.X509_name_entry_st* [ null, %8 ], [ %10, %9 ]
  ret %struct.X509_name_entry_st* %12
}

declare %struct.X509_name_entry_st* @X509_NAME_ENTRY_dup(%struct.X509_name_entry_st*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare %struct.asn1_object_st* @OBJ_txt2obj(i8*, i32) local_unnamed_addr #1

declare void @ERR_add_error_data(i32, ...) local_unnamed_addr #1

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) local_unnamed_addr #1

declare %struct.X509_name_entry_st* @X509_NAME_ENTRY_new() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_ENTRY_set_object(%struct.X509_name_entry_st*, %struct.asn1_object_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.X509_name_entry_st* %0, null
  %4 = icmp eq %struct.asn1_object_st* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @ERR_put_error(i32 11, i32 0, i32 67, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 345) #5
  br label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %0, i64 0, i32 0
  %9 = load %struct.asn1_object_st*, %struct.asn1_object_st** %8, align 8
  tail call void @ASN1_OBJECT_free(%struct.asn1_object_st* %9) #5
  %10 = tail call %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st* nonnull %1) #5
  store %struct.asn1_object_st* %10, %struct.asn1_object_st** %8, align 8
  %11 = icmp ne %struct.asn1_object_st* %10, null
  %12 = zext i1 %11 to i32
  br label %13

13:                                               ; preds = %7, %6
  %14 = phi i32 [ 0, %6 ], [ %12, %7 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_ENTRY_set_data(%struct.X509_name_entry_st*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.X509_name_entry_st* %0, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %4
  %7 = icmp eq i8* %2, null
  %8 = icmp ne i32 %3, 0
  %9 = and i1 %7, %8
  br i1 %9, label %42, label %10

10:                                               ; preds = %6
  %11 = icmp slt i32 %1, 1
  %12 = and i32 %1, 4096
  %13 = icmp eq i32 %12, 0
  %14 = or i1 %11, %13
  br i1 %14, label %23, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %0, i64 0, i32 1
  %17 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %0, i64 0, i32 0
  %18 = load %struct.asn1_object_st*, %struct.asn1_object_st** %17, align 8
  %19 = tail call i32 @OBJ_obj2nid(%struct.asn1_object_st* %18) #5
  %20 = tail call %struct.asn1_string_st* @ASN1_STRING_set_by_NID(%struct.asn1_string_st** %16, i8* %2, i32 %3, i32 %1, i32 %19) #5
  %21 = icmp ne %struct.asn1_string_st* %20, null
  %22 = zext i1 %21 to i32
  br label %42

23:                                               ; preds = %10
  %24 = icmp slt i32 %3, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = tail call i64 @strlen(i8* %2) #6
  %27 = trunc i64 %26 to i32
  br label %28

28:                                               ; preds = %25, %23
  %29 = phi i32 [ %27, %25 ], [ %3, %23 ]
  %30 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %0, i64 0, i32 1
  %31 = load %struct.asn1_string_st*, %struct.asn1_string_st** %30, align 8
  %32 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* %31, i8* %2, i32 %29) #5
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %28
  switch i32 %1, label %39 [
    i32 -1, label %42
    i32 -2, label %35
  ]

35:                                               ; preds = %34
  %36 = tail call i32 @ASN1_PRINTABLE_type(i8* %2, i32 %29) #5
  %37 = load %struct.asn1_string_st*, %struct.asn1_string_st** %30, align 8
  %38 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %37, i64 0, i32 1
  store i32 %36, i32* %38, align 4
  br label %42

39:                                               ; preds = %34
  %40 = load %struct.asn1_string_st*, %struct.asn1_string_st** %30, align 8
  %41 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %40, i64 0, i32 1
  store i32 %1, i32* %41, align 4
  br label %42

42:                                               ; preds = %39, %35, %34, %28, %4, %6, %15
  %43 = phi i32 [ %22, %15 ], [ 0, %6 ], [ 0, %4 ], [ 0, %28 ], [ 1, %34 ], [ 1, %35 ], [ 1, %39 ]
  ret i32 %43
}

declare %struct.asn1_object_st* @OBJ_dup(%struct.asn1_object_st*) local_unnamed_addr #1

declare %struct.asn1_string_st* @ASN1_STRING_set_by_NID(%struct.asn1_string_st**, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #1

declare i32 @ASN1_PRINTABLE_type(i8*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_object_st* @X509_NAME_ENTRY_get_object(%struct.X509_name_entry_st* readonly) local_unnamed_addr #2 {
  %2 = icmp eq %struct.X509_name_entry_st* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %0, i64 0, i32 0
  %5 = load %struct.asn1_object_st*, %struct.asn1_object_st** %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi %struct.asn1_object_st* [ %5, %3 ], [ null, %1 ]
  ret %struct.asn1_object_st* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #1

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #1

declare i8* @sk_delete(%struct.stack_st*, i64) local_unnamed_addr #1

declare i64 @sk_insert(%struct.stack_st*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
