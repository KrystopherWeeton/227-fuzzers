; ModuleID = '../../third_party/re2/src/re2/onepass.cc'
source_filename = "../../third_party/re2/src/re2/onepass.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.re2::Prog" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i64, i32, i32, i32, [8 x i32], [4 x i8], %"class.re2::PODArray", %"class.re2::PODArray.1", %"class.re2::PODArray.7", i64, %"class.re2::DFA"*, %"class.re2::DFA"*, [256 x i8], %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::PODArray" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type <{ %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem" = type { i16* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"struct.re2::PODArray<unsigned short>::Deleter" }
%"struct.re2::PODArray<unsigned short>::Deleter" = type { i32 }
%"class.re2::PODArray.1" = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type <{ %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.re2::Prog::Inst"* }
%"class.re2::Prog::Inst" = type { i32, %union.anon }
%union.anon = type { i32 }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.re2::PODArray<re2::Prog::Inst>::Deleter" }
%"struct.re2::PODArray<re2::Prog::Inst>::Deleter" = type { i32 }
%"class.re2::PODArray.7" = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type <{ %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.11", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.10" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.re2::PODArray<unsigned char>::Deleter" }
%"struct.re2::PODArray<unsigned char>::Deleter" = type { i32 }
%"class.re2::DFA" = type opaque
%"class.re2::StringPiece" = type { i8*, i64 }
%class.LogMessage = type { i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.15 }
%union.anon.15 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.re2::OneState" = type { i32, [0 x i32] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.16 }
%struct.anon.16 = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.re2::InstCond" = type { i32, i32 }
%struct.anon = type { i8, i8, i16 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN10LogMessageD2Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [41 x i8] c"../../third_party/re2/src/re2/onepass.cc\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Cannot use SearchOnePass for unanchored matches.\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"unhandled opcode: \00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3re214OnePass_ChecksEv() local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re24Prog13SearchOnePassERKNS_11StringPieceES3_NS0_6AnchorENS0_9MatchKindEPS1_i(%"class.re2::Prog"* nocapture readonly, %"class.re2::StringPiece"* nocapture readonly dereferenceable(16), %"class.re2::StringPiece"* nocapture readonly dereferenceable(16), i32, i32, %"class.re2::StringPiece"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %8 = alloca %class.LogMessage, align 8
  %9 = alloca [10 x i8*], align 16
  %10 = bitcast [10 x i8*]* %9 to i8*
  %11 = alloca [10 x i8*], align 16
  %12 = bitcast [10 x i8*]* %11 to i8*
  %13 = alloca %"class.re2::StringPiece", align 8
  %14 = icmp ne i32 %3, 1
  %15 = icmp ne i32 %4, 2
  %16 = and i1 %14, %15
  br i1 %16, label %17, label %56

17:                                               ; preds = %7
  %18 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %18) #10
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 1
  %20 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 1, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %19, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %20, align 8
  %22 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %22, i64 0, i32 0
  %24 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %19 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %27 = bitcast %"class.std::__1::basic_ostringstream"* %19 to i8**
  %28 = inttoptr i64 %24 to i8*
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::basic_ostringstream"* %19 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = bitcast i8* %33 to i64*
  store i64 %26, i64* %34, align 8
  %35 = load i8*, i8** %27, align 8
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 %38
  %40 = bitcast i8* %39 to %"class.std::__1::ios_base"*
  %41 = bitcast %"class.std::__1::basic_stringbuf"* %22 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %40, i8* %41) #10
  %42 = getelementptr inbounds i8, i8* %39, i64 136
  %43 = bitcast i8* %42 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %43, align 8
  %44 = getelementptr inbounds i8, i8* %39, i64 144
  %45 = bitcast i8* %44 to i32*
  store i32 -1, i32* %45, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %20, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %23) #10
  %46 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %22, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 1, i32 1, i32 1
  %48 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %8, i64 0, i32 1, i32 1, i32 3
  %49 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %48, align 8
  %50 = bitcast %"class.std::__1::basic_ostringstream"* %19 to %"class.std::__1::basic_ostream"*
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %52, i32 219) #10
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #10
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i64 48) #10
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %18) #10
  br label %338

56:                                               ; preds = %7
  %57 = shl i32 %6, 1
  %58 = icmp sgt i32 %6, 1
  %59 = select i1 %58, i32 %57, i32 2
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 80, i1 false)
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 80, i1 false)
  br label %67

62:                                               ; preds = %56
  %63 = zext i32 %59 to i64
  %64 = shl nuw nsw i64 %63, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 %64, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 80, i1 false)
  %65 = zext i32 %59 to i64
  %66 = shl nuw nsw i64 %65, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 %66, i1 false)
  br label %67

67:                                               ; preds = %61, %62
  %68 = bitcast %"class.re2::StringPiece"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #10
  %69 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %13, i64 0, i32 0
  %70 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %13, i64 0, i32 1
  %71 = bitcast %"class.re2::StringPiece"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 %71, i64 16, i1 false)
  %72 = load i8*, i8** %69, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = bitcast %"class.re2::StringPiece"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 %75, i64 16, i1 false)
  br label %76

76:                                               ; preds = %74, %67
  %77 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 0
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = load i8*, i8** %69, align 8
  %82 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = icmp eq i8* %81, %83
  br i1 %84, label %85, label %336

85:                                               ; preds = %76, %80
  %86 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 1
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp ne i8 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 1
  %93 = load i64, i64* %92, align 8
  br label %104

94:                                               ; preds = %85
  %95 = load i8*, i8** %69, align 8
  %96 = load i64, i64* %70, align 8
  %97 = getelementptr inbounds i8, i8* %95, i64 %96
  %98 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %1, i64 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds i8, i8* %99, i64 %101
  %103 = icmp eq i8* %97, %102
  br i1 %103, label %104, label %336

104:                                              ; preds = %89, %94
  %105 = phi i64 [ %93, %89 ], [ %101, %94 ]
  %106 = phi i8* [ %91, %89 ], [ %99, %94 ]
  %107 = select i1 %88, i32 2, i32 %4
  %108 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 8
  %111 = load i32, i32* %110, align 4
  %112 = shl i32 %111, 2
  %113 = add i32 %112, 4
  %114 = bitcast i8* %109 to %"struct.re2::OneState"*
  %115 = getelementptr inbounds i8, i8* %106, i64 %105
  %116 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 0
  store i8* %106, i8** %116, align 16
  %117 = getelementptr inbounds [10 x i8*], [10 x i8*]* %9, i64 0, i64 0
  store i8* %106, i8** %117, align 16
  %118 = icmp sgt i64 %105, 0
  br i1 %118, label %119, label %230

119:                                              ; preds = %104
  %120 = bitcast i8* %109 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %107, 2
  %123 = icmp slt i32 %6, 2
  %124 = xor i1 %58, true
  %125 = zext i32 %59 to i64
  %126 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 1
  %127 = icmp ne i32 %107, 0
  %128 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 2
  %129 = bitcast i8** %128 to i8*
  %130 = getelementptr inbounds [10 x i8*], [10 x i8*]* %9, i64 0, i64 2
  %131 = bitcast i8** %130 to i8*
  %132 = icmp sgt i32 %57, 3
  %133 = select i1 %132, i32 %57, i32 3
  %134 = add nsw i32 %133, -2
  %135 = zext i32 %134 to i64
  %136 = shl nuw nsw i64 %135, 3
  br label %137

137:                                              ; preds = %119, %227
  %138 = phi i32 [ %121, %119 ], [ %166, %227 ]
  %139 = phi i8 [ 0, %119 ], [ %206, %227 ]
  %140 = phi i8* [ %106, %119 ], [ %228, %227 ]
  %141 = phi %"struct.re2::OneState"* [ %114, %119 ], [ %165, %227 ]
  %142 = load i8, i8* %140, align 1
  %143 = zext i8 %142 to i64
  %144 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 21, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds %"struct.re2::OneState", %"struct.re2::OneState"* %141, i64 0, i32 1, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, 63
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %137
  %152 = call i32 @_ZN3re24Prog10EmptyFlagsERKNS_11StringPieceEPKc(%"class.re2::StringPiece"* nonnull dereferenceable(16) %13, i8* %140) #10
  %153 = xor i32 %152, -1
  %154 = and i32 %149, %153
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %164

156:                                              ; preds = %151, %137
  %157 = lshr i32 %148, 16
  %158 = mul nsw i32 %157, %113
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i8, i8* %109, i64 %159
  %161 = bitcast i8* %160 to %"struct.re2::OneState"*
  %162 = bitcast i8* %160 to i32*
  %163 = load i32, i32* %162, align 4
  br label %164

164:                                              ; preds = %151, %156
  %165 = phi %"struct.re2::OneState"* [ %161, %156 ], [ null, %151 ]
  %166 = phi i32 [ %163, %156 ], [ 48, %151 ]
  %167 = icmp eq i32 %138, 48
  %168 = or i1 %122, %167
  br i1 %168, label %205, label %169

169:                                              ; preds = %164
  %170 = and i32 %148, 64
  %171 = icmp eq i32 %170, 0
  %172 = and i32 %166, 63
  %173 = or i32 %172, %170
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %205, label %175

175:                                              ; preds = %169
  %176 = and i32 %138, 63
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %183, label %178

178:                                              ; preds = %175
  %179 = call i32 @_ZN3re24Prog10EmptyFlagsERKNS_11StringPieceEPKc(%"class.re2::StringPiece"* nonnull dereferenceable(16) %13, i8* %140) #10
  %180 = xor i32 %179, -1
  %181 = and i32 %176, %180
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %205

183:                                              ; preds = %178, %175
  br i1 %58, label %184, label %203

184:                                              ; preds = %183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %129, i8* align 16 %131, i64 %136, i1 false)
  %185 = and i32 %138, 32640
  %186 = icmp eq i32 %185, 0
  %187 = or i1 %123, %186
  %188 = or i1 %187, %124
  br i1 %188, label %203, label %189

189:                                              ; preds = %184, %347
  %190 = phi i64 [ %348, %347 ], [ 2, %184 ]
  %191 = trunc i64 %190 to i32
  %192 = shl i32 32, %191
  %193 = and i32 %192, %138
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 %190
  store i8* %140, i8** %196, align 16
  br label %197

197:                                              ; preds = %195, %189
  %198 = or i64 %190, 1
  %199 = trunc i64 %198 to i32
  %200 = shl i32 32, %199
  %201 = and i32 %200, %138
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %347, label %345

203:                                              ; preds = %347, %183, %184
  store i8* %140, i8** %126, align 8
  %204 = or i1 %127, %171
  br i1 %204, label %205, label %284

205:                                              ; preds = %203, %169, %178, %164
  %206 = phi i8 [ %139, %164 ], [ 1, %203 ], [ %139, %178 ], [ %139, %169 ]
  %207 = icmp eq %"struct.re2::OneState"* %165, null
  br i1 %207, label %280, label %208

208:                                              ; preds = %205
  %209 = and i32 %148, 32640
  %210 = icmp eq i32 %209, 0
  %211 = or i1 %123, %210
  %212 = or i1 %211, %124
  br i1 %212, label %227, label %213

213:                                              ; preds = %208, %352
  %214 = phi i64 [ %353, %352 ], [ 2, %208 ]
  %215 = trunc i64 %214 to i32
  %216 = shl i32 32, %215
  %217 = and i32 %216, %148
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %221, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds [10 x i8*], [10 x i8*]* %9, i64 0, i64 %214
  store i8* %140, i8** %220, align 16
  br label %221

221:                                              ; preds = %219, %213
  %222 = or i64 %214, 1
  %223 = trunc i64 %222 to i32
  %224 = shl i32 32, %223
  %225 = and i32 %224, %148
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %352, label %350

227:                                              ; preds = %352, %208
  %228 = getelementptr inbounds i8, i8* %140, i64 1
  %229 = icmp ult i8* %228, %115
  br i1 %229, label %137, label %230

230:                                              ; preds = %227, %104
  %231 = phi %"struct.re2::OneState"* [ %114, %104 ], [ %165, %227 ]
  %232 = phi i8* [ %106, %104 ], [ %228, %227 ]
  %233 = phi i8 [ 0, %104 ], [ %206, %227 ]
  %234 = getelementptr inbounds %"struct.re2::OneState", %"struct.re2::OneState"* %231, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %235, 48
  br i1 %236, label %280, label %237

237:                                              ; preds = %230
  %238 = and i32 %235, 63
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %245, label %240

240:                                              ; preds = %237
  %241 = call i32 @_ZN3re24Prog10EmptyFlagsERKNS_11StringPieceEPKc(%"class.re2::StringPiece"* nonnull dereferenceable(16) %13, i8* %232) #10
  %242 = xor i32 %241, -1
  %243 = and i32 %238, %242
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %280

245:                                              ; preds = %240, %237
  %246 = icmp slt i32 %6, 2
  %247 = and i32 %235, 32640
  %248 = icmp eq i32 %247, 0
  %249 = or i1 %246, %248
  %250 = xor i1 %58, true
  %251 = or i1 %249, %250
  br i1 %251, label %268, label %252

252:                                              ; preds = %245
  %253 = zext i32 %59 to i64
  br label %254

254:                                              ; preds = %342, %252
  %255 = phi i64 [ 2, %252 ], [ %343, %342 ]
  %256 = trunc i64 %255 to i32
  %257 = shl i32 32, %256
  %258 = and i32 %257, %235
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds [10 x i8*], [10 x i8*]* %9, i64 0, i64 %255
  store i8* %232, i8** %261, align 16
  br label %262

262:                                              ; preds = %260, %254
  %263 = or i64 %255, 1
  %264 = trunc i64 %263 to i32
  %265 = shl i32 32, %264
  %266 = and i32 %265, %235
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %342, label %340

268:                                              ; preds = %342, %245
  %269 = icmp sgt i32 %59, 2
  br i1 %269, label %270, label %278

270:                                              ; preds = %268
  %271 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 2
  %272 = bitcast i8** %271 to i8*
  %273 = getelementptr inbounds [10 x i8*], [10 x i8*]* %9, i64 0, i64 2
  %274 = bitcast i8** %273 to i8*
  %275 = add nsw i32 %59, -2
  %276 = zext i32 %275 to i64
  %277 = shl nuw nsw i64 %276, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %272, i8* align 16 %274, i64 %277, i1 false)
  br label %278

278:                                              ; preds = %270, %268
  %279 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 1
  store i8* %232, i8** %279, align 8
  br label %284

280:                                              ; preds = %205, %240, %230
  %281 = phi i8 [ %233, %240 ], [ %233, %230 ], [ %206, %205 ]
  %282 = and i8 %281, 1
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %336, label %284

284:                                              ; preds = %203, %278, %280
  %285 = icmp sgt i32 %6, 0
  br i1 %285, label %286, label %336

286:                                              ; preds = %284
  %287 = zext i32 %6 to i64
  %288 = and i64 %287, 1
  %289 = icmp eq i32 %6, 1
  br i1 %289, label %321, label %290

290:                                              ; preds = %286
  %291 = sub nsw i64 %287, %288
  br label %292

292:                                              ; preds = %292, %290
  %293 = phi i64 [ 0, %290 ], [ %318, %292 ]
  %294 = phi i64 [ %291, %290 ], [ %319, %292 ]
  %295 = shl nuw nsw i64 %293, 1
  %296 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 %295
  %297 = load i8*, i8** %296, align 16
  %298 = or i64 %295, 1
  %299 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 %298
  %300 = bitcast i8** %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = ptrtoint i8* %297 to i64
  %303 = sub i64 %301, %302
  %304 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 %293, i32 0
  store i8* %297, i8** %304, align 8
  %305 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 %293, i32 1
  store i64 %303, i64* %305, align 8
  %306 = or i64 %293, 1
  %307 = shl nuw nsw i64 %306, 1
  %308 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 %307
  %309 = load i8*, i8** %308, align 16
  %310 = or i64 %307, 1
  %311 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 %310
  %312 = bitcast i8** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = ptrtoint i8* %309 to i64
  %315 = sub i64 %313, %314
  %316 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 %306, i32 0
  store i8* %309, i8** %316, align 8
  %317 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 %306, i32 1
  store i64 %315, i64* %317, align 8
  %318 = add nuw nsw i64 %293, 2
  %319 = add i64 %294, -2
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %292

321:                                              ; preds = %292, %286
  %322 = phi i64 [ 0, %286 ], [ %318, %292 ]
  %323 = icmp eq i64 %288, 0
  br i1 %323, label %336, label %324

324:                                              ; preds = %321
  %325 = shl nuw nsw i64 %322, 1
  %326 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 %325
  %327 = load i8*, i8** %326, align 16
  %328 = or i64 %325, 1
  %329 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 %328
  %330 = bitcast i8** %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = ptrtoint i8* %327 to i64
  %333 = sub i64 %331, %332
  %334 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 %322, i32 0
  store i8* %327, i8** %334, align 8
  %335 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %5, i64 %322, i32 1
  store i64 %333, i64* %335, align 8
  br label %336

336:                                              ; preds = %324, %321, %284, %280, %94, %80
  %337 = phi i1 [ false, %80 ], [ false, %94 ], [ false, %280 ], [ true, %284 ], [ true, %321 ], [ true, %324 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10) #10
  br label %338

338:                                              ; preds = %336, %17
  %339 = phi i1 [ false, %17 ], [ %337, %336 ]
  ret i1 %339

340:                                              ; preds = %262
  %341 = getelementptr inbounds [10 x i8*], [10 x i8*]* %9, i64 0, i64 %263
  store i8* %232, i8** %341, align 8
  br label %342

342:                                              ; preds = %340, %262
  %343 = add nuw nsw i64 %255, 2
  %344 = icmp eq i64 %343, %253
  br i1 %344, label %268, label %254

345:                                              ; preds = %197
  %346 = getelementptr inbounds [10 x i8*], [10 x i8*]* %11, i64 0, i64 %198
  store i8* %140, i8** %346, align 8
  br label %347

347:                                              ; preds = %345, %197
  %348 = add nuw nsw i64 %190, 2
  %349 = icmp eq i64 %348, %125
  br i1 %349, label %203, label %189

350:                                              ; preds = %221
  %351 = getelementptr inbounds [10 x i8*], [10 x i8*]* %9, i64 0, i64 %222
  store i8* %140, i8** %351, align 8
  br label %352

352:                                              ; preds = %350, %221
  %353 = add nuw nsw i64 %214, 2
  %354 = icmp eq i64 %353, %125
  br i1 %354, label %227, label %213
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10LogMessageD2Ev(%class.LogMessage*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #10
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #10
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_stringbuf"* %13) #10
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = load i64, i64* %12, align 8
  %19 = load i8*, i8** %11, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %18, i64 %20
  %22 = select i1 %17, i8* %19, i8* %10
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %24 = call i64 @fwrite(i8* %22, i64 1, i64 %21, %struct._IO_FILE* %23) #11
  store i8 1, i8* %3, align 8
  %25 = load i8, i8* %15, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %6
  %28 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %6, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  br label %30

30:                                               ; preds = %1, %29
  %31 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1
  %32 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %33 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %35 = inttoptr i64 %32 to i8*
  %36 = getelementptr i8, i8* %35, i64 -24
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %31 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  %41 = bitcast i8* %40 to i64*
  store i64 %34, i64* %41, align 8
  %42 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 1, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %30, %49
  %53 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %42, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %53) #10
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %31 to %"class.std::__1::basic_ostream"*
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %54, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #10
  %55 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %0, i64 0, i32 1, i32 2
  %56 = bitcast %"class.std::__1::basic_ios.base"* %55 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %56) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3re24Prog9IsOnePassEv(%"class.re2::Prog"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = alloca i8, align 1
  %4 = alloca %class.LogMessage, align 8
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br label %505

13:                                               ; preds = %1
  store i8 1, i8* %6, align 4
  %14 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %505, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 13, i64 2
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, 2
  %21 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 8
  %22 = load i32, i32* %21, align 4
  %23 = shl i32 %22, 2
  %24 = add i32 %23, 4
  %25 = icmp sgt i32 %20, 64999
  br i1 %25, label %505, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 18
  %28 = load i64, i64* %27, align 8
  %29 = sdiv i64 %28, 4
  %30 = sext i32 %24 to i64
  %31 = sdiv i64 %29, %30
  %32 = sext i32 %20 to i64
  %33 = icmp slt i64 %31, %32
  br i1 %33, label %505, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 13, i64 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 13, i64 4
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 13, i64 6
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %36, 1
  %42 = add i32 %41, %38
  %43 = add i32 %42, %40
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %34
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %34
  %47 = sext i32 %43 to i64
  %48 = shl nsw i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 7
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %46
  tail call void @abort() #13
  unreachable

54:                                               ; preds = %46
  %55 = sext i32 %51 to i64
  %56 = shl nsw i64 %55, 2
  %57 = tail call i8* @_Znwm(i64 %56) #12
  %58 = bitcast i8* %57 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %57, i8 -1, i64 %56, i1 false)
  %59 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #10
  %62 = tail call i8* @_Znwm(i64 %56) #12
  %63 = tail call i8* @_Znwm(i64 %56) #12
  %64 = tail call i8* @_Znwm(i64 %56) #12
  %65 = tail call i8* @_Znwm(i64 %56) #12
  %66 = icmp ugt i32 %51, %15
  br i1 %66, label %70, label %67

67:                                               ; preds = %54
  %68 = sext i32 %15 to i64
  %69 = bitcast i8* %63 to i32*
  br label %75

70:                                               ; preds = %54
  %71 = bitcast i8* %63 to i32*
  %72 = sext i32 %15 to i64
  %73 = bitcast i8* %62 to i32*
  %74 = getelementptr inbounds i32, i32* %73, i64 %72
  store i32 0, i32* %74, align 4
  store i32 %15, i32* %71, align 4
  br label %75

75:                                               ; preds = %67, %70
  %76 = phi i32* [ %69, %67 ], [ %71, %70 ]
  %77 = phi i64 [ %68, %67 ], [ %72, %70 ]
  %78 = phi i1 [ true, %67 ], [ false, %70 ]
  %79 = getelementptr inbounds i32, i32* %58, i64 %77
  store i32 0, i32* %79, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #10
  store i8 0, i8* %3, align 1
  %80 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* nonnull %2, i8* null, i64 %30, i8* nonnull dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #10
  br i1 %78, label %478, label %81

81:                                               ; preds = %75
  %82 = bitcast i8* %49 to %"struct.re2::InstCond"*
  %83 = bitcast i8* %49 to i32*
  %84 = getelementptr inbounds i8, i8* %49, i64 4
  %85 = bitcast i8* %84 to i32*
  %86 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %87 = bitcast i8* %65 to i32*
  %88 = bitcast i8* %64 to i32*
  %89 = bitcast i8* %62 to i32*
  %90 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 0
  %91 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1
  %92 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 2, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %91, i64 0, i32 0, i32 0
  %94 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1
  %95 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %94, i64 0, i32 0
  %96 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %97 = bitcast %"class.std::__1::basic_ostringstream"* %91 to i64*
  %98 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %99 = bitcast %"class.std::__1::basic_ostringstream"* %91 to i8**
  %100 = inttoptr i64 %96 to i8*
  %101 = getelementptr i8, i8* %100, i64 -24
  %102 = bitcast i8* %101 to i64*
  %103 = bitcast %"class.std::__1::basic_ostringstream"* %91 to i8*
  %104 = bitcast %"class.std::__1::basic_stringbuf"* %94 to i8*
  %105 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %94, i64 0, i32 0, i32 0
  %106 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 1
  %107 = getelementptr inbounds %class.LogMessage, %class.LogMessage* %4, i64 0, i32 1, i32 1, i32 3
  %108 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  %109 = bitcast %"class.std::__1::basic_ostringstream"* %91 to %"class.std::__1::basic_ostream"*
  br label %110

110:                                              ; preds = %81, %473
  %111 = phi i32* [ %76, %81 ], [ %474, %473 ]
  %112 = phi i32 [ 1, %81 ], [ %136, %473 ]
  %113 = phi i32 [ 1, %81 ], [ %135, %473 ]
  %114 = load i32, i32* %111, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i32, i32* %58, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = load i8*, i8** %60, align 8
  %119 = mul nsw i32 %117, %24
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %118, i64 %120
  %122 = bitcast i8* %121 to %"struct.re2::OneState"*
  %123 = load i32, i32* %21, align 4
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %127, %110
  %126 = bitcast i8* %121 to i32*
  store i32 48, i32* %126, align 4
  store i32 %114, i32* %83, align 4
  store i32 0, i32* %85, align 4
  br label %140

127:                                              ; preds = %110, %127
  %128 = phi i64 [ %130, %127 ], [ 0, %110 ]
  %129 = getelementptr inbounds %"struct.re2::OneState", %"struct.re2::OneState"* %122, i64 0, i32 1, i64 %128
  store i32 48, i32* %129, align 4
  %130 = add nuw nsw i64 %128, 1
  %131 = load i32, i32* %21, align 4
  %132 = sext i32 %131 to i64
  %133 = icmp slt i64 %130, %132
  br i1 %133, label %127, label %125

134:                                              ; preds = %153, %449, %347, %167
  %135 = phi i32 [ %155, %167 ], [ %247, %347 ], [ %155, %449 ], [ %155, %153 ]
  %136 = phi i32 [ %156, %167 ], [ %248, %347 ], [ %156, %449 ], [ %156, %153 ]
  %137 = phi %"struct.re2::OneState"* [ %157, %167 ], [ %249, %347 ], [ %157, %449 ], [ %157, %153 ]
  %138 = phi i8 [ %158, %167 ], [ %158, %347 ], [ 1, %449 ], [ %158, %153 ]
  %139 = icmp sgt i32 %159, 0
  br i1 %139, label %140, label %473

140:                                              ; preds = %125, %134
  %141 = phi i32 [ 1, %125 ], [ %159, %134 ]
  %142 = phi i8 [ 0, %125 ], [ %138, %134 ]
  %143 = phi %"struct.re2::OneState"* [ %122, %125 ], [ %137, %134 ]
  %144 = phi i32 [ %112, %125 ], [ %136, %134 ]
  %145 = phi i32 [ %113, %125 ], [ %135, %134 ]
  %146 = phi i32 [ 0, %125 ], [ %154, %134 ]
  %147 = add nsw i32 %141, -1
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %"struct.re2::InstCond", %"struct.re2::InstCond"* %82, i64 %148, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"struct.re2::InstCond", %"struct.re2::InstCond"* %82, i64 %148, i32 1
  %152 = load i32, i32* %151, align 4
  br label %153

153:                                              ; preds = %437, %140
  %154 = phi i32 [ %146, %140 ], [ %438, %437 ]
  %155 = phi i32 [ %145, %140 ], [ %439, %437 ]
  %156 = phi i32 [ %144, %140 ], [ %440, %437 ]
  %157 = phi %"struct.re2::OneState"* [ %143, %140 ], [ %441, %437 ]
  %158 = phi i8 [ %142, %140 ], [ %442, %437 ]
  %159 = phi i32 [ %147, %140 ], [ %443, %437 ]
  %160 = phi i32 [ %150, %140 ], [ %444, %437 ]
  %161 = phi i32 [ %152, %140 ], [ %445, %437 ]
  %162 = sext i32 %160 to i64
  %163 = load %"class.re2::Prog::Inst"*, %"class.re2::Prog::Inst"** %86, align 8
  %164 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %163, i64 %162, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 7
  switch i32 %166, label %167 [
    i32 1, label %189
    i32 2, label %208
    i32 3, label %370
    i32 4, label %370
    i32 6, label %370
    i32 5, label %446
    i32 7, label %134
  ]

167:                                              ; preds = %153
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %90) #10
  store i8 0, i8* %90, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %92, align 8
  store i64 %96, i64* %97, align 8
  %168 = load i64, i64* %102, align 8
  %169 = getelementptr inbounds i8, i8* %103, i64 %168
  %170 = bitcast i8* %169 to i64*
  store i64 %98, i64* %170, align 8
  %171 = load i8*, i8** %99, align 8
  %172 = getelementptr i8, i8* %171, i64 -24
  %173 = bitcast i8* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds i8, i8* %103, i64 %174
  %176 = bitcast i8* %175 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %176, i8* %104) #10
  %177 = getelementptr inbounds i8, i8* %175, i64 136
  %178 = bitcast i8* %177 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %178, align 8
  %179 = getelementptr inbounds i8, i8* %175, i64 144
  %180 = bitcast i8* %179 to i32*
  store i32 -1, i32* %180, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %93, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %92, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %95) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 32, i1 false) #10
  store i32 16, i32* %107, align 8
  %181 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %109, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40) #10
  %182 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %181, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #10
  %183 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %182, i32 447) #10
  %184 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %183, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #10
  %185 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %109, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18) #10
  %186 = load i32, i32* %164, align 4
  %187 = and i32 %186, 7
  %188 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %185, i32 %187) #10
  call void @_ZN10LogMessageD2Ev(%class.LogMessage* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %90) #10
  br label %134

189:                                              ; preds = %153
  %190 = add nsw i32 %160, 1
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %437, label %192

192:                                              ; preds = %189
  %193 = icmp ugt i32 %51, %190
  br i1 %193, label %194, label %437

194:                                              ; preds = %192
  %195 = sext i32 %190 to i64
  %196 = getelementptr inbounds i32, i32* %88, i64 %195
  %197 = load i32, i32* %196, align 4
  %198 = icmp ult i32 %197, %154
  br i1 %198, label %199, label %204

199:                                              ; preds = %194
  %200 = sext i32 %197 to i64
  %201 = getelementptr inbounds i32, i32* %87, i64 %200
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, %190
  br i1 %203, label %497, label %204

204:                                              ; preds = %199, %194
  store i32 %154, i32* %196, align 4
  %205 = sext i32 %154 to i64
  %206 = getelementptr inbounds i32, i32* %87, i64 %205
  store i32 %190, i32* %206, align 4
  %207 = add nsw i32 %154, 1
  br label %437

208:                                              ; preds = %153
  %209 = lshr i32 %165, 4
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds i32, i32* %58, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, -1
  br i1 %213, label %214, label %246

214:                                              ; preds = %208
  %215 = icmp slt i32 %156, %20
  br i1 %215, label %216, label %497

216:                                              ; preds = %214
  %217 = icmp ne i32 %209, 0
  %218 = icmp ugt i32 %51, %209
  %219 = and i1 %217, %218
  br i1 %219, label %220, label %236

220:                                              ; preds = %216
  %221 = getelementptr inbounds i32, i32* %89, i64 %210
  %222 = load i32, i32* %221, align 4
  %223 = icmp ult i32 %222, %155
  br i1 %223, label %224, label %229

224:                                              ; preds = %220
  %225 = sext i32 %222 to i64
  %226 = getelementptr inbounds i32, i32* %76, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, %209
  br i1 %228, label %236, label %229

229:                                              ; preds = %224, %220
  store i32 %155, i32* %221, align 4
  %230 = sext i32 %155 to i64
  %231 = getelementptr inbounds i32, i32* %76, i64 %230
  store i32 %209, i32* %231, align 4
  %232 = add nsw i32 %155, 1
  %233 = load i32, i32* %164, align 4
  %234 = lshr i32 %233, 4
  %235 = zext i32 %234 to i64
  br label %236

236:                                              ; preds = %216, %224, %229
  %237 = phi i64 [ %210, %216 ], [ %210, %224 ], [ %235, %229 ]
  %238 = phi i32 [ %155, %216 ], [ %155, %224 ], [ %232, %229 ]
  %239 = getelementptr inbounds i32, i32* %58, i64 %237
  store i32 %156, i32* %239, align 4
  %240 = add nsw i32 %156, 1
  %241 = load i8*, i8** %61, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  store i8 0, i8* %5, align 1
  %242 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"* nonnull %2, i8* %241, i64 %30, i8* nonnull dereferenceable(1) %5)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  %243 = load i8*, i8** %60, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 %120
  %245 = bitcast i8* %244 to %"struct.re2::OneState"*
  br label %246

246:                                              ; preds = %236, %208
  %247 = phi i32 [ %238, %236 ], [ %155, %208 ]
  %248 = phi i32 [ %240, %236 ], [ %156, %208 ]
  %249 = phi %"struct.re2::OneState"* [ %245, %236 ], [ %157, %208 ]
  %250 = phi i32 [ %156, %236 ], [ %212, %208 ]
  %251 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %163, i64 %162, i32 1
  %252 = bitcast %union.anon* %251 to i8*
  %253 = load i8, i8* %252, align 4
  %254 = bitcast %union.anon* %251 to %struct.anon*
  %255 = getelementptr inbounds %struct.anon, %struct.anon* %254, i64 0, i32 1
  %256 = load i8, i8* %255, align 1
  %257 = icmp ugt i8 %253, %256
  br i1 %257, label %297, label %258

258:                                              ; preds = %246
  %259 = zext i8 %253 to i64
  %260 = shl i32 %250, 16
  %261 = shl i8 %158, 6
  %262 = and i8 %261, 64
  %263 = zext i8 %262 to i32
  %264 = or i32 %161, %263
  %265 = or i32 %264, %260
  br label %266

266:                                              ; preds = %292, %258
  %267 = phi i8 [ %256, %258 ], [ %293, %292 ]
  %268 = phi i64 [ %259, %258 ], [ %294, %292 ]
  %269 = shl i64 %268, 32
  %270 = ashr exact i64 %269, 32
  %271 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 21, i64 %270
  %272 = load i8, i8* %271, align 1
  br label %273

273:                                              ; preds = %276, %266
  %274 = phi i64 [ %277, %276 ], [ %270, %266 ]
  %275 = icmp slt i64 %274, 255
  br i1 %275, label %276, label %281

276:                                              ; preds = %273
  %277 = add nsw i64 %274, 1
  %278 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 21, i64 %277
  %279 = load i8, i8* %278, align 1
  %280 = icmp eq i8 %279, %272
  br i1 %280, label %273, label %281

281:                                              ; preds = %273, %276
  %282 = trunc i64 %274 to i32
  %283 = zext i8 %272 to i64
  %284 = getelementptr inbounds %"struct.re2::OneState", %"struct.re2::OneState"* %249, i64 0, i32 1, i64 %283
  %285 = load i32, i32* %284, align 4
  %286 = and i32 %285, 48
  %287 = icmp eq i32 %286, 48
  br i1 %287, label %288, label %290

288:                                              ; preds = %281
  store i32 %265, i32* %284, align 4
  %289 = load i8, i8* %255, align 1
  br label %292

290:                                              ; preds = %281
  %291 = icmp eq i32 %285, %265
  br i1 %291, label %292, label %497

292:                                              ; preds = %288, %290
  %293 = phi i8 [ %289, %288 ], [ %267, %290 ]
  %294 = add i64 %274, 1
  %295 = zext i8 %293 to i32
  %296 = icmp slt i32 %282, %295
  br i1 %296, label %266, label %297

297:                                              ; preds = %292, %246
  %298 = phi i8 [ %256, %246 ], [ %293, %292 ]
  %299 = getelementptr inbounds %struct.anon, %struct.anon* %254, i64 0, i32 2
  %300 = load i16, i16* %299, align 2
  %301 = and i16 %300, 1
  %302 = icmp eq i16 %301, 0
  br i1 %302, label %347, label %303

303:                                              ; preds = %297
  %304 = load i8, i8* %252, align 4
  %305 = zext i8 %304 to i32
  %306 = icmp ugt i32 %305, 97
  %307 = select i1 %306, i32 %305, i32 97
  %308 = add nsw i32 %307, -32
  %309 = zext i8 %298 to i32
  %310 = icmp ult i32 %309, 122
  %311 = select i1 %310, i32 %309, i32 122
  %312 = add nsw i32 %311, -32
  %313 = icmp sgt i32 %308, %312
  br i1 %313, label %347, label %314

314:                                              ; preds = %303
  %315 = shl i32 %250, 16
  %316 = shl i8 %158, 6
  %317 = and i8 %316, 64
  %318 = zext i8 %317 to i32
  %319 = or i32 %161, %318
  %320 = or i32 %319, %315
  br label %321

321:                                              ; preds = %344, %314
  %322 = phi i32 [ %308, %314 ], [ %345, %344 ]
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 21, i64 %323
  %325 = load i8, i8* %324, align 1
  br label %326

326:                                              ; preds = %329, %321
  %327 = phi i64 [ %330, %329 ], [ %323, %321 ]
  %328 = icmp slt i64 %327, 255
  br i1 %328, label %329, label %334

329:                                              ; preds = %326
  %330 = add nsw i64 %327, 1
  %331 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 21, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = icmp eq i8 %332, %325
  br i1 %333, label %326, label %334

334:                                              ; preds = %326, %329
  %335 = trunc i64 %327 to i32
  %336 = zext i8 %325 to i64
  %337 = getelementptr inbounds %"struct.re2::OneState", %"struct.re2::OneState"* %249, i64 0, i32 1, i64 %336
  %338 = load i32, i32* %337, align 4
  %339 = and i32 %338, 48
  %340 = icmp eq i32 %339, 48
  br i1 %340, label %341, label %342

341:                                              ; preds = %334
  store i32 %320, i32* %337, align 4
  br label %344

342:                                              ; preds = %334
  %343 = icmp eq i32 %338, %320
  br i1 %343, label %344, label %497

344:                                              ; preds = %341, %342
  %345 = add nsw i32 %335, 1
  %346 = icmp sgt i32 %312, %335
  br i1 %346, label %321, label %347

347:                                              ; preds = %344, %303, %297
  %348 = load i32, i32* %164, align 4
  %349 = and i32 %348, 8
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %134

351:                                              ; preds = %347
  %352 = add nsw i32 %160, 1
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %437, label %354

354:                                              ; preds = %351
  %355 = icmp ugt i32 %51, %352
  br i1 %355, label %356, label %437

356:                                              ; preds = %354
  %357 = sext i32 %352 to i64
  %358 = getelementptr inbounds i32, i32* %88, i64 %357
  %359 = load i32, i32* %358, align 4
  %360 = icmp ult i32 %359, %154
  br i1 %360, label %361, label %366

361:                                              ; preds = %356
  %362 = sext i32 %359 to i64
  %363 = getelementptr inbounds i32, i32* %87, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = icmp eq i32 %364, %352
  br i1 %365, label %497, label %366

366:                                              ; preds = %361, %356
  store i32 %154, i32* %358, align 4
  %367 = sext i32 %154 to i64
  %368 = getelementptr inbounds i32, i32* %87, i64 %367
  store i32 %352, i32* %368, align 4
  %369 = add nsw i32 %154, 1
  br label %437

370:                                              ; preds = %153, %153, %153
  %371 = and i32 %165, 8
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %399

373:                                              ; preds = %370
  %374 = add nsw i32 %160, 1
  %375 = icmp ne i32 %374, 0
  %376 = icmp ugt i32 %51, %374
  %377 = and i1 %375, %376
  br i1 %377, label %378, label %392

378:                                              ; preds = %373
  %379 = sext i32 %374 to i64
  %380 = getelementptr inbounds i32, i32* %88, i64 %379
  %381 = load i32, i32* %380, align 4
  %382 = icmp ult i32 %381, %154
  br i1 %382, label %383, label %388

383:                                              ; preds = %378
  %384 = sext i32 %381 to i64
  %385 = getelementptr inbounds i32, i32* %87, i64 %384
  %386 = load i32, i32* %385, align 4
  %387 = icmp eq i32 %386, %374
  br i1 %387, label %497, label %388

388:                                              ; preds = %383, %378
  store i32 %154, i32* %380, align 4
  %389 = sext i32 %154 to i64
  %390 = getelementptr inbounds i32, i32* %87, i64 %389
  store i32 %374, i32* %390, align 4
  %391 = add nsw i32 %154, 1
  br label %392

392:                                              ; preds = %373, %388
  %393 = phi i32 [ %391, %388 ], [ %154, %373 ]
  %394 = sext i32 %159 to i64
  %395 = getelementptr inbounds %"struct.re2::InstCond", %"struct.re2::InstCond"* %82, i64 %394, i32 0
  store i32 %374, i32* %395, align 4
  %396 = add nsw i32 %159, 1
  %397 = getelementptr inbounds %"struct.re2::InstCond", %"struct.re2::InstCond"* %82, i64 %394, i32 1
  store i32 %161, i32* %397, align 4
  %398 = load i32, i32* %164, align 4
  br label %399

399:                                              ; preds = %370, %392
  %400 = phi i32 [ %398, %392 ], [ %165, %370 ]
  %401 = phi i32 [ %393, %392 ], [ %154, %370 ]
  %402 = phi i32 [ %396, %392 ], [ %159, %370 ]
  %403 = and i32 %400, 7
  switch i32 %403, label %415 [
    i32 3, label %404
    i32 4, label %411
  ]

404:                                              ; preds = %399
  %405 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %163, i64 %162, i32 1, i32 0
  %406 = load i32, i32* %405, align 4
  %407 = icmp slt i32 %406, 10
  br i1 %407, label %408, label %415

408:                                              ; preds = %404
  %409 = shl i32 32, %406
  %410 = or i32 %409, %161
  br label %415

411:                                              ; preds = %399
  %412 = getelementptr inbounds %"class.re2::Prog::Inst", %"class.re2::Prog::Inst"* %163, i64 %162, i32 1, i32 0
  %413 = load i32, i32* %412, align 4
  %414 = or i32 %413, %161
  br label %415

415:                                              ; preds = %399, %404, %408, %411
  %416 = phi i32 [ %414, %411 ], [ %161, %404 ], [ %410, %408 ], [ %161, %399 ]
  %417 = lshr i32 %400, 4
  %418 = icmp ne i32 %417, 0
  %419 = icmp ugt i32 %51, %417
  %420 = and i1 %418, %419
  br i1 %420, label %421, label %437

421:                                              ; preds = %415
  %422 = zext i32 %417 to i64
  %423 = getelementptr inbounds i32, i32* %88, i64 %422
  %424 = load i32, i32* %423, align 4
  %425 = icmp ult i32 %424, %401
  br i1 %425, label %426, label %431

426:                                              ; preds = %421
  %427 = sext i32 %424 to i64
  %428 = getelementptr inbounds i32, i32* %87, i64 %427
  %429 = load i32, i32* %428, align 4
  %430 = icmp eq i32 %429, %417
  br i1 %430, label %497, label %431

431:                                              ; preds = %426, %421
  store i32 %401, i32* %423, align 4
  %432 = sext i32 %401 to i64
  %433 = getelementptr inbounds i32, i32* %87, i64 %432
  store i32 %417, i32* %433, align 4
  %434 = add nsw i32 %401, 1
  %435 = load i32, i32* %164, align 4
  %436 = lshr i32 %435, 4
  br label %437

437:                                              ; preds = %431, %415, %354, %366, %351, %454, %469, %457, %189, %204, %192
  %438 = phi i32 [ %154, %189 ], [ %207, %204 ], [ %154, %192 ], [ %154, %454 ], [ %472, %469 ], [ %154, %457 ], [ %154, %354 ], [ %369, %366 ], [ %154, %351 ], [ %401, %415 ], [ %434, %431 ]
  %439 = phi i32 [ %155, %189 ], [ %155, %204 ], [ %155, %192 ], [ %155, %454 ], [ %155, %469 ], [ %155, %457 ], [ %247, %354 ], [ %247, %366 ], [ %247, %351 ], [ %155, %415 ], [ %155, %431 ]
  %440 = phi i32 [ %156, %189 ], [ %156, %204 ], [ %156, %192 ], [ %156, %454 ], [ %156, %469 ], [ %156, %457 ], [ %248, %354 ], [ %248, %366 ], [ %248, %351 ], [ %156, %415 ], [ %156, %431 ]
  %441 = phi %"struct.re2::OneState"* [ %157, %189 ], [ %157, %204 ], [ %157, %192 ], [ %157, %454 ], [ %157, %469 ], [ %157, %457 ], [ %249, %354 ], [ %249, %366 ], [ %249, %351 ], [ %157, %415 ], [ %157, %431 ]
  %442 = phi i8 [ %158, %189 ], [ %158, %204 ], [ %158, %192 ], [ 1, %454 ], [ 1, %469 ], [ 1, %457 ], [ %158, %354 ], [ %158, %366 ], [ %158, %351 ], [ %158, %415 ], [ %158, %431 ]
  %443 = phi i32 [ %159, %189 ], [ %159, %204 ], [ %159, %192 ], [ %159, %454 ], [ %159, %469 ], [ %159, %457 ], [ %159, %354 ], [ %159, %366 ], [ %159, %351 ], [ %402, %415 ], [ %402, %431 ]
  %444 = phi i32 [ 0, %189 ], [ %190, %204 ], [ %190, %192 ], [ 0, %454 ], [ %455, %469 ], [ %455, %457 ], [ %352, %354 ], [ %352, %366 ], [ 0, %351 ], [ %417, %415 ], [ %436, %431 ]
  %445 = phi i32 [ %161, %189 ], [ %161, %204 ], [ %161, %192 ], [ %161, %454 ], [ %161, %469 ], [ %161, %457 ], [ %161, %354 ], [ %161, %366 ], [ %161, %351 ], [ %416, %415 ], [ %416, %431 ]
  br label %153

446:                                              ; preds = %153
  %447 = and i8 %158, 1
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %449, label %497

449:                                              ; preds = %446
  %450 = getelementptr inbounds %"struct.re2::OneState", %"struct.re2::OneState"* %157, i64 0, i32 0
  store i32 %161, i32* %450, align 4
  %451 = load i32, i32* %164, align 4
  %452 = and i32 %451, 8
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %134

454:                                              ; preds = %449
  %455 = add nsw i32 %160, 1
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %437, label %457

457:                                              ; preds = %454
  %458 = icmp ugt i32 %51, %455
  br i1 %458, label %459, label %437

459:                                              ; preds = %457
  %460 = sext i32 %455 to i64
  %461 = getelementptr inbounds i32, i32* %88, i64 %460
  %462 = load i32, i32* %461, align 4
  %463 = icmp ult i32 %462, %154
  br i1 %463, label %464, label %469

464:                                              ; preds = %459
  %465 = sext i32 %462 to i64
  %466 = getelementptr inbounds i32, i32* %87, i64 %465
  %467 = load i32, i32* %466, align 4
  %468 = icmp eq i32 %467, %455
  br i1 %468, label %497, label %469

469:                                              ; preds = %464, %459
  store i32 %154, i32* %461, align 4
  %470 = sext i32 %154 to i64
  %471 = getelementptr inbounds i32, i32* %87, i64 %470
  store i32 %455, i32* %471, align 4
  %472 = add nsw i32 %154, 1
  br label %437

473:                                              ; preds = %134
  %474 = getelementptr inbounds i32, i32* %111, i64 1
  %475 = sext i32 %135 to i64
  %476 = getelementptr inbounds i32, i32* %76, i64 %475
  %477 = icmp eq i32* %474, %476
  br i1 %477, label %478, label %110

478:                                              ; preds = %473, %75
  %479 = phi i32 [ 1, %75 ], [ %136, %473 ]
  %480 = mul nsw i32 %479, %24
  %481 = sext i32 %480 to i64
  %482 = load i64, i64* %27, align 8
  %483 = sub nsw i64 %482, %481
  store i64 %483, i64* %27, align 8
  %484 = call i8* @_Znwm(i64 %481) #12
  %485 = ptrtoint i8* %484 to i64
  %486 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 17
  %487 = getelementptr inbounds %"class.re2::PODArray.7", %"class.re2::PODArray.7"* %486, i64 0, i32 0, i32 0, i32 0, i32 0
  %488 = load i8*, i8** %487, align 8
  %489 = bitcast %"class.re2::PODArray.7"* %486 to i64*
  store i64 %485, i64* %489, align 8
  %490 = icmp eq i8* %488, null
  br i1 %490, label %493, label %491

491:                                              ; preds = %478
  call void @_ZdlPv(i8* nonnull %488) #12
  %492 = load i8*, i8** %487, align 8
  br label %493

493:                                              ; preds = %491, %478
  %494 = phi i8* [ %492, %491 ], [ %484, %478 ]
  %495 = getelementptr inbounds %"class.re2::Prog", %"class.re2::Prog"* %0, i64 0, i32 17, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %480, i32* %495, align 4
  %496 = load i8*, i8** %60, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %494, i8* align 1 %496, i64 %481, i1 false)
  br label %497

497:                                              ; preds = %214, %361, %464, %426, %383, %199, %446, %290, %342, %493
  %498 = phi i1 [ true, %493 ], [ false, %342 ], [ false, %290 ], [ false, %446 ], [ false, %199 ], [ false, %383 ], [ false, %426 ], [ false, %464 ], [ false, %361 ], [ false, %214 ]
  call void @_ZdlPv(i8* nonnull %65) #12
  call void @_ZdlPv(i8* nonnull %64) #12
  call void @_ZdlPv(i8* nonnull %63) #12
  call void @_ZdlPv(i8* nonnull %62) #12
  %499 = load i8*, i8** %60, align 8
  %500 = icmp eq i8* %499, null
  br i1 %500, label %504, label %501

501:                                              ; preds = %497
  %502 = ptrtoint i8* %499 to i64
  %503 = bitcast i8** %61 to i64*
  store i64 %502, i64* %503, align 8
  call void @_ZdlPv(i8* nonnull %499) #12
  br label %504

504:                                              ; preds = %497, %501
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  call void @_ZdlPv(i8* nonnull %57) #12
  call void @_ZdlPv(i8* nonnull %49) #12
  br label %505

505:                                              ; preds = %504, %26, %17, %13, %9
  %506 = phi i1 [ %12, %9 ], [ false, %13 ], [ %498, %504 ], [ false, %26 ], [ false, %17 ]
  ret i1 %506
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertENS_11__wrap_iterIPKhEEmRS5_(%"class.std::__1::vector"*, i8*, i64, i8* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %543, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = ptrtoint i8* %13 to i64
  %15 = sub i64 %11, %14
  %16 = icmp ult i64 %15, %2
  br i1 %16, label %326, label %17

17:                                               ; preds = %8
  %18 = sub i64 %14, %5
  %19 = icmp ult i64 %18, %2
  br i1 %19, label %20, label %96

20:                                               ; preds = %17
  %21 = sub i64 %2, %18
  %22 = bitcast i8** %12 to i64*
  %23 = getelementptr inbounds i8, i8* %13, i64 %21
  %24 = icmp eq i64 %21, 0
  br i1 %24, label %91, label %25

25:                                               ; preds = %20
  %26 = icmp ult i64 %21, 32
  br i1 %26, label %27, label %29

27:                                               ; preds = %82, %29, %25
  %28 = phi i8* [ %13, %29 ], [ %13, %25 ], [ %36, %82 ]
  br label %86

29:                                               ; preds = %25
  %30 = getelementptr i8, i8* %3, i64 1
  %31 = icmp ult i8* %13, %30
  %32 = icmp ugt i8* %23, %3
  %33 = and i1 %31, %32
  br i1 %33, label %27, label %34

34:                                               ; preds = %29
  %35 = and i64 %21, -32
  %36 = getelementptr i8, i8* %13, i64 %35
  %37 = add i64 %35, -32
  %38 = lshr exact i64 %37, 5
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %37, 0
  br i1 %41, label %69, label %42

42:                                               ; preds = %34
  %43 = sub nuw nsw i64 %39, %40
  %44 = load i8, i8* %3, align 1, !alias.scope !3
  %45 = insertelement <16 x i8> undef, i8 %44, i32 0
  %46 = shufflevector <16 x i8> %45, <16 x i8> undef, <16 x i32> zeroinitializer
  %47 = insertelement <16 x i8> undef, i8 %44, i32 0
  %48 = shufflevector <16 x i8> %47, <16 x i8> undef, <16 x i32> zeroinitializer
  %49 = load i8, i8* %3, align 1, !alias.scope !3
  %50 = insertelement <16 x i8> undef, i8 %49, i32 0
  %51 = shufflevector <16 x i8> %50, <16 x i8> undef, <16 x i32> zeroinitializer
  %52 = insertelement <16 x i8> undef, i8 %49, i32 0
  %53 = shufflevector <16 x i8> %52, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %54

54:                                               ; preds = %54, %42
  %55 = phi i64 [ 0, %42 ], [ %66, %54 ]
  %56 = phi i64 [ %43, %42 ], [ %67, %54 ]
  %57 = getelementptr i8, i8* %13, i64 %55
  %58 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> %46, <16 x i8>* %58, align 1, !alias.scope !6, !noalias !3
  %59 = getelementptr i8, i8* %57, i64 16
  %60 = bitcast i8* %59 to <16 x i8>*
  store <16 x i8> %48, <16 x i8>* %60, align 1, !alias.scope !6, !noalias !3
  %61 = or i64 %55, 32
  %62 = getelementptr i8, i8* %13, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %63, align 1, !alias.scope !6, !noalias !3
  %64 = getelementptr i8, i8* %62, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %53, <16 x i8>* %65, align 1, !alias.scope !6, !noalias !3
  %66 = add i64 %55, 64
  %67 = add i64 %56, -2
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %54, !llvm.loop !8

69:                                               ; preds = %54, %34
  %70 = phi i64 [ 0, %34 ], [ %66, %54 ]
  %71 = icmp eq i64 %40, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %69
  %73 = getelementptr i8, i8* %13, i64 %70
  %74 = load i8, i8* %3, align 1, !alias.scope !3
  %75 = insertelement <16 x i8> undef, i8 %74, i32 0
  %76 = shufflevector <16 x i8> %75, <16 x i8> undef, <16 x i32> zeroinitializer
  %77 = insertelement <16 x i8> undef, i8 %74, i32 0
  %78 = shufflevector <16 x i8> %77, <16 x i8> undef, <16 x i32> zeroinitializer
  %79 = bitcast i8* %73 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1, !alias.scope !6, !noalias !3
  %80 = getelementptr i8, i8* %73, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  store <16 x i8> %78, <16 x i8>* %81, align 1, !alias.scope !6, !noalias !3
  br label %82

82:                                               ; preds = %69, %72
  %83 = icmp eq i64 %21, %35
  br i1 %83, label %84, label %27

84:                                               ; preds = %86, %82
  %85 = ptrtoint i8* %23 to i64
  br label %91

86:                                               ; preds = %27, %86
  %87 = phi i8* [ %89, %86 ], [ %28, %27 ]
  %88 = load i8, i8* %3, align 1
  store i8 %88, i8* %87, align 1
  %89 = getelementptr inbounds i8, i8* %87, i64 1
  %90 = icmp eq i8* %89, %23
  br i1 %90, label %84, label %86, !llvm.loop !10

91:                                               ; preds = %84, %20
  %92 = phi i64 [ %85, %84 ], [ %14, %20 ]
  store i64 %92, i64* %22, align 8
  %93 = icmp eq i64 %18, 0
  br i1 %93, label %543, label %94

94:                                               ; preds = %91
  %95 = inttoptr i64 %92 to i8*
  br label %96

96:                                               ; preds = %94, %17
  %97 = phi i64 [ %92, %94 ], [ %14, %17 ]
  %98 = phi i8* [ %95, %94 ], [ %13, %17 ]
  %99 = phi i64 [ %18, %94 ], [ %2, %17 ]
  %100 = getelementptr inbounds i8, i8* %1, i64 %2
  %101 = ptrtoint i8* %100 to i64
  %102 = sub i64 %97, %101
  %103 = getelementptr inbounds i8, i8* %1, i64 %102
  %104 = icmp ult i8* %103, %13
  br i1 %104, label %105, label %205

105:                                              ; preds = %96
  %106 = sub i64 %2, %97
  %107 = getelementptr i8, i8* %13, i64 %106
  %108 = ptrtoint i8* %107 to i64
  %109 = icmp ult i8* %107, inttoptr (i64 32 to i8*)
  br i1 %109, label %110, label %113

110:                                              ; preds = %200, %113, %105
  %111 = phi i8* [ %103, %113 ], [ %103, %105 ], [ %123, %200 ]
  %112 = phi i8* [ %98, %113 ], [ %98, %105 ], [ %124, %200 ]
  br label %212

113:                                              ; preds = %105
  %114 = sub i64 %2, %97
  %115 = getelementptr i8, i8* %13, i64 %114
  %116 = ptrtoint i8* %115 to i64
  %117 = getelementptr i8, i8* %98, i64 %116
  %118 = icmp ult i8* %98, %13
  %119 = icmp ult i8* %103, %117
  %120 = and i1 %118, %119
  br i1 %120, label %110, label %121

121:                                              ; preds = %113
  %122 = and i64 %108, -32
  %123 = getelementptr i8, i8* %103, i64 %122
  %124 = getelementptr i8, i8* %98, i64 %122
  %125 = add i64 %122, -32
  %126 = lshr exact i64 %125, 5
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 3
  %129 = icmp ult i64 %125, 96
  br i1 %129, label %181, label %130

130:                                              ; preds = %121
  %131 = sub nsw i64 %127, %128
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %178, %132 ]
  %134 = phi i64 [ %131, %130 ], [ %179, %132 ]
  %135 = getelementptr i8, i8* %103, i64 %133
  %136 = getelementptr i8, i8* %98, i64 %133
  %137 = bitcast i8* %135 to <16 x i8>*
  %138 = load <16 x i8>, <16 x i8>* %137, align 1, !alias.scope !11
  %139 = getelementptr i8, i8* %135, i64 16
  %140 = bitcast i8* %139 to <16 x i8>*
  %141 = load <16 x i8>, <16 x i8>* %140, align 1, !alias.scope !11
  %142 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %138, <16 x i8>* %142, align 1, !alias.scope !14, !noalias !11
  %143 = getelementptr i8, i8* %136, i64 16
  %144 = bitcast i8* %143 to <16 x i8>*
  store <16 x i8> %141, <16 x i8>* %144, align 1, !alias.scope !14, !noalias !11
  %145 = or i64 %133, 32
  %146 = getelementptr i8, i8* %103, i64 %145
  %147 = getelementptr i8, i8* %98, i64 %145
  %148 = bitcast i8* %146 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 1, !alias.scope !11
  %150 = getelementptr i8, i8* %146, i64 16
  %151 = bitcast i8* %150 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1, !alias.scope !11
  %153 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %149, <16 x i8>* %153, align 1, !alias.scope !14, !noalias !11
  %154 = getelementptr i8, i8* %147, i64 16
  %155 = bitcast i8* %154 to <16 x i8>*
  store <16 x i8> %152, <16 x i8>* %155, align 1, !alias.scope !14, !noalias !11
  %156 = or i64 %133, 64
  %157 = getelementptr i8, i8* %103, i64 %156
  %158 = getelementptr i8, i8* %98, i64 %156
  %159 = bitcast i8* %157 to <16 x i8>*
  %160 = load <16 x i8>, <16 x i8>* %159, align 1, !alias.scope !11
  %161 = getelementptr i8, i8* %157, i64 16
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1, !alias.scope !11
  %164 = bitcast i8* %158 to <16 x i8>*
  store <16 x i8> %160, <16 x i8>* %164, align 1, !alias.scope !14, !noalias !11
  %165 = getelementptr i8, i8* %158, i64 16
  %166 = bitcast i8* %165 to <16 x i8>*
  store <16 x i8> %163, <16 x i8>* %166, align 1, !alias.scope !14, !noalias !11
  %167 = or i64 %133, 96
  %168 = getelementptr i8, i8* %103, i64 %167
  %169 = getelementptr i8, i8* %98, i64 %167
  %170 = bitcast i8* %168 to <16 x i8>*
  %171 = load <16 x i8>, <16 x i8>* %170, align 1, !alias.scope !11
  %172 = getelementptr i8, i8* %168, i64 16
  %173 = bitcast i8* %172 to <16 x i8>*
  %174 = load <16 x i8>, <16 x i8>* %173, align 1, !alias.scope !11
  %175 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %171, <16 x i8>* %175, align 1, !alias.scope !14, !noalias !11
  %176 = getelementptr i8, i8* %169, i64 16
  %177 = bitcast i8* %176 to <16 x i8>*
  store <16 x i8> %174, <16 x i8>* %177, align 1, !alias.scope !14, !noalias !11
  %178 = add i64 %133, 128
  %179 = add i64 %134, -4
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %132, !llvm.loop !16

181:                                              ; preds = %132, %121
  %182 = phi i64 [ 0, %121 ], [ %178, %132 ]
  %183 = icmp eq i64 %128, 0
  br i1 %183, label %200, label %184

184:                                              ; preds = %181, %184
  %185 = phi i64 [ %197, %184 ], [ %182, %181 ]
  %186 = phi i64 [ %198, %184 ], [ %128, %181 ]
  %187 = getelementptr i8, i8* %103, i64 %185
  %188 = getelementptr i8, i8* %98, i64 %185
  %189 = bitcast i8* %187 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !11
  %191 = getelementptr i8, i8* %187, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !11
  %194 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %194, align 1, !alias.scope !14, !noalias !11
  %195 = getelementptr i8, i8* %188, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %196, align 1, !alias.scope !14, !noalias !11
  %197 = add i64 %185, 32
  %198 = add i64 %186, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %184, !llvm.loop !17

200:                                              ; preds = %184, %181
  %201 = icmp eq i64 %122, %108
  br i1 %201, label %202, label %110

202:                                              ; preds = %212, %200
  %203 = phi i8* [ %124, %200 ], [ %217, %212 ]
  %204 = ptrtoint i8* %203 to i64
  br label %205

205:                                              ; preds = %202, %96
  %206 = phi i64 [ %204, %202 ], [ %97, %96 ]
  %207 = bitcast i8** %12 to i64*
  store i64 %206, i64* %207, align 8
  %208 = icmp eq i64 %102, 0
  br i1 %208, label %219, label %209

209:                                              ; preds = %205
  %210 = sub i64 0, %102
  %211 = getelementptr inbounds i8, i8* %98, i64 %210
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %211, i8* align 1 %1, i64 %102, i1 false) #10
  br label %219

212:                                              ; preds = %110, %212
  %213 = phi i8* [ %216, %212 ], [ %111, %110 ]
  %214 = phi i8* [ %217, %212 ], [ %112, %110 ]
  %215 = load i8, i8* %213, align 1
  store i8 %215, i8* %214, align 1
  %216 = getelementptr inbounds i8, i8* %213, i64 1
  %217 = getelementptr inbounds i8, i8* %214, i64 1
  %218 = icmp eq i8* %216, %13
  br i1 %218, label %202, label %212, !llvm.loop !19

219:                                              ; preds = %205, %209
  %220 = icmp ugt i8* %1, %3
  br i1 %220, label %226, label %221

221:                                              ; preds = %219
  %222 = load i8*, i8** %12, align 8
  %223 = icmp ugt i8* %222, %3
  %224 = getelementptr inbounds i8, i8* %3, i64 %2
  %225 = select i1 %223, i8* %224, i8* %3
  br label %226

226:                                              ; preds = %221, %219
  %227 = phi i8* [ %3, %219 ], [ %225, %221 ]
  %228 = icmp ult i64 %99, 32
  br i1 %228, label %286, label %229

229:                                              ; preds = %226
  %230 = getelementptr i8, i8* %1, i64 %99
  %231 = getelementptr i8, i8* %227, i64 1
  %232 = icmp ugt i8* %231, %1
  %233 = icmp ult i8* %227, %230
  %234 = and i1 %232, %233
  br i1 %234, label %286, label %235

235:                                              ; preds = %229
  %236 = and i64 %99, -32
  %237 = getelementptr i8, i8* %1, i64 %236
  %238 = sub i64 %99, %236
  %239 = add i64 %236, -32
  %240 = lshr exact i64 %239, 5
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 1
  %243 = icmp eq i64 %239, 0
  br i1 %243, label %271, label %244

244:                                              ; preds = %235
  %245 = sub nuw nsw i64 %241, %242
  %246 = load i8, i8* %227, align 1, !alias.scope !20
  %247 = insertelement <16 x i8> undef, i8 %246, i32 0
  %248 = shufflevector <16 x i8> %247, <16 x i8> undef, <16 x i32> zeroinitializer
  %249 = insertelement <16 x i8> undef, i8 %246, i32 0
  %250 = shufflevector <16 x i8> %249, <16 x i8> undef, <16 x i32> zeroinitializer
  %251 = load i8, i8* %227, align 1, !alias.scope !20
  %252 = insertelement <16 x i8> undef, i8 %251, i32 0
  %253 = shufflevector <16 x i8> %252, <16 x i8> undef, <16 x i32> zeroinitializer
  %254 = insertelement <16 x i8> undef, i8 %251, i32 0
  %255 = shufflevector <16 x i8> %254, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %256

256:                                              ; preds = %256, %244
  %257 = phi i64 [ 0, %244 ], [ %268, %256 ]
  %258 = phi i64 [ %245, %244 ], [ %269, %256 ]
  %259 = getelementptr i8, i8* %1, i64 %257
  %260 = bitcast i8* %259 to <16 x i8>*
  store <16 x i8> %248, <16 x i8>* %260, align 1, !alias.scope !23, !noalias !20
  %261 = getelementptr i8, i8* %259, i64 16
  %262 = bitcast i8* %261 to <16 x i8>*
  store <16 x i8> %250, <16 x i8>* %262, align 1, !alias.scope !23, !noalias !20
  %263 = or i64 %257, 32
  %264 = getelementptr i8, i8* %1, i64 %263
  %265 = bitcast i8* %264 to <16 x i8>*
  store <16 x i8> %253, <16 x i8>* %265, align 1, !alias.scope !23, !noalias !20
  %266 = getelementptr i8, i8* %264, i64 16
  %267 = bitcast i8* %266 to <16 x i8>*
  store <16 x i8> %255, <16 x i8>* %267, align 1, !alias.scope !23, !noalias !20
  %268 = add i64 %257, 64
  %269 = add i64 %258, -2
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %271, label %256, !llvm.loop !25

271:                                              ; preds = %256, %235
  %272 = phi i64 [ 0, %235 ], [ %268, %256 ]
  %273 = icmp eq i64 %242, 0
  br i1 %273, label %284, label %274

274:                                              ; preds = %271
  %275 = getelementptr i8, i8* %1, i64 %272
  %276 = load i8, i8* %227, align 1, !alias.scope !20
  %277 = insertelement <16 x i8> undef, i8 %276, i32 0
  %278 = shufflevector <16 x i8> %277, <16 x i8> undef, <16 x i32> zeroinitializer
  %279 = insertelement <16 x i8> undef, i8 %276, i32 0
  %280 = shufflevector <16 x i8> %279, <16 x i8> undef, <16 x i32> zeroinitializer
  %281 = bitcast i8* %275 to <16 x i8>*
  store <16 x i8> %278, <16 x i8>* %281, align 1, !alias.scope !23, !noalias !20
  %282 = getelementptr i8, i8* %275, i64 16
  %283 = bitcast i8* %282 to <16 x i8>*
  store <16 x i8> %280, <16 x i8>* %283, align 1, !alias.scope !23, !noalias !20
  br label %284

284:                                              ; preds = %271, %274
  %285 = icmp eq i64 %99, %236
  br i1 %285, label %543, label %286

286:                                              ; preds = %284, %229, %226
  %287 = phi i8* [ %1, %229 ], [ %1, %226 ], [ %237, %284 ]
  %288 = phi i64 [ %99, %229 ], [ %99, %226 ], [ %238, %284 ]
  %289 = add i64 %288, -1
  %290 = and i64 %288, 7
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %301, label %292

292:                                              ; preds = %286, %292
  %293 = phi i8* [ %297, %292 ], [ %287, %286 ]
  %294 = phi i64 [ %298, %292 ], [ %288, %286 ]
  %295 = phi i64 [ %299, %292 ], [ %290, %286 ]
  %296 = load i8, i8* %227, align 1
  store i8 %296, i8* %293, align 1
  %297 = getelementptr inbounds i8, i8* %293, i64 1
  %298 = add i64 %294, -1
  %299 = add i64 %295, -1
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %292, !llvm.loop !26

301:                                              ; preds = %292, %286
  %302 = phi i8* [ %287, %286 ], [ %297, %292 ]
  %303 = phi i64 [ %288, %286 ], [ %298, %292 ]
  %304 = icmp ult i64 %289, 7
  br i1 %304, label %543, label %305

305:                                              ; preds = %301, %305
  %306 = phi i8* [ %323, %305 ], [ %302, %301 ]
  %307 = phi i64 [ %324, %305 ], [ %303, %301 ]
  %308 = load i8, i8* %227, align 1
  store i8 %308, i8* %306, align 1
  %309 = getelementptr inbounds i8, i8* %306, i64 1
  %310 = load i8, i8* %227, align 1
  store i8 %310, i8* %309, align 1
  %311 = getelementptr inbounds i8, i8* %306, i64 2
  %312 = load i8, i8* %227, align 1
  store i8 %312, i8* %311, align 1
  %313 = getelementptr inbounds i8, i8* %306, i64 3
  %314 = load i8, i8* %227, align 1
  store i8 %314, i8* %313, align 1
  %315 = getelementptr inbounds i8, i8* %306, i64 4
  %316 = load i8, i8* %227, align 1
  store i8 %316, i8* %315, align 1
  %317 = getelementptr inbounds i8, i8* %306, i64 5
  %318 = load i8, i8* %227, align 1
  store i8 %318, i8* %317, align 1
  %319 = getelementptr inbounds i8, i8* %306, i64 6
  %320 = load i8, i8* %227, align 1
  store i8 %320, i8* %319, align 1
  %321 = getelementptr inbounds i8, i8* %306, i64 7
  %322 = load i8, i8* %227, align 1
  store i8 %322, i8* %321, align 1
  %323 = getelementptr inbounds i8, i8* %306, i64 8
  %324 = add i64 %307, -8
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %543, label %305, !llvm.loop !27

326:                                              ; preds = %8
  %327 = bitcast i8** %12 to i64*
  %328 = bitcast %"class.std::__1::vector"* %0 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = sub i64 %14, %329
  %331 = add i64 %330, %2
  %332 = icmp slt i64 %331, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %326
  %334 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %334) #13
  unreachable

335:                                              ; preds = %326
  %336 = sub i64 %11, %329
  %337 = icmp ult i64 %336, 4611686018427387903
  br i1 %337, label %340, label %338

338:                                              ; preds = %335
  %339 = sub i64 %5, %329
  br label %346

340:                                              ; preds = %335
  %341 = shl i64 %336, 1
  %342 = icmp ult i64 %341, %331
  %343 = select i1 %342, i64 %331, i64 %341
  %344 = sub i64 %5, %329
  %345 = icmp eq i64 %343, 0
  br i1 %345, label %350, label %346

346:                                              ; preds = %338, %340
  %347 = phi i64 [ %339, %338 ], [ %344, %340 ]
  %348 = phi i64 [ 9223372036854775807, %338 ], [ %343, %340 ]
  %349 = tail call i8* @_Znwm(i64 %348) #12
  br label %350

350:                                              ; preds = %340, %346
  %351 = phi i64 [ %347, %346 ], [ %344, %340 ]
  %352 = phi i64 [ %348, %346 ], [ 0, %340 ]
  %353 = phi i8* [ %349, %346 ], [ null, %340 ]
  %354 = getelementptr inbounds i8, i8* %353, i64 %351
  %355 = getelementptr inbounds i8, i8* %353, i64 %352
  %356 = getelementptr inbounds i8, i8* %354, i64 %2
  %357 = icmp ult i64 %2, 32
  br i1 %357, label %413, label %358

358:                                              ; preds = %350
  %359 = getelementptr i8, i8* %3, i64 1
  %360 = icmp ult i8* %354, %359
  %361 = icmp ugt i8* %356, %3
  %362 = and i1 %360, %361
  br i1 %362, label %413, label %363

363:                                              ; preds = %358
  %364 = and i64 %2, -32
  %365 = getelementptr i8, i8* %354, i64 %364
  %366 = add i64 %364, -32
  %367 = lshr exact i64 %366, 5
  %368 = add nuw nsw i64 %367, 1
  %369 = and i64 %368, 1
  %370 = icmp eq i64 %366, 0
  br i1 %370, label %398, label %371

371:                                              ; preds = %363
  %372 = sub nuw nsw i64 %368, %369
  %373 = load i8, i8* %3, align 1, !alias.scope !28
  %374 = insertelement <16 x i8> undef, i8 %373, i32 0
  %375 = shufflevector <16 x i8> %374, <16 x i8> undef, <16 x i32> zeroinitializer
  %376 = insertelement <16 x i8> undef, i8 %373, i32 0
  %377 = shufflevector <16 x i8> %376, <16 x i8> undef, <16 x i32> zeroinitializer
  %378 = load i8, i8* %3, align 1, !alias.scope !28
  %379 = insertelement <16 x i8> undef, i8 %378, i32 0
  %380 = shufflevector <16 x i8> %379, <16 x i8> undef, <16 x i32> zeroinitializer
  %381 = insertelement <16 x i8> undef, i8 %378, i32 0
  %382 = shufflevector <16 x i8> %381, <16 x i8> undef, <16 x i32> zeroinitializer
  br label %383

383:                                              ; preds = %383, %371
  %384 = phi i64 [ 0, %371 ], [ %395, %383 ]
  %385 = phi i64 [ %372, %371 ], [ %396, %383 ]
  %386 = getelementptr i8, i8* %354, i64 %384
  %387 = bitcast i8* %386 to <16 x i8>*
  store <16 x i8> %375, <16 x i8>* %387, align 1, !alias.scope !31, !noalias !28
  %388 = getelementptr i8, i8* %386, i64 16
  %389 = bitcast i8* %388 to <16 x i8>*
  store <16 x i8> %377, <16 x i8>* %389, align 1, !alias.scope !31, !noalias !28
  %390 = or i64 %384, 32
  %391 = getelementptr i8, i8* %354, i64 %390
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %380, <16 x i8>* %392, align 1, !alias.scope !31, !noalias !28
  %393 = getelementptr i8, i8* %391, i64 16
  %394 = bitcast i8* %393 to <16 x i8>*
  store <16 x i8> %382, <16 x i8>* %394, align 1, !alias.scope !31, !noalias !28
  %395 = add i64 %384, 64
  %396 = add i64 %385, -2
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %398, label %383, !llvm.loop !33

398:                                              ; preds = %383, %363
  %399 = phi i64 [ 0, %363 ], [ %395, %383 ]
  %400 = icmp eq i64 %369, 0
  br i1 %400, label %411, label %401

401:                                              ; preds = %398
  %402 = getelementptr i8, i8* %354, i64 %399
  %403 = load i8, i8* %3, align 1, !alias.scope !28
  %404 = insertelement <16 x i8> undef, i8 %403, i32 0
  %405 = shufflevector <16 x i8> %404, <16 x i8> undef, <16 x i32> zeroinitializer
  %406 = insertelement <16 x i8> undef, i8 %403, i32 0
  %407 = shufflevector <16 x i8> %406, <16 x i8> undef, <16 x i32> zeroinitializer
  %408 = bitcast i8* %402 to <16 x i8>*
  store <16 x i8> %405, <16 x i8>* %408, align 1, !alias.scope !31, !noalias !28
  %409 = getelementptr i8, i8* %402, i64 16
  %410 = bitcast i8* %409 to <16 x i8>*
  store <16 x i8> %407, <16 x i8>* %410, align 1, !alias.scope !31, !noalias !28
  br label %411

411:                                              ; preds = %398, %401
  %412 = icmp eq i64 %364, %2
  br i1 %412, label %420, label %413

413:                                              ; preds = %411, %358, %350
  %414 = phi i8* [ %354, %358 ], [ %354, %350 ], [ %365, %411 ]
  br label %415

415:                                              ; preds = %413, %415
  %416 = phi i8* [ %418, %415 ], [ %414, %413 ]
  %417 = load i8, i8* %3, align 1
  store i8 %417, i8* %416, align 1
  %418 = getelementptr inbounds i8, i8* %416, i64 1
  %419 = icmp eq i8* %356, %418
  br i1 %419, label %420, label %415, !llvm.loop !34

420:                                              ; preds = %415, %411
  %421 = ptrtoint i8* %355 to i64
  %422 = load i8*, i8** %6, align 8
  %423 = ptrtoint i8* %422 to i64
  %424 = sub i64 %5, %423
  %425 = sub i64 0, %424
  %426 = getelementptr inbounds i8, i8* %354, i64 %425
  %427 = ptrtoint i8* %426 to i64
  %428 = icmp sgt i64 %424, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %420
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %426, i8* align 1 %422, i64 %424, i1 false) #10
  br label %430

430:                                              ; preds = %429, %420
  %431 = load i8*, i8** %12, align 8
  %432 = icmp eq i8* %431, %1
  br i1 %432, label %537, label %433

433:                                              ; preds = %430
  %434 = ptrtoint i8* %431 to i64
  %435 = sub i64 %434, %5
  %436 = icmp ult i64 %435, 32
  br i1 %436, label %527, label %437

437:                                              ; preds = %433
  %438 = add i64 %351, %2
  %439 = sub i64 %438, %5
  %440 = getelementptr i8, i8* %431, i64 %439
  %441 = ptrtoint i8* %440 to i64
  %442 = getelementptr i8, i8* %353, i64 %441
  %443 = icmp ult i8* %356, %431
  %444 = icmp ugt i8* %442, %1
  %445 = and i1 %443, %444
  br i1 %445, label %527, label %446

446:                                              ; preds = %437
  %447 = and i64 %435, -32
  %448 = getelementptr i8, i8* %356, i64 %447
  %449 = getelementptr i8, i8* %1, i64 %447
  %450 = add i64 %447, -32
  %451 = lshr exact i64 %450, 5
  %452 = add nuw nsw i64 %451, 1
  %453 = and i64 %452, 3
  %454 = icmp ult i64 %450, 96
  br i1 %454, label %506, label %455

455:                                              ; preds = %446
  %456 = sub nsw i64 %452, %453
  br label %457

457:                                              ; preds = %457, %455
  %458 = phi i64 [ 0, %455 ], [ %503, %457 ]
  %459 = phi i64 [ %456, %455 ], [ %504, %457 ]
  %460 = getelementptr i8, i8* %356, i64 %458
  %461 = getelementptr i8, i8* %1, i64 %458
  %462 = bitcast i8* %461 to <16 x i8>*
  %463 = load <16 x i8>, <16 x i8>* %462, align 1, !alias.scope !35
  %464 = getelementptr i8, i8* %461, i64 16
  %465 = bitcast i8* %464 to <16 x i8>*
  %466 = load <16 x i8>, <16 x i8>* %465, align 1, !alias.scope !35
  %467 = bitcast i8* %460 to <16 x i8>*
  store <16 x i8> %463, <16 x i8>* %467, align 1, !alias.scope !38, !noalias !35
  %468 = getelementptr i8, i8* %460, i64 16
  %469 = bitcast i8* %468 to <16 x i8>*
  store <16 x i8> %466, <16 x i8>* %469, align 1, !alias.scope !38, !noalias !35
  %470 = or i64 %458, 32
  %471 = getelementptr i8, i8* %356, i64 %470
  %472 = getelementptr i8, i8* %1, i64 %470
  %473 = bitcast i8* %472 to <16 x i8>*
  %474 = load <16 x i8>, <16 x i8>* %473, align 1, !alias.scope !35
  %475 = getelementptr i8, i8* %472, i64 16
  %476 = bitcast i8* %475 to <16 x i8>*
  %477 = load <16 x i8>, <16 x i8>* %476, align 1, !alias.scope !35
  %478 = bitcast i8* %471 to <16 x i8>*
  store <16 x i8> %474, <16 x i8>* %478, align 1, !alias.scope !38, !noalias !35
  %479 = getelementptr i8, i8* %471, i64 16
  %480 = bitcast i8* %479 to <16 x i8>*
  store <16 x i8> %477, <16 x i8>* %480, align 1, !alias.scope !38, !noalias !35
  %481 = or i64 %458, 64
  %482 = getelementptr i8, i8* %356, i64 %481
  %483 = getelementptr i8, i8* %1, i64 %481
  %484 = bitcast i8* %483 to <16 x i8>*
  %485 = load <16 x i8>, <16 x i8>* %484, align 1, !alias.scope !35
  %486 = getelementptr i8, i8* %483, i64 16
  %487 = bitcast i8* %486 to <16 x i8>*
  %488 = load <16 x i8>, <16 x i8>* %487, align 1, !alias.scope !35
  %489 = bitcast i8* %482 to <16 x i8>*
  store <16 x i8> %485, <16 x i8>* %489, align 1, !alias.scope !38, !noalias !35
  %490 = getelementptr i8, i8* %482, i64 16
  %491 = bitcast i8* %490 to <16 x i8>*
  store <16 x i8> %488, <16 x i8>* %491, align 1, !alias.scope !38, !noalias !35
  %492 = or i64 %458, 96
  %493 = getelementptr i8, i8* %356, i64 %492
  %494 = getelementptr i8, i8* %1, i64 %492
  %495 = bitcast i8* %494 to <16 x i8>*
  %496 = load <16 x i8>, <16 x i8>* %495, align 1, !alias.scope !35
  %497 = getelementptr i8, i8* %494, i64 16
  %498 = bitcast i8* %497 to <16 x i8>*
  %499 = load <16 x i8>, <16 x i8>* %498, align 1, !alias.scope !35
  %500 = bitcast i8* %493 to <16 x i8>*
  store <16 x i8> %496, <16 x i8>* %500, align 1, !alias.scope !38, !noalias !35
  %501 = getelementptr i8, i8* %493, i64 16
  %502 = bitcast i8* %501 to <16 x i8>*
  store <16 x i8> %499, <16 x i8>* %502, align 1, !alias.scope !38, !noalias !35
  %503 = add i64 %458, 128
  %504 = add i64 %459, -4
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %506, label %457, !llvm.loop !40

506:                                              ; preds = %457, %446
  %507 = phi i64 [ 0, %446 ], [ %503, %457 ]
  %508 = icmp eq i64 %453, 0
  br i1 %508, label %525, label %509

509:                                              ; preds = %506, %509
  %510 = phi i64 [ %522, %509 ], [ %507, %506 ]
  %511 = phi i64 [ %523, %509 ], [ %453, %506 ]
  %512 = getelementptr i8, i8* %356, i64 %510
  %513 = getelementptr i8, i8* %1, i64 %510
  %514 = bitcast i8* %513 to <16 x i8>*
  %515 = load <16 x i8>, <16 x i8>* %514, align 1, !alias.scope !35
  %516 = getelementptr i8, i8* %513, i64 16
  %517 = bitcast i8* %516 to <16 x i8>*
  %518 = load <16 x i8>, <16 x i8>* %517, align 1, !alias.scope !35
  %519 = bitcast i8* %512 to <16 x i8>*
  store <16 x i8> %515, <16 x i8>* %519, align 1, !alias.scope !38, !noalias !35
  %520 = getelementptr i8, i8* %512, i64 16
  %521 = bitcast i8* %520 to <16 x i8>*
  store <16 x i8> %518, <16 x i8>* %521, align 1, !alias.scope !38, !noalias !35
  %522 = add i64 %510, 32
  %523 = add i64 %511, -1
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %525, label %509, !llvm.loop !41

525:                                              ; preds = %509, %506
  %526 = icmp eq i64 %435, %447
  br i1 %526, label %537, label %527

527:                                              ; preds = %525, %437, %433
  %528 = phi i8* [ %356, %437 ], [ %356, %433 ], [ %448, %525 ]
  %529 = phi i8* [ %1, %437 ], [ %1, %433 ], [ %449, %525 ]
  br label %530

530:                                              ; preds = %527, %530
  %531 = phi i8* [ %535, %530 ], [ %528, %527 ]
  %532 = phi i8* [ %534, %530 ], [ %529, %527 ]
  %533 = load i8, i8* %532, align 1
  store i8 %533, i8* %531, align 1
  %534 = getelementptr inbounds i8, i8* %532, i64 1
  %535 = getelementptr inbounds i8, i8* %531, i64 1
  %536 = icmp eq i8* %534, %431
  br i1 %536, label %537, label %530, !llvm.loop !42

537:                                              ; preds = %530, %525, %430
  %538 = phi i8* [ %356, %430 ], [ %448, %525 ], [ %535, %530 ]
  %539 = ptrtoint i8* %538 to i64
  %540 = load i8*, i8** %6, align 8
  store i64 %427, i64* %328, align 8
  store i64 %539, i64* %327, align 8
  store i64 %421, i64* %10, align 8
  %541 = icmp eq i8* %540, null
  br i1 %541, label %543, label %542

542:                                              ; preds = %537
  tail call void @_ZdlPv(i8* nonnull %540) #12
  br label %543

543:                                              ; preds = %301, %305, %284, %542, %537, %91, %4
  %544 = phi i8* [ %1, %4 ], [ %1, %91 ], [ %354, %537 ], [ %354, %542 ], [ %1, %284 ], [ %1, %305 ], [ %1, %301 ]
  ret i8* %544
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #4

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

declare i32 @_ZN3re24Prog10EmptyFlagsERKNS_11StringPieceEPKc(%"class.re2::StringPiece"* dereferenceable(16), i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { cold nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !9}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !9}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !9}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !9}
!26 = distinct !{!26, !18}
!27 = distinct !{!27, !9}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !9}
!34 = distinct !{!34, !9}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !9}
!41 = distinct !{!41, !18}
!42 = distinct !{!42, !9}
