; ModuleID = 'gen/third_party/blink/public/mojom/webtransport/web_transport_connector.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/webtransport/web_transport_connector.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::WebTransportConnectorAsyncWaiter" = type { %"class.blink::mojom::blink::WebTransportConnector"* }
%"class.blink::mojom::blink::WebTransportConnector" = type { i32 (...)** }
%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting" = type { %"class.blink::mojom::blink::WebTransportConnector" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::InlinedStructPtr"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::WebTransportCertificateFingerprint", i32, [4 x i8] }>
%"class.network::mojom::blink::WebTransportCertificateFingerprint" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }

$_ZN5blink5mojom5blink21WebTransportConnectorD2Ev = comdat any

$_ZN5blink5mojom5blink42WebTransportConnectorInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom5blink42WebTransportConnectorInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::WebTransportConnector"*)* @_ZN5blink5mojom5blink21WebTransportConnectorD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*)* @_ZN5blink5mojom5blink42WebTransportConnectorInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*, %"class.blink::KURL"*, %"class.WTF::Vector"*, %"class.mojo::PendingRemote"*)* @_ZN5blink5mojom5blink42WebTransportConnectorInterceptorForTesting7ConnectERKNS_4KURLEN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink34WebTransportCertificateFingerprintEEELj0ENS6_18PartitionAllocatorEEENS8_13PendingRemoteINSC_27WebTransportHandshakeClientEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink32WebTransportConnectorAsyncWaiterC1EPNS1_21WebTransportConnectorE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::WebTransportConnectorAsyncWaiter"*, %"class.blink::mojom::blink::WebTransportConnector"*), void (%"class.blink::mojom::blink::WebTransportConnectorAsyncWaiter"*, %"class.blink::mojom::blink::WebTransportConnector"*)* @_ZN5blink5mojom5blink32WebTransportConnectorAsyncWaiterC2EPNS1_21WebTransportConnectorE
@_ZN5blink5mojom5blink32WebTransportConnectorAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::WebTransportConnectorAsyncWaiter"*), void (%"class.blink::mojom::blink::WebTransportConnectorAsyncWaiter"*)* @_ZN5blink5mojom5blink32WebTransportConnectorAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink42WebTransportConnectorInterceptorForTesting7ConnectERKNS_4KURLEN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink34WebTransportCertificateFingerprintEEELj0ENS6_18PartitionAllocatorEEENS8_13PendingRemoteINSC_27WebTransportHandshakeClientEEE(%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::Vector"* nocapture, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.mojo::PendingRemote", align 4
  %7 = bitcast %"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"* %0 to %"class.blink::mojom::blink::WebTransportConnector"* (%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::WebTransportConnector"* (%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*)**, %"class.blink::mojom::blink::WebTransportConnector"* (%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::WebTransportConnector"* (%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*)*, %"class.blink::mojom::blink::WebTransportConnector"* (%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*)** %8, i64 3
  %10 = load %"class.blink::mojom::blink::WebTransportConnector"* (%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*)*, %"class.blink::mojom::blink::WebTransportConnector"* (%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::WebTransportConnector"* %10(%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"* %0) #7
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector"* %2 to i64*
  %15 = bitcast %"class.WTF::Vector"* %5 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %6, i64 0, i32 0
  %23 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %22, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %23) #7
  %24 = bitcast %"class.blink::mojom::blink::WebTransportConnector"* %11 to void (%"class.blink::mojom::blink::WebTransportConnector"*, %"class.blink::KURL"*, %"class.WTF::Vector"*, %"class.mojo::PendingRemote"*)***
  %25 = load void (%"class.blink::mojom::blink::WebTransportConnector"*, %"class.blink::KURL"*, %"class.WTF::Vector"*, %"class.mojo::PendingRemote"*)**, void (%"class.blink::mojom::blink::WebTransportConnector"*, %"class.blink::KURL"*, %"class.WTF::Vector"*, %"class.mojo::PendingRemote"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::mojom::blink::WebTransportConnector"*, %"class.blink::KURL"*, %"class.WTF::Vector"*, %"class.mojo::PendingRemote"*)*, void (%"class.blink::mojom::blink::WebTransportConnector"*, %"class.blink::KURL"*, %"class.WTF::Vector"*, %"class.mojo::PendingRemote"*)** %25, i64 2
  %27 = load void (%"class.blink::mojom::blink::WebTransportConnector"*, %"class.blink::KURL"*, %"class.WTF::Vector"*, %"class.mojo::PendingRemote"*)*, void (%"class.blink::mojom::blink::WebTransportConnector"*, %"class.blink::KURL"*, %"class.WTF::Vector"*, %"class.mojo::PendingRemote"*)** %26, align 8
  call void %27(%"class.blink::mojom::blink::WebTransportConnector"* %11, %"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::Vector"* nonnull %5, %"class.mojo::PendingRemote"* nonnull %6) #7
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %22) #7
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %28, align 8
  %30 = icmp eq %"class.mojo::InlinedStructPtr"* %29, null
  br i1 %30, label %48, label %31, !prof !2

31:                                               ; preds = %4
  %32 = bitcast %"class.mojo::InlinedStructPtr"* %29 to i8*
  %33 = load i32, i32* %13, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %46, label %35, !prof !3

35:                                               ; preds = %31
  %36 = zext i32 %33 to i64
  %37 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %29, i64 %36
  br label %38

38:                                               ; preds = %38, %35
  %39 = phi %"class.mojo::InlinedStructPtr"* [ %41, %38 ], [ %29, %35 ]
  %40 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %39, i64 0, i32 0
  call void @_ZN7network5mojom5blink34WebTransportCertificateFingerprintD1Ev(%"class.network::mojom::blink::WebTransportCertificateFingerprint"* %40) #7
  %41 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %39, i64 1
  %42 = icmp eq %"class.mojo::InlinedStructPtr"* %41, %37
  br i1 %42, label %43, label %38

43:                                               ; preds = %38
  store i32 0, i32* %13, align 4
  %44 = bitcast %"class.WTF::Vector"* %5 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %31
  %47 = phi i8* [ %45, %43 ], [ %32, %31 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #7
  store %"class.mojo::InlinedStructPtr"* null, %"class.mojo::InlinedStructPtr"** %28, align 8
  br label %48

48:                                               ; preds = %4, %46
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink32WebTransportConnectorAsyncWaiterC2EPNS1_21WebTransportConnectorE(%"class.blink::mojom::blink::WebTransportConnectorAsyncWaiter"* nocapture, %"class.blink::mojom::blink::WebTransportConnector"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::WebTransportConnectorAsyncWaiter", %"class.blink::mojom::blink::WebTransportConnectorAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::WebTransportConnector"* %1, %"class.blink::mojom::blink::WebTransportConnector"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink32WebTransportConnectorAsyncWaiterD2Ev(%"class.blink::mojom::blink::WebTransportConnectorAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink21WebTransportConnectorD2Ev(%"class.blink::mojom::blink::WebTransportConnector"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink42WebTransportConnectorInterceptorForTestingD0Ev(%"class.blink::mojom::blink::WebTransportConnectorInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink34WebTransportCertificateFingerprintD1Ev(%"class.network::mojom::blink::WebTransportCertificateFingerprint"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
