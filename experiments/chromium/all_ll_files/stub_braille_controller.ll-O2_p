; ModuleID = '../../chrome/browser/extensions/api/braille_display_private/stub_braille_controller.cc'
source_filename = "../../chrome/browser/extensions/api/braille_display_private/stub_braille_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::api::braille_display_private::StubBrailleController" = type { %"class.extensions::api::braille_display_private::BrailleController" }
%"class.extensions::api::braille_display_private::BrailleController" = type { i32 (...)** }
%"struct.extensions::api::braille_display_private::DisplayState" = type { i8, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i8* }
%"class.extensions::api::braille_display_private::BrailleObserver" = type { i32 (...)** }

$_ZN10extensions3api23braille_display_private21StubBrailleControllerD0Ev = comdat any

$_ZN10extensions3api23braille_display_private17BrailleControllerD2Ev = comdat any

$_ZN4base9SingletonIN10extensions3api23braille_display_private21StubBrailleControllerENS_20LeakySingletonTraitsIS4_EES4_E9instance_E = comdat any

@_ZTVN10extensions3api23braille_display_private21StubBrailleControllerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (%"struct.extensions::api::braille_display_private::DisplayState"* (%"class.extensions::api::braille_display_private::StubBrailleController"*)* @_ZN10extensions3api23braille_display_private21StubBrailleController15GetDisplayStateEv to i8*), i8* bitcast (void (%"class.extensions::api::braille_display_private::StubBrailleController"*, %"class.std::__1::vector"*, i32, i32)* @_ZN10extensions3api23braille_display_private21StubBrailleController9WriteDotsERKNSt3__16vectorIhNS3_9allocatorIhEEEEjj to i8*), i8* bitcast (void (%"class.extensions::api::braille_display_private::StubBrailleController"*, %"class.extensions::api::braille_display_private::BrailleObserver"*)* @_ZN10extensions3api23braille_display_private21StubBrailleController11AddObserverEPNS1_15BrailleObserverE to i8*), i8* bitcast (void (%"class.extensions::api::braille_display_private::StubBrailleController"*, %"class.extensions::api::braille_display_private::BrailleObserver"*)* @_ZN10extensions3api23braille_display_private21StubBrailleController14RemoveObserverEPNS1_15BrailleObserverE to i8*), i8* bitcast (void (%"class.extensions::api::braille_display_private::BrailleController"*)* @_ZN10extensions3api23braille_display_private17BrailleControllerD2Ev to i8*), i8* bitcast (void (%"class.extensions::api::braille_display_private::StubBrailleController"*)* @_ZN10extensions3api23braille_display_private21StubBrailleControllerD0Ev to i8*)] }, align 8
@_ZN4base9SingletonIN10extensions3api23braille_display_private21StubBrailleControllerENS_20LeakySingletonTraitsIS4_EES4_E9instance_E = linkonce_odr hidden global i64 0, comdat, align 8

@_ZN10extensions3api23braille_display_private21StubBrailleControllerC1Ev = hidden unnamed_addr alias void (%"class.extensions::api::braille_display_private::StubBrailleController"*), void (%"class.extensions::api::braille_display_private::StubBrailleController"*)* @_ZN10extensions3api23braille_display_private21StubBrailleControllerC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions3api23braille_display_private21StubBrailleControllerC2Ev(%"class.extensions::api::braille_display_private::StubBrailleController"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::api::braille_display_private::StubBrailleController", %"class.extensions::api::braille_display_private::StubBrailleController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions3api23braille_display_private21StubBrailleControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"struct.extensions::api::braille_display_private::DisplayState"* @_ZN10extensions3api23braille_display_private21StubBrailleController15GetDisplayStateEv(%"class.extensions::api::braille_display_private::StubBrailleController"* nocapture readnone) unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #7
  %3 = bitcast i8* %2 to %"struct.extensions::api::braille_display_private::DisplayState"*
  tail call void @_ZN10extensions3api23braille_display_private12DisplayStateC1Ev(%"struct.extensions::api::braille_display_private::DisplayState"* nonnull %3) #8
  ret %"struct.extensions::api::braille_display_private::DisplayState"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions3api23braille_display_private21StubBrailleController9WriteDotsERKNSt3__16vectorIhNS3_9allocatorIhEEEEjj(%"class.extensions::api::braille_display_private::StubBrailleController"* nocapture, %"class.std::__1::vector"* nocapture dereferenceable(24), i32, i32) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions3api23braille_display_private21StubBrailleController11AddObserverEPNS1_15BrailleObserverE(%"class.extensions::api::braille_display_private::StubBrailleController"* nocapture, %"class.extensions::api::braille_display_private::BrailleObserver"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions3api23braille_display_private21StubBrailleController14RemoveObserverEPNS1_15BrailleObserverE(%"class.extensions::api::braille_display_private::StubBrailleController"* nocapture, %"class.extensions::api::braille_display_private::BrailleObserver"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::api::braille_display_private::StubBrailleController"* @_ZN10extensions3api23braille_display_private21StubBrailleController11GetInstanceEv() local_unnamed_addr #1 align 2 {
  %1 = load atomic i64, i64* @_ZN4base9SingletonIN10extensions3api23braille_display_private21StubBrailleControllerENS_20LeakySingletonTraitsIS4_EES4_E9instance_E acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %11, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN10extensions3api23braille_display_private21StubBrailleControllerENS_20LeakySingletonTraitsIS4_EES4_E9instance_E) #8
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 8) #7
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions3api23braille_display_private21StubBrailleControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = ptrtoint i8* %6 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN10extensions3api23braille_display_private21StubBrailleControllerENS_20LeakySingletonTraitsIS4_EES4_E9instance_E, i64 %8, void (i8*)* null, i8* null) #8
  br label %11

9:                                                ; preds = %3
  %10 = load atomic i64, i64* @_ZN4base9SingletonIN10extensions3api23braille_display_private21StubBrailleControllerENS_20LeakySingletonTraitsIS4_EES4_E9instance_E acquire, align 8
  br label %11

11:                                               ; preds = %0, %5, %9
  %12 = phi i64 [ %1, %0 ], [ %8, %5 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.extensions::api::braille_display_private::StubBrailleController"*
  ret %"class.extensions::api::braille_display_private::StubBrailleController"* %13
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions3api23braille_display_private21StubBrailleControllerD0Ev(%"class.extensions::api::braille_display_private::StubBrailleController"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.extensions::api::braille_display_private::StubBrailleController"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions3api23braille_display_private17BrailleControllerD2Ev(%"class.extensions::api::braille_display_private::BrailleController"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN10extensions3api23braille_display_private12DisplayStateC1Ev(%"struct.extensions::api::braille_display_private::DisplayState"*) unnamed_addr #6

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #6

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
