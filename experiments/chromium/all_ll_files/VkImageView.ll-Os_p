; ModuleID = '../../third_party/swiftshader/src/Vulkan/VkImageView.cpp'
source_filename = "../../third_party/swiftshader/src/Vulkan/VkImageView.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"union.vk::Identifier" = type { %struct.anon }
%struct.anon = type { i24 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %class.VkNonDispatchableHandle.0, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%class.VkNonDispatchableHandle.0 = type { i64 }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.vk::ImageView" = type <{ %"class.vk::Image"*, i32, %"class.vk::Format", %struct.VkComponentMapping, %struct.VkImageSubresourceRange, [4 x i8], %"class.vk::SamplerYcbcrConversion"*, %"union.vk::Identifier", [4 x i8] }>
%"class.vk::Image" = type { %"class.vk::DeviceMemory"*, %"class.vk::Device"*, i64, i32, i32, %"class.vk::Format", %struct.VkExtent3D, i32, i32, i32, i32, i32, %"class.vk::Image"*, i32, %"class.marl::mutex", %"class.std::__1::unordered_set" }
%"class.vk::DeviceMemory" = type opaque
%"class.vk::Device" = type opaque
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.marl::mutex" = type { %"class.std::__1::mutex" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.47", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.45" = type <{ %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.46", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.vk::Image::Subresource" }
%"class.vk::Image::Subresource" = type { %struct.VkImageSubresource }
%struct.VkImageSubresource = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { float }
%"class.vk::Format" = type { i32 }
%"class.vk::SamplerYcbcrConversion" = type opaque
%class.VkNonDispatchableHandle = type { i64 }
%class.VkNonDispatchableHandle.1 = type { i64 }
%class.VkNonDispatchableHandle.2 = type { i64 }
%class.VkNonDispatchableHandle.3 = type { i64 }
%class.VkNonDispatchableHandle.4 = type { i64 }
%class.VkNonDispatchableHandle.5 = type { i64 }
%class.VkNonDispatchableHandle.6 = type { i64 }
%class.VkNonDispatchableHandle.7 = type { i64 }
%class.VkNonDispatchableHandle.8 = type { i64 }
%class.VkNonDispatchableHandle.9 = type { i64 }
%class.VkNonDispatchableHandle.10 = type { i64 }
%class.VkNonDispatchableHandle.11 = type { i64 }
%class.VkNonDispatchableHandle.12 = type { i64 }
%class.VkNonDispatchableHandle.13 = type { i64 }
%class.VkNonDispatchableHandle.14 = type { i64 }
%class.VkNonDispatchableHandle.15 = type { i64 }
%class.VkNonDispatchableHandle.16 = type { i64 }
%class.VkNonDispatchableHandle.17 = type { i64 }
%class.VkNonDispatchableHandle.18 = type { i64 }
%class.VkNonDispatchableHandle.19 = type { i64 }
%class.VkNonDispatchableHandle.20 = type { i64 }
%class.VkNonDispatchableHandle.21 = type { i64 }
%class.VkNonDispatchableHandle.22 = type { i64 }
%class.VkNonDispatchableHandle.23 = type { i64 }
%class.VkNonDispatchableHandle.24 = type { i64 }
%class.VkNonDispatchableHandle.25 = type { i64 }
%class.VkNonDispatchableHandle.26 = type { i64 }
%class.VkNonDispatchableHandle.27 = type { i64 }
%class.VkNonDispatchableHandle.28 = type { i64 }
%class.VkNonDispatchableHandle.29 = type { i64 }
%class.VkNonDispatchableHandle.30 = type { i64 }
%class.VkNonDispatchableHandle.31 = type { i64 }
%class.VkNonDispatchableHandle.32 = type { i64 }
%class.VkNonDispatchableHandle.33 = type { i64 }
%class.VkNonDispatchableHandle.34 = type { i64 }
%class.VkNonDispatchableHandle.35 = type { i64 }
%"struct.vk::Identifier::State" = type { i32, i32, %struct.VkComponentMapping }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkSubpassDescriptionDepthStencilResolve = type { i32, i8*, i32, i32, %struct.VkAttachmentReference2* }
%struct.VkAttachmentReference2 = type { i32, i8*, i32, i32, i32 }

$_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm = comdat any

@.str = private unnamed_addr constant [52 x i8] c"%s:%d WARNING: UNREACHABLE: Unexpected viewType %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [57 x i8] c"../../third_party/swiftshader/src/Vulkan/VkImageView.cpp\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"%s:%d WARNING: UNIMPLEMENTED: b/148242443: levelCount != 1\0A\00", align 1
@.str.3 = private unnamed_addr constant [60 x i8] c"%s:%d WARNING: UNIMPLEMENTED: b/148242443: layerCount != 1\0A\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"%s:%d WARNING: UNREACHABLE: usage %d\0A\00", align 1

@_ZN2vk10IdentifierC1EPK21VkImageViewCreateInfo = hidden unnamed_addr alias void (%"union.vk::Identifier"*, %struct.VkImageViewCreateInfo*), void (%"union.vk::Identifier"*, %struct.VkImageViewCreateInfo*)* @_ZN2vk10IdentifierC2EPK21VkImageViewCreateInfo
@_ZN2vk10IdentifierC1E8VkFormat = hidden unnamed_addr alias void (%"union.vk::Identifier"*, i32), void (%"union.vk::Identifier"*, i32)* @_ZN2vk10IdentifierC2E8VkFormat
@_ZN2vk9ImageViewC1EPK21VkImageViewCreateInfoPvPKNS_22SamplerYcbcrConversionE = hidden unnamed_addr alias void (%"class.vk::ImageView"*, %struct.VkImageViewCreateInfo*, i8*, %"class.vk::SamplerYcbcrConversion"*), void (%"class.vk::ImageView"*, %struct.VkImageViewCreateInfo*, i8*, %"class.vk::SamplerYcbcrConversion"*)* @_ZN2vk9ImageViewC2EPK21VkImageViewCreateInfoPvPKNS_22SamplerYcbcrConversionE

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv(%class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm(%class.VkNonDispatchableHandle*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv(%class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.0* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm(%class.VkNonDispatchableHandle.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv(%class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.1* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm(%class.VkNonDispatchableHandle.1*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv(%class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm(%class.VkNonDispatchableHandle.2*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv(%class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.3* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm(%class.VkNonDispatchableHandle.3*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv(%class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.4* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm(%class.VkNonDispatchableHandle.4*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv(%class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.5* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm(%class.VkNonDispatchableHandle.5*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv(%class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.6* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm(%class.VkNonDispatchableHandle.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv(%class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.7* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm(%class.VkNonDispatchableHandle.7*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv(%class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm(%class.VkNonDispatchableHandle.8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv(%class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.9* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm(%class.VkNonDispatchableHandle.9*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv(%class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.10* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm(%class.VkNonDispatchableHandle.10*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv(%class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.11* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm(%class.VkNonDispatchableHandle.11*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv(%class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.12* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm(%class.VkNonDispatchableHandle.12*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv(%class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.13* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm(%class.VkNonDispatchableHandle.13*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv(%class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.14* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm(%class.VkNonDispatchableHandle.14*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv(%class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.15* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm(%class.VkNonDispatchableHandle.15*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv(%class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.16* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm(%class.VkNonDispatchableHandle.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv(%class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.17* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm(%class.VkNonDispatchableHandle.17*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv(%class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.18* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm(%class.VkNonDispatchableHandle.18*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv(%class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.19* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm(%class.VkNonDispatchableHandle.19*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv(%class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.20* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm(%class.VkNonDispatchableHandle.20*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv(%class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.21* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm(%class.VkNonDispatchableHandle.21*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv(%class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.22* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm(%class.VkNonDispatchableHandle.22*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv(%class.VkNonDispatchableHandle.23*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.23* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm(%class.VkNonDispatchableHandle.23*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.23, %class.VkNonDispatchableHandle.23* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv(%class.VkNonDispatchableHandle.24*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.24* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm(%class.VkNonDispatchableHandle.24*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.24, %class.VkNonDispatchableHandle.24* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv(%class.VkNonDispatchableHandle.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.25* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm(%class.VkNonDispatchableHandle.25*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.25, %class.VkNonDispatchableHandle.25* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv(%class.VkNonDispatchableHandle.26*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.26* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm(%class.VkNonDispatchableHandle.26*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.26, %class.VkNonDispatchableHandle.26* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv(%class.VkNonDispatchableHandle.27*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.27* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm(%class.VkNonDispatchableHandle.27*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.27, %class.VkNonDispatchableHandle.27* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv(%class.VkNonDispatchableHandle.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.28* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm(%class.VkNonDispatchableHandle.28*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.28, %class.VkNonDispatchableHandle.28* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv(%class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.29* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm(%class.VkNonDispatchableHandle.29*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv(%class.VkNonDispatchableHandle.30*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.30* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm(%class.VkNonDispatchableHandle.30*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.30, %class.VkNonDispatchableHandle.30* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv(%class.VkNonDispatchableHandle.31*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.31* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm(%class.VkNonDispatchableHandle.31*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.31, %class.VkNonDispatchableHandle.31* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv(%class.VkNonDispatchableHandle.32*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.32* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm(%class.VkNonDispatchableHandle.32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.32, %class.VkNonDispatchableHandle.32* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv(%class.VkNonDispatchableHandle.33*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.33* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm(%class.VkNonDispatchableHandle.33*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.33, %class.VkNonDispatchableHandle.33* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv(%class.VkNonDispatchableHandle.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.34* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm(%class.VkNonDispatchableHandle.34*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.34, %class.VkNonDispatchableHandle.34* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv(%class.VkNonDispatchableHandle.35*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.35* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm(%class.VkNonDispatchableHandle.35*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.35, %class.VkNonDispatchableHandle.35* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden { i64, i64 } @_ZN2vk22ResolveIdentityMappingE18VkComponentMapping(i64, i64) local_unnamed_addr #1 {
  %3 = trunc i64 %0 to i32
  %4 = trunc i64 %1 to i32
  %5 = icmp eq i32 %3, 0
  %6 = icmp ult i64 %0, 4294967296
  %7 = icmp eq i32 %4, 0
  %8 = icmp ult i64 %1, 4294967296
  %9 = and i64 %0, -4294967296
  %10 = select i1 %6, i64 17179869184, i64 %9
  %11 = and i64 %0, 4294967295
  %12 = select i1 %5, i64 3, i64 %11
  %13 = or i64 %12, %10
  %14 = insertvalue { i64, i64 } undef, i64 %13, 0
  %15 = and i64 %1, -4294967296
  %16 = select i1 %8, i64 25769803776, i64 %15
  %17 = and i64 %1, 4294967295
  %18 = select i1 %7, i64 5, i64 %17
  %19 = or i64 %18, %16
  %20 = insertvalue { i64, i64 } %14, i64 %19, 1
  ret { i64, i64 } %20
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i64, i64 } @_ZN2vk23ResolveComponentMappingE18VkComponentMappingNS_6FormatE(i64, i64, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.vk::Format", align 4
  %5 = alloca [7 x i32], align 16
  %6 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %4, i64 0, i32 0
  store i32 %2, i32* %6, align 4
  %7 = trunc i64 %0 to i32
  %8 = trunc i64 %1 to i32
  %9 = icmp eq i32 %7, 0
  %10 = icmp ult i64 %0, 4294967296
  %11 = icmp eq i32 %8, 0
  %12 = icmp ult i64 %1, 4294967296
  %13 = and i64 %0, 4294967295
  %14 = select i1 %9, i64 3, i64 %13
  %15 = and i64 %1, 4294967295
  %16 = select i1 %11, i64 5, i64 %15
  %17 = lshr i64 %0, 32
  %18 = select i1 %10, i64 4, i64 %17
  %19 = lshr i64 %1, 32
  %20 = select i1 %12, i64 6, i64 %19
  %21 = bitcast [7 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %21) #6
  %22 = getelementptr inbounds [7 x i32], [7 x i32]* %5, i64 0, i64 4
  %23 = getelementptr inbounds [7 x i32], [7 x i32]* %5, i64 0, i64 5
  %24 = getelementptr inbounds [7 x i32], [7 x i32]* %5, i64 0, i64 6
  %25 = bitcast [7 x i32]* %5 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, <4 x i32>* %25, align 16
  %26 = call i32 @_ZNK2vk6Format14componentCountEv(%"class.vk::Format"* nonnull %4) #7
  %27 = icmp slt i32 %26, 2
  %28 = select i1 %27, i32 1, i32 4
  store i32 %28, i32* %22, align 16
  %29 = call i32 @_ZNK2vk6Format14componentCountEv(%"class.vk::Format"* nonnull %4) #7
  %30 = icmp slt i32 %29, 3
  %31 = select i1 %30, i32 1, i32 5
  store i32 %31, i32* %23, align 4
  %32 = call i32 @_ZNK2vk6Format14componentCountEv(%"class.vk::Format"* nonnull %4) #7
  %33 = icmp slt i32 %32, 4
  %34 = select i1 %33, i32 2, i32 6
  store i32 %34, i32* %24, align 8
  %35 = getelementptr inbounds [7 x i32], [7 x i32]* %5, i64 0, i64 %14
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds [7 x i32], [7 x i32]* %5, i64 0, i64 %18
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds [7 x i32], [7 x i32]* %5, i64 0, i64 %16
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds [7 x i32], [7 x i32]* %5, i64 0, i64 %20
  %42 = load i32, i32* %41, align 4
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %21) #6
  %43 = zext i32 %38 to i64
  %44 = shl nuw i64 %43, 32
  %45 = zext i32 %36 to i64
  %46 = or i64 %44, %45
  %47 = insertvalue { i64, i64 } undef, i64 %46, 0
  %48 = zext i32 %42 to i64
  %49 = shl nuw i64 %48, 32
  %50 = zext i32 %40 to i64
  %51 = or i64 %49, %50
  %52 = insertvalue { i64, i64 } %47, i64 %51, 1
  ret { i64, i64 } %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format14componentCountEv(%"class.vk::Format"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2vk28ResolveRemainingLevelsLayersE23VkImageSubresourceRangePKNS_5ImageE(%struct.VkImageSubresourceRange* noalias nocapture sret, %struct.VkImageSubresourceRange* nocapture readonly byval(%struct.VkImageSubresourceRange) align 8, %"class.vk::Image"* nocapture readonly) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %0, i64 0, i32 0
  %5 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %0, i64 0, i32 1
  %8 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %0, i64 0, i32 2
  %11 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %18

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %2, i64 0, i32 7
  %16 = load i32, i32* %15, align 8
  %17 = sub i32 %16, %9
  br label %18

18:                                               ; preds = %3, %14
  %19 = phi i32 [ %17, %14 ], [ %12, %3 ]
  store i32 %19, i32* %10, align 4
  %20 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %0, i64 0, i32 3
  %21 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %0, i64 0, i32 4
  %24 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %31

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %2, i64 0, i32 8
  %29 = load i32, i32* %28, align 4
  %30 = sub i32 %29, %22
  br label %31

31:                                               ; preds = %18, %27
  %32 = phi i32 [ %30, %27 ], [ %25, %18 ]
  store i32 %32, i32* %23, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk10IdentifierC2EPK21VkImageViewCreateInfo(%"union.vk::Identifier"* nocapture, %struct.VkImageViewCreateInfo* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.vk::Format", align 4
  %4 = alloca %"class.vk::Format", align 4
  %5 = alloca %"struct.vk::Identifier::State", align 4
  %6 = bitcast %"union.vk::Identifier"* %0 to i32*
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 3, i32 0
  %8 = bitcast i64* %7 to %"class.vk::Image"**
  %9 = load %"class.vk::Image"*, %"class.vk::Image"** %8, align 8
  %10 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 7, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"class.vk::Format"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #6
  %13 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %3, i64 0, i32 0
  store i32 -1431655766, i32* %13, align 4
  %14 = bitcast %"class.vk::Format"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #6
  %15 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %9, i64 0, i32 5, i32 0
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %2, %18
  %22 = phi i32 [ %20, %18 ], [ %16, %2 ]
  %23 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %4, i64 0, i32 0
  store i32 %22, i32* %23, align 4
  %24 = call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* nonnull %4, i32 %11) #7
  store i32 %24, i32* %13, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  %25 = call %"class.vk::Image"* @_ZNK2vk5Image15getSampledImageERKNS_6FormatE(%"class.vk::Image"* %9, %"class.vk::Format"* nonnull dereferenceable(4) %3) #7
  %26 = icmp eq %"class.vk::Image"* %9, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = load i32, i32* %13, align 4
  br label %33

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %25, i64 0, i32 5
  %31 = call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %30, i32 %11) #7
  %32 = load i32, i32* %13, align 4
  br label %33

33:                                               ; preds = %29, %27
  %34 = phi i32 [ %28, %27 ], [ %32, %29 ]
  %35 = phi i32 [ %28, %27 ], [ %31, %29 ]
  %36 = bitcast %"struct.vk::Identifier::State"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #6
  %37 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %5, i64 0, i32 0
  %38 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 4
  %40 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %5, i64 0, i32 1
  store i32 %35, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %5, i64 0, i32 2
  %42 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 6
  %43 = bitcast %struct.VkComponentMapping* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 6, i32 2
  %46 = bitcast i32* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = call { i64, i64 } @_ZN2vk23ResolveComponentMappingE18VkComponentMappingNS_6FormatE(i64 %44, i64 %47, i32 %34) #8
  %49 = bitcast %struct.VkComponentMapping* %41 to i64*
  %50 = extractvalue { i64, i64 } %48, 0
  store i64 %50, i64* %49, align 4
  %51 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %5, i64 0, i32 2, i32 2
  %52 = bitcast i32* %51 to i64*
  %53 = extractvalue { i64, i64 } %48, 1
  store i64 %53, i64* %52, align 4
  call void @_ZN2vk10Identifier4packERKNS0_5StateE(%"union.vk::Identifier"* %0, %"struct.vk::Identifier::State"* nonnull dereferenceable(24) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6
  ret void
}

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"*, i32) local_unnamed_addr #3

; Function Attrs: optsize
declare %"class.vk::Image"* @_ZNK2vk5Image15getSampledImageERKNS_6FormatE(%"class.vk::Image"*, %"class.vk::Format"* dereferenceable(4)) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk10Identifier4packERKNS0_5StateE(%"union.vk::Identifier"* nocapture, %"struct.vk::Identifier::State"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = bitcast %"union.vk::Identifier"* %0 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %4, 7
  %8 = and i32 %6, -8
  %9 = or i32 %8, %7
  store i32 %9, i32* %5, align 4
  %10 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = tail call zeroext i8 @_ZN2vk6Format9mapTo8bitE8VkFormat(i32 %11) #7
  %13 = zext i8 %12 to i32
  %14 = load i32, i32* %5, align 4
  %15 = shl nuw nsw i32 %13, 3
  %16 = and i32 %14, -2041
  %17 = or i32 %16, %15
  store i32 %17, i32* %5, align 4
  %18 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %1, i64 0, i32 2, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = shl i32 %19, 11
  %21 = and i32 %20, 14336
  %22 = and i32 %17, -14337
  %23 = or i32 %21, %22
  store i32 %23, i32* %5, align 4
  %24 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %1, i64 0, i32 2, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = shl i32 %25, 14
  %27 = and i32 %26, 114688
  %28 = and i32 %23, -114689
  %29 = or i32 %28, %27
  store i32 %29, i32* %5, align 4
  %30 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %1, i64 0, i32 2, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = shl i32 %31, 17
  %33 = and i32 %32, 917504
  %34 = and i32 %29, -917505
  %35 = or i32 %34, %33
  store i32 %35, i32* %5, align 4
  %36 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %1, i64 0, i32 2, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = shl i32 %37, 20
  %39 = and i32 %38, 7340032
  %40 = and i32 %35, -7340033
  %41 = or i32 %40, %39
  store i32 %41, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk10IdentifierC2E8VkFormat(%"union.vk::Identifier"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.vk::Identifier::State", align 4
  %4 = bitcast %"union.vk::Identifier"* %0 to i32*
  store i32 0, i32* %4, align 4
  %5 = bitcast %"struct.vk::Identifier::State"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %3, i64 0, i32 0
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %3, i64 0, i32 1
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %3, i64 0, i32 2
  %9 = tail call { i64, i64 } @_ZN2vk23ResolveComponentMappingE18VkComponentMappingNS_6FormatE(i64 17179869187, i64 25769803781, i32 %1) #8
  %10 = bitcast %struct.VkComponentMapping* %8 to i64*
  %11 = extractvalue { i64, i64 } %9, 0
  store i64 %11, i64* %10, align 4
  %12 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %3, i64 0, i32 2, i32 2
  %13 = bitcast i32* %12 to i64*
  %14 = extractvalue { i64, i64 } %9, 1
  store i64 %14, i64* %13, align 4
  call void @_ZN2vk10Identifier4packERKNS0_5StateE(%"union.vk::Identifier"* %0, %"struct.vk::Identifier::State"* nonnull dereferenceable(24) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6
  ret void
}

; Function Attrs: optsize
declare zeroext i8 @_ZN2vk6Format9mapTo8bitE8VkFormat(i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk10Identifier8getStateEv(%"struct.vk::Identifier::State"* noalias nocapture sret, %"union.vk::Identifier"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %0, i64 0, i32 0
  %4 = bitcast %"union.vk::Identifier"* %1 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 7
  store i32 %6, i32* %3, align 4
  %7 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %0, i64 0, i32 1
  %8 = lshr i32 %5, 3
  %9 = trunc i32 %8 to i8
  %10 = tail call i32 @_ZN2vk6Format11mapFrom8bitEh(i8 zeroext %9) #7
  store i32 %10, i32* %7, align 4
  %11 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %0, i64 0, i32 2, i32 0
  %12 = load i32, i32* %4, align 4
  %13 = lshr i32 %12, 11
  %14 = and i32 %13, 7
  store i32 %14, i32* %11, align 4
  %15 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %0, i64 0, i32 2, i32 1
  %16 = lshr i32 %12, 14
  %17 = and i32 %16, 7
  store i32 %17, i32* %15, align 4
  %18 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %0, i64 0, i32 2, i32 2
  %19 = lshr i32 %12, 17
  %20 = and i32 %19, 7
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"struct.vk::Identifier::State", %"struct.vk::Identifier::State"* %0, i64 0, i32 2, i32 3
  %22 = lshr i32 %12, 20
  %23 = and i32 %22, 7
  store i32 %23, i32* %21, align 4
  ret void
}

; Function Attrs: optsize
declare i32 @_ZN2vk6Format11mapFrom8bitEh(i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk9ImageViewC2EPK21VkImageViewCreateInfoPvPKNS_22SamplerYcbcrConversionE(%"class.vk::ImageView"* nocapture, %struct.VkImageViewCreateInfo* nocapture readonly, i8* nocapture readnone, %"class.vk::SamplerYcbcrConversion"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 3, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.vk::ImageView"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 5
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %4
  %16 = bitcast i64* %6 to %"class.vk::Image"**
  %17 = load %"class.vk::Image"*, %"class.vk::Image"** %16, align 8
  %18 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %17, i64 0, i32 5, i32 0
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %4, %15
  %21 = phi i32 [ %19, %15 ], [ %13, %4 ]
  %22 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 2, i32 0
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 6
  %25 = bitcast %struct.VkComponentMapping* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 6, i32 2
  %28 = bitcast i32* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call { i64, i64 } @_ZN2vk23ResolveComponentMappingE18VkComponentMappingNS_6FormatE(i64 %26, i64 %29, i32 %21) #8
  %31 = bitcast %struct.VkComponentMapping* %23 to i64*
  %32 = extractvalue { i64, i64 } %30, 0
  store i64 %32, i64* %31, align 8
  %33 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 3, i32 2
  %34 = bitcast i32* %33 to i64*
  %35 = extractvalue { i64, i64 } %30, 1
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 7, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 7, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 7, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 7, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 7, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = load %"class.vk::Image"*, %"class.vk::Image"** %5, align 8
  %47 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 0
  store i32 %37, i32* %47, align 4, !alias.scope !2
  %48 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  store i32 %39, i32* %48, align 4, !alias.scope !2
  %49 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 2
  %50 = icmp eq i32 %41, -1
  br i1 %50, label %51, label %55

51:                                               ; preds = %20
  %52 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %46, i64 0, i32 7
  %53 = load i32, i32* %52, align 8, !noalias !2
  %54 = sub i32 %53, %39
  br label %55

55:                                               ; preds = %51, %20
  %56 = phi i32 [ %54, %51 ], [ %41, %20 ]
  store i32 %56, i32* %49, align 4, !alias.scope !2
  %57 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 3
  store i32 %43, i32* %57, align 4, !alias.scope !2
  %58 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 4
  %59 = icmp eq i32 %45, -1
  br i1 %59, label %60, label %64

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %46, i64 0, i32 8
  %62 = load i32, i32* %61, align 4, !noalias !2
  %63 = sub i32 %62, %43
  br label %64

64:                                               ; preds = %55, %60
  %65 = phi i32 [ %63, %60 ], [ %45, %55 ]
  store i32 %65, i32* %58, align 4, !alias.scope !2
  %66 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 6
  store %"class.vk::SamplerYcbcrConversion"* %3, %"class.vk::SamplerYcbcrConversion"** %66, align 8
  %67 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 7
  tail call void @_ZN2vk10IdentifierC2EPK21VkImageViewCreateInfo(%"union.vk::Identifier"* %67, %struct.VkImageViewCreateInfo* %1) #8
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i64 @_ZN2vk9ImageView29ComputeRequiredAllocationSizeEPK21VkImageViewCreateInfo(%struct.VkImageViewCreateInfo* nocapture readnone) local_unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2vk9ImageView7destroyEPK21VkAllocationCallbacks(%"class.vk::ImageView"* nocapture, %struct.VkAllocationCallbacks* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk9ImageView15imageTypesMatchE11VkImageType(%"class.vk::ImageView"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %4, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %57 [
    i32 0, label %9
    i32 4, label %15
    i32 1, label %17
    i32 5, label %27
    i32 3, label %33
    i32 6, label %41
    i32 2, label %49
  ]

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %58

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br label %58

15:                                               ; preds = %2
  %16 = icmp eq i32 %1, 0
  br label %58

17:                                               ; preds = %2
  %18 = icmp eq i32 %1, 1
  br i1 %18, label %23, label %19

19:                                               ; preds = %17
  %20 = icmp eq i32 %1, 2
  %21 = icmp eq i32 %6, 1
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %58

23:                                               ; preds = %19, %17
  %24 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1
  br label %58

27:                                               ; preds = %2
  %28 = icmp eq i32 %1, 1
  br i1 %28, label %58, label %29

29:                                               ; preds = %27
  %30 = icmp eq i32 %1, 2
  %31 = icmp eq i32 %6, 1
  %32 = and i1 %30, %31
  br label %58

33:                                               ; preds = %2
  %34 = tail call zeroext i1 @_ZNK2vk5Image6isCubeEv(%"class.vk::Image"* %4) #7
  br i1 %34, label %35, label %58

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 4
  %37 = load i32, i32* %36, align 8
  %38 = icmp uge i32 %6, %37
  %39 = icmp eq i32 %37, 6
  %40 = and i1 %39, %38
  ret i1 %40

41:                                               ; preds = %2
  %42 = tail call zeroext i1 @_ZNK2vk5Image6isCubeEv(%"class.vk::Image"* %4) #7
  br i1 %42, label %43, label %58

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = icmp uge i32 %6, %45
  %47 = icmp ugt i32 %45, 5
  %48 = and i1 %47, %46
  br label %58

49:                                               ; preds = %2
  %50 = icmp eq i32 %1, 2
  %51 = icmp eq i32 %6, 1
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 1
  br label %58

57:                                               ; preds = %2
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 174, i32 %8) #7
  br label %58

58:                                               ; preds = %43, %49, %53, %41, %33, %27, %29, %19, %23, %9, %11, %57, %15
  %59 = phi i1 [ false, %57 ], [ %16, %15 ], [ false, %9 ], [ %14, %11 ], [ false, %19 ], [ %26, %23 ], [ true, %27 ], [ %32, %29 ], [ false, %33 ], [ false, %41 ], [ %48, %43 ], [ false, %49 ], [ %56, %53 ]
  ret i1 %59
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk5Image6isCubeEv(%"class.vk::Image"*) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2sw4warnEPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk9ImageView5clearERK12VkClearValuejRK8VkRect2D(%"class.vk::ImageView"*, %union.VkClearValue* dereferenceable(16), i32, %struct.VkRect2D* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.VkImageSubresourceRange, align 4
  %6 = bitcast %struct.VkImageSubresourceRange* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #6
  %7 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4
  %9 = bitcast %struct.VkImageSubresourceRange* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 8 %9, i64 20, i1 false)
  store i32 %2, i32* %7, align 4
  %10 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %11 = load %"class.vk::Image"*, %"class.vk::Image"** %10, align 8
  %12 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 2
  call void @_ZN2vk5Image5clearERK12VkClearValueRKNS_6FormatERK8VkRect2DRK23VkImageSubresourceRange(%"class.vk::Image"* %11, %union.VkClearValue* dereferenceable(16) %1, %"class.vk::Format"* dereferenceable(4) %12, %struct.VkRect2D* dereferenceable(16) %3, %struct.VkImageSubresourceRange* nonnull dereferenceable(20) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk5Image5clearERK12VkClearValueRKNS_6FormatERK8VkRect2DRK23VkImageSubresourceRange(%"class.vk::Image"*, %union.VkClearValue* dereferenceable(16), %"class.vk::Format"* dereferenceable(4), %struct.VkRect2D* dereferenceable(16), %struct.VkImageSubresourceRange* dereferenceable(20)) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk9ImageView5clearERK12VkClearValuejRK11VkClearRect(%"class.vk::ImageView"*, %union.VkClearValue* dereferenceable(16), i32, %struct.VkClearRect* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.VkImageSubresourceRange, align 4
  %6 = bitcast %struct.VkImageSubresourceRange* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #6
  %7 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %5, i64 0, i32 0
  %8 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %5, i64 0, i32 1
  %9 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %5, i64 0, i32 2
  %10 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %5, i64 0, i32 3
  %11 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %5, i64 0, i32 4
  store i32 %2, i32* %7, align 4
  %12 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %8, align 4
  %14 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 2
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %9, align 4
  %16 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %3, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, %17
  store i32 %20, i32* %10, align 4
  %21 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %3, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %11, align 4
  %23 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %24 = load %"class.vk::Image"*, %"class.vk::Image"** %23, align 8
  %25 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 2
  %26 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %3, i64 0, i32 0
  call void @_ZN2vk5Image5clearERK12VkClearValueRKNS_6FormatERK8VkRect2DRK23VkImageSubresourceRange(%"class.vk::Image"* %24, %union.VkClearValue* dereferenceable(16) %1, %"class.vk::Format"* dereferenceable(4) %25, %struct.VkRect2D* dereferenceable(16) %26, %struct.VkImageSubresourceRange* nonnull dereferenceable(20) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk9ImageView18clearWithLayerMaskERK12VkClearValuejRK8VkRect2Dj(%"class.vk::ImageView"*, %union.VkClearValue* dereferenceable(16), i32, %struct.VkRect2D* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.VkImageSubresourceRange, align 4
  %7 = alloca %struct.VkClearRect, align 4
  %8 = icmp eq i32 %4, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %5
  %10 = bitcast %struct.VkClearRect* %7 to i8*
  %11 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %7, i64 0, i32 1
  %12 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %7, i64 0, i32 2
  %13 = bitcast %struct.VkRect2D* %3 to i8*
  %14 = bitcast %struct.VkImageSubresourceRange* %6 to i8*
  %15 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %6, i64 0, i32 0
  %16 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %6, i64 0, i32 1
  %17 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %6, i64 0, i32 2
  %18 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %6, i64 0, i32 3
  %19 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %6, i64 0, i32 4
  %20 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %21 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 2
  %22 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 3
  %23 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %24 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %7, i64 0, i32 0
  br label %26

26:                                               ; preds = %9, %26
  %27 = phi i32 [ %4, %9 ], [ %32, %26 ]
  %28 = call i32 @llvm.ctlz.i32(i32 %27, i1 true) #6, !range !5
  %29 = xor i32 %28, 31
  %30 = shl i32 1, %29
  %31 = xor i32 %30, -1
  %32 = and i32 %27, %31
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 %13, i64 16, i1 false)
  store i32 1, i32* %12, align 4
  store i32 %29, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %14) #6
  store i32 %2, i32* %15, align 4
  %33 = load i32, i32* %20, align 4
  store i32 %33, i32* %16, align 4
  %34 = load i32, i32* %21, align 8
  store i32 %34, i32* %17, align 4
  %35 = load i32, i32* %22, align 4
  %36 = add i32 %35, %29
  store i32 %36, i32* %18, align 4
  store i32 1, i32* %19, align 4
  %37 = load %"class.vk::Image"*, %"class.vk::Image"** %23, align 8
  call void @_ZN2vk5Image5clearERK12VkClearValueRKNS_6FormatERK8VkRect2DRK23VkImageSubresourceRange(%"class.vk::Image"* %37, %union.VkClearValue* dereferenceable(16) %1, %"class.vk::Format"* dereferenceable(4) %24, %struct.VkRect2D* nonnull dereferenceable(16) %25, %struct.VkImageSubresourceRange* nonnull dereferenceable(20) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6
  %38 = icmp eq i32 %32, 0
  br i1 %38, label %39, label %26

39:                                               ; preds = %26, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk9ImageView7resolveEPS0_i(%"class.vk::ImageView"* nocapture readonly, %"class.vk::ImageView"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkImageResolve, align 4
  %5 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 4, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %13, label %12

12:                                               ; preds = %8, %3
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 225) #7
  br label %13

13:                                               ; preds = %8, %12
  %14 = bitcast %struct.VkImageResolve* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, %2
  %22 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %4, i64 0, i32 0, i32 0
  store i32 %16, i32* %22, align 4
  %23 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %4, i64 0, i32 0, i32 1
  store i32 %18, i32* %23, align 4
  %24 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %4, i64 0, i32 0, i32 2
  store i32 %21, i32* %24, align 4
  %25 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %4, i64 0, i32 0, i32 3
  %26 = bitcast i32* %25 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 0>, <4 x i32>* %26, align 4
  %27 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 4, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 4, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 4, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, %2
  %34 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %4, i64 0, i32 2, i32 0
  store i32 %28, i32* %34, align 4
  %35 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %4, i64 0, i32 2, i32 1
  store i32 %30, i32* %35, align 4
  %36 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %4, i64 0, i32 2, i32 2
  store i32 %33, i32* %36, align 4
  %37 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %4, i64 0, i32 2, i32 3
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 0>, <4 x i32>* %38, align 4
  %39 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %40 = load %"class.vk::Image"*, %"class.vk::Image"** %39, align 8
  %41 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %40, i32 %16, i32 %18) #7
  %42 = extractvalue { i64, i32 } %41, 0
  %43 = extractvalue { i64, i32 } %41, 1
  %44 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %4, i64 0, i32 4
  %45 = bitcast %struct.VkExtent3D* %44 to i64*
  store i64 %42, i64* %45, align 4
  %46 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %4, i64 0, i32 4, i32 2
  store i32 %43, i32* %46, align 4
  %47 = load %"class.vk::Image"*, %"class.vk::Image"** %39, align 8
  %48 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 0
  %49 = load %"class.vk::Image"*, %"class.vk::Image"** %48, align 8
  call void @_ZNK2vk5Image9resolveToEPS0_RK14VkImageResolve(%"class.vk::Image"* %47, %"class.vk::Image"* %49, %struct.VkImageResolve* nonnull dereferenceable(68) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %14) #6
  ret void
}

; Function Attrs: optsize
declare { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"*, i32, i32) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZNK2vk5Image9resolveToEPS0_RK14VkImageResolve(%"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageResolve* dereferenceable(68)) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk9ImageView7resolveEPS0_(%"class.vk::ImageView"* nocapture readonly, %"class.vk::ImageView"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.VkImageResolve, align 4
  %4 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 4, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %12, label %11

11:                                               ; preds = %7, %2
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 253) #7
  br label %12

12:                                               ; preds = %7, %11
  %13 = bitcast %struct.VkImageResolve* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %13) #6
  %14 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 0, i32 0
  store i32 %15, i32* %22, align 4
  %23 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 0, i32 1
  store i32 %17, i32* %23, align 4
  %24 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 0, i32 2
  store i32 %19, i32* %24, align 4
  %25 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 0, i32 3
  store i32 %21, i32* %25, align 4
  %26 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 1, i32 0
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 1, i32 1
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 1, i32 2
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 4, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 4, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 4, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 4, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 2, i32 0
  store i32 %30, i32* %37, align 4
  %38 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 2, i32 1
  store i32 %32, i32* %38, align 4
  %39 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 2, i32 2
  store i32 %34, i32* %39, align 4
  %40 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 2, i32 3
  store i32 %36, i32* %40, align 4
  %41 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 3, i32 0
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 3, i32 1
  store i32 0, i32* %42, align 4
  %43 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 3, i32 2
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %45 = load %"class.vk::Image"*, %"class.vk::Image"** %44, align 8
  %46 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %45, i32 %15, i32 %17) #7
  %47 = extractvalue { i64, i32 } %46, 0
  %48 = extractvalue { i64, i32 } %46, 1
  %49 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 4
  %50 = bitcast %struct.VkExtent3D* %49 to i64*
  store i64 %47, i64* %50, align 4
  %51 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %3, i64 0, i32 4, i32 2
  store i32 %48, i32* %51, align 4
  %52 = load %"class.vk::Image"*, %"class.vk::Image"** %44, align 8
  %53 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 0
  %54 = load %"class.vk::Image"*, %"class.vk::Image"** %53, align 8
  call void @_ZNK2vk5Image9resolveToEPS0_RK14VkImageResolve(%"class.vk::Image"* %52, %"class.vk::Image"* %54, %struct.VkImageResolve* nonnull dereferenceable(68) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %13) #6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk9ImageView20resolveWithLayerMaskEPS0_j(%"class.vk::ImageView"* nocapture readonly, %"class.vk::ImageView"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %11, %5 ], [ %2, %3 ]
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 true) #6, !range !5
  %8 = xor i32 %7, 31
  %9 = shl i32 1, %8
  %10 = xor i32 %9, -1
  %11 = and i32 %6, %10
  tail call void @_ZN2vk9ImageView7resolveEPS0_i(%"class.vk::ImageView"* %0, %"class.vk::ImageView"* %1, i32 %8) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk9ImageView19resolveDepthStencilEPS0_RK39VkSubpassDescriptionDepthStencilResolve(%"class.vk::ImageView"*, %"class.vk::ImageView"*, %struct.VkSubpassDescriptionDepthStencilResolve* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %1, i64 0, i32 4, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %12, label %11

11:                                               ; preds = %7, %3
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 292) #7
  br label %12

12:                                               ; preds = %7, %11
  %13 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %14 = load %"class.vk::Image"*, %"class.vk::Image"** %13, align 8
  tail call void @_ZNK2vk5Image21resolveDepthStencilToEPKNS_9ImageViewEPS1_RK39VkSubpassDescriptionDepthStencilResolve(%"class.vk::Image"* %14, %"class.vk::ImageView"* %0, %"class.vk::ImageView"* %1, %struct.VkSubpassDescriptionDepthStencilResolve* dereferenceable(32) %2) #7
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk5Image21resolveDepthStencilToEPKNS_9ImageViewEPS1_RK39VkSubpassDescriptionDepthStencilResolve(%"class.vk::Image"*, %"class.vk::ImageView"*, %"class.vk::ImageView"*, %struct.VkSubpassDescriptionDepthStencilResolve* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.vk::Image"* @_ZNK2vk9ImageView8getImageENS0_5UsageE(%"class.vk::ImageView"*, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %6
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %5 = load %"class.vk::Image"*, %"class.vk::Image"** %4, align 8
  br label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %8 = load %"class.vk::Image"*, %"class.vk::Image"** %7, align 8
  %9 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 2
  %10 = tail call %"class.vk::Image"* @_ZNK2vk5Image15getSampledImageERKNS_6FormatE(%"class.vk::Image"* %8, %"class.vk::Format"* dereferenceable(4) %9) #7
  br label %12

11:                                               ; preds = %2
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 307, i32 %1) #7
  br label %12

12:                                               ; preds = %11, %6, %3
  %13 = phi %"class.vk::Image"* [ null, %11 ], [ %10, %6 ], [ %5, %3 ]
  ret %"class.vk::Image"* %13
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk9ImageView9getFormatENS0_5UsageE(%"class.vk::ImageView"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.vk::Format", align 4
  %4 = bitcast %"class.vk::Format"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %3, i64 0, i32 0
  store i32 -1431655766, i32* %5, align 4
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = tail call %"class.vk::Image"* @_ZNK2vk9ImageView8getImageENS0_5UsageE(%"class.vk::ImageView"* %0, i32 %1) #8
  %9 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %10 = load %"class.vk::Image"*, %"class.vk::Image"** %9, align 8
  %11 = icmp eq %"class.vk::Image"* %8, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %7, %2
  %13 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 2
  br label %17

14:                                               ; preds = %7
  %15 = tail call %"class.vk::Image"* @_ZNK2vk9ImageView8getImageENS0_5UsageE(%"class.vk::ImageView"* %0, i32 %1) #8
  %16 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %15, i64 0, i32 5
  br label %17

17:                                               ; preds = %14, %12
  %18 = phi %"class.vk::Format"* [ %13, %12 ], [ %16, %14 ]
  %19 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %5, align 4
  %21 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* nonnull %3, i32 %22) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #6
  ret i32 %23
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk9ImageView13rowPitchBytesE21VkImageAspectFlagBitsjNS0_5UsageE(%"class.vk::ImageView"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.vk::Image"* @_ZNK2vk9ImageView8getImageENS0_5UsageE(%"class.vk::ImageView"* %0, i32 %3) #8
  %6 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, %2
  %9 = tail call i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %5, i32 %1, i32 %8) #7
  ret i32 %9
}

; Function Attrs: optsize
declare i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk9ImageView15slicePitchBytesE21VkImageAspectFlagBitsjNS0_5UsageE(%"class.vk::ImageView"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.vk::Image"* @_ZNK2vk9ImageView8getImageENS0_5UsageE(%"class.vk::ImageView"* %0, i32 %3) #8
  %6 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, %2
  %9 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %5, i32 %1, i32 %8) #7
  ret i32 %9
}

; Function Attrs: optsize
declare i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk9ImageView15getMipLevelSizeE21VkImageAspectFlagBitsjNS0_5UsageE(%"class.vk::ImageView"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call %"class.vk::Image"* @_ZNK2vk9ImageView8getImageENS0_5UsageE(%"class.vk::ImageView"* %0, i32 %3) #8
  %6 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, %2
  %9 = tail call i64 @_ZNK2vk5Image15getMipLevelSizeE21VkImageAspectFlagBitsj(%"class.vk::Image"* %5, i32 %1, i32 %8) #7
  %10 = trunc i64 %9 to i32
  ret i32 %10
}

; Function Attrs: optsize
declare i64 @_ZNK2vk5Image15getMipLevelSizeE21VkImageAspectFlagBitsj(%"class.vk::Image"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk9ImageView15layerPitchBytesE21VkImageAspectFlagBitsNS0_5UsageE(%"class.vk::ImageView"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.vk::Image"* @_ZNK2vk9ImageView8getImageENS0_5UsageE(%"class.vk::ImageView"* %0, i32 %2) #8
  %5 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %4, i32 %1) #7
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: optsize
declare i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk9ImageView17getMipLevelExtentEj(%"class.vk::ImageView"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %1
  %10 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %4, i32 %6, i32 %9) #7
  %11 = extractvalue { i64, i32 } %10, 0
  ret i64 %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk9ImageView17getMipLevelExtentEj21VkImageAspectFlagBits(%"class.vk::ImageView"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %5 = load %"class.vk::Image"*, %"class.vk::Image"** %4, align 8
  %6 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, %1
  %9 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %5, i32 %2, i32 %8) #7
  %10 = extractvalue { i64, i32 } %9, 0
  ret i64 %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk9ImageView20getDepthOrLayerCountEj(%"class.vk::ImageView"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 0
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %1
  %10 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %4, i32 %6, i32 %9) #7
  %11 = extractvalue { i64, i32 } %10, 1
  %12 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 1
  %15 = select i1 %14, i32 %13, i32 %11
  %16 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %20 [
    i32 3, label %18
    i32 6, label %18
  ]

18:                                               ; preds = %2, %2
  %19 = sdiv i32 %15, 6
  br label %20

20:                                               ; preds = %2, %18
  %21 = phi i32 [ %19, %18 ], [ %15, %2 ]
  ret i32 %21
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZNK2vk9ImageView16getOffsetPointerERK10VkOffset3D21VkImageAspectFlagBitsjjNS0_5UsageE(%"class.vk::ImageView"*, %struct.VkOffset3D* dereferenceable(12), i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.VkImageSubresource, align 4
  %8 = bitcast %struct.VkImageSubresource* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #6
  %9 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %7, i64 0, i32 0
  %10 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %7, i64 0, i32 1
  %11 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %7, i64 0, i32 2
  store i32 %2, i32* %9, align 4
  %12 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, %3
  store i32 %14, i32* %10, align 4
  %15 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %0, i64 0, i32 4, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, %4
  store i32 %17, i32* %11, align 4
  %18 = tail call %"class.vk::Image"* @_ZNK2vk9ImageView8getImageENS0_5UsageE(%"class.vk::ImageView"* %0, i32 %5) #8
  %19 = call i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %18, %struct.VkOffset3D* dereferenceable(12) %1, %struct.VkImageSubresource* nonnull dereferenceable(12) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #6
  ret i8* %19
}

; Function Attrs: optsize
declare i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"*, %struct.VkOffset3D* dereferenceable(12), %struct.VkImageSubresource* dereferenceable(12)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { nounwind optsize }
attributes #8 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN2vk28ResolveRemainingLevelsLayersE23VkImageSubresourceRangePKNS_5ImageE: argument 0"}
!4 = distinct !{!4, !"_ZN2vk28ResolveRemainingLevelsLayersE23VkImageSubresourceRangePKNS_5ImageE"}
!5 = !{i32 0, i32 33}
