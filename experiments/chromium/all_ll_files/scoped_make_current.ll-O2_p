; ModuleID = '../../ui/gl/scoped_make_current.cc'
source_filename = "../../ui/gl/scoped_make_current.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::ScopedMakeCurrent" = type <{ %class.scoped_refptr, %class.scoped_refptr.63, %class.scoped_refptr, %class.scoped_refptr.63, i8, [7 x i8] }>
%class.scoped_refptr = type { %"class.gl::GLContext"* }
%class.scoped_refptr.63 = type { %"class.gl::GLSurface"* }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.35", %"class.gl::RealGLApi"*, %class.scoped_refptr.41, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type opaque
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.41 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.42", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.42" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { i64 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted.64", %"class.base::SupportsWeakPtr.65" }
%"class.base::RefCounted.64" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.65" = type { %"class.base::internal::WeakReferenceOwner" }

@_ZN2ui17ScopedMakeCurrentC1EPN2gl9GLContextEPNS1_9GLSurfaceE = hidden unnamed_addr alias void (%"class.ui::ScopedMakeCurrent"*, %"class.gl::GLContext"*, %"class.gl::GLSurface"*), void (%"class.ui::ScopedMakeCurrent"*, %"class.gl::GLContext"*, %"class.gl::GLSurface"*)* @_ZN2ui17ScopedMakeCurrentC2EPN2gl9GLContextEPNS1_9GLSurfaceE
@_ZN2ui17ScopedMakeCurrentD1Ev = hidden unnamed_addr alias void (%"class.ui::ScopedMakeCurrent"*), void (%"class.ui::ScopedMakeCurrent"*)* @_ZN2ui17ScopedMakeCurrentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17ScopedMakeCurrentC2EPN2gl9GLContextEPNS1_9GLSurfaceE(%"class.ui::ScopedMakeCurrent"* nocapture, %"class.gl::GLContext"*, %"class.gl::GLSurface"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #2
  %5 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 0, i32 0
  store %"class.gl::GLContext"* %4, %"class.gl::GLContext"** %5, align 8
  %6 = icmp eq %"class.gl::GLContext"* %4, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %4, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #2
  br label %9

9:                                                ; preds = %3, %7
  %10 = tail call %"class.gl::GLSurface"* @_ZN2gl9GLSurface10GetCurrentEv() #2
  %11 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 1, i32 0
  store %"class.gl::GLSurface"* %10, %"class.gl::GLSurface"** %11, align 8
  %12 = icmp eq %"class.gl::GLSurface"* %10, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.gl::GLSurface", %"class.gl::GLSurface"* %10, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #2
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 2, i32 0
  store %"class.gl::GLContext"* %1, %"class.gl::GLContext"** %16, align 8
  %17 = icmp eq %"class.gl::GLContext"* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #2
  br label %20

20:                                               ; preds = %15, %18
  %21 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 3, i32 0
  store %"class.gl::GLSurface"* %2, %"class.gl::GLSurface"** %21, align 8
  %22 = icmp eq %"class.gl::GLSurface"* %2, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.gl::GLSurface", %"class.gl::GLSurface"* %2, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %24) #2
  br label %25

25:                                               ; preds = %20, %23
  %26 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 4
  store i8 0, i8* %26, align 8
  %27 = tail call zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"* %1, %"class.gl::GLSurface"* %2) #2
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 8
  ret void
}

declare %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() local_unnamed_addr #1

declare %"class.gl::GLSurface"* @_ZN2gl9GLSurface10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"*, %"class.gl::GLSurface"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17ScopedMakeCurrentD2Ev(%"class.ui::ScopedMakeCurrent"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %2, align 8
  %4 = icmp eq %"class.gl::GLContext"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %6, align 8
  %8 = tail call zeroext i1 @_ZN2gl9GLContext11MakeCurrentEPNS_9GLSurfaceE(%"class.gl::GLContext"* nonnull %3, %"class.gl::GLSurface"* %7) #2
  br label %18

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 2, i32 0
  %11 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %10, align 8
  %12 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %12, align 8
  %14 = bitcast %"class.gl::GLContext"* %11 to void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %15 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %15, i64 1
  %17 = load void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, void (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %16, align 8
  tail call void %17(%"class.gl::GLContext"* %11, %"class.gl::GLSurface"* %13) #2
  br label %18

18:                                               ; preds = %9, %5
  %19 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 3, i32 0
  %20 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %19, align 8
  %21 = icmp eq %"class.gl::GLSurface"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.gl::GLSurface", %"class.gl::GLSurface"* %20, i64 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCounted.64", %"class.base::RefCounted.64"* %23, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #2
  %25 = getelementptr inbounds %"class.base::RefCounted.64", %"class.base::RefCounted.64"* %23, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.base::RefCounted.64", %"class.base::RefCounted.64"* %23, i64 -2
  %30 = bitcast %"class.base::RefCounted.64"* %29 to %"class.gl::GLSurface"*
  %31 = bitcast %"class.base::RefCounted.64"* %29 to void (%"class.gl::GLSurface"*)***
  %32 = load void (%"class.gl::GLSurface"*)**, void (%"class.gl::GLSurface"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.gl::GLSurface"*)*, void (%"class.gl::GLSurface"*)** %32, i64 62
  %34 = load void (%"class.gl::GLSurface"*)*, void (%"class.gl::GLSurface"*)** %33, align 8
  tail call void %34(%"class.gl::GLSurface"* nonnull %30) #2
  br label %35

35:                                               ; preds = %18, %22, %28
  %36 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 2, i32 0
  %37 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %36, align 8
  %38 = icmp eq %"class.gl::GLContext"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %37, i64 0, i32 1
  %41 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %40, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #2
  %42 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %40, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %52

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %40, i64 -2
  %47 = bitcast %"class.base::RefCounted"* %46 to %"class.gl::GLContext"*
  %48 = bitcast %"class.base::RefCounted"* %46 to void (%"class.gl::GLContext"*)***
  %49 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %49, i64 15
  %51 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %50, align 8
  tail call void %51(%"class.gl::GLContext"* nonnull %47) #2
  br label %52

52:                                               ; preds = %35, %39, %45
  %53 = getelementptr inbounds %"class.ui::ScopedMakeCurrent", %"class.ui::ScopedMakeCurrent"* %0, i64 0, i32 1, i32 0
  %54 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %53, align 8
  %55 = icmp eq %"class.gl::GLSurface"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.gl::GLSurface", %"class.gl::GLSurface"* %54, i64 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCounted.64", %"class.base::RefCounted.64"* %57, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %58) #2
  %59 = getelementptr inbounds %"class.base::RefCounted.64", %"class.base::RefCounted.64"* %57, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %69

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.base::RefCounted.64", %"class.base::RefCounted.64"* %57, i64 -2
  %64 = bitcast %"class.base::RefCounted.64"* %63 to %"class.gl::GLSurface"*
  %65 = bitcast %"class.base::RefCounted.64"* %63 to void (%"class.gl::GLSurface"*)***
  %66 = load void (%"class.gl::GLSurface"*)**, void (%"class.gl::GLSurface"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.gl::GLSurface"*)*, void (%"class.gl::GLSurface"*)** %66, i64 62
  %68 = load void (%"class.gl::GLSurface"*)*, void (%"class.gl::GLSurface"*)** %67, align 8
  tail call void %68(%"class.gl::GLSurface"* nonnull %64) #2
  br label %69

69:                                               ; preds = %52, %56, %62
  %70 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %2, align 8
  %71 = icmp eq %"class.gl::GLContext"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %70, i64 0, i32 1
  %74 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %73, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %74) #2
  %75 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %73, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %73, i64 -2
  %80 = bitcast %"class.base::RefCounted"* %79 to %"class.gl::GLContext"*
  %81 = bitcast %"class.base::RefCounted"* %79 to void (%"class.gl::GLContext"*)***
  %82 = load void (%"class.gl::GLContext"*)**, void (%"class.gl::GLContext"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %82, i64 15
  %84 = load void (%"class.gl::GLContext"*)*, void (%"class.gl::GLContext"*)** %83, align 8
  tail call void %84(%"class.gl::GLContext"* nonnull %80) #2
  br label %85

85:                                               ; preds = %69, %72, %78
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
