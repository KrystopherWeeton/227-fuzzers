; ModuleID = '../../ui/compositor/compositor_lock.cc'
source_filename = "../../ui/compositor/compositor_lock.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::CompositorLockManager" = type { %class.scoped_refptr, %"class.base::TimeTicks", i8, %"class.std::__1::vector", %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"**, %"class.std::__1::__compressed_pair.10" }
%"class.ui::CompositorLock" = type { %"class.ui::CompositorLockClient"*, %"class.std::__1::unique_ptr", %"class.base::WeakPtr.9" }
%"class.ui::CompositorLockClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cc::ScopedDeferMainFrameUpdate"* }
%"class.cc::ScopedDeferMainFrameUpdate" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.2", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.base::WeakPtr.9" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.ui::CompositorLock"** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.21", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"GetCompositorLock\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"../../ui/compositor/compositor_lock.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN2ui21CompositorLockManagerC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEE = hidden unnamed_addr alias void (%"class.ui::CompositorLockManager"*, %"class.base::SingleThreadTaskRunner"*), void (%"class.ui::CompositorLockManager"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN2ui21CompositorLockManagerC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE
@_ZN2ui21CompositorLockManagerD1Ev = hidden unnamed_addr alias void (%"class.ui::CompositorLockManager"*), void (%"class.ui::CompositorLockManager"*)* @_ZN2ui21CompositorLockManagerD2Ev
@_ZN2ui14CompositorLockC1EPNS_20CompositorLockClientEN4base7WeakPtrINS_21CompositorLockManagerEEENSt3__110unique_ptrIN2cc26ScopedDeferMainFrameUpdateENS7_14default_deleteISA_EEEE = hidden unnamed_addr alias void (%"class.ui::CompositorLock"*, %"class.ui::CompositorLockClient"*, %"class.base::WeakPtr.9"*, %"class.cc::ScopedDeferMainFrameUpdate"*), void (%"class.ui::CompositorLock"*, %"class.ui::CompositorLockClient"*, %"class.base::WeakPtr.9"*, %"class.cc::ScopedDeferMainFrameUpdate"*)* @_ZN2ui14CompositorLockC2EPNS_20CompositorLockClientEN4base7WeakPtrINS_21CompositorLockManagerEEENSt3__110unique_ptrIN2cc26ScopedDeferMainFrameUpdateENS7_14default_deleteISA_EEEE
@_ZN2ui14CompositorLockD1Ev = hidden unnamed_addr alias void (%"class.ui::CompositorLock"*), void (%"class.ui::CompositorLock"*)* @_ZN2ui14CompositorLockD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21CompositorLockManagerC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.ui::CompositorLockManager"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SingleThreadTaskRunner"* %1 to i64
  %4 = bitcast %"class.ui::CompositorLockManager"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #9
  %9 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 4, i32 0
  %10 = ptrtoint %"class.ui::CompositorLockManager"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %9, i64 %10) #9
  %11 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %11, i64 %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21CompositorLockManagerD2Ev(%"class.ui::CompositorLockManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #9
  %3 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #9
  %4 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %4, align 8
  %6 = icmp eq %"class.ui::CompositorLock"** %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.ui::CompositorLock"** %5 to i64
  %9 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast %"class.ui::CompositorLock"*** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"class.ui::CompositorLock"** %5 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 0, i32 0
  %14 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %13, align 8
  %15 = icmp eq %"class.base::SingleThreadTaskRunner"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %14, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 -2
  %23 = bitcast %"class.base::RefCountedThreadSafe"* %22 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %23) #9
  br label %24

24:                                               ; preds = %12, %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::CompositorLock"* @_ZN2ui21CompositorLockManager17GetCompositorLockEPNS_20CompositorLockClientEN4base9TimeDeltaENSt3__110unique_ptrIN2cc26ScopedDeferMainFrameUpdateENS5_14default_deleteIS8_EEEE(%"class.ui::CompositorLockManager"*, %"class.ui::CompositorLockClient"*, i64, %"class.cc::ScopedDeferMainFrameUpdate"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::WeakPtr.9", align 8
  %8 = alloca %"class.base::internal::WeakReference", align 8
  %9 = alloca %"class.base::WeakPtr.9", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.base::WeakPtr.9", align 8
  %13 = ptrtoint %"class.cc::ScopedDeferMainFrameUpdate"* %3 to i64
  %14 = ptrtoint %"class.ui::CompositorLockClient"* %1 to i64
  %15 = bitcast %"class.base::WeakPtr.9"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = bitcast %"class.base::internal::WeakReference"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9, !noalias !2
  %17 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 4, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %8, %"class.base::internal::WeakReferenceOwner"* %17) #9, !noalias !2
  %18 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 4, i32 0, i32 1
  %19 = load i64, i64* %18, align 8, !noalias !2
  %20 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %20, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %8, i64 %19) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9, !noalias !2
  %21 = bitcast %"class.base::WeakPtr.9"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  %22 = call i8* @_Znwm(i64 32) #10
  %23 = bitcast i8* %22 to %"class.ui::CompositorLock"*
  %24 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %7, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %24, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %25) #9
  %26 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %7, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %9, i64 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %26, align 8
  %29 = bitcast i8* %22 to i64*
  store i64 %14, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %22, i64 8
  %31 = bitcast i8* %30 to i64*
  store i64 %13, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %22, i64 16
  %33 = bitcast i8* %32 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %33, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %24) #9
  %34 = getelementptr inbounds i8, i8* %22, i64 24
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %26, align 8
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  %38 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 3
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %39, align 8
  %41 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 3, i32 0, i32 1
  %42 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %41, align 8
  %43 = icmp eq %"class.ui::CompositorLock"** %40, %42
  %44 = ptrtoint i8* %22 to i64
  %45 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %46 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %45, align 8
  %47 = icmp ult %"class.ui::CompositorLock"** %42, %46
  %48 = ptrtoint %"class.ui::CompositorLock"** %46 to i64
  %49 = ptrtoint %"class.ui::CompositorLock"** %40 to i64
  br i1 %47, label %50, label %55

50:                                               ; preds = %4
  %51 = bitcast %"class.ui::CompositorLock"** %42 to i64*
  store i64 %44, i64* %51, align 8
  %52 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %42, i64 1
  %53 = ptrtoint %"class.ui::CompositorLock"** %52 to i64
  %54 = bitcast %"class.ui::CompositorLock"*** %41 to i64*
  store i64 %53, i64* %54, align 8
  br label %110

55:                                               ; preds = %4
  %56 = ptrtoint %"class.ui::CompositorLock"** %42 to i64
  %57 = bitcast %"class.ui::CompositorLock"*** %41 to i64*
  %58 = bitcast %"class.std::__1::vector"* %38 to i64*
  %59 = sub i64 %56, %49
  %60 = ashr exact i64 %59, 3
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 2305843009213693951
  br i1 %62, label %63, label %65

63:                                               ; preds = %55
  %64 = bitcast %"class.std::__1::vector"* %38 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %64) #11
  unreachable

65:                                               ; preds = %55
  %66 = bitcast %"class.ui::CompositorLock"*** %45 to i64*
  %67 = sub i64 %48, %49
  %68 = ashr exact i64 %67, 3
  %69 = icmp ult i64 %68, 1152921504606846975
  br i1 %69, label %70, label %78

70:                                               ; preds = %65
  %71 = ashr exact i64 %67, 2
  %72 = icmp ult i64 %71, %61
  %73 = select i1 %72, i64 %61, i64 %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %70
  %76 = icmp ugt i64 %73, 2305843009213693951
  br i1 %76, label %77, label %78

77:                                               ; preds = %75
  call void @abort() #11
  unreachable

78:                                               ; preds = %75, %65
  %79 = phi i64 [ %73, %75 ], [ 2305843009213693951, %65 ]
  %80 = shl i64 %79, 3
  %81 = call i8* @_Znwm(i64 %80) #10
  %82 = bitcast i8* %81 to %"class.ui::CompositorLock"**
  br label %83

83:                                               ; preds = %78, %70
  %84 = phi i64 [ %79, %78 ], [ 0, %70 ]
  %85 = phi %"class.ui::CompositorLock"** [ %82, %78 ], [ null, %70 ]
  %86 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %85, i64 %60
  %87 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %85, i64 %84
  %88 = ptrtoint %"class.ui::CompositorLock"** %87 to i64
  %89 = bitcast %"class.ui::CompositorLock"** %86 to i64*
  store i64 %44, i64* %89, align 8
  %90 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %86, i64 1
  %91 = ptrtoint %"class.ui::CompositorLock"** %90 to i64
  %92 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %39, align 8
  %93 = load i64, i64* %57, align 8
  %94 = ptrtoint %"class.ui::CompositorLock"** %92 to i64
  %95 = sub i64 %93, %94
  %96 = ashr exact i64 %95, 3
  %97 = sub nsw i64 0, %96
  %98 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %86, i64 %97
  %99 = ptrtoint %"class.ui::CompositorLock"** %98 to i64
  %100 = icmp sgt i64 %95, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %83
  %102 = bitcast %"class.ui::CompositorLock"** %98 to i8*
  %103 = bitcast %"class.ui::CompositorLock"** %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 %95, i1 false) #9
  %104 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %39, align 8
  br label %105

105:                                              ; preds = %101, %83
  %106 = phi %"class.ui::CompositorLock"** [ %92, %83 ], [ %104, %101 ]
  store i64 %99, i64* %58, align 8
  store i64 %91, i64* %57, align 8
  store i64 %88, i64* %66, align 8
  %107 = icmp eq %"class.ui::CompositorLock"** %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %105
  %109 = bitcast %"class.ui::CompositorLock"** %106 to i8*
  call void @_ZdlPv(i8* %109) #10
  br label %110

110:                                              ; preds = %50, %105, %108
  br i1 %43, label %117, label %111

111:                                              ; preds = %110
  %112 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 2
  %113 = load i8, i8* %112, align 8, !range !5
  %114 = icmp eq i8 %113, 0
  %115 = icmp eq i64 %2, 0
  %116 = or i1 %115, %114
  br i1 %116, label %171, label %119

117:                                              ; preds = %110
  %118 = icmp eq i64 %2, 0
  br i1 %118, label %171, label %119

119:                                              ; preds = %111, %117
  %120 = call i64 @_ZN4base9TimeTicks3NowEv() #9
  %121 = add i64 %2, -9223372036854775807
  %122 = icmp ult i64 %121, 2
  br i1 %122, label %130, label %123

123:                                              ; preds = %119
  %124 = icmp slt i64 %2, 0
  %125 = select i1 %124, i64 -9223372036854775808, i64 9223372036854775807
  %126 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %120, i64 %2) #9
  %127 = extractvalue { i64, i1 } %126, 1
  %128 = extractvalue { i64, i1 } %126, 0
  %129 = select i1 %127, i64 %125, i64 %128, !prof !6
  br label %138

130:                                              ; preds = %119
  %131 = add i64 %120, -9223372036854775807
  %132 = icmp ugt i64 %131, 1
  %133 = icmp eq i64 %120, %2
  %134 = or i1 %133, %132
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #9
  %137 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #9
  br label %138

138:                                              ; preds = %123, %130, %135
  %139 = phi i64 [ %129, %123 ], [ %2, %130 ], [ %2, %135 ]
  %140 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 1, i32 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = icmp sgt i64 %139, %141
  br i1 %142, label %143, label %171

143:                                              ; preds = %138
  store i64 %139, i64* %140, align 8
  %144 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 5, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %144) #9
  %145 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 0, i32 0
  %146 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %145, align 8
  %147 = bitcast %"class.base::SingleThreadTaskRunner"* %146 to %"class.base::TaskRunner"*
  %148 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %148) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 50) #9
  %149 = bitcast %"class.base::WeakPtr.9"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #9
  %150 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #9, !noalias !7
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %144) #9, !noalias !7
  %151 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 5, i32 0, i32 1
  %152 = load i64, i64* %151, align 8, !noalias !7
  %153 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %12, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %153, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %152) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #9, !noalias !7
  %154 = call i8* @_Znwm(i64 64) #10, !noalias !10
  %155 = bitcast i8* %154 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %155, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #9, !noalias !10
  %156 = getelementptr inbounds i8, i8* %154, i64 32
  %157 = bitcast i8* %156 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.ui::CompositorLockManager"*)* @_ZN2ui21CompositorLockManager12TimeoutLocksEv to i64), i64 0>, <2 x i64>* %157, align 8, !noalias !10
  %158 = getelementptr inbounds i8, i8* %154, i64 48
  %159 = bitcast i8* %158 to %"class.base::internal::WeakReference"*
  %160 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %159, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %160) #9, !noalias !10
  %161 = getelementptr inbounds i8, i8* %154, i64 56
  %162 = bitcast i8* %161 to i64*
  %163 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %12, i64 0, i32 0, i32 1
  %164 = load i64, i64* %163, align 8, !noalias !10
  store i64 %164, i64* %162, align 8, !noalias !10
  %165 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %154, i8** %165, align 8, !alias.scope !10
  %166 = bitcast %"class.base::SingleThreadTaskRunner"* %146 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %167 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %166, align 8
  %168 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %167, align 8
  %169 = call zeroext i1 %168(%"class.base::TaskRunner"* %147, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback"* nonnull %11, i64 %2) #9
  %170 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %170) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %153) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %148) #9
  br label %171

171:                                              ; preds = %111, %117, %143, %138
  ret %"class.ui::CompositorLock"* %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21CompositorLockManager12TimeoutLocksEv(%"class.ui::CompositorLockManager"* nocapture readonly) #0 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #9
  %7 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.ui::CompositorLock"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %40, label %15

15:                                               ; preds = %1
  %16 = icmp ugt i64 %13, 2305843009213693951
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %18) #11
  unreachable

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 %12) #10
  %21 = bitcast i8* %20 to %"class.ui::CompositorLock"**
  %22 = bitcast %"class.ui::CompositorLock"*** %4 to i8**
  store i8* %20, i8** %22, align 8
  %23 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %21, i64 %13
  store %"class.ui::CompositorLock"** %24, %"class.ui::CompositorLock"*** %5, align 8
  %25 = bitcast %"class.ui::CompositorLock"*** %4 to i64*
  %26 = ptrtoint i8* %20 to i64
  %27 = icmp sgt i64 %12, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %19
  %29 = lshr exact i64 %12, 3
  %30 = inttoptr i64 %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %30, i64 %12, i1 false) #9
  %31 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %21, i64 %29
  %32 = ptrtoint %"class.ui::CompositorLock"** %31 to i64
  br label %33

33:                                               ; preds = %19, %28
  %34 = phi i64 [ %32, %28 ], [ %26, %19 ]
  store i64 %34, i64* %25, align 8
  %35 = inttoptr i64 %34 to %"class.ui::CompositorLock"**
  %36 = icmp eq %"class.ui::CompositorLock"** %21, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %41, %33
  %38 = ptrtoint i8* %20 to i64
  %39 = bitcast %"class.ui::CompositorLock"*** %4 to i64*
  store i64 %38, i64* %39, align 8
  tail call void @_ZdlPv(i8* nonnull %20) #10
  br label %40

40:                                               ; preds = %1, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #9
  ret void

41:                                               ; preds = %33, %41
  %42 = phi %"class.ui::CompositorLock"** [ %44, %41 ], [ %21, %33 ]
  %43 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %42, align 8
  tail call void @_ZN2ui14CompositorLock11TimeoutLockEv(%"class.ui::CompositorLock"* %43)
  %44 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %42, i64 1
  %45 = icmp eq %"class.ui::CompositorLock"** %44, %35
  br i1 %45, label %37, label %41
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui21CompositorLockManager20RemoveCompositorLockEPNS_14CompositorLockE(%"class.ui::CompositorLockManager"*, %"class.ui::CompositorLock"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %3, align 8
  %5 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %5, align 8
  %7 = icmp eq %"class.ui::CompositorLock"** %4, %6
  %8 = ptrtoint %"class.ui::CompositorLock"** %6 to i64
  br i1 %7, label %16, label %9

9:                                                ; preds = %2, %13
  %10 = phi %"class.ui::CompositorLock"** [ %14, %13 ], [ %4, %2 ]
  %11 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %10, align 8
  %12 = icmp eq %"class.ui::CompositorLock"* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %10, i64 1
  %15 = icmp eq %"class.ui::CompositorLock"** %14, %6
  br i1 %15, label %72, label %9

16:                                               ; preds = %9, %2
  %17 = phi %"class.ui::CompositorLock"** [ %4, %2 ], [ %10, %9 ]
  %18 = ptrtoint %"class.ui::CompositorLock"** %17 to i64
  %19 = icmp eq %"class.ui::CompositorLock"** %17, %6
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %17, i64 1
  %22 = icmp eq %"class.ui::CompositorLock"** %21, %6
  br i1 %22, label %72, label %23

23:                                               ; preds = %20
  %24 = getelementptr %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %6, i64 -2
  %25 = ptrtoint %"class.ui::CompositorLock"** %24 to i64
  %26 = sub i64 %25, %18
  %27 = lshr i64 %26, 3
  %28 = add nuw nsw i64 %27, 1
  %29 = and i64 %28, 3
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %48, label %31

31:                                               ; preds = %23, %43
  %32 = phi %"class.ui::CompositorLock"** [ %45, %43 ], [ %21, %23 ]
  %33 = phi i64 [ %44, %43 ], [ %18, %23 ]
  %34 = phi i64 [ %46, %43 ], [ %29, %23 ]
  %35 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %32, align 8
  %36 = icmp eq %"class.ui::CompositorLock"* %35, %1
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = ptrtoint %"class.ui::CompositorLock"* %35 to i64
  %39 = inttoptr i64 %33 to %"class.ui::CompositorLock"**
  %40 = inttoptr i64 %33 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %39, i64 1
  %42 = ptrtoint %"class.ui::CompositorLock"** %41 to i64
  br label %43

43:                                               ; preds = %37, %31
  %44 = phi i64 [ %33, %31 ], [ %42, %37 ]
  %45 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %32, i64 1
  %46 = add i64 %34, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %31, !llvm.loop !15

48:                                               ; preds = %43, %23
  %49 = phi i64 [ undef, %23 ], [ %44, %43 ]
  %50 = phi %"class.ui::CompositorLock"** [ %21, %23 ], [ %45, %43 ]
  %51 = phi i64 [ %18, %23 ], [ %44, %43 ]
  %52 = icmp ult i64 %26, 24
  br i1 %52, label %69, label %53

53:                                               ; preds = %48, %114
  %54 = phi %"class.ui::CompositorLock"** [ %116, %114 ], [ %50, %48 ]
  %55 = phi i64 [ %115, %114 ], [ %51, %48 ]
  %56 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %54, align 8
  %57 = icmp eq %"class.ui::CompositorLock"* %56, %1
  br i1 %57, label %64, label %58

58:                                               ; preds = %53
  %59 = ptrtoint %"class.ui::CompositorLock"* %56 to i64
  %60 = inttoptr i64 %55 to %"class.ui::CompositorLock"**
  %61 = inttoptr i64 %55 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %60, i64 1
  %63 = ptrtoint %"class.ui::CompositorLock"** %62 to i64
  br label %64

64:                                               ; preds = %58, %53
  %65 = phi i64 [ %55, %53 ], [ %63, %58 ]
  %66 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %54, i64 1
  %67 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %66, align 8
  %68 = icmp eq %"class.ui::CompositorLock"* %67, %1
  br i1 %68, label %92, label %86

69:                                               ; preds = %114, %48
  %70 = phi i64 [ %49, %48 ], [ %115, %114 ]
  %71 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %5, align 8
  br label %72

72:                                               ; preds = %13, %69, %20, %16
  %73 = phi %"class.ui::CompositorLock"** [ %71, %69 ], [ %6, %16 ], [ %6, %20 ], [ %6, %13 ]
  %74 = phi i64 [ %70, %69 ], [ %18, %16 ], [ %18, %20 ], [ %8, %13 ]
  %75 = inttoptr i64 %74 to %"class.ui::CompositorLock"**
  %76 = icmp eq %"class.ui::CompositorLock"** %73, %75
  br i1 %76, label %78, label %77

77:                                               ; preds = %72
  store %"class.ui::CompositorLock"** %75, %"class.ui::CompositorLock"*** %5, align 8
  br label %78

78:                                               ; preds = %72, %77
  %79 = phi %"class.ui::CompositorLock"** [ %73, %72 ], [ %75, %77 ]
  %80 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %3, align 8
  %81 = icmp eq %"class.ui::CompositorLock"** %80, %79
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %83) #9
  %84 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %84, align 8
  br label %85

85:                                               ; preds = %82, %78
  ret void

86:                                               ; preds = %64
  %87 = ptrtoint %"class.ui::CompositorLock"* %67 to i64
  %88 = inttoptr i64 %65 to %"class.ui::CompositorLock"**
  %89 = inttoptr i64 %65 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %88, i64 1
  %91 = ptrtoint %"class.ui::CompositorLock"** %90 to i64
  br label %92

92:                                               ; preds = %86, %64
  %93 = phi i64 [ %65, %64 ], [ %91, %86 ]
  %94 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %54, i64 2
  %95 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %94, align 8
  %96 = icmp eq %"class.ui::CompositorLock"* %95, %1
  br i1 %96, label %103, label %97

97:                                               ; preds = %92
  %98 = ptrtoint %"class.ui::CompositorLock"* %95 to i64
  %99 = inttoptr i64 %93 to %"class.ui::CompositorLock"**
  %100 = inttoptr i64 %93 to i64*
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %99, i64 1
  %102 = ptrtoint %"class.ui::CompositorLock"** %101 to i64
  br label %103

103:                                              ; preds = %97, %92
  %104 = phi i64 [ %93, %92 ], [ %102, %97 ]
  %105 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %54, i64 3
  %106 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %105, align 8
  %107 = icmp eq %"class.ui::CompositorLock"* %106, %1
  br i1 %107, label %114, label %108

108:                                              ; preds = %103
  %109 = ptrtoint %"class.ui::CompositorLock"* %106 to i64
  %110 = inttoptr i64 %104 to %"class.ui::CompositorLock"**
  %111 = inttoptr i64 %104 to i64*
  store i64 %109, i64* %111, align 8
  %112 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %110, i64 1
  %113 = ptrtoint %"class.ui::CompositorLock"** %112 to i64
  br label %114

114:                                              ; preds = %108, %103
  %115 = phi i64 [ %104, %103 ], [ %113, %108 ]
  %116 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %54, i64 4
  %117 = icmp eq %"class.ui::CompositorLock"** %116, %6
  br i1 %117, label %69, label %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14CompositorLock11TimeoutLockEv(%"class.ui::CompositorLock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::WeakPtr.9", align 8
  %4 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.cc::ScopedDeferMainFrameUpdate"*, %"class.cc::ScopedDeferMainFrameUpdate"** %4, align 8
  store %"class.cc::ScopedDeferMainFrameUpdate"* null, %"class.cc::ScopedDeferMainFrameUpdate"** %4, align 8
  %6 = icmp eq %"class.cc::ScopedDeferMainFrameUpdate"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN2cc26ScopedDeferMainFrameUpdateD1Ev(%"class.cc::ScopedDeferMainFrameUpdate"* nonnull %5) #9
  %8 = bitcast %"class.cc::ScopedDeferMainFrameUpdate"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #10
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %10, i64 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #9
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0)) #9
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %16

16:                                               ; preds = %13, %9
  %17 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #9
  br i1 %17, label %18, label %22

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 2, i32 0, i32 1
  %20 = bitcast i64* %19 to %"class.ui::CompositorLockManager"**
  %21 = load %"class.ui::CompositorLockManager"*, %"class.ui::CompositorLockManager"** %20, align 8
  br label %22

22:                                               ; preds = %16, %18
  %23 = phi %"class.ui::CompositorLockManager"* [ %21, %18 ], [ null, %16 ]
  %24 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %23, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %24, align 8
  %26 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %23, i64 0, i32 3, i32 0, i32 1
  %27 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %26, align 8
  %28 = icmp eq %"class.ui::CompositorLock"** %25, %27
  %29 = ptrtoint %"class.ui::CompositorLock"** %27 to i64
  br i1 %28, label %37, label %30

30:                                               ; preds = %22, %34
  %31 = phi %"class.ui::CompositorLock"** [ %35, %34 ], [ %25, %22 ]
  %32 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %31, align 8
  %33 = icmp eq %"class.ui::CompositorLock"* %32, %0
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %31, i64 1
  %36 = icmp eq %"class.ui::CompositorLock"** %35, %27
  br i1 %36, label %93, label %30

37:                                               ; preds = %30, %22
  %38 = phi %"class.ui::CompositorLock"** [ %25, %22 ], [ %31, %30 ]
  %39 = ptrtoint %"class.ui::CompositorLock"** %38 to i64
  %40 = icmp eq %"class.ui::CompositorLock"** %38, %27
  br i1 %40, label %93, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %38, i64 1
  %43 = icmp eq %"class.ui::CompositorLock"** %42, %27
  br i1 %43, label %93, label %44

44:                                               ; preds = %41
  %45 = getelementptr %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %27, i64 -2
  %46 = ptrtoint %"class.ui::CompositorLock"** %45 to i64
  %47 = sub i64 %46, %39
  %48 = lshr i64 %47, 3
  %49 = add nuw nsw i64 %48, 1
  %50 = and i64 %49, 3
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %69, label %52

52:                                               ; preds = %44, %64
  %53 = phi %"class.ui::CompositorLock"** [ %66, %64 ], [ %42, %44 ]
  %54 = phi i64 [ %65, %64 ], [ %39, %44 ]
  %55 = phi i64 [ %67, %64 ], [ %50, %44 ]
  %56 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %53, align 8
  %57 = icmp eq %"class.ui::CompositorLock"* %56, %0
  br i1 %57, label %64, label %58

58:                                               ; preds = %52
  %59 = ptrtoint %"class.ui::CompositorLock"* %56 to i64
  %60 = inttoptr i64 %54 to %"class.ui::CompositorLock"**
  %61 = inttoptr i64 %54 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %60, i64 1
  %63 = ptrtoint %"class.ui::CompositorLock"** %62 to i64
  br label %64

64:                                               ; preds = %58, %52
  %65 = phi i64 [ %54, %52 ], [ %63, %58 ]
  %66 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %53, i64 1
  %67 = add i64 %55, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %52, !llvm.loop !17

69:                                               ; preds = %64, %44
  %70 = phi i64 [ undef, %44 ], [ %65, %64 ]
  %71 = phi %"class.ui::CompositorLock"** [ %42, %44 ], [ %66, %64 ]
  %72 = phi i64 [ %39, %44 ], [ %65, %64 ]
  %73 = icmp ult i64 %47, 24
  br i1 %73, label %90, label %74

74:                                               ; preds = %69, %163
  %75 = phi %"class.ui::CompositorLock"** [ %165, %163 ], [ %71, %69 ]
  %76 = phi i64 [ %164, %163 ], [ %72, %69 ]
  %77 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %75, align 8
  %78 = icmp eq %"class.ui::CompositorLock"* %77, %0
  br i1 %78, label %85, label %79

79:                                               ; preds = %74
  %80 = ptrtoint %"class.ui::CompositorLock"* %77 to i64
  %81 = inttoptr i64 %76 to %"class.ui::CompositorLock"**
  %82 = inttoptr i64 %76 to i64*
  store i64 %80, i64* %82, align 8
  %83 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %81, i64 1
  %84 = ptrtoint %"class.ui::CompositorLock"** %83 to i64
  br label %85

85:                                               ; preds = %79, %74
  %86 = phi i64 [ %76, %74 ], [ %84, %79 ]
  %87 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %75, i64 1
  %88 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %87, align 8
  %89 = icmp eq %"class.ui::CompositorLock"* %88, %0
  br i1 %89, label %141, label %135

90:                                               ; preds = %163, %69
  %91 = phi i64 [ %70, %69 ], [ %164, %163 ]
  %92 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %26, align 8
  br label %93

93:                                               ; preds = %34, %90, %41, %37
  %94 = phi %"class.ui::CompositorLock"** [ %92, %90 ], [ %27, %37 ], [ %27, %41 ], [ %27, %34 ]
  %95 = phi i64 [ %91, %90 ], [ %39, %37 ], [ %39, %41 ], [ %29, %34 ]
  %96 = inttoptr i64 %95 to %"class.ui::CompositorLock"**
  %97 = icmp eq %"class.ui::CompositorLock"** %94, %96
  br i1 %97, label %99, label %98

98:                                               ; preds = %93
  store %"class.ui::CompositorLock"** %96, %"class.ui::CompositorLock"*** %26, align 8
  br label %99

99:                                               ; preds = %98, %93
  %100 = phi %"class.ui::CompositorLock"** [ %94, %93 ], [ %96, %98 ]
  %101 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %24, align 8
  %102 = icmp eq %"class.ui::CompositorLock"** %101, %100
  br i1 %102, label %103, label %106

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %23, i64 0, i32 5, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %104) #9
  %105 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %23, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %105, align 8
  br label %106

106:                                              ; preds = %99, %103
  %107 = bitcast %"class.base::WeakPtr.9"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #9
  %108 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %108) #9
  %109 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.base::WeakPtr.9"* %3 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %109, align 8
  %112 = bitcast %"class.base::WeakPtr.9"* %10 to i64*
  %113 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %113, align 8
  store i64 %111, i64* %112, align 8
  %115 = icmp eq %"class.base::internal::WeakReference::Flag"* %114, null
  br i1 %115, label %122, label %116

116:                                              ; preds = %106
  %117 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw sub i32* %117, i32 1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %114) #9
  %121 = bitcast %"class.base::internal::WeakReference::Flag"* %114 to i8*
  call void @_ZdlPv(i8* %121) #10
  br label %122

122:                                              ; preds = %106, %116, %120
  %123 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %3, i64 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 %124, i64* %125, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %108) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #9
  %126 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 0
  %127 = load %"class.ui::CompositorLockClient"*, %"class.ui::CompositorLockClient"** %126, align 8
  %128 = icmp eq %"class.ui::CompositorLockClient"* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %122
  %130 = bitcast %"class.ui::CompositorLockClient"* %127 to void (%"class.ui::CompositorLockClient"*)***
  %131 = load void (%"class.ui::CompositorLockClient"*)**, void (%"class.ui::CompositorLockClient"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.ui::CompositorLockClient"*)*, void (%"class.ui::CompositorLockClient"*)** %131, i64 2
  %133 = load void (%"class.ui::CompositorLockClient"*)*, void (%"class.ui::CompositorLockClient"*)** %132, align 8
  call void %133(%"class.ui::CompositorLockClient"* nonnull %127) #9
  br label %134

134:                                              ; preds = %122, %129
  ret void

135:                                              ; preds = %85
  %136 = ptrtoint %"class.ui::CompositorLock"* %88 to i64
  %137 = inttoptr i64 %86 to %"class.ui::CompositorLock"**
  %138 = inttoptr i64 %86 to i64*
  store i64 %136, i64* %138, align 8
  %139 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %137, i64 1
  %140 = ptrtoint %"class.ui::CompositorLock"** %139 to i64
  br label %141

141:                                              ; preds = %135, %85
  %142 = phi i64 [ %86, %85 ], [ %140, %135 ]
  %143 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %75, i64 2
  %144 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %143, align 8
  %145 = icmp eq %"class.ui::CompositorLock"* %144, %0
  br i1 %145, label %152, label %146

146:                                              ; preds = %141
  %147 = ptrtoint %"class.ui::CompositorLock"* %144 to i64
  %148 = inttoptr i64 %142 to %"class.ui::CompositorLock"**
  %149 = inttoptr i64 %142 to i64*
  store i64 %147, i64* %149, align 8
  %150 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %148, i64 1
  %151 = ptrtoint %"class.ui::CompositorLock"** %150 to i64
  br label %152

152:                                              ; preds = %146, %141
  %153 = phi i64 [ %142, %141 ], [ %151, %146 ]
  %154 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %75, i64 3
  %155 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %154, align 8
  %156 = icmp eq %"class.ui::CompositorLock"* %155, %0
  br i1 %156, label %163, label %157

157:                                              ; preds = %152
  %158 = ptrtoint %"class.ui::CompositorLock"* %155 to i64
  %159 = inttoptr i64 %153 to %"class.ui::CompositorLock"**
  %160 = inttoptr i64 %153 to i64*
  store i64 %158, i64* %160, align 8
  %161 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %159, i64 1
  %162 = ptrtoint %"class.ui::CompositorLock"** %161 to i64
  br label %163

163:                                              ; preds = %157, %152
  %164 = phi i64 [ %153, %152 ], [ %162, %157 ]
  %165 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %75, i64 4
  %166 = icmp eq %"class.ui::CompositorLock"** %165, %27
  br i1 %166, label %90, label %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14CompositorLockC2EPNS_20CompositorLockClientEN4base7WeakPtrINS_21CompositorLockManagerEEENSt3__110unique_ptrIN2cc26ScopedDeferMainFrameUpdateENS7_14default_deleteISA_EEEE(%"class.ui::CompositorLock"*, %"class.ui::CompositorLockClient"*, %"class.base::WeakPtr.9"*, %"class.cc::ScopedDeferMainFrameUpdate"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.cc::ScopedDeferMainFrameUpdate"* %3 to i64
  %6 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 0
  store %"class.ui::CompositorLockClient"* %1, %"class.ui::CompositorLockClient"** %6, align 8
  %7 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %9, %"class.base::internal::WeakReference"* dereferenceable(8) %10) #9
  %11 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %2, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14CompositorLockD2Ev(%"class.ui::CompositorLock"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.cc::ScopedDeferMainFrameUpdate"*, %"class.cc::ScopedDeferMainFrameUpdate"** %3, align 8
  store %"class.cc::ScopedDeferMainFrameUpdate"* null, %"class.cc::ScopedDeferMainFrameUpdate"** %3, align 8
  %5 = icmp eq %"class.cc::ScopedDeferMainFrameUpdate"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2cc26ScopedDeferMainFrameUpdateD1Ev(%"class.cc::ScopedDeferMainFrameUpdate"* nonnull %4) #9
  %7 = bitcast %"class.cc::ScopedDeferMainFrameUpdate"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %9, i64 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #9
  br i1 %11, label %12, label %110

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.ui::CompositorLock", %"class.ui::CompositorLock"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast i64* %13 to %"class.ui::CompositorLockManager"**
  %15 = load %"class.ui::CompositorLockManager"*, %"class.ui::CompositorLockManager"** %14, align 8
  %16 = icmp eq %"class.ui::CompositorLockManager"* %15, null
  br i1 %16, label %110, label %17

17:                                               ; preds = %12
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #9
  br i1 %18, label %22, label %19

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %19, %17
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #9
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = load %"class.ui::CompositorLockManager"*, %"class.ui::CompositorLockManager"** %14, align 8
  br label %26

26:                                               ; preds = %22, %24
  %27 = phi %"class.ui::CompositorLockManager"* [ %25, %24 ], [ null, %22 ]
  %28 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %27, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %28, align 8
  %30 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %27, i64 0, i32 3, i32 0, i32 1
  %31 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %30, align 8
  %32 = icmp eq %"class.ui::CompositorLock"** %29, %31
  %33 = ptrtoint %"class.ui::CompositorLock"** %31 to i64
  br i1 %32, label %41, label %34

34:                                               ; preds = %26, %38
  %35 = phi %"class.ui::CompositorLock"** [ %39, %38 ], [ %29, %26 ]
  %36 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %35, align 8
  %37 = icmp eq %"class.ui::CompositorLock"* %36, %0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %35, i64 1
  %40 = icmp eq %"class.ui::CompositorLock"** %39, %31
  br i1 %40, label %97, label %34

41:                                               ; preds = %34, %26
  %42 = phi %"class.ui::CompositorLock"** [ %29, %26 ], [ %35, %34 ]
  %43 = ptrtoint %"class.ui::CompositorLock"** %42 to i64
  %44 = icmp eq %"class.ui::CompositorLock"** %42, %31
  br i1 %44, label %97, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %42, i64 1
  %47 = icmp eq %"class.ui::CompositorLock"** %46, %31
  br i1 %47, label %97, label %48

48:                                               ; preds = %45
  %49 = getelementptr %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %31, i64 -2
  %50 = ptrtoint %"class.ui::CompositorLock"** %49 to i64
  %51 = sub i64 %50, %43
  %52 = lshr i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 3
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %73, label %56

56:                                               ; preds = %48, %68
  %57 = phi %"class.ui::CompositorLock"** [ %70, %68 ], [ %46, %48 ]
  %58 = phi i64 [ %69, %68 ], [ %43, %48 ]
  %59 = phi i64 [ %71, %68 ], [ %54, %48 ]
  %60 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %57, align 8
  %61 = icmp eq %"class.ui::CompositorLock"* %60, %0
  br i1 %61, label %68, label %62

62:                                               ; preds = %56
  %63 = ptrtoint %"class.ui::CompositorLock"* %60 to i64
  %64 = inttoptr i64 %58 to %"class.ui::CompositorLock"**
  %65 = inttoptr i64 %58 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %64, i64 1
  %67 = ptrtoint %"class.ui::CompositorLock"** %66 to i64
  br label %68

68:                                               ; preds = %62, %56
  %69 = phi i64 [ %58, %56 ], [ %67, %62 ]
  %70 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %57, i64 1
  %71 = add i64 %59, -1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %56, !llvm.loop !18

73:                                               ; preds = %68, %48
  %74 = phi i64 [ undef, %48 ], [ %69, %68 ]
  %75 = phi %"class.ui::CompositorLock"** [ %46, %48 ], [ %70, %68 ]
  %76 = phi i64 [ %43, %48 ], [ %69, %68 ]
  %77 = icmp ult i64 %51, 24
  br i1 %77, label %94, label %78

78:                                               ; preds = %73, %145
  %79 = phi %"class.ui::CompositorLock"** [ %147, %145 ], [ %75, %73 ]
  %80 = phi i64 [ %146, %145 ], [ %76, %73 ]
  %81 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %79, align 8
  %82 = icmp eq %"class.ui::CompositorLock"* %81, %0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = ptrtoint %"class.ui::CompositorLock"* %81 to i64
  %85 = inttoptr i64 %80 to %"class.ui::CompositorLock"**
  %86 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %86, align 8
  %87 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %85, i64 1
  %88 = ptrtoint %"class.ui::CompositorLock"** %87 to i64
  br label %89

89:                                               ; preds = %83, %78
  %90 = phi i64 [ %80, %78 ], [ %88, %83 ]
  %91 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %79, i64 1
  %92 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %91, align 8
  %93 = icmp eq %"class.ui::CompositorLock"* %92, %0
  br i1 %93, label %123, label %117

94:                                               ; preds = %145, %73
  %95 = phi i64 [ %74, %73 ], [ %146, %145 ]
  %96 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %30, align 8
  br label %97

97:                                               ; preds = %38, %94, %45, %41
  %98 = phi %"class.ui::CompositorLock"** [ %96, %94 ], [ %31, %41 ], [ %31, %45 ], [ %31, %38 ]
  %99 = phi i64 [ %95, %94 ], [ %43, %41 ], [ %43, %45 ], [ %33, %38 ]
  %100 = inttoptr i64 %99 to %"class.ui::CompositorLock"**
  %101 = icmp eq %"class.ui::CompositorLock"** %98, %100
  br i1 %101, label %103, label %102

102:                                              ; preds = %97
  store %"class.ui::CompositorLock"** %100, %"class.ui::CompositorLock"*** %30, align 8
  br label %103

103:                                              ; preds = %102, %97
  %104 = phi %"class.ui::CompositorLock"** [ %98, %97 ], [ %100, %102 ]
  %105 = load %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"*** %28, align 8
  %106 = icmp eq %"class.ui::CompositorLock"** %105, %104
  br i1 %106, label %107, label %110

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %27, i64 0, i32 5, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %108) #9
  %109 = getelementptr inbounds %"class.ui::CompositorLockManager", %"class.ui::CompositorLockManager"* %27, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %109, align 8
  br label %110

110:                                              ; preds = %12, %8, %107, %103
  %111 = getelementptr inbounds %"class.base::WeakPtr.9", %"class.base::WeakPtr.9"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %111) #9
  %112 = load %"class.cc::ScopedDeferMainFrameUpdate"*, %"class.cc::ScopedDeferMainFrameUpdate"** %3, align 8
  store %"class.cc::ScopedDeferMainFrameUpdate"* null, %"class.cc::ScopedDeferMainFrameUpdate"** %3, align 8
  %113 = icmp eq %"class.cc::ScopedDeferMainFrameUpdate"* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %110
  call void @_ZN2cc26ScopedDeferMainFrameUpdateD1Ev(%"class.cc::ScopedDeferMainFrameUpdate"* nonnull %112) #9
  %115 = bitcast %"class.cc::ScopedDeferMainFrameUpdate"* %112 to i8*
  call void @_ZdlPv(i8* %115) #10
  br label %116

116:                                              ; preds = %110, %114
  ret void

117:                                              ; preds = %89
  %118 = ptrtoint %"class.ui::CompositorLock"* %92 to i64
  %119 = inttoptr i64 %90 to %"class.ui::CompositorLock"**
  %120 = inttoptr i64 %90 to i64*
  store i64 %118, i64* %120, align 8
  %121 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %119, i64 1
  %122 = ptrtoint %"class.ui::CompositorLock"** %121 to i64
  br label %123

123:                                              ; preds = %117, %89
  %124 = phi i64 [ %90, %89 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %79, i64 2
  %126 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %125, align 8
  %127 = icmp eq %"class.ui::CompositorLock"* %126, %0
  br i1 %127, label %134, label %128

128:                                              ; preds = %123
  %129 = ptrtoint %"class.ui::CompositorLock"* %126 to i64
  %130 = inttoptr i64 %124 to %"class.ui::CompositorLock"**
  %131 = inttoptr i64 %124 to i64*
  store i64 %129, i64* %131, align 8
  %132 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %130, i64 1
  %133 = ptrtoint %"class.ui::CompositorLock"** %132 to i64
  br label %134

134:                                              ; preds = %128, %123
  %135 = phi i64 [ %124, %123 ], [ %133, %128 ]
  %136 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %79, i64 3
  %137 = load %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %136, align 8
  %138 = icmp eq %"class.ui::CompositorLock"* %137, %0
  br i1 %138, label %145, label %139

139:                                              ; preds = %134
  %140 = ptrtoint %"class.ui::CompositorLock"* %137 to i64
  %141 = inttoptr i64 %135 to %"class.ui::CompositorLock"**
  %142 = inttoptr i64 %135 to i64*
  store i64 %140, i64* %142, align 8
  %143 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %141, i64 1
  %144 = ptrtoint %"class.ui::CompositorLock"** %143 to i64
  br label %145

145:                                              ; preds = %139, %134
  %146 = phi i64 [ %135, %134 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.ui::CompositorLock"*, %"class.ui::CompositorLock"** %79, i64 4
  %148 = icmp eq %"class.ui::CompositorLock"** %147, %31
  br i1 %148, label %94, label %78
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc26ScopedDeferMainFrameUpdateD1Ev(%"class.cc::ScopedDeferMainFrameUpdate"*) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.ui::CompositorLockManager"**
  %10 = load %"class.ui::CompositorLockManager"*, %"class.ui::CompositorLockManager"** %9, align 8
  %11 = icmp eq %"class.ui::CompositorLockManager"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.ui::CompositorLockManager"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.ui::CompositorLockManager"*)**
  %37 = load void (%"class.ui::CompositorLockManager"*)*, void (%"class.ui::CompositorLockManager"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.ui::CompositorLockManager"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.ui::CompositorLockManager"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.ui::CompositorLockManager"* %28) #9
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.ui::CompositorLockManager"**
  %9 = load %"class.ui::CompositorLockManager"*, %"class.ui::CompositorLockManager"** %8, align 8
  %10 = icmp ne %"class.ui::CompositorLockManager"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN2ui21CompositorLockManagerEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN2ui21CompositorLockManagerEE10GetWeakPtrEv"}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base14WeakPtrFactoryIN2ui21CompositorLockManagerEE10GetWeakPtrEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base14WeakPtrFactoryIN2ui21CompositorLockManagerEE10GetWeakPtrEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIMN2ui21CompositorLockManagerEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !16}
