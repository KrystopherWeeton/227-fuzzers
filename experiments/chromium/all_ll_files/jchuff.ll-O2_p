; ModuleID = '../../third_party/libjpeg_turbo/jchuff.c'
source_filename = "../../third_party/libjpeg_turbo/jchuff.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_compress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_destination_mgr*, i32, i32, i32, i32, double, i32, i32, i32, %struct.jpeg_component_info*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], [16 x i8], [16 x i8], [16 x i8], i32, %struct.jpeg_scan_info*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, %struct.jpeg_comp_master*, %struct.jpeg_c_main_controller*, %struct.jpeg_c_prep_controller*, %struct.jpeg_c_coef_controller*, %struct.jpeg_marker_writer*, %struct.jpeg_color_converter*, %struct.jpeg_downsampler*, %struct.jpeg_forward_dct*, %struct.jpeg_entropy_encoder*, %struct.jpeg_scan_info*, i32 }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_destination_mgr = type { i8*, i64, void (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_comp_master = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, i32, i32 }
%struct.jpeg_c_main_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32)* }
%struct.jpeg_c_prep_controller = type { void (%struct.jpeg_compress_struct*, i32)*, void (%struct.jpeg_compress_struct*, i8**, i32*, i32, i8***, i32*, i32)* }
%struct.jpeg_c_coef_controller = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, i8***)* }
%struct.jpeg_marker_writer = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i32, i32)*, void (%struct.jpeg_compress_struct*, i32)* }
%struct.jpeg_color_converter = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8**, i8***, i32, i32)* }
%struct.jpeg_downsampler = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, i8***, i32, i8***, i32)*, i32 }
%struct.jpeg_forward_dct = type { void (%struct.jpeg_compress_struct*)*, void (%struct.jpeg_compress_struct*, %struct.jpeg_component_info*, i8**, [64 x i16]*, i32, i32, i32)* }
%struct.jpeg_entropy_encoder = type { void (%struct.jpeg_compress_struct*, i32)*, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)*, void (%struct.jpeg_compress_struct*)* }
%struct.jpeg_scan_info = type { i32, [4 x i32], i32, i32, i32, i32 }
%struct.c_derived_tbl = type { [256 x i32], [256 x i8] }
%struct.huff_entropy_encoder = type { %struct.jpeg_entropy_encoder, %struct.savable_state, i32, i32, [4 x %struct.c_derived_tbl*], [4 x %struct.c_derived_tbl*], [4 x i64*], [4 x i64*], i32 }
%struct.savable_state = type { %union.anon.0, i32, [4 x i32] }
%union.anon.0 = type { i64 }
%struct.working_state = type { i8*, i64, %struct.savable_state, %struct.jpeg_compress_struct*, i32 }

@jpeg_natural_order = external local_unnamed_addr constant [0 x i32], align 4
@jpeg_nbits_table = external local_unnamed_addr constant [65536 x i8], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct*, i32, i32, %struct.c_derived_tbl** nocapture) local_unnamed_addr #0 {
  %5 = alloca [257 x i8], align 16
  %6 = alloca [257 x i32], align 16
  %7 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 257, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 257, i1 false)
  %8 = bitcast [257 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1028, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1028, i1 false)
  %9 = icmp ugt i32 %2, 3
  br i1 %9, label %10, label %20

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 5
  store i32 50, i32* %13, align 8
  %14 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8
  %15 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %14, i64 0, i32 6, i32 0, i64 0
  store i32 %2, i32* %15, align 4
  %16 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %11, align 8
  %17 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %16, i64 0, i32 0
  %18 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %17, align 8
  %19 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %18(%struct.jpeg_common_struct* %19) #4
  br label %20

20:                                               ; preds = %4, %10
  %21 = icmp ne i32 %1, 0
  %22 = sext i32 %2 to i64
  %23 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 %22
  %24 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 %22
  %25 = select i1 %21, %struct.JHUFF_TBL** %23, %struct.JHUFF_TBL** %24
  %26 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %25, align 8
  %27 = icmp eq %struct.JHUFF_TBL* %26, null
  br i1 %27, label %28, label %38

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %30 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8
  %31 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %30, i64 0, i32 5
  store i32 50, i32* %31, align 8
  %32 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8
  %33 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %32, i64 0, i32 6, i32 0, i64 0
  store i32 %2, i32* %33, align 4
  %34 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %29, align 8
  %35 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %34, i64 0, i32 0
  %36 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %35, align 8
  %37 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %36(%struct.jpeg_common_struct* %37) #4
  br label %38

38:                                               ; preds = %28, %20
  %39 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %3, align 8
  %40 = icmp eq %struct.c_derived_tbl* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %52

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %45 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %45, i64 0, i32 0
  %47 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %46, align 8
  %48 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %49 = tail call i8* %47(%struct.jpeg_common_struct* %48, i32 1, i64 1280) #4
  %50 = bitcast %struct.c_derived_tbl** %3 to i8**
  store i8* %49, i8** %50, align 8
  %51 = bitcast i8* %49 to %struct.c_derived_tbl*
  br label %52

52:                                               ; preds = %41, %43
  %53 = phi %struct.jpeg_common_struct* [ %42, %41 ], [ %48, %43 ]
  %54 = phi %struct.c_derived_tbl* [ %39, %41 ], [ %51, %43 ]
  %55 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  br label %56

56:                                               ; preds = %133, %52
  %57 = phi i64 [ 1, %52 ], [ %135, %133 ]
  %58 = phi i32 [ 1, %52 ], [ %136, %133 ]
  %59 = phi i32 [ 0, %52 ], [ %134, %133 ]
  %60 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %26, i64 0, i32 0, i64 %57
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = add nsw i32 %59, %62
  %64 = icmp sgt i32 %63, 256
  br i1 %64, label %65, label %71

65:                                               ; preds = %56
  %66 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %67 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %66, i64 0, i32 5
  store i32 8, i32* %67, align 8
  %68 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %69 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %68, i64 0, i32 0
  %70 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %69, align 8
  tail call void %70(%struct.jpeg_common_struct* %53) #4
  br label %71

71:                                               ; preds = %65, %56
  %72 = icmp eq i8 %61, 0
  br i1 %72, label %133, label %73

73:                                               ; preds = %71
  %74 = trunc i32 %58 to i8
  %75 = sext i32 %59 to i64
  %76 = getelementptr [257 x i8], [257 x i8]* %5, i64 0, i64 %75
  %77 = zext i8 %61 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %76, i8 %74, i64 %77, i1 false)
  %78 = zext i8 %61 to i32
  %79 = icmp ult i8 %61, 4
  br i1 %79, label %121, label %80

80:                                               ; preds = %73
  %81 = and i32 %78, 252
  %82 = sub nsw i32 %62, %81
  %83 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %75, i32 0
  %84 = add nsw i32 %81, -4
  %85 = lshr exact i32 %84, 2
  %86 = add nuw nsw i32 %85, 1
  %87 = and i32 %86, 7
  %88 = icmp ult i32 %84, 28
  br i1 %88, label %99, label %89

89:                                               ; preds = %80
  %90 = sub nsw i32 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi <2 x i64> [ %83, %89 ], [ %95, %91 ]
  %93 = phi <2 x i64> [ zeroinitializer, %89 ], [ %96, %91 ]
  %94 = phi i32 [ %90, %89 ], [ %97, %91 ]
  %95 = add nsw <2 x i64> %92, <i64 8, i64 8>
  %96 = add nuw nsw <2 x i64> %93, <i64 8, i64 8>
  %97 = add i32 %94, -8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %91, !llvm.loop !2

99:                                               ; preds = %91, %80
  %100 = phi <2 x i64> [ undef, %80 ], [ %95, %91 ]
  %101 = phi <2 x i64> [ undef, %80 ], [ %96, %91 ]
  %102 = phi <2 x i64> [ %83, %80 ], [ %95, %91 ]
  %103 = phi <2 x i64> [ zeroinitializer, %80 ], [ %96, %91 ]
  %104 = icmp eq i32 %87, 0
  br i1 %104, label %113, label %105

105:                                              ; preds = %99, %105
  %106 = phi <2 x i64> [ %109, %105 ], [ %102, %99 ]
  %107 = phi <2 x i64> [ %110, %105 ], [ %103, %99 ]
  %108 = phi i32 [ %111, %105 ], [ %87, %99 ]
  %109 = add nsw <2 x i64> %106, <i64 1, i64 1>
  %110 = add nuw nsw <2 x i64> %107, <i64 1, i64 1>
  %111 = add i32 %108, -1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %105, !llvm.loop !4

113:                                              ; preds = %105, %99
  %114 = phi <2 x i64> [ %100, %99 ], [ %109, %105 ]
  %115 = phi <2 x i64> [ %101, %99 ], [ %110, %105 ]
  %116 = add <2 x i64> %115, %114
  %117 = shufflevector <2 x i64> %116, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %118 = add <2 x i64> %116, %117
  %119 = extractelement <2 x i64> %118, i32 0
  %120 = icmp eq i32 %81, %78
  br i1 %120, label %130, label %121

121:                                              ; preds = %113, %73
  %122 = phi i64 [ %75, %73 ], [ %119, %113 ]
  %123 = phi i32 [ %62, %73 ], [ %82, %113 ]
  br label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %128, %124 ], [ %122, %121 ]
  %126 = phi i32 [ %127, %124 ], [ %123, %121 ]
  %127 = add nsw i32 %126, -1
  %128 = add nsw i64 %125, 1
  %129 = icmp eq i32 %127, 0
  br i1 %129, label %130, label %124, !llvm.loop !6

130:                                              ; preds = %124, %113
  %131 = phi i64 [ %119, %113 ], [ %128, %124 ]
  %132 = trunc i64 %131 to i32
  br label %133

133:                                              ; preds = %130, %71
  %134 = phi i32 [ %59, %71 ], [ %132, %130 ]
  %135 = add nuw nsw i64 %57, 1
  %136 = add nuw nsw i32 %58, 1
  %137 = icmp eq i64 %135, 17
  br i1 %137, label %138, label %56

138:                                              ; preds = %133
  %139 = sext i32 %134 to i64
  %140 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 %139
  store i8 0, i8* %140, align 1
  %141 = load i8, i8* %7, align 16
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %186, label %143

143:                                              ; preds = %138
  %144 = sext i8 %141 to i32
  br label %145

145:                                              ; preds = %143, %179
  %146 = phi i8 [ %141, %143 ], [ %184, %179 ]
  %147 = phi i32 [ 0, %143 ], [ %180, %179 ]
  %148 = phi i32 [ %144, %143 ], [ %181, %179 ]
  %149 = phi i32 [ 0, %143 ], [ %167, %179 ]
  %150 = sext i8 %146 to i32
  %151 = icmp eq i32 %148, %150
  br i1 %151, label %152, label %166

152:                                              ; preds = %145
  %153 = sext i32 %149 to i64
  br label %154

154:                                              ; preds = %152, %154
  %155 = phi i64 [ %153, %152 ], [ %157, %154 ]
  %156 = phi i32 [ %147, %152 ], [ %159, %154 ]
  %157 = add nsw i64 %155, 1
  %158 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %155
  store i32 %156, i32* %158, align 4
  %159 = add i32 %156, 1
  %160 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 %157
  %161 = load i8, i8* %160, align 1
  %162 = sext i8 %161 to i32
  %163 = icmp eq i32 %148, %162
  br i1 %163, label %154, label %164

164:                                              ; preds = %154
  %165 = trunc i64 %157 to i32
  br label %166

166:                                              ; preds = %164, %145
  %167 = phi i32 [ %149, %145 ], [ %165, %164 ]
  %168 = phi i32 [ %147, %145 ], [ %159, %164 ]
  %169 = zext i32 %168 to i64
  %170 = zext i32 %148 to i64
  %171 = shl i64 1, %170
  %172 = icmp sgt i64 %171, %169
  br i1 %172, label %179, label %173

173:                                              ; preds = %166
  %174 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %175 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %174, i64 0, i32 5
  store i32 8, i32* %175, align 8
  %176 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %177 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i64 0, i32 0
  %178 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %177, align 8
  tail call void %178(%struct.jpeg_common_struct* %53) #4
  br label %179

179:                                              ; preds = %166, %173
  %180 = shl i32 %168, 1
  %181 = add nsw i32 %148, 1
  %182 = sext i32 %167 to i64
  %183 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %145

186:                                              ; preds = %179, %138
  %187 = select i1 %21, i32 15, i32 255
  %188 = icmp sgt i32 %134, 0
  %189 = bitcast %struct.c_derived_tbl* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %189, i8 0, i64 1280, i1 false)
  br i1 %188, label %190, label %218

190:                                              ; preds = %186
  %191 = zext i32 %134 to i64
  br label %192

192:                                              ; preds = %209, %190
  %193 = phi i64 [ 0, %190 ], [ %216, %209 ]
  %194 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %26, i64 0, i32 1, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i32
  %197 = icmp ult i32 %187, %196
  %198 = zext i8 %195 to i64
  br i1 %197, label %203, label %199

199:                                              ; preds = %192
  %200 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %54, i64 0, i32 1, i64 %198
  %201 = load i8, i8* %200, align 1
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %209, label %203

203:                                              ; preds = %192, %199
  %204 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %205 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %204, i64 0, i32 5
  store i32 8, i32* %205, align 8
  %206 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %55, align 8
  %207 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %206, i64 0, i32 0
  %208 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %207, align 8
  tail call void %208(%struct.jpeg_common_struct* %53) #4
  br label %209

209:                                              ; preds = %199, %203
  %210 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %193
  %211 = load i32, i32* %210, align 4
  %212 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %54, i64 0, i32 0, i64 %198
  store i32 %211, i32* %212, align 4
  %213 = getelementptr inbounds [257 x i8], [257 x i8]* %5, i64 0, i64 %193
  %214 = load i8, i8* %213, align 1
  %215 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %54, i64 0, i32 1, i64 %198
  store i8 %214, i8* %215, align 1
  %216 = add nuw nsw i64 %193, 1
  %217 = icmp eq i64 %216, %191
  br i1 %217, label %218, label %192

218:                                              ; preds = %209, %186
  call void @llvm.lifetime.end.p0i8(i64 1028, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 257, i8* nonnull %7) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct*, %struct.JHUFF_TBL* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %4 = alloca [33 x i8], align 16
  %5 = alloca [257 x i32], align 16
  %6 = alloca [257 x i32], align 16
  %7 = bitcast [257 x i32]* %6 to i8*
  %8 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 33, i8* nonnull %8) #4
  %9 = bitcast [257 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1028, i8* nonnull %9) #4
  call void @llvm.lifetime.start.p0i8(i64 1028, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 33, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 1028, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -1, i64 1028, i1 false)
  %10 = getelementptr inbounds i64, i64* %2, i64 256
  store i64 1, i64* %10, align 8
  br label %13

11:                                               ; preds = %13
  %12 = zext i32 %23 to i64
  br label %31

13:                                               ; preds = %27, %3
  %14 = phi i64 [ 0, %3 ], [ %28, %27 ]
  %15 = phi i64 [ 1000000000, %3 ], [ %29, %27 ]
  %16 = phi i32 [ -1, %3 ], [ %30, %27 ]
  %17 = getelementptr inbounds i64, i64* %2, i64 %14
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  %20 = icmp sgt i64 %18, %15
  %21 = or i1 %19, %20
  %22 = trunc i64 %14 to i32
  %23 = select i1 %21, i32 %16, i32 %22
  %24 = select i1 %21, i64 %15, i64 %18
  %25 = add nuw nsw i64 %14, 1
  %26 = icmp eq i64 %25, 257
  br i1 %26, label %11, label %27

27:                                               ; preds = %85, %13, %77
  %28 = phi i64 [ %25, %13 ], [ 0, %77 ], [ 0, %85 ]
  %29 = phi i64 [ %24, %13 ], [ 1000000000, %77 ], [ 1000000000, %85 ]
  %30 = phi i32 [ %23, %13 ], [ -1, %77 ], [ -1, %85 ]
  br label %13

31:                                               ; preds = %197, %11
  %32 = phi i64 [ 0, %11 ], [ %208, %197 ]
  %33 = phi i64 [ 1000000000, %11 ], [ %207, %197 ]
  %34 = phi i32 [ -1, %11 ], [ %206, %197 ]
  %35 = getelementptr inbounds i64, i64* %2, i64 %32
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  %38 = icmp sgt i64 %36, %33
  %39 = or i1 %37, %38
  %40 = icmp eq i64 %32, %12
  %41 = or i1 %40, %39
  %42 = trunc i64 %32 to i32
  %43 = select i1 %41, i32 %34, i32 %42
  %44 = select i1 %41, i64 %33, i64 %36
  %45 = or i64 %32, 1
  %46 = icmp eq i64 %45, 257
  br i1 %46, label %47, label %197

47:                                               ; preds = %31
  %48 = icmp slt i32 %43, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %51 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %94

52:                                               ; preds = %47
  %53 = sext i32 %43 to i64
  %54 = getelementptr inbounds i64, i64* %2, i64 %53
  %55 = load i64, i64* %54, align 8
  %56 = sext i32 %23 to i64
  %57 = getelementptr inbounds i64, i64* %2, i64 %56
  %58 = load i64, i64* %57, align 8
  %59 = add nsw i64 %58, %55
  store i64 %59, i64* %57, align 8
  store i64 0, i64* %54, align 8
  %60 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %56
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %60, align 4
  %63 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %56
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, -1
  br i1 %65, label %66, label %77

66:                                               ; preds = %52, %66
  %67 = phi i32 [ %73, %66 ], [ %64, %52 ]
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %69, align 4
  %72 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %68
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, -1
  br i1 %74, label %66, label %75

75:                                               ; preds = %66
  %76 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %68
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi i32* [ %63, %52 ], [ %76, %75 ]
  store i32 %43, i32* %78, align 4
  %79 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %53
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %79, align 4
  %82 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %53
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, -1
  br i1 %84, label %85, label %27

85:                                               ; preds = %77, %85
  %86 = phi i32 [ %92, %85 ], [ %83, %77 ]
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %88, align 4
  %91 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %87
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, -1
  br i1 %93, label %85, label %27

94:                                               ; preds = %112, %49
  %95 = phi i64 [ 0, %49 ], [ %113, %112 ]
  %96 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = icmp sgt i32 %97, 32
  br i1 %100, label %101, label %107

101:                                              ; preds = %99
  %102 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %50, align 8
  %103 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %102, i64 0, i32 5
  store i32 39, i32* %103, align 8
  %104 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %50, align 8
  %105 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %104, i64 0, i32 0
  %106 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %105, align 8
  tail call void %106(%struct.jpeg_common_struct* %51) #4
  br label %107

107:                                              ; preds = %101, %99
  %108 = sext i32 %97 to i64
  %109 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = add i8 %110, 1
  store i8 %111, i8* %109, align 1
  br label %112

112:                                              ; preds = %94, %107
  %113 = add nuw nsw i64 %95, 1
  %114 = icmp eq i64 %113, 257
  br i1 %114, label %115, label %94

115:                                              ; preds = %112, %147
  %116 = phi i64 [ %121, %147 ], [ 32, %112 ]
  %117 = phi i64 [ %149, %147 ], [ 30, %112 ]
  %118 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %116
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, 0
  %121 = add nsw i64 %116, -1
  br i1 %120, label %147, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %121
  br label %124

124:                                              ; preds = %122, %132
  %125 = phi i8 [ %119, %122 ], [ %145, %132 ]
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ %131, %126 ], [ %117, %124 ]
  %128 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, 0
  %131 = add i64 %127, -1
  br i1 %130, label %126, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %127
  %134 = add i8 %125, -2
  store i8 %134, i8* %118, align 1
  %135 = load i8, i8* %123, align 1
  %136 = add i8 %135, 1
  store i8 %136, i8* %123, align 1
  %137 = shl i64 %127, 32
  %138 = add i64 %137, 4294967296
  %139 = ashr exact i64 %138, 32
  %140 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = add i8 %141, 2
  store i8 %142, i8* %140, align 1
  %143 = load i8, i8* %133, align 1
  %144 = add i8 %143, -1
  store i8 %144, i8* %133, align 1
  %145 = load i8, i8* %118, align 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %124

147:                                              ; preds = %132, %115
  %148 = icmp ugt i64 %121, 16
  %149 = add nsw i64 %117, -1
  br i1 %148, label %115, label %150

150:                                              ; preds = %147, %150
  %151 = phi i64 [ %155, %150 ], [ 16, %147 ]
  %152 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = icmp eq i8 %153, 0
  %155 = add i64 %151, -1
  br i1 %154, label %150, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds [33 x i8], [33 x i8]* %4, i64 0, i64 %151
  %158 = add i8 %153, -1
  store i8 %158, i8* %157, align 1
  %159 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* nonnull align 16 %8, i64 17, i1 false)
  br label %160

160:                                              ; preds = %181, %156
  %161 = phi i32 [ 1, %156 ], [ %182, %181 ]
  %162 = phi i32 [ 0, %156 ], [ %193, %181 ]
  br label %163

163:                                              ; preds = %192, %160
  %164 = phi i64 [ 0, %160 ], [ %194, %192 ]
  %165 = phi i32 [ 0, %160 ], [ %195, %192 ]
  %166 = phi i32 [ %162, %160 ], [ %193, %192 ]
  %167 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %164
  %168 = load i32, i32* %167, align 8
  %169 = icmp eq i32 %168, %161
  br i1 %169, label %170, label %175

170:                                              ; preds = %163
  %171 = trunc i32 %165 to i8
  %172 = sext i32 %166 to i64
  %173 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %172
  store i8 %171, i8* %173, align 1
  %174 = add nsw i32 %166, 1
  br label %175

175:                                              ; preds = %163, %170
  %176 = phi i32 [ %174, %170 ], [ %166, %163 ]
  %177 = or i64 %164, 1
  %178 = getelementptr inbounds [257 x i32], [257 x i32]* %5, i64 0, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, %161
  br i1 %180, label %186, label %192

181:                                              ; preds = %192
  %182 = add nuw nsw i32 %161, 1
  %183 = icmp eq i32 %182, 33
  br i1 %183, label %184, label %160

184:                                              ; preds = %181
  %185 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 2
  store i32 0, i32* %185, align 4
  call void @llvm.lifetime.end.p0i8(i64 1028, i8* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 1028, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %8) #4
  ret void

186:                                              ; preds = %175
  %187 = trunc i32 %165 to i8
  %188 = or i8 %187, 1
  %189 = sext i32 %176 to i64
  %190 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %1, i64 0, i32 1, i64 %189
  store i8 %188, i8* %190, align 1
  %191 = add nsw i32 %176, 1
  br label %192

192:                                              ; preds = %186, %175
  %193 = phi i32 [ %191, %186 ], [ %176, %175 ]
  %194 = add nuw nsw i64 %164, 2
  %195 = add nuw nsw i32 %165, 2
  %196 = icmp eq i64 %194, 256
  br i1 %196, label %181, label %163

197:                                              ; preds = %31
  %198 = getelementptr inbounds i64, i64* %2, i64 %45
  %199 = load i64, i64* %198, align 8
  %200 = icmp eq i64 %199, 0
  %201 = icmp sgt i64 %199, %44
  %202 = or i1 %200, %201
  %203 = icmp eq i64 %45, %12
  %204 = or i1 %203, %202
  %205 = trunc i64 %45 to i32
  %206 = select i1 %204, i32 %43, i32 %205
  %207 = select i1 %204, i64 %44, i64 %199
  %208 = add nuw nsw i64 %32, 2
  br label %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @jinit_huff_encoder(%struct.jpeg_compress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  %3 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %3, i64 0, i32 0
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %4, align 8
  %6 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* %5(%struct.jpeg_common_struct* %6, i32 1, i64 200) #4
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %9 = bitcast %struct.jpeg_entropy_encoder** %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = bitcast i8* %7 to void (%struct.jpeg_compress_struct*, i32)**
  store void (%struct.jpeg_compress_struct*, i32)* @start_pass_huff, void (%struct.jpeg_compress_struct*, i32)** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 64
  %12 = getelementptr inbounds i8, i8* %7, i64 160
  %13 = getelementptr inbounds i8, i8* %7, i64 128
  %14 = bitcast i8* %12 to i64**
  store i64* null, i64** %14, align 8
  %15 = bitcast i8* %13 to i64**
  store i64* null, i64** %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 104
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false)
  %17 = getelementptr inbounds i8, i8* %7, i64 168
  %18 = getelementptr inbounds i8, i8* %7, i64 136
  %19 = bitcast i8* %16 to <2 x %struct.c_derived_tbl*>*
  store <2 x %struct.c_derived_tbl*> zeroinitializer, <2 x %struct.c_derived_tbl*>* %19, align 8
  %20 = bitcast i8* %17 to <2 x i64*>*
  store <2 x i64*> zeroinitializer, <2 x i64*>* %20, align 8
  %21 = bitcast i8* %18 to <2 x i64*>*
  store <2 x i64*> zeroinitializer, <2 x i64*>* %21, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 120
  %23 = bitcast i8* %22 to %struct.c_derived_tbl**
  store %struct.c_derived_tbl* null, %struct.c_derived_tbl** %23, align 8
  %24 = getelementptr inbounds i8, i8* %7, i64 184
  %25 = bitcast i8* %24 to i64**
  store i64* null, i64** %25, align 8
  %26 = getelementptr inbounds i8, i8* %7, i64 152
  %27 = bitcast i8* %26 to i64**
  store i64* null, i64** %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @start_pass_huff(%struct.jpeg_compress_struct*, i32) #0 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %4 = bitcast %struct.jpeg_entropy_encoder** %3 to %struct.huff_entropy_encoder**
  %5 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %4, align 8
  %6 = icmp ne i32 %1, 0
  %7 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 0, i32 1
  %8 = select i1 %6, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_gather, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* @encode_mcu_huff
  %9 = select i1 %6, void (%struct.jpeg_compress_struct*)* @finish_pass_gather, void (%struct.jpeg_compress_struct*)* @finish_pass_huff
  store i32 (%struct.jpeg_compress_struct*, [64 x i16]**)* %8, i32 (%struct.jpeg_compress_struct*, [64 x i16]**)** %7, align 8
  %10 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 0, i32 2
  store void (%struct.jpeg_compress_struct*)* %9, void (%struct.jpeg_compress_struct*)** %10, align 8
  %11 = tail call i32 @jsimd_can_huff_encode_one_block() #4
  %12 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 8
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %88

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %18 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  %19 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 1
  br label %20

20:                                               ; preds = %16, %82
  %21 = phi i64 [ 0, %16 ], [ %84, %82 ]
  %22 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %21
  %23 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %22, align 8
  %24 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %23, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %23, i64 0, i32 6
  %27 = load i32, i32* %26, align 8
  br i1 %6, label %28, label %77

28:                                               ; preds = %20
  %29 = icmp ugt i32 %25, 3
  br i1 %29, label %30, label %38

30:                                               ; preds = %28
  %31 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %32 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %31, i64 0, i32 5
  store i32 50, i32* %32, align 8
  %33 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %34 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %33, i64 0, i32 6, i32 0, i64 0
  store i32 %25, i32* %34, align 4
  %35 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %36 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %35, i64 0, i32 0
  %37 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %36, align 8
  tail call void %37(%struct.jpeg_common_struct* %18) #4
  br label %38

38:                                               ; preds = %28, %30
  %39 = icmp ugt i32 %27, 3
  br i1 %39, label %40, label %48

40:                                               ; preds = %38
  %41 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %42 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %41, i64 0, i32 5
  store i32 50, i32* %42, align 8
  %43 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %44 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %43, i64 0, i32 6, i32 0, i64 0
  store i32 %27, i32* %44, align 4
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %17, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i64 0, i32 0
  %47 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %46, align 8
  tail call void %47(%struct.jpeg_common_struct* %18) #4
  br label %48

48:                                               ; preds = %38, %40
  %49 = sext i32 %25 to i64
  %50 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 6, i64 %49
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = bitcast i64* %51 to i8*
  br label %61

55:                                               ; preds = %48
  %56 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %19, align 8
  %57 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %56, i64 0, i32 0
  %58 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %57, align 8
  %59 = tail call i8* %58(%struct.jpeg_common_struct* %18, i32 1, i64 2056) #4
  %60 = bitcast i64** %50 to i8**
  store i8* %59, i8** %60, align 8
  br label %61

61:                                               ; preds = %53, %55
  %62 = phi i8* [ %59, %55 ], [ %54, %53 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %62, i8 0, i64 2056, i1 false)
  %63 = sext i32 %27 to i64
  %64 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 7, i64 %63
  %65 = load i64*, i64** %64, align 8
  %66 = icmp eq i64* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %61
  %68 = bitcast i64* %65 to i8*
  br label %75

69:                                               ; preds = %61
  %70 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %19, align 8
  %71 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %70, i64 0, i32 0
  %72 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %71, align 8
  %73 = tail call i8* %72(%struct.jpeg_common_struct* %18, i32 1, i64 2056) #4
  %74 = bitcast i64** %64 to i8**
  store i8* %73, i8** %74, align 8
  br label %75

75:                                               ; preds = %67, %69
  %76 = phi i8* [ %73, %69 ], [ %68, %67 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %76, i8 0, i64 2056, i1 false)
  br label %82

77:                                               ; preds = %20
  %78 = sext i32 %25 to i64
  %79 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 4, i64 %78
  tail call void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct* %0, i32 1, i32 %25, %struct.c_derived_tbl** %79)
  %80 = sext i32 %27 to i64
  %81 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 5, i64 %80
  tail call void @jpeg_make_c_derived_tbl(%struct.jpeg_compress_struct* %0, i32 0, i32 %27, %struct.c_derived_tbl** %81)
  br label %82

82:                                               ; preds = %77, %75
  %83 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 2, i64 %21
  store i32 0, i32* %83, align 4
  %84 = add nuw nsw i64 %21, 1
  %85 = load i32, i32* %13, align 4
  %86 = sext i32 %85 to i64
  %87 = icmp slt i64 %84, %86
  br i1 %87, label %20, label %88

88:                                               ; preds = %82, %2
  %89 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 0, i32 0
  store i64 0, i64* %89, align 8
  %90 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 1
  store i32 64, i32* %90, align 8
  %91 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 2
  store i32 %92, i32* %93, align 8
  %94 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 3
  store i32 0, i32* %94, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @encode_mcu_gather(%struct.jpeg_compress_struct*, [64 x i16]** nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %4 = bitcast %struct.jpeg_entropy_encoder** %3 to %struct.huff_entropy_encoder**
  %5 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %28

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %13, %17
  %18 = phi i64 [ %20, %17 ], [ 0, %13 ]
  %19 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 2, i64 %18
  store i32 0, i32* %19, align 4
  %20 = add nuw nsw i64 %18, 1
  %21 = load i32, i32* %14, align 4
  %22 = sext i32 %21 to i64
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %17, label %24

24:                                               ; preds = %17
  %25 = load i32, i32* %6, align 8
  br label %26

26:                                               ; preds = %24, %13
  %27 = phi i32 [ %25, %24 ], [ %7, %13 ]
  store i32 %27, i32* %10, align 8
  br label %28

28:                                               ; preds = %26, %9
  %29 = phi i32 [ %27, %26 ], [ %11, %9 ]
  %30 = add i32 %29, -1
  store i32 %30, i32* %10, align 8
  br label %31

31:                                               ; preds = %2, %28
  %32 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 48
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %146

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %37 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %38

38:                                               ; preds = %35, %137
  %39 = phi i64 [ 0, %35 ], [ %142, %137 ]
  %40 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %42
  %44 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %43, align 8
  %45 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %39
  %46 = load [64 x i16]*, [64 x i16]** %45, align 8
  %47 = getelementptr inbounds [64 x i16], [64 x i16]* %46, i64 0, i64 0
  %48 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 1, i32 2, i64 %42
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %44, i64 0, i32 5
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 6, i64 %52
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %44, i64 0, i32 6
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %5, i64 0, i32 7, i64 %57
  %59 = load i64*, i64** %58, align 8
  %60 = load i16, i16* %47, align 2
  %61 = sext i16 %60 to i32
  %62 = sub nsw i32 %61, %49
  %63 = icmp slt i32 %62, 0
  %64 = sub nsw i32 0, %62
  %65 = select i1 %63, i32 %64, i32 %62
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %38
  %68 = tail call i32 @llvm.ctlz.i32(i32 %65, i1 true) #4, !range !8
  %69 = sub nuw nsw i32 32, %68
  %70 = icmp ugt i32 %65, 2047
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %73 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %72, i64 0, i32 5
  store i32 6, i32* %73, align 8
  %74 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %75 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %74, i64 0, i32 0
  %76 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %75, align 8
  tail call void %76(%struct.jpeg_common_struct* %37) #4
  br label %77

77:                                               ; preds = %38, %67, %71
  %78 = phi i32 [ %69, %71 ], [ %69, %67 ], [ 0, %38 ]
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i64, i64* %54, i64 %79
  %81 = load i64, i64* %80, align 8
  %82 = add nsw i64 %81, 1
  store i64 %82, i64* %80, align 8
  %83 = getelementptr inbounds i64, i64* %59, i64 240
  br label %84

84:                                               ; preds = %128, %77
  %85 = phi i64 [ 1, %77 ], [ %130, %128 ]
  %86 = phi i32 [ 0, %77 ], [ %129, %128 ]
  %87 = getelementptr inbounds [0 x i32], [0 x i32]* @jpeg_natural_order, i64 0, i64 %85
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [64 x i16], [64 x i16]* %46, i64 0, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = sext i16 %91 to i32
  %93 = icmp eq i16 %91, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %84
  %95 = icmp sgt i32 %86, 15
  br i1 %95, label %96, label %106

96:                                               ; preds = %94
  %97 = load i64, i64* %83, align 8
  %98 = add nsw i32 %86, -16
  %99 = lshr i32 %98, 4
  %100 = add nuw nsw i32 %99, 1
  %101 = zext i32 %100 to i64
  %102 = add i64 %97, %101
  %103 = and i32 %98, 15
  store i64 %102, i64* %83, align 8
  br label %106

104:                                              ; preds = %84
  %105 = add nsw i32 %86, 1
  br label %128

106:                                              ; preds = %96, %94
  %107 = phi i32 [ %103, %96 ], [ %86, %94 ]
  %108 = icmp slt i16 %91, 0
  %109 = sub nsw i32 0, %92
  %110 = select i1 %108, i32 %109, i32 %92
  %111 = lshr i32 %110, 1
  %112 = tail call i32 @llvm.ctlz.i32(i32 %111, i1 false) #4, !range !9
  %113 = sub nuw nsw i32 33, %112
  %114 = icmp ugt i32 %110, 1023
  br i1 %114, label %115, label %121

115:                                              ; preds = %106
  %116 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %117 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %116, i64 0, i32 5
  store i32 6, i32* %117, align 8
  %118 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %36, align 8
  %119 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %118, i64 0, i32 0
  %120 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %119, align 8
  tail call void %120(%struct.jpeg_common_struct* %37) #4
  br label %121

121:                                              ; preds = %115, %106
  %122 = shl i32 %107, 4
  %123 = add nsw i32 %113, %122
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i64, i64* %59, i64 %124
  %126 = load i64, i64* %125, align 8
  %127 = add nsw i64 %126, 1
  store i64 %127, i64* %125, align 8
  br label %128

128:                                              ; preds = %121, %104
  %129 = phi i32 [ %105, %104 ], [ 0, %121 ]
  %130 = add nuw nsw i64 %85, 1
  %131 = icmp eq i64 %130, 64
  br i1 %131, label %132, label %84

132:                                              ; preds = %128
  %133 = icmp sgt i32 %129, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %132
  %135 = load i64, i64* %59, align 8
  %136 = add nsw i64 %135, 1
  store i64 %136, i64* %59, align 8
  br label %137

137:                                              ; preds = %132, %134
  %138 = load [64 x i16]*, [64 x i16]** %45, align 8
  %139 = getelementptr inbounds [64 x i16], [64 x i16]* %138, i64 0, i64 0
  %140 = load i16, i16* %139, align 2
  %141 = sext i16 %140 to i32
  store i32 %141, i32* %48, align 4
  %142 = add nuw nsw i64 %39, 1
  %143 = load i32, i32* %32, align 8
  %144 = sext i32 %143 to i64
  %145 = icmp slt i64 %142, %144
  br i1 %145, label %38, label %146

146:                                              ; preds = %137, %31
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal void @finish_pass_gather(%struct.jpeg_compress_struct*) #0 {
  %2 = alloca [4 x i32], align 16
  %3 = alloca [4 x i32], align 16
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %5 = bitcast %struct.jpeg_entropy_encoder** %4 to %struct.huff_entropy_encoder**
  %6 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %7 = bitcast [4 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = bitcast [4 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 16, i1 false)
  %9 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 44
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %56

12:                                               ; preds = %1
  %13 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  br label %14

14:                                               ; preds = %12, %51
  %15 = phi i64 [ 0, %12 ], [ %52, %51 ]
  %16 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %15
  %17 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %16, align 8
  %18 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %17, i64 0, i32 6
  %21 = load i32, i32* %20, align 8
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* %2, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %14
  %27 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 17, i64 %22
  %28 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %27, align 8
  %29 = icmp eq %struct.JHUFF_TBL* %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %13) #4
  store %struct.JHUFF_TBL* %31, %struct.JHUFF_TBL** %27, align 8
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi %struct.JHUFF_TBL* [ %31, %30 ], [ %28, %26 ]
  %34 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 6, i64 %22
  %35 = load i64*, i64** %34, align 8
  tail call void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* %0, %struct.JHUFF_TBL* %33, i64* %35)
  store i32 1, i32* %23, align 4
  br label %36

36:                                               ; preds = %14, %32
  %37 = sext i32 %21 to i64
  %38 = getelementptr inbounds [4 x i32], [4 x i32]* %3, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 18, i64 %37
  %43 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %42, align 8
  %44 = icmp eq %struct.JHUFF_TBL* %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %13) #4
  store %struct.JHUFF_TBL* %46, %struct.JHUFF_TBL** %42, align 8
  br label %47

47:                                               ; preds = %45, %41
  %48 = phi %struct.JHUFF_TBL* [ %46, %45 ], [ %43, %41 ]
  %49 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 7, i64 %37
  %50 = load i64*, i64** %49, align 8
  tail call void @jpeg_gen_optimal_table(%struct.jpeg_compress_struct* %0, %struct.JHUFF_TBL* %48, i64* %50)
  store i32 1, i32* %38, align 4
  br label %51

51:                                               ; preds = %36, %47
  %52 = add nuw nsw i64 %15, 1
  %53 = load i32, i32* %9, align 4
  %54 = sext i32 %53 to i64
  %55 = icmp slt i64 %52, %54
  br i1 %55, label %14, label %56

56:                                               ; preds = %51, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @encode_mcu_huff(%struct.jpeg_compress_struct*, [64 x i16]** nocapture readonly) #0 {
  %3 = alloca [512 x i8], align 16
  %4 = alloca [512 x i8], align 16
  %5 = alloca %struct.working_state, align 16
  %6 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %7 = bitcast %struct.jpeg_entropy_encoder** %6 to %struct.huff_entropy_encoder**
  %8 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %7, align 8
  %9 = bitcast %struct.working_state* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 64, i1 false)
  %10 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %11 = bitcast %struct.jpeg_destination_mgr** %10 to i64**
  %12 = load i64*, i64** %11, align 8
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.working_state* %5 to i64*
  store i64 %13, i64* %14, align 16
  %15 = getelementptr inbounds i64, i64* %12, i64 1
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 1
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 2
  %19 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %8, i64 0, i32 1
  %20 = bitcast %struct.savable_state* %18 to i8*
  %21 = bitcast %struct.savable_state* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %20, i8* align 8 %21, i64 32, i1 false)
  %22 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 3
  store %struct.jpeg_compress_struct* %0, %struct.jpeg_compress_struct** %22, align 16
  %23 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %8, i64 0, i32 8
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 4
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 30
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  %29 = inttoptr i64 %13 to i8*
  br i1 %28, label %214, label %30

30:                                               ; preds = %2
  %31 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %8, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %214

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %8, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds [512 x i8], [512 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %37) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -86, i64 512, i1 false) #4
  %38 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 2, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 2, i32 0, i32 0
  %41 = sub i32 64, %39
  %42 = load i64, i64* %40, align 16
  %43 = icmp ult i64 %16, 512
  %44 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 0
  %45 = select i1 %43, i8* %37, i8* %29
  %46 = icmp sgt i32 %41, 7
  br i1 %46, label %47, label %88

47:                                               ; preds = %34
  %48 = sub i32 56, %39
  %49 = and i32 %48, 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %60

51:                                               ; preds = %47
  %52 = zext i32 %48 to i64
  %53 = lshr i64 %42, %52
  %54 = trunc i64 %53 to i8
  store i8 %54, i8* %45, align 1
  %55 = getelementptr inbounds i8, i8* %45, i64 1
  store i8 0, i8* %55, align 1
  %56 = and i64 %53, 255
  %57 = icmp eq i64 %56, 255
  %58 = select i1 %57, i64 2, i64 1
  %59 = getelementptr inbounds i8, i8* %45, i64 %58
  br label %60

60:                                               ; preds = %51, %47
  %61 = phi i32 [ %41, %47 ], [ %48, %51 ]
  %62 = phi i8* [ %45, %47 ], [ %59, %51 ]
  %63 = phi i32 [ undef, %47 ], [ %48, %51 ]
  %64 = phi i8* [ undef, %47 ], [ %59, %51 ]
  %65 = icmp ult i32 %48, 8
  br i1 %65, label %88, label %66

66:                                               ; preds = %60, %66
  %67 = phi i32 [ %78, %66 ], [ %61, %60 ]
  %68 = phi i8* [ %86, %66 ], [ %62, %60 ]
  %69 = add nsw i32 %67, -8
  %70 = zext i32 %69 to i64
  %71 = lshr i64 %42, %70
  %72 = trunc i64 %71 to i8
  store i8 %72, i8* %68, align 1
  %73 = getelementptr inbounds i8, i8* %68, i64 1
  store i8 0, i8* %73, align 1
  %74 = and i64 %71, 255
  %75 = icmp eq i64 %74, 255
  %76 = select i1 %75, i64 2, i64 1
  %77 = getelementptr inbounds i8, i8* %68, i64 %76
  %78 = add nsw i32 %67, -16
  %79 = zext i32 %78 to i64
  %80 = lshr i64 %42, %79
  %81 = trunc i64 %80 to i8
  store i8 %81, i8* %77, align 1
  %82 = getelementptr inbounds i8, i8* %77, i64 1
  store i8 0, i8* %82, align 1
  %83 = and i64 %80, 255
  %84 = icmp eq i64 %83, 255
  %85 = select i1 %84, i64 2, i64 1
  %86 = getelementptr inbounds i8, i8* %77, i64 %85
  %87 = icmp sgt i32 %78, 7
  br i1 %87, label %66, label %88

88:                                               ; preds = %60, %66, %34
  %89 = phi i8* [ %45, %34 ], [ %64, %60 ], [ %86, %66 ]
  %90 = phi i32 [ %41, %34 ], [ %63, %60 ], [ %78, %66 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %105, label %92

92:                                               ; preds = %88
  %93 = sub nsw i32 8, %90
  %94 = zext i32 %93 to i64
  %95 = shl i64 %42, %94
  %96 = lshr i32 255, %90
  %97 = zext i32 %96 to i64
  %98 = or i64 %95, %97
  %99 = trunc i64 %98 to i8
  store i8 %99, i8* %89, align 1
  %100 = getelementptr inbounds i8, i8* %89, i64 1
  store i8 0, i8* %100, align 1
  %101 = and i64 %98, 255
  %102 = icmp eq i64 %101, 255
  %103 = select i1 %102, i64 2, i64 1
  %104 = getelementptr inbounds i8, i8* %89, i64 %103
  br label %105

105:                                              ; preds = %92, %88
  %106 = phi i8* [ %104, %92 ], [ %89, %88 ]
  store i64 0, i64* %40, align 16
  store i32 64, i32* %38, align 8
  br i1 %43, label %107, label %149

107:                                              ; preds = %105
  %108 = ptrtoint i8* %106 to i64
  %109 = ptrtoint [512 x i8]* %3 to i64
  %110 = sub i64 %108, %109
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %107
  %113 = load i8*, i8** %44, align 16
  br label %156

114:                                              ; preds = %107
  %115 = load i64, i64* %17, align 8
  %116 = load i8*, i8** %44, align 16
  br label %117

117:                                              ; preds = %144, %114
  %118 = phi i8* [ %116, %114 ], [ %145, %144 ]
  %119 = phi i64 [ %115, %114 ], [ %146, %144 ]
  %120 = phi i64 [ %110, %114 ], [ %147, %144 ]
  %121 = phi i8* [ %37, %114 ], [ %126, %144 ]
  %122 = icmp ult i64 %120, %119
  %123 = select i1 %122, i64 %120, i64 %119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 1 %121, i64 %123, i1 false) #4
  %124 = load i8*, i8** %44, align 16
  %125 = getelementptr inbounds i8, i8* %124, i64 %123
  store i8* %125, i8** %44, align 16
  %126 = getelementptr inbounds i8, i8* %121, i64 %123
  %127 = load i64, i64* %17, align 8
  %128 = sub i64 %127, %123
  store i64 %128, i64* %17, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %144

130:                                              ; preds = %117
  %131 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %22, align 16
  %132 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %131, i64 0, i32 6
  %133 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %132, align 8
  %134 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %133, i64 0, i32 3
  %135 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %134, align 8
  %136 = call i32 %135(%struct.jpeg_compress_struct* %131) #4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %155, label %138

138:                                              ; preds = %130
  %139 = bitcast %struct.jpeg_destination_mgr* %133 to i64*
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %14, align 16
  %141 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %133, i64 0, i32 1
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* %17, align 8
  %143 = inttoptr i64 %140 to i8*
  br label %144

144:                                              ; preds = %138, %117
  %145 = phi i8* [ %143, %138 ], [ %125, %117 ]
  %146 = phi i64 [ %142, %138 ], [ %128, %117 ]
  %147 = sub i64 %120, %123
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %156, label %117

149:                                              ; preds = %105
  %150 = load i64, i64* %14, align 16
  %151 = ptrtoint i8* %106 to i64
  %152 = load i64, i64* %17, align 8
  %153 = sub i64 %150, %151
  %154 = add i64 %153, %152
  store i64 %154, i64* %17, align 8
  store i8* %106, i8** %44, align 16
  br label %156

155:                                              ; preds = %130
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %37) #4
  br label %364

156:                                              ; preds = %144, %112, %149
  %157 = phi i8* [ %113, %112 ], [ %106, %149 ], [ %145, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %37) #4
  %158 = getelementptr inbounds i8, i8* %157, i64 1
  store i8* %158, i8** %44, align 16
  store i8 -1, i8* %157, align 1
  %159 = load i64, i64* %17, align 8
  %160 = add i64 %159, -1
  store i64 %160, i64* %17, align 8
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %156
  %163 = load i8*, i8** %44, align 16
  br label %178

164:                                              ; preds = %156
  %165 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %22, align 16
  %166 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %165, i64 0, i32 6
  %167 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %166, align 8
  %168 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %167, i64 0, i32 3
  %169 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %168, align 8
  %170 = call i32 %169(%struct.jpeg_compress_struct* %165) #4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %364, label %172

172:                                              ; preds = %164
  %173 = bitcast %struct.jpeg_destination_mgr* %167 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8
  %175 = bitcast %struct.working_state* %5 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %175, align 16
  %176 = extractelement <2 x i64> %174, i32 0
  %177 = inttoptr i64 %176 to i8*
  br label %178

178:                                              ; preds = %172, %162
  %179 = phi i8* [ %163, %162 ], [ %177, %172 ]
  %180 = trunc i32 %36 to i8
  %181 = add i8 %180, -48
  %182 = getelementptr inbounds i8, i8* %179, i64 1
  store i8* %182, i8** %44, align 16
  store i8 %181, i8* %179, align 1
  %183 = load i64, i64* %17, align 8
  %184 = add i64 %183, -1
  store i64 %184, i64* %17, align 8
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %199

186:                                              ; preds = %178
  %187 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %22, align 16
  %188 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %187, i64 0, i32 6
  %189 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %188, align 8
  %190 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %189, i64 0, i32 3
  %191 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %190, align 8
  %192 = call i32 %191(%struct.jpeg_compress_struct* %187) #4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %364, label %194

194:                                              ; preds = %186
  %195 = bitcast %struct.jpeg_destination_mgr* %189 to <2 x i64>*
  %196 = load <2 x i64>, <2 x i64>* %195, align 8
  %197 = bitcast %struct.working_state* %5 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %197, align 16
  %198 = extractelement <2 x i64> %196, i32 1
  br label %199

199:                                              ; preds = %194, %178
  %200 = phi i64 [ %198, %194 ], [ %184, %178 ]
  %201 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %22, align 16
  %202 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %201, i64 0, i32 44
  %203 = load i32, i32* %202, align 4
  %204 = icmp sgt i32 %203, 0
  br i1 %204, label %205, label %214

205:                                              ; preds = %199, %205
  %206 = phi i64 [ %208, %205 ], [ 0, %199 ]
  %207 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 2, i32 2, i64 %206
  store i32 0, i32* %207, align 4
  %208 = add nuw nsw i64 %206, 1
  %209 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %22, align 16
  %210 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %209, i64 0, i32 44
  %211 = load i32, i32* %210, align 4
  %212 = sext i32 %211 to i64
  %213 = icmp slt i64 %208, %212
  br i1 %213, label %205, label %214

214:                                              ; preds = %205, %199, %2, %30
  %215 = phi i64 [ %200, %199 ], [ %16, %2 ], [ %16, %30 ], [ %200, %205 ]
  %216 = load i32, i32* %23, align 8
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 48
  %219 = load i32, i32* %218, align 8
  %220 = icmp sgt i32 %219, 0
  br i1 %217, label %226, label %221

221:                                              ; preds = %214
  br i1 %220, label %222, label %344

222:                                              ; preds = %221
  %223 = getelementptr inbounds [512 x i8], [512 x i8]* %4, i64 0, i64 0
  %224 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 0
  %225 = ptrtoint [512 x i8]* %4 to i64
  br label %227

226:                                              ; preds = %214
  br i1 %220, label %311, label %344

227:                                              ; preds = %309, %222
  %228 = phi i64 [ %215, %222 ], [ %310, %309 ]
  %229 = phi i64 [ 0, %222 ], [ %305, %309 ]
  %230 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %232
  %234 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %233, align 8
  %235 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %229
  %236 = load [64 x i16]*, [64 x i16]** %235, align 8
  %237 = getelementptr inbounds [64 x i16], [64 x i16]* %236, i64 0, i64 0
  %238 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 2, i32 2, i64 %232
  %239 = load i32, i32* %238, align 4
  %240 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %234, i64 0, i32 5
  %241 = load i32, i32* %240, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %8, i64 0, i32 4, i64 %242
  %244 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %243, align 8
  %245 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %234, i64 0, i32 6
  %246 = load i32, i32* %245, align 8
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %8, i64 0, i32 5, i64 %247
  %249 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %248, align 8
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %223) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %223, i8 -86, i64 512, i1 false) #4
  %250 = icmp ult i64 %228, 512
  br i1 %250, label %251, label %291

251:                                              ; preds = %227
  %252 = call i8* @jsimd_huff_encode_one_block(i8* nonnull %9, i8* nonnull %223, i16* %237, i32 %239, %struct.c_derived_tbl* %244, %struct.c_derived_tbl* %249) #4
  %253 = ptrtoint i8* %252 to i64
  %254 = sub i64 %253, %225
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %300, label %256

256:                                              ; preds = %251
  %257 = load i64, i64* %17, align 8
  %258 = load i8*, i8** %224, align 16
  br label %259

259:                                              ; preds = %286, %256
  %260 = phi i8* [ %258, %256 ], [ %287, %286 ]
  %261 = phi i64 [ %257, %256 ], [ %288, %286 ]
  %262 = phi i64 [ %254, %256 ], [ %289, %286 ]
  %263 = phi i8* [ %223, %256 ], [ %268, %286 ]
  %264 = icmp ult i64 %262, %261
  %265 = select i1 %264, i64 %262, i64 %261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %260, i8* align 1 %263, i64 %265, i1 false) #4
  %266 = load i8*, i8** %224, align 16
  %267 = getelementptr inbounds i8, i8* %266, i64 %265
  store i8* %267, i8** %224, align 16
  %268 = getelementptr inbounds i8, i8* %263, i64 %265
  %269 = load i64, i64* %17, align 8
  %270 = sub i64 %269, %265
  store i64 %270, i64* %17, align 8
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %286

272:                                              ; preds = %259
  %273 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %22, align 16
  %274 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %273, i64 0, i32 6
  %275 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %274, align 8
  %276 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %275, i64 0, i32 3
  %277 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %276, align 8
  %278 = call i32 %277(%struct.jpeg_compress_struct* %273) #4
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %299, label %280

280:                                              ; preds = %272
  %281 = bitcast %struct.jpeg_destination_mgr* %275 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %14, align 16
  %283 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %275, i64 0, i32 1
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %17, align 8
  %285 = inttoptr i64 %282 to i8*
  br label %286

286:                                              ; preds = %280, %259
  %287 = phi i8* [ %285, %280 ], [ %267, %259 ]
  %288 = phi i64 [ %284, %280 ], [ %270, %259 ]
  %289 = sub i64 %262, %265
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %300, label %259

291:                                              ; preds = %227
  %292 = load i8*, i8** %224, align 16
  %293 = call i8* @jsimd_huff_encode_one_block(i8* nonnull %9, i8* %292, i16* %237, i32 %239, %struct.c_derived_tbl* %244, %struct.c_derived_tbl* %249) #4
  %294 = load i64, i64* %14, align 16
  %295 = ptrtoint i8* %293 to i64
  %296 = load i64, i64* %17, align 8
  %297 = sub i64 %294, %295
  %298 = add i64 %297, %296
  store i64 %298, i64* %17, align 8
  store i8* %293, i8** %224, align 16
  br label %300

299:                                              ; preds = %272
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %223) #4
  br label %364

300:                                              ; preds = %286, %291, %251
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %223) #4
  %301 = load [64 x i16]*, [64 x i16]** %235, align 8
  %302 = getelementptr inbounds [64 x i16], [64 x i16]* %301, i64 0, i64 0
  %303 = load i16, i16* %302, align 2
  %304 = sext i16 %303 to i32
  store i32 %304, i32* %238, align 4
  %305 = add nuw nsw i64 %229, 1
  %306 = load i32, i32* %218, align 8
  %307 = sext i32 %306 to i64
  %308 = icmp slt i64 %305, %307
  br i1 %308, label %309, label %344

309:                                              ; preds = %300
  %310 = load i64, i64* %17, align 8
  br label %227

311:                                              ; preds = %226, %335
  %312 = phi i64 [ %340, %335 ], [ 0, %226 ]
  %313 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 49, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 45, i64 %315
  %317 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %316, align 8
  %318 = getelementptr inbounds [64 x i16]*, [64 x i16]** %1, i64 %312
  %319 = load [64 x i16]*, [64 x i16]** %318, align 8
  %320 = getelementptr inbounds [64 x i16], [64 x i16]* %319, i64 0, i64 0
  %321 = getelementptr inbounds %struct.working_state, %struct.working_state* %5, i64 0, i32 2, i32 2, i64 %315
  %322 = load i32, i32* %321, align 4
  %323 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %317, i64 0, i32 5
  %324 = load i32, i32* %323, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %8, i64 0, i32 4, i64 %325
  %327 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %326, align 8
  %328 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %317, i64 0, i32 6
  %329 = load i32, i32* %328, align 8
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %8, i64 0, i32 5, i64 %330
  %332 = load %struct.c_derived_tbl*, %struct.c_derived_tbl** %331, align 8
  %333 = call fastcc i32 @encode_one_block(%struct.working_state* nonnull %5, i16* %320, i32 %322, %struct.c_derived_tbl* %327, %struct.c_derived_tbl* %332)
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %364, label %335

335:                                              ; preds = %311
  %336 = load [64 x i16]*, [64 x i16]** %318, align 8
  %337 = getelementptr inbounds [64 x i16], [64 x i16]* %336, i64 0, i64 0
  %338 = load i16, i16* %337, align 2
  %339 = sext i16 %338 to i32
  store i32 %339, i32* %321, align 4
  %340 = add nuw nsw i64 %312, 1
  %341 = load i32, i32* %218, align 8
  %342 = sext i32 %341 to i64
  %343 = icmp slt i64 %340, %342
  br i1 %343, label %311, label %344

344:                                              ; preds = %300, %335, %221, %226
  %345 = load i64, i64* %14, align 16
  %346 = load i64*, i64** %11, align 8
  store i64 %345, i64* %346, align 8
  %347 = load i64, i64* %17, align 8
  %348 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %10, align 8
  %349 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %348, i64 0, i32 1
  store i64 %347, i64* %349, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 16 %20, i64 32, i1 false)
  %350 = load i32, i32* %26, align 8
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %364, label %352

352:                                              ; preds = %344
  %353 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %8, i64 0, i32 2
  %354 = load i32, i32* %353, align 8
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %361

356:                                              ; preds = %352
  store i32 %350, i32* %353, align 8
  %357 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %8, i64 0, i32 3
  %358 = load i32, i32* %357, align 4
  %359 = add nsw i32 %358, 1
  %360 = and i32 %359, 7
  store i32 %360, i32* %357, align 4
  br label %361

361:                                              ; preds = %356, %352
  %362 = phi i32 [ %350, %356 ], [ %354, %352 ]
  %363 = add i32 %362, -1
  store i32 %363, i32* %353, align 8
  br label %364

364:                                              ; preds = %311, %186, %164, %155, %299, %361, %344
  %365 = phi i32 [ 0, %299 ], [ 1, %344 ], [ 1, %361 ], [ 0, %155 ], [ 0, %164 ], [ 0, %186 ], [ 0, %311 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #4
  ret i32 %365
}

; Function Attrs: nounwind ssp uwtable
define internal void @finish_pass_huff(%struct.jpeg_compress_struct*) #0 {
  %2 = alloca [512 x i8], align 16
  %3 = alloca [20 x i8], align 4
  %4 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 62
  %5 = bitcast %struct.jpeg_entropy_encoder** %4 to %struct.huff_entropy_encoder**
  %6 = load %struct.huff_entropy_encoder*, %struct.huff_entropy_encoder** %5, align 8
  %7 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 -86, i64 20, i1 false)
  %8 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 6
  %9 = bitcast %struct.jpeg_destination_mgr** %8 to i64**
  %10 = load i64*, i64** %9, align 8
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i64, i64* %10, i64 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 1, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.huff_entropy_encoder, %struct.huff_entropy_encoder* %6, i64 0, i32 1, i32 2
  %19 = bitcast [4 x i32]* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %19, i64 20, i1 false)
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %20) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 512, i1 false) #4
  %21 = sub i32 64, %17
  %22 = icmp ult i64 %13, 512
  %23 = inttoptr i64 %11 to i8*
  %24 = select i1 %22, i8* %20, i8* %23
  %25 = icmp sgt i32 %21, 7
  br i1 %25, label %26, label %67

26:                                               ; preds = %1
  %27 = sub i32 56, %17
  %28 = and i32 %27, 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %26
  %31 = zext i32 %27 to i64
  %32 = lshr i64 %15, %31
  %33 = trunc i64 %32 to i8
  store i8 %33, i8* %24, align 1
  %34 = getelementptr inbounds i8, i8* %24, i64 1
  store i8 0, i8* %34, align 1
  %35 = and i64 %32, 255
  %36 = icmp eq i64 %35, 255
  %37 = select i1 %36, i64 2, i64 1
  %38 = getelementptr inbounds i8, i8* %24, i64 %37
  br label %39

39:                                               ; preds = %30, %26
  %40 = phi i32 [ %21, %26 ], [ %27, %30 ]
  %41 = phi i8* [ %24, %26 ], [ %38, %30 ]
  %42 = phi i32 [ undef, %26 ], [ %27, %30 ]
  %43 = phi i8* [ undef, %26 ], [ %38, %30 ]
  %44 = icmp ult i32 %27, 8
  br i1 %44, label %67, label %45

45:                                               ; preds = %39, %45
  %46 = phi i32 [ %57, %45 ], [ %40, %39 ]
  %47 = phi i8* [ %65, %45 ], [ %41, %39 ]
  %48 = add nsw i32 %46, -8
  %49 = zext i32 %48 to i64
  %50 = lshr i64 %15, %49
  %51 = trunc i64 %50 to i8
  store i8 %51, i8* %47, align 1
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  store i8 0, i8* %52, align 1
  %53 = and i64 %50, 255
  %54 = icmp eq i64 %53, 255
  %55 = select i1 %54, i64 2, i64 1
  %56 = getelementptr inbounds i8, i8* %47, i64 %55
  %57 = add nsw i32 %46, -16
  %58 = zext i32 %57 to i64
  %59 = lshr i64 %15, %58
  %60 = trunc i64 %59 to i8
  store i8 %60, i8* %56, align 1
  %61 = getelementptr inbounds i8, i8* %56, i64 1
  store i8 0, i8* %61, align 1
  %62 = and i64 %59, 255
  %63 = icmp eq i64 %62, 255
  %64 = select i1 %63, i64 2, i64 1
  %65 = getelementptr inbounds i8, i8* %56, i64 %64
  %66 = icmp sgt i32 %57, 7
  br i1 %66, label %45, label %67

67:                                               ; preds = %39, %45, %1
  %68 = phi i8* [ %24, %1 ], [ %43, %39 ], [ %65, %45 ]
  %69 = phi i32 [ %21, %1 ], [ %42, %39 ], [ %57, %45 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %84, label %71

71:                                               ; preds = %67
  %72 = sub nsw i32 8, %69
  %73 = zext i32 %72 to i64
  %74 = shl i64 %15, %73
  %75 = lshr i32 255, %69
  %76 = zext i32 %75 to i64
  %77 = or i64 %74, %76
  %78 = trunc i64 %77 to i8
  store i8 %78, i8* %68, align 1
  %79 = getelementptr inbounds i8, i8* %68, i64 1
  store i8 0, i8* %79, align 1
  %80 = and i64 %77, 255
  %81 = icmp eq i64 %80, 255
  %82 = select i1 %81, i64 2, i64 1
  %83 = getelementptr inbounds i8, i8* %68, i64 %82
  br label %84

84:                                               ; preds = %71, %67
  %85 = phi i8* [ %83, %71 ], [ %68, %67 ]
  %86 = ptrtoint i8* %85 to i64
  br i1 %22, label %87, label %123

87:                                               ; preds = %84
  %88 = ptrtoint [512 x i8]* %2 to i64
  %89 = sub i64 %86, %88
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %126, label %91

91:                                               ; preds = %87, %117
  %92 = phi i64 [ %118, %117 ], [ %13, %87 ]
  %93 = phi i64 [ %119, %117 ], [ %11, %87 ]
  %94 = phi i8* [ %120, %117 ], [ %23, %87 ]
  %95 = phi i64 [ %121, %117 ], [ %89, %87 ]
  %96 = phi i8* [ %102, %117 ], [ %20, %87 ]
  %97 = icmp ult i64 %95, %92
  %98 = select i1 %97, i64 %95, i64 %92
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %94, i8* align 1 %96, i64 %98, i1 false) #4
  %99 = inttoptr i64 %93 to i8*
  %100 = getelementptr inbounds i8, i8* %99, i64 %98
  %101 = ptrtoint i8* %100 to i64
  %102 = getelementptr inbounds i8, i8* %96, i64 %98
  %103 = sub i64 %92, %98
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %117

105:                                              ; preds = %91
  %106 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %8, align 8
  %107 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %106, i64 0, i32 3
  %108 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %107, align 8
  %109 = call i32 %108(%struct.jpeg_compress_struct* %0) #4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %129, label %111

111:                                              ; preds = %105
  %112 = bitcast %struct.jpeg_destination_mgr* %106 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %106, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = inttoptr i64 %113 to i8*
  br label %117

117:                                              ; preds = %111, %91
  %118 = phi i64 [ %115, %111 ], [ %103, %91 ]
  %119 = phi i64 [ %113, %111 ], [ %101, %91 ]
  %120 = phi i8* [ %116, %111 ], [ %100, %91 ]
  %121 = sub i64 %95, %98
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %126, label %91

123:                                              ; preds = %84
  %124 = add i64 %13, %11
  %125 = sub i64 %124, %86
  br label %126

126:                                              ; preds = %117, %123, %87
  %127 = phi i64 [ %13, %87 ], [ %125, %123 ], [ %118, %117 ]
  %128 = phi i64 [ %11, %87 ], [ %86, %123 ], [ %119, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %20) #4
  br label %138

129:                                              ; preds = %105
  %130 = ptrtoint i8* %100 to i64
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %20) #4
  %131 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %0, i64 0, i32 0
  %132 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %131, align 8
  %133 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %132, i64 0, i32 5
  store i32 24, i32* %133, align 8
  %134 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %131, align 8
  %135 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %134, i64 0, i32 0
  %136 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %135, align 8
  %137 = bitcast %struct.jpeg_compress_struct* %0 to %struct.jpeg_common_struct*
  call void %136(%struct.jpeg_common_struct* %137) #4
  br label %138

138:                                              ; preds = %126, %129
  %139 = phi i64 [ %128, %126 ], [ %130, %129 ]
  %140 = phi i64 [ %127, %126 ], [ 0, %129 ]
  %141 = load i64*, i64** %9, align 8
  store i64 %139, i64* %141, align 8
  %142 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %8, align 8
  %143 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %142, i64 0, i32 1
  store i64 %140, i64* %143, align 8
  store i64 0, i64* %14, align 8
  store i32 64, i32* %16, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* nonnull align 4 %7, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7)
  ret void
}

declare i32 @jsimd_can_huff_encode_one_block() local_unnamed_addr #2

declare %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @encode_one_block(%struct.working_state* nocapture, i16* readonly, i32, %struct.c_derived_tbl* nocapture readonly, %struct.c_derived_tbl* readonly) unnamed_addr #0 {
  %6 = alloca [512 x i8], align 16
  %7 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 512, i1 false)
  %8 = getelementptr inbounds %struct.working_state, %struct.working_state* %0, i64 0, i32 2, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.working_state, %struct.working_state* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.working_state, %struct.working_state* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %13, 512
  br i1 %14, label %18, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.working_state, %struct.working_state* %0, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %5, %15
  %19 = phi i8* [ %17, %15 ], [ %7, %5 ]
  %20 = phi i32 [ 0, %15 ], [ 1, %5 ]
  %21 = load i16, i16* %1, align 2
  %22 = sext i16 %21 to i32
  %23 = sub nsw i32 %22, %2
  %24 = ashr i32 %23, 31
  %25 = add nsw i32 %24, %23
  %26 = xor i32 %25, %24
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = zext i8 %29 to i64
  %32 = shl nsw i64 -1, %31
  %33 = trunc i64 %32 to i32
  %34 = xor i32 %33, -1
  %35 = and i32 %25, %34
  %36 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %3, i64 0, i32 0, i64 %31
  %37 = load i32, i32* %36, align 4
  %38 = shl i32 %37, %30
  %39 = or i32 %35, %38
  %40 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %3, i64 0, i32 1, i64 %31
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = add nsw i32 %42, %30
  %44 = sub nsw i32 %9, %43
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %46, label %138

46:                                               ; preds = %18
  %47 = zext i32 %9 to i64
  %48 = shl i64 %11, %47
  %49 = sub nsw i32 0, %44
  %50 = ashr i32 %39, %49
  %51 = sext i32 %50 to i64
  %52 = or i64 %48, %51
  %53 = and i64 %52, -9187201950435737472
  %54 = sub i64 -72340172838076674, %52
  %55 = and i64 %53, %54
  %56 = icmp eq i64 %55, 0
  %57 = lshr i64 %52, 56
  %58 = trunc i64 %57 to i8
  store i8 %58, i8* %19, align 1
  br i1 %56, label %112, label %59

59:                                               ; preds = %46
  %60 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 0, i8* %60, align 1
  %61 = icmp eq i64 %57, 255
  %62 = select i1 %61, i64 2, i64 1
  %63 = getelementptr inbounds i8, i8* %19, i64 %62
  %64 = lshr i64 %52, 48
  %65 = trunc i64 %64 to i8
  store i8 %65, i8* %63, align 1
  %66 = getelementptr inbounds i8, i8* %63, i64 1
  store i8 0, i8* %66, align 1
  %67 = and i64 %52, 71776119061217280
  %68 = icmp eq i64 %67, 71776119061217280
  %69 = select i1 %68, i64 2, i64 1
  %70 = getelementptr inbounds i8, i8* %63, i64 %69
  %71 = lshr i64 %52, 40
  %72 = trunc i64 %71 to i8
  store i8 %72, i8* %70, align 1
  %73 = getelementptr inbounds i8, i8* %70, i64 1
  store i8 0, i8* %73, align 1
  %74 = and i64 %52, 280375465082880
  %75 = icmp eq i64 %74, 280375465082880
  %76 = select i1 %75, i64 2, i64 1
  %77 = getelementptr inbounds i8, i8* %70, i64 %76
  %78 = lshr i64 %52, 32
  %79 = trunc i64 %78 to i8
  store i8 %79, i8* %77, align 1
  %80 = getelementptr inbounds i8, i8* %77, i64 1
  store i8 0, i8* %80, align 1
  %81 = and i64 %52, 1095216660480
  %82 = icmp eq i64 %81, 1095216660480
  %83 = select i1 %82, i64 2, i64 1
  %84 = getelementptr inbounds i8, i8* %77, i64 %83
  %85 = lshr i64 %52, 24
  %86 = trunc i64 %85 to i8
  store i8 %86, i8* %84, align 1
  %87 = getelementptr inbounds i8, i8* %84, i64 1
  store i8 0, i8* %87, align 1
  %88 = and i64 %52, 4278190080
  %89 = icmp eq i64 %88, 4278190080
  %90 = select i1 %89, i64 2, i64 1
  %91 = getelementptr inbounds i8, i8* %84, i64 %90
  %92 = lshr i64 %52, 16
  %93 = trunc i64 %92 to i8
  store i8 %93, i8* %91, align 1
  %94 = getelementptr inbounds i8, i8* %91, i64 1
  store i8 0, i8* %94, align 1
  %95 = and i64 %52, 16711680
  %96 = icmp eq i64 %95, 16711680
  %97 = select i1 %96, i64 2, i64 1
  %98 = getelementptr inbounds i8, i8* %91, i64 %97
  %99 = lshr i64 %52, 8
  %100 = trunc i64 %99 to i8
  store i8 %100, i8* %98, align 1
  %101 = getelementptr inbounds i8, i8* %98, i64 1
  store i8 0, i8* %101, align 1
  %102 = and i64 %52, 65280
  %103 = icmp eq i64 %102, 65280
  %104 = select i1 %103, i64 2, i64 1
  %105 = getelementptr inbounds i8, i8* %98, i64 %104
  %106 = trunc i64 %52 to i8
  store i8 %106, i8* %105, align 1
  %107 = getelementptr inbounds i8, i8* %105, i64 1
  store i8 0, i8* %107, align 1
  %108 = and i64 %52, 255
  %109 = icmp eq i64 %108, 255
  %110 = select i1 %109, i64 2, i64 1
  %111 = getelementptr inbounds i8, i8* %105, i64 %110
  br label %134

112:                                              ; preds = %46
  %113 = lshr i64 %52, 48
  %114 = trunc i64 %113 to i8
  %115 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %114, i8* %115, align 1
  %116 = lshr i64 %52, 40
  %117 = trunc i64 %116 to i8
  %118 = getelementptr inbounds i8, i8* %19, i64 2
  store i8 %117, i8* %118, align 1
  %119 = lshr i64 %52, 32
  %120 = trunc i64 %119 to i8
  %121 = getelementptr inbounds i8, i8* %19, i64 3
  store i8 %120, i8* %121, align 1
  %122 = lshr i64 %52, 24
  %123 = trunc i64 %122 to i8
  %124 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 %123, i8* %124, align 1
  %125 = lshr i64 %52, 16
  %126 = trunc i64 %125 to i8
  %127 = getelementptr inbounds i8, i8* %19, i64 5
  store i8 %126, i8* %127, align 1
  %128 = lshr i64 %52, 8
  %129 = trunc i64 %128 to i8
  %130 = getelementptr inbounds i8, i8* %19, i64 6
  store i8 %129, i8* %130, align 1
  %131 = trunc i64 %52 to i8
  %132 = getelementptr inbounds i8, i8* %19, i64 7
  store i8 %131, i8* %132, align 1
  %133 = getelementptr inbounds i8, i8* %19, i64 8
  br label %134

134:                                              ; preds = %112, %59
  %135 = phi i8* [ %111, %59 ], [ %133, %112 ]
  %136 = add nsw i32 %44, 64
  %137 = sext i32 %39 to i64
  br label %143

138:                                              ; preds = %18
  %139 = zext i32 %43 to i64
  %140 = shl i64 %11, %139
  %141 = sext i32 %39 to i64
  %142 = or i64 %140, %141
  br label %143

143:                                              ; preds = %138, %134
  %144 = phi i32 [ %136, %134 ], [ %44, %138 ]
  %145 = phi i64 [ %137, %134 ], [ %142, %138 ]
  %146 = phi i8* [ %135, %134 ], [ %19, %138 ]
  %147 = getelementptr inbounds i16, i16* %1, i64 1
  %148 = load i16, i16* %147, align 2
  %149 = sext i16 %148 to i32
  %150 = icmp eq i16 %148, 0
  br i1 %150, label %271, label %151

151:                                              ; preds = %143
  %152 = ashr i32 %149, 31
  %153 = add nsw i32 %152, %149
  %154 = xor i32 %153, %152
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = zext i8 %157 to i64
  %160 = shl nsw i64 -1, %159
  %161 = trunc i64 %160 to i32
  %162 = xor i32 %161, -1
  %163 = and i32 %153, %162
  %164 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %159
  %165 = load i32, i32* %164, align 4
  %166 = shl i32 %165, %158
  %167 = or i32 %163, %166
  %168 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %159
  %169 = load i8, i8* %168, align 1
  %170 = sext i8 %169 to i32
  %171 = add nsw i32 %170, %158
  %172 = sub nsw i32 %144, %171
  %173 = icmp slt i32 %172, 0
  br i1 %173, label %174, label %266

174:                                              ; preds = %151
  %175 = zext i32 %144 to i64
  %176 = shl i64 %145, %175
  %177 = sub nsw i32 0, %172
  %178 = ashr i32 %167, %177
  %179 = sext i32 %178 to i64
  %180 = or i64 %176, %179
  %181 = and i64 %180, -9187201950435737472
  %182 = sub i64 -72340172838076674, %180
  %183 = and i64 %181, %182
  %184 = icmp eq i64 %183, 0
  %185 = lshr i64 %180, 56
  %186 = trunc i64 %185 to i8
  store i8 %186, i8* %146, align 1
  br i1 %184, label %240, label %187

187:                                              ; preds = %174
  %188 = getelementptr inbounds i8, i8* %146, i64 1
  store i8 0, i8* %188, align 1
  %189 = icmp eq i64 %185, 255
  %190 = select i1 %189, i64 2, i64 1
  %191 = getelementptr inbounds i8, i8* %146, i64 %190
  %192 = lshr i64 %180, 48
  %193 = trunc i64 %192 to i8
  store i8 %193, i8* %191, align 1
  %194 = getelementptr inbounds i8, i8* %191, i64 1
  store i8 0, i8* %194, align 1
  %195 = and i64 %180, 71776119061217280
  %196 = icmp eq i64 %195, 71776119061217280
  %197 = select i1 %196, i64 2, i64 1
  %198 = getelementptr inbounds i8, i8* %191, i64 %197
  %199 = lshr i64 %180, 40
  %200 = trunc i64 %199 to i8
  store i8 %200, i8* %198, align 1
  %201 = getelementptr inbounds i8, i8* %198, i64 1
  store i8 0, i8* %201, align 1
  %202 = and i64 %180, 280375465082880
  %203 = icmp eq i64 %202, 280375465082880
  %204 = select i1 %203, i64 2, i64 1
  %205 = getelementptr inbounds i8, i8* %198, i64 %204
  %206 = lshr i64 %180, 32
  %207 = trunc i64 %206 to i8
  store i8 %207, i8* %205, align 1
  %208 = getelementptr inbounds i8, i8* %205, i64 1
  store i8 0, i8* %208, align 1
  %209 = and i64 %180, 1095216660480
  %210 = icmp eq i64 %209, 1095216660480
  %211 = select i1 %210, i64 2, i64 1
  %212 = getelementptr inbounds i8, i8* %205, i64 %211
  %213 = lshr i64 %180, 24
  %214 = trunc i64 %213 to i8
  store i8 %214, i8* %212, align 1
  %215 = getelementptr inbounds i8, i8* %212, i64 1
  store i8 0, i8* %215, align 1
  %216 = and i64 %180, 4278190080
  %217 = icmp eq i64 %216, 4278190080
  %218 = select i1 %217, i64 2, i64 1
  %219 = getelementptr inbounds i8, i8* %212, i64 %218
  %220 = lshr i64 %180, 16
  %221 = trunc i64 %220 to i8
  store i8 %221, i8* %219, align 1
  %222 = getelementptr inbounds i8, i8* %219, i64 1
  store i8 0, i8* %222, align 1
  %223 = and i64 %180, 16711680
  %224 = icmp eq i64 %223, 16711680
  %225 = select i1 %224, i64 2, i64 1
  %226 = getelementptr inbounds i8, i8* %219, i64 %225
  %227 = lshr i64 %180, 8
  %228 = trunc i64 %227 to i8
  store i8 %228, i8* %226, align 1
  %229 = getelementptr inbounds i8, i8* %226, i64 1
  store i8 0, i8* %229, align 1
  %230 = and i64 %180, 65280
  %231 = icmp eq i64 %230, 65280
  %232 = select i1 %231, i64 2, i64 1
  %233 = getelementptr inbounds i8, i8* %226, i64 %232
  %234 = trunc i64 %180 to i8
  store i8 %234, i8* %233, align 1
  %235 = getelementptr inbounds i8, i8* %233, i64 1
  store i8 0, i8* %235, align 1
  %236 = and i64 %180, 255
  %237 = icmp eq i64 %236, 255
  %238 = select i1 %237, i64 2, i64 1
  %239 = getelementptr inbounds i8, i8* %233, i64 %238
  br label %262

240:                                              ; preds = %174
  %241 = lshr i64 %180, 48
  %242 = trunc i64 %241 to i8
  %243 = getelementptr inbounds i8, i8* %146, i64 1
  store i8 %242, i8* %243, align 1
  %244 = lshr i64 %180, 40
  %245 = trunc i64 %244 to i8
  %246 = getelementptr inbounds i8, i8* %146, i64 2
  store i8 %245, i8* %246, align 1
  %247 = lshr i64 %180, 32
  %248 = trunc i64 %247 to i8
  %249 = getelementptr inbounds i8, i8* %146, i64 3
  store i8 %248, i8* %249, align 1
  %250 = lshr i64 %180, 24
  %251 = trunc i64 %250 to i8
  %252 = getelementptr inbounds i8, i8* %146, i64 4
  store i8 %251, i8* %252, align 1
  %253 = lshr i64 %180, 16
  %254 = trunc i64 %253 to i8
  %255 = getelementptr inbounds i8, i8* %146, i64 5
  store i8 %254, i8* %255, align 1
  %256 = lshr i64 %180, 8
  %257 = trunc i64 %256 to i8
  %258 = getelementptr inbounds i8, i8* %146, i64 6
  store i8 %257, i8* %258, align 1
  %259 = trunc i64 %180 to i8
  %260 = getelementptr inbounds i8, i8* %146, i64 7
  store i8 %259, i8* %260, align 1
  %261 = getelementptr inbounds i8, i8* %146, i64 8
  br label %262

262:                                              ; preds = %240, %187
  %263 = phi i8* [ %239, %187 ], [ %261, %240 ]
  %264 = add nsw i32 %172, 64
  %265 = sext i32 %167 to i64
  br label %271

266:                                              ; preds = %151
  %267 = zext i32 %171 to i64
  %268 = shl i64 %145, %267
  %269 = sext i32 %167 to i64
  %270 = or i64 %268, %269
  br label %271

271:                                              ; preds = %262, %266, %143
  %272 = phi i32 [ %144, %143 ], [ %264, %262 ], [ %172, %266 ]
  %273 = phi i64 [ %145, %143 ], [ %265, %262 ], [ %270, %266 ]
  %274 = phi i8* [ %146, %143 ], [ %263, %262 ], [ %146, %266 ]
  %275 = phi i32 [ 16, %143 ], [ 0, %262 ], [ 0, %266 ]
  %276 = getelementptr inbounds i16, i16* %1, i64 8
  %277 = load i16, i16* %276, align 2
  %278 = sext i16 %277 to i32
  %279 = icmp eq i16 %277, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %271
  %281 = add nuw nsw i32 %275, 16
  br label %404

282:                                              ; preds = %271
  %283 = ashr i32 %278, 31
  %284 = add nsw i32 %283, %278
  %285 = xor i32 %284, %283
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = zext i8 %288 to i32
  %290 = add nuw nsw i32 %275, %289
  %291 = zext i8 %288 to i64
  %292 = shl nsw i64 -1, %291
  %293 = trunc i64 %292 to i32
  %294 = xor i32 %293, -1
  %295 = and i32 %284, %294
  %296 = zext i32 %290 to i64
  %297 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %296
  %298 = load i32, i32* %297, align 4
  %299 = shl i32 %298, %289
  %300 = or i32 %299, %295
  %301 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %296
  %302 = load i8, i8* %301, align 1
  %303 = sext i8 %302 to i32
  %304 = add nsw i32 %303, %289
  %305 = sub nsw i32 %272, %304
  %306 = icmp slt i32 %305, 0
  br i1 %306, label %307, label %399

307:                                              ; preds = %282
  %308 = zext i32 %272 to i64
  %309 = shl i64 %273, %308
  %310 = sub nsw i32 0, %305
  %311 = ashr i32 %300, %310
  %312 = sext i32 %311 to i64
  %313 = or i64 %309, %312
  %314 = and i64 %313, -9187201950435737472
  %315 = sub i64 -72340172838076674, %313
  %316 = and i64 %314, %315
  %317 = icmp eq i64 %316, 0
  %318 = lshr i64 %313, 56
  %319 = trunc i64 %318 to i8
  store i8 %319, i8* %274, align 1
  br i1 %317, label %373, label %320

320:                                              ; preds = %307
  %321 = getelementptr inbounds i8, i8* %274, i64 1
  store i8 0, i8* %321, align 1
  %322 = icmp eq i64 %318, 255
  %323 = select i1 %322, i64 2, i64 1
  %324 = getelementptr inbounds i8, i8* %274, i64 %323
  %325 = lshr i64 %313, 48
  %326 = trunc i64 %325 to i8
  store i8 %326, i8* %324, align 1
  %327 = getelementptr inbounds i8, i8* %324, i64 1
  store i8 0, i8* %327, align 1
  %328 = and i64 %313, 71776119061217280
  %329 = icmp eq i64 %328, 71776119061217280
  %330 = select i1 %329, i64 2, i64 1
  %331 = getelementptr inbounds i8, i8* %324, i64 %330
  %332 = lshr i64 %313, 40
  %333 = trunc i64 %332 to i8
  store i8 %333, i8* %331, align 1
  %334 = getelementptr inbounds i8, i8* %331, i64 1
  store i8 0, i8* %334, align 1
  %335 = and i64 %313, 280375465082880
  %336 = icmp eq i64 %335, 280375465082880
  %337 = select i1 %336, i64 2, i64 1
  %338 = getelementptr inbounds i8, i8* %331, i64 %337
  %339 = lshr i64 %313, 32
  %340 = trunc i64 %339 to i8
  store i8 %340, i8* %338, align 1
  %341 = getelementptr inbounds i8, i8* %338, i64 1
  store i8 0, i8* %341, align 1
  %342 = and i64 %313, 1095216660480
  %343 = icmp eq i64 %342, 1095216660480
  %344 = select i1 %343, i64 2, i64 1
  %345 = getelementptr inbounds i8, i8* %338, i64 %344
  %346 = lshr i64 %313, 24
  %347 = trunc i64 %346 to i8
  store i8 %347, i8* %345, align 1
  %348 = getelementptr inbounds i8, i8* %345, i64 1
  store i8 0, i8* %348, align 1
  %349 = and i64 %313, 4278190080
  %350 = icmp eq i64 %349, 4278190080
  %351 = select i1 %350, i64 2, i64 1
  %352 = getelementptr inbounds i8, i8* %345, i64 %351
  %353 = lshr i64 %313, 16
  %354 = trunc i64 %353 to i8
  store i8 %354, i8* %352, align 1
  %355 = getelementptr inbounds i8, i8* %352, i64 1
  store i8 0, i8* %355, align 1
  %356 = and i64 %313, 16711680
  %357 = icmp eq i64 %356, 16711680
  %358 = select i1 %357, i64 2, i64 1
  %359 = getelementptr inbounds i8, i8* %352, i64 %358
  %360 = lshr i64 %313, 8
  %361 = trunc i64 %360 to i8
  store i8 %361, i8* %359, align 1
  %362 = getelementptr inbounds i8, i8* %359, i64 1
  store i8 0, i8* %362, align 1
  %363 = and i64 %313, 65280
  %364 = icmp eq i64 %363, 65280
  %365 = select i1 %364, i64 2, i64 1
  %366 = getelementptr inbounds i8, i8* %359, i64 %365
  %367 = trunc i64 %313 to i8
  store i8 %367, i8* %366, align 1
  %368 = getelementptr inbounds i8, i8* %366, i64 1
  store i8 0, i8* %368, align 1
  %369 = and i64 %313, 255
  %370 = icmp eq i64 %369, 255
  %371 = select i1 %370, i64 2, i64 1
  %372 = getelementptr inbounds i8, i8* %366, i64 %371
  br label %395

373:                                              ; preds = %307
  %374 = lshr i64 %313, 48
  %375 = trunc i64 %374 to i8
  %376 = getelementptr inbounds i8, i8* %274, i64 1
  store i8 %375, i8* %376, align 1
  %377 = lshr i64 %313, 40
  %378 = trunc i64 %377 to i8
  %379 = getelementptr inbounds i8, i8* %274, i64 2
  store i8 %378, i8* %379, align 1
  %380 = lshr i64 %313, 32
  %381 = trunc i64 %380 to i8
  %382 = getelementptr inbounds i8, i8* %274, i64 3
  store i8 %381, i8* %382, align 1
  %383 = lshr i64 %313, 24
  %384 = trunc i64 %383 to i8
  %385 = getelementptr inbounds i8, i8* %274, i64 4
  store i8 %384, i8* %385, align 1
  %386 = lshr i64 %313, 16
  %387 = trunc i64 %386 to i8
  %388 = getelementptr inbounds i8, i8* %274, i64 5
  store i8 %387, i8* %388, align 1
  %389 = lshr i64 %313, 8
  %390 = trunc i64 %389 to i8
  %391 = getelementptr inbounds i8, i8* %274, i64 6
  store i8 %390, i8* %391, align 1
  %392 = trunc i64 %313 to i8
  %393 = getelementptr inbounds i8, i8* %274, i64 7
  store i8 %392, i8* %393, align 1
  %394 = getelementptr inbounds i8, i8* %274, i64 8
  br label %395

395:                                              ; preds = %373, %320
  %396 = phi i8* [ %372, %320 ], [ %394, %373 ]
  %397 = add nsw i32 %305, 64
  %398 = sext i32 %300 to i64
  br label %404

399:                                              ; preds = %282
  %400 = zext i32 %304 to i64
  %401 = shl i64 %273, %400
  %402 = sext i32 %300 to i64
  %403 = or i64 %401, %402
  br label %404

404:                                              ; preds = %395, %399, %280
  %405 = phi i32 [ %272, %280 ], [ %397, %395 ], [ %305, %399 ]
  %406 = phi i64 [ %273, %280 ], [ %398, %395 ], [ %403, %399 ]
  %407 = phi i8* [ %274, %280 ], [ %396, %395 ], [ %274, %399 ]
  %408 = phi i32 [ %281, %280 ], [ 0, %395 ], [ 0, %399 ]
  %409 = getelementptr inbounds i16, i16* %1, i64 16
  %410 = load i16, i16* %409, align 2
  %411 = sext i16 %410 to i32
  %412 = icmp eq i16 %410, 0
  br i1 %412, label %413, label %415

413:                                              ; preds = %404
  %414 = add nuw nsw i32 %408, 16
  br label %537

415:                                              ; preds = %404
  %416 = ashr i32 %411, 31
  %417 = add nsw i32 %416, %411
  %418 = xor i32 %417, %416
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %419
  %421 = load i8, i8* %420, align 1
  %422 = zext i8 %421 to i32
  %423 = add nuw nsw i32 %408, %422
  %424 = zext i8 %421 to i64
  %425 = shl nsw i64 -1, %424
  %426 = trunc i64 %425 to i32
  %427 = xor i32 %426, -1
  %428 = and i32 %417, %427
  %429 = sext i32 %423 to i64
  %430 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = shl i32 %431, %422
  %433 = or i32 %432, %428
  %434 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %429
  %435 = load i8, i8* %434, align 1
  %436 = sext i8 %435 to i32
  %437 = add nsw i32 %436, %422
  %438 = sub nsw i32 %405, %437
  %439 = icmp slt i32 %438, 0
  br i1 %439, label %440, label %532

440:                                              ; preds = %415
  %441 = zext i32 %405 to i64
  %442 = shl i64 %406, %441
  %443 = sub nsw i32 0, %438
  %444 = ashr i32 %433, %443
  %445 = sext i32 %444 to i64
  %446 = or i64 %442, %445
  %447 = and i64 %446, -9187201950435737472
  %448 = sub i64 -72340172838076674, %446
  %449 = and i64 %447, %448
  %450 = icmp eq i64 %449, 0
  %451 = lshr i64 %446, 56
  %452 = trunc i64 %451 to i8
  store i8 %452, i8* %407, align 1
  br i1 %450, label %506, label %453

453:                                              ; preds = %440
  %454 = getelementptr inbounds i8, i8* %407, i64 1
  store i8 0, i8* %454, align 1
  %455 = icmp eq i64 %451, 255
  %456 = select i1 %455, i64 2, i64 1
  %457 = getelementptr inbounds i8, i8* %407, i64 %456
  %458 = lshr i64 %446, 48
  %459 = trunc i64 %458 to i8
  store i8 %459, i8* %457, align 1
  %460 = getelementptr inbounds i8, i8* %457, i64 1
  store i8 0, i8* %460, align 1
  %461 = and i64 %446, 71776119061217280
  %462 = icmp eq i64 %461, 71776119061217280
  %463 = select i1 %462, i64 2, i64 1
  %464 = getelementptr inbounds i8, i8* %457, i64 %463
  %465 = lshr i64 %446, 40
  %466 = trunc i64 %465 to i8
  store i8 %466, i8* %464, align 1
  %467 = getelementptr inbounds i8, i8* %464, i64 1
  store i8 0, i8* %467, align 1
  %468 = and i64 %446, 280375465082880
  %469 = icmp eq i64 %468, 280375465082880
  %470 = select i1 %469, i64 2, i64 1
  %471 = getelementptr inbounds i8, i8* %464, i64 %470
  %472 = lshr i64 %446, 32
  %473 = trunc i64 %472 to i8
  store i8 %473, i8* %471, align 1
  %474 = getelementptr inbounds i8, i8* %471, i64 1
  store i8 0, i8* %474, align 1
  %475 = and i64 %446, 1095216660480
  %476 = icmp eq i64 %475, 1095216660480
  %477 = select i1 %476, i64 2, i64 1
  %478 = getelementptr inbounds i8, i8* %471, i64 %477
  %479 = lshr i64 %446, 24
  %480 = trunc i64 %479 to i8
  store i8 %480, i8* %478, align 1
  %481 = getelementptr inbounds i8, i8* %478, i64 1
  store i8 0, i8* %481, align 1
  %482 = and i64 %446, 4278190080
  %483 = icmp eq i64 %482, 4278190080
  %484 = select i1 %483, i64 2, i64 1
  %485 = getelementptr inbounds i8, i8* %478, i64 %484
  %486 = lshr i64 %446, 16
  %487 = trunc i64 %486 to i8
  store i8 %487, i8* %485, align 1
  %488 = getelementptr inbounds i8, i8* %485, i64 1
  store i8 0, i8* %488, align 1
  %489 = and i64 %446, 16711680
  %490 = icmp eq i64 %489, 16711680
  %491 = select i1 %490, i64 2, i64 1
  %492 = getelementptr inbounds i8, i8* %485, i64 %491
  %493 = lshr i64 %446, 8
  %494 = trunc i64 %493 to i8
  store i8 %494, i8* %492, align 1
  %495 = getelementptr inbounds i8, i8* %492, i64 1
  store i8 0, i8* %495, align 1
  %496 = and i64 %446, 65280
  %497 = icmp eq i64 %496, 65280
  %498 = select i1 %497, i64 2, i64 1
  %499 = getelementptr inbounds i8, i8* %492, i64 %498
  %500 = trunc i64 %446 to i8
  store i8 %500, i8* %499, align 1
  %501 = getelementptr inbounds i8, i8* %499, i64 1
  store i8 0, i8* %501, align 1
  %502 = and i64 %446, 255
  %503 = icmp eq i64 %502, 255
  %504 = select i1 %503, i64 2, i64 1
  %505 = getelementptr inbounds i8, i8* %499, i64 %504
  br label %528

506:                                              ; preds = %440
  %507 = lshr i64 %446, 48
  %508 = trunc i64 %507 to i8
  %509 = getelementptr inbounds i8, i8* %407, i64 1
  store i8 %508, i8* %509, align 1
  %510 = lshr i64 %446, 40
  %511 = trunc i64 %510 to i8
  %512 = getelementptr inbounds i8, i8* %407, i64 2
  store i8 %511, i8* %512, align 1
  %513 = lshr i64 %446, 32
  %514 = trunc i64 %513 to i8
  %515 = getelementptr inbounds i8, i8* %407, i64 3
  store i8 %514, i8* %515, align 1
  %516 = lshr i64 %446, 24
  %517 = trunc i64 %516 to i8
  %518 = getelementptr inbounds i8, i8* %407, i64 4
  store i8 %517, i8* %518, align 1
  %519 = lshr i64 %446, 16
  %520 = trunc i64 %519 to i8
  %521 = getelementptr inbounds i8, i8* %407, i64 5
  store i8 %520, i8* %521, align 1
  %522 = lshr i64 %446, 8
  %523 = trunc i64 %522 to i8
  %524 = getelementptr inbounds i8, i8* %407, i64 6
  store i8 %523, i8* %524, align 1
  %525 = trunc i64 %446 to i8
  %526 = getelementptr inbounds i8, i8* %407, i64 7
  store i8 %525, i8* %526, align 1
  %527 = getelementptr inbounds i8, i8* %407, i64 8
  br label %528

528:                                              ; preds = %506, %453
  %529 = phi i8* [ %505, %453 ], [ %527, %506 ]
  %530 = add nsw i32 %438, 64
  %531 = sext i32 %433 to i64
  br label %537

532:                                              ; preds = %415
  %533 = zext i32 %437 to i64
  %534 = shl i64 %406, %533
  %535 = sext i32 %433 to i64
  %536 = or i64 %534, %535
  br label %537

537:                                              ; preds = %528, %532, %413
  %538 = phi i32 [ %405, %413 ], [ %530, %528 ], [ %438, %532 ]
  %539 = phi i64 [ %406, %413 ], [ %531, %528 ], [ %536, %532 ]
  %540 = phi i8* [ %407, %413 ], [ %529, %528 ], [ %407, %532 ]
  %541 = phi i32 [ %414, %413 ], [ 0, %528 ], [ 0, %532 ]
  %542 = getelementptr inbounds i16, i16* %1, i64 9
  %543 = load i16, i16* %542, align 2
  %544 = sext i16 %543 to i32
  %545 = icmp eq i16 %543, 0
  br i1 %545, label %546, label %548

546:                                              ; preds = %537
  %547 = add nuw nsw i32 %541, 16
  br label %670

548:                                              ; preds = %537
  %549 = ashr i32 %544, 31
  %550 = add nsw i32 %549, %544
  %551 = xor i32 %550, %549
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %552
  %554 = load i8, i8* %553, align 1
  %555 = zext i8 %554 to i32
  %556 = add nuw nsw i32 %541, %555
  %557 = zext i8 %554 to i64
  %558 = shl nsw i64 -1, %557
  %559 = trunc i64 %558 to i32
  %560 = xor i32 %559, -1
  %561 = and i32 %550, %560
  %562 = sext i32 %556 to i64
  %563 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = shl i32 %564, %555
  %566 = or i32 %565, %561
  %567 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %562
  %568 = load i8, i8* %567, align 1
  %569 = sext i8 %568 to i32
  %570 = add nsw i32 %569, %555
  %571 = sub nsw i32 %538, %570
  %572 = icmp slt i32 %571, 0
  br i1 %572, label %573, label %665

573:                                              ; preds = %548
  %574 = zext i32 %538 to i64
  %575 = shl i64 %539, %574
  %576 = sub nsw i32 0, %571
  %577 = ashr i32 %566, %576
  %578 = sext i32 %577 to i64
  %579 = or i64 %575, %578
  %580 = and i64 %579, -9187201950435737472
  %581 = sub i64 -72340172838076674, %579
  %582 = and i64 %580, %581
  %583 = icmp eq i64 %582, 0
  %584 = lshr i64 %579, 56
  %585 = trunc i64 %584 to i8
  store i8 %585, i8* %540, align 1
  br i1 %583, label %639, label %586

586:                                              ; preds = %573
  %587 = getelementptr inbounds i8, i8* %540, i64 1
  store i8 0, i8* %587, align 1
  %588 = icmp eq i64 %584, 255
  %589 = select i1 %588, i64 2, i64 1
  %590 = getelementptr inbounds i8, i8* %540, i64 %589
  %591 = lshr i64 %579, 48
  %592 = trunc i64 %591 to i8
  store i8 %592, i8* %590, align 1
  %593 = getelementptr inbounds i8, i8* %590, i64 1
  store i8 0, i8* %593, align 1
  %594 = and i64 %579, 71776119061217280
  %595 = icmp eq i64 %594, 71776119061217280
  %596 = select i1 %595, i64 2, i64 1
  %597 = getelementptr inbounds i8, i8* %590, i64 %596
  %598 = lshr i64 %579, 40
  %599 = trunc i64 %598 to i8
  store i8 %599, i8* %597, align 1
  %600 = getelementptr inbounds i8, i8* %597, i64 1
  store i8 0, i8* %600, align 1
  %601 = and i64 %579, 280375465082880
  %602 = icmp eq i64 %601, 280375465082880
  %603 = select i1 %602, i64 2, i64 1
  %604 = getelementptr inbounds i8, i8* %597, i64 %603
  %605 = lshr i64 %579, 32
  %606 = trunc i64 %605 to i8
  store i8 %606, i8* %604, align 1
  %607 = getelementptr inbounds i8, i8* %604, i64 1
  store i8 0, i8* %607, align 1
  %608 = and i64 %579, 1095216660480
  %609 = icmp eq i64 %608, 1095216660480
  %610 = select i1 %609, i64 2, i64 1
  %611 = getelementptr inbounds i8, i8* %604, i64 %610
  %612 = lshr i64 %579, 24
  %613 = trunc i64 %612 to i8
  store i8 %613, i8* %611, align 1
  %614 = getelementptr inbounds i8, i8* %611, i64 1
  store i8 0, i8* %614, align 1
  %615 = and i64 %579, 4278190080
  %616 = icmp eq i64 %615, 4278190080
  %617 = select i1 %616, i64 2, i64 1
  %618 = getelementptr inbounds i8, i8* %611, i64 %617
  %619 = lshr i64 %579, 16
  %620 = trunc i64 %619 to i8
  store i8 %620, i8* %618, align 1
  %621 = getelementptr inbounds i8, i8* %618, i64 1
  store i8 0, i8* %621, align 1
  %622 = and i64 %579, 16711680
  %623 = icmp eq i64 %622, 16711680
  %624 = select i1 %623, i64 2, i64 1
  %625 = getelementptr inbounds i8, i8* %618, i64 %624
  %626 = lshr i64 %579, 8
  %627 = trunc i64 %626 to i8
  store i8 %627, i8* %625, align 1
  %628 = getelementptr inbounds i8, i8* %625, i64 1
  store i8 0, i8* %628, align 1
  %629 = and i64 %579, 65280
  %630 = icmp eq i64 %629, 65280
  %631 = select i1 %630, i64 2, i64 1
  %632 = getelementptr inbounds i8, i8* %625, i64 %631
  %633 = trunc i64 %579 to i8
  store i8 %633, i8* %632, align 1
  %634 = getelementptr inbounds i8, i8* %632, i64 1
  store i8 0, i8* %634, align 1
  %635 = and i64 %579, 255
  %636 = icmp eq i64 %635, 255
  %637 = select i1 %636, i64 2, i64 1
  %638 = getelementptr inbounds i8, i8* %632, i64 %637
  br label %661

639:                                              ; preds = %573
  %640 = lshr i64 %579, 48
  %641 = trunc i64 %640 to i8
  %642 = getelementptr inbounds i8, i8* %540, i64 1
  store i8 %641, i8* %642, align 1
  %643 = lshr i64 %579, 40
  %644 = trunc i64 %643 to i8
  %645 = getelementptr inbounds i8, i8* %540, i64 2
  store i8 %644, i8* %645, align 1
  %646 = lshr i64 %579, 32
  %647 = trunc i64 %646 to i8
  %648 = getelementptr inbounds i8, i8* %540, i64 3
  store i8 %647, i8* %648, align 1
  %649 = lshr i64 %579, 24
  %650 = trunc i64 %649 to i8
  %651 = getelementptr inbounds i8, i8* %540, i64 4
  store i8 %650, i8* %651, align 1
  %652 = lshr i64 %579, 16
  %653 = trunc i64 %652 to i8
  %654 = getelementptr inbounds i8, i8* %540, i64 5
  store i8 %653, i8* %654, align 1
  %655 = lshr i64 %579, 8
  %656 = trunc i64 %655 to i8
  %657 = getelementptr inbounds i8, i8* %540, i64 6
  store i8 %656, i8* %657, align 1
  %658 = trunc i64 %579 to i8
  %659 = getelementptr inbounds i8, i8* %540, i64 7
  store i8 %658, i8* %659, align 1
  %660 = getelementptr inbounds i8, i8* %540, i64 8
  br label %661

661:                                              ; preds = %639, %586
  %662 = phi i8* [ %638, %586 ], [ %660, %639 ]
  %663 = add nsw i32 %571, 64
  %664 = sext i32 %566 to i64
  br label %670

665:                                              ; preds = %548
  %666 = zext i32 %570 to i64
  %667 = shl i64 %539, %666
  %668 = sext i32 %566 to i64
  %669 = or i64 %667, %668
  br label %670

670:                                              ; preds = %661, %665, %546
  %671 = phi i32 [ %538, %546 ], [ %663, %661 ], [ %571, %665 ]
  %672 = phi i64 [ %539, %546 ], [ %664, %661 ], [ %669, %665 ]
  %673 = phi i8* [ %540, %546 ], [ %662, %661 ], [ %540, %665 ]
  %674 = phi i32 [ %547, %546 ], [ 0, %661 ], [ 0, %665 ]
  %675 = getelementptr inbounds i16, i16* %1, i64 2
  %676 = load i16, i16* %675, align 2
  %677 = sext i16 %676 to i32
  %678 = icmp eq i16 %676, 0
  br i1 %678, label %679, label %681

679:                                              ; preds = %670
  %680 = add nuw nsw i32 %674, 16
  br label %803

681:                                              ; preds = %670
  %682 = ashr i32 %677, 31
  %683 = add nsw i32 %682, %677
  %684 = xor i32 %683, %682
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %685
  %687 = load i8, i8* %686, align 1
  %688 = zext i8 %687 to i32
  %689 = add nuw nsw i32 %674, %688
  %690 = zext i8 %687 to i64
  %691 = shl nsw i64 -1, %690
  %692 = trunc i64 %691 to i32
  %693 = xor i32 %692, -1
  %694 = and i32 %683, %693
  %695 = sext i32 %689 to i64
  %696 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %695
  %697 = load i32, i32* %696, align 4
  %698 = shl i32 %697, %688
  %699 = or i32 %698, %694
  %700 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %695
  %701 = load i8, i8* %700, align 1
  %702 = sext i8 %701 to i32
  %703 = add nsw i32 %702, %688
  %704 = sub nsw i32 %671, %703
  %705 = icmp slt i32 %704, 0
  br i1 %705, label %706, label %798

706:                                              ; preds = %681
  %707 = zext i32 %671 to i64
  %708 = shl i64 %672, %707
  %709 = sub nsw i32 0, %704
  %710 = ashr i32 %699, %709
  %711 = sext i32 %710 to i64
  %712 = or i64 %708, %711
  %713 = and i64 %712, -9187201950435737472
  %714 = sub i64 -72340172838076674, %712
  %715 = and i64 %713, %714
  %716 = icmp eq i64 %715, 0
  %717 = lshr i64 %712, 56
  %718 = trunc i64 %717 to i8
  store i8 %718, i8* %673, align 1
  br i1 %716, label %772, label %719

719:                                              ; preds = %706
  %720 = getelementptr inbounds i8, i8* %673, i64 1
  store i8 0, i8* %720, align 1
  %721 = icmp eq i64 %717, 255
  %722 = select i1 %721, i64 2, i64 1
  %723 = getelementptr inbounds i8, i8* %673, i64 %722
  %724 = lshr i64 %712, 48
  %725 = trunc i64 %724 to i8
  store i8 %725, i8* %723, align 1
  %726 = getelementptr inbounds i8, i8* %723, i64 1
  store i8 0, i8* %726, align 1
  %727 = and i64 %712, 71776119061217280
  %728 = icmp eq i64 %727, 71776119061217280
  %729 = select i1 %728, i64 2, i64 1
  %730 = getelementptr inbounds i8, i8* %723, i64 %729
  %731 = lshr i64 %712, 40
  %732 = trunc i64 %731 to i8
  store i8 %732, i8* %730, align 1
  %733 = getelementptr inbounds i8, i8* %730, i64 1
  store i8 0, i8* %733, align 1
  %734 = and i64 %712, 280375465082880
  %735 = icmp eq i64 %734, 280375465082880
  %736 = select i1 %735, i64 2, i64 1
  %737 = getelementptr inbounds i8, i8* %730, i64 %736
  %738 = lshr i64 %712, 32
  %739 = trunc i64 %738 to i8
  store i8 %739, i8* %737, align 1
  %740 = getelementptr inbounds i8, i8* %737, i64 1
  store i8 0, i8* %740, align 1
  %741 = and i64 %712, 1095216660480
  %742 = icmp eq i64 %741, 1095216660480
  %743 = select i1 %742, i64 2, i64 1
  %744 = getelementptr inbounds i8, i8* %737, i64 %743
  %745 = lshr i64 %712, 24
  %746 = trunc i64 %745 to i8
  store i8 %746, i8* %744, align 1
  %747 = getelementptr inbounds i8, i8* %744, i64 1
  store i8 0, i8* %747, align 1
  %748 = and i64 %712, 4278190080
  %749 = icmp eq i64 %748, 4278190080
  %750 = select i1 %749, i64 2, i64 1
  %751 = getelementptr inbounds i8, i8* %744, i64 %750
  %752 = lshr i64 %712, 16
  %753 = trunc i64 %752 to i8
  store i8 %753, i8* %751, align 1
  %754 = getelementptr inbounds i8, i8* %751, i64 1
  store i8 0, i8* %754, align 1
  %755 = and i64 %712, 16711680
  %756 = icmp eq i64 %755, 16711680
  %757 = select i1 %756, i64 2, i64 1
  %758 = getelementptr inbounds i8, i8* %751, i64 %757
  %759 = lshr i64 %712, 8
  %760 = trunc i64 %759 to i8
  store i8 %760, i8* %758, align 1
  %761 = getelementptr inbounds i8, i8* %758, i64 1
  store i8 0, i8* %761, align 1
  %762 = and i64 %712, 65280
  %763 = icmp eq i64 %762, 65280
  %764 = select i1 %763, i64 2, i64 1
  %765 = getelementptr inbounds i8, i8* %758, i64 %764
  %766 = trunc i64 %712 to i8
  store i8 %766, i8* %765, align 1
  %767 = getelementptr inbounds i8, i8* %765, i64 1
  store i8 0, i8* %767, align 1
  %768 = and i64 %712, 255
  %769 = icmp eq i64 %768, 255
  %770 = select i1 %769, i64 2, i64 1
  %771 = getelementptr inbounds i8, i8* %765, i64 %770
  br label %794

772:                                              ; preds = %706
  %773 = lshr i64 %712, 48
  %774 = trunc i64 %773 to i8
  %775 = getelementptr inbounds i8, i8* %673, i64 1
  store i8 %774, i8* %775, align 1
  %776 = lshr i64 %712, 40
  %777 = trunc i64 %776 to i8
  %778 = getelementptr inbounds i8, i8* %673, i64 2
  store i8 %777, i8* %778, align 1
  %779 = lshr i64 %712, 32
  %780 = trunc i64 %779 to i8
  %781 = getelementptr inbounds i8, i8* %673, i64 3
  store i8 %780, i8* %781, align 1
  %782 = lshr i64 %712, 24
  %783 = trunc i64 %782 to i8
  %784 = getelementptr inbounds i8, i8* %673, i64 4
  store i8 %783, i8* %784, align 1
  %785 = lshr i64 %712, 16
  %786 = trunc i64 %785 to i8
  %787 = getelementptr inbounds i8, i8* %673, i64 5
  store i8 %786, i8* %787, align 1
  %788 = lshr i64 %712, 8
  %789 = trunc i64 %788 to i8
  %790 = getelementptr inbounds i8, i8* %673, i64 6
  store i8 %789, i8* %790, align 1
  %791 = trunc i64 %712 to i8
  %792 = getelementptr inbounds i8, i8* %673, i64 7
  store i8 %791, i8* %792, align 1
  %793 = getelementptr inbounds i8, i8* %673, i64 8
  br label %794

794:                                              ; preds = %772, %719
  %795 = phi i8* [ %771, %719 ], [ %793, %772 ]
  %796 = add nsw i32 %704, 64
  %797 = sext i32 %699 to i64
  br label %803

798:                                              ; preds = %681
  %799 = zext i32 %703 to i64
  %800 = shl i64 %672, %799
  %801 = sext i32 %699 to i64
  %802 = or i64 %800, %801
  br label %803

803:                                              ; preds = %794, %798, %679
  %804 = phi i32 [ %671, %679 ], [ %796, %794 ], [ %704, %798 ]
  %805 = phi i64 [ %672, %679 ], [ %797, %794 ], [ %802, %798 ]
  %806 = phi i8* [ %673, %679 ], [ %795, %794 ], [ %673, %798 ]
  %807 = phi i32 [ %680, %679 ], [ 0, %794 ], [ 0, %798 ]
  %808 = getelementptr inbounds i16, i16* %1, i64 3
  %809 = load i16, i16* %808, align 2
  %810 = sext i16 %809 to i32
  %811 = icmp eq i16 %809, 0
  br i1 %811, label %812, label %814

812:                                              ; preds = %803
  %813 = add nuw nsw i32 %807, 16
  br label %936

814:                                              ; preds = %803
  %815 = ashr i32 %810, 31
  %816 = add nsw i32 %815, %810
  %817 = xor i32 %816, %815
  %818 = sext i32 %817 to i64
  %819 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %818
  %820 = load i8, i8* %819, align 1
  %821 = zext i8 %820 to i32
  %822 = add nuw nsw i32 %807, %821
  %823 = zext i8 %820 to i64
  %824 = shl nsw i64 -1, %823
  %825 = trunc i64 %824 to i32
  %826 = xor i32 %825, -1
  %827 = and i32 %816, %826
  %828 = sext i32 %822 to i64
  %829 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %828
  %830 = load i32, i32* %829, align 4
  %831 = shl i32 %830, %821
  %832 = or i32 %831, %827
  %833 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %828
  %834 = load i8, i8* %833, align 1
  %835 = sext i8 %834 to i32
  %836 = add nsw i32 %835, %821
  %837 = sub nsw i32 %804, %836
  %838 = icmp slt i32 %837, 0
  br i1 %838, label %839, label %931

839:                                              ; preds = %814
  %840 = zext i32 %804 to i64
  %841 = shl i64 %805, %840
  %842 = sub nsw i32 0, %837
  %843 = ashr i32 %832, %842
  %844 = sext i32 %843 to i64
  %845 = or i64 %841, %844
  %846 = and i64 %845, -9187201950435737472
  %847 = sub i64 -72340172838076674, %845
  %848 = and i64 %846, %847
  %849 = icmp eq i64 %848, 0
  %850 = lshr i64 %845, 56
  %851 = trunc i64 %850 to i8
  store i8 %851, i8* %806, align 1
  br i1 %849, label %905, label %852

852:                                              ; preds = %839
  %853 = getelementptr inbounds i8, i8* %806, i64 1
  store i8 0, i8* %853, align 1
  %854 = icmp eq i64 %850, 255
  %855 = select i1 %854, i64 2, i64 1
  %856 = getelementptr inbounds i8, i8* %806, i64 %855
  %857 = lshr i64 %845, 48
  %858 = trunc i64 %857 to i8
  store i8 %858, i8* %856, align 1
  %859 = getelementptr inbounds i8, i8* %856, i64 1
  store i8 0, i8* %859, align 1
  %860 = and i64 %845, 71776119061217280
  %861 = icmp eq i64 %860, 71776119061217280
  %862 = select i1 %861, i64 2, i64 1
  %863 = getelementptr inbounds i8, i8* %856, i64 %862
  %864 = lshr i64 %845, 40
  %865 = trunc i64 %864 to i8
  store i8 %865, i8* %863, align 1
  %866 = getelementptr inbounds i8, i8* %863, i64 1
  store i8 0, i8* %866, align 1
  %867 = and i64 %845, 280375465082880
  %868 = icmp eq i64 %867, 280375465082880
  %869 = select i1 %868, i64 2, i64 1
  %870 = getelementptr inbounds i8, i8* %863, i64 %869
  %871 = lshr i64 %845, 32
  %872 = trunc i64 %871 to i8
  store i8 %872, i8* %870, align 1
  %873 = getelementptr inbounds i8, i8* %870, i64 1
  store i8 0, i8* %873, align 1
  %874 = and i64 %845, 1095216660480
  %875 = icmp eq i64 %874, 1095216660480
  %876 = select i1 %875, i64 2, i64 1
  %877 = getelementptr inbounds i8, i8* %870, i64 %876
  %878 = lshr i64 %845, 24
  %879 = trunc i64 %878 to i8
  store i8 %879, i8* %877, align 1
  %880 = getelementptr inbounds i8, i8* %877, i64 1
  store i8 0, i8* %880, align 1
  %881 = and i64 %845, 4278190080
  %882 = icmp eq i64 %881, 4278190080
  %883 = select i1 %882, i64 2, i64 1
  %884 = getelementptr inbounds i8, i8* %877, i64 %883
  %885 = lshr i64 %845, 16
  %886 = trunc i64 %885 to i8
  store i8 %886, i8* %884, align 1
  %887 = getelementptr inbounds i8, i8* %884, i64 1
  store i8 0, i8* %887, align 1
  %888 = and i64 %845, 16711680
  %889 = icmp eq i64 %888, 16711680
  %890 = select i1 %889, i64 2, i64 1
  %891 = getelementptr inbounds i8, i8* %884, i64 %890
  %892 = lshr i64 %845, 8
  %893 = trunc i64 %892 to i8
  store i8 %893, i8* %891, align 1
  %894 = getelementptr inbounds i8, i8* %891, i64 1
  store i8 0, i8* %894, align 1
  %895 = and i64 %845, 65280
  %896 = icmp eq i64 %895, 65280
  %897 = select i1 %896, i64 2, i64 1
  %898 = getelementptr inbounds i8, i8* %891, i64 %897
  %899 = trunc i64 %845 to i8
  store i8 %899, i8* %898, align 1
  %900 = getelementptr inbounds i8, i8* %898, i64 1
  store i8 0, i8* %900, align 1
  %901 = and i64 %845, 255
  %902 = icmp eq i64 %901, 255
  %903 = select i1 %902, i64 2, i64 1
  %904 = getelementptr inbounds i8, i8* %898, i64 %903
  br label %927

905:                                              ; preds = %839
  %906 = lshr i64 %845, 48
  %907 = trunc i64 %906 to i8
  %908 = getelementptr inbounds i8, i8* %806, i64 1
  store i8 %907, i8* %908, align 1
  %909 = lshr i64 %845, 40
  %910 = trunc i64 %909 to i8
  %911 = getelementptr inbounds i8, i8* %806, i64 2
  store i8 %910, i8* %911, align 1
  %912 = lshr i64 %845, 32
  %913 = trunc i64 %912 to i8
  %914 = getelementptr inbounds i8, i8* %806, i64 3
  store i8 %913, i8* %914, align 1
  %915 = lshr i64 %845, 24
  %916 = trunc i64 %915 to i8
  %917 = getelementptr inbounds i8, i8* %806, i64 4
  store i8 %916, i8* %917, align 1
  %918 = lshr i64 %845, 16
  %919 = trunc i64 %918 to i8
  %920 = getelementptr inbounds i8, i8* %806, i64 5
  store i8 %919, i8* %920, align 1
  %921 = lshr i64 %845, 8
  %922 = trunc i64 %921 to i8
  %923 = getelementptr inbounds i8, i8* %806, i64 6
  store i8 %922, i8* %923, align 1
  %924 = trunc i64 %845 to i8
  %925 = getelementptr inbounds i8, i8* %806, i64 7
  store i8 %924, i8* %925, align 1
  %926 = getelementptr inbounds i8, i8* %806, i64 8
  br label %927

927:                                              ; preds = %905, %852
  %928 = phi i8* [ %904, %852 ], [ %926, %905 ]
  %929 = add nsw i32 %837, 64
  %930 = sext i32 %832 to i64
  br label %936

931:                                              ; preds = %814
  %932 = zext i32 %836 to i64
  %933 = shl i64 %805, %932
  %934 = sext i32 %832 to i64
  %935 = or i64 %933, %934
  br label %936

936:                                              ; preds = %927, %931, %812
  %937 = phi i32 [ %804, %812 ], [ %929, %927 ], [ %837, %931 ]
  %938 = phi i64 [ %805, %812 ], [ %930, %927 ], [ %935, %931 ]
  %939 = phi i8* [ %806, %812 ], [ %928, %927 ], [ %806, %931 ]
  %940 = phi i32 [ %813, %812 ], [ 0, %927 ], [ 0, %931 ]
  %941 = getelementptr inbounds i16, i16* %1, i64 10
  %942 = load i16, i16* %941, align 2
  %943 = sext i16 %942 to i32
  %944 = icmp eq i16 %942, 0
  br i1 %944, label %945, label %947

945:                                              ; preds = %936
  %946 = add nuw nsw i32 %940, 16
  br label %1069

947:                                              ; preds = %936
  %948 = ashr i32 %943, 31
  %949 = add nsw i32 %948, %943
  %950 = xor i32 %949, %948
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %951
  %953 = load i8, i8* %952, align 1
  %954 = zext i8 %953 to i32
  %955 = add nuw nsw i32 %940, %954
  %956 = zext i8 %953 to i64
  %957 = shl nsw i64 -1, %956
  %958 = trunc i64 %957 to i32
  %959 = xor i32 %958, -1
  %960 = and i32 %949, %959
  %961 = sext i32 %955 to i64
  %962 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %961
  %963 = load i32, i32* %962, align 4
  %964 = shl i32 %963, %954
  %965 = or i32 %964, %960
  %966 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %961
  %967 = load i8, i8* %966, align 1
  %968 = sext i8 %967 to i32
  %969 = add nsw i32 %968, %954
  %970 = sub nsw i32 %937, %969
  %971 = icmp slt i32 %970, 0
  br i1 %971, label %972, label %1064

972:                                              ; preds = %947
  %973 = zext i32 %937 to i64
  %974 = shl i64 %938, %973
  %975 = sub nsw i32 0, %970
  %976 = ashr i32 %965, %975
  %977 = sext i32 %976 to i64
  %978 = or i64 %974, %977
  %979 = and i64 %978, -9187201950435737472
  %980 = sub i64 -72340172838076674, %978
  %981 = and i64 %979, %980
  %982 = icmp eq i64 %981, 0
  %983 = lshr i64 %978, 56
  %984 = trunc i64 %983 to i8
  store i8 %984, i8* %939, align 1
  br i1 %982, label %1038, label %985

985:                                              ; preds = %972
  %986 = getelementptr inbounds i8, i8* %939, i64 1
  store i8 0, i8* %986, align 1
  %987 = icmp eq i64 %983, 255
  %988 = select i1 %987, i64 2, i64 1
  %989 = getelementptr inbounds i8, i8* %939, i64 %988
  %990 = lshr i64 %978, 48
  %991 = trunc i64 %990 to i8
  store i8 %991, i8* %989, align 1
  %992 = getelementptr inbounds i8, i8* %989, i64 1
  store i8 0, i8* %992, align 1
  %993 = and i64 %978, 71776119061217280
  %994 = icmp eq i64 %993, 71776119061217280
  %995 = select i1 %994, i64 2, i64 1
  %996 = getelementptr inbounds i8, i8* %989, i64 %995
  %997 = lshr i64 %978, 40
  %998 = trunc i64 %997 to i8
  store i8 %998, i8* %996, align 1
  %999 = getelementptr inbounds i8, i8* %996, i64 1
  store i8 0, i8* %999, align 1
  %1000 = and i64 %978, 280375465082880
  %1001 = icmp eq i64 %1000, 280375465082880
  %1002 = select i1 %1001, i64 2, i64 1
  %1003 = getelementptr inbounds i8, i8* %996, i64 %1002
  %1004 = lshr i64 %978, 32
  %1005 = trunc i64 %1004 to i8
  store i8 %1005, i8* %1003, align 1
  %1006 = getelementptr inbounds i8, i8* %1003, i64 1
  store i8 0, i8* %1006, align 1
  %1007 = and i64 %978, 1095216660480
  %1008 = icmp eq i64 %1007, 1095216660480
  %1009 = select i1 %1008, i64 2, i64 1
  %1010 = getelementptr inbounds i8, i8* %1003, i64 %1009
  %1011 = lshr i64 %978, 24
  %1012 = trunc i64 %1011 to i8
  store i8 %1012, i8* %1010, align 1
  %1013 = getelementptr inbounds i8, i8* %1010, i64 1
  store i8 0, i8* %1013, align 1
  %1014 = and i64 %978, 4278190080
  %1015 = icmp eq i64 %1014, 4278190080
  %1016 = select i1 %1015, i64 2, i64 1
  %1017 = getelementptr inbounds i8, i8* %1010, i64 %1016
  %1018 = lshr i64 %978, 16
  %1019 = trunc i64 %1018 to i8
  store i8 %1019, i8* %1017, align 1
  %1020 = getelementptr inbounds i8, i8* %1017, i64 1
  store i8 0, i8* %1020, align 1
  %1021 = and i64 %978, 16711680
  %1022 = icmp eq i64 %1021, 16711680
  %1023 = select i1 %1022, i64 2, i64 1
  %1024 = getelementptr inbounds i8, i8* %1017, i64 %1023
  %1025 = lshr i64 %978, 8
  %1026 = trunc i64 %1025 to i8
  store i8 %1026, i8* %1024, align 1
  %1027 = getelementptr inbounds i8, i8* %1024, i64 1
  store i8 0, i8* %1027, align 1
  %1028 = and i64 %978, 65280
  %1029 = icmp eq i64 %1028, 65280
  %1030 = select i1 %1029, i64 2, i64 1
  %1031 = getelementptr inbounds i8, i8* %1024, i64 %1030
  %1032 = trunc i64 %978 to i8
  store i8 %1032, i8* %1031, align 1
  %1033 = getelementptr inbounds i8, i8* %1031, i64 1
  store i8 0, i8* %1033, align 1
  %1034 = and i64 %978, 255
  %1035 = icmp eq i64 %1034, 255
  %1036 = select i1 %1035, i64 2, i64 1
  %1037 = getelementptr inbounds i8, i8* %1031, i64 %1036
  br label %1060

1038:                                             ; preds = %972
  %1039 = lshr i64 %978, 48
  %1040 = trunc i64 %1039 to i8
  %1041 = getelementptr inbounds i8, i8* %939, i64 1
  store i8 %1040, i8* %1041, align 1
  %1042 = lshr i64 %978, 40
  %1043 = trunc i64 %1042 to i8
  %1044 = getelementptr inbounds i8, i8* %939, i64 2
  store i8 %1043, i8* %1044, align 1
  %1045 = lshr i64 %978, 32
  %1046 = trunc i64 %1045 to i8
  %1047 = getelementptr inbounds i8, i8* %939, i64 3
  store i8 %1046, i8* %1047, align 1
  %1048 = lshr i64 %978, 24
  %1049 = trunc i64 %1048 to i8
  %1050 = getelementptr inbounds i8, i8* %939, i64 4
  store i8 %1049, i8* %1050, align 1
  %1051 = lshr i64 %978, 16
  %1052 = trunc i64 %1051 to i8
  %1053 = getelementptr inbounds i8, i8* %939, i64 5
  store i8 %1052, i8* %1053, align 1
  %1054 = lshr i64 %978, 8
  %1055 = trunc i64 %1054 to i8
  %1056 = getelementptr inbounds i8, i8* %939, i64 6
  store i8 %1055, i8* %1056, align 1
  %1057 = trunc i64 %978 to i8
  %1058 = getelementptr inbounds i8, i8* %939, i64 7
  store i8 %1057, i8* %1058, align 1
  %1059 = getelementptr inbounds i8, i8* %939, i64 8
  br label %1060

1060:                                             ; preds = %1038, %985
  %1061 = phi i8* [ %1037, %985 ], [ %1059, %1038 ]
  %1062 = add nsw i32 %970, 64
  %1063 = sext i32 %965 to i64
  br label %1069

1064:                                             ; preds = %947
  %1065 = zext i32 %969 to i64
  %1066 = shl i64 %938, %1065
  %1067 = sext i32 %965 to i64
  %1068 = or i64 %1066, %1067
  br label %1069

1069:                                             ; preds = %1060, %1064, %945
  %1070 = phi i32 [ %937, %945 ], [ %1062, %1060 ], [ %970, %1064 ]
  %1071 = phi i64 [ %938, %945 ], [ %1063, %1060 ], [ %1068, %1064 ]
  %1072 = phi i8* [ %939, %945 ], [ %1061, %1060 ], [ %939, %1064 ]
  %1073 = phi i32 [ %946, %945 ], [ 0, %1060 ], [ 0, %1064 ]
  %1074 = getelementptr inbounds i16, i16* %1, i64 17
  %1075 = load i16, i16* %1074, align 2
  %1076 = sext i16 %1075 to i32
  %1077 = icmp eq i16 %1075, 0
  br i1 %1077, label %1078, label %1080

1078:                                             ; preds = %1069
  %1079 = add nuw nsw i32 %1073, 16
  br label %1202

1080:                                             ; preds = %1069
  %1081 = ashr i32 %1076, 31
  %1082 = add nsw i32 %1081, %1076
  %1083 = xor i32 %1082, %1081
  %1084 = sext i32 %1083 to i64
  %1085 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %1084
  %1086 = load i8, i8* %1085, align 1
  %1087 = zext i8 %1086 to i32
  %1088 = add nuw nsw i32 %1073, %1087
  %1089 = zext i8 %1086 to i64
  %1090 = shl nsw i64 -1, %1089
  %1091 = trunc i64 %1090 to i32
  %1092 = xor i32 %1091, -1
  %1093 = and i32 %1082, %1092
  %1094 = sext i32 %1088 to i64
  %1095 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %1094
  %1096 = load i32, i32* %1095, align 4
  %1097 = shl i32 %1096, %1087
  %1098 = or i32 %1097, %1093
  %1099 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %1094
  %1100 = load i8, i8* %1099, align 1
  %1101 = sext i8 %1100 to i32
  %1102 = add nsw i32 %1101, %1087
  %1103 = sub nsw i32 %1070, %1102
  %1104 = icmp slt i32 %1103, 0
  br i1 %1104, label %1105, label %1197

1105:                                             ; preds = %1080
  %1106 = zext i32 %1070 to i64
  %1107 = shl i64 %1071, %1106
  %1108 = sub nsw i32 0, %1103
  %1109 = ashr i32 %1098, %1108
  %1110 = sext i32 %1109 to i64
  %1111 = or i64 %1107, %1110
  %1112 = and i64 %1111, -9187201950435737472
  %1113 = sub i64 -72340172838076674, %1111
  %1114 = and i64 %1112, %1113
  %1115 = icmp eq i64 %1114, 0
  %1116 = lshr i64 %1111, 56
  %1117 = trunc i64 %1116 to i8
  store i8 %1117, i8* %1072, align 1
  br i1 %1115, label %1171, label %1118

1118:                                             ; preds = %1105
  %1119 = getelementptr inbounds i8, i8* %1072, i64 1
  store i8 0, i8* %1119, align 1
  %1120 = icmp eq i64 %1116, 255
  %1121 = select i1 %1120, i64 2, i64 1
  %1122 = getelementptr inbounds i8, i8* %1072, i64 %1121
  %1123 = lshr i64 %1111, 48
  %1124 = trunc i64 %1123 to i8
  store i8 %1124, i8* %1122, align 1
  %1125 = getelementptr inbounds i8, i8* %1122, i64 1
  store i8 0, i8* %1125, align 1
  %1126 = and i64 %1111, 71776119061217280
  %1127 = icmp eq i64 %1126, 71776119061217280
  %1128 = select i1 %1127, i64 2, i64 1
  %1129 = getelementptr inbounds i8, i8* %1122, i64 %1128
  %1130 = lshr i64 %1111, 40
  %1131 = trunc i64 %1130 to i8
  store i8 %1131, i8* %1129, align 1
  %1132 = getelementptr inbounds i8, i8* %1129, i64 1
  store i8 0, i8* %1132, align 1
  %1133 = and i64 %1111, 280375465082880
  %1134 = icmp eq i64 %1133, 280375465082880
  %1135 = select i1 %1134, i64 2, i64 1
  %1136 = getelementptr inbounds i8, i8* %1129, i64 %1135
  %1137 = lshr i64 %1111, 32
  %1138 = trunc i64 %1137 to i8
  store i8 %1138, i8* %1136, align 1
  %1139 = getelementptr inbounds i8, i8* %1136, i64 1
  store i8 0, i8* %1139, align 1
  %1140 = and i64 %1111, 1095216660480
  %1141 = icmp eq i64 %1140, 1095216660480
  %1142 = select i1 %1141, i64 2, i64 1
  %1143 = getelementptr inbounds i8, i8* %1136, i64 %1142
  %1144 = lshr i64 %1111, 24
  %1145 = trunc i64 %1144 to i8
  store i8 %1145, i8* %1143, align 1
  %1146 = getelementptr inbounds i8, i8* %1143, i64 1
  store i8 0, i8* %1146, align 1
  %1147 = and i64 %1111, 4278190080
  %1148 = icmp eq i64 %1147, 4278190080
  %1149 = select i1 %1148, i64 2, i64 1
  %1150 = getelementptr inbounds i8, i8* %1143, i64 %1149
  %1151 = lshr i64 %1111, 16
  %1152 = trunc i64 %1151 to i8
  store i8 %1152, i8* %1150, align 1
  %1153 = getelementptr inbounds i8, i8* %1150, i64 1
  store i8 0, i8* %1153, align 1
  %1154 = and i64 %1111, 16711680
  %1155 = icmp eq i64 %1154, 16711680
  %1156 = select i1 %1155, i64 2, i64 1
  %1157 = getelementptr inbounds i8, i8* %1150, i64 %1156
  %1158 = lshr i64 %1111, 8
  %1159 = trunc i64 %1158 to i8
  store i8 %1159, i8* %1157, align 1
  %1160 = getelementptr inbounds i8, i8* %1157, i64 1
  store i8 0, i8* %1160, align 1
  %1161 = and i64 %1111, 65280
  %1162 = icmp eq i64 %1161, 65280
  %1163 = select i1 %1162, i64 2, i64 1
  %1164 = getelementptr inbounds i8, i8* %1157, i64 %1163
  %1165 = trunc i64 %1111 to i8
  store i8 %1165, i8* %1164, align 1
  %1166 = getelementptr inbounds i8, i8* %1164, i64 1
  store i8 0, i8* %1166, align 1
  %1167 = and i64 %1111, 255
  %1168 = icmp eq i64 %1167, 255
  %1169 = select i1 %1168, i64 2, i64 1
  %1170 = getelementptr inbounds i8, i8* %1164, i64 %1169
  br label %1193

1171:                                             ; preds = %1105
  %1172 = lshr i64 %1111, 48
  %1173 = trunc i64 %1172 to i8
  %1174 = getelementptr inbounds i8, i8* %1072, i64 1
  store i8 %1173, i8* %1174, align 1
  %1175 = lshr i64 %1111, 40
  %1176 = trunc i64 %1175 to i8
  %1177 = getelementptr inbounds i8, i8* %1072, i64 2
  store i8 %1176, i8* %1177, align 1
  %1178 = lshr i64 %1111, 32
  %1179 = trunc i64 %1178 to i8
  %1180 = getelementptr inbounds i8, i8* %1072, i64 3
  store i8 %1179, i8* %1180, align 1
  %1181 = lshr i64 %1111, 24
  %1182 = trunc i64 %1181 to i8
  %1183 = getelementptr inbounds i8, i8* %1072, i64 4
  store i8 %1182, i8* %1183, align 1
  %1184 = lshr i64 %1111, 16
  %1185 = trunc i64 %1184 to i8
  %1186 = getelementptr inbounds i8, i8* %1072, i64 5
  store i8 %1185, i8* %1186, align 1
  %1187 = lshr i64 %1111, 8
  %1188 = trunc i64 %1187 to i8
  %1189 = getelementptr inbounds i8, i8* %1072, i64 6
  store i8 %1188, i8* %1189, align 1
  %1190 = trunc i64 %1111 to i8
  %1191 = getelementptr inbounds i8, i8* %1072, i64 7
  store i8 %1190, i8* %1191, align 1
  %1192 = getelementptr inbounds i8, i8* %1072, i64 8
  br label %1193

1193:                                             ; preds = %1171, %1118
  %1194 = phi i8* [ %1170, %1118 ], [ %1192, %1171 ]
  %1195 = add nsw i32 %1103, 64
  %1196 = sext i32 %1098 to i64
  br label %1202

1197:                                             ; preds = %1080
  %1198 = zext i32 %1102 to i64
  %1199 = shl i64 %1071, %1198
  %1200 = sext i32 %1098 to i64
  %1201 = or i64 %1199, %1200
  br label %1202

1202:                                             ; preds = %1193, %1197, %1078
  %1203 = phi i32 [ %1070, %1078 ], [ %1195, %1193 ], [ %1103, %1197 ]
  %1204 = phi i64 [ %1071, %1078 ], [ %1196, %1193 ], [ %1201, %1197 ]
  %1205 = phi i8* [ %1072, %1078 ], [ %1194, %1193 ], [ %1072, %1197 ]
  %1206 = phi i32 [ %1079, %1078 ], [ 0, %1193 ], [ 0, %1197 ]
  %1207 = getelementptr inbounds i16, i16* %1, i64 24
  %1208 = load i16, i16* %1207, align 2
  %1209 = sext i16 %1208 to i32
  %1210 = icmp eq i16 %1208, 0
  br i1 %1210, label %1211, label %1213

1211:                                             ; preds = %1202
  %1212 = add nuw nsw i32 %1206, 16
  br label %1335

1213:                                             ; preds = %1202
  %1214 = ashr i32 %1209, 31
  %1215 = add nsw i32 %1214, %1209
  %1216 = xor i32 %1215, %1214
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %1217
  %1219 = load i8, i8* %1218, align 1
  %1220 = zext i8 %1219 to i32
  %1221 = add nuw nsw i32 %1206, %1220
  %1222 = zext i8 %1219 to i64
  %1223 = shl nsw i64 -1, %1222
  %1224 = trunc i64 %1223 to i32
  %1225 = xor i32 %1224, -1
  %1226 = and i32 %1215, %1225
  %1227 = sext i32 %1221 to i64
  %1228 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %1227
  %1229 = load i32, i32* %1228, align 4
  %1230 = shl i32 %1229, %1220
  %1231 = or i32 %1230, %1226
  %1232 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %1227
  %1233 = load i8, i8* %1232, align 1
  %1234 = sext i8 %1233 to i32
  %1235 = add nsw i32 %1234, %1220
  %1236 = sub nsw i32 %1203, %1235
  %1237 = icmp slt i32 %1236, 0
  br i1 %1237, label %1238, label %1330

1238:                                             ; preds = %1213
  %1239 = zext i32 %1203 to i64
  %1240 = shl i64 %1204, %1239
  %1241 = sub nsw i32 0, %1236
  %1242 = ashr i32 %1231, %1241
  %1243 = sext i32 %1242 to i64
  %1244 = or i64 %1240, %1243
  %1245 = and i64 %1244, -9187201950435737472
  %1246 = sub i64 -72340172838076674, %1244
  %1247 = and i64 %1245, %1246
  %1248 = icmp eq i64 %1247, 0
  %1249 = lshr i64 %1244, 56
  %1250 = trunc i64 %1249 to i8
  store i8 %1250, i8* %1205, align 1
  br i1 %1248, label %1304, label %1251

1251:                                             ; preds = %1238
  %1252 = getelementptr inbounds i8, i8* %1205, i64 1
  store i8 0, i8* %1252, align 1
  %1253 = icmp eq i64 %1249, 255
  %1254 = select i1 %1253, i64 2, i64 1
  %1255 = getelementptr inbounds i8, i8* %1205, i64 %1254
  %1256 = lshr i64 %1244, 48
  %1257 = trunc i64 %1256 to i8
  store i8 %1257, i8* %1255, align 1
  %1258 = getelementptr inbounds i8, i8* %1255, i64 1
  store i8 0, i8* %1258, align 1
  %1259 = and i64 %1244, 71776119061217280
  %1260 = icmp eq i64 %1259, 71776119061217280
  %1261 = select i1 %1260, i64 2, i64 1
  %1262 = getelementptr inbounds i8, i8* %1255, i64 %1261
  %1263 = lshr i64 %1244, 40
  %1264 = trunc i64 %1263 to i8
  store i8 %1264, i8* %1262, align 1
  %1265 = getelementptr inbounds i8, i8* %1262, i64 1
  store i8 0, i8* %1265, align 1
  %1266 = and i64 %1244, 280375465082880
  %1267 = icmp eq i64 %1266, 280375465082880
  %1268 = select i1 %1267, i64 2, i64 1
  %1269 = getelementptr inbounds i8, i8* %1262, i64 %1268
  %1270 = lshr i64 %1244, 32
  %1271 = trunc i64 %1270 to i8
  store i8 %1271, i8* %1269, align 1
  %1272 = getelementptr inbounds i8, i8* %1269, i64 1
  store i8 0, i8* %1272, align 1
  %1273 = and i64 %1244, 1095216660480
  %1274 = icmp eq i64 %1273, 1095216660480
  %1275 = select i1 %1274, i64 2, i64 1
  %1276 = getelementptr inbounds i8, i8* %1269, i64 %1275
  %1277 = lshr i64 %1244, 24
  %1278 = trunc i64 %1277 to i8
  store i8 %1278, i8* %1276, align 1
  %1279 = getelementptr inbounds i8, i8* %1276, i64 1
  store i8 0, i8* %1279, align 1
  %1280 = and i64 %1244, 4278190080
  %1281 = icmp eq i64 %1280, 4278190080
  %1282 = select i1 %1281, i64 2, i64 1
  %1283 = getelementptr inbounds i8, i8* %1276, i64 %1282
  %1284 = lshr i64 %1244, 16
  %1285 = trunc i64 %1284 to i8
  store i8 %1285, i8* %1283, align 1
  %1286 = getelementptr inbounds i8, i8* %1283, i64 1
  store i8 0, i8* %1286, align 1
  %1287 = and i64 %1244, 16711680
  %1288 = icmp eq i64 %1287, 16711680
  %1289 = select i1 %1288, i64 2, i64 1
  %1290 = getelementptr inbounds i8, i8* %1283, i64 %1289
  %1291 = lshr i64 %1244, 8
  %1292 = trunc i64 %1291 to i8
  store i8 %1292, i8* %1290, align 1
  %1293 = getelementptr inbounds i8, i8* %1290, i64 1
  store i8 0, i8* %1293, align 1
  %1294 = and i64 %1244, 65280
  %1295 = icmp eq i64 %1294, 65280
  %1296 = select i1 %1295, i64 2, i64 1
  %1297 = getelementptr inbounds i8, i8* %1290, i64 %1296
  %1298 = trunc i64 %1244 to i8
  store i8 %1298, i8* %1297, align 1
  %1299 = getelementptr inbounds i8, i8* %1297, i64 1
  store i8 0, i8* %1299, align 1
  %1300 = and i64 %1244, 255
  %1301 = icmp eq i64 %1300, 255
  %1302 = select i1 %1301, i64 2, i64 1
  %1303 = getelementptr inbounds i8, i8* %1297, i64 %1302
  br label %1326

1304:                                             ; preds = %1238
  %1305 = lshr i64 %1244, 48
  %1306 = trunc i64 %1305 to i8
  %1307 = getelementptr inbounds i8, i8* %1205, i64 1
  store i8 %1306, i8* %1307, align 1
  %1308 = lshr i64 %1244, 40
  %1309 = trunc i64 %1308 to i8
  %1310 = getelementptr inbounds i8, i8* %1205, i64 2
  store i8 %1309, i8* %1310, align 1
  %1311 = lshr i64 %1244, 32
  %1312 = trunc i64 %1311 to i8
  %1313 = getelementptr inbounds i8, i8* %1205, i64 3
  store i8 %1312, i8* %1313, align 1
  %1314 = lshr i64 %1244, 24
  %1315 = trunc i64 %1314 to i8
  %1316 = getelementptr inbounds i8, i8* %1205, i64 4
  store i8 %1315, i8* %1316, align 1
  %1317 = lshr i64 %1244, 16
  %1318 = trunc i64 %1317 to i8
  %1319 = getelementptr inbounds i8, i8* %1205, i64 5
  store i8 %1318, i8* %1319, align 1
  %1320 = lshr i64 %1244, 8
  %1321 = trunc i64 %1320 to i8
  %1322 = getelementptr inbounds i8, i8* %1205, i64 6
  store i8 %1321, i8* %1322, align 1
  %1323 = trunc i64 %1244 to i8
  %1324 = getelementptr inbounds i8, i8* %1205, i64 7
  store i8 %1323, i8* %1324, align 1
  %1325 = getelementptr inbounds i8, i8* %1205, i64 8
  br label %1326

1326:                                             ; preds = %1304, %1251
  %1327 = phi i8* [ %1303, %1251 ], [ %1325, %1304 ]
  %1328 = add nsw i32 %1236, 64
  %1329 = sext i32 %1231 to i64
  br label %1335

1330:                                             ; preds = %1213
  %1331 = zext i32 %1235 to i64
  %1332 = shl i64 %1204, %1331
  %1333 = sext i32 %1231 to i64
  %1334 = or i64 %1332, %1333
  br label %1335

1335:                                             ; preds = %1326, %1330, %1211
  %1336 = phi i32 [ %1203, %1211 ], [ %1328, %1326 ], [ %1236, %1330 ]
  %1337 = phi i64 [ %1204, %1211 ], [ %1329, %1326 ], [ %1334, %1330 ]
  %1338 = phi i8* [ %1205, %1211 ], [ %1327, %1326 ], [ %1205, %1330 ]
  %1339 = phi i32 [ %1212, %1211 ], [ 0, %1326 ], [ 0, %1330 ]
  %1340 = getelementptr inbounds i16, i16* %1, i64 32
  %1341 = load i16, i16* %1340, align 2
  %1342 = sext i16 %1341 to i32
  %1343 = icmp eq i16 %1341, 0
  br i1 %1343, label %1344, label %1346

1344:                                             ; preds = %1335
  %1345 = add nuw nsw i32 %1339, 16
  br label %1468

1346:                                             ; preds = %1335
  %1347 = ashr i32 %1342, 31
  %1348 = add nsw i32 %1347, %1342
  %1349 = xor i32 %1348, %1347
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %1350
  %1352 = load i8, i8* %1351, align 1
  %1353 = zext i8 %1352 to i32
  %1354 = add nuw nsw i32 %1339, %1353
  %1355 = zext i8 %1352 to i64
  %1356 = shl nsw i64 -1, %1355
  %1357 = trunc i64 %1356 to i32
  %1358 = xor i32 %1357, -1
  %1359 = and i32 %1348, %1358
  %1360 = sext i32 %1354 to i64
  %1361 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %1360
  %1362 = load i32, i32* %1361, align 4
  %1363 = shl i32 %1362, %1353
  %1364 = or i32 %1363, %1359
  %1365 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %1360
  %1366 = load i8, i8* %1365, align 1
  %1367 = sext i8 %1366 to i32
  %1368 = add nsw i32 %1367, %1353
  %1369 = sub nsw i32 %1336, %1368
  %1370 = icmp slt i32 %1369, 0
  br i1 %1370, label %1371, label %1463

1371:                                             ; preds = %1346
  %1372 = zext i32 %1336 to i64
  %1373 = shl i64 %1337, %1372
  %1374 = sub nsw i32 0, %1369
  %1375 = ashr i32 %1364, %1374
  %1376 = sext i32 %1375 to i64
  %1377 = or i64 %1373, %1376
  %1378 = and i64 %1377, -9187201950435737472
  %1379 = sub i64 -72340172838076674, %1377
  %1380 = and i64 %1378, %1379
  %1381 = icmp eq i64 %1380, 0
  %1382 = lshr i64 %1377, 56
  %1383 = trunc i64 %1382 to i8
  store i8 %1383, i8* %1338, align 1
  br i1 %1381, label %1437, label %1384

1384:                                             ; preds = %1371
  %1385 = getelementptr inbounds i8, i8* %1338, i64 1
  store i8 0, i8* %1385, align 1
  %1386 = icmp eq i64 %1382, 255
  %1387 = select i1 %1386, i64 2, i64 1
  %1388 = getelementptr inbounds i8, i8* %1338, i64 %1387
  %1389 = lshr i64 %1377, 48
  %1390 = trunc i64 %1389 to i8
  store i8 %1390, i8* %1388, align 1
  %1391 = getelementptr inbounds i8, i8* %1388, i64 1
  store i8 0, i8* %1391, align 1
  %1392 = and i64 %1377, 71776119061217280
  %1393 = icmp eq i64 %1392, 71776119061217280
  %1394 = select i1 %1393, i64 2, i64 1
  %1395 = getelementptr inbounds i8, i8* %1388, i64 %1394
  %1396 = lshr i64 %1377, 40
  %1397 = trunc i64 %1396 to i8
  store i8 %1397, i8* %1395, align 1
  %1398 = getelementptr inbounds i8, i8* %1395, i64 1
  store i8 0, i8* %1398, align 1
  %1399 = and i64 %1377, 280375465082880
  %1400 = icmp eq i64 %1399, 280375465082880
  %1401 = select i1 %1400, i64 2, i64 1
  %1402 = getelementptr inbounds i8, i8* %1395, i64 %1401
  %1403 = lshr i64 %1377, 32
  %1404 = trunc i64 %1403 to i8
  store i8 %1404, i8* %1402, align 1
  %1405 = getelementptr inbounds i8, i8* %1402, i64 1
  store i8 0, i8* %1405, align 1
  %1406 = and i64 %1377, 1095216660480
  %1407 = icmp eq i64 %1406, 1095216660480
  %1408 = select i1 %1407, i64 2, i64 1
  %1409 = getelementptr inbounds i8, i8* %1402, i64 %1408
  %1410 = lshr i64 %1377, 24
  %1411 = trunc i64 %1410 to i8
  store i8 %1411, i8* %1409, align 1
  %1412 = getelementptr inbounds i8, i8* %1409, i64 1
  store i8 0, i8* %1412, align 1
  %1413 = and i64 %1377, 4278190080
  %1414 = icmp eq i64 %1413, 4278190080
  %1415 = select i1 %1414, i64 2, i64 1
  %1416 = getelementptr inbounds i8, i8* %1409, i64 %1415
  %1417 = lshr i64 %1377, 16
  %1418 = trunc i64 %1417 to i8
  store i8 %1418, i8* %1416, align 1
  %1419 = getelementptr inbounds i8, i8* %1416, i64 1
  store i8 0, i8* %1419, align 1
  %1420 = and i64 %1377, 16711680
  %1421 = icmp eq i64 %1420, 16711680
  %1422 = select i1 %1421, i64 2, i64 1
  %1423 = getelementptr inbounds i8, i8* %1416, i64 %1422
  %1424 = lshr i64 %1377, 8
  %1425 = trunc i64 %1424 to i8
  store i8 %1425, i8* %1423, align 1
  %1426 = getelementptr inbounds i8, i8* %1423, i64 1
  store i8 0, i8* %1426, align 1
  %1427 = and i64 %1377, 65280
  %1428 = icmp eq i64 %1427, 65280
  %1429 = select i1 %1428, i64 2, i64 1
  %1430 = getelementptr inbounds i8, i8* %1423, i64 %1429
  %1431 = trunc i64 %1377 to i8
  store i8 %1431, i8* %1430, align 1
  %1432 = getelementptr inbounds i8, i8* %1430, i64 1
  store i8 0, i8* %1432, align 1
  %1433 = and i64 %1377, 255
  %1434 = icmp eq i64 %1433, 255
  %1435 = select i1 %1434, i64 2, i64 1
  %1436 = getelementptr inbounds i8, i8* %1430, i64 %1435
  br label %1459

1437:                                             ; preds = %1371
  %1438 = lshr i64 %1377, 48
  %1439 = trunc i64 %1438 to i8
  %1440 = getelementptr inbounds i8, i8* %1338, i64 1
  store i8 %1439, i8* %1440, align 1
  %1441 = lshr i64 %1377, 40
  %1442 = trunc i64 %1441 to i8
  %1443 = getelementptr inbounds i8, i8* %1338, i64 2
  store i8 %1442, i8* %1443, align 1
  %1444 = lshr i64 %1377, 32
  %1445 = trunc i64 %1444 to i8
  %1446 = getelementptr inbounds i8, i8* %1338, i64 3
  store i8 %1445, i8* %1446, align 1
  %1447 = lshr i64 %1377, 24
  %1448 = trunc i64 %1447 to i8
  %1449 = getelementptr inbounds i8, i8* %1338, i64 4
  store i8 %1448, i8* %1449, align 1
  %1450 = lshr i64 %1377, 16
  %1451 = trunc i64 %1450 to i8
  %1452 = getelementptr inbounds i8, i8* %1338, i64 5
  store i8 %1451, i8* %1452, align 1
  %1453 = lshr i64 %1377, 8
  %1454 = trunc i64 %1453 to i8
  %1455 = getelementptr inbounds i8, i8* %1338, i64 6
  store i8 %1454, i8* %1455, align 1
  %1456 = trunc i64 %1377 to i8
  %1457 = getelementptr inbounds i8, i8* %1338, i64 7
  store i8 %1456, i8* %1457, align 1
  %1458 = getelementptr inbounds i8, i8* %1338, i64 8
  br label %1459

1459:                                             ; preds = %1437, %1384
  %1460 = phi i8* [ %1436, %1384 ], [ %1458, %1437 ]
  %1461 = add nsw i32 %1369, 64
  %1462 = sext i32 %1364 to i64
  br label %1468

1463:                                             ; preds = %1346
  %1464 = zext i32 %1368 to i64
  %1465 = shl i64 %1337, %1464
  %1466 = sext i32 %1364 to i64
  %1467 = or i64 %1465, %1466
  br label %1468

1468:                                             ; preds = %1459, %1463, %1344
  %1469 = phi i32 [ %1336, %1344 ], [ %1461, %1459 ], [ %1369, %1463 ]
  %1470 = phi i64 [ %1337, %1344 ], [ %1462, %1459 ], [ %1467, %1463 ]
  %1471 = phi i8* [ %1338, %1344 ], [ %1460, %1459 ], [ %1338, %1463 ]
  %1472 = phi i32 [ %1345, %1344 ], [ 0, %1459 ], [ 0, %1463 ]
  %1473 = getelementptr inbounds i16, i16* %1, i64 25
  %1474 = load i16, i16* %1473, align 2
  %1475 = sext i16 %1474 to i32
  %1476 = icmp eq i16 %1474, 0
  br i1 %1476, label %1477, label %1479

1477:                                             ; preds = %1468
  %1478 = add nuw nsw i32 %1472, 16
  br label %1601

1479:                                             ; preds = %1468
  %1480 = ashr i32 %1475, 31
  %1481 = add nsw i32 %1480, %1475
  %1482 = xor i32 %1481, %1480
  %1483 = sext i32 %1482 to i64
  %1484 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %1483
  %1485 = load i8, i8* %1484, align 1
  %1486 = zext i8 %1485 to i32
  %1487 = add nuw nsw i32 %1472, %1486
  %1488 = zext i8 %1485 to i64
  %1489 = shl nsw i64 -1, %1488
  %1490 = trunc i64 %1489 to i32
  %1491 = xor i32 %1490, -1
  %1492 = and i32 %1481, %1491
  %1493 = sext i32 %1487 to i64
  %1494 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %1493
  %1495 = load i32, i32* %1494, align 4
  %1496 = shl i32 %1495, %1486
  %1497 = or i32 %1496, %1492
  %1498 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %1493
  %1499 = load i8, i8* %1498, align 1
  %1500 = sext i8 %1499 to i32
  %1501 = add nsw i32 %1500, %1486
  %1502 = sub nsw i32 %1469, %1501
  %1503 = icmp slt i32 %1502, 0
  br i1 %1503, label %1504, label %1596

1504:                                             ; preds = %1479
  %1505 = zext i32 %1469 to i64
  %1506 = shl i64 %1470, %1505
  %1507 = sub nsw i32 0, %1502
  %1508 = ashr i32 %1497, %1507
  %1509 = sext i32 %1508 to i64
  %1510 = or i64 %1506, %1509
  %1511 = and i64 %1510, -9187201950435737472
  %1512 = sub i64 -72340172838076674, %1510
  %1513 = and i64 %1511, %1512
  %1514 = icmp eq i64 %1513, 0
  %1515 = lshr i64 %1510, 56
  %1516 = trunc i64 %1515 to i8
  store i8 %1516, i8* %1471, align 1
  br i1 %1514, label %1570, label %1517

1517:                                             ; preds = %1504
  %1518 = getelementptr inbounds i8, i8* %1471, i64 1
  store i8 0, i8* %1518, align 1
  %1519 = icmp eq i64 %1515, 255
  %1520 = select i1 %1519, i64 2, i64 1
  %1521 = getelementptr inbounds i8, i8* %1471, i64 %1520
  %1522 = lshr i64 %1510, 48
  %1523 = trunc i64 %1522 to i8
  store i8 %1523, i8* %1521, align 1
  %1524 = getelementptr inbounds i8, i8* %1521, i64 1
  store i8 0, i8* %1524, align 1
  %1525 = and i64 %1510, 71776119061217280
  %1526 = icmp eq i64 %1525, 71776119061217280
  %1527 = select i1 %1526, i64 2, i64 1
  %1528 = getelementptr inbounds i8, i8* %1521, i64 %1527
  %1529 = lshr i64 %1510, 40
  %1530 = trunc i64 %1529 to i8
  store i8 %1530, i8* %1528, align 1
  %1531 = getelementptr inbounds i8, i8* %1528, i64 1
  store i8 0, i8* %1531, align 1
  %1532 = and i64 %1510, 280375465082880
  %1533 = icmp eq i64 %1532, 280375465082880
  %1534 = select i1 %1533, i64 2, i64 1
  %1535 = getelementptr inbounds i8, i8* %1528, i64 %1534
  %1536 = lshr i64 %1510, 32
  %1537 = trunc i64 %1536 to i8
  store i8 %1537, i8* %1535, align 1
  %1538 = getelementptr inbounds i8, i8* %1535, i64 1
  store i8 0, i8* %1538, align 1
  %1539 = and i64 %1510, 1095216660480
  %1540 = icmp eq i64 %1539, 1095216660480
  %1541 = select i1 %1540, i64 2, i64 1
  %1542 = getelementptr inbounds i8, i8* %1535, i64 %1541
  %1543 = lshr i64 %1510, 24
  %1544 = trunc i64 %1543 to i8
  store i8 %1544, i8* %1542, align 1
  %1545 = getelementptr inbounds i8, i8* %1542, i64 1
  store i8 0, i8* %1545, align 1
  %1546 = and i64 %1510, 4278190080
  %1547 = icmp eq i64 %1546, 4278190080
  %1548 = select i1 %1547, i64 2, i64 1
  %1549 = getelementptr inbounds i8, i8* %1542, i64 %1548
  %1550 = lshr i64 %1510, 16
  %1551 = trunc i64 %1550 to i8
  store i8 %1551, i8* %1549, align 1
  %1552 = getelementptr inbounds i8, i8* %1549, i64 1
  store i8 0, i8* %1552, align 1
  %1553 = and i64 %1510, 16711680
  %1554 = icmp eq i64 %1553, 16711680
  %1555 = select i1 %1554, i64 2, i64 1
  %1556 = getelementptr inbounds i8, i8* %1549, i64 %1555
  %1557 = lshr i64 %1510, 8
  %1558 = trunc i64 %1557 to i8
  store i8 %1558, i8* %1556, align 1
  %1559 = getelementptr inbounds i8, i8* %1556, i64 1
  store i8 0, i8* %1559, align 1
  %1560 = and i64 %1510, 65280
  %1561 = icmp eq i64 %1560, 65280
  %1562 = select i1 %1561, i64 2, i64 1
  %1563 = getelementptr inbounds i8, i8* %1556, i64 %1562
  %1564 = trunc i64 %1510 to i8
  store i8 %1564, i8* %1563, align 1
  %1565 = getelementptr inbounds i8, i8* %1563, i64 1
  store i8 0, i8* %1565, align 1
  %1566 = and i64 %1510, 255
  %1567 = icmp eq i64 %1566, 255
  %1568 = select i1 %1567, i64 2, i64 1
  %1569 = getelementptr inbounds i8, i8* %1563, i64 %1568
  br label %1592

1570:                                             ; preds = %1504
  %1571 = lshr i64 %1510, 48
  %1572 = trunc i64 %1571 to i8
  %1573 = getelementptr inbounds i8, i8* %1471, i64 1
  store i8 %1572, i8* %1573, align 1
  %1574 = lshr i64 %1510, 40
  %1575 = trunc i64 %1574 to i8
  %1576 = getelementptr inbounds i8, i8* %1471, i64 2
  store i8 %1575, i8* %1576, align 1
  %1577 = lshr i64 %1510, 32
  %1578 = trunc i64 %1577 to i8
  %1579 = getelementptr inbounds i8, i8* %1471, i64 3
  store i8 %1578, i8* %1579, align 1
  %1580 = lshr i64 %1510, 24
  %1581 = trunc i64 %1580 to i8
  %1582 = getelementptr inbounds i8, i8* %1471, i64 4
  store i8 %1581, i8* %1582, align 1
  %1583 = lshr i64 %1510, 16
  %1584 = trunc i64 %1583 to i8
  %1585 = getelementptr inbounds i8, i8* %1471, i64 5
  store i8 %1584, i8* %1585, align 1
  %1586 = lshr i64 %1510, 8
  %1587 = trunc i64 %1586 to i8
  %1588 = getelementptr inbounds i8, i8* %1471, i64 6
  store i8 %1587, i8* %1588, align 1
  %1589 = trunc i64 %1510 to i8
  %1590 = getelementptr inbounds i8, i8* %1471, i64 7
  store i8 %1589, i8* %1590, align 1
  %1591 = getelementptr inbounds i8, i8* %1471, i64 8
  br label %1592

1592:                                             ; preds = %1570, %1517
  %1593 = phi i8* [ %1569, %1517 ], [ %1591, %1570 ]
  %1594 = add nsw i32 %1502, 64
  %1595 = sext i32 %1497 to i64
  br label %1601

1596:                                             ; preds = %1479
  %1597 = zext i32 %1501 to i64
  %1598 = shl i64 %1470, %1597
  %1599 = sext i32 %1497 to i64
  %1600 = or i64 %1598, %1599
  br label %1601

1601:                                             ; preds = %1592, %1596, %1477
  %1602 = phi i32 [ %1469, %1477 ], [ %1594, %1592 ], [ %1502, %1596 ]
  %1603 = phi i64 [ %1470, %1477 ], [ %1595, %1592 ], [ %1600, %1596 ]
  %1604 = phi i8* [ %1471, %1477 ], [ %1593, %1592 ], [ %1471, %1596 ]
  %1605 = phi i32 [ %1478, %1477 ], [ 0, %1592 ], [ 0, %1596 ]
  %1606 = getelementptr inbounds i16, i16* %1, i64 18
  %1607 = load i16, i16* %1606, align 2
  %1608 = sext i16 %1607 to i32
  %1609 = icmp eq i16 %1607, 0
  br i1 %1609, label %1610, label %1612

1610:                                             ; preds = %1601
  %1611 = add nuw nsw i32 %1605, 16
  br label %1734

1612:                                             ; preds = %1601
  %1613 = ashr i32 %1608, 31
  %1614 = add nsw i32 %1613, %1608
  %1615 = xor i32 %1614, %1613
  %1616 = sext i32 %1615 to i64
  %1617 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %1616
  %1618 = load i8, i8* %1617, align 1
  %1619 = zext i8 %1618 to i32
  %1620 = add nuw nsw i32 %1605, %1619
  %1621 = zext i8 %1618 to i64
  %1622 = shl nsw i64 -1, %1621
  %1623 = trunc i64 %1622 to i32
  %1624 = xor i32 %1623, -1
  %1625 = and i32 %1614, %1624
  %1626 = sext i32 %1620 to i64
  %1627 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %1626
  %1628 = load i32, i32* %1627, align 4
  %1629 = shl i32 %1628, %1619
  %1630 = or i32 %1629, %1625
  %1631 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %1626
  %1632 = load i8, i8* %1631, align 1
  %1633 = sext i8 %1632 to i32
  %1634 = add nsw i32 %1633, %1619
  %1635 = sub nsw i32 %1602, %1634
  %1636 = icmp slt i32 %1635, 0
  br i1 %1636, label %1637, label %1729

1637:                                             ; preds = %1612
  %1638 = zext i32 %1602 to i64
  %1639 = shl i64 %1603, %1638
  %1640 = sub nsw i32 0, %1635
  %1641 = ashr i32 %1630, %1640
  %1642 = sext i32 %1641 to i64
  %1643 = or i64 %1639, %1642
  %1644 = and i64 %1643, -9187201950435737472
  %1645 = sub i64 -72340172838076674, %1643
  %1646 = and i64 %1644, %1645
  %1647 = icmp eq i64 %1646, 0
  %1648 = lshr i64 %1643, 56
  %1649 = trunc i64 %1648 to i8
  store i8 %1649, i8* %1604, align 1
  br i1 %1647, label %1703, label %1650

1650:                                             ; preds = %1637
  %1651 = getelementptr inbounds i8, i8* %1604, i64 1
  store i8 0, i8* %1651, align 1
  %1652 = icmp eq i64 %1648, 255
  %1653 = select i1 %1652, i64 2, i64 1
  %1654 = getelementptr inbounds i8, i8* %1604, i64 %1653
  %1655 = lshr i64 %1643, 48
  %1656 = trunc i64 %1655 to i8
  store i8 %1656, i8* %1654, align 1
  %1657 = getelementptr inbounds i8, i8* %1654, i64 1
  store i8 0, i8* %1657, align 1
  %1658 = and i64 %1643, 71776119061217280
  %1659 = icmp eq i64 %1658, 71776119061217280
  %1660 = select i1 %1659, i64 2, i64 1
  %1661 = getelementptr inbounds i8, i8* %1654, i64 %1660
  %1662 = lshr i64 %1643, 40
  %1663 = trunc i64 %1662 to i8
  store i8 %1663, i8* %1661, align 1
  %1664 = getelementptr inbounds i8, i8* %1661, i64 1
  store i8 0, i8* %1664, align 1
  %1665 = and i64 %1643, 280375465082880
  %1666 = icmp eq i64 %1665, 280375465082880
  %1667 = select i1 %1666, i64 2, i64 1
  %1668 = getelementptr inbounds i8, i8* %1661, i64 %1667
  %1669 = lshr i64 %1643, 32
  %1670 = trunc i64 %1669 to i8
  store i8 %1670, i8* %1668, align 1
  %1671 = getelementptr inbounds i8, i8* %1668, i64 1
  store i8 0, i8* %1671, align 1
  %1672 = and i64 %1643, 1095216660480
  %1673 = icmp eq i64 %1672, 1095216660480
  %1674 = select i1 %1673, i64 2, i64 1
  %1675 = getelementptr inbounds i8, i8* %1668, i64 %1674
  %1676 = lshr i64 %1643, 24
  %1677 = trunc i64 %1676 to i8
  store i8 %1677, i8* %1675, align 1
  %1678 = getelementptr inbounds i8, i8* %1675, i64 1
  store i8 0, i8* %1678, align 1
  %1679 = and i64 %1643, 4278190080
  %1680 = icmp eq i64 %1679, 4278190080
  %1681 = select i1 %1680, i64 2, i64 1
  %1682 = getelementptr inbounds i8, i8* %1675, i64 %1681
  %1683 = lshr i64 %1643, 16
  %1684 = trunc i64 %1683 to i8
  store i8 %1684, i8* %1682, align 1
  %1685 = getelementptr inbounds i8, i8* %1682, i64 1
  store i8 0, i8* %1685, align 1
  %1686 = and i64 %1643, 16711680
  %1687 = icmp eq i64 %1686, 16711680
  %1688 = select i1 %1687, i64 2, i64 1
  %1689 = getelementptr inbounds i8, i8* %1682, i64 %1688
  %1690 = lshr i64 %1643, 8
  %1691 = trunc i64 %1690 to i8
  store i8 %1691, i8* %1689, align 1
  %1692 = getelementptr inbounds i8, i8* %1689, i64 1
  store i8 0, i8* %1692, align 1
  %1693 = and i64 %1643, 65280
  %1694 = icmp eq i64 %1693, 65280
  %1695 = select i1 %1694, i64 2, i64 1
  %1696 = getelementptr inbounds i8, i8* %1689, i64 %1695
  %1697 = trunc i64 %1643 to i8
  store i8 %1697, i8* %1696, align 1
  %1698 = getelementptr inbounds i8, i8* %1696, i64 1
  store i8 0, i8* %1698, align 1
  %1699 = and i64 %1643, 255
  %1700 = icmp eq i64 %1699, 255
  %1701 = select i1 %1700, i64 2, i64 1
  %1702 = getelementptr inbounds i8, i8* %1696, i64 %1701
  br label %1725

1703:                                             ; preds = %1637
  %1704 = lshr i64 %1643, 48
  %1705 = trunc i64 %1704 to i8
  %1706 = getelementptr inbounds i8, i8* %1604, i64 1
  store i8 %1705, i8* %1706, align 1
  %1707 = lshr i64 %1643, 40
  %1708 = trunc i64 %1707 to i8
  %1709 = getelementptr inbounds i8, i8* %1604, i64 2
  store i8 %1708, i8* %1709, align 1
  %1710 = lshr i64 %1643, 32
  %1711 = trunc i64 %1710 to i8
  %1712 = getelementptr inbounds i8, i8* %1604, i64 3
  store i8 %1711, i8* %1712, align 1
  %1713 = lshr i64 %1643, 24
  %1714 = trunc i64 %1713 to i8
  %1715 = getelementptr inbounds i8, i8* %1604, i64 4
  store i8 %1714, i8* %1715, align 1
  %1716 = lshr i64 %1643, 16
  %1717 = trunc i64 %1716 to i8
  %1718 = getelementptr inbounds i8, i8* %1604, i64 5
  store i8 %1717, i8* %1718, align 1
  %1719 = lshr i64 %1643, 8
  %1720 = trunc i64 %1719 to i8
  %1721 = getelementptr inbounds i8, i8* %1604, i64 6
  store i8 %1720, i8* %1721, align 1
  %1722 = trunc i64 %1643 to i8
  %1723 = getelementptr inbounds i8, i8* %1604, i64 7
  store i8 %1722, i8* %1723, align 1
  %1724 = getelementptr inbounds i8, i8* %1604, i64 8
  br label %1725

1725:                                             ; preds = %1703, %1650
  %1726 = phi i8* [ %1702, %1650 ], [ %1724, %1703 ]
  %1727 = add nsw i32 %1635, 64
  %1728 = sext i32 %1630 to i64
  br label %1734

1729:                                             ; preds = %1612
  %1730 = zext i32 %1634 to i64
  %1731 = shl i64 %1603, %1730
  %1732 = sext i32 %1630 to i64
  %1733 = or i64 %1731, %1732
  br label %1734

1734:                                             ; preds = %1725, %1729, %1610
  %1735 = phi i32 [ %1602, %1610 ], [ %1727, %1725 ], [ %1635, %1729 ]
  %1736 = phi i64 [ %1603, %1610 ], [ %1728, %1725 ], [ %1733, %1729 ]
  %1737 = phi i8* [ %1604, %1610 ], [ %1726, %1725 ], [ %1604, %1729 ]
  %1738 = phi i32 [ %1611, %1610 ], [ 0, %1725 ], [ 0, %1729 ]
  %1739 = getelementptr inbounds i16, i16* %1, i64 11
  %1740 = load i16, i16* %1739, align 2
  %1741 = sext i16 %1740 to i32
  %1742 = icmp eq i16 %1740, 0
  br i1 %1742, label %1743, label %1745

1743:                                             ; preds = %1734
  %1744 = add nuw nsw i32 %1738, 16
  br label %1867

1745:                                             ; preds = %1734
  %1746 = ashr i32 %1741, 31
  %1747 = add nsw i32 %1746, %1741
  %1748 = xor i32 %1747, %1746
  %1749 = sext i32 %1748 to i64
  %1750 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %1749
  %1751 = load i8, i8* %1750, align 1
  %1752 = zext i8 %1751 to i32
  %1753 = add nuw nsw i32 %1738, %1752
  %1754 = zext i8 %1751 to i64
  %1755 = shl nsw i64 -1, %1754
  %1756 = trunc i64 %1755 to i32
  %1757 = xor i32 %1756, -1
  %1758 = and i32 %1747, %1757
  %1759 = sext i32 %1753 to i64
  %1760 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %1759
  %1761 = load i32, i32* %1760, align 4
  %1762 = shl i32 %1761, %1752
  %1763 = or i32 %1762, %1758
  %1764 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %1759
  %1765 = load i8, i8* %1764, align 1
  %1766 = sext i8 %1765 to i32
  %1767 = add nsw i32 %1766, %1752
  %1768 = sub nsw i32 %1735, %1767
  %1769 = icmp slt i32 %1768, 0
  br i1 %1769, label %1770, label %1862

1770:                                             ; preds = %1745
  %1771 = zext i32 %1735 to i64
  %1772 = shl i64 %1736, %1771
  %1773 = sub nsw i32 0, %1768
  %1774 = ashr i32 %1763, %1773
  %1775 = sext i32 %1774 to i64
  %1776 = or i64 %1772, %1775
  %1777 = and i64 %1776, -9187201950435737472
  %1778 = sub i64 -72340172838076674, %1776
  %1779 = and i64 %1777, %1778
  %1780 = icmp eq i64 %1779, 0
  %1781 = lshr i64 %1776, 56
  %1782 = trunc i64 %1781 to i8
  store i8 %1782, i8* %1737, align 1
  br i1 %1780, label %1836, label %1783

1783:                                             ; preds = %1770
  %1784 = getelementptr inbounds i8, i8* %1737, i64 1
  store i8 0, i8* %1784, align 1
  %1785 = icmp eq i64 %1781, 255
  %1786 = select i1 %1785, i64 2, i64 1
  %1787 = getelementptr inbounds i8, i8* %1737, i64 %1786
  %1788 = lshr i64 %1776, 48
  %1789 = trunc i64 %1788 to i8
  store i8 %1789, i8* %1787, align 1
  %1790 = getelementptr inbounds i8, i8* %1787, i64 1
  store i8 0, i8* %1790, align 1
  %1791 = and i64 %1776, 71776119061217280
  %1792 = icmp eq i64 %1791, 71776119061217280
  %1793 = select i1 %1792, i64 2, i64 1
  %1794 = getelementptr inbounds i8, i8* %1787, i64 %1793
  %1795 = lshr i64 %1776, 40
  %1796 = trunc i64 %1795 to i8
  store i8 %1796, i8* %1794, align 1
  %1797 = getelementptr inbounds i8, i8* %1794, i64 1
  store i8 0, i8* %1797, align 1
  %1798 = and i64 %1776, 280375465082880
  %1799 = icmp eq i64 %1798, 280375465082880
  %1800 = select i1 %1799, i64 2, i64 1
  %1801 = getelementptr inbounds i8, i8* %1794, i64 %1800
  %1802 = lshr i64 %1776, 32
  %1803 = trunc i64 %1802 to i8
  store i8 %1803, i8* %1801, align 1
  %1804 = getelementptr inbounds i8, i8* %1801, i64 1
  store i8 0, i8* %1804, align 1
  %1805 = and i64 %1776, 1095216660480
  %1806 = icmp eq i64 %1805, 1095216660480
  %1807 = select i1 %1806, i64 2, i64 1
  %1808 = getelementptr inbounds i8, i8* %1801, i64 %1807
  %1809 = lshr i64 %1776, 24
  %1810 = trunc i64 %1809 to i8
  store i8 %1810, i8* %1808, align 1
  %1811 = getelementptr inbounds i8, i8* %1808, i64 1
  store i8 0, i8* %1811, align 1
  %1812 = and i64 %1776, 4278190080
  %1813 = icmp eq i64 %1812, 4278190080
  %1814 = select i1 %1813, i64 2, i64 1
  %1815 = getelementptr inbounds i8, i8* %1808, i64 %1814
  %1816 = lshr i64 %1776, 16
  %1817 = trunc i64 %1816 to i8
  store i8 %1817, i8* %1815, align 1
  %1818 = getelementptr inbounds i8, i8* %1815, i64 1
  store i8 0, i8* %1818, align 1
  %1819 = and i64 %1776, 16711680
  %1820 = icmp eq i64 %1819, 16711680
  %1821 = select i1 %1820, i64 2, i64 1
  %1822 = getelementptr inbounds i8, i8* %1815, i64 %1821
  %1823 = lshr i64 %1776, 8
  %1824 = trunc i64 %1823 to i8
  store i8 %1824, i8* %1822, align 1
  %1825 = getelementptr inbounds i8, i8* %1822, i64 1
  store i8 0, i8* %1825, align 1
  %1826 = and i64 %1776, 65280
  %1827 = icmp eq i64 %1826, 65280
  %1828 = select i1 %1827, i64 2, i64 1
  %1829 = getelementptr inbounds i8, i8* %1822, i64 %1828
  %1830 = trunc i64 %1776 to i8
  store i8 %1830, i8* %1829, align 1
  %1831 = getelementptr inbounds i8, i8* %1829, i64 1
  store i8 0, i8* %1831, align 1
  %1832 = and i64 %1776, 255
  %1833 = icmp eq i64 %1832, 255
  %1834 = select i1 %1833, i64 2, i64 1
  %1835 = getelementptr inbounds i8, i8* %1829, i64 %1834
  br label %1858

1836:                                             ; preds = %1770
  %1837 = lshr i64 %1776, 48
  %1838 = trunc i64 %1837 to i8
  %1839 = getelementptr inbounds i8, i8* %1737, i64 1
  store i8 %1838, i8* %1839, align 1
  %1840 = lshr i64 %1776, 40
  %1841 = trunc i64 %1840 to i8
  %1842 = getelementptr inbounds i8, i8* %1737, i64 2
  store i8 %1841, i8* %1842, align 1
  %1843 = lshr i64 %1776, 32
  %1844 = trunc i64 %1843 to i8
  %1845 = getelementptr inbounds i8, i8* %1737, i64 3
  store i8 %1844, i8* %1845, align 1
  %1846 = lshr i64 %1776, 24
  %1847 = trunc i64 %1846 to i8
  %1848 = getelementptr inbounds i8, i8* %1737, i64 4
  store i8 %1847, i8* %1848, align 1
  %1849 = lshr i64 %1776, 16
  %1850 = trunc i64 %1849 to i8
  %1851 = getelementptr inbounds i8, i8* %1737, i64 5
  store i8 %1850, i8* %1851, align 1
  %1852 = lshr i64 %1776, 8
  %1853 = trunc i64 %1852 to i8
  %1854 = getelementptr inbounds i8, i8* %1737, i64 6
  store i8 %1853, i8* %1854, align 1
  %1855 = trunc i64 %1776 to i8
  %1856 = getelementptr inbounds i8, i8* %1737, i64 7
  store i8 %1855, i8* %1856, align 1
  %1857 = getelementptr inbounds i8, i8* %1737, i64 8
  br label %1858

1858:                                             ; preds = %1836, %1783
  %1859 = phi i8* [ %1835, %1783 ], [ %1857, %1836 ]
  %1860 = add nsw i32 %1768, 64
  %1861 = sext i32 %1763 to i64
  br label %1867

1862:                                             ; preds = %1745
  %1863 = zext i32 %1767 to i64
  %1864 = shl i64 %1736, %1863
  %1865 = sext i32 %1763 to i64
  %1866 = or i64 %1864, %1865
  br label %1867

1867:                                             ; preds = %1858, %1862, %1743
  %1868 = phi i32 [ %1735, %1743 ], [ %1860, %1858 ], [ %1768, %1862 ]
  %1869 = phi i64 [ %1736, %1743 ], [ %1861, %1858 ], [ %1866, %1862 ]
  %1870 = phi i8* [ %1737, %1743 ], [ %1859, %1858 ], [ %1737, %1862 ]
  %1871 = phi i32 [ %1744, %1743 ], [ 0, %1858 ], [ 0, %1862 ]
  %1872 = getelementptr inbounds i16, i16* %1, i64 4
  %1873 = load i16, i16* %1872, align 2
  %1874 = sext i16 %1873 to i32
  %1875 = icmp eq i16 %1873, 0
  br i1 %1875, label %1876, label %1878

1876:                                             ; preds = %1867
  %1877 = add nuw nsw i32 %1871, 16
  br label %2000

1878:                                             ; preds = %1867
  %1879 = ashr i32 %1874, 31
  %1880 = add nsw i32 %1879, %1874
  %1881 = xor i32 %1880, %1879
  %1882 = sext i32 %1881 to i64
  %1883 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %1882
  %1884 = load i8, i8* %1883, align 1
  %1885 = zext i8 %1884 to i32
  %1886 = add nuw nsw i32 %1871, %1885
  %1887 = zext i8 %1884 to i64
  %1888 = shl nsw i64 -1, %1887
  %1889 = trunc i64 %1888 to i32
  %1890 = xor i32 %1889, -1
  %1891 = and i32 %1880, %1890
  %1892 = sext i32 %1886 to i64
  %1893 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %1892
  %1894 = load i32, i32* %1893, align 4
  %1895 = shl i32 %1894, %1885
  %1896 = or i32 %1895, %1891
  %1897 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %1892
  %1898 = load i8, i8* %1897, align 1
  %1899 = sext i8 %1898 to i32
  %1900 = add nsw i32 %1899, %1885
  %1901 = sub nsw i32 %1868, %1900
  %1902 = icmp slt i32 %1901, 0
  br i1 %1902, label %1903, label %1995

1903:                                             ; preds = %1878
  %1904 = zext i32 %1868 to i64
  %1905 = shl i64 %1869, %1904
  %1906 = sub nsw i32 0, %1901
  %1907 = ashr i32 %1896, %1906
  %1908 = sext i32 %1907 to i64
  %1909 = or i64 %1905, %1908
  %1910 = and i64 %1909, -9187201950435737472
  %1911 = sub i64 -72340172838076674, %1909
  %1912 = and i64 %1910, %1911
  %1913 = icmp eq i64 %1912, 0
  %1914 = lshr i64 %1909, 56
  %1915 = trunc i64 %1914 to i8
  store i8 %1915, i8* %1870, align 1
  br i1 %1913, label %1969, label %1916

1916:                                             ; preds = %1903
  %1917 = getelementptr inbounds i8, i8* %1870, i64 1
  store i8 0, i8* %1917, align 1
  %1918 = icmp eq i64 %1914, 255
  %1919 = select i1 %1918, i64 2, i64 1
  %1920 = getelementptr inbounds i8, i8* %1870, i64 %1919
  %1921 = lshr i64 %1909, 48
  %1922 = trunc i64 %1921 to i8
  store i8 %1922, i8* %1920, align 1
  %1923 = getelementptr inbounds i8, i8* %1920, i64 1
  store i8 0, i8* %1923, align 1
  %1924 = and i64 %1909, 71776119061217280
  %1925 = icmp eq i64 %1924, 71776119061217280
  %1926 = select i1 %1925, i64 2, i64 1
  %1927 = getelementptr inbounds i8, i8* %1920, i64 %1926
  %1928 = lshr i64 %1909, 40
  %1929 = trunc i64 %1928 to i8
  store i8 %1929, i8* %1927, align 1
  %1930 = getelementptr inbounds i8, i8* %1927, i64 1
  store i8 0, i8* %1930, align 1
  %1931 = and i64 %1909, 280375465082880
  %1932 = icmp eq i64 %1931, 280375465082880
  %1933 = select i1 %1932, i64 2, i64 1
  %1934 = getelementptr inbounds i8, i8* %1927, i64 %1933
  %1935 = lshr i64 %1909, 32
  %1936 = trunc i64 %1935 to i8
  store i8 %1936, i8* %1934, align 1
  %1937 = getelementptr inbounds i8, i8* %1934, i64 1
  store i8 0, i8* %1937, align 1
  %1938 = and i64 %1909, 1095216660480
  %1939 = icmp eq i64 %1938, 1095216660480
  %1940 = select i1 %1939, i64 2, i64 1
  %1941 = getelementptr inbounds i8, i8* %1934, i64 %1940
  %1942 = lshr i64 %1909, 24
  %1943 = trunc i64 %1942 to i8
  store i8 %1943, i8* %1941, align 1
  %1944 = getelementptr inbounds i8, i8* %1941, i64 1
  store i8 0, i8* %1944, align 1
  %1945 = and i64 %1909, 4278190080
  %1946 = icmp eq i64 %1945, 4278190080
  %1947 = select i1 %1946, i64 2, i64 1
  %1948 = getelementptr inbounds i8, i8* %1941, i64 %1947
  %1949 = lshr i64 %1909, 16
  %1950 = trunc i64 %1949 to i8
  store i8 %1950, i8* %1948, align 1
  %1951 = getelementptr inbounds i8, i8* %1948, i64 1
  store i8 0, i8* %1951, align 1
  %1952 = and i64 %1909, 16711680
  %1953 = icmp eq i64 %1952, 16711680
  %1954 = select i1 %1953, i64 2, i64 1
  %1955 = getelementptr inbounds i8, i8* %1948, i64 %1954
  %1956 = lshr i64 %1909, 8
  %1957 = trunc i64 %1956 to i8
  store i8 %1957, i8* %1955, align 1
  %1958 = getelementptr inbounds i8, i8* %1955, i64 1
  store i8 0, i8* %1958, align 1
  %1959 = and i64 %1909, 65280
  %1960 = icmp eq i64 %1959, 65280
  %1961 = select i1 %1960, i64 2, i64 1
  %1962 = getelementptr inbounds i8, i8* %1955, i64 %1961
  %1963 = trunc i64 %1909 to i8
  store i8 %1963, i8* %1962, align 1
  %1964 = getelementptr inbounds i8, i8* %1962, i64 1
  store i8 0, i8* %1964, align 1
  %1965 = and i64 %1909, 255
  %1966 = icmp eq i64 %1965, 255
  %1967 = select i1 %1966, i64 2, i64 1
  %1968 = getelementptr inbounds i8, i8* %1962, i64 %1967
  br label %1991

1969:                                             ; preds = %1903
  %1970 = lshr i64 %1909, 48
  %1971 = trunc i64 %1970 to i8
  %1972 = getelementptr inbounds i8, i8* %1870, i64 1
  store i8 %1971, i8* %1972, align 1
  %1973 = lshr i64 %1909, 40
  %1974 = trunc i64 %1973 to i8
  %1975 = getelementptr inbounds i8, i8* %1870, i64 2
  store i8 %1974, i8* %1975, align 1
  %1976 = lshr i64 %1909, 32
  %1977 = trunc i64 %1976 to i8
  %1978 = getelementptr inbounds i8, i8* %1870, i64 3
  store i8 %1977, i8* %1978, align 1
  %1979 = lshr i64 %1909, 24
  %1980 = trunc i64 %1979 to i8
  %1981 = getelementptr inbounds i8, i8* %1870, i64 4
  store i8 %1980, i8* %1981, align 1
  %1982 = lshr i64 %1909, 16
  %1983 = trunc i64 %1982 to i8
  %1984 = getelementptr inbounds i8, i8* %1870, i64 5
  store i8 %1983, i8* %1984, align 1
  %1985 = lshr i64 %1909, 8
  %1986 = trunc i64 %1985 to i8
  %1987 = getelementptr inbounds i8, i8* %1870, i64 6
  store i8 %1986, i8* %1987, align 1
  %1988 = trunc i64 %1909 to i8
  %1989 = getelementptr inbounds i8, i8* %1870, i64 7
  store i8 %1988, i8* %1989, align 1
  %1990 = getelementptr inbounds i8, i8* %1870, i64 8
  br label %1991

1991:                                             ; preds = %1969, %1916
  %1992 = phi i8* [ %1968, %1916 ], [ %1990, %1969 ]
  %1993 = add nsw i32 %1901, 64
  %1994 = sext i32 %1896 to i64
  br label %2000

1995:                                             ; preds = %1878
  %1996 = zext i32 %1900 to i64
  %1997 = shl i64 %1869, %1996
  %1998 = sext i32 %1896 to i64
  %1999 = or i64 %1997, %1998
  br label %2000

2000:                                             ; preds = %1991, %1995, %1876
  %2001 = phi i32 [ %1868, %1876 ], [ %1993, %1991 ], [ %1901, %1995 ]
  %2002 = phi i64 [ %1869, %1876 ], [ %1994, %1991 ], [ %1999, %1995 ]
  %2003 = phi i8* [ %1870, %1876 ], [ %1992, %1991 ], [ %1870, %1995 ]
  %2004 = phi i32 [ %1877, %1876 ], [ 0, %1991 ], [ 0, %1995 ]
  %2005 = getelementptr inbounds i16, i16* %1, i64 5
  %2006 = load i16, i16* %2005, align 2
  %2007 = sext i16 %2006 to i32
  %2008 = icmp eq i16 %2006, 0
  br i1 %2008, label %2009, label %2011

2009:                                             ; preds = %2000
  %2010 = add nuw nsw i32 %2004, 16
  br label %2133

2011:                                             ; preds = %2000
  %2012 = ashr i32 %2007, 31
  %2013 = add nsw i32 %2012, %2007
  %2014 = xor i32 %2013, %2012
  %2015 = sext i32 %2014 to i64
  %2016 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %2015
  %2017 = load i8, i8* %2016, align 1
  %2018 = zext i8 %2017 to i32
  %2019 = add nuw nsw i32 %2004, %2018
  %2020 = zext i8 %2017 to i64
  %2021 = shl nsw i64 -1, %2020
  %2022 = trunc i64 %2021 to i32
  %2023 = xor i32 %2022, -1
  %2024 = and i32 %2013, %2023
  %2025 = sext i32 %2019 to i64
  %2026 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %2025
  %2027 = load i32, i32* %2026, align 4
  %2028 = shl i32 %2027, %2018
  %2029 = or i32 %2028, %2024
  %2030 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %2025
  %2031 = load i8, i8* %2030, align 1
  %2032 = sext i8 %2031 to i32
  %2033 = add nsw i32 %2032, %2018
  %2034 = sub nsw i32 %2001, %2033
  %2035 = icmp slt i32 %2034, 0
  br i1 %2035, label %2036, label %2128

2036:                                             ; preds = %2011
  %2037 = zext i32 %2001 to i64
  %2038 = shl i64 %2002, %2037
  %2039 = sub nsw i32 0, %2034
  %2040 = ashr i32 %2029, %2039
  %2041 = sext i32 %2040 to i64
  %2042 = or i64 %2038, %2041
  %2043 = and i64 %2042, -9187201950435737472
  %2044 = sub i64 -72340172838076674, %2042
  %2045 = and i64 %2043, %2044
  %2046 = icmp eq i64 %2045, 0
  %2047 = lshr i64 %2042, 56
  %2048 = trunc i64 %2047 to i8
  store i8 %2048, i8* %2003, align 1
  br i1 %2046, label %2102, label %2049

2049:                                             ; preds = %2036
  %2050 = getelementptr inbounds i8, i8* %2003, i64 1
  store i8 0, i8* %2050, align 1
  %2051 = icmp eq i64 %2047, 255
  %2052 = select i1 %2051, i64 2, i64 1
  %2053 = getelementptr inbounds i8, i8* %2003, i64 %2052
  %2054 = lshr i64 %2042, 48
  %2055 = trunc i64 %2054 to i8
  store i8 %2055, i8* %2053, align 1
  %2056 = getelementptr inbounds i8, i8* %2053, i64 1
  store i8 0, i8* %2056, align 1
  %2057 = and i64 %2042, 71776119061217280
  %2058 = icmp eq i64 %2057, 71776119061217280
  %2059 = select i1 %2058, i64 2, i64 1
  %2060 = getelementptr inbounds i8, i8* %2053, i64 %2059
  %2061 = lshr i64 %2042, 40
  %2062 = trunc i64 %2061 to i8
  store i8 %2062, i8* %2060, align 1
  %2063 = getelementptr inbounds i8, i8* %2060, i64 1
  store i8 0, i8* %2063, align 1
  %2064 = and i64 %2042, 280375465082880
  %2065 = icmp eq i64 %2064, 280375465082880
  %2066 = select i1 %2065, i64 2, i64 1
  %2067 = getelementptr inbounds i8, i8* %2060, i64 %2066
  %2068 = lshr i64 %2042, 32
  %2069 = trunc i64 %2068 to i8
  store i8 %2069, i8* %2067, align 1
  %2070 = getelementptr inbounds i8, i8* %2067, i64 1
  store i8 0, i8* %2070, align 1
  %2071 = and i64 %2042, 1095216660480
  %2072 = icmp eq i64 %2071, 1095216660480
  %2073 = select i1 %2072, i64 2, i64 1
  %2074 = getelementptr inbounds i8, i8* %2067, i64 %2073
  %2075 = lshr i64 %2042, 24
  %2076 = trunc i64 %2075 to i8
  store i8 %2076, i8* %2074, align 1
  %2077 = getelementptr inbounds i8, i8* %2074, i64 1
  store i8 0, i8* %2077, align 1
  %2078 = and i64 %2042, 4278190080
  %2079 = icmp eq i64 %2078, 4278190080
  %2080 = select i1 %2079, i64 2, i64 1
  %2081 = getelementptr inbounds i8, i8* %2074, i64 %2080
  %2082 = lshr i64 %2042, 16
  %2083 = trunc i64 %2082 to i8
  store i8 %2083, i8* %2081, align 1
  %2084 = getelementptr inbounds i8, i8* %2081, i64 1
  store i8 0, i8* %2084, align 1
  %2085 = and i64 %2042, 16711680
  %2086 = icmp eq i64 %2085, 16711680
  %2087 = select i1 %2086, i64 2, i64 1
  %2088 = getelementptr inbounds i8, i8* %2081, i64 %2087
  %2089 = lshr i64 %2042, 8
  %2090 = trunc i64 %2089 to i8
  store i8 %2090, i8* %2088, align 1
  %2091 = getelementptr inbounds i8, i8* %2088, i64 1
  store i8 0, i8* %2091, align 1
  %2092 = and i64 %2042, 65280
  %2093 = icmp eq i64 %2092, 65280
  %2094 = select i1 %2093, i64 2, i64 1
  %2095 = getelementptr inbounds i8, i8* %2088, i64 %2094
  %2096 = trunc i64 %2042 to i8
  store i8 %2096, i8* %2095, align 1
  %2097 = getelementptr inbounds i8, i8* %2095, i64 1
  store i8 0, i8* %2097, align 1
  %2098 = and i64 %2042, 255
  %2099 = icmp eq i64 %2098, 255
  %2100 = select i1 %2099, i64 2, i64 1
  %2101 = getelementptr inbounds i8, i8* %2095, i64 %2100
  br label %2124

2102:                                             ; preds = %2036
  %2103 = lshr i64 %2042, 48
  %2104 = trunc i64 %2103 to i8
  %2105 = getelementptr inbounds i8, i8* %2003, i64 1
  store i8 %2104, i8* %2105, align 1
  %2106 = lshr i64 %2042, 40
  %2107 = trunc i64 %2106 to i8
  %2108 = getelementptr inbounds i8, i8* %2003, i64 2
  store i8 %2107, i8* %2108, align 1
  %2109 = lshr i64 %2042, 32
  %2110 = trunc i64 %2109 to i8
  %2111 = getelementptr inbounds i8, i8* %2003, i64 3
  store i8 %2110, i8* %2111, align 1
  %2112 = lshr i64 %2042, 24
  %2113 = trunc i64 %2112 to i8
  %2114 = getelementptr inbounds i8, i8* %2003, i64 4
  store i8 %2113, i8* %2114, align 1
  %2115 = lshr i64 %2042, 16
  %2116 = trunc i64 %2115 to i8
  %2117 = getelementptr inbounds i8, i8* %2003, i64 5
  store i8 %2116, i8* %2117, align 1
  %2118 = lshr i64 %2042, 8
  %2119 = trunc i64 %2118 to i8
  %2120 = getelementptr inbounds i8, i8* %2003, i64 6
  store i8 %2119, i8* %2120, align 1
  %2121 = trunc i64 %2042 to i8
  %2122 = getelementptr inbounds i8, i8* %2003, i64 7
  store i8 %2121, i8* %2122, align 1
  %2123 = getelementptr inbounds i8, i8* %2003, i64 8
  br label %2124

2124:                                             ; preds = %2102, %2049
  %2125 = phi i8* [ %2101, %2049 ], [ %2123, %2102 ]
  %2126 = add nsw i32 %2034, 64
  %2127 = sext i32 %2029 to i64
  br label %2133

2128:                                             ; preds = %2011
  %2129 = zext i32 %2033 to i64
  %2130 = shl i64 %2002, %2129
  %2131 = sext i32 %2029 to i64
  %2132 = or i64 %2130, %2131
  br label %2133

2133:                                             ; preds = %2124, %2128, %2009
  %2134 = phi i32 [ %2001, %2009 ], [ %2126, %2124 ], [ %2034, %2128 ]
  %2135 = phi i64 [ %2002, %2009 ], [ %2127, %2124 ], [ %2132, %2128 ]
  %2136 = phi i8* [ %2003, %2009 ], [ %2125, %2124 ], [ %2003, %2128 ]
  %2137 = phi i32 [ %2010, %2009 ], [ 0, %2124 ], [ 0, %2128 ]
  %2138 = getelementptr inbounds i16, i16* %1, i64 12
  %2139 = load i16, i16* %2138, align 2
  %2140 = sext i16 %2139 to i32
  %2141 = icmp eq i16 %2139, 0
  br i1 %2141, label %2142, label %2144

2142:                                             ; preds = %2133
  %2143 = add nuw nsw i32 %2137, 16
  br label %2266

2144:                                             ; preds = %2133
  %2145 = ashr i32 %2140, 31
  %2146 = add nsw i32 %2145, %2140
  %2147 = xor i32 %2146, %2145
  %2148 = sext i32 %2147 to i64
  %2149 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %2148
  %2150 = load i8, i8* %2149, align 1
  %2151 = zext i8 %2150 to i32
  %2152 = add nuw nsw i32 %2137, %2151
  %2153 = zext i8 %2150 to i64
  %2154 = shl nsw i64 -1, %2153
  %2155 = trunc i64 %2154 to i32
  %2156 = xor i32 %2155, -1
  %2157 = and i32 %2146, %2156
  %2158 = sext i32 %2152 to i64
  %2159 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %2158
  %2160 = load i32, i32* %2159, align 4
  %2161 = shl i32 %2160, %2151
  %2162 = or i32 %2161, %2157
  %2163 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %2158
  %2164 = load i8, i8* %2163, align 1
  %2165 = sext i8 %2164 to i32
  %2166 = add nsw i32 %2165, %2151
  %2167 = sub nsw i32 %2134, %2166
  %2168 = icmp slt i32 %2167, 0
  br i1 %2168, label %2169, label %2261

2169:                                             ; preds = %2144
  %2170 = zext i32 %2134 to i64
  %2171 = shl i64 %2135, %2170
  %2172 = sub nsw i32 0, %2167
  %2173 = ashr i32 %2162, %2172
  %2174 = sext i32 %2173 to i64
  %2175 = or i64 %2171, %2174
  %2176 = and i64 %2175, -9187201950435737472
  %2177 = sub i64 -72340172838076674, %2175
  %2178 = and i64 %2176, %2177
  %2179 = icmp eq i64 %2178, 0
  %2180 = lshr i64 %2175, 56
  %2181 = trunc i64 %2180 to i8
  store i8 %2181, i8* %2136, align 1
  br i1 %2179, label %2235, label %2182

2182:                                             ; preds = %2169
  %2183 = getelementptr inbounds i8, i8* %2136, i64 1
  store i8 0, i8* %2183, align 1
  %2184 = icmp eq i64 %2180, 255
  %2185 = select i1 %2184, i64 2, i64 1
  %2186 = getelementptr inbounds i8, i8* %2136, i64 %2185
  %2187 = lshr i64 %2175, 48
  %2188 = trunc i64 %2187 to i8
  store i8 %2188, i8* %2186, align 1
  %2189 = getelementptr inbounds i8, i8* %2186, i64 1
  store i8 0, i8* %2189, align 1
  %2190 = and i64 %2175, 71776119061217280
  %2191 = icmp eq i64 %2190, 71776119061217280
  %2192 = select i1 %2191, i64 2, i64 1
  %2193 = getelementptr inbounds i8, i8* %2186, i64 %2192
  %2194 = lshr i64 %2175, 40
  %2195 = trunc i64 %2194 to i8
  store i8 %2195, i8* %2193, align 1
  %2196 = getelementptr inbounds i8, i8* %2193, i64 1
  store i8 0, i8* %2196, align 1
  %2197 = and i64 %2175, 280375465082880
  %2198 = icmp eq i64 %2197, 280375465082880
  %2199 = select i1 %2198, i64 2, i64 1
  %2200 = getelementptr inbounds i8, i8* %2193, i64 %2199
  %2201 = lshr i64 %2175, 32
  %2202 = trunc i64 %2201 to i8
  store i8 %2202, i8* %2200, align 1
  %2203 = getelementptr inbounds i8, i8* %2200, i64 1
  store i8 0, i8* %2203, align 1
  %2204 = and i64 %2175, 1095216660480
  %2205 = icmp eq i64 %2204, 1095216660480
  %2206 = select i1 %2205, i64 2, i64 1
  %2207 = getelementptr inbounds i8, i8* %2200, i64 %2206
  %2208 = lshr i64 %2175, 24
  %2209 = trunc i64 %2208 to i8
  store i8 %2209, i8* %2207, align 1
  %2210 = getelementptr inbounds i8, i8* %2207, i64 1
  store i8 0, i8* %2210, align 1
  %2211 = and i64 %2175, 4278190080
  %2212 = icmp eq i64 %2211, 4278190080
  %2213 = select i1 %2212, i64 2, i64 1
  %2214 = getelementptr inbounds i8, i8* %2207, i64 %2213
  %2215 = lshr i64 %2175, 16
  %2216 = trunc i64 %2215 to i8
  store i8 %2216, i8* %2214, align 1
  %2217 = getelementptr inbounds i8, i8* %2214, i64 1
  store i8 0, i8* %2217, align 1
  %2218 = and i64 %2175, 16711680
  %2219 = icmp eq i64 %2218, 16711680
  %2220 = select i1 %2219, i64 2, i64 1
  %2221 = getelementptr inbounds i8, i8* %2214, i64 %2220
  %2222 = lshr i64 %2175, 8
  %2223 = trunc i64 %2222 to i8
  store i8 %2223, i8* %2221, align 1
  %2224 = getelementptr inbounds i8, i8* %2221, i64 1
  store i8 0, i8* %2224, align 1
  %2225 = and i64 %2175, 65280
  %2226 = icmp eq i64 %2225, 65280
  %2227 = select i1 %2226, i64 2, i64 1
  %2228 = getelementptr inbounds i8, i8* %2221, i64 %2227
  %2229 = trunc i64 %2175 to i8
  store i8 %2229, i8* %2228, align 1
  %2230 = getelementptr inbounds i8, i8* %2228, i64 1
  store i8 0, i8* %2230, align 1
  %2231 = and i64 %2175, 255
  %2232 = icmp eq i64 %2231, 255
  %2233 = select i1 %2232, i64 2, i64 1
  %2234 = getelementptr inbounds i8, i8* %2228, i64 %2233
  br label %2257

2235:                                             ; preds = %2169
  %2236 = lshr i64 %2175, 48
  %2237 = trunc i64 %2236 to i8
  %2238 = getelementptr inbounds i8, i8* %2136, i64 1
  store i8 %2237, i8* %2238, align 1
  %2239 = lshr i64 %2175, 40
  %2240 = trunc i64 %2239 to i8
  %2241 = getelementptr inbounds i8, i8* %2136, i64 2
  store i8 %2240, i8* %2241, align 1
  %2242 = lshr i64 %2175, 32
  %2243 = trunc i64 %2242 to i8
  %2244 = getelementptr inbounds i8, i8* %2136, i64 3
  store i8 %2243, i8* %2244, align 1
  %2245 = lshr i64 %2175, 24
  %2246 = trunc i64 %2245 to i8
  %2247 = getelementptr inbounds i8, i8* %2136, i64 4
  store i8 %2246, i8* %2247, align 1
  %2248 = lshr i64 %2175, 16
  %2249 = trunc i64 %2248 to i8
  %2250 = getelementptr inbounds i8, i8* %2136, i64 5
  store i8 %2249, i8* %2250, align 1
  %2251 = lshr i64 %2175, 8
  %2252 = trunc i64 %2251 to i8
  %2253 = getelementptr inbounds i8, i8* %2136, i64 6
  store i8 %2252, i8* %2253, align 1
  %2254 = trunc i64 %2175 to i8
  %2255 = getelementptr inbounds i8, i8* %2136, i64 7
  store i8 %2254, i8* %2255, align 1
  %2256 = getelementptr inbounds i8, i8* %2136, i64 8
  br label %2257

2257:                                             ; preds = %2235, %2182
  %2258 = phi i8* [ %2234, %2182 ], [ %2256, %2235 ]
  %2259 = add nsw i32 %2167, 64
  %2260 = sext i32 %2162 to i64
  br label %2266

2261:                                             ; preds = %2144
  %2262 = zext i32 %2166 to i64
  %2263 = shl i64 %2135, %2262
  %2264 = sext i32 %2162 to i64
  %2265 = or i64 %2263, %2264
  br label %2266

2266:                                             ; preds = %2257, %2261, %2142
  %2267 = phi i32 [ %2134, %2142 ], [ %2259, %2257 ], [ %2167, %2261 ]
  %2268 = phi i64 [ %2135, %2142 ], [ %2260, %2257 ], [ %2265, %2261 ]
  %2269 = phi i8* [ %2136, %2142 ], [ %2258, %2257 ], [ %2136, %2261 ]
  %2270 = phi i32 [ %2143, %2142 ], [ 0, %2257 ], [ 0, %2261 ]
  %2271 = getelementptr inbounds i16, i16* %1, i64 19
  %2272 = load i16, i16* %2271, align 2
  %2273 = sext i16 %2272 to i32
  %2274 = icmp eq i16 %2272, 0
  br i1 %2274, label %2275, label %2277

2275:                                             ; preds = %2266
  %2276 = add nuw nsw i32 %2270, 16
  br label %2517

2277:                                             ; preds = %2266
  %2278 = ashr i32 %2273, 31
  %2279 = add nsw i32 %2278, %2273
  %2280 = xor i32 %2279, %2278
  %2281 = sext i32 %2280 to i64
  %2282 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %2281
  %2283 = load i8, i8* %2282, align 1
  %2284 = zext i8 %2283 to i32
  %2285 = icmp sgt i32 %2270, 255
  br i1 %2285, label %2286, label %2398

2286:                                             ; preds = %2277
  %2287 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %2288 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %2289 = load i8, i8* %2287, align 4
  %2290 = sext i8 %2289 to i32
  %2291 = sub nsw i32 %2267, %2290
  %2292 = icmp slt i32 %2291, 0
  br i1 %2292, label %2293, label %2387

2293:                                             ; preds = %2286
  %2294 = zext i32 %2267 to i64
  %2295 = shl i64 %2268, %2294
  %2296 = load i32, i32* %2288, align 4
  %2297 = sub nsw i32 0, %2291
  %2298 = lshr i32 %2296, %2297
  %2299 = zext i32 %2298 to i64
  %2300 = or i64 %2295, %2299
  %2301 = and i64 %2300, -9187201950435737472
  %2302 = sub i64 -72340172838076674, %2300
  %2303 = and i64 %2301, %2302
  %2304 = icmp eq i64 %2303, 0
  %2305 = lshr i64 %2295, 56
  %2306 = trunc i64 %2305 to i8
  store i8 %2306, i8* %2269, align 1
  br i1 %2304, label %2360, label %2307

2307:                                             ; preds = %2293
  %2308 = getelementptr inbounds i8, i8* %2269, i64 1
  store i8 0, i8* %2308, align 1
  %2309 = icmp eq i64 %2305, 255
  %2310 = select i1 %2309, i64 2, i64 1
  %2311 = getelementptr inbounds i8, i8* %2269, i64 %2310
  %2312 = lshr i64 %2295, 48
  %2313 = trunc i64 %2312 to i8
  store i8 %2313, i8* %2311, align 1
  %2314 = getelementptr inbounds i8, i8* %2311, i64 1
  store i8 0, i8* %2314, align 1
  %2315 = and i64 %2295, 71776119061217280
  %2316 = icmp eq i64 %2315, 71776119061217280
  %2317 = select i1 %2316, i64 2, i64 1
  %2318 = getelementptr inbounds i8, i8* %2311, i64 %2317
  %2319 = lshr i64 %2295, 40
  %2320 = trunc i64 %2319 to i8
  store i8 %2320, i8* %2318, align 1
  %2321 = getelementptr inbounds i8, i8* %2318, i64 1
  store i8 0, i8* %2321, align 1
  %2322 = and i64 %2295, 280375465082880
  %2323 = icmp eq i64 %2322, 280375465082880
  %2324 = select i1 %2323, i64 2, i64 1
  %2325 = getelementptr inbounds i8, i8* %2318, i64 %2324
  %2326 = lshr i64 %2295, 32
  %2327 = trunc i64 %2326 to i8
  store i8 %2327, i8* %2325, align 1
  %2328 = getelementptr inbounds i8, i8* %2325, i64 1
  store i8 0, i8* %2328, align 1
  %2329 = and i64 %2295, 1095216660480
  %2330 = icmp eq i64 %2329, 1095216660480
  %2331 = select i1 %2330, i64 2, i64 1
  %2332 = getelementptr inbounds i8, i8* %2325, i64 %2331
  %2333 = lshr i64 %2300, 24
  %2334 = trunc i64 %2333 to i8
  store i8 %2334, i8* %2332, align 1
  %2335 = getelementptr inbounds i8, i8* %2332, i64 1
  store i8 0, i8* %2335, align 1
  %2336 = and i64 %2300, 4278190080
  %2337 = icmp eq i64 %2336, 4278190080
  %2338 = select i1 %2337, i64 2, i64 1
  %2339 = getelementptr inbounds i8, i8* %2332, i64 %2338
  %2340 = lshr i64 %2300, 16
  %2341 = trunc i64 %2340 to i8
  store i8 %2341, i8* %2339, align 1
  %2342 = getelementptr inbounds i8, i8* %2339, i64 1
  store i8 0, i8* %2342, align 1
  %2343 = and i64 %2300, 16711680
  %2344 = icmp eq i64 %2343, 16711680
  %2345 = select i1 %2344, i64 2, i64 1
  %2346 = getelementptr inbounds i8, i8* %2339, i64 %2345
  %2347 = lshr i64 %2300, 8
  %2348 = trunc i64 %2347 to i8
  store i8 %2348, i8* %2346, align 1
  %2349 = getelementptr inbounds i8, i8* %2346, i64 1
  store i8 0, i8* %2349, align 1
  %2350 = and i64 %2300, 65280
  %2351 = icmp eq i64 %2350, 65280
  %2352 = select i1 %2351, i64 2, i64 1
  %2353 = getelementptr inbounds i8, i8* %2346, i64 %2352
  %2354 = trunc i64 %2300 to i8
  store i8 %2354, i8* %2353, align 1
  %2355 = getelementptr inbounds i8, i8* %2353, i64 1
  store i8 0, i8* %2355, align 1
  %2356 = and i64 %2300, 255
  %2357 = icmp eq i64 %2356, 255
  %2358 = select i1 %2357, i64 2, i64 1
  %2359 = getelementptr inbounds i8, i8* %2353, i64 %2358
  br label %2382

2360:                                             ; preds = %2293
  %2361 = lshr i64 %2295, 48
  %2362 = trunc i64 %2361 to i8
  %2363 = getelementptr inbounds i8, i8* %2269, i64 1
  store i8 %2362, i8* %2363, align 1
  %2364 = lshr i64 %2295, 40
  %2365 = trunc i64 %2364 to i8
  %2366 = getelementptr inbounds i8, i8* %2269, i64 2
  store i8 %2365, i8* %2366, align 1
  %2367 = lshr i64 %2295, 32
  %2368 = trunc i64 %2367 to i8
  %2369 = getelementptr inbounds i8, i8* %2269, i64 3
  store i8 %2368, i8* %2369, align 1
  %2370 = lshr i64 %2300, 24
  %2371 = trunc i64 %2370 to i8
  %2372 = getelementptr inbounds i8, i8* %2269, i64 4
  store i8 %2371, i8* %2372, align 1
  %2373 = lshr i64 %2300, 16
  %2374 = trunc i64 %2373 to i8
  %2375 = getelementptr inbounds i8, i8* %2269, i64 5
  store i8 %2374, i8* %2375, align 1
  %2376 = lshr i64 %2300, 8
  %2377 = trunc i64 %2376 to i8
  %2378 = getelementptr inbounds i8, i8* %2269, i64 6
  store i8 %2377, i8* %2378, align 1
  %2379 = trunc i64 %2300 to i8
  %2380 = getelementptr inbounds i8, i8* %2269, i64 7
  store i8 %2379, i8* %2380, align 1
  %2381 = getelementptr inbounds i8, i8* %2269, i64 8
  br label %2382

2382:                                             ; preds = %2360, %2307
  %2383 = phi i8* [ %2359, %2307 ], [ %2381, %2360 ]
  %2384 = add nsw i32 %2291, 64
  %2385 = load i32, i32* %2288, align 4
  %2386 = zext i32 %2385 to i64
  br label %2393

2387:                                             ; preds = %2286
  %2388 = zext i32 %2290 to i64
  %2389 = shl i64 %2268, %2388
  %2390 = load i32, i32* %2288, align 4
  %2391 = zext i32 %2390 to i64
  %2392 = or i64 %2389, %2391
  br label %2393

2393:                                             ; preds = %2382, %2387
  %2394 = phi i32 [ %2384, %2382 ], [ %2291, %2387 ]
  %2395 = phi i64 [ %2386, %2382 ], [ %2392, %2387 ]
  %2396 = phi i8* [ %2383, %2382 ], [ %2269, %2387 ]
  %2397 = and i32 %2270, 255
  br label %2398

2398:                                             ; preds = %2393, %2277
  %2399 = phi i32 [ %2267, %2277 ], [ %2394, %2393 ]
  %2400 = phi i64 [ %2268, %2277 ], [ %2395, %2393 ]
  %2401 = phi i8* [ %2269, %2277 ], [ %2396, %2393 ]
  %2402 = phi i32 [ %2270, %2277 ], [ %2397, %2393 ]
  %2403 = add nuw nsw i32 %2402, %2284
  %2404 = zext i8 %2283 to i64
  %2405 = shl nsw i64 -1, %2404
  %2406 = trunc i64 %2405 to i32
  %2407 = xor i32 %2406, -1
  %2408 = and i32 %2279, %2407
  %2409 = sext i32 %2403 to i64
  %2410 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %2409
  %2411 = load i32, i32* %2410, align 4
  %2412 = shl i32 %2411, %2284
  %2413 = or i32 %2412, %2408
  %2414 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %2409
  %2415 = load i8, i8* %2414, align 1
  %2416 = sext i8 %2415 to i32
  %2417 = add nsw i32 %2416, %2284
  %2418 = sub nsw i32 %2399, %2417
  %2419 = icmp slt i32 %2418, 0
  br i1 %2419, label %2420, label %2512

2420:                                             ; preds = %2398
  %2421 = zext i32 %2399 to i64
  %2422 = shl i64 %2400, %2421
  %2423 = sub nsw i32 0, %2418
  %2424 = ashr i32 %2413, %2423
  %2425 = sext i32 %2424 to i64
  %2426 = or i64 %2422, %2425
  %2427 = and i64 %2426, -9187201950435737472
  %2428 = sub i64 -72340172838076674, %2426
  %2429 = and i64 %2427, %2428
  %2430 = icmp eq i64 %2429, 0
  %2431 = lshr i64 %2426, 56
  %2432 = trunc i64 %2431 to i8
  store i8 %2432, i8* %2401, align 1
  br i1 %2430, label %2486, label %2433

2433:                                             ; preds = %2420
  %2434 = getelementptr inbounds i8, i8* %2401, i64 1
  store i8 0, i8* %2434, align 1
  %2435 = icmp eq i64 %2431, 255
  %2436 = select i1 %2435, i64 2, i64 1
  %2437 = getelementptr inbounds i8, i8* %2401, i64 %2436
  %2438 = lshr i64 %2426, 48
  %2439 = trunc i64 %2438 to i8
  store i8 %2439, i8* %2437, align 1
  %2440 = getelementptr inbounds i8, i8* %2437, i64 1
  store i8 0, i8* %2440, align 1
  %2441 = and i64 %2426, 71776119061217280
  %2442 = icmp eq i64 %2441, 71776119061217280
  %2443 = select i1 %2442, i64 2, i64 1
  %2444 = getelementptr inbounds i8, i8* %2437, i64 %2443
  %2445 = lshr i64 %2426, 40
  %2446 = trunc i64 %2445 to i8
  store i8 %2446, i8* %2444, align 1
  %2447 = getelementptr inbounds i8, i8* %2444, i64 1
  store i8 0, i8* %2447, align 1
  %2448 = and i64 %2426, 280375465082880
  %2449 = icmp eq i64 %2448, 280375465082880
  %2450 = select i1 %2449, i64 2, i64 1
  %2451 = getelementptr inbounds i8, i8* %2444, i64 %2450
  %2452 = lshr i64 %2426, 32
  %2453 = trunc i64 %2452 to i8
  store i8 %2453, i8* %2451, align 1
  %2454 = getelementptr inbounds i8, i8* %2451, i64 1
  store i8 0, i8* %2454, align 1
  %2455 = and i64 %2426, 1095216660480
  %2456 = icmp eq i64 %2455, 1095216660480
  %2457 = select i1 %2456, i64 2, i64 1
  %2458 = getelementptr inbounds i8, i8* %2451, i64 %2457
  %2459 = lshr i64 %2426, 24
  %2460 = trunc i64 %2459 to i8
  store i8 %2460, i8* %2458, align 1
  %2461 = getelementptr inbounds i8, i8* %2458, i64 1
  store i8 0, i8* %2461, align 1
  %2462 = and i64 %2426, 4278190080
  %2463 = icmp eq i64 %2462, 4278190080
  %2464 = select i1 %2463, i64 2, i64 1
  %2465 = getelementptr inbounds i8, i8* %2458, i64 %2464
  %2466 = lshr i64 %2426, 16
  %2467 = trunc i64 %2466 to i8
  store i8 %2467, i8* %2465, align 1
  %2468 = getelementptr inbounds i8, i8* %2465, i64 1
  store i8 0, i8* %2468, align 1
  %2469 = and i64 %2426, 16711680
  %2470 = icmp eq i64 %2469, 16711680
  %2471 = select i1 %2470, i64 2, i64 1
  %2472 = getelementptr inbounds i8, i8* %2465, i64 %2471
  %2473 = lshr i64 %2426, 8
  %2474 = trunc i64 %2473 to i8
  store i8 %2474, i8* %2472, align 1
  %2475 = getelementptr inbounds i8, i8* %2472, i64 1
  store i8 0, i8* %2475, align 1
  %2476 = and i64 %2426, 65280
  %2477 = icmp eq i64 %2476, 65280
  %2478 = select i1 %2477, i64 2, i64 1
  %2479 = getelementptr inbounds i8, i8* %2472, i64 %2478
  %2480 = trunc i64 %2426 to i8
  store i8 %2480, i8* %2479, align 1
  %2481 = getelementptr inbounds i8, i8* %2479, i64 1
  store i8 0, i8* %2481, align 1
  %2482 = and i64 %2426, 255
  %2483 = icmp eq i64 %2482, 255
  %2484 = select i1 %2483, i64 2, i64 1
  %2485 = getelementptr inbounds i8, i8* %2479, i64 %2484
  br label %2508

2486:                                             ; preds = %2420
  %2487 = lshr i64 %2426, 48
  %2488 = trunc i64 %2487 to i8
  %2489 = getelementptr inbounds i8, i8* %2401, i64 1
  store i8 %2488, i8* %2489, align 1
  %2490 = lshr i64 %2426, 40
  %2491 = trunc i64 %2490 to i8
  %2492 = getelementptr inbounds i8, i8* %2401, i64 2
  store i8 %2491, i8* %2492, align 1
  %2493 = lshr i64 %2426, 32
  %2494 = trunc i64 %2493 to i8
  %2495 = getelementptr inbounds i8, i8* %2401, i64 3
  store i8 %2494, i8* %2495, align 1
  %2496 = lshr i64 %2426, 24
  %2497 = trunc i64 %2496 to i8
  %2498 = getelementptr inbounds i8, i8* %2401, i64 4
  store i8 %2497, i8* %2498, align 1
  %2499 = lshr i64 %2426, 16
  %2500 = trunc i64 %2499 to i8
  %2501 = getelementptr inbounds i8, i8* %2401, i64 5
  store i8 %2500, i8* %2501, align 1
  %2502 = lshr i64 %2426, 8
  %2503 = trunc i64 %2502 to i8
  %2504 = getelementptr inbounds i8, i8* %2401, i64 6
  store i8 %2503, i8* %2504, align 1
  %2505 = trunc i64 %2426 to i8
  %2506 = getelementptr inbounds i8, i8* %2401, i64 7
  store i8 %2505, i8* %2506, align 1
  %2507 = getelementptr inbounds i8, i8* %2401, i64 8
  br label %2508

2508:                                             ; preds = %2486, %2433
  %2509 = phi i8* [ %2485, %2433 ], [ %2507, %2486 ]
  %2510 = add nsw i32 %2418, 64
  %2511 = sext i32 %2413 to i64
  br label %2517

2512:                                             ; preds = %2398
  %2513 = zext i32 %2417 to i64
  %2514 = shl i64 %2400, %2513
  %2515 = sext i32 %2413 to i64
  %2516 = or i64 %2514, %2515
  br label %2517

2517:                                             ; preds = %2508, %2512, %2275
  %2518 = phi i32 [ %2267, %2275 ], [ %2510, %2508 ], [ %2418, %2512 ]
  %2519 = phi i64 [ %2268, %2275 ], [ %2511, %2508 ], [ %2516, %2512 ]
  %2520 = phi i8* [ %2269, %2275 ], [ %2509, %2508 ], [ %2401, %2512 ]
  %2521 = phi i32 [ %2276, %2275 ], [ 0, %2508 ], [ 0, %2512 ]
  %2522 = getelementptr inbounds i16, i16* %1, i64 26
  %2523 = load i16, i16* %2522, align 2
  %2524 = sext i16 %2523 to i32
  %2525 = icmp eq i16 %2523, 0
  br i1 %2525, label %2526, label %2528

2526:                                             ; preds = %2517
  %2527 = add nuw nsw i32 %2521, 16
  br label %2768

2528:                                             ; preds = %2517
  %2529 = ashr i32 %2524, 31
  %2530 = add nsw i32 %2529, %2524
  %2531 = xor i32 %2530, %2529
  %2532 = sext i32 %2531 to i64
  %2533 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %2532
  %2534 = load i8, i8* %2533, align 1
  %2535 = zext i8 %2534 to i32
  %2536 = icmp sgt i32 %2521, 255
  br i1 %2536, label %2537, label %2649

2537:                                             ; preds = %2528
  %2538 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %2539 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %2540 = load i8, i8* %2538, align 4
  %2541 = sext i8 %2540 to i32
  %2542 = sub nsw i32 %2518, %2541
  %2543 = icmp slt i32 %2542, 0
  br i1 %2543, label %2544, label %2638

2544:                                             ; preds = %2537
  %2545 = zext i32 %2518 to i64
  %2546 = shl i64 %2519, %2545
  %2547 = load i32, i32* %2539, align 4
  %2548 = sub nsw i32 0, %2542
  %2549 = lshr i32 %2547, %2548
  %2550 = zext i32 %2549 to i64
  %2551 = or i64 %2546, %2550
  %2552 = and i64 %2551, -9187201950435737472
  %2553 = sub i64 -72340172838076674, %2551
  %2554 = and i64 %2552, %2553
  %2555 = icmp eq i64 %2554, 0
  %2556 = lshr i64 %2546, 56
  %2557 = trunc i64 %2556 to i8
  store i8 %2557, i8* %2520, align 1
  br i1 %2555, label %2611, label %2558

2558:                                             ; preds = %2544
  %2559 = getelementptr inbounds i8, i8* %2520, i64 1
  store i8 0, i8* %2559, align 1
  %2560 = icmp eq i64 %2556, 255
  %2561 = select i1 %2560, i64 2, i64 1
  %2562 = getelementptr inbounds i8, i8* %2520, i64 %2561
  %2563 = lshr i64 %2546, 48
  %2564 = trunc i64 %2563 to i8
  store i8 %2564, i8* %2562, align 1
  %2565 = getelementptr inbounds i8, i8* %2562, i64 1
  store i8 0, i8* %2565, align 1
  %2566 = and i64 %2546, 71776119061217280
  %2567 = icmp eq i64 %2566, 71776119061217280
  %2568 = select i1 %2567, i64 2, i64 1
  %2569 = getelementptr inbounds i8, i8* %2562, i64 %2568
  %2570 = lshr i64 %2546, 40
  %2571 = trunc i64 %2570 to i8
  store i8 %2571, i8* %2569, align 1
  %2572 = getelementptr inbounds i8, i8* %2569, i64 1
  store i8 0, i8* %2572, align 1
  %2573 = and i64 %2546, 280375465082880
  %2574 = icmp eq i64 %2573, 280375465082880
  %2575 = select i1 %2574, i64 2, i64 1
  %2576 = getelementptr inbounds i8, i8* %2569, i64 %2575
  %2577 = lshr i64 %2546, 32
  %2578 = trunc i64 %2577 to i8
  store i8 %2578, i8* %2576, align 1
  %2579 = getelementptr inbounds i8, i8* %2576, i64 1
  store i8 0, i8* %2579, align 1
  %2580 = and i64 %2546, 1095216660480
  %2581 = icmp eq i64 %2580, 1095216660480
  %2582 = select i1 %2581, i64 2, i64 1
  %2583 = getelementptr inbounds i8, i8* %2576, i64 %2582
  %2584 = lshr i64 %2551, 24
  %2585 = trunc i64 %2584 to i8
  store i8 %2585, i8* %2583, align 1
  %2586 = getelementptr inbounds i8, i8* %2583, i64 1
  store i8 0, i8* %2586, align 1
  %2587 = and i64 %2551, 4278190080
  %2588 = icmp eq i64 %2587, 4278190080
  %2589 = select i1 %2588, i64 2, i64 1
  %2590 = getelementptr inbounds i8, i8* %2583, i64 %2589
  %2591 = lshr i64 %2551, 16
  %2592 = trunc i64 %2591 to i8
  store i8 %2592, i8* %2590, align 1
  %2593 = getelementptr inbounds i8, i8* %2590, i64 1
  store i8 0, i8* %2593, align 1
  %2594 = and i64 %2551, 16711680
  %2595 = icmp eq i64 %2594, 16711680
  %2596 = select i1 %2595, i64 2, i64 1
  %2597 = getelementptr inbounds i8, i8* %2590, i64 %2596
  %2598 = lshr i64 %2551, 8
  %2599 = trunc i64 %2598 to i8
  store i8 %2599, i8* %2597, align 1
  %2600 = getelementptr inbounds i8, i8* %2597, i64 1
  store i8 0, i8* %2600, align 1
  %2601 = and i64 %2551, 65280
  %2602 = icmp eq i64 %2601, 65280
  %2603 = select i1 %2602, i64 2, i64 1
  %2604 = getelementptr inbounds i8, i8* %2597, i64 %2603
  %2605 = trunc i64 %2551 to i8
  store i8 %2605, i8* %2604, align 1
  %2606 = getelementptr inbounds i8, i8* %2604, i64 1
  store i8 0, i8* %2606, align 1
  %2607 = and i64 %2551, 255
  %2608 = icmp eq i64 %2607, 255
  %2609 = select i1 %2608, i64 2, i64 1
  %2610 = getelementptr inbounds i8, i8* %2604, i64 %2609
  br label %2633

2611:                                             ; preds = %2544
  %2612 = lshr i64 %2546, 48
  %2613 = trunc i64 %2612 to i8
  %2614 = getelementptr inbounds i8, i8* %2520, i64 1
  store i8 %2613, i8* %2614, align 1
  %2615 = lshr i64 %2546, 40
  %2616 = trunc i64 %2615 to i8
  %2617 = getelementptr inbounds i8, i8* %2520, i64 2
  store i8 %2616, i8* %2617, align 1
  %2618 = lshr i64 %2546, 32
  %2619 = trunc i64 %2618 to i8
  %2620 = getelementptr inbounds i8, i8* %2520, i64 3
  store i8 %2619, i8* %2620, align 1
  %2621 = lshr i64 %2551, 24
  %2622 = trunc i64 %2621 to i8
  %2623 = getelementptr inbounds i8, i8* %2520, i64 4
  store i8 %2622, i8* %2623, align 1
  %2624 = lshr i64 %2551, 16
  %2625 = trunc i64 %2624 to i8
  %2626 = getelementptr inbounds i8, i8* %2520, i64 5
  store i8 %2625, i8* %2626, align 1
  %2627 = lshr i64 %2551, 8
  %2628 = trunc i64 %2627 to i8
  %2629 = getelementptr inbounds i8, i8* %2520, i64 6
  store i8 %2628, i8* %2629, align 1
  %2630 = trunc i64 %2551 to i8
  %2631 = getelementptr inbounds i8, i8* %2520, i64 7
  store i8 %2630, i8* %2631, align 1
  %2632 = getelementptr inbounds i8, i8* %2520, i64 8
  br label %2633

2633:                                             ; preds = %2611, %2558
  %2634 = phi i8* [ %2610, %2558 ], [ %2632, %2611 ]
  %2635 = add nsw i32 %2542, 64
  %2636 = load i32, i32* %2539, align 4
  %2637 = zext i32 %2636 to i64
  br label %2644

2638:                                             ; preds = %2537
  %2639 = zext i32 %2541 to i64
  %2640 = shl i64 %2519, %2639
  %2641 = load i32, i32* %2539, align 4
  %2642 = zext i32 %2641 to i64
  %2643 = or i64 %2640, %2642
  br label %2644

2644:                                             ; preds = %2633, %2638
  %2645 = phi i32 [ %2635, %2633 ], [ %2542, %2638 ]
  %2646 = phi i64 [ %2637, %2633 ], [ %2643, %2638 ]
  %2647 = phi i8* [ %2634, %2633 ], [ %2520, %2638 ]
  %2648 = and i32 %2521, 255
  br label %2649

2649:                                             ; preds = %2644, %2528
  %2650 = phi i32 [ %2518, %2528 ], [ %2645, %2644 ]
  %2651 = phi i64 [ %2519, %2528 ], [ %2646, %2644 ]
  %2652 = phi i8* [ %2520, %2528 ], [ %2647, %2644 ]
  %2653 = phi i32 [ %2521, %2528 ], [ %2648, %2644 ]
  %2654 = add nuw nsw i32 %2653, %2535
  %2655 = zext i8 %2534 to i64
  %2656 = shl nsw i64 -1, %2655
  %2657 = trunc i64 %2656 to i32
  %2658 = xor i32 %2657, -1
  %2659 = and i32 %2530, %2658
  %2660 = sext i32 %2654 to i64
  %2661 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %2660
  %2662 = load i32, i32* %2661, align 4
  %2663 = shl i32 %2662, %2535
  %2664 = or i32 %2663, %2659
  %2665 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %2660
  %2666 = load i8, i8* %2665, align 1
  %2667 = sext i8 %2666 to i32
  %2668 = add nsw i32 %2667, %2535
  %2669 = sub nsw i32 %2650, %2668
  %2670 = icmp slt i32 %2669, 0
  br i1 %2670, label %2671, label %2763

2671:                                             ; preds = %2649
  %2672 = zext i32 %2650 to i64
  %2673 = shl i64 %2651, %2672
  %2674 = sub nsw i32 0, %2669
  %2675 = ashr i32 %2664, %2674
  %2676 = sext i32 %2675 to i64
  %2677 = or i64 %2673, %2676
  %2678 = and i64 %2677, -9187201950435737472
  %2679 = sub i64 -72340172838076674, %2677
  %2680 = and i64 %2678, %2679
  %2681 = icmp eq i64 %2680, 0
  %2682 = lshr i64 %2677, 56
  %2683 = trunc i64 %2682 to i8
  store i8 %2683, i8* %2652, align 1
  br i1 %2681, label %2737, label %2684

2684:                                             ; preds = %2671
  %2685 = getelementptr inbounds i8, i8* %2652, i64 1
  store i8 0, i8* %2685, align 1
  %2686 = icmp eq i64 %2682, 255
  %2687 = select i1 %2686, i64 2, i64 1
  %2688 = getelementptr inbounds i8, i8* %2652, i64 %2687
  %2689 = lshr i64 %2677, 48
  %2690 = trunc i64 %2689 to i8
  store i8 %2690, i8* %2688, align 1
  %2691 = getelementptr inbounds i8, i8* %2688, i64 1
  store i8 0, i8* %2691, align 1
  %2692 = and i64 %2677, 71776119061217280
  %2693 = icmp eq i64 %2692, 71776119061217280
  %2694 = select i1 %2693, i64 2, i64 1
  %2695 = getelementptr inbounds i8, i8* %2688, i64 %2694
  %2696 = lshr i64 %2677, 40
  %2697 = trunc i64 %2696 to i8
  store i8 %2697, i8* %2695, align 1
  %2698 = getelementptr inbounds i8, i8* %2695, i64 1
  store i8 0, i8* %2698, align 1
  %2699 = and i64 %2677, 280375465082880
  %2700 = icmp eq i64 %2699, 280375465082880
  %2701 = select i1 %2700, i64 2, i64 1
  %2702 = getelementptr inbounds i8, i8* %2695, i64 %2701
  %2703 = lshr i64 %2677, 32
  %2704 = trunc i64 %2703 to i8
  store i8 %2704, i8* %2702, align 1
  %2705 = getelementptr inbounds i8, i8* %2702, i64 1
  store i8 0, i8* %2705, align 1
  %2706 = and i64 %2677, 1095216660480
  %2707 = icmp eq i64 %2706, 1095216660480
  %2708 = select i1 %2707, i64 2, i64 1
  %2709 = getelementptr inbounds i8, i8* %2702, i64 %2708
  %2710 = lshr i64 %2677, 24
  %2711 = trunc i64 %2710 to i8
  store i8 %2711, i8* %2709, align 1
  %2712 = getelementptr inbounds i8, i8* %2709, i64 1
  store i8 0, i8* %2712, align 1
  %2713 = and i64 %2677, 4278190080
  %2714 = icmp eq i64 %2713, 4278190080
  %2715 = select i1 %2714, i64 2, i64 1
  %2716 = getelementptr inbounds i8, i8* %2709, i64 %2715
  %2717 = lshr i64 %2677, 16
  %2718 = trunc i64 %2717 to i8
  store i8 %2718, i8* %2716, align 1
  %2719 = getelementptr inbounds i8, i8* %2716, i64 1
  store i8 0, i8* %2719, align 1
  %2720 = and i64 %2677, 16711680
  %2721 = icmp eq i64 %2720, 16711680
  %2722 = select i1 %2721, i64 2, i64 1
  %2723 = getelementptr inbounds i8, i8* %2716, i64 %2722
  %2724 = lshr i64 %2677, 8
  %2725 = trunc i64 %2724 to i8
  store i8 %2725, i8* %2723, align 1
  %2726 = getelementptr inbounds i8, i8* %2723, i64 1
  store i8 0, i8* %2726, align 1
  %2727 = and i64 %2677, 65280
  %2728 = icmp eq i64 %2727, 65280
  %2729 = select i1 %2728, i64 2, i64 1
  %2730 = getelementptr inbounds i8, i8* %2723, i64 %2729
  %2731 = trunc i64 %2677 to i8
  store i8 %2731, i8* %2730, align 1
  %2732 = getelementptr inbounds i8, i8* %2730, i64 1
  store i8 0, i8* %2732, align 1
  %2733 = and i64 %2677, 255
  %2734 = icmp eq i64 %2733, 255
  %2735 = select i1 %2734, i64 2, i64 1
  %2736 = getelementptr inbounds i8, i8* %2730, i64 %2735
  br label %2759

2737:                                             ; preds = %2671
  %2738 = lshr i64 %2677, 48
  %2739 = trunc i64 %2738 to i8
  %2740 = getelementptr inbounds i8, i8* %2652, i64 1
  store i8 %2739, i8* %2740, align 1
  %2741 = lshr i64 %2677, 40
  %2742 = trunc i64 %2741 to i8
  %2743 = getelementptr inbounds i8, i8* %2652, i64 2
  store i8 %2742, i8* %2743, align 1
  %2744 = lshr i64 %2677, 32
  %2745 = trunc i64 %2744 to i8
  %2746 = getelementptr inbounds i8, i8* %2652, i64 3
  store i8 %2745, i8* %2746, align 1
  %2747 = lshr i64 %2677, 24
  %2748 = trunc i64 %2747 to i8
  %2749 = getelementptr inbounds i8, i8* %2652, i64 4
  store i8 %2748, i8* %2749, align 1
  %2750 = lshr i64 %2677, 16
  %2751 = trunc i64 %2750 to i8
  %2752 = getelementptr inbounds i8, i8* %2652, i64 5
  store i8 %2751, i8* %2752, align 1
  %2753 = lshr i64 %2677, 8
  %2754 = trunc i64 %2753 to i8
  %2755 = getelementptr inbounds i8, i8* %2652, i64 6
  store i8 %2754, i8* %2755, align 1
  %2756 = trunc i64 %2677 to i8
  %2757 = getelementptr inbounds i8, i8* %2652, i64 7
  store i8 %2756, i8* %2757, align 1
  %2758 = getelementptr inbounds i8, i8* %2652, i64 8
  br label %2759

2759:                                             ; preds = %2737, %2684
  %2760 = phi i8* [ %2736, %2684 ], [ %2758, %2737 ]
  %2761 = add nsw i32 %2669, 64
  %2762 = sext i32 %2664 to i64
  br label %2768

2763:                                             ; preds = %2649
  %2764 = zext i32 %2668 to i64
  %2765 = shl i64 %2651, %2764
  %2766 = sext i32 %2664 to i64
  %2767 = or i64 %2765, %2766
  br label %2768

2768:                                             ; preds = %2759, %2763, %2526
  %2769 = phi i32 [ %2518, %2526 ], [ %2761, %2759 ], [ %2669, %2763 ]
  %2770 = phi i64 [ %2519, %2526 ], [ %2762, %2759 ], [ %2767, %2763 ]
  %2771 = phi i8* [ %2520, %2526 ], [ %2760, %2759 ], [ %2652, %2763 ]
  %2772 = phi i32 [ %2527, %2526 ], [ 0, %2759 ], [ 0, %2763 ]
  %2773 = getelementptr inbounds i16, i16* %1, i64 33
  %2774 = load i16, i16* %2773, align 2
  %2775 = sext i16 %2774 to i32
  %2776 = icmp eq i16 %2774, 0
  br i1 %2776, label %2777, label %2779

2777:                                             ; preds = %2768
  %2778 = add nuw nsw i32 %2772, 16
  br label %3019

2779:                                             ; preds = %2768
  %2780 = ashr i32 %2775, 31
  %2781 = add nsw i32 %2780, %2775
  %2782 = xor i32 %2781, %2780
  %2783 = sext i32 %2782 to i64
  %2784 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %2783
  %2785 = load i8, i8* %2784, align 1
  %2786 = zext i8 %2785 to i32
  %2787 = icmp sgt i32 %2772, 255
  br i1 %2787, label %2788, label %2900

2788:                                             ; preds = %2779
  %2789 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %2790 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %2791 = load i8, i8* %2789, align 4
  %2792 = sext i8 %2791 to i32
  %2793 = sub nsw i32 %2769, %2792
  %2794 = icmp slt i32 %2793, 0
  br i1 %2794, label %2795, label %2889

2795:                                             ; preds = %2788
  %2796 = zext i32 %2769 to i64
  %2797 = shl i64 %2770, %2796
  %2798 = load i32, i32* %2790, align 4
  %2799 = sub nsw i32 0, %2793
  %2800 = lshr i32 %2798, %2799
  %2801 = zext i32 %2800 to i64
  %2802 = or i64 %2797, %2801
  %2803 = and i64 %2802, -9187201950435737472
  %2804 = sub i64 -72340172838076674, %2802
  %2805 = and i64 %2803, %2804
  %2806 = icmp eq i64 %2805, 0
  %2807 = lshr i64 %2797, 56
  %2808 = trunc i64 %2807 to i8
  store i8 %2808, i8* %2771, align 1
  br i1 %2806, label %2862, label %2809

2809:                                             ; preds = %2795
  %2810 = getelementptr inbounds i8, i8* %2771, i64 1
  store i8 0, i8* %2810, align 1
  %2811 = icmp eq i64 %2807, 255
  %2812 = select i1 %2811, i64 2, i64 1
  %2813 = getelementptr inbounds i8, i8* %2771, i64 %2812
  %2814 = lshr i64 %2797, 48
  %2815 = trunc i64 %2814 to i8
  store i8 %2815, i8* %2813, align 1
  %2816 = getelementptr inbounds i8, i8* %2813, i64 1
  store i8 0, i8* %2816, align 1
  %2817 = and i64 %2797, 71776119061217280
  %2818 = icmp eq i64 %2817, 71776119061217280
  %2819 = select i1 %2818, i64 2, i64 1
  %2820 = getelementptr inbounds i8, i8* %2813, i64 %2819
  %2821 = lshr i64 %2797, 40
  %2822 = trunc i64 %2821 to i8
  store i8 %2822, i8* %2820, align 1
  %2823 = getelementptr inbounds i8, i8* %2820, i64 1
  store i8 0, i8* %2823, align 1
  %2824 = and i64 %2797, 280375465082880
  %2825 = icmp eq i64 %2824, 280375465082880
  %2826 = select i1 %2825, i64 2, i64 1
  %2827 = getelementptr inbounds i8, i8* %2820, i64 %2826
  %2828 = lshr i64 %2797, 32
  %2829 = trunc i64 %2828 to i8
  store i8 %2829, i8* %2827, align 1
  %2830 = getelementptr inbounds i8, i8* %2827, i64 1
  store i8 0, i8* %2830, align 1
  %2831 = and i64 %2797, 1095216660480
  %2832 = icmp eq i64 %2831, 1095216660480
  %2833 = select i1 %2832, i64 2, i64 1
  %2834 = getelementptr inbounds i8, i8* %2827, i64 %2833
  %2835 = lshr i64 %2802, 24
  %2836 = trunc i64 %2835 to i8
  store i8 %2836, i8* %2834, align 1
  %2837 = getelementptr inbounds i8, i8* %2834, i64 1
  store i8 0, i8* %2837, align 1
  %2838 = and i64 %2802, 4278190080
  %2839 = icmp eq i64 %2838, 4278190080
  %2840 = select i1 %2839, i64 2, i64 1
  %2841 = getelementptr inbounds i8, i8* %2834, i64 %2840
  %2842 = lshr i64 %2802, 16
  %2843 = trunc i64 %2842 to i8
  store i8 %2843, i8* %2841, align 1
  %2844 = getelementptr inbounds i8, i8* %2841, i64 1
  store i8 0, i8* %2844, align 1
  %2845 = and i64 %2802, 16711680
  %2846 = icmp eq i64 %2845, 16711680
  %2847 = select i1 %2846, i64 2, i64 1
  %2848 = getelementptr inbounds i8, i8* %2841, i64 %2847
  %2849 = lshr i64 %2802, 8
  %2850 = trunc i64 %2849 to i8
  store i8 %2850, i8* %2848, align 1
  %2851 = getelementptr inbounds i8, i8* %2848, i64 1
  store i8 0, i8* %2851, align 1
  %2852 = and i64 %2802, 65280
  %2853 = icmp eq i64 %2852, 65280
  %2854 = select i1 %2853, i64 2, i64 1
  %2855 = getelementptr inbounds i8, i8* %2848, i64 %2854
  %2856 = trunc i64 %2802 to i8
  store i8 %2856, i8* %2855, align 1
  %2857 = getelementptr inbounds i8, i8* %2855, i64 1
  store i8 0, i8* %2857, align 1
  %2858 = and i64 %2802, 255
  %2859 = icmp eq i64 %2858, 255
  %2860 = select i1 %2859, i64 2, i64 1
  %2861 = getelementptr inbounds i8, i8* %2855, i64 %2860
  br label %2884

2862:                                             ; preds = %2795
  %2863 = lshr i64 %2797, 48
  %2864 = trunc i64 %2863 to i8
  %2865 = getelementptr inbounds i8, i8* %2771, i64 1
  store i8 %2864, i8* %2865, align 1
  %2866 = lshr i64 %2797, 40
  %2867 = trunc i64 %2866 to i8
  %2868 = getelementptr inbounds i8, i8* %2771, i64 2
  store i8 %2867, i8* %2868, align 1
  %2869 = lshr i64 %2797, 32
  %2870 = trunc i64 %2869 to i8
  %2871 = getelementptr inbounds i8, i8* %2771, i64 3
  store i8 %2870, i8* %2871, align 1
  %2872 = lshr i64 %2802, 24
  %2873 = trunc i64 %2872 to i8
  %2874 = getelementptr inbounds i8, i8* %2771, i64 4
  store i8 %2873, i8* %2874, align 1
  %2875 = lshr i64 %2802, 16
  %2876 = trunc i64 %2875 to i8
  %2877 = getelementptr inbounds i8, i8* %2771, i64 5
  store i8 %2876, i8* %2877, align 1
  %2878 = lshr i64 %2802, 8
  %2879 = trunc i64 %2878 to i8
  %2880 = getelementptr inbounds i8, i8* %2771, i64 6
  store i8 %2879, i8* %2880, align 1
  %2881 = trunc i64 %2802 to i8
  %2882 = getelementptr inbounds i8, i8* %2771, i64 7
  store i8 %2881, i8* %2882, align 1
  %2883 = getelementptr inbounds i8, i8* %2771, i64 8
  br label %2884

2884:                                             ; preds = %2862, %2809
  %2885 = phi i8* [ %2861, %2809 ], [ %2883, %2862 ]
  %2886 = add nsw i32 %2793, 64
  %2887 = load i32, i32* %2790, align 4
  %2888 = zext i32 %2887 to i64
  br label %2895

2889:                                             ; preds = %2788
  %2890 = zext i32 %2792 to i64
  %2891 = shl i64 %2770, %2890
  %2892 = load i32, i32* %2790, align 4
  %2893 = zext i32 %2892 to i64
  %2894 = or i64 %2891, %2893
  br label %2895

2895:                                             ; preds = %2884, %2889
  %2896 = phi i32 [ %2886, %2884 ], [ %2793, %2889 ]
  %2897 = phi i64 [ %2888, %2884 ], [ %2894, %2889 ]
  %2898 = phi i8* [ %2885, %2884 ], [ %2771, %2889 ]
  %2899 = and i32 %2772, 255
  br label %2900

2900:                                             ; preds = %2895, %2779
  %2901 = phi i32 [ %2769, %2779 ], [ %2896, %2895 ]
  %2902 = phi i64 [ %2770, %2779 ], [ %2897, %2895 ]
  %2903 = phi i8* [ %2771, %2779 ], [ %2898, %2895 ]
  %2904 = phi i32 [ %2772, %2779 ], [ %2899, %2895 ]
  %2905 = add nuw nsw i32 %2904, %2786
  %2906 = zext i8 %2785 to i64
  %2907 = shl nsw i64 -1, %2906
  %2908 = trunc i64 %2907 to i32
  %2909 = xor i32 %2908, -1
  %2910 = and i32 %2781, %2909
  %2911 = sext i32 %2905 to i64
  %2912 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %2911
  %2913 = load i32, i32* %2912, align 4
  %2914 = shl i32 %2913, %2786
  %2915 = or i32 %2914, %2910
  %2916 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %2911
  %2917 = load i8, i8* %2916, align 1
  %2918 = sext i8 %2917 to i32
  %2919 = add nsw i32 %2918, %2786
  %2920 = sub nsw i32 %2901, %2919
  %2921 = icmp slt i32 %2920, 0
  br i1 %2921, label %2922, label %3014

2922:                                             ; preds = %2900
  %2923 = zext i32 %2901 to i64
  %2924 = shl i64 %2902, %2923
  %2925 = sub nsw i32 0, %2920
  %2926 = ashr i32 %2915, %2925
  %2927 = sext i32 %2926 to i64
  %2928 = or i64 %2924, %2927
  %2929 = and i64 %2928, -9187201950435737472
  %2930 = sub i64 -72340172838076674, %2928
  %2931 = and i64 %2929, %2930
  %2932 = icmp eq i64 %2931, 0
  %2933 = lshr i64 %2928, 56
  %2934 = trunc i64 %2933 to i8
  store i8 %2934, i8* %2903, align 1
  br i1 %2932, label %2988, label %2935

2935:                                             ; preds = %2922
  %2936 = getelementptr inbounds i8, i8* %2903, i64 1
  store i8 0, i8* %2936, align 1
  %2937 = icmp eq i64 %2933, 255
  %2938 = select i1 %2937, i64 2, i64 1
  %2939 = getelementptr inbounds i8, i8* %2903, i64 %2938
  %2940 = lshr i64 %2928, 48
  %2941 = trunc i64 %2940 to i8
  store i8 %2941, i8* %2939, align 1
  %2942 = getelementptr inbounds i8, i8* %2939, i64 1
  store i8 0, i8* %2942, align 1
  %2943 = and i64 %2928, 71776119061217280
  %2944 = icmp eq i64 %2943, 71776119061217280
  %2945 = select i1 %2944, i64 2, i64 1
  %2946 = getelementptr inbounds i8, i8* %2939, i64 %2945
  %2947 = lshr i64 %2928, 40
  %2948 = trunc i64 %2947 to i8
  store i8 %2948, i8* %2946, align 1
  %2949 = getelementptr inbounds i8, i8* %2946, i64 1
  store i8 0, i8* %2949, align 1
  %2950 = and i64 %2928, 280375465082880
  %2951 = icmp eq i64 %2950, 280375465082880
  %2952 = select i1 %2951, i64 2, i64 1
  %2953 = getelementptr inbounds i8, i8* %2946, i64 %2952
  %2954 = lshr i64 %2928, 32
  %2955 = trunc i64 %2954 to i8
  store i8 %2955, i8* %2953, align 1
  %2956 = getelementptr inbounds i8, i8* %2953, i64 1
  store i8 0, i8* %2956, align 1
  %2957 = and i64 %2928, 1095216660480
  %2958 = icmp eq i64 %2957, 1095216660480
  %2959 = select i1 %2958, i64 2, i64 1
  %2960 = getelementptr inbounds i8, i8* %2953, i64 %2959
  %2961 = lshr i64 %2928, 24
  %2962 = trunc i64 %2961 to i8
  store i8 %2962, i8* %2960, align 1
  %2963 = getelementptr inbounds i8, i8* %2960, i64 1
  store i8 0, i8* %2963, align 1
  %2964 = and i64 %2928, 4278190080
  %2965 = icmp eq i64 %2964, 4278190080
  %2966 = select i1 %2965, i64 2, i64 1
  %2967 = getelementptr inbounds i8, i8* %2960, i64 %2966
  %2968 = lshr i64 %2928, 16
  %2969 = trunc i64 %2968 to i8
  store i8 %2969, i8* %2967, align 1
  %2970 = getelementptr inbounds i8, i8* %2967, i64 1
  store i8 0, i8* %2970, align 1
  %2971 = and i64 %2928, 16711680
  %2972 = icmp eq i64 %2971, 16711680
  %2973 = select i1 %2972, i64 2, i64 1
  %2974 = getelementptr inbounds i8, i8* %2967, i64 %2973
  %2975 = lshr i64 %2928, 8
  %2976 = trunc i64 %2975 to i8
  store i8 %2976, i8* %2974, align 1
  %2977 = getelementptr inbounds i8, i8* %2974, i64 1
  store i8 0, i8* %2977, align 1
  %2978 = and i64 %2928, 65280
  %2979 = icmp eq i64 %2978, 65280
  %2980 = select i1 %2979, i64 2, i64 1
  %2981 = getelementptr inbounds i8, i8* %2974, i64 %2980
  %2982 = trunc i64 %2928 to i8
  store i8 %2982, i8* %2981, align 1
  %2983 = getelementptr inbounds i8, i8* %2981, i64 1
  store i8 0, i8* %2983, align 1
  %2984 = and i64 %2928, 255
  %2985 = icmp eq i64 %2984, 255
  %2986 = select i1 %2985, i64 2, i64 1
  %2987 = getelementptr inbounds i8, i8* %2981, i64 %2986
  br label %3010

2988:                                             ; preds = %2922
  %2989 = lshr i64 %2928, 48
  %2990 = trunc i64 %2989 to i8
  %2991 = getelementptr inbounds i8, i8* %2903, i64 1
  store i8 %2990, i8* %2991, align 1
  %2992 = lshr i64 %2928, 40
  %2993 = trunc i64 %2992 to i8
  %2994 = getelementptr inbounds i8, i8* %2903, i64 2
  store i8 %2993, i8* %2994, align 1
  %2995 = lshr i64 %2928, 32
  %2996 = trunc i64 %2995 to i8
  %2997 = getelementptr inbounds i8, i8* %2903, i64 3
  store i8 %2996, i8* %2997, align 1
  %2998 = lshr i64 %2928, 24
  %2999 = trunc i64 %2998 to i8
  %3000 = getelementptr inbounds i8, i8* %2903, i64 4
  store i8 %2999, i8* %3000, align 1
  %3001 = lshr i64 %2928, 16
  %3002 = trunc i64 %3001 to i8
  %3003 = getelementptr inbounds i8, i8* %2903, i64 5
  store i8 %3002, i8* %3003, align 1
  %3004 = lshr i64 %2928, 8
  %3005 = trunc i64 %3004 to i8
  %3006 = getelementptr inbounds i8, i8* %2903, i64 6
  store i8 %3005, i8* %3006, align 1
  %3007 = trunc i64 %2928 to i8
  %3008 = getelementptr inbounds i8, i8* %2903, i64 7
  store i8 %3007, i8* %3008, align 1
  %3009 = getelementptr inbounds i8, i8* %2903, i64 8
  br label %3010

3010:                                             ; preds = %2988, %2935
  %3011 = phi i8* [ %2987, %2935 ], [ %3009, %2988 ]
  %3012 = add nsw i32 %2920, 64
  %3013 = sext i32 %2915 to i64
  br label %3019

3014:                                             ; preds = %2900
  %3015 = zext i32 %2919 to i64
  %3016 = shl i64 %2902, %3015
  %3017 = sext i32 %2915 to i64
  %3018 = or i64 %3016, %3017
  br label %3019

3019:                                             ; preds = %3010, %3014, %2777
  %3020 = phi i32 [ %2769, %2777 ], [ %3012, %3010 ], [ %2920, %3014 ]
  %3021 = phi i64 [ %2770, %2777 ], [ %3013, %3010 ], [ %3018, %3014 ]
  %3022 = phi i8* [ %2771, %2777 ], [ %3011, %3010 ], [ %2903, %3014 ]
  %3023 = phi i32 [ %2778, %2777 ], [ 0, %3010 ], [ 0, %3014 ]
  %3024 = getelementptr inbounds i16, i16* %1, i64 40
  %3025 = load i16, i16* %3024, align 2
  %3026 = sext i16 %3025 to i32
  %3027 = icmp eq i16 %3025, 0
  br i1 %3027, label %3028, label %3030

3028:                                             ; preds = %3019
  %3029 = add nuw nsw i32 %3023, 16
  br label %3270

3030:                                             ; preds = %3019
  %3031 = ashr i32 %3026, 31
  %3032 = add nsw i32 %3031, %3026
  %3033 = xor i32 %3032, %3031
  %3034 = sext i32 %3033 to i64
  %3035 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %3034
  %3036 = load i8, i8* %3035, align 1
  %3037 = zext i8 %3036 to i32
  %3038 = icmp sgt i32 %3023, 255
  br i1 %3038, label %3039, label %3151

3039:                                             ; preds = %3030
  %3040 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %3041 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %3042 = load i8, i8* %3040, align 4
  %3043 = sext i8 %3042 to i32
  %3044 = sub nsw i32 %3020, %3043
  %3045 = icmp slt i32 %3044, 0
  br i1 %3045, label %3046, label %3140

3046:                                             ; preds = %3039
  %3047 = zext i32 %3020 to i64
  %3048 = shl i64 %3021, %3047
  %3049 = load i32, i32* %3041, align 4
  %3050 = sub nsw i32 0, %3044
  %3051 = lshr i32 %3049, %3050
  %3052 = zext i32 %3051 to i64
  %3053 = or i64 %3048, %3052
  %3054 = and i64 %3053, -9187201950435737472
  %3055 = sub i64 -72340172838076674, %3053
  %3056 = and i64 %3054, %3055
  %3057 = icmp eq i64 %3056, 0
  %3058 = lshr i64 %3048, 56
  %3059 = trunc i64 %3058 to i8
  store i8 %3059, i8* %3022, align 1
  br i1 %3057, label %3113, label %3060

3060:                                             ; preds = %3046
  %3061 = getelementptr inbounds i8, i8* %3022, i64 1
  store i8 0, i8* %3061, align 1
  %3062 = icmp eq i64 %3058, 255
  %3063 = select i1 %3062, i64 2, i64 1
  %3064 = getelementptr inbounds i8, i8* %3022, i64 %3063
  %3065 = lshr i64 %3048, 48
  %3066 = trunc i64 %3065 to i8
  store i8 %3066, i8* %3064, align 1
  %3067 = getelementptr inbounds i8, i8* %3064, i64 1
  store i8 0, i8* %3067, align 1
  %3068 = and i64 %3048, 71776119061217280
  %3069 = icmp eq i64 %3068, 71776119061217280
  %3070 = select i1 %3069, i64 2, i64 1
  %3071 = getelementptr inbounds i8, i8* %3064, i64 %3070
  %3072 = lshr i64 %3048, 40
  %3073 = trunc i64 %3072 to i8
  store i8 %3073, i8* %3071, align 1
  %3074 = getelementptr inbounds i8, i8* %3071, i64 1
  store i8 0, i8* %3074, align 1
  %3075 = and i64 %3048, 280375465082880
  %3076 = icmp eq i64 %3075, 280375465082880
  %3077 = select i1 %3076, i64 2, i64 1
  %3078 = getelementptr inbounds i8, i8* %3071, i64 %3077
  %3079 = lshr i64 %3048, 32
  %3080 = trunc i64 %3079 to i8
  store i8 %3080, i8* %3078, align 1
  %3081 = getelementptr inbounds i8, i8* %3078, i64 1
  store i8 0, i8* %3081, align 1
  %3082 = and i64 %3048, 1095216660480
  %3083 = icmp eq i64 %3082, 1095216660480
  %3084 = select i1 %3083, i64 2, i64 1
  %3085 = getelementptr inbounds i8, i8* %3078, i64 %3084
  %3086 = lshr i64 %3053, 24
  %3087 = trunc i64 %3086 to i8
  store i8 %3087, i8* %3085, align 1
  %3088 = getelementptr inbounds i8, i8* %3085, i64 1
  store i8 0, i8* %3088, align 1
  %3089 = and i64 %3053, 4278190080
  %3090 = icmp eq i64 %3089, 4278190080
  %3091 = select i1 %3090, i64 2, i64 1
  %3092 = getelementptr inbounds i8, i8* %3085, i64 %3091
  %3093 = lshr i64 %3053, 16
  %3094 = trunc i64 %3093 to i8
  store i8 %3094, i8* %3092, align 1
  %3095 = getelementptr inbounds i8, i8* %3092, i64 1
  store i8 0, i8* %3095, align 1
  %3096 = and i64 %3053, 16711680
  %3097 = icmp eq i64 %3096, 16711680
  %3098 = select i1 %3097, i64 2, i64 1
  %3099 = getelementptr inbounds i8, i8* %3092, i64 %3098
  %3100 = lshr i64 %3053, 8
  %3101 = trunc i64 %3100 to i8
  store i8 %3101, i8* %3099, align 1
  %3102 = getelementptr inbounds i8, i8* %3099, i64 1
  store i8 0, i8* %3102, align 1
  %3103 = and i64 %3053, 65280
  %3104 = icmp eq i64 %3103, 65280
  %3105 = select i1 %3104, i64 2, i64 1
  %3106 = getelementptr inbounds i8, i8* %3099, i64 %3105
  %3107 = trunc i64 %3053 to i8
  store i8 %3107, i8* %3106, align 1
  %3108 = getelementptr inbounds i8, i8* %3106, i64 1
  store i8 0, i8* %3108, align 1
  %3109 = and i64 %3053, 255
  %3110 = icmp eq i64 %3109, 255
  %3111 = select i1 %3110, i64 2, i64 1
  %3112 = getelementptr inbounds i8, i8* %3106, i64 %3111
  br label %3135

3113:                                             ; preds = %3046
  %3114 = lshr i64 %3048, 48
  %3115 = trunc i64 %3114 to i8
  %3116 = getelementptr inbounds i8, i8* %3022, i64 1
  store i8 %3115, i8* %3116, align 1
  %3117 = lshr i64 %3048, 40
  %3118 = trunc i64 %3117 to i8
  %3119 = getelementptr inbounds i8, i8* %3022, i64 2
  store i8 %3118, i8* %3119, align 1
  %3120 = lshr i64 %3048, 32
  %3121 = trunc i64 %3120 to i8
  %3122 = getelementptr inbounds i8, i8* %3022, i64 3
  store i8 %3121, i8* %3122, align 1
  %3123 = lshr i64 %3053, 24
  %3124 = trunc i64 %3123 to i8
  %3125 = getelementptr inbounds i8, i8* %3022, i64 4
  store i8 %3124, i8* %3125, align 1
  %3126 = lshr i64 %3053, 16
  %3127 = trunc i64 %3126 to i8
  %3128 = getelementptr inbounds i8, i8* %3022, i64 5
  store i8 %3127, i8* %3128, align 1
  %3129 = lshr i64 %3053, 8
  %3130 = trunc i64 %3129 to i8
  %3131 = getelementptr inbounds i8, i8* %3022, i64 6
  store i8 %3130, i8* %3131, align 1
  %3132 = trunc i64 %3053 to i8
  %3133 = getelementptr inbounds i8, i8* %3022, i64 7
  store i8 %3132, i8* %3133, align 1
  %3134 = getelementptr inbounds i8, i8* %3022, i64 8
  br label %3135

3135:                                             ; preds = %3113, %3060
  %3136 = phi i8* [ %3112, %3060 ], [ %3134, %3113 ]
  %3137 = add nsw i32 %3044, 64
  %3138 = load i32, i32* %3041, align 4
  %3139 = zext i32 %3138 to i64
  br label %3146

3140:                                             ; preds = %3039
  %3141 = zext i32 %3043 to i64
  %3142 = shl i64 %3021, %3141
  %3143 = load i32, i32* %3041, align 4
  %3144 = zext i32 %3143 to i64
  %3145 = or i64 %3142, %3144
  br label %3146

3146:                                             ; preds = %3135, %3140
  %3147 = phi i32 [ %3137, %3135 ], [ %3044, %3140 ]
  %3148 = phi i64 [ %3139, %3135 ], [ %3145, %3140 ]
  %3149 = phi i8* [ %3136, %3135 ], [ %3022, %3140 ]
  %3150 = and i32 %3023, 255
  br label %3151

3151:                                             ; preds = %3146, %3030
  %3152 = phi i32 [ %3020, %3030 ], [ %3147, %3146 ]
  %3153 = phi i64 [ %3021, %3030 ], [ %3148, %3146 ]
  %3154 = phi i8* [ %3022, %3030 ], [ %3149, %3146 ]
  %3155 = phi i32 [ %3023, %3030 ], [ %3150, %3146 ]
  %3156 = add nuw nsw i32 %3155, %3037
  %3157 = zext i8 %3036 to i64
  %3158 = shl nsw i64 -1, %3157
  %3159 = trunc i64 %3158 to i32
  %3160 = xor i32 %3159, -1
  %3161 = and i32 %3032, %3160
  %3162 = sext i32 %3156 to i64
  %3163 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %3162
  %3164 = load i32, i32* %3163, align 4
  %3165 = shl i32 %3164, %3037
  %3166 = or i32 %3165, %3161
  %3167 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %3162
  %3168 = load i8, i8* %3167, align 1
  %3169 = sext i8 %3168 to i32
  %3170 = add nsw i32 %3169, %3037
  %3171 = sub nsw i32 %3152, %3170
  %3172 = icmp slt i32 %3171, 0
  br i1 %3172, label %3173, label %3265

3173:                                             ; preds = %3151
  %3174 = zext i32 %3152 to i64
  %3175 = shl i64 %3153, %3174
  %3176 = sub nsw i32 0, %3171
  %3177 = ashr i32 %3166, %3176
  %3178 = sext i32 %3177 to i64
  %3179 = or i64 %3175, %3178
  %3180 = and i64 %3179, -9187201950435737472
  %3181 = sub i64 -72340172838076674, %3179
  %3182 = and i64 %3180, %3181
  %3183 = icmp eq i64 %3182, 0
  %3184 = lshr i64 %3179, 56
  %3185 = trunc i64 %3184 to i8
  store i8 %3185, i8* %3154, align 1
  br i1 %3183, label %3239, label %3186

3186:                                             ; preds = %3173
  %3187 = getelementptr inbounds i8, i8* %3154, i64 1
  store i8 0, i8* %3187, align 1
  %3188 = icmp eq i64 %3184, 255
  %3189 = select i1 %3188, i64 2, i64 1
  %3190 = getelementptr inbounds i8, i8* %3154, i64 %3189
  %3191 = lshr i64 %3179, 48
  %3192 = trunc i64 %3191 to i8
  store i8 %3192, i8* %3190, align 1
  %3193 = getelementptr inbounds i8, i8* %3190, i64 1
  store i8 0, i8* %3193, align 1
  %3194 = and i64 %3179, 71776119061217280
  %3195 = icmp eq i64 %3194, 71776119061217280
  %3196 = select i1 %3195, i64 2, i64 1
  %3197 = getelementptr inbounds i8, i8* %3190, i64 %3196
  %3198 = lshr i64 %3179, 40
  %3199 = trunc i64 %3198 to i8
  store i8 %3199, i8* %3197, align 1
  %3200 = getelementptr inbounds i8, i8* %3197, i64 1
  store i8 0, i8* %3200, align 1
  %3201 = and i64 %3179, 280375465082880
  %3202 = icmp eq i64 %3201, 280375465082880
  %3203 = select i1 %3202, i64 2, i64 1
  %3204 = getelementptr inbounds i8, i8* %3197, i64 %3203
  %3205 = lshr i64 %3179, 32
  %3206 = trunc i64 %3205 to i8
  store i8 %3206, i8* %3204, align 1
  %3207 = getelementptr inbounds i8, i8* %3204, i64 1
  store i8 0, i8* %3207, align 1
  %3208 = and i64 %3179, 1095216660480
  %3209 = icmp eq i64 %3208, 1095216660480
  %3210 = select i1 %3209, i64 2, i64 1
  %3211 = getelementptr inbounds i8, i8* %3204, i64 %3210
  %3212 = lshr i64 %3179, 24
  %3213 = trunc i64 %3212 to i8
  store i8 %3213, i8* %3211, align 1
  %3214 = getelementptr inbounds i8, i8* %3211, i64 1
  store i8 0, i8* %3214, align 1
  %3215 = and i64 %3179, 4278190080
  %3216 = icmp eq i64 %3215, 4278190080
  %3217 = select i1 %3216, i64 2, i64 1
  %3218 = getelementptr inbounds i8, i8* %3211, i64 %3217
  %3219 = lshr i64 %3179, 16
  %3220 = trunc i64 %3219 to i8
  store i8 %3220, i8* %3218, align 1
  %3221 = getelementptr inbounds i8, i8* %3218, i64 1
  store i8 0, i8* %3221, align 1
  %3222 = and i64 %3179, 16711680
  %3223 = icmp eq i64 %3222, 16711680
  %3224 = select i1 %3223, i64 2, i64 1
  %3225 = getelementptr inbounds i8, i8* %3218, i64 %3224
  %3226 = lshr i64 %3179, 8
  %3227 = trunc i64 %3226 to i8
  store i8 %3227, i8* %3225, align 1
  %3228 = getelementptr inbounds i8, i8* %3225, i64 1
  store i8 0, i8* %3228, align 1
  %3229 = and i64 %3179, 65280
  %3230 = icmp eq i64 %3229, 65280
  %3231 = select i1 %3230, i64 2, i64 1
  %3232 = getelementptr inbounds i8, i8* %3225, i64 %3231
  %3233 = trunc i64 %3179 to i8
  store i8 %3233, i8* %3232, align 1
  %3234 = getelementptr inbounds i8, i8* %3232, i64 1
  store i8 0, i8* %3234, align 1
  %3235 = and i64 %3179, 255
  %3236 = icmp eq i64 %3235, 255
  %3237 = select i1 %3236, i64 2, i64 1
  %3238 = getelementptr inbounds i8, i8* %3232, i64 %3237
  br label %3261

3239:                                             ; preds = %3173
  %3240 = lshr i64 %3179, 48
  %3241 = trunc i64 %3240 to i8
  %3242 = getelementptr inbounds i8, i8* %3154, i64 1
  store i8 %3241, i8* %3242, align 1
  %3243 = lshr i64 %3179, 40
  %3244 = trunc i64 %3243 to i8
  %3245 = getelementptr inbounds i8, i8* %3154, i64 2
  store i8 %3244, i8* %3245, align 1
  %3246 = lshr i64 %3179, 32
  %3247 = trunc i64 %3246 to i8
  %3248 = getelementptr inbounds i8, i8* %3154, i64 3
  store i8 %3247, i8* %3248, align 1
  %3249 = lshr i64 %3179, 24
  %3250 = trunc i64 %3249 to i8
  %3251 = getelementptr inbounds i8, i8* %3154, i64 4
  store i8 %3250, i8* %3251, align 1
  %3252 = lshr i64 %3179, 16
  %3253 = trunc i64 %3252 to i8
  %3254 = getelementptr inbounds i8, i8* %3154, i64 5
  store i8 %3253, i8* %3254, align 1
  %3255 = lshr i64 %3179, 8
  %3256 = trunc i64 %3255 to i8
  %3257 = getelementptr inbounds i8, i8* %3154, i64 6
  store i8 %3256, i8* %3257, align 1
  %3258 = trunc i64 %3179 to i8
  %3259 = getelementptr inbounds i8, i8* %3154, i64 7
  store i8 %3258, i8* %3259, align 1
  %3260 = getelementptr inbounds i8, i8* %3154, i64 8
  br label %3261

3261:                                             ; preds = %3239, %3186
  %3262 = phi i8* [ %3238, %3186 ], [ %3260, %3239 ]
  %3263 = add nsw i32 %3171, 64
  %3264 = sext i32 %3166 to i64
  br label %3270

3265:                                             ; preds = %3151
  %3266 = zext i32 %3170 to i64
  %3267 = shl i64 %3153, %3266
  %3268 = sext i32 %3166 to i64
  %3269 = or i64 %3267, %3268
  br label %3270

3270:                                             ; preds = %3261, %3265, %3028
  %3271 = phi i32 [ %3020, %3028 ], [ %3263, %3261 ], [ %3171, %3265 ]
  %3272 = phi i64 [ %3021, %3028 ], [ %3264, %3261 ], [ %3269, %3265 ]
  %3273 = phi i8* [ %3022, %3028 ], [ %3262, %3261 ], [ %3154, %3265 ]
  %3274 = phi i32 [ %3029, %3028 ], [ 0, %3261 ], [ 0, %3265 ]
  %3275 = getelementptr inbounds i16, i16* %1, i64 48
  %3276 = load i16, i16* %3275, align 2
  %3277 = sext i16 %3276 to i32
  %3278 = icmp eq i16 %3276, 0
  br i1 %3278, label %3279, label %3281

3279:                                             ; preds = %3270
  %3280 = add nuw nsw i32 %3274, 16
  br label %3521

3281:                                             ; preds = %3270
  %3282 = ashr i32 %3277, 31
  %3283 = add nsw i32 %3282, %3277
  %3284 = xor i32 %3283, %3282
  %3285 = sext i32 %3284 to i64
  %3286 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %3285
  %3287 = load i8, i8* %3286, align 1
  %3288 = zext i8 %3287 to i32
  %3289 = icmp sgt i32 %3274, 255
  br i1 %3289, label %3290, label %3402

3290:                                             ; preds = %3281
  %3291 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %3292 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %3293 = load i8, i8* %3291, align 4
  %3294 = sext i8 %3293 to i32
  %3295 = sub nsw i32 %3271, %3294
  %3296 = icmp slt i32 %3295, 0
  br i1 %3296, label %3297, label %3391

3297:                                             ; preds = %3290
  %3298 = zext i32 %3271 to i64
  %3299 = shl i64 %3272, %3298
  %3300 = load i32, i32* %3292, align 4
  %3301 = sub nsw i32 0, %3295
  %3302 = lshr i32 %3300, %3301
  %3303 = zext i32 %3302 to i64
  %3304 = or i64 %3299, %3303
  %3305 = and i64 %3304, -9187201950435737472
  %3306 = sub i64 -72340172838076674, %3304
  %3307 = and i64 %3305, %3306
  %3308 = icmp eq i64 %3307, 0
  %3309 = lshr i64 %3299, 56
  %3310 = trunc i64 %3309 to i8
  store i8 %3310, i8* %3273, align 1
  br i1 %3308, label %3364, label %3311

3311:                                             ; preds = %3297
  %3312 = getelementptr inbounds i8, i8* %3273, i64 1
  store i8 0, i8* %3312, align 1
  %3313 = icmp eq i64 %3309, 255
  %3314 = select i1 %3313, i64 2, i64 1
  %3315 = getelementptr inbounds i8, i8* %3273, i64 %3314
  %3316 = lshr i64 %3299, 48
  %3317 = trunc i64 %3316 to i8
  store i8 %3317, i8* %3315, align 1
  %3318 = getelementptr inbounds i8, i8* %3315, i64 1
  store i8 0, i8* %3318, align 1
  %3319 = and i64 %3299, 71776119061217280
  %3320 = icmp eq i64 %3319, 71776119061217280
  %3321 = select i1 %3320, i64 2, i64 1
  %3322 = getelementptr inbounds i8, i8* %3315, i64 %3321
  %3323 = lshr i64 %3299, 40
  %3324 = trunc i64 %3323 to i8
  store i8 %3324, i8* %3322, align 1
  %3325 = getelementptr inbounds i8, i8* %3322, i64 1
  store i8 0, i8* %3325, align 1
  %3326 = and i64 %3299, 280375465082880
  %3327 = icmp eq i64 %3326, 280375465082880
  %3328 = select i1 %3327, i64 2, i64 1
  %3329 = getelementptr inbounds i8, i8* %3322, i64 %3328
  %3330 = lshr i64 %3299, 32
  %3331 = trunc i64 %3330 to i8
  store i8 %3331, i8* %3329, align 1
  %3332 = getelementptr inbounds i8, i8* %3329, i64 1
  store i8 0, i8* %3332, align 1
  %3333 = and i64 %3299, 1095216660480
  %3334 = icmp eq i64 %3333, 1095216660480
  %3335 = select i1 %3334, i64 2, i64 1
  %3336 = getelementptr inbounds i8, i8* %3329, i64 %3335
  %3337 = lshr i64 %3304, 24
  %3338 = trunc i64 %3337 to i8
  store i8 %3338, i8* %3336, align 1
  %3339 = getelementptr inbounds i8, i8* %3336, i64 1
  store i8 0, i8* %3339, align 1
  %3340 = and i64 %3304, 4278190080
  %3341 = icmp eq i64 %3340, 4278190080
  %3342 = select i1 %3341, i64 2, i64 1
  %3343 = getelementptr inbounds i8, i8* %3336, i64 %3342
  %3344 = lshr i64 %3304, 16
  %3345 = trunc i64 %3344 to i8
  store i8 %3345, i8* %3343, align 1
  %3346 = getelementptr inbounds i8, i8* %3343, i64 1
  store i8 0, i8* %3346, align 1
  %3347 = and i64 %3304, 16711680
  %3348 = icmp eq i64 %3347, 16711680
  %3349 = select i1 %3348, i64 2, i64 1
  %3350 = getelementptr inbounds i8, i8* %3343, i64 %3349
  %3351 = lshr i64 %3304, 8
  %3352 = trunc i64 %3351 to i8
  store i8 %3352, i8* %3350, align 1
  %3353 = getelementptr inbounds i8, i8* %3350, i64 1
  store i8 0, i8* %3353, align 1
  %3354 = and i64 %3304, 65280
  %3355 = icmp eq i64 %3354, 65280
  %3356 = select i1 %3355, i64 2, i64 1
  %3357 = getelementptr inbounds i8, i8* %3350, i64 %3356
  %3358 = trunc i64 %3304 to i8
  store i8 %3358, i8* %3357, align 1
  %3359 = getelementptr inbounds i8, i8* %3357, i64 1
  store i8 0, i8* %3359, align 1
  %3360 = and i64 %3304, 255
  %3361 = icmp eq i64 %3360, 255
  %3362 = select i1 %3361, i64 2, i64 1
  %3363 = getelementptr inbounds i8, i8* %3357, i64 %3362
  br label %3386

3364:                                             ; preds = %3297
  %3365 = lshr i64 %3299, 48
  %3366 = trunc i64 %3365 to i8
  %3367 = getelementptr inbounds i8, i8* %3273, i64 1
  store i8 %3366, i8* %3367, align 1
  %3368 = lshr i64 %3299, 40
  %3369 = trunc i64 %3368 to i8
  %3370 = getelementptr inbounds i8, i8* %3273, i64 2
  store i8 %3369, i8* %3370, align 1
  %3371 = lshr i64 %3299, 32
  %3372 = trunc i64 %3371 to i8
  %3373 = getelementptr inbounds i8, i8* %3273, i64 3
  store i8 %3372, i8* %3373, align 1
  %3374 = lshr i64 %3304, 24
  %3375 = trunc i64 %3374 to i8
  %3376 = getelementptr inbounds i8, i8* %3273, i64 4
  store i8 %3375, i8* %3376, align 1
  %3377 = lshr i64 %3304, 16
  %3378 = trunc i64 %3377 to i8
  %3379 = getelementptr inbounds i8, i8* %3273, i64 5
  store i8 %3378, i8* %3379, align 1
  %3380 = lshr i64 %3304, 8
  %3381 = trunc i64 %3380 to i8
  %3382 = getelementptr inbounds i8, i8* %3273, i64 6
  store i8 %3381, i8* %3382, align 1
  %3383 = trunc i64 %3304 to i8
  %3384 = getelementptr inbounds i8, i8* %3273, i64 7
  store i8 %3383, i8* %3384, align 1
  %3385 = getelementptr inbounds i8, i8* %3273, i64 8
  br label %3386

3386:                                             ; preds = %3364, %3311
  %3387 = phi i8* [ %3363, %3311 ], [ %3385, %3364 ]
  %3388 = add nsw i32 %3295, 64
  %3389 = load i32, i32* %3292, align 4
  %3390 = zext i32 %3389 to i64
  br label %3397

3391:                                             ; preds = %3290
  %3392 = zext i32 %3294 to i64
  %3393 = shl i64 %3272, %3392
  %3394 = load i32, i32* %3292, align 4
  %3395 = zext i32 %3394 to i64
  %3396 = or i64 %3393, %3395
  br label %3397

3397:                                             ; preds = %3386, %3391
  %3398 = phi i32 [ %3388, %3386 ], [ %3295, %3391 ]
  %3399 = phi i64 [ %3390, %3386 ], [ %3396, %3391 ]
  %3400 = phi i8* [ %3387, %3386 ], [ %3273, %3391 ]
  %3401 = and i32 %3274, 255
  br label %3402

3402:                                             ; preds = %3397, %3281
  %3403 = phi i32 [ %3271, %3281 ], [ %3398, %3397 ]
  %3404 = phi i64 [ %3272, %3281 ], [ %3399, %3397 ]
  %3405 = phi i8* [ %3273, %3281 ], [ %3400, %3397 ]
  %3406 = phi i32 [ %3274, %3281 ], [ %3401, %3397 ]
  %3407 = add nuw nsw i32 %3406, %3288
  %3408 = zext i8 %3287 to i64
  %3409 = shl nsw i64 -1, %3408
  %3410 = trunc i64 %3409 to i32
  %3411 = xor i32 %3410, -1
  %3412 = and i32 %3283, %3411
  %3413 = sext i32 %3407 to i64
  %3414 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %3413
  %3415 = load i32, i32* %3414, align 4
  %3416 = shl i32 %3415, %3288
  %3417 = or i32 %3416, %3412
  %3418 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %3413
  %3419 = load i8, i8* %3418, align 1
  %3420 = sext i8 %3419 to i32
  %3421 = add nsw i32 %3420, %3288
  %3422 = sub nsw i32 %3403, %3421
  %3423 = icmp slt i32 %3422, 0
  br i1 %3423, label %3424, label %3516

3424:                                             ; preds = %3402
  %3425 = zext i32 %3403 to i64
  %3426 = shl i64 %3404, %3425
  %3427 = sub nsw i32 0, %3422
  %3428 = ashr i32 %3417, %3427
  %3429 = sext i32 %3428 to i64
  %3430 = or i64 %3426, %3429
  %3431 = and i64 %3430, -9187201950435737472
  %3432 = sub i64 -72340172838076674, %3430
  %3433 = and i64 %3431, %3432
  %3434 = icmp eq i64 %3433, 0
  %3435 = lshr i64 %3430, 56
  %3436 = trunc i64 %3435 to i8
  store i8 %3436, i8* %3405, align 1
  br i1 %3434, label %3490, label %3437

3437:                                             ; preds = %3424
  %3438 = getelementptr inbounds i8, i8* %3405, i64 1
  store i8 0, i8* %3438, align 1
  %3439 = icmp eq i64 %3435, 255
  %3440 = select i1 %3439, i64 2, i64 1
  %3441 = getelementptr inbounds i8, i8* %3405, i64 %3440
  %3442 = lshr i64 %3430, 48
  %3443 = trunc i64 %3442 to i8
  store i8 %3443, i8* %3441, align 1
  %3444 = getelementptr inbounds i8, i8* %3441, i64 1
  store i8 0, i8* %3444, align 1
  %3445 = and i64 %3430, 71776119061217280
  %3446 = icmp eq i64 %3445, 71776119061217280
  %3447 = select i1 %3446, i64 2, i64 1
  %3448 = getelementptr inbounds i8, i8* %3441, i64 %3447
  %3449 = lshr i64 %3430, 40
  %3450 = trunc i64 %3449 to i8
  store i8 %3450, i8* %3448, align 1
  %3451 = getelementptr inbounds i8, i8* %3448, i64 1
  store i8 0, i8* %3451, align 1
  %3452 = and i64 %3430, 280375465082880
  %3453 = icmp eq i64 %3452, 280375465082880
  %3454 = select i1 %3453, i64 2, i64 1
  %3455 = getelementptr inbounds i8, i8* %3448, i64 %3454
  %3456 = lshr i64 %3430, 32
  %3457 = trunc i64 %3456 to i8
  store i8 %3457, i8* %3455, align 1
  %3458 = getelementptr inbounds i8, i8* %3455, i64 1
  store i8 0, i8* %3458, align 1
  %3459 = and i64 %3430, 1095216660480
  %3460 = icmp eq i64 %3459, 1095216660480
  %3461 = select i1 %3460, i64 2, i64 1
  %3462 = getelementptr inbounds i8, i8* %3455, i64 %3461
  %3463 = lshr i64 %3430, 24
  %3464 = trunc i64 %3463 to i8
  store i8 %3464, i8* %3462, align 1
  %3465 = getelementptr inbounds i8, i8* %3462, i64 1
  store i8 0, i8* %3465, align 1
  %3466 = and i64 %3430, 4278190080
  %3467 = icmp eq i64 %3466, 4278190080
  %3468 = select i1 %3467, i64 2, i64 1
  %3469 = getelementptr inbounds i8, i8* %3462, i64 %3468
  %3470 = lshr i64 %3430, 16
  %3471 = trunc i64 %3470 to i8
  store i8 %3471, i8* %3469, align 1
  %3472 = getelementptr inbounds i8, i8* %3469, i64 1
  store i8 0, i8* %3472, align 1
  %3473 = and i64 %3430, 16711680
  %3474 = icmp eq i64 %3473, 16711680
  %3475 = select i1 %3474, i64 2, i64 1
  %3476 = getelementptr inbounds i8, i8* %3469, i64 %3475
  %3477 = lshr i64 %3430, 8
  %3478 = trunc i64 %3477 to i8
  store i8 %3478, i8* %3476, align 1
  %3479 = getelementptr inbounds i8, i8* %3476, i64 1
  store i8 0, i8* %3479, align 1
  %3480 = and i64 %3430, 65280
  %3481 = icmp eq i64 %3480, 65280
  %3482 = select i1 %3481, i64 2, i64 1
  %3483 = getelementptr inbounds i8, i8* %3476, i64 %3482
  %3484 = trunc i64 %3430 to i8
  store i8 %3484, i8* %3483, align 1
  %3485 = getelementptr inbounds i8, i8* %3483, i64 1
  store i8 0, i8* %3485, align 1
  %3486 = and i64 %3430, 255
  %3487 = icmp eq i64 %3486, 255
  %3488 = select i1 %3487, i64 2, i64 1
  %3489 = getelementptr inbounds i8, i8* %3483, i64 %3488
  br label %3512

3490:                                             ; preds = %3424
  %3491 = lshr i64 %3430, 48
  %3492 = trunc i64 %3491 to i8
  %3493 = getelementptr inbounds i8, i8* %3405, i64 1
  store i8 %3492, i8* %3493, align 1
  %3494 = lshr i64 %3430, 40
  %3495 = trunc i64 %3494 to i8
  %3496 = getelementptr inbounds i8, i8* %3405, i64 2
  store i8 %3495, i8* %3496, align 1
  %3497 = lshr i64 %3430, 32
  %3498 = trunc i64 %3497 to i8
  %3499 = getelementptr inbounds i8, i8* %3405, i64 3
  store i8 %3498, i8* %3499, align 1
  %3500 = lshr i64 %3430, 24
  %3501 = trunc i64 %3500 to i8
  %3502 = getelementptr inbounds i8, i8* %3405, i64 4
  store i8 %3501, i8* %3502, align 1
  %3503 = lshr i64 %3430, 16
  %3504 = trunc i64 %3503 to i8
  %3505 = getelementptr inbounds i8, i8* %3405, i64 5
  store i8 %3504, i8* %3505, align 1
  %3506 = lshr i64 %3430, 8
  %3507 = trunc i64 %3506 to i8
  %3508 = getelementptr inbounds i8, i8* %3405, i64 6
  store i8 %3507, i8* %3508, align 1
  %3509 = trunc i64 %3430 to i8
  %3510 = getelementptr inbounds i8, i8* %3405, i64 7
  store i8 %3509, i8* %3510, align 1
  %3511 = getelementptr inbounds i8, i8* %3405, i64 8
  br label %3512

3512:                                             ; preds = %3490, %3437
  %3513 = phi i8* [ %3489, %3437 ], [ %3511, %3490 ]
  %3514 = add nsw i32 %3422, 64
  %3515 = sext i32 %3417 to i64
  br label %3521

3516:                                             ; preds = %3402
  %3517 = zext i32 %3421 to i64
  %3518 = shl i64 %3404, %3517
  %3519 = sext i32 %3417 to i64
  %3520 = or i64 %3518, %3519
  br label %3521

3521:                                             ; preds = %3512, %3516, %3279
  %3522 = phi i32 [ %3271, %3279 ], [ %3514, %3512 ], [ %3422, %3516 ]
  %3523 = phi i64 [ %3272, %3279 ], [ %3515, %3512 ], [ %3520, %3516 ]
  %3524 = phi i8* [ %3273, %3279 ], [ %3513, %3512 ], [ %3405, %3516 ]
  %3525 = phi i32 [ %3280, %3279 ], [ 0, %3512 ], [ 0, %3516 ]
  %3526 = getelementptr inbounds i16, i16* %1, i64 41
  %3527 = load i16, i16* %3526, align 2
  %3528 = sext i16 %3527 to i32
  %3529 = icmp eq i16 %3527, 0
  br i1 %3529, label %3530, label %3532

3530:                                             ; preds = %3521
  %3531 = add nuw nsw i32 %3525, 16
  br label %3772

3532:                                             ; preds = %3521
  %3533 = ashr i32 %3528, 31
  %3534 = add nsw i32 %3533, %3528
  %3535 = xor i32 %3534, %3533
  %3536 = sext i32 %3535 to i64
  %3537 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %3536
  %3538 = load i8, i8* %3537, align 1
  %3539 = zext i8 %3538 to i32
  %3540 = icmp sgt i32 %3525, 255
  br i1 %3540, label %3541, label %3653

3541:                                             ; preds = %3532
  %3542 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %3543 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %3544 = load i8, i8* %3542, align 4
  %3545 = sext i8 %3544 to i32
  %3546 = sub nsw i32 %3522, %3545
  %3547 = icmp slt i32 %3546, 0
  br i1 %3547, label %3548, label %3642

3548:                                             ; preds = %3541
  %3549 = zext i32 %3522 to i64
  %3550 = shl i64 %3523, %3549
  %3551 = load i32, i32* %3543, align 4
  %3552 = sub nsw i32 0, %3546
  %3553 = lshr i32 %3551, %3552
  %3554 = zext i32 %3553 to i64
  %3555 = or i64 %3550, %3554
  %3556 = and i64 %3555, -9187201950435737472
  %3557 = sub i64 -72340172838076674, %3555
  %3558 = and i64 %3556, %3557
  %3559 = icmp eq i64 %3558, 0
  %3560 = lshr i64 %3550, 56
  %3561 = trunc i64 %3560 to i8
  store i8 %3561, i8* %3524, align 1
  br i1 %3559, label %3615, label %3562

3562:                                             ; preds = %3548
  %3563 = getelementptr inbounds i8, i8* %3524, i64 1
  store i8 0, i8* %3563, align 1
  %3564 = icmp eq i64 %3560, 255
  %3565 = select i1 %3564, i64 2, i64 1
  %3566 = getelementptr inbounds i8, i8* %3524, i64 %3565
  %3567 = lshr i64 %3550, 48
  %3568 = trunc i64 %3567 to i8
  store i8 %3568, i8* %3566, align 1
  %3569 = getelementptr inbounds i8, i8* %3566, i64 1
  store i8 0, i8* %3569, align 1
  %3570 = and i64 %3550, 71776119061217280
  %3571 = icmp eq i64 %3570, 71776119061217280
  %3572 = select i1 %3571, i64 2, i64 1
  %3573 = getelementptr inbounds i8, i8* %3566, i64 %3572
  %3574 = lshr i64 %3550, 40
  %3575 = trunc i64 %3574 to i8
  store i8 %3575, i8* %3573, align 1
  %3576 = getelementptr inbounds i8, i8* %3573, i64 1
  store i8 0, i8* %3576, align 1
  %3577 = and i64 %3550, 280375465082880
  %3578 = icmp eq i64 %3577, 280375465082880
  %3579 = select i1 %3578, i64 2, i64 1
  %3580 = getelementptr inbounds i8, i8* %3573, i64 %3579
  %3581 = lshr i64 %3550, 32
  %3582 = trunc i64 %3581 to i8
  store i8 %3582, i8* %3580, align 1
  %3583 = getelementptr inbounds i8, i8* %3580, i64 1
  store i8 0, i8* %3583, align 1
  %3584 = and i64 %3550, 1095216660480
  %3585 = icmp eq i64 %3584, 1095216660480
  %3586 = select i1 %3585, i64 2, i64 1
  %3587 = getelementptr inbounds i8, i8* %3580, i64 %3586
  %3588 = lshr i64 %3555, 24
  %3589 = trunc i64 %3588 to i8
  store i8 %3589, i8* %3587, align 1
  %3590 = getelementptr inbounds i8, i8* %3587, i64 1
  store i8 0, i8* %3590, align 1
  %3591 = and i64 %3555, 4278190080
  %3592 = icmp eq i64 %3591, 4278190080
  %3593 = select i1 %3592, i64 2, i64 1
  %3594 = getelementptr inbounds i8, i8* %3587, i64 %3593
  %3595 = lshr i64 %3555, 16
  %3596 = trunc i64 %3595 to i8
  store i8 %3596, i8* %3594, align 1
  %3597 = getelementptr inbounds i8, i8* %3594, i64 1
  store i8 0, i8* %3597, align 1
  %3598 = and i64 %3555, 16711680
  %3599 = icmp eq i64 %3598, 16711680
  %3600 = select i1 %3599, i64 2, i64 1
  %3601 = getelementptr inbounds i8, i8* %3594, i64 %3600
  %3602 = lshr i64 %3555, 8
  %3603 = trunc i64 %3602 to i8
  store i8 %3603, i8* %3601, align 1
  %3604 = getelementptr inbounds i8, i8* %3601, i64 1
  store i8 0, i8* %3604, align 1
  %3605 = and i64 %3555, 65280
  %3606 = icmp eq i64 %3605, 65280
  %3607 = select i1 %3606, i64 2, i64 1
  %3608 = getelementptr inbounds i8, i8* %3601, i64 %3607
  %3609 = trunc i64 %3555 to i8
  store i8 %3609, i8* %3608, align 1
  %3610 = getelementptr inbounds i8, i8* %3608, i64 1
  store i8 0, i8* %3610, align 1
  %3611 = and i64 %3555, 255
  %3612 = icmp eq i64 %3611, 255
  %3613 = select i1 %3612, i64 2, i64 1
  %3614 = getelementptr inbounds i8, i8* %3608, i64 %3613
  br label %3637

3615:                                             ; preds = %3548
  %3616 = lshr i64 %3550, 48
  %3617 = trunc i64 %3616 to i8
  %3618 = getelementptr inbounds i8, i8* %3524, i64 1
  store i8 %3617, i8* %3618, align 1
  %3619 = lshr i64 %3550, 40
  %3620 = trunc i64 %3619 to i8
  %3621 = getelementptr inbounds i8, i8* %3524, i64 2
  store i8 %3620, i8* %3621, align 1
  %3622 = lshr i64 %3550, 32
  %3623 = trunc i64 %3622 to i8
  %3624 = getelementptr inbounds i8, i8* %3524, i64 3
  store i8 %3623, i8* %3624, align 1
  %3625 = lshr i64 %3555, 24
  %3626 = trunc i64 %3625 to i8
  %3627 = getelementptr inbounds i8, i8* %3524, i64 4
  store i8 %3626, i8* %3627, align 1
  %3628 = lshr i64 %3555, 16
  %3629 = trunc i64 %3628 to i8
  %3630 = getelementptr inbounds i8, i8* %3524, i64 5
  store i8 %3629, i8* %3630, align 1
  %3631 = lshr i64 %3555, 8
  %3632 = trunc i64 %3631 to i8
  %3633 = getelementptr inbounds i8, i8* %3524, i64 6
  store i8 %3632, i8* %3633, align 1
  %3634 = trunc i64 %3555 to i8
  %3635 = getelementptr inbounds i8, i8* %3524, i64 7
  store i8 %3634, i8* %3635, align 1
  %3636 = getelementptr inbounds i8, i8* %3524, i64 8
  br label %3637

3637:                                             ; preds = %3615, %3562
  %3638 = phi i8* [ %3614, %3562 ], [ %3636, %3615 ]
  %3639 = add nsw i32 %3546, 64
  %3640 = load i32, i32* %3543, align 4
  %3641 = zext i32 %3640 to i64
  br label %3648

3642:                                             ; preds = %3541
  %3643 = zext i32 %3545 to i64
  %3644 = shl i64 %3523, %3643
  %3645 = load i32, i32* %3543, align 4
  %3646 = zext i32 %3645 to i64
  %3647 = or i64 %3644, %3646
  br label %3648

3648:                                             ; preds = %3637, %3642
  %3649 = phi i32 [ %3639, %3637 ], [ %3546, %3642 ]
  %3650 = phi i64 [ %3641, %3637 ], [ %3647, %3642 ]
  %3651 = phi i8* [ %3638, %3637 ], [ %3524, %3642 ]
  %3652 = and i32 %3525, 255
  br label %3653

3653:                                             ; preds = %3648, %3532
  %3654 = phi i32 [ %3522, %3532 ], [ %3649, %3648 ]
  %3655 = phi i64 [ %3523, %3532 ], [ %3650, %3648 ]
  %3656 = phi i8* [ %3524, %3532 ], [ %3651, %3648 ]
  %3657 = phi i32 [ %3525, %3532 ], [ %3652, %3648 ]
  %3658 = add nuw nsw i32 %3657, %3539
  %3659 = zext i8 %3538 to i64
  %3660 = shl nsw i64 -1, %3659
  %3661 = trunc i64 %3660 to i32
  %3662 = xor i32 %3661, -1
  %3663 = and i32 %3534, %3662
  %3664 = sext i32 %3658 to i64
  %3665 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %3664
  %3666 = load i32, i32* %3665, align 4
  %3667 = shl i32 %3666, %3539
  %3668 = or i32 %3667, %3663
  %3669 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %3664
  %3670 = load i8, i8* %3669, align 1
  %3671 = sext i8 %3670 to i32
  %3672 = add nsw i32 %3671, %3539
  %3673 = sub nsw i32 %3654, %3672
  %3674 = icmp slt i32 %3673, 0
  br i1 %3674, label %3675, label %3767

3675:                                             ; preds = %3653
  %3676 = zext i32 %3654 to i64
  %3677 = shl i64 %3655, %3676
  %3678 = sub nsw i32 0, %3673
  %3679 = ashr i32 %3668, %3678
  %3680 = sext i32 %3679 to i64
  %3681 = or i64 %3677, %3680
  %3682 = and i64 %3681, -9187201950435737472
  %3683 = sub i64 -72340172838076674, %3681
  %3684 = and i64 %3682, %3683
  %3685 = icmp eq i64 %3684, 0
  %3686 = lshr i64 %3681, 56
  %3687 = trunc i64 %3686 to i8
  store i8 %3687, i8* %3656, align 1
  br i1 %3685, label %3741, label %3688

3688:                                             ; preds = %3675
  %3689 = getelementptr inbounds i8, i8* %3656, i64 1
  store i8 0, i8* %3689, align 1
  %3690 = icmp eq i64 %3686, 255
  %3691 = select i1 %3690, i64 2, i64 1
  %3692 = getelementptr inbounds i8, i8* %3656, i64 %3691
  %3693 = lshr i64 %3681, 48
  %3694 = trunc i64 %3693 to i8
  store i8 %3694, i8* %3692, align 1
  %3695 = getelementptr inbounds i8, i8* %3692, i64 1
  store i8 0, i8* %3695, align 1
  %3696 = and i64 %3681, 71776119061217280
  %3697 = icmp eq i64 %3696, 71776119061217280
  %3698 = select i1 %3697, i64 2, i64 1
  %3699 = getelementptr inbounds i8, i8* %3692, i64 %3698
  %3700 = lshr i64 %3681, 40
  %3701 = trunc i64 %3700 to i8
  store i8 %3701, i8* %3699, align 1
  %3702 = getelementptr inbounds i8, i8* %3699, i64 1
  store i8 0, i8* %3702, align 1
  %3703 = and i64 %3681, 280375465082880
  %3704 = icmp eq i64 %3703, 280375465082880
  %3705 = select i1 %3704, i64 2, i64 1
  %3706 = getelementptr inbounds i8, i8* %3699, i64 %3705
  %3707 = lshr i64 %3681, 32
  %3708 = trunc i64 %3707 to i8
  store i8 %3708, i8* %3706, align 1
  %3709 = getelementptr inbounds i8, i8* %3706, i64 1
  store i8 0, i8* %3709, align 1
  %3710 = and i64 %3681, 1095216660480
  %3711 = icmp eq i64 %3710, 1095216660480
  %3712 = select i1 %3711, i64 2, i64 1
  %3713 = getelementptr inbounds i8, i8* %3706, i64 %3712
  %3714 = lshr i64 %3681, 24
  %3715 = trunc i64 %3714 to i8
  store i8 %3715, i8* %3713, align 1
  %3716 = getelementptr inbounds i8, i8* %3713, i64 1
  store i8 0, i8* %3716, align 1
  %3717 = and i64 %3681, 4278190080
  %3718 = icmp eq i64 %3717, 4278190080
  %3719 = select i1 %3718, i64 2, i64 1
  %3720 = getelementptr inbounds i8, i8* %3713, i64 %3719
  %3721 = lshr i64 %3681, 16
  %3722 = trunc i64 %3721 to i8
  store i8 %3722, i8* %3720, align 1
  %3723 = getelementptr inbounds i8, i8* %3720, i64 1
  store i8 0, i8* %3723, align 1
  %3724 = and i64 %3681, 16711680
  %3725 = icmp eq i64 %3724, 16711680
  %3726 = select i1 %3725, i64 2, i64 1
  %3727 = getelementptr inbounds i8, i8* %3720, i64 %3726
  %3728 = lshr i64 %3681, 8
  %3729 = trunc i64 %3728 to i8
  store i8 %3729, i8* %3727, align 1
  %3730 = getelementptr inbounds i8, i8* %3727, i64 1
  store i8 0, i8* %3730, align 1
  %3731 = and i64 %3681, 65280
  %3732 = icmp eq i64 %3731, 65280
  %3733 = select i1 %3732, i64 2, i64 1
  %3734 = getelementptr inbounds i8, i8* %3727, i64 %3733
  %3735 = trunc i64 %3681 to i8
  store i8 %3735, i8* %3734, align 1
  %3736 = getelementptr inbounds i8, i8* %3734, i64 1
  store i8 0, i8* %3736, align 1
  %3737 = and i64 %3681, 255
  %3738 = icmp eq i64 %3737, 255
  %3739 = select i1 %3738, i64 2, i64 1
  %3740 = getelementptr inbounds i8, i8* %3734, i64 %3739
  br label %3763

3741:                                             ; preds = %3675
  %3742 = lshr i64 %3681, 48
  %3743 = trunc i64 %3742 to i8
  %3744 = getelementptr inbounds i8, i8* %3656, i64 1
  store i8 %3743, i8* %3744, align 1
  %3745 = lshr i64 %3681, 40
  %3746 = trunc i64 %3745 to i8
  %3747 = getelementptr inbounds i8, i8* %3656, i64 2
  store i8 %3746, i8* %3747, align 1
  %3748 = lshr i64 %3681, 32
  %3749 = trunc i64 %3748 to i8
  %3750 = getelementptr inbounds i8, i8* %3656, i64 3
  store i8 %3749, i8* %3750, align 1
  %3751 = lshr i64 %3681, 24
  %3752 = trunc i64 %3751 to i8
  %3753 = getelementptr inbounds i8, i8* %3656, i64 4
  store i8 %3752, i8* %3753, align 1
  %3754 = lshr i64 %3681, 16
  %3755 = trunc i64 %3754 to i8
  %3756 = getelementptr inbounds i8, i8* %3656, i64 5
  store i8 %3755, i8* %3756, align 1
  %3757 = lshr i64 %3681, 8
  %3758 = trunc i64 %3757 to i8
  %3759 = getelementptr inbounds i8, i8* %3656, i64 6
  store i8 %3758, i8* %3759, align 1
  %3760 = trunc i64 %3681 to i8
  %3761 = getelementptr inbounds i8, i8* %3656, i64 7
  store i8 %3760, i8* %3761, align 1
  %3762 = getelementptr inbounds i8, i8* %3656, i64 8
  br label %3763

3763:                                             ; preds = %3741, %3688
  %3764 = phi i8* [ %3740, %3688 ], [ %3762, %3741 ]
  %3765 = add nsw i32 %3673, 64
  %3766 = sext i32 %3668 to i64
  br label %3772

3767:                                             ; preds = %3653
  %3768 = zext i32 %3672 to i64
  %3769 = shl i64 %3655, %3768
  %3770 = sext i32 %3668 to i64
  %3771 = or i64 %3769, %3770
  br label %3772

3772:                                             ; preds = %3763, %3767, %3530
  %3773 = phi i32 [ %3522, %3530 ], [ %3765, %3763 ], [ %3673, %3767 ]
  %3774 = phi i64 [ %3523, %3530 ], [ %3766, %3763 ], [ %3771, %3767 ]
  %3775 = phi i8* [ %3524, %3530 ], [ %3764, %3763 ], [ %3656, %3767 ]
  %3776 = phi i32 [ %3531, %3530 ], [ 0, %3763 ], [ 0, %3767 ]
  %3777 = getelementptr inbounds i16, i16* %1, i64 34
  %3778 = load i16, i16* %3777, align 2
  %3779 = sext i16 %3778 to i32
  %3780 = icmp eq i16 %3778, 0
  br i1 %3780, label %3781, label %3783

3781:                                             ; preds = %3772
  %3782 = add nuw nsw i32 %3776, 16
  br label %4023

3783:                                             ; preds = %3772
  %3784 = ashr i32 %3779, 31
  %3785 = add nsw i32 %3784, %3779
  %3786 = xor i32 %3785, %3784
  %3787 = sext i32 %3786 to i64
  %3788 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %3787
  %3789 = load i8, i8* %3788, align 1
  %3790 = zext i8 %3789 to i32
  %3791 = icmp sgt i32 %3776, 255
  br i1 %3791, label %3792, label %3904

3792:                                             ; preds = %3783
  %3793 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %3794 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %3795 = load i8, i8* %3793, align 4
  %3796 = sext i8 %3795 to i32
  %3797 = sub nsw i32 %3773, %3796
  %3798 = icmp slt i32 %3797, 0
  br i1 %3798, label %3799, label %3893

3799:                                             ; preds = %3792
  %3800 = zext i32 %3773 to i64
  %3801 = shl i64 %3774, %3800
  %3802 = load i32, i32* %3794, align 4
  %3803 = sub nsw i32 0, %3797
  %3804 = lshr i32 %3802, %3803
  %3805 = zext i32 %3804 to i64
  %3806 = or i64 %3801, %3805
  %3807 = and i64 %3806, -9187201950435737472
  %3808 = sub i64 -72340172838076674, %3806
  %3809 = and i64 %3807, %3808
  %3810 = icmp eq i64 %3809, 0
  %3811 = lshr i64 %3801, 56
  %3812 = trunc i64 %3811 to i8
  store i8 %3812, i8* %3775, align 1
  br i1 %3810, label %3866, label %3813

3813:                                             ; preds = %3799
  %3814 = getelementptr inbounds i8, i8* %3775, i64 1
  store i8 0, i8* %3814, align 1
  %3815 = icmp eq i64 %3811, 255
  %3816 = select i1 %3815, i64 2, i64 1
  %3817 = getelementptr inbounds i8, i8* %3775, i64 %3816
  %3818 = lshr i64 %3801, 48
  %3819 = trunc i64 %3818 to i8
  store i8 %3819, i8* %3817, align 1
  %3820 = getelementptr inbounds i8, i8* %3817, i64 1
  store i8 0, i8* %3820, align 1
  %3821 = and i64 %3801, 71776119061217280
  %3822 = icmp eq i64 %3821, 71776119061217280
  %3823 = select i1 %3822, i64 2, i64 1
  %3824 = getelementptr inbounds i8, i8* %3817, i64 %3823
  %3825 = lshr i64 %3801, 40
  %3826 = trunc i64 %3825 to i8
  store i8 %3826, i8* %3824, align 1
  %3827 = getelementptr inbounds i8, i8* %3824, i64 1
  store i8 0, i8* %3827, align 1
  %3828 = and i64 %3801, 280375465082880
  %3829 = icmp eq i64 %3828, 280375465082880
  %3830 = select i1 %3829, i64 2, i64 1
  %3831 = getelementptr inbounds i8, i8* %3824, i64 %3830
  %3832 = lshr i64 %3801, 32
  %3833 = trunc i64 %3832 to i8
  store i8 %3833, i8* %3831, align 1
  %3834 = getelementptr inbounds i8, i8* %3831, i64 1
  store i8 0, i8* %3834, align 1
  %3835 = and i64 %3801, 1095216660480
  %3836 = icmp eq i64 %3835, 1095216660480
  %3837 = select i1 %3836, i64 2, i64 1
  %3838 = getelementptr inbounds i8, i8* %3831, i64 %3837
  %3839 = lshr i64 %3806, 24
  %3840 = trunc i64 %3839 to i8
  store i8 %3840, i8* %3838, align 1
  %3841 = getelementptr inbounds i8, i8* %3838, i64 1
  store i8 0, i8* %3841, align 1
  %3842 = and i64 %3806, 4278190080
  %3843 = icmp eq i64 %3842, 4278190080
  %3844 = select i1 %3843, i64 2, i64 1
  %3845 = getelementptr inbounds i8, i8* %3838, i64 %3844
  %3846 = lshr i64 %3806, 16
  %3847 = trunc i64 %3846 to i8
  store i8 %3847, i8* %3845, align 1
  %3848 = getelementptr inbounds i8, i8* %3845, i64 1
  store i8 0, i8* %3848, align 1
  %3849 = and i64 %3806, 16711680
  %3850 = icmp eq i64 %3849, 16711680
  %3851 = select i1 %3850, i64 2, i64 1
  %3852 = getelementptr inbounds i8, i8* %3845, i64 %3851
  %3853 = lshr i64 %3806, 8
  %3854 = trunc i64 %3853 to i8
  store i8 %3854, i8* %3852, align 1
  %3855 = getelementptr inbounds i8, i8* %3852, i64 1
  store i8 0, i8* %3855, align 1
  %3856 = and i64 %3806, 65280
  %3857 = icmp eq i64 %3856, 65280
  %3858 = select i1 %3857, i64 2, i64 1
  %3859 = getelementptr inbounds i8, i8* %3852, i64 %3858
  %3860 = trunc i64 %3806 to i8
  store i8 %3860, i8* %3859, align 1
  %3861 = getelementptr inbounds i8, i8* %3859, i64 1
  store i8 0, i8* %3861, align 1
  %3862 = and i64 %3806, 255
  %3863 = icmp eq i64 %3862, 255
  %3864 = select i1 %3863, i64 2, i64 1
  %3865 = getelementptr inbounds i8, i8* %3859, i64 %3864
  br label %3888

3866:                                             ; preds = %3799
  %3867 = lshr i64 %3801, 48
  %3868 = trunc i64 %3867 to i8
  %3869 = getelementptr inbounds i8, i8* %3775, i64 1
  store i8 %3868, i8* %3869, align 1
  %3870 = lshr i64 %3801, 40
  %3871 = trunc i64 %3870 to i8
  %3872 = getelementptr inbounds i8, i8* %3775, i64 2
  store i8 %3871, i8* %3872, align 1
  %3873 = lshr i64 %3801, 32
  %3874 = trunc i64 %3873 to i8
  %3875 = getelementptr inbounds i8, i8* %3775, i64 3
  store i8 %3874, i8* %3875, align 1
  %3876 = lshr i64 %3806, 24
  %3877 = trunc i64 %3876 to i8
  %3878 = getelementptr inbounds i8, i8* %3775, i64 4
  store i8 %3877, i8* %3878, align 1
  %3879 = lshr i64 %3806, 16
  %3880 = trunc i64 %3879 to i8
  %3881 = getelementptr inbounds i8, i8* %3775, i64 5
  store i8 %3880, i8* %3881, align 1
  %3882 = lshr i64 %3806, 8
  %3883 = trunc i64 %3882 to i8
  %3884 = getelementptr inbounds i8, i8* %3775, i64 6
  store i8 %3883, i8* %3884, align 1
  %3885 = trunc i64 %3806 to i8
  %3886 = getelementptr inbounds i8, i8* %3775, i64 7
  store i8 %3885, i8* %3886, align 1
  %3887 = getelementptr inbounds i8, i8* %3775, i64 8
  br label %3888

3888:                                             ; preds = %3866, %3813
  %3889 = phi i8* [ %3865, %3813 ], [ %3887, %3866 ]
  %3890 = add nsw i32 %3797, 64
  %3891 = load i32, i32* %3794, align 4
  %3892 = zext i32 %3891 to i64
  br label %3899

3893:                                             ; preds = %3792
  %3894 = zext i32 %3796 to i64
  %3895 = shl i64 %3774, %3894
  %3896 = load i32, i32* %3794, align 4
  %3897 = zext i32 %3896 to i64
  %3898 = or i64 %3895, %3897
  br label %3899

3899:                                             ; preds = %3888, %3893
  %3900 = phi i32 [ %3890, %3888 ], [ %3797, %3893 ]
  %3901 = phi i64 [ %3892, %3888 ], [ %3898, %3893 ]
  %3902 = phi i8* [ %3889, %3888 ], [ %3775, %3893 ]
  %3903 = and i32 %3776, 255
  br label %3904

3904:                                             ; preds = %3899, %3783
  %3905 = phi i32 [ %3773, %3783 ], [ %3900, %3899 ]
  %3906 = phi i64 [ %3774, %3783 ], [ %3901, %3899 ]
  %3907 = phi i8* [ %3775, %3783 ], [ %3902, %3899 ]
  %3908 = phi i32 [ %3776, %3783 ], [ %3903, %3899 ]
  %3909 = add nuw nsw i32 %3908, %3790
  %3910 = zext i8 %3789 to i64
  %3911 = shl nsw i64 -1, %3910
  %3912 = trunc i64 %3911 to i32
  %3913 = xor i32 %3912, -1
  %3914 = and i32 %3785, %3913
  %3915 = sext i32 %3909 to i64
  %3916 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %3915
  %3917 = load i32, i32* %3916, align 4
  %3918 = shl i32 %3917, %3790
  %3919 = or i32 %3918, %3914
  %3920 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %3915
  %3921 = load i8, i8* %3920, align 1
  %3922 = sext i8 %3921 to i32
  %3923 = add nsw i32 %3922, %3790
  %3924 = sub nsw i32 %3905, %3923
  %3925 = icmp slt i32 %3924, 0
  br i1 %3925, label %3926, label %4018

3926:                                             ; preds = %3904
  %3927 = zext i32 %3905 to i64
  %3928 = shl i64 %3906, %3927
  %3929 = sub nsw i32 0, %3924
  %3930 = ashr i32 %3919, %3929
  %3931 = sext i32 %3930 to i64
  %3932 = or i64 %3928, %3931
  %3933 = and i64 %3932, -9187201950435737472
  %3934 = sub i64 -72340172838076674, %3932
  %3935 = and i64 %3933, %3934
  %3936 = icmp eq i64 %3935, 0
  %3937 = lshr i64 %3932, 56
  %3938 = trunc i64 %3937 to i8
  store i8 %3938, i8* %3907, align 1
  br i1 %3936, label %3992, label %3939

3939:                                             ; preds = %3926
  %3940 = getelementptr inbounds i8, i8* %3907, i64 1
  store i8 0, i8* %3940, align 1
  %3941 = icmp eq i64 %3937, 255
  %3942 = select i1 %3941, i64 2, i64 1
  %3943 = getelementptr inbounds i8, i8* %3907, i64 %3942
  %3944 = lshr i64 %3932, 48
  %3945 = trunc i64 %3944 to i8
  store i8 %3945, i8* %3943, align 1
  %3946 = getelementptr inbounds i8, i8* %3943, i64 1
  store i8 0, i8* %3946, align 1
  %3947 = and i64 %3932, 71776119061217280
  %3948 = icmp eq i64 %3947, 71776119061217280
  %3949 = select i1 %3948, i64 2, i64 1
  %3950 = getelementptr inbounds i8, i8* %3943, i64 %3949
  %3951 = lshr i64 %3932, 40
  %3952 = trunc i64 %3951 to i8
  store i8 %3952, i8* %3950, align 1
  %3953 = getelementptr inbounds i8, i8* %3950, i64 1
  store i8 0, i8* %3953, align 1
  %3954 = and i64 %3932, 280375465082880
  %3955 = icmp eq i64 %3954, 280375465082880
  %3956 = select i1 %3955, i64 2, i64 1
  %3957 = getelementptr inbounds i8, i8* %3950, i64 %3956
  %3958 = lshr i64 %3932, 32
  %3959 = trunc i64 %3958 to i8
  store i8 %3959, i8* %3957, align 1
  %3960 = getelementptr inbounds i8, i8* %3957, i64 1
  store i8 0, i8* %3960, align 1
  %3961 = and i64 %3932, 1095216660480
  %3962 = icmp eq i64 %3961, 1095216660480
  %3963 = select i1 %3962, i64 2, i64 1
  %3964 = getelementptr inbounds i8, i8* %3957, i64 %3963
  %3965 = lshr i64 %3932, 24
  %3966 = trunc i64 %3965 to i8
  store i8 %3966, i8* %3964, align 1
  %3967 = getelementptr inbounds i8, i8* %3964, i64 1
  store i8 0, i8* %3967, align 1
  %3968 = and i64 %3932, 4278190080
  %3969 = icmp eq i64 %3968, 4278190080
  %3970 = select i1 %3969, i64 2, i64 1
  %3971 = getelementptr inbounds i8, i8* %3964, i64 %3970
  %3972 = lshr i64 %3932, 16
  %3973 = trunc i64 %3972 to i8
  store i8 %3973, i8* %3971, align 1
  %3974 = getelementptr inbounds i8, i8* %3971, i64 1
  store i8 0, i8* %3974, align 1
  %3975 = and i64 %3932, 16711680
  %3976 = icmp eq i64 %3975, 16711680
  %3977 = select i1 %3976, i64 2, i64 1
  %3978 = getelementptr inbounds i8, i8* %3971, i64 %3977
  %3979 = lshr i64 %3932, 8
  %3980 = trunc i64 %3979 to i8
  store i8 %3980, i8* %3978, align 1
  %3981 = getelementptr inbounds i8, i8* %3978, i64 1
  store i8 0, i8* %3981, align 1
  %3982 = and i64 %3932, 65280
  %3983 = icmp eq i64 %3982, 65280
  %3984 = select i1 %3983, i64 2, i64 1
  %3985 = getelementptr inbounds i8, i8* %3978, i64 %3984
  %3986 = trunc i64 %3932 to i8
  store i8 %3986, i8* %3985, align 1
  %3987 = getelementptr inbounds i8, i8* %3985, i64 1
  store i8 0, i8* %3987, align 1
  %3988 = and i64 %3932, 255
  %3989 = icmp eq i64 %3988, 255
  %3990 = select i1 %3989, i64 2, i64 1
  %3991 = getelementptr inbounds i8, i8* %3985, i64 %3990
  br label %4014

3992:                                             ; preds = %3926
  %3993 = lshr i64 %3932, 48
  %3994 = trunc i64 %3993 to i8
  %3995 = getelementptr inbounds i8, i8* %3907, i64 1
  store i8 %3994, i8* %3995, align 1
  %3996 = lshr i64 %3932, 40
  %3997 = trunc i64 %3996 to i8
  %3998 = getelementptr inbounds i8, i8* %3907, i64 2
  store i8 %3997, i8* %3998, align 1
  %3999 = lshr i64 %3932, 32
  %4000 = trunc i64 %3999 to i8
  %4001 = getelementptr inbounds i8, i8* %3907, i64 3
  store i8 %4000, i8* %4001, align 1
  %4002 = lshr i64 %3932, 24
  %4003 = trunc i64 %4002 to i8
  %4004 = getelementptr inbounds i8, i8* %3907, i64 4
  store i8 %4003, i8* %4004, align 1
  %4005 = lshr i64 %3932, 16
  %4006 = trunc i64 %4005 to i8
  %4007 = getelementptr inbounds i8, i8* %3907, i64 5
  store i8 %4006, i8* %4007, align 1
  %4008 = lshr i64 %3932, 8
  %4009 = trunc i64 %4008 to i8
  %4010 = getelementptr inbounds i8, i8* %3907, i64 6
  store i8 %4009, i8* %4010, align 1
  %4011 = trunc i64 %3932 to i8
  %4012 = getelementptr inbounds i8, i8* %3907, i64 7
  store i8 %4011, i8* %4012, align 1
  %4013 = getelementptr inbounds i8, i8* %3907, i64 8
  br label %4014

4014:                                             ; preds = %3992, %3939
  %4015 = phi i8* [ %3991, %3939 ], [ %4013, %3992 ]
  %4016 = add nsw i32 %3924, 64
  %4017 = sext i32 %3919 to i64
  br label %4023

4018:                                             ; preds = %3904
  %4019 = zext i32 %3923 to i64
  %4020 = shl i64 %3906, %4019
  %4021 = sext i32 %3919 to i64
  %4022 = or i64 %4020, %4021
  br label %4023

4023:                                             ; preds = %4014, %4018, %3781
  %4024 = phi i32 [ %3773, %3781 ], [ %4016, %4014 ], [ %3924, %4018 ]
  %4025 = phi i64 [ %3774, %3781 ], [ %4017, %4014 ], [ %4022, %4018 ]
  %4026 = phi i8* [ %3775, %3781 ], [ %4015, %4014 ], [ %3907, %4018 ]
  %4027 = phi i32 [ %3782, %3781 ], [ 0, %4014 ], [ 0, %4018 ]
  %4028 = getelementptr inbounds i16, i16* %1, i64 27
  %4029 = load i16, i16* %4028, align 2
  %4030 = sext i16 %4029 to i32
  %4031 = icmp eq i16 %4029, 0
  br i1 %4031, label %4032, label %4034

4032:                                             ; preds = %4023
  %4033 = add nuw nsw i32 %4027, 16
  br label %4274

4034:                                             ; preds = %4023
  %4035 = ashr i32 %4030, 31
  %4036 = add nsw i32 %4035, %4030
  %4037 = xor i32 %4036, %4035
  %4038 = sext i32 %4037 to i64
  %4039 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %4038
  %4040 = load i8, i8* %4039, align 1
  %4041 = zext i8 %4040 to i32
  %4042 = icmp sgt i32 %4027, 255
  br i1 %4042, label %4043, label %4155

4043:                                             ; preds = %4034
  %4044 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %4045 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %4046 = load i8, i8* %4044, align 4
  %4047 = sext i8 %4046 to i32
  %4048 = sub nsw i32 %4024, %4047
  %4049 = icmp slt i32 %4048, 0
  br i1 %4049, label %4050, label %4144

4050:                                             ; preds = %4043
  %4051 = zext i32 %4024 to i64
  %4052 = shl i64 %4025, %4051
  %4053 = load i32, i32* %4045, align 4
  %4054 = sub nsw i32 0, %4048
  %4055 = lshr i32 %4053, %4054
  %4056 = zext i32 %4055 to i64
  %4057 = or i64 %4052, %4056
  %4058 = and i64 %4057, -9187201950435737472
  %4059 = sub i64 -72340172838076674, %4057
  %4060 = and i64 %4058, %4059
  %4061 = icmp eq i64 %4060, 0
  %4062 = lshr i64 %4052, 56
  %4063 = trunc i64 %4062 to i8
  store i8 %4063, i8* %4026, align 1
  br i1 %4061, label %4117, label %4064

4064:                                             ; preds = %4050
  %4065 = getelementptr inbounds i8, i8* %4026, i64 1
  store i8 0, i8* %4065, align 1
  %4066 = icmp eq i64 %4062, 255
  %4067 = select i1 %4066, i64 2, i64 1
  %4068 = getelementptr inbounds i8, i8* %4026, i64 %4067
  %4069 = lshr i64 %4052, 48
  %4070 = trunc i64 %4069 to i8
  store i8 %4070, i8* %4068, align 1
  %4071 = getelementptr inbounds i8, i8* %4068, i64 1
  store i8 0, i8* %4071, align 1
  %4072 = and i64 %4052, 71776119061217280
  %4073 = icmp eq i64 %4072, 71776119061217280
  %4074 = select i1 %4073, i64 2, i64 1
  %4075 = getelementptr inbounds i8, i8* %4068, i64 %4074
  %4076 = lshr i64 %4052, 40
  %4077 = trunc i64 %4076 to i8
  store i8 %4077, i8* %4075, align 1
  %4078 = getelementptr inbounds i8, i8* %4075, i64 1
  store i8 0, i8* %4078, align 1
  %4079 = and i64 %4052, 280375465082880
  %4080 = icmp eq i64 %4079, 280375465082880
  %4081 = select i1 %4080, i64 2, i64 1
  %4082 = getelementptr inbounds i8, i8* %4075, i64 %4081
  %4083 = lshr i64 %4052, 32
  %4084 = trunc i64 %4083 to i8
  store i8 %4084, i8* %4082, align 1
  %4085 = getelementptr inbounds i8, i8* %4082, i64 1
  store i8 0, i8* %4085, align 1
  %4086 = and i64 %4052, 1095216660480
  %4087 = icmp eq i64 %4086, 1095216660480
  %4088 = select i1 %4087, i64 2, i64 1
  %4089 = getelementptr inbounds i8, i8* %4082, i64 %4088
  %4090 = lshr i64 %4057, 24
  %4091 = trunc i64 %4090 to i8
  store i8 %4091, i8* %4089, align 1
  %4092 = getelementptr inbounds i8, i8* %4089, i64 1
  store i8 0, i8* %4092, align 1
  %4093 = and i64 %4057, 4278190080
  %4094 = icmp eq i64 %4093, 4278190080
  %4095 = select i1 %4094, i64 2, i64 1
  %4096 = getelementptr inbounds i8, i8* %4089, i64 %4095
  %4097 = lshr i64 %4057, 16
  %4098 = trunc i64 %4097 to i8
  store i8 %4098, i8* %4096, align 1
  %4099 = getelementptr inbounds i8, i8* %4096, i64 1
  store i8 0, i8* %4099, align 1
  %4100 = and i64 %4057, 16711680
  %4101 = icmp eq i64 %4100, 16711680
  %4102 = select i1 %4101, i64 2, i64 1
  %4103 = getelementptr inbounds i8, i8* %4096, i64 %4102
  %4104 = lshr i64 %4057, 8
  %4105 = trunc i64 %4104 to i8
  store i8 %4105, i8* %4103, align 1
  %4106 = getelementptr inbounds i8, i8* %4103, i64 1
  store i8 0, i8* %4106, align 1
  %4107 = and i64 %4057, 65280
  %4108 = icmp eq i64 %4107, 65280
  %4109 = select i1 %4108, i64 2, i64 1
  %4110 = getelementptr inbounds i8, i8* %4103, i64 %4109
  %4111 = trunc i64 %4057 to i8
  store i8 %4111, i8* %4110, align 1
  %4112 = getelementptr inbounds i8, i8* %4110, i64 1
  store i8 0, i8* %4112, align 1
  %4113 = and i64 %4057, 255
  %4114 = icmp eq i64 %4113, 255
  %4115 = select i1 %4114, i64 2, i64 1
  %4116 = getelementptr inbounds i8, i8* %4110, i64 %4115
  br label %4139

4117:                                             ; preds = %4050
  %4118 = lshr i64 %4052, 48
  %4119 = trunc i64 %4118 to i8
  %4120 = getelementptr inbounds i8, i8* %4026, i64 1
  store i8 %4119, i8* %4120, align 1
  %4121 = lshr i64 %4052, 40
  %4122 = trunc i64 %4121 to i8
  %4123 = getelementptr inbounds i8, i8* %4026, i64 2
  store i8 %4122, i8* %4123, align 1
  %4124 = lshr i64 %4052, 32
  %4125 = trunc i64 %4124 to i8
  %4126 = getelementptr inbounds i8, i8* %4026, i64 3
  store i8 %4125, i8* %4126, align 1
  %4127 = lshr i64 %4057, 24
  %4128 = trunc i64 %4127 to i8
  %4129 = getelementptr inbounds i8, i8* %4026, i64 4
  store i8 %4128, i8* %4129, align 1
  %4130 = lshr i64 %4057, 16
  %4131 = trunc i64 %4130 to i8
  %4132 = getelementptr inbounds i8, i8* %4026, i64 5
  store i8 %4131, i8* %4132, align 1
  %4133 = lshr i64 %4057, 8
  %4134 = trunc i64 %4133 to i8
  %4135 = getelementptr inbounds i8, i8* %4026, i64 6
  store i8 %4134, i8* %4135, align 1
  %4136 = trunc i64 %4057 to i8
  %4137 = getelementptr inbounds i8, i8* %4026, i64 7
  store i8 %4136, i8* %4137, align 1
  %4138 = getelementptr inbounds i8, i8* %4026, i64 8
  br label %4139

4139:                                             ; preds = %4117, %4064
  %4140 = phi i8* [ %4116, %4064 ], [ %4138, %4117 ]
  %4141 = add nsw i32 %4048, 64
  %4142 = load i32, i32* %4045, align 4
  %4143 = zext i32 %4142 to i64
  br label %4150

4144:                                             ; preds = %4043
  %4145 = zext i32 %4047 to i64
  %4146 = shl i64 %4025, %4145
  %4147 = load i32, i32* %4045, align 4
  %4148 = zext i32 %4147 to i64
  %4149 = or i64 %4146, %4148
  br label %4150

4150:                                             ; preds = %4139, %4144
  %4151 = phi i32 [ %4141, %4139 ], [ %4048, %4144 ]
  %4152 = phi i64 [ %4143, %4139 ], [ %4149, %4144 ]
  %4153 = phi i8* [ %4140, %4139 ], [ %4026, %4144 ]
  %4154 = and i32 %4027, 255
  br label %4155

4155:                                             ; preds = %4150, %4034
  %4156 = phi i32 [ %4024, %4034 ], [ %4151, %4150 ]
  %4157 = phi i64 [ %4025, %4034 ], [ %4152, %4150 ]
  %4158 = phi i8* [ %4026, %4034 ], [ %4153, %4150 ]
  %4159 = phi i32 [ %4027, %4034 ], [ %4154, %4150 ]
  %4160 = add nuw nsw i32 %4159, %4041
  %4161 = zext i8 %4040 to i64
  %4162 = shl nsw i64 -1, %4161
  %4163 = trunc i64 %4162 to i32
  %4164 = xor i32 %4163, -1
  %4165 = and i32 %4036, %4164
  %4166 = sext i32 %4160 to i64
  %4167 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %4166
  %4168 = load i32, i32* %4167, align 4
  %4169 = shl i32 %4168, %4041
  %4170 = or i32 %4169, %4165
  %4171 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %4166
  %4172 = load i8, i8* %4171, align 1
  %4173 = sext i8 %4172 to i32
  %4174 = add nsw i32 %4173, %4041
  %4175 = sub nsw i32 %4156, %4174
  %4176 = icmp slt i32 %4175, 0
  br i1 %4176, label %4177, label %4269

4177:                                             ; preds = %4155
  %4178 = zext i32 %4156 to i64
  %4179 = shl i64 %4157, %4178
  %4180 = sub nsw i32 0, %4175
  %4181 = ashr i32 %4170, %4180
  %4182 = sext i32 %4181 to i64
  %4183 = or i64 %4179, %4182
  %4184 = and i64 %4183, -9187201950435737472
  %4185 = sub i64 -72340172838076674, %4183
  %4186 = and i64 %4184, %4185
  %4187 = icmp eq i64 %4186, 0
  %4188 = lshr i64 %4183, 56
  %4189 = trunc i64 %4188 to i8
  store i8 %4189, i8* %4158, align 1
  br i1 %4187, label %4243, label %4190

4190:                                             ; preds = %4177
  %4191 = getelementptr inbounds i8, i8* %4158, i64 1
  store i8 0, i8* %4191, align 1
  %4192 = icmp eq i64 %4188, 255
  %4193 = select i1 %4192, i64 2, i64 1
  %4194 = getelementptr inbounds i8, i8* %4158, i64 %4193
  %4195 = lshr i64 %4183, 48
  %4196 = trunc i64 %4195 to i8
  store i8 %4196, i8* %4194, align 1
  %4197 = getelementptr inbounds i8, i8* %4194, i64 1
  store i8 0, i8* %4197, align 1
  %4198 = and i64 %4183, 71776119061217280
  %4199 = icmp eq i64 %4198, 71776119061217280
  %4200 = select i1 %4199, i64 2, i64 1
  %4201 = getelementptr inbounds i8, i8* %4194, i64 %4200
  %4202 = lshr i64 %4183, 40
  %4203 = trunc i64 %4202 to i8
  store i8 %4203, i8* %4201, align 1
  %4204 = getelementptr inbounds i8, i8* %4201, i64 1
  store i8 0, i8* %4204, align 1
  %4205 = and i64 %4183, 280375465082880
  %4206 = icmp eq i64 %4205, 280375465082880
  %4207 = select i1 %4206, i64 2, i64 1
  %4208 = getelementptr inbounds i8, i8* %4201, i64 %4207
  %4209 = lshr i64 %4183, 32
  %4210 = trunc i64 %4209 to i8
  store i8 %4210, i8* %4208, align 1
  %4211 = getelementptr inbounds i8, i8* %4208, i64 1
  store i8 0, i8* %4211, align 1
  %4212 = and i64 %4183, 1095216660480
  %4213 = icmp eq i64 %4212, 1095216660480
  %4214 = select i1 %4213, i64 2, i64 1
  %4215 = getelementptr inbounds i8, i8* %4208, i64 %4214
  %4216 = lshr i64 %4183, 24
  %4217 = trunc i64 %4216 to i8
  store i8 %4217, i8* %4215, align 1
  %4218 = getelementptr inbounds i8, i8* %4215, i64 1
  store i8 0, i8* %4218, align 1
  %4219 = and i64 %4183, 4278190080
  %4220 = icmp eq i64 %4219, 4278190080
  %4221 = select i1 %4220, i64 2, i64 1
  %4222 = getelementptr inbounds i8, i8* %4215, i64 %4221
  %4223 = lshr i64 %4183, 16
  %4224 = trunc i64 %4223 to i8
  store i8 %4224, i8* %4222, align 1
  %4225 = getelementptr inbounds i8, i8* %4222, i64 1
  store i8 0, i8* %4225, align 1
  %4226 = and i64 %4183, 16711680
  %4227 = icmp eq i64 %4226, 16711680
  %4228 = select i1 %4227, i64 2, i64 1
  %4229 = getelementptr inbounds i8, i8* %4222, i64 %4228
  %4230 = lshr i64 %4183, 8
  %4231 = trunc i64 %4230 to i8
  store i8 %4231, i8* %4229, align 1
  %4232 = getelementptr inbounds i8, i8* %4229, i64 1
  store i8 0, i8* %4232, align 1
  %4233 = and i64 %4183, 65280
  %4234 = icmp eq i64 %4233, 65280
  %4235 = select i1 %4234, i64 2, i64 1
  %4236 = getelementptr inbounds i8, i8* %4229, i64 %4235
  %4237 = trunc i64 %4183 to i8
  store i8 %4237, i8* %4236, align 1
  %4238 = getelementptr inbounds i8, i8* %4236, i64 1
  store i8 0, i8* %4238, align 1
  %4239 = and i64 %4183, 255
  %4240 = icmp eq i64 %4239, 255
  %4241 = select i1 %4240, i64 2, i64 1
  %4242 = getelementptr inbounds i8, i8* %4236, i64 %4241
  br label %4265

4243:                                             ; preds = %4177
  %4244 = lshr i64 %4183, 48
  %4245 = trunc i64 %4244 to i8
  %4246 = getelementptr inbounds i8, i8* %4158, i64 1
  store i8 %4245, i8* %4246, align 1
  %4247 = lshr i64 %4183, 40
  %4248 = trunc i64 %4247 to i8
  %4249 = getelementptr inbounds i8, i8* %4158, i64 2
  store i8 %4248, i8* %4249, align 1
  %4250 = lshr i64 %4183, 32
  %4251 = trunc i64 %4250 to i8
  %4252 = getelementptr inbounds i8, i8* %4158, i64 3
  store i8 %4251, i8* %4252, align 1
  %4253 = lshr i64 %4183, 24
  %4254 = trunc i64 %4253 to i8
  %4255 = getelementptr inbounds i8, i8* %4158, i64 4
  store i8 %4254, i8* %4255, align 1
  %4256 = lshr i64 %4183, 16
  %4257 = trunc i64 %4256 to i8
  %4258 = getelementptr inbounds i8, i8* %4158, i64 5
  store i8 %4257, i8* %4258, align 1
  %4259 = lshr i64 %4183, 8
  %4260 = trunc i64 %4259 to i8
  %4261 = getelementptr inbounds i8, i8* %4158, i64 6
  store i8 %4260, i8* %4261, align 1
  %4262 = trunc i64 %4183 to i8
  %4263 = getelementptr inbounds i8, i8* %4158, i64 7
  store i8 %4262, i8* %4263, align 1
  %4264 = getelementptr inbounds i8, i8* %4158, i64 8
  br label %4265

4265:                                             ; preds = %4243, %4190
  %4266 = phi i8* [ %4242, %4190 ], [ %4264, %4243 ]
  %4267 = add nsw i32 %4175, 64
  %4268 = sext i32 %4170 to i64
  br label %4274

4269:                                             ; preds = %4155
  %4270 = zext i32 %4174 to i64
  %4271 = shl i64 %4157, %4270
  %4272 = sext i32 %4170 to i64
  %4273 = or i64 %4271, %4272
  br label %4274

4274:                                             ; preds = %4265, %4269, %4032
  %4275 = phi i32 [ %4024, %4032 ], [ %4267, %4265 ], [ %4175, %4269 ]
  %4276 = phi i64 [ %4025, %4032 ], [ %4268, %4265 ], [ %4273, %4269 ]
  %4277 = phi i8* [ %4026, %4032 ], [ %4266, %4265 ], [ %4158, %4269 ]
  %4278 = phi i32 [ %4033, %4032 ], [ 0, %4265 ], [ 0, %4269 ]
  %4279 = getelementptr inbounds i16, i16* %1, i64 20
  %4280 = load i16, i16* %4279, align 2
  %4281 = sext i16 %4280 to i32
  %4282 = icmp eq i16 %4280, 0
  br i1 %4282, label %4283, label %4285

4283:                                             ; preds = %4274
  %4284 = add nuw nsw i32 %4278, 16
  br label %4525

4285:                                             ; preds = %4274
  %4286 = ashr i32 %4281, 31
  %4287 = add nsw i32 %4286, %4281
  %4288 = xor i32 %4287, %4286
  %4289 = sext i32 %4288 to i64
  %4290 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %4289
  %4291 = load i8, i8* %4290, align 1
  %4292 = zext i8 %4291 to i32
  %4293 = icmp sgt i32 %4278, 255
  br i1 %4293, label %4294, label %4406

4294:                                             ; preds = %4285
  %4295 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %4296 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %4297 = load i8, i8* %4295, align 4
  %4298 = sext i8 %4297 to i32
  %4299 = sub nsw i32 %4275, %4298
  %4300 = icmp slt i32 %4299, 0
  br i1 %4300, label %4301, label %4395

4301:                                             ; preds = %4294
  %4302 = zext i32 %4275 to i64
  %4303 = shl i64 %4276, %4302
  %4304 = load i32, i32* %4296, align 4
  %4305 = sub nsw i32 0, %4299
  %4306 = lshr i32 %4304, %4305
  %4307 = zext i32 %4306 to i64
  %4308 = or i64 %4303, %4307
  %4309 = and i64 %4308, -9187201950435737472
  %4310 = sub i64 -72340172838076674, %4308
  %4311 = and i64 %4309, %4310
  %4312 = icmp eq i64 %4311, 0
  %4313 = lshr i64 %4303, 56
  %4314 = trunc i64 %4313 to i8
  store i8 %4314, i8* %4277, align 1
  br i1 %4312, label %4368, label %4315

4315:                                             ; preds = %4301
  %4316 = getelementptr inbounds i8, i8* %4277, i64 1
  store i8 0, i8* %4316, align 1
  %4317 = icmp eq i64 %4313, 255
  %4318 = select i1 %4317, i64 2, i64 1
  %4319 = getelementptr inbounds i8, i8* %4277, i64 %4318
  %4320 = lshr i64 %4303, 48
  %4321 = trunc i64 %4320 to i8
  store i8 %4321, i8* %4319, align 1
  %4322 = getelementptr inbounds i8, i8* %4319, i64 1
  store i8 0, i8* %4322, align 1
  %4323 = and i64 %4303, 71776119061217280
  %4324 = icmp eq i64 %4323, 71776119061217280
  %4325 = select i1 %4324, i64 2, i64 1
  %4326 = getelementptr inbounds i8, i8* %4319, i64 %4325
  %4327 = lshr i64 %4303, 40
  %4328 = trunc i64 %4327 to i8
  store i8 %4328, i8* %4326, align 1
  %4329 = getelementptr inbounds i8, i8* %4326, i64 1
  store i8 0, i8* %4329, align 1
  %4330 = and i64 %4303, 280375465082880
  %4331 = icmp eq i64 %4330, 280375465082880
  %4332 = select i1 %4331, i64 2, i64 1
  %4333 = getelementptr inbounds i8, i8* %4326, i64 %4332
  %4334 = lshr i64 %4303, 32
  %4335 = trunc i64 %4334 to i8
  store i8 %4335, i8* %4333, align 1
  %4336 = getelementptr inbounds i8, i8* %4333, i64 1
  store i8 0, i8* %4336, align 1
  %4337 = and i64 %4303, 1095216660480
  %4338 = icmp eq i64 %4337, 1095216660480
  %4339 = select i1 %4338, i64 2, i64 1
  %4340 = getelementptr inbounds i8, i8* %4333, i64 %4339
  %4341 = lshr i64 %4308, 24
  %4342 = trunc i64 %4341 to i8
  store i8 %4342, i8* %4340, align 1
  %4343 = getelementptr inbounds i8, i8* %4340, i64 1
  store i8 0, i8* %4343, align 1
  %4344 = and i64 %4308, 4278190080
  %4345 = icmp eq i64 %4344, 4278190080
  %4346 = select i1 %4345, i64 2, i64 1
  %4347 = getelementptr inbounds i8, i8* %4340, i64 %4346
  %4348 = lshr i64 %4308, 16
  %4349 = trunc i64 %4348 to i8
  store i8 %4349, i8* %4347, align 1
  %4350 = getelementptr inbounds i8, i8* %4347, i64 1
  store i8 0, i8* %4350, align 1
  %4351 = and i64 %4308, 16711680
  %4352 = icmp eq i64 %4351, 16711680
  %4353 = select i1 %4352, i64 2, i64 1
  %4354 = getelementptr inbounds i8, i8* %4347, i64 %4353
  %4355 = lshr i64 %4308, 8
  %4356 = trunc i64 %4355 to i8
  store i8 %4356, i8* %4354, align 1
  %4357 = getelementptr inbounds i8, i8* %4354, i64 1
  store i8 0, i8* %4357, align 1
  %4358 = and i64 %4308, 65280
  %4359 = icmp eq i64 %4358, 65280
  %4360 = select i1 %4359, i64 2, i64 1
  %4361 = getelementptr inbounds i8, i8* %4354, i64 %4360
  %4362 = trunc i64 %4308 to i8
  store i8 %4362, i8* %4361, align 1
  %4363 = getelementptr inbounds i8, i8* %4361, i64 1
  store i8 0, i8* %4363, align 1
  %4364 = and i64 %4308, 255
  %4365 = icmp eq i64 %4364, 255
  %4366 = select i1 %4365, i64 2, i64 1
  %4367 = getelementptr inbounds i8, i8* %4361, i64 %4366
  br label %4390

4368:                                             ; preds = %4301
  %4369 = lshr i64 %4303, 48
  %4370 = trunc i64 %4369 to i8
  %4371 = getelementptr inbounds i8, i8* %4277, i64 1
  store i8 %4370, i8* %4371, align 1
  %4372 = lshr i64 %4303, 40
  %4373 = trunc i64 %4372 to i8
  %4374 = getelementptr inbounds i8, i8* %4277, i64 2
  store i8 %4373, i8* %4374, align 1
  %4375 = lshr i64 %4303, 32
  %4376 = trunc i64 %4375 to i8
  %4377 = getelementptr inbounds i8, i8* %4277, i64 3
  store i8 %4376, i8* %4377, align 1
  %4378 = lshr i64 %4308, 24
  %4379 = trunc i64 %4378 to i8
  %4380 = getelementptr inbounds i8, i8* %4277, i64 4
  store i8 %4379, i8* %4380, align 1
  %4381 = lshr i64 %4308, 16
  %4382 = trunc i64 %4381 to i8
  %4383 = getelementptr inbounds i8, i8* %4277, i64 5
  store i8 %4382, i8* %4383, align 1
  %4384 = lshr i64 %4308, 8
  %4385 = trunc i64 %4384 to i8
  %4386 = getelementptr inbounds i8, i8* %4277, i64 6
  store i8 %4385, i8* %4386, align 1
  %4387 = trunc i64 %4308 to i8
  %4388 = getelementptr inbounds i8, i8* %4277, i64 7
  store i8 %4387, i8* %4388, align 1
  %4389 = getelementptr inbounds i8, i8* %4277, i64 8
  br label %4390

4390:                                             ; preds = %4368, %4315
  %4391 = phi i8* [ %4367, %4315 ], [ %4389, %4368 ]
  %4392 = add nsw i32 %4299, 64
  %4393 = load i32, i32* %4296, align 4
  %4394 = zext i32 %4393 to i64
  br label %4401

4395:                                             ; preds = %4294
  %4396 = zext i32 %4298 to i64
  %4397 = shl i64 %4276, %4396
  %4398 = load i32, i32* %4296, align 4
  %4399 = zext i32 %4398 to i64
  %4400 = or i64 %4397, %4399
  br label %4401

4401:                                             ; preds = %4390, %4395
  %4402 = phi i32 [ %4392, %4390 ], [ %4299, %4395 ]
  %4403 = phi i64 [ %4394, %4390 ], [ %4400, %4395 ]
  %4404 = phi i8* [ %4391, %4390 ], [ %4277, %4395 ]
  %4405 = and i32 %4278, 255
  br label %4406

4406:                                             ; preds = %4401, %4285
  %4407 = phi i32 [ %4275, %4285 ], [ %4402, %4401 ]
  %4408 = phi i64 [ %4276, %4285 ], [ %4403, %4401 ]
  %4409 = phi i8* [ %4277, %4285 ], [ %4404, %4401 ]
  %4410 = phi i32 [ %4278, %4285 ], [ %4405, %4401 ]
  %4411 = add nuw nsw i32 %4410, %4292
  %4412 = zext i8 %4291 to i64
  %4413 = shl nsw i64 -1, %4412
  %4414 = trunc i64 %4413 to i32
  %4415 = xor i32 %4414, -1
  %4416 = and i32 %4287, %4415
  %4417 = sext i32 %4411 to i64
  %4418 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %4417
  %4419 = load i32, i32* %4418, align 4
  %4420 = shl i32 %4419, %4292
  %4421 = or i32 %4420, %4416
  %4422 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %4417
  %4423 = load i8, i8* %4422, align 1
  %4424 = sext i8 %4423 to i32
  %4425 = add nsw i32 %4424, %4292
  %4426 = sub nsw i32 %4407, %4425
  %4427 = icmp slt i32 %4426, 0
  br i1 %4427, label %4428, label %4520

4428:                                             ; preds = %4406
  %4429 = zext i32 %4407 to i64
  %4430 = shl i64 %4408, %4429
  %4431 = sub nsw i32 0, %4426
  %4432 = ashr i32 %4421, %4431
  %4433 = sext i32 %4432 to i64
  %4434 = or i64 %4430, %4433
  %4435 = and i64 %4434, -9187201950435737472
  %4436 = sub i64 -72340172838076674, %4434
  %4437 = and i64 %4435, %4436
  %4438 = icmp eq i64 %4437, 0
  %4439 = lshr i64 %4434, 56
  %4440 = trunc i64 %4439 to i8
  store i8 %4440, i8* %4409, align 1
  br i1 %4438, label %4494, label %4441

4441:                                             ; preds = %4428
  %4442 = getelementptr inbounds i8, i8* %4409, i64 1
  store i8 0, i8* %4442, align 1
  %4443 = icmp eq i64 %4439, 255
  %4444 = select i1 %4443, i64 2, i64 1
  %4445 = getelementptr inbounds i8, i8* %4409, i64 %4444
  %4446 = lshr i64 %4434, 48
  %4447 = trunc i64 %4446 to i8
  store i8 %4447, i8* %4445, align 1
  %4448 = getelementptr inbounds i8, i8* %4445, i64 1
  store i8 0, i8* %4448, align 1
  %4449 = and i64 %4434, 71776119061217280
  %4450 = icmp eq i64 %4449, 71776119061217280
  %4451 = select i1 %4450, i64 2, i64 1
  %4452 = getelementptr inbounds i8, i8* %4445, i64 %4451
  %4453 = lshr i64 %4434, 40
  %4454 = trunc i64 %4453 to i8
  store i8 %4454, i8* %4452, align 1
  %4455 = getelementptr inbounds i8, i8* %4452, i64 1
  store i8 0, i8* %4455, align 1
  %4456 = and i64 %4434, 280375465082880
  %4457 = icmp eq i64 %4456, 280375465082880
  %4458 = select i1 %4457, i64 2, i64 1
  %4459 = getelementptr inbounds i8, i8* %4452, i64 %4458
  %4460 = lshr i64 %4434, 32
  %4461 = trunc i64 %4460 to i8
  store i8 %4461, i8* %4459, align 1
  %4462 = getelementptr inbounds i8, i8* %4459, i64 1
  store i8 0, i8* %4462, align 1
  %4463 = and i64 %4434, 1095216660480
  %4464 = icmp eq i64 %4463, 1095216660480
  %4465 = select i1 %4464, i64 2, i64 1
  %4466 = getelementptr inbounds i8, i8* %4459, i64 %4465
  %4467 = lshr i64 %4434, 24
  %4468 = trunc i64 %4467 to i8
  store i8 %4468, i8* %4466, align 1
  %4469 = getelementptr inbounds i8, i8* %4466, i64 1
  store i8 0, i8* %4469, align 1
  %4470 = and i64 %4434, 4278190080
  %4471 = icmp eq i64 %4470, 4278190080
  %4472 = select i1 %4471, i64 2, i64 1
  %4473 = getelementptr inbounds i8, i8* %4466, i64 %4472
  %4474 = lshr i64 %4434, 16
  %4475 = trunc i64 %4474 to i8
  store i8 %4475, i8* %4473, align 1
  %4476 = getelementptr inbounds i8, i8* %4473, i64 1
  store i8 0, i8* %4476, align 1
  %4477 = and i64 %4434, 16711680
  %4478 = icmp eq i64 %4477, 16711680
  %4479 = select i1 %4478, i64 2, i64 1
  %4480 = getelementptr inbounds i8, i8* %4473, i64 %4479
  %4481 = lshr i64 %4434, 8
  %4482 = trunc i64 %4481 to i8
  store i8 %4482, i8* %4480, align 1
  %4483 = getelementptr inbounds i8, i8* %4480, i64 1
  store i8 0, i8* %4483, align 1
  %4484 = and i64 %4434, 65280
  %4485 = icmp eq i64 %4484, 65280
  %4486 = select i1 %4485, i64 2, i64 1
  %4487 = getelementptr inbounds i8, i8* %4480, i64 %4486
  %4488 = trunc i64 %4434 to i8
  store i8 %4488, i8* %4487, align 1
  %4489 = getelementptr inbounds i8, i8* %4487, i64 1
  store i8 0, i8* %4489, align 1
  %4490 = and i64 %4434, 255
  %4491 = icmp eq i64 %4490, 255
  %4492 = select i1 %4491, i64 2, i64 1
  %4493 = getelementptr inbounds i8, i8* %4487, i64 %4492
  br label %4516

4494:                                             ; preds = %4428
  %4495 = lshr i64 %4434, 48
  %4496 = trunc i64 %4495 to i8
  %4497 = getelementptr inbounds i8, i8* %4409, i64 1
  store i8 %4496, i8* %4497, align 1
  %4498 = lshr i64 %4434, 40
  %4499 = trunc i64 %4498 to i8
  %4500 = getelementptr inbounds i8, i8* %4409, i64 2
  store i8 %4499, i8* %4500, align 1
  %4501 = lshr i64 %4434, 32
  %4502 = trunc i64 %4501 to i8
  %4503 = getelementptr inbounds i8, i8* %4409, i64 3
  store i8 %4502, i8* %4503, align 1
  %4504 = lshr i64 %4434, 24
  %4505 = trunc i64 %4504 to i8
  %4506 = getelementptr inbounds i8, i8* %4409, i64 4
  store i8 %4505, i8* %4506, align 1
  %4507 = lshr i64 %4434, 16
  %4508 = trunc i64 %4507 to i8
  %4509 = getelementptr inbounds i8, i8* %4409, i64 5
  store i8 %4508, i8* %4509, align 1
  %4510 = lshr i64 %4434, 8
  %4511 = trunc i64 %4510 to i8
  %4512 = getelementptr inbounds i8, i8* %4409, i64 6
  store i8 %4511, i8* %4512, align 1
  %4513 = trunc i64 %4434 to i8
  %4514 = getelementptr inbounds i8, i8* %4409, i64 7
  store i8 %4513, i8* %4514, align 1
  %4515 = getelementptr inbounds i8, i8* %4409, i64 8
  br label %4516

4516:                                             ; preds = %4494, %4441
  %4517 = phi i8* [ %4493, %4441 ], [ %4515, %4494 ]
  %4518 = add nsw i32 %4426, 64
  %4519 = sext i32 %4421 to i64
  br label %4525

4520:                                             ; preds = %4406
  %4521 = zext i32 %4425 to i64
  %4522 = shl i64 %4408, %4521
  %4523 = sext i32 %4421 to i64
  %4524 = or i64 %4522, %4523
  br label %4525

4525:                                             ; preds = %4516, %4520, %4283
  %4526 = phi i32 [ %4275, %4283 ], [ %4518, %4516 ], [ %4426, %4520 ]
  %4527 = phi i64 [ %4276, %4283 ], [ %4519, %4516 ], [ %4524, %4520 ]
  %4528 = phi i8* [ %4277, %4283 ], [ %4517, %4516 ], [ %4409, %4520 ]
  %4529 = phi i32 [ %4284, %4283 ], [ 0, %4516 ], [ 0, %4520 ]
  %4530 = getelementptr inbounds i16, i16* %1, i64 13
  %4531 = load i16, i16* %4530, align 2
  %4532 = sext i16 %4531 to i32
  %4533 = icmp eq i16 %4531, 0
  br i1 %4533, label %4534, label %4536

4534:                                             ; preds = %4525
  %4535 = add nuw nsw i32 %4529, 16
  br label %4776

4536:                                             ; preds = %4525
  %4537 = ashr i32 %4532, 31
  %4538 = add nsw i32 %4537, %4532
  %4539 = xor i32 %4538, %4537
  %4540 = sext i32 %4539 to i64
  %4541 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %4540
  %4542 = load i8, i8* %4541, align 1
  %4543 = zext i8 %4542 to i32
  %4544 = icmp sgt i32 %4529, 255
  br i1 %4544, label %4545, label %4657

4545:                                             ; preds = %4536
  %4546 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %4547 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %4548 = load i8, i8* %4546, align 4
  %4549 = sext i8 %4548 to i32
  %4550 = sub nsw i32 %4526, %4549
  %4551 = icmp slt i32 %4550, 0
  br i1 %4551, label %4552, label %4646

4552:                                             ; preds = %4545
  %4553 = zext i32 %4526 to i64
  %4554 = shl i64 %4527, %4553
  %4555 = load i32, i32* %4547, align 4
  %4556 = sub nsw i32 0, %4550
  %4557 = lshr i32 %4555, %4556
  %4558 = zext i32 %4557 to i64
  %4559 = or i64 %4554, %4558
  %4560 = and i64 %4559, -9187201950435737472
  %4561 = sub i64 -72340172838076674, %4559
  %4562 = and i64 %4560, %4561
  %4563 = icmp eq i64 %4562, 0
  %4564 = lshr i64 %4554, 56
  %4565 = trunc i64 %4564 to i8
  store i8 %4565, i8* %4528, align 1
  br i1 %4563, label %4619, label %4566

4566:                                             ; preds = %4552
  %4567 = getelementptr inbounds i8, i8* %4528, i64 1
  store i8 0, i8* %4567, align 1
  %4568 = icmp eq i64 %4564, 255
  %4569 = select i1 %4568, i64 2, i64 1
  %4570 = getelementptr inbounds i8, i8* %4528, i64 %4569
  %4571 = lshr i64 %4554, 48
  %4572 = trunc i64 %4571 to i8
  store i8 %4572, i8* %4570, align 1
  %4573 = getelementptr inbounds i8, i8* %4570, i64 1
  store i8 0, i8* %4573, align 1
  %4574 = and i64 %4554, 71776119061217280
  %4575 = icmp eq i64 %4574, 71776119061217280
  %4576 = select i1 %4575, i64 2, i64 1
  %4577 = getelementptr inbounds i8, i8* %4570, i64 %4576
  %4578 = lshr i64 %4554, 40
  %4579 = trunc i64 %4578 to i8
  store i8 %4579, i8* %4577, align 1
  %4580 = getelementptr inbounds i8, i8* %4577, i64 1
  store i8 0, i8* %4580, align 1
  %4581 = and i64 %4554, 280375465082880
  %4582 = icmp eq i64 %4581, 280375465082880
  %4583 = select i1 %4582, i64 2, i64 1
  %4584 = getelementptr inbounds i8, i8* %4577, i64 %4583
  %4585 = lshr i64 %4554, 32
  %4586 = trunc i64 %4585 to i8
  store i8 %4586, i8* %4584, align 1
  %4587 = getelementptr inbounds i8, i8* %4584, i64 1
  store i8 0, i8* %4587, align 1
  %4588 = and i64 %4554, 1095216660480
  %4589 = icmp eq i64 %4588, 1095216660480
  %4590 = select i1 %4589, i64 2, i64 1
  %4591 = getelementptr inbounds i8, i8* %4584, i64 %4590
  %4592 = lshr i64 %4559, 24
  %4593 = trunc i64 %4592 to i8
  store i8 %4593, i8* %4591, align 1
  %4594 = getelementptr inbounds i8, i8* %4591, i64 1
  store i8 0, i8* %4594, align 1
  %4595 = and i64 %4559, 4278190080
  %4596 = icmp eq i64 %4595, 4278190080
  %4597 = select i1 %4596, i64 2, i64 1
  %4598 = getelementptr inbounds i8, i8* %4591, i64 %4597
  %4599 = lshr i64 %4559, 16
  %4600 = trunc i64 %4599 to i8
  store i8 %4600, i8* %4598, align 1
  %4601 = getelementptr inbounds i8, i8* %4598, i64 1
  store i8 0, i8* %4601, align 1
  %4602 = and i64 %4559, 16711680
  %4603 = icmp eq i64 %4602, 16711680
  %4604 = select i1 %4603, i64 2, i64 1
  %4605 = getelementptr inbounds i8, i8* %4598, i64 %4604
  %4606 = lshr i64 %4559, 8
  %4607 = trunc i64 %4606 to i8
  store i8 %4607, i8* %4605, align 1
  %4608 = getelementptr inbounds i8, i8* %4605, i64 1
  store i8 0, i8* %4608, align 1
  %4609 = and i64 %4559, 65280
  %4610 = icmp eq i64 %4609, 65280
  %4611 = select i1 %4610, i64 2, i64 1
  %4612 = getelementptr inbounds i8, i8* %4605, i64 %4611
  %4613 = trunc i64 %4559 to i8
  store i8 %4613, i8* %4612, align 1
  %4614 = getelementptr inbounds i8, i8* %4612, i64 1
  store i8 0, i8* %4614, align 1
  %4615 = and i64 %4559, 255
  %4616 = icmp eq i64 %4615, 255
  %4617 = select i1 %4616, i64 2, i64 1
  %4618 = getelementptr inbounds i8, i8* %4612, i64 %4617
  br label %4641

4619:                                             ; preds = %4552
  %4620 = lshr i64 %4554, 48
  %4621 = trunc i64 %4620 to i8
  %4622 = getelementptr inbounds i8, i8* %4528, i64 1
  store i8 %4621, i8* %4622, align 1
  %4623 = lshr i64 %4554, 40
  %4624 = trunc i64 %4623 to i8
  %4625 = getelementptr inbounds i8, i8* %4528, i64 2
  store i8 %4624, i8* %4625, align 1
  %4626 = lshr i64 %4554, 32
  %4627 = trunc i64 %4626 to i8
  %4628 = getelementptr inbounds i8, i8* %4528, i64 3
  store i8 %4627, i8* %4628, align 1
  %4629 = lshr i64 %4559, 24
  %4630 = trunc i64 %4629 to i8
  %4631 = getelementptr inbounds i8, i8* %4528, i64 4
  store i8 %4630, i8* %4631, align 1
  %4632 = lshr i64 %4559, 16
  %4633 = trunc i64 %4632 to i8
  %4634 = getelementptr inbounds i8, i8* %4528, i64 5
  store i8 %4633, i8* %4634, align 1
  %4635 = lshr i64 %4559, 8
  %4636 = trunc i64 %4635 to i8
  %4637 = getelementptr inbounds i8, i8* %4528, i64 6
  store i8 %4636, i8* %4637, align 1
  %4638 = trunc i64 %4559 to i8
  %4639 = getelementptr inbounds i8, i8* %4528, i64 7
  store i8 %4638, i8* %4639, align 1
  %4640 = getelementptr inbounds i8, i8* %4528, i64 8
  br label %4641

4641:                                             ; preds = %4619, %4566
  %4642 = phi i8* [ %4618, %4566 ], [ %4640, %4619 ]
  %4643 = add nsw i32 %4550, 64
  %4644 = load i32, i32* %4547, align 4
  %4645 = zext i32 %4644 to i64
  br label %4652

4646:                                             ; preds = %4545
  %4647 = zext i32 %4549 to i64
  %4648 = shl i64 %4527, %4647
  %4649 = load i32, i32* %4547, align 4
  %4650 = zext i32 %4649 to i64
  %4651 = or i64 %4648, %4650
  br label %4652

4652:                                             ; preds = %4641, %4646
  %4653 = phi i32 [ %4643, %4641 ], [ %4550, %4646 ]
  %4654 = phi i64 [ %4645, %4641 ], [ %4651, %4646 ]
  %4655 = phi i8* [ %4642, %4641 ], [ %4528, %4646 ]
  %4656 = and i32 %4529, 255
  br label %4657

4657:                                             ; preds = %4652, %4536
  %4658 = phi i32 [ %4526, %4536 ], [ %4653, %4652 ]
  %4659 = phi i64 [ %4527, %4536 ], [ %4654, %4652 ]
  %4660 = phi i8* [ %4528, %4536 ], [ %4655, %4652 ]
  %4661 = phi i32 [ %4529, %4536 ], [ %4656, %4652 ]
  %4662 = add nuw nsw i32 %4661, %4543
  %4663 = zext i8 %4542 to i64
  %4664 = shl nsw i64 -1, %4663
  %4665 = trunc i64 %4664 to i32
  %4666 = xor i32 %4665, -1
  %4667 = and i32 %4538, %4666
  %4668 = sext i32 %4662 to i64
  %4669 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %4668
  %4670 = load i32, i32* %4669, align 4
  %4671 = shl i32 %4670, %4543
  %4672 = or i32 %4671, %4667
  %4673 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %4668
  %4674 = load i8, i8* %4673, align 1
  %4675 = sext i8 %4674 to i32
  %4676 = add nsw i32 %4675, %4543
  %4677 = sub nsw i32 %4658, %4676
  %4678 = icmp slt i32 %4677, 0
  br i1 %4678, label %4679, label %4771

4679:                                             ; preds = %4657
  %4680 = zext i32 %4658 to i64
  %4681 = shl i64 %4659, %4680
  %4682 = sub nsw i32 0, %4677
  %4683 = ashr i32 %4672, %4682
  %4684 = sext i32 %4683 to i64
  %4685 = or i64 %4681, %4684
  %4686 = and i64 %4685, -9187201950435737472
  %4687 = sub i64 -72340172838076674, %4685
  %4688 = and i64 %4686, %4687
  %4689 = icmp eq i64 %4688, 0
  %4690 = lshr i64 %4685, 56
  %4691 = trunc i64 %4690 to i8
  store i8 %4691, i8* %4660, align 1
  br i1 %4689, label %4745, label %4692

4692:                                             ; preds = %4679
  %4693 = getelementptr inbounds i8, i8* %4660, i64 1
  store i8 0, i8* %4693, align 1
  %4694 = icmp eq i64 %4690, 255
  %4695 = select i1 %4694, i64 2, i64 1
  %4696 = getelementptr inbounds i8, i8* %4660, i64 %4695
  %4697 = lshr i64 %4685, 48
  %4698 = trunc i64 %4697 to i8
  store i8 %4698, i8* %4696, align 1
  %4699 = getelementptr inbounds i8, i8* %4696, i64 1
  store i8 0, i8* %4699, align 1
  %4700 = and i64 %4685, 71776119061217280
  %4701 = icmp eq i64 %4700, 71776119061217280
  %4702 = select i1 %4701, i64 2, i64 1
  %4703 = getelementptr inbounds i8, i8* %4696, i64 %4702
  %4704 = lshr i64 %4685, 40
  %4705 = trunc i64 %4704 to i8
  store i8 %4705, i8* %4703, align 1
  %4706 = getelementptr inbounds i8, i8* %4703, i64 1
  store i8 0, i8* %4706, align 1
  %4707 = and i64 %4685, 280375465082880
  %4708 = icmp eq i64 %4707, 280375465082880
  %4709 = select i1 %4708, i64 2, i64 1
  %4710 = getelementptr inbounds i8, i8* %4703, i64 %4709
  %4711 = lshr i64 %4685, 32
  %4712 = trunc i64 %4711 to i8
  store i8 %4712, i8* %4710, align 1
  %4713 = getelementptr inbounds i8, i8* %4710, i64 1
  store i8 0, i8* %4713, align 1
  %4714 = and i64 %4685, 1095216660480
  %4715 = icmp eq i64 %4714, 1095216660480
  %4716 = select i1 %4715, i64 2, i64 1
  %4717 = getelementptr inbounds i8, i8* %4710, i64 %4716
  %4718 = lshr i64 %4685, 24
  %4719 = trunc i64 %4718 to i8
  store i8 %4719, i8* %4717, align 1
  %4720 = getelementptr inbounds i8, i8* %4717, i64 1
  store i8 0, i8* %4720, align 1
  %4721 = and i64 %4685, 4278190080
  %4722 = icmp eq i64 %4721, 4278190080
  %4723 = select i1 %4722, i64 2, i64 1
  %4724 = getelementptr inbounds i8, i8* %4717, i64 %4723
  %4725 = lshr i64 %4685, 16
  %4726 = trunc i64 %4725 to i8
  store i8 %4726, i8* %4724, align 1
  %4727 = getelementptr inbounds i8, i8* %4724, i64 1
  store i8 0, i8* %4727, align 1
  %4728 = and i64 %4685, 16711680
  %4729 = icmp eq i64 %4728, 16711680
  %4730 = select i1 %4729, i64 2, i64 1
  %4731 = getelementptr inbounds i8, i8* %4724, i64 %4730
  %4732 = lshr i64 %4685, 8
  %4733 = trunc i64 %4732 to i8
  store i8 %4733, i8* %4731, align 1
  %4734 = getelementptr inbounds i8, i8* %4731, i64 1
  store i8 0, i8* %4734, align 1
  %4735 = and i64 %4685, 65280
  %4736 = icmp eq i64 %4735, 65280
  %4737 = select i1 %4736, i64 2, i64 1
  %4738 = getelementptr inbounds i8, i8* %4731, i64 %4737
  %4739 = trunc i64 %4685 to i8
  store i8 %4739, i8* %4738, align 1
  %4740 = getelementptr inbounds i8, i8* %4738, i64 1
  store i8 0, i8* %4740, align 1
  %4741 = and i64 %4685, 255
  %4742 = icmp eq i64 %4741, 255
  %4743 = select i1 %4742, i64 2, i64 1
  %4744 = getelementptr inbounds i8, i8* %4738, i64 %4743
  br label %4767

4745:                                             ; preds = %4679
  %4746 = lshr i64 %4685, 48
  %4747 = trunc i64 %4746 to i8
  %4748 = getelementptr inbounds i8, i8* %4660, i64 1
  store i8 %4747, i8* %4748, align 1
  %4749 = lshr i64 %4685, 40
  %4750 = trunc i64 %4749 to i8
  %4751 = getelementptr inbounds i8, i8* %4660, i64 2
  store i8 %4750, i8* %4751, align 1
  %4752 = lshr i64 %4685, 32
  %4753 = trunc i64 %4752 to i8
  %4754 = getelementptr inbounds i8, i8* %4660, i64 3
  store i8 %4753, i8* %4754, align 1
  %4755 = lshr i64 %4685, 24
  %4756 = trunc i64 %4755 to i8
  %4757 = getelementptr inbounds i8, i8* %4660, i64 4
  store i8 %4756, i8* %4757, align 1
  %4758 = lshr i64 %4685, 16
  %4759 = trunc i64 %4758 to i8
  %4760 = getelementptr inbounds i8, i8* %4660, i64 5
  store i8 %4759, i8* %4760, align 1
  %4761 = lshr i64 %4685, 8
  %4762 = trunc i64 %4761 to i8
  %4763 = getelementptr inbounds i8, i8* %4660, i64 6
  store i8 %4762, i8* %4763, align 1
  %4764 = trunc i64 %4685 to i8
  %4765 = getelementptr inbounds i8, i8* %4660, i64 7
  store i8 %4764, i8* %4765, align 1
  %4766 = getelementptr inbounds i8, i8* %4660, i64 8
  br label %4767

4767:                                             ; preds = %4745, %4692
  %4768 = phi i8* [ %4744, %4692 ], [ %4766, %4745 ]
  %4769 = add nsw i32 %4677, 64
  %4770 = sext i32 %4672 to i64
  br label %4776

4771:                                             ; preds = %4657
  %4772 = zext i32 %4676 to i64
  %4773 = shl i64 %4659, %4772
  %4774 = sext i32 %4672 to i64
  %4775 = or i64 %4773, %4774
  br label %4776

4776:                                             ; preds = %4767, %4771, %4534
  %4777 = phi i32 [ %4526, %4534 ], [ %4769, %4767 ], [ %4677, %4771 ]
  %4778 = phi i64 [ %4527, %4534 ], [ %4770, %4767 ], [ %4775, %4771 ]
  %4779 = phi i8* [ %4528, %4534 ], [ %4768, %4767 ], [ %4660, %4771 ]
  %4780 = phi i32 [ %4535, %4534 ], [ 0, %4767 ], [ 0, %4771 ]
  %4781 = getelementptr inbounds i16, i16* %1, i64 6
  %4782 = load i16, i16* %4781, align 2
  %4783 = sext i16 %4782 to i32
  %4784 = icmp eq i16 %4782, 0
  br i1 %4784, label %4785, label %4787

4785:                                             ; preds = %4776
  %4786 = add nuw nsw i32 %4780, 16
  br label %5027

4787:                                             ; preds = %4776
  %4788 = ashr i32 %4783, 31
  %4789 = add nsw i32 %4788, %4783
  %4790 = xor i32 %4789, %4788
  %4791 = sext i32 %4790 to i64
  %4792 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %4791
  %4793 = load i8, i8* %4792, align 1
  %4794 = zext i8 %4793 to i32
  %4795 = icmp sgt i32 %4780, 255
  br i1 %4795, label %4796, label %4908

4796:                                             ; preds = %4787
  %4797 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %4798 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %4799 = load i8, i8* %4797, align 4
  %4800 = sext i8 %4799 to i32
  %4801 = sub nsw i32 %4777, %4800
  %4802 = icmp slt i32 %4801, 0
  br i1 %4802, label %4803, label %4897

4803:                                             ; preds = %4796
  %4804 = zext i32 %4777 to i64
  %4805 = shl i64 %4778, %4804
  %4806 = load i32, i32* %4798, align 4
  %4807 = sub nsw i32 0, %4801
  %4808 = lshr i32 %4806, %4807
  %4809 = zext i32 %4808 to i64
  %4810 = or i64 %4805, %4809
  %4811 = and i64 %4810, -9187201950435737472
  %4812 = sub i64 -72340172838076674, %4810
  %4813 = and i64 %4811, %4812
  %4814 = icmp eq i64 %4813, 0
  %4815 = lshr i64 %4805, 56
  %4816 = trunc i64 %4815 to i8
  store i8 %4816, i8* %4779, align 1
  br i1 %4814, label %4870, label %4817

4817:                                             ; preds = %4803
  %4818 = getelementptr inbounds i8, i8* %4779, i64 1
  store i8 0, i8* %4818, align 1
  %4819 = icmp eq i64 %4815, 255
  %4820 = select i1 %4819, i64 2, i64 1
  %4821 = getelementptr inbounds i8, i8* %4779, i64 %4820
  %4822 = lshr i64 %4805, 48
  %4823 = trunc i64 %4822 to i8
  store i8 %4823, i8* %4821, align 1
  %4824 = getelementptr inbounds i8, i8* %4821, i64 1
  store i8 0, i8* %4824, align 1
  %4825 = and i64 %4805, 71776119061217280
  %4826 = icmp eq i64 %4825, 71776119061217280
  %4827 = select i1 %4826, i64 2, i64 1
  %4828 = getelementptr inbounds i8, i8* %4821, i64 %4827
  %4829 = lshr i64 %4805, 40
  %4830 = trunc i64 %4829 to i8
  store i8 %4830, i8* %4828, align 1
  %4831 = getelementptr inbounds i8, i8* %4828, i64 1
  store i8 0, i8* %4831, align 1
  %4832 = and i64 %4805, 280375465082880
  %4833 = icmp eq i64 %4832, 280375465082880
  %4834 = select i1 %4833, i64 2, i64 1
  %4835 = getelementptr inbounds i8, i8* %4828, i64 %4834
  %4836 = lshr i64 %4805, 32
  %4837 = trunc i64 %4836 to i8
  store i8 %4837, i8* %4835, align 1
  %4838 = getelementptr inbounds i8, i8* %4835, i64 1
  store i8 0, i8* %4838, align 1
  %4839 = and i64 %4805, 1095216660480
  %4840 = icmp eq i64 %4839, 1095216660480
  %4841 = select i1 %4840, i64 2, i64 1
  %4842 = getelementptr inbounds i8, i8* %4835, i64 %4841
  %4843 = lshr i64 %4810, 24
  %4844 = trunc i64 %4843 to i8
  store i8 %4844, i8* %4842, align 1
  %4845 = getelementptr inbounds i8, i8* %4842, i64 1
  store i8 0, i8* %4845, align 1
  %4846 = and i64 %4810, 4278190080
  %4847 = icmp eq i64 %4846, 4278190080
  %4848 = select i1 %4847, i64 2, i64 1
  %4849 = getelementptr inbounds i8, i8* %4842, i64 %4848
  %4850 = lshr i64 %4810, 16
  %4851 = trunc i64 %4850 to i8
  store i8 %4851, i8* %4849, align 1
  %4852 = getelementptr inbounds i8, i8* %4849, i64 1
  store i8 0, i8* %4852, align 1
  %4853 = and i64 %4810, 16711680
  %4854 = icmp eq i64 %4853, 16711680
  %4855 = select i1 %4854, i64 2, i64 1
  %4856 = getelementptr inbounds i8, i8* %4849, i64 %4855
  %4857 = lshr i64 %4810, 8
  %4858 = trunc i64 %4857 to i8
  store i8 %4858, i8* %4856, align 1
  %4859 = getelementptr inbounds i8, i8* %4856, i64 1
  store i8 0, i8* %4859, align 1
  %4860 = and i64 %4810, 65280
  %4861 = icmp eq i64 %4860, 65280
  %4862 = select i1 %4861, i64 2, i64 1
  %4863 = getelementptr inbounds i8, i8* %4856, i64 %4862
  %4864 = trunc i64 %4810 to i8
  store i8 %4864, i8* %4863, align 1
  %4865 = getelementptr inbounds i8, i8* %4863, i64 1
  store i8 0, i8* %4865, align 1
  %4866 = and i64 %4810, 255
  %4867 = icmp eq i64 %4866, 255
  %4868 = select i1 %4867, i64 2, i64 1
  %4869 = getelementptr inbounds i8, i8* %4863, i64 %4868
  br label %4892

4870:                                             ; preds = %4803
  %4871 = lshr i64 %4805, 48
  %4872 = trunc i64 %4871 to i8
  %4873 = getelementptr inbounds i8, i8* %4779, i64 1
  store i8 %4872, i8* %4873, align 1
  %4874 = lshr i64 %4805, 40
  %4875 = trunc i64 %4874 to i8
  %4876 = getelementptr inbounds i8, i8* %4779, i64 2
  store i8 %4875, i8* %4876, align 1
  %4877 = lshr i64 %4805, 32
  %4878 = trunc i64 %4877 to i8
  %4879 = getelementptr inbounds i8, i8* %4779, i64 3
  store i8 %4878, i8* %4879, align 1
  %4880 = lshr i64 %4810, 24
  %4881 = trunc i64 %4880 to i8
  %4882 = getelementptr inbounds i8, i8* %4779, i64 4
  store i8 %4881, i8* %4882, align 1
  %4883 = lshr i64 %4810, 16
  %4884 = trunc i64 %4883 to i8
  %4885 = getelementptr inbounds i8, i8* %4779, i64 5
  store i8 %4884, i8* %4885, align 1
  %4886 = lshr i64 %4810, 8
  %4887 = trunc i64 %4886 to i8
  %4888 = getelementptr inbounds i8, i8* %4779, i64 6
  store i8 %4887, i8* %4888, align 1
  %4889 = trunc i64 %4810 to i8
  %4890 = getelementptr inbounds i8, i8* %4779, i64 7
  store i8 %4889, i8* %4890, align 1
  %4891 = getelementptr inbounds i8, i8* %4779, i64 8
  br label %4892

4892:                                             ; preds = %4870, %4817
  %4893 = phi i8* [ %4869, %4817 ], [ %4891, %4870 ]
  %4894 = add nsw i32 %4801, 64
  %4895 = load i32, i32* %4798, align 4
  %4896 = zext i32 %4895 to i64
  br label %4903

4897:                                             ; preds = %4796
  %4898 = zext i32 %4800 to i64
  %4899 = shl i64 %4778, %4898
  %4900 = load i32, i32* %4798, align 4
  %4901 = zext i32 %4900 to i64
  %4902 = or i64 %4899, %4901
  br label %4903

4903:                                             ; preds = %4892, %4897
  %4904 = phi i32 [ %4894, %4892 ], [ %4801, %4897 ]
  %4905 = phi i64 [ %4896, %4892 ], [ %4902, %4897 ]
  %4906 = phi i8* [ %4893, %4892 ], [ %4779, %4897 ]
  %4907 = and i32 %4780, 255
  br label %4908

4908:                                             ; preds = %4903, %4787
  %4909 = phi i32 [ %4777, %4787 ], [ %4904, %4903 ]
  %4910 = phi i64 [ %4778, %4787 ], [ %4905, %4903 ]
  %4911 = phi i8* [ %4779, %4787 ], [ %4906, %4903 ]
  %4912 = phi i32 [ %4780, %4787 ], [ %4907, %4903 ]
  %4913 = add nuw nsw i32 %4912, %4794
  %4914 = zext i8 %4793 to i64
  %4915 = shl nsw i64 -1, %4914
  %4916 = trunc i64 %4915 to i32
  %4917 = xor i32 %4916, -1
  %4918 = and i32 %4789, %4917
  %4919 = sext i32 %4913 to i64
  %4920 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %4919
  %4921 = load i32, i32* %4920, align 4
  %4922 = shl i32 %4921, %4794
  %4923 = or i32 %4922, %4918
  %4924 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %4919
  %4925 = load i8, i8* %4924, align 1
  %4926 = sext i8 %4925 to i32
  %4927 = add nsw i32 %4926, %4794
  %4928 = sub nsw i32 %4909, %4927
  %4929 = icmp slt i32 %4928, 0
  br i1 %4929, label %4930, label %5022

4930:                                             ; preds = %4908
  %4931 = zext i32 %4909 to i64
  %4932 = shl i64 %4910, %4931
  %4933 = sub nsw i32 0, %4928
  %4934 = ashr i32 %4923, %4933
  %4935 = sext i32 %4934 to i64
  %4936 = or i64 %4932, %4935
  %4937 = and i64 %4936, -9187201950435737472
  %4938 = sub i64 -72340172838076674, %4936
  %4939 = and i64 %4937, %4938
  %4940 = icmp eq i64 %4939, 0
  %4941 = lshr i64 %4936, 56
  %4942 = trunc i64 %4941 to i8
  store i8 %4942, i8* %4911, align 1
  br i1 %4940, label %4996, label %4943

4943:                                             ; preds = %4930
  %4944 = getelementptr inbounds i8, i8* %4911, i64 1
  store i8 0, i8* %4944, align 1
  %4945 = icmp eq i64 %4941, 255
  %4946 = select i1 %4945, i64 2, i64 1
  %4947 = getelementptr inbounds i8, i8* %4911, i64 %4946
  %4948 = lshr i64 %4936, 48
  %4949 = trunc i64 %4948 to i8
  store i8 %4949, i8* %4947, align 1
  %4950 = getelementptr inbounds i8, i8* %4947, i64 1
  store i8 0, i8* %4950, align 1
  %4951 = and i64 %4936, 71776119061217280
  %4952 = icmp eq i64 %4951, 71776119061217280
  %4953 = select i1 %4952, i64 2, i64 1
  %4954 = getelementptr inbounds i8, i8* %4947, i64 %4953
  %4955 = lshr i64 %4936, 40
  %4956 = trunc i64 %4955 to i8
  store i8 %4956, i8* %4954, align 1
  %4957 = getelementptr inbounds i8, i8* %4954, i64 1
  store i8 0, i8* %4957, align 1
  %4958 = and i64 %4936, 280375465082880
  %4959 = icmp eq i64 %4958, 280375465082880
  %4960 = select i1 %4959, i64 2, i64 1
  %4961 = getelementptr inbounds i8, i8* %4954, i64 %4960
  %4962 = lshr i64 %4936, 32
  %4963 = trunc i64 %4962 to i8
  store i8 %4963, i8* %4961, align 1
  %4964 = getelementptr inbounds i8, i8* %4961, i64 1
  store i8 0, i8* %4964, align 1
  %4965 = and i64 %4936, 1095216660480
  %4966 = icmp eq i64 %4965, 1095216660480
  %4967 = select i1 %4966, i64 2, i64 1
  %4968 = getelementptr inbounds i8, i8* %4961, i64 %4967
  %4969 = lshr i64 %4936, 24
  %4970 = trunc i64 %4969 to i8
  store i8 %4970, i8* %4968, align 1
  %4971 = getelementptr inbounds i8, i8* %4968, i64 1
  store i8 0, i8* %4971, align 1
  %4972 = and i64 %4936, 4278190080
  %4973 = icmp eq i64 %4972, 4278190080
  %4974 = select i1 %4973, i64 2, i64 1
  %4975 = getelementptr inbounds i8, i8* %4968, i64 %4974
  %4976 = lshr i64 %4936, 16
  %4977 = trunc i64 %4976 to i8
  store i8 %4977, i8* %4975, align 1
  %4978 = getelementptr inbounds i8, i8* %4975, i64 1
  store i8 0, i8* %4978, align 1
  %4979 = and i64 %4936, 16711680
  %4980 = icmp eq i64 %4979, 16711680
  %4981 = select i1 %4980, i64 2, i64 1
  %4982 = getelementptr inbounds i8, i8* %4975, i64 %4981
  %4983 = lshr i64 %4936, 8
  %4984 = trunc i64 %4983 to i8
  store i8 %4984, i8* %4982, align 1
  %4985 = getelementptr inbounds i8, i8* %4982, i64 1
  store i8 0, i8* %4985, align 1
  %4986 = and i64 %4936, 65280
  %4987 = icmp eq i64 %4986, 65280
  %4988 = select i1 %4987, i64 2, i64 1
  %4989 = getelementptr inbounds i8, i8* %4982, i64 %4988
  %4990 = trunc i64 %4936 to i8
  store i8 %4990, i8* %4989, align 1
  %4991 = getelementptr inbounds i8, i8* %4989, i64 1
  store i8 0, i8* %4991, align 1
  %4992 = and i64 %4936, 255
  %4993 = icmp eq i64 %4992, 255
  %4994 = select i1 %4993, i64 2, i64 1
  %4995 = getelementptr inbounds i8, i8* %4989, i64 %4994
  br label %5018

4996:                                             ; preds = %4930
  %4997 = lshr i64 %4936, 48
  %4998 = trunc i64 %4997 to i8
  %4999 = getelementptr inbounds i8, i8* %4911, i64 1
  store i8 %4998, i8* %4999, align 1
  %5000 = lshr i64 %4936, 40
  %5001 = trunc i64 %5000 to i8
  %5002 = getelementptr inbounds i8, i8* %4911, i64 2
  store i8 %5001, i8* %5002, align 1
  %5003 = lshr i64 %4936, 32
  %5004 = trunc i64 %5003 to i8
  %5005 = getelementptr inbounds i8, i8* %4911, i64 3
  store i8 %5004, i8* %5005, align 1
  %5006 = lshr i64 %4936, 24
  %5007 = trunc i64 %5006 to i8
  %5008 = getelementptr inbounds i8, i8* %4911, i64 4
  store i8 %5007, i8* %5008, align 1
  %5009 = lshr i64 %4936, 16
  %5010 = trunc i64 %5009 to i8
  %5011 = getelementptr inbounds i8, i8* %4911, i64 5
  store i8 %5010, i8* %5011, align 1
  %5012 = lshr i64 %4936, 8
  %5013 = trunc i64 %5012 to i8
  %5014 = getelementptr inbounds i8, i8* %4911, i64 6
  store i8 %5013, i8* %5014, align 1
  %5015 = trunc i64 %4936 to i8
  %5016 = getelementptr inbounds i8, i8* %4911, i64 7
  store i8 %5015, i8* %5016, align 1
  %5017 = getelementptr inbounds i8, i8* %4911, i64 8
  br label %5018

5018:                                             ; preds = %4996, %4943
  %5019 = phi i8* [ %4995, %4943 ], [ %5017, %4996 ]
  %5020 = add nsw i32 %4928, 64
  %5021 = sext i32 %4923 to i64
  br label %5027

5022:                                             ; preds = %4908
  %5023 = zext i32 %4927 to i64
  %5024 = shl i64 %4910, %5023
  %5025 = sext i32 %4923 to i64
  %5026 = or i64 %5024, %5025
  br label %5027

5027:                                             ; preds = %5018, %5022, %4785
  %5028 = phi i32 [ %4777, %4785 ], [ %5020, %5018 ], [ %4928, %5022 ]
  %5029 = phi i64 [ %4778, %4785 ], [ %5021, %5018 ], [ %5026, %5022 ]
  %5030 = phi i8* [ %4779, %4785 ], [ %5019, %5018 ], [ %4911, %5022 ]
  %5031 = phi i32 [ %4786, %4785 ], [ 0, %5018 ], [ 0, %5022 ]
  %5032 = getelementptr inbounds i16, i16* %1, i64 7
  %5033 = load i16, i16* %5032, align 2
  %5034 = sext i16 %5033 to i32
  %5035 = icmp eq i16 %5033, 0
  br i1 %5035, label %5036, label %5038

5036:                                             ; preds = %5027
  %5037 = add nuw nsw i32 %5031, 16
  br label %5278

5038:                                             ; preds = %5027
  %5039 = ashr i32 %5034, 31
  %5040 = add nsw i32 %5039, %5034
  %5041 = xor i32 %5040, %5039
  %5042 = sext i32 %5041 to i64
  %5043 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %5042
  %5044 = load i8, i8* %5043, align 1
  %5045 = zext i8 %5044 to i32
  %5046 = icmp sgt i32 %5031, 255
  br i1 %5046, label %5047, label %5159

5047:                                             ; preds = %5038
  %5048 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %5049 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %5050 = load i8, i8* %5048, align 4
  %5051 = sext i8 %5050 to i32
  %5052 = sub nsw i32 %5028, %5051
  %5053 = icmp slt i32 %5052, 0
  br i1 %5053, label %5054, label %5148

5054:                                             ; preds = %5047
  %5055 = zext i32 %5028 to i64
  %5056 = shl i64 %5029, %5055
  %5057 = load i32, i32* %5049, align 4
  %5058 = sub nsw i32 0, %5052
  %5059 = lshr i32 %5057, %5058
  %5060 = zext i32 %5059 to i64
  %5061 = or i64 %5056, %5060
  %5062 = and i64 %5061, -9187201950435737472
  %5063 = sub i64 -72340172838076674, %5061
  %5064 = and i64 %5062, %5063
  %5065 = icmp eq i64 %5064, 0
  %5066 = lshr i64 %5056, 56
  %5067 = trunc i64 %5066 to i8
  store i8 %5067, i8* %5030, align 1
  br i1 %5065, label %5121, label %5068

5068:                                             ; preds = %5054
  %5069 = getelementptr inbounds i8, i8* %5030, i64 1
  store i8 0, i8* %5069, align 1
  %5070 = icmp eq i64 %5066, 255
  %5071 = select i1 %5070, i64 2, i64 1
  %5072 = getelementptr inbounds i8, i8* %5030, i64 %5071
  %5073 = lshr i64 %5056, 48
  %5074 = trunc i64 %5073 to i8
  store i8 %5074, i8* %5072, align 1
  %5075 = getelementptr inbounds i8, i8* %5072, i64 1
  store i8 0, i8* %5075, align 1
  %5076 = and i64 %5056, 71776119061217280
  %5077 = icmp eq i64 %5076, 71776119061217280
  %5078 = select i1 %5077, i64 2, i64 1
  %5079 = getelementptr inbounds i8, i8* %5072, i64 %5078
  %5080 = lshr i64 %5056, 40
  %5081 = trunc i64 %5080 to i8
  store i8 %5081, i8* %5079, align 1
  %5082 = getelementptr inbounds i8, i8* %5079, i64 1
  store i8 0, i8* %5082, align 1
  %5083 = and i64 %5056, 280375465082880
  %5084 = icmp eq i64 %5083, 280375465082880
  %5085 = select i1 %5084, i64 2, i64 1
  %5086 = getelementptr inbounds i8, i8* %5079, i64 %5085
  %5087 = lshr i64 %5056, 32
  %5088 = trunc i64 %5087 to i8
  store i8 %5088, i8* %5086, align 1
  %5089 = getelementptr inbounds i8, i8* %5086, i64 1
  store i8 0, i8* %5089, align 1
  %5090 = and i64 %5056, 1095216660480
  %5091 = icmp eq i64 %5090, 1095216660480
  %5092 = select i1 %5091, i64 2, i64 1
  %5093 = getelementptr inbounds i8, i8* %5086, i64 %5092
  %5094 = lshr i64 %5061, 24
  %5095 = trunc i64 %5094 to i8
  store i8 %5095, i8* %5093, align 1
  %5096 = getelementptr inbounds i8, i8* %5093, i64 1
  store i8 0, i8* %5096, align 1
  %5097 = and i64 %5061, 4278190080
  %5098 = icmp eq i64 %5097, 4278190080
  %5099 = select i1 %5098, i64 2, i64 1
  %5100 = getelementptr inbounds i8, i8* %5093, i64 %5099
  %5101 = lshr i64 %5061, 16
  %5102 = trunc i64 %5101 to i8
  store i8 %5102, i8* %5100, align 1
  %5103 = getelementptr inbounds i8, i8* %5100, i64 1
  store i8 0, i8* %5103, align 1
  %5104 = and i64 %5061, 16711680
  %5105 = icmp eq i64 %5104, 16711680
  %5106 = select i1 %5105, i64 2, i64 1
  %5107 = getelementptr inbounds i8, i8* %5100, i64 %5106
  %5108 = lshr i64 %5061, 8
  %5109 = trunc i64 %5108 to i8
  store i8 %5109, i8* %5107, align 1
  %5110 = getelementptr inbounds i8, i8* %5107, i64 1
  store i8 0, i8* %5110, align 1
  %5111 = and i64 %5061, 65280
  %5112 = icmp eq i64 %5111, 65280
  %5113 = select i1 %5112, i64 2, i64 1
  %5114 = getelementptr inbounds i8, i8* %5107, i64 %5113
  %5115 = trunc i64 %5061 to i8
  store i8 %5115, i8* %5114, align 1
  %5116 = getelementptr inbounds i8, i8* %5114, i64 1
  store i8 0, i8* %5116, align 1
  %5117 = and i64 %5061, 255
  %5118 = icmp eq i64 %5117, 255
  %5119 = select i1 %5118, i64 2, i64 1
  %5120 = getelementptr inbounds i8, i8* %5114, i64 %5119
  br label %5143

5121:                                             ; preds = %5054
  %5122 = lshr i64 %5056, 48
  %5123 = trunc i64 %5122 to i8
  %5124 = getelementptr inbounds i8, i8* %5030, i64 1
  store i8 %5123, i8* %5124, align 1
  %5125 = lshr i64 %5056, 40
  %5126 = trunc i64 %5125 to i8
  %5127 = getelementptr inbounds i8, i8* %5030, i64 2
  store i8 %5126, i8* %5127, align 1
  %5128 = lshr i64 %5056, 32
  %5129 = trunc i64 %5128 to i8
  %5130 = getelementptr inbounds i8, i8* %5030, i64 3
  store i8 %5129, i8* %5130, align 1
  %5131 = lshr i64 %5061, 24
  %5132 = trunc i64 %5131 to i8
  %5133 = getelementptr inbounds i8, i8* %5030, i64 4
  store i8 %5132, i8* %5133, align 1
  %5134 = lshr i64 %5061, 16
  %5135 = trunc i64 %5134 to i8
  %5136 = getelementptr inbounds i8, i8* %5030, i64 5
  store i8 %5135, i8* %5136, align 1
  %5137 = lshr i64 %5061, 8
  %5138 = trunc i64 %5137 to i8
  %5139 = getelementptr inbounds i8, i8* %5030, i64 6
  store i8 %5138, i8* %5139, align 1
  %5140 = trunc i64 %5061 to i8
  %5141 = getelementptr inbounds i8, i8* %5030, i64 7
  store i8 %5140, i8* %5141, align 1
  %5142 = getelementptr inbounds i8, i8* %5030, i64 8
  br label %5143

5143:                                             ; preds = %5121, %5068
  %5144 = phi i8* [ %5120, %5068 ], [ %5142, %5121 ]
  %5145 = add nsw i32 %5052, 64
  %5146 = load i32, i32* %5049, align 4
  %5147 = zext i32 %5146 to i64
  br label %5154

5148:                                             ; preds = %5047
  %5149 = zext i32 %5051 to i64
  %5150 = shl i64 %5029, %5149
  %5151 = load i32, i32* %5049, align 4
  %5152 = zext i32 %5151 to i64
  %5153 = or i64 %5150, %5152
  br label %5154

5154:                                             ; preds = %5143, %5148
  %5155 = phi i32 [ %5145, %5143 ], [ %5052, %5148 ]
  %5156 = phi i64 [ %5147, %5143 ], [ %5153, %5148 ]
  %5157 = phi i8* [ %5144, %5143 ], [ %5030, %5148 ]
  %5158 = and i32 %5031, 255
  br label %5159

5159:                                             ; preds = %5154, %5038
  %5160 = phi i32 [ %5028, %5038 ], [ %5155, %5154 ]
  %5161 = phi i64 [ %5029, %5038 ], [ %5156, %5154 ]
  %5162 = phi i8* [ %5030, %5038 ], [ %5157, %5154 ]
  %5163 = phi i32 [ %5031, %5038 ], [ %5158, %5154 ]
  %5164 = add nuw nsw i32 %5163, %5045
  %5165 = zext i8 %5044 to i64
  %5166 = shl nsw i64 -1, %5165
  %5167 = trunc i64 %5166 to i32
  %5168 = xor i32 %5167, -1
  %5169 = and i32 %5040, %5168
  %5170 = sext i32 %5164 to i64
  %5171 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %5170
  %5172 = load i32, i32* %5171, align 4
  %5173 = shl i32 %5172, %5045
  %5174 = or i32 %5173, %5169
  %5175 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %5170
  %5176 = load i8, i8* %5175, align 1
  %5177 = sext i8 %5176 to i32
  %5178 = add nsw i32 %5177, %5045
  %5179 = sub nsw i32 %5160, %5178
  %5180 = icmp slt i32 %5179, 0
  br i1 %5180, label %5181, label %5273

5181:                                             ; preds = %5159
  %5182 = zext i32 %5160 to i64
  %5183 = shl i64 %5161, %5182
  %5184 = sub nsw i32 0, %5179
  %5185 = ashr i32 %5174, %5184
  %5186 = sext i32 %5185 to i64
  %5187 = or i64 %5183, %5186
  %5188 = and i64 %5187, -9187201950435737472
  %5189 = sub i64 -72340172838076674, %5187
  %5190 = and i64 %5188, %5189
  %5191 = icmp eq i64 %5190, 0
  %5192 = lshr i64 %5187, 56
  %5193 = trunc i64 %5192 to i8
  store i8 %5193, i8* %5162, align 1
  br i1 %5191, label %5247, label %5194

5194:                                             ; preds = %5181
  %5195 = getelementptr inbounds i8, i8* %5162, i64 1
  store i8 0, i8* %5195, align 1
  %5196 = icmp eq i64 %5192, 255
  %5197 = select i1 %5196, i64 2, i64 1
  %5198 = getelementptr inbounds i8, i8* %5162, i64 %5197
  %5199 = lshr i64 %5187, 48
  %5200 = trunc i64 %5199 to i8
  store i8 %5200, i8* %5198, align 1
  %5201 = getelementptr inbounds i8, i8* %5198, i64 1
  store i8 0, i8* %5201, align 1
  %5202 = and i64 %5187, 71776119061217280
  %5203 = icmp eq i64 %5202, 71776119061217280
  %5204 = select i1 %5203, i64 2, i64 1
  %5205 = getelementptr inbounds i8, i8* %5198, i64 %5204
  %5206 = lshr i64 %5187, 40
  %5207 = trunc i64 %5206 to i8
  store i8 %5207, i8* %5205, align 1
  %5208 = getelementptr inbounds i8, i8* %5205, i64 1
  store i8 0, i8* %5208, align 1
  %5209 = and i64 %5187, 280375465082880
  %5210 = icmp eq i64 %5209, 280375465082880
  %5211 = select i1 %5210, i64 2, i64 1
  %5212 = getelementptr inbounds i8, i8* %5205, i64 %5211
  %5213 = lshr i64 %5187, 32
  %5214 = trunc i64 %5213 to i8
  store i8 %5214, i8* %5212, align 1
  %5215 = getelementptr inbounds i8, i8* %5212, i64 1
  store i8 0, i8* %5215, align 1
  %5216 = and i64 %5187, 1095216660480
  %5217 = icmp eq i64 %5216, 1095216660480
  %5218 = select i1 %5217, i64 2, i64 1
  %5219 = getelementptr inbounds i8, i8* %5212, i64 %5218
  %5220 = lshr i64 %5187, 24
  %5221 = trunc i64 %5220 to i8
  store i8 %5221, i8* %5219, align 1
  %5222 = getelementptr inbounds i8, i8* %5219, i64 1
  store i8 0, i8* %5222, align 1
  %5223 = and i64 %5187, 4278190080
  %5224 = icmp eq i64 %5223, 4278190080
  %5225 = select i1 %5224, i64 2, i64 1
  %5226 = getelementptr inbounds i8, i8* %5219, i64 %5225
  %5227 = lshr i64 %5187, 16
  %5228 = trunc i64 %5227 to i8
  store i8 %5228, i8* %5226, align 1
  %5229 = getelementptr inbounds i8, i8* %5226, i64 1
  store i8 0, i8* %5229, align 1
  %5230 = and i64 %5187, 16711680
  %5231 = icmp eq i64 %5230, 16711680
  %5232 = select i1 %5231, i64 2, i64 1
  %5233 = getelementptr inbounds i8, i8* %5226, i64 %5232
  %5234 = lshr i64 %5187, 8
  %5235 = trunc i64 %5234 to i8
  store i8 %5235, i8* %5233, align 1
  %5236 = getelementptr inbounds i8, i8* %5233, i64 1
  store i8 0, i8* %5236, align 1
  %5237 = and i64 %5187, 65280
  %5238 = icmp eq i64 %5237, 65280
  %5239 = select i1 %5238, i64 2, i64 1
  %5240 = getelementptr inbounds i8, i8* %5233, i64 %5239
  %5241 = trunc i64 %5187 to i8
  store i8 %5241, i8* %5240, align 1
  %5242 = getelementptr inbounds i8, i8* %5240, i64 1
  store i8 0, i8* %5242, align 1
  %5243 = and i64 %5187, 255
  %5244 = icmp eq i64 %5243, 255
  %5245 = select i1 %5244, i64 2, i64 1
  %5246 = getelementptr inbounds i8, i8* %5240, i64 %5245
  br label %5269

5247:                                             ; preds = %5181
  %5248 = lshr i64 %5187, 48
  %5249 = trunc i64 %5248 to i8
  %5250 = getelementptr inbounds i8, i8* %5162, i64 1
  store i8 %5249, i8* %5250, align 1
  %5251 = lshr i64 %5187, 40
  %5252 = trunc i64 %5251 to i8
  %5253 = getelementptr inbounds i8, i8* %5162, i64 2
  store i8 %5252, i8* %5253, align 1
  %5254 = lshr i64 %5187, 32
  %5255 = trunc i64 %5254 to i8
  %5256 = getelementptr inbounds i8, i8* %5162, i64 3
  store i8 %5255, i8* %5256, align 1
  %5257 = lshr i64 %5187, 24
  %5258 = trunc i64 %5257 to i8
  %5259 = getelementptr inbounds i8, i8* %5162, i64 4
  store i8 %5258, i8* %5259, align 1
  %5260 = lshr i64 %5187, 16
  %5261 = trunc i64 %5260 to i8
  %5262 = getelementptr inbounds i8, i8* %5162, i64 5
  store i8 %5261, i8* %5262, align 1
  %5263 = lshr i64 %5187, 8
  %5264 = trunc i64 %5263 to i8
  %5265 = getelementptr inbounds i8, i8* %5162, i64 6
  store i8 %5264, i8* %5265, align 1
  %5266 = trunc i64 %5187 to i8
  %5267 = getelementptr inbounds i8, i8* %5162, i64 7
  store i8 %5266, i8* %5267, align 1
  %5268 = getelementptr inbounds i8, i8* %5162, i64 8
  br label %5269

5269:                                             ; preds = %5247, %5194
  %5270 = phi i8* [ %5246, %5194 ], [ %5268, %5247 ]
  %5271 = add nsw i32 %5179, 64
  %5272 = sext i32 %5174 to i64
  br label %5278

5273:                                             ; preds = %5159
  %5274 = zext i32 %5178 to i64
  %5275 = shl i64 %5161, %5274
  %5276 = sext i32 %5174 to i64
  %5277 = or i64 %5275, %5276
  br label %5278

5278:                                             ; preds = %5269, %5273, %5036
  %5279 = phi i32 [ %5028, %5036 ], [ %5271, %5269 ], [ %5179, %5273 ]
  %5280 = phi i64 [ %5029, %5036 ], [ %5272, %5269 ], [ %5277, %5273 ]
  %5281 = phi i8* [ %5030, %5036 ], [ %5270, %5269 ], [ %5162, %5273 ]
  %5282 = phi i32 [ %5037, %5036 ], [ 0, %5269 ], [ 0, %5273 ]
  %5283 = getelementptr inbounds i16, i16* %1, i64 14
  %5284 = load i16, i16* %5283, align 2
  %5285 = sext i16 %5284 to i32
  %5286 = icmp eq i16 %5284, 0
  br i1 %5286, label %5287, label %5289

5287:                                             ; preds = %5278
  %5288 = add nuw nsw i32 %5282, 16
  br label %5529

5289:                                             ; preds = %5278
  %5290 = ashr i32 %5285, 31
  %5291 = add nsw i32 %5290, %5285
  %5292 = xor i32 %5291, %5290
  %5293 = sext i32 %5292 to i64
  %5294 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %5293
  %5295 = load i8, i8* %5294, align 1
  %5296 = zext i8 %5295 to i32
  %5297 = icmp sgt i32 %5282, 255
  br i1 %5297, label %5298, label %5410

5298:                                             ; preds = %5289
  %5299 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %5300 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %5301 = load i8, i8* %5299, align 4
  %5302 = sext i8 %5301 to i32
  %5303 = sub nsw i32 %5279, %5302
  %5304 = icmp slt i32 %5303, 0
  br i1 %5304, label %5305, label %5399

5305:                                             ; preds = %5298
  %5306 = zext i32 %5279 to i64
  %5307 = shl i64 %5280, %5306
  %5308 = load i32, i32* %5300, align 4
  %5309 = sub nsw i32 0, %5303
  %5310 = lshr i32 %5308, %5309
  %5311 = zext i32 %5310 to i64
  %5312 = or i64 %5307, %5311
  %5313 = and i64 %5312, -9187201950435737472
  %5314 = sub i64 -72340172838076674, %5312
  %5315 = and i64 %5313, %5314
  %5316 = icmp eq i64 %5315, 0
  %5317 = lshr i64 %5307, 56
  %5318 = trunc i64 %5317 to i8
  store i8 %5318, i8* %5281, align 1
  br i1 %5316, label %5372, label %5319

5319:                                             ; preds = %5305
  %5320 = getelementptr inbounds i8, i8* %5281, i64 1
  store i8 0, i8* %5320, align 1
  %5321 = icmp eq i64 %5317, 255
  %5322 = select i1 %5321, i64 2, i64 1
  %5323 = getelementptr inbounds i8, i8* %5281, i64 %5322
  %5324 = lshr i64 %5307, 48
  %5325 = trunc i64 %5324 to i8
  store i8 %5325, i8* %5323, align 1
  %5326 = getelementptr inbounds i8, i8* %5323, i64 1
  store i8 0, i8* %5326, align 1
  %5327 = and i64 %5307, 71776119061217280
  %5328 = icmp eq i64 %5327, 71776119061217280
  %5329 = select i1 %5328, i64 2, i64 1
  %5330 = getelementptr inbounds i8, i8* %5323, i64 %5329
  %5331 = lshr i64 %5307, 40
  %5332 = trunc i64 %5331 to i8
  store i8 %5332, i8* %5330, align 1
  %5333 = getelementptr inbounds i8, i8* %5330, i64 1
  store i8 0, i8* %5333, align 1
  %5334 = and i64 %5307, 280375465082880
  %5335 = icmp eq i64 %5334, 280375465082880
  %5336 = select i1 %5335, i64 2, i64 1
  %5337 = getelementptr inbounds i8, i8* %5330, i64 %5336
  %5338 = lshr i64 %5307, 32
  %5339 = trunc i64 %5338 to i8
  store i8 %5339, i8* %5337, align 1
  %5340 = getelementptr inbounds i8, i8* %5337, i64 1
  store i8 0, i8* %5340, align 1
  %5341 = and i64 %5307, 1095216660480
  %5342 = icmp eq i64 %5341, 1095216660480
  %5343 = select i1 %5342, i64 2, i64 1
  %5344 = getelementptr inbounds i8, i8* %5337, i64 %5343
  %5345 = lshr i64 %5312, 24
  %5346 = trunc i64 %5345 to i8
  store i8 %5346, i8* %5344, align 1
  %5347 = getelementptr inbounds i8, i8* %5344, i64 1
  store i8 0, i8* %5347, align 1
  %5348 = and i64 %5312, 4278190080
  %5349 = icmp eq i64 %5348, 4278190080
  %5350 = select i1 %5349, i64 2, i64 1
  %5351 = getelementptr inbounds i8, i8* %5344, i64 %5350
  %5352 = lshr i64 %5312, 16
  %5353 = trunc i64 %5352 to i8
  store i8 %5353, i8* %5351, align 1
  %5354 = getelementptr inbounds i8, i8* %5351, i64 1
  store i8 0, i8* %5354, align 1
  %5355 = and i64 %5312, 16711680
  %5356 = icmp eq i64 %5355, 16711680
  %5357 = select i1 %5356, i64 2, i64 1
  %5358 = getelementptr inbounds i8, i8* %5351, i64 %5357
  %5359 = lshr i64 %5312, 8
  %5360 = trunc i64 %5359 to i8
  store i8 %5360, i8* %5358, align 1
  %5361 = getelementptr inbounds i8, i8* %5358, i64 1
  store i8 0, i8* %5361, align 1
  %5362 = and i64 %5312, 65280
  %5363 = icmp eq i64 %5362, 65280
  %5364 = select i1 %5363, i64 2, i64 1
  %5365 = getelementptr inbounds i8, i8* %5358, i64 %5364
  %5366 = trunc i64 %5312 to i8
  store i8 %5366, i8* %5365, align 1
  %5367 = getelementptr inbounds i8, i8* %5365, i64 1
  store i8 0, i8* %5367, align 1
  %5368 = and i64 %5312, 255
  %5369 = icmp eq i64 %5368, 255
  %5370 = select i1 %5369, i64 2, i64 1
  %5371 = getelementptr inbounds i8, i8* %5365, i64 %5370
  br label %5394

5372:                                             ; preds = %5305
  %5373 = lshr i64 %5307, 48
  %5374 = trunc i64 %5373 to i8
  %5375 = getelementptr inbounds i8, i8* %5281, i64 1
  store i8 %5374, i8* %5375, align 1
  %5376 = lshr i64 %5307, 40
  %5377 = trunc i64 %5376 to i8
  %5378 = getelementptr inbounds i8, i8* %5281, i64 2
  store i8 %5377, i8* %5378, align 1
  %5379 = lshr i64 %5307, 32
  %5380 = trunc i64 %5379 to i8
  %5381 = getelementptr inbounds i8, i8* %5281, i64 3
  store i8 %5380, i8* %5381, align 1
  %5382 = lshr i64 %5312, 24
  %5383 = trunc i64 %5382 to i8
  %5384 = getelementptr inbounds i8, i8* %5281, i64 4
  store i8 %5383, i8* %5384, align 1
  %5385 = lshr i64 %5312, 16
  %5386 = trunc i64 %5385 to i8
  %5387 = getelementptr inbounds i8, i8* %5281, i64 5
  store i8 %5386, i8* %5387, align 1
  %5388 = lshr i64 %5312, 8
  %5389 = trunc i64 %5388 to i8
  %5390 = getelementptr inbounds i8, i8* %5281, i64 6
  store i8 %5389, i8* %5390, align 1
  %5391 = trunc i64 %5312 to i8
  %5392 = getelementptr inbounds i8, i8* %5281, i64 7
  store i8 %5391, i8* %5392, align 1
  %5393 = getelementptr inbounds i8, i8* %5281, i64 8
  br label %5394

5394:                                             ; preds = %5372, %5319
  %5395 = phi i8* [ %5371, %5319 ], [ %5393, %5372 ]
  %5396 = add nsw i32 %5303, 64
  %5397 = load i32, i32* %5300, align 4
  %5398 = zext i32 %5397 to i64
  br label %5405

5399:                                             ; preds = %5298
  %5400 = zext i32 %5302 to i64
  %5401 = shl i64 %5280, %5400
  %5402 = load i32, i32* %5300, align 4
  %5403 = zext i32 %5402 to i64
  %5404 = or i64 %5401, %5403
  br label %5405

5405:                                             ; preds = %5394, %5399
  %5406 = phi i32 [ %5396, %5394 ], [ %5303, %5399 ]
  %5407 = phi i64 [ %5398, %5394 ], [ %5404, %5399 ]
  %5408 = phi i8* [ %5395, %5394 ], [ %5281, %5399 ]
  %5409 = and i32 %5282, 255
  br label %5410

5410:                                             ; preds = %5405, %5289
  %5411 = phi i32 [ %5279, %5289 ], [ %5406, %5405 ]
  %5412 = phi i64 [ %5280, %5289 ], [ %5407, %5405 ]
  %5413 = phi i8* [ %5281, %5289 ], [ %5408, %5405 ]
  %5414 = phi i32 [ %5282, %5289 ], [ %5409, %5405 ]
  %5415 = add nuw nsw i32 %5414, %5296
  %5416 = zext i8 %5295 to i64
  %5417 = shl nsw i64 -1, %5416
  %5418 = trunc i64 %5417 to i32
  %5419 = xor i32 %5418, -1
  %5420 = and i32 %5291, %5419
  %5421 = sext i32 %5415 to i64
  %5422 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %5421
  %5423 = load i32, i32* %5422, align 4
  %5424 = shl i32 %5423, %5296
  %5425 = or i32 %5424, %5420
  %5426 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %5421
  %5427 = load i8, i8* %5426, align 1
  %5428 = sext i8 %5427 to i32
  %5429 = add nsw i32 %5428, %5296
  %5430 = sub nsw i32 %5411, %5429
  %5431 = icmp slt i32 %5430, 0
  br i1 %5431, label %5432, label %5524

5432:                                             ; preds = %5410
  %5433 = zext i32 %5411 to i64
  %5434 = shl i64 %5412, %5433
  %5435 = sub nsw i32 0, %5430
  %5436 = ashr i32 %5425, %5435
  %5437 = sext i32 %5436 to i64
  %5438 = or i64 %5434, %5437
  %5439 = and i64 %5438, -9187201950435737472
  %5440 = sub i64 -72340172838076674, %5438
  %5441 = and i64 %5439, %5440
  %5442 = icmp eq i64 %5441, 0
  %5443 = lshr i64 %5438, 56
  %5444 = trunc i64 %5443 to i8
  store i8 %5444, i8* %5413, align 1
  br i1 %5442, label %5498, label %5445

5445:                                             ; preds = %5432
  %5446 = getelementptr inbounds i8, i8* %5413, i64 1
  store i8 0, i8* %5446, align 1
  %5447 = icmp eq i64 %5443, 255
  %5448 = select i1 %5447, i64 2, i64 1
  %5449 = getelementptr inbounds i8, i8* %5413, i64 %5448
  %5450 = lshr i64 %5438, 48
  %5451 = trunc i64 %5450 to i8
  store i8 %5451, i8* %5449, align 1
  %5452 = getelementptr inbounds i8, i8* %5449, i64 1
  store i8 0, i8* %5452, align 1
  %5453 = and i64 %5438, 71776119061217280
  %5454 = icmp eq i64 %5453, 71776119061217280
  %5455 = select i1 %5454, i64 2, i64 1
  %5456 = getelementptr inbounds i8, i8* %5449, i64 %5455
  %5457 = lshr i64 %5438, 40
  %5458 = trunc i64 %5457 to i8
  store i8 %5458, i8* %5456, align 1
  %5459 = getelementptr inbounds i8, i8* %5456, i64 1
  store i8 0, i8* %5459, align 1
  %5460 = and i64 %5438, 280375465082880
  %5461 = icmp eq i64 %5460, 280375465082880
  %5462 = select i1 %5461, i64 2, i64 1
  %5463 = getelementptr inbounds i8, i8* %5456, i64 %5462
  %5464 = lshr i64 %5438, 32
  %5465 = trunc i64 %5464 to i8
  store i8 %5465, i8* %5463, align 1
  %5466 = getelementptr inbounds i8, i8* %5463, i64 1
  store i8 0, i8* %5466, align 1
  %5467 = and i64 %5438, 1095216660480
  %5468 = icmp eq i64 %5467, 1095216660480
  %5469 = select i1 %5468, i64 2, i64 1
  %5470 = getelementptr inbounds i8, i8* %5463, i64 %5469
  %5471 = lshr i64 %5438, 24
  %5472 = trunc i64 %5471 to i8
  store i8 %5472, i8* %5470, align 1
  %5473 = getelementptr inbounds i8, i8* %5470, i64 1
  store i8 0, i8* %5473, align 1
  %5474 = and i64 %5438, 4278190080
  %5475 = icmp eq i64 %5474, 4278190080
  %5476 = select i1 %5475, i64 2, i64 1
  %5477 = getelementptr inbounds i8, i8* %5470, i64 %5476
  %5478 = lshr i64 %5438, 16
  %5479 = trunc i64 %5478 to i8
  store i8 %5479, i8* %5477, align 1
  %5480 = getelementptr inbounds i8, i8* %5477, i64 1
  store i8 0, i8* %5480, align 1
  %5481 = and i64 %5438, 16711680
  %5482 = icmp eq i64 %5481, 16711680
  %5483 = select i1 %5482, i64 2, i64 1
  %5484 = getelementptr inbounds i8, i8* %5477, i64 %5483
  %5485 = lshr i64 %5438, 8
  %5486 = trunc i64 %5485 to i8
  store i8 %5486, i8* %5484, align 1
  %5487 = getelementptr inbounds i8, i8* %5484, i64 1
  store i8 0, i8* %5487, align 1
  %5488 = and i64 %5438, 65280
  %5489 = icmp eq i64 %5488, 65280
  %5490 = select i1 %5489, i64 2, i64 1
  %5491 = getelementptr inbounds i8, i8* %5484, i64 %5490
  %5492 = trunc i64 %5438 to i8
  store i8 %5492, i8* %5491, align 1
  %5493 = getelementptr inbounds i8, i8* %5491, i64 1
  store i8 0, i8* %5493, align 1
  %5494 = and i64 %5438, 255
  %5495 = icmp eq i64 %5494, 255
  %5496 = select i1 %5495, i64 2, i64 1
  %5497 = getelementptr inbounds i8, i8* %5491, i64 %5496
  br label %5520

5498:                                             ; preds = %5432
  %5499 = lshr i64 %5438, 48
  %5500 = trunc i64 %5499 to i8
  %5501 = getelementptr inbounds i8, i8* %5413, i64 1
  store i8 %5500, i8* %5501, align 1
  %5502 = lshr i64 %5438, 40
  %5503 = trunc i64 %5502 to i8
  %5504 = getelementptr inbounds i8, i8* %5413, i64 2
  store i8 %5503, i8* %5504, align 1
  %5505 = lshr i64 %5438, 32
  %5506 = trunc i64 %5505 to i8
  %5507 = getelementptr inbounds i8, i8* %5413, i64 3
  store i8 %5506, i8* %5507, align 1
  %5508 = lshr i64 %5438, 24
  %5509 = trunc i64 %5508 to i8
  %5510 = getelementptr inbounds i8, i8* %5413, i64 4
  store i8 %5509, i8* %5510, align 1
  %5511 = lshr i64 %5438, 16
  %5512 = trunc i64 %5511 to i8
  %5513 = getelementptr inbounds i8, i8* %5413, i64 5
  store i8 %5512, i8* %5513, align 1
  %5514 = lshr i64 %5438, 8
  %5515 = trunc i64 %5514 to i8
  %5516 = getelementptr inbounds i8, i8* %5413, i64 6
  store i8 %5515, i8* %5516, align 1
  %5517 = trunc i64 %5438 to i8
  %5518 = getelementptr inbounds i8, i8* %5413, i64 7
  store i8 %5517, i8* %5518, align 1
  %5519 = getelementptr inbounds i8, i8* %5413, i64 8
  br label %5520

5520:                                             ; preds = %5498, %5445
  %5521 = phi i8* [ %5497, %5445 ], [ %5519, %5498 ]
  %5522 = add nsw i32 %5430, 64
  %5523 = sext i32 %5425 to i64
  br label %5529

5524:                                             ; preds = %5410
  %5525 = zext i32 %5429 to i64
  %5526 = shl i64 %5412, %5525
  %5527 = sext i32 %5425 to i64
  %5528 = or i64 %5526, %5527
  br label %5529

5529:                                             ; preds = %5520, %5524, %5287
  %5530 = phi i32 [ %5279, %5287 ], [ %5522, %5520 ], [ %5430, %5524 ]
  %5531 = phi i64 [ %5280, %5287 ], [ %5523, %5520 ], [ %5528, %5524 ]
  %5532 = phi i8* [ %5281, %5287 ], [ %5521, %5520 ], [ %5413, %5524 ]
  %5533 = phi i32 [ %5288, %5287 ], [ 0, %5520 ], [ 0, %5524 ]
  %5534 = getelementptr inbounds i16, i16* %1, i64 21
  %5535 = load i16, i16* %5534, align 2
  %5536 = sext i16 %5535 to i32
  %5537 = icmp eq i16 %5535, 0
  br i1 %5537, label %5538, label %5540

5538:                                             ; preds = %5529
  %5539 = add nuw nsw i32 %5533, 16
  br label %5780

5540:                                             ; preds = %5529
  %5541 = ashr i32 %5536, 31
  %5542 = add nsw i32 %5541, %5536
  %5543 = xor i32 %5542, %5541
  %5544 = sext i32 %5543 to i64
  %5545 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %5544
  %5546 = load i8, i8* %5545, align 1
  %5547 = zext i8 %5546 to i32
  %5548 = icmp sgt i32 %5533, 255
  br i1 %5548, label %5549, label %5661

5549:                                             ; preds = %5540
  %5550 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %5551 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %5552 = load i8, i8* %5550, align 4
  %5553 = sext i8 %5552 to i32
  %5554 = sub nsw i32 %5530, %5553
  %5555 = icmp slt i32 %5554, 0
  br i1 %5555, label %5556, label %5650

5556:                                             ; preds = %5549
  %5557 = zext i32 %5530 to i64
  %5558 = shl i64 %5531, %5557
  %5559 = load i32, i32* %5551, align 4
  %5560 = sub nsw i32 0, %5554
  %5561 = lshr i32 %5559, %5560
  %5562 = zext i32 %5561 to i64
  %5563 = or i64 %5558, %5562
  %5564 = and i64 %5563, -9187201950435737472
  %5565 = sub i64 -72340172838076674, %5563
  %5566 = and i64 %5564, %5565
  %5567 = icmp eq i64 %5566, 0
  %5568 = lshr i64 %5558, 56
  %5569 = trunc i64 %5568 to i8
  store i8 %5569, i8* %5532, align 1
  br i1 %5567, label %5623, label %5570

5570:                                             ; preds = %5556
  %5571 = getelementptr inbounds i8, i8* %5532, i64 1
  store i8 0, i8* %5571, align 1
  %5572 = icmp eq i64 %5568, 255
  %5573 = select i1 %5572, i64 2, i64 1
  %5574 = getelementptr inbounds i8, i8* %5532, i64 %5573
  %5575 = lshr i64 %5558, 48
  %5576 = trunc i64 %5575 to i8
  store i8 %5576, i8* %5574, align 1
  %5577 = getelementptr inbounds i8, i8* %5574, i64 1
  store i8 0, i8* %5577, align 1
  %5578 = and i64 %5558, 71776119061217280
  %5579 = icmp eq i64 %5578, 71776119061217280
  %5580 = select i1 %5579, i64 2, i64 1
  %5581 = getelementptr inbounds i8, i8* %5574, i64 %5580
  %5582 = lshr i64 %5558, 40
  %5583 = trunc i64 %5582 to i8
  store i8 %5583, i8* %5581, align 1
  %5584 = getelementptr inbounds i8, i8* %5581, i64 1
  store i8 0, i8* %5584, align 1
  %5585 = and i64 %5558, 280375465082880
  %5586 = icmp eq i64 %5585, 280375465082880
  %5587 = select i1 %5586, i64 2, i64 1
  %5588 = getelementptr inbounds i8, i8* %5581, i64 %5587
  %5589 = lshr i64 %5558, 32
  %5590 = trunc i64 %5589 to i8
  store i8 %5590, i8* %5588, align 1
  %5591 = getelementptr inbounds i8, i8* %5588, i64 1
  store i8 0, i8* %5591, align 1
  %5592 = and i64 %5558, 1095216660480
  %5593 = icmp eq i64 %5592, 1095216660480
  %5594 = select i1 %5593, i64 2, i64 1
  %5595 = getelementptr inbounds i8, i8* %5588, i64 %5594
  %5596 = lshr i64 %5563, 24
  %5597 = trunc i64 %5596 to i8
  store i8 %5597, i8* %5595, align 1
  %5598 = getelementptr inbounds i8, i8* %5595, i64 1
  store i8 0, i8* %5598, align 1
  %5599 = and i64 %5563, 4278190080
  %5600 = icmp eq i64 %5599, 4278190080
  %5601 = select i1 %5600, i64 2, i64 1
  %5602 = getelementptr inbounds i8, i8* %5595, i64 %5601
  %5603 = lshr i64 %5563, 16
  %5604 = trunc i64 %5603 to i8
  store i8 %5604, i8* %5602, align 1
  %5605 = getelementptr inbounds i8, i8* %5602, i64 1
  store i8 0, i8* %5605, align 1
  %5606 = and i64 %5563, 16711680
  %5607 = icmp eq i64 %5606, 16711680
  %5608 = select i1 %5607, i64 2, i64 1
  %5609 = getelementptr inbounds i8, i8* %5602, i64 %5608
  %5610 = lshr i64 %5563, 8
  %5611 = trunc i64 %5610 to i8
  store i8 %5611, i8* %5609, align 1
  %5612 = getelementptr inbounds i8, i8* %5609, i64 1
  store i8 0, i8* %5612, align 1
  %5613 = and i64 %5563, 65280
  %5614 = icmp eq i64 %5613, 65280
  %5615 = select i1 %5614, i64 2, i64 1
  %5616 = getelementptr inbounds i8, i8* %5609, i64 %5615
  %5617 = trunc i64 %5563 to i8
  store i8 %5617, i8* %5616, align 1
  %5618 = getelementptr inbounds i8, i8* %5616, i64 1
  store i8 0, i8* %5618, align 1
  %5619 = and i64 %5563, 255
  %5620 = icmp eq i64 %5619, 255
  %5621 = select i1 %5620, i64 2, i64 1
  %5622 = getelementptr inbounds i8, i8* %5616, i64 %5621
  br label %5645

5623:                                             ; preds = %5556
  %5624 = lshr i64 %5558, 48
  %5625 = trunc i64 %5624 to i8
  %5626 = getelementptr inbounds i8, i8* %5532, i64 1
  store i8 %5625, i8* %5626, align 1
  %5627 = lshr i64 %5558, 40
  %5628 = trunc i64 %5627 to i8
  %5629 = getelementptr inbounds i8, i8* %5532, i64 2
  store i8 %5628, i8* %5629, align 1
  %5630 = lshr i64 %5558, 32
  %5631 = trunc i64 %5630 to i8
  %5632 = getelementptr inbounds i8, i8* %5532, i64 3
  store i8 %5631, i8* %5632, align 1
  %5633 = lshr i64 %5563, 24
  %5634 = trunc i64 %5633 to i8
  %5635 = getelementptr inbounds i8, i8* %5532, i64 4
  store i8 %5634, i8* %5635, align 1
  %5636 = lshr i64 %5563, 16
  %5637 = trunc i64 %5636 to i8
  %5638 = getelementptr inbounds i8, i8* %5532, i64 5
  store i8 %5637, i8* %5638, align 1
  %5639 = lshr i64 %5563, 8
  %5640 = trunc i64 %5639 to i8
  %5641 = getelementptr inbounds i8, i8* %5532, i64 6
  store i8 %5640, i8* %5641, align 1
  %5642 = trunc i64 %5563 to i8
  %5643 = getelementptr inbounds i8, i8* %5532, i64 7
  store i8 %5642, i8* %5643, align 1
  %5644 = getelementptr inbounds i8, i8* %5532, i64 8
  br label %5645

5645:                                             ; preds = %5623, %5570
  %5646 = phi i8* [ %5622, %5570 ], [ %5644, %5623 ]
  %5647 = add nsw i32 %5554, 64
  %5648 = load i32, i32* %5551, align 4
  %5649 = zext i32 %5648 to i64
  br label %5656

5650:                                             ; preds = %5549
  %5651 = zext i32 %5553 to i64
  %5652 = shl i64 %5531, %5651
  %5653 = load i32, i32* %5551, align 4
  %5654 = zext i32 %5653 to i64
  %5655 = or i64 %5652, %5654
  br label %5656

5656:                                             ; preds = %5645, %5650
  %5657 = phi i32 [ %5647, %5645 ], [ %5554, %5650 ]
  %5658 = phi i64 [ %5649, %5645 ], [ %5655, %5650 ]
  %5659 = phi i8* [ %5646, %5645 ], [ %5532, %5650 ]
  %5660 = and i32 %5533, 255
  br label %5661

5661:                                             ; preds = %5656, %5540
  %5662 = phi i32 [ %5530, %5540 ], [ %5657, %5656 ]
  %5663 = phi i64 [ %5531, %5540 ], [ %5658, %5656 ]
  %5664 = phi i8* [ %5532, %5540 ], [ %5659, %5656 ]
  %5665 = phi i32 [ %5533, %5540 ], [ %5660, %5656 ]
  %5666 = add nuw nsw i32 %5665, %5547
  %5667 = zext i8 %5546 to i64
  %5668 = shl nsw i64 -1, %5667
  %5669 = trunc i64 %5668 to i32
  %5670 = xor i32 %5669, -1
  %5671 = and i32 %5542, %5670
  %5672 = sext i32 %5666 to i64
  %5673 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %5672
  %5674 = load i32, i32* %5673, align 4
  %5675 = shl i32 %5674, %5547
  %5676 = or i32 %5675, %5671
  %5677 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %5672
  %5678 = load i8, i8* %5677, align 1
  %5679 = sext i8 %5678 to i32
  %5680 = add nsw i32 %5679, %5547
  %5681 = sub nsw i32 %5662, %5680
  %5682 = icmp slt i32 %5681, 0
  br i1 %5682, label %5683, label %5775

5683:                                             ; preds = %5661
  %5684 = zext i32 %5662 to i64
  %5685 = shl i64 %5663, %5684
  %5686 = sub nsw i32 0, %5681
  %5687 = ashr i32 %5676, %5686
  %5688 = sext i32 %5687 to i64
  %5689 = or i64 %5685, %5688
  %5690 = and i64 %5689, -9187201950435737472
  %5691 = sub i64 -72340172838076674, %5689
  %5692 = and i64 %5690, %5691
  %5693 = icmp eq i64 %5692, 0
  %5694 = lshr i64 %5689, 56
  %5695 = trunc i64 %5694 to i8
  store i8 %5695, i8* %5664, align 1
  br i1 %5693, label %5749, label %5696

5696:                                             ; preds = %5683
  %5697 = getelementptr inbounds i8, i8* %5664, i64 1
  store i8 0, i8* %5697, align 1
  %5698 = icmp eq i64 %5694, 255
  %5699 = select i1 %5698, i64 2, i64 1
  %5700 = getelementptr inbounds i8, i8* %5664, i64 %5699
  %5701 = lshr i64 %5689, 48
  %5702 = trunc i64 %5701 to i8
  store i8 %5702, i8* %5700, align 1
  %5703 = getelementptr inbounds i8, i8* %5700, i64 1
  store i8 0, i8* %5703, align 1
  %5704 = and i64 %5689, 71776119061217280
  %5705 = icmp eq i64 %5704, 71776119061217280
  %5706 = select i1 %5705, i64 2, i64 1
  %5707 = getelementptr inbounds i8, i8* %5700, i64 %5706
  %5708 = lshr i64 %5689, 40
  %5709 = trunc i64 %5708 to i8
  store i8 %5709, i8* %5707, align 1
  %5710 = getelementptr inbounds i8, i8* %5707, i64 1
  store i8 0, i8* %5710, align 1
  %5711 = and i64 %5689, 280375465082880
  %5712 = icmp eq i64 %5711, 280375465082880
  %5713 = select i1 %5712, i64 2, i64 1
  %5714 = getelementptr inbounds i8, i8* %5707, i64 %5713
  %5715 = lshr i64 %5689, 32
  %5716 = trunc i64 %5715 to i8
  store i8 %5716, i8* %5714, align 1
  %5717 = getelementptr inbounds i8, i8* %5714, i64 1
  store i8 0, i8* %5717, align 1
  %5718 = and i64 %5689, 1095216660480
  %5719 = icmp eq i64 %5718, 1095216660480
  %5720 = select i1 %5719, i64 2, i64 1
  %5721 = getelementptr inbounds i8, i8* %5714, i64 %5720
  %5722 = lshr i64 %5689, 24
  %5723 = trunc i64 %5722 to i8
  store i8 %5723, i8* %5721, align 1
  %5724 = getelementptr inbounds i8, i8* %5721, i64 1
  store i8 0, i8* %5724, align 1
  %5725 = and i64 %5689, 4278190080
  %5726 = icmp eq i64 %5725, 4278190080
  %5727 = select i1 %5726, i64 2, i64 1
  %5728 = getelementptr inbounds i8, i8* %5721, i64 %5727
  %5729 = lshr i64 %5689, 16
  %5730 = trunc i64 %5729 to i8
  store i8 %5730, i8* %5728, align 1
  %5731 = getelementptr inbounds i8, i8* %5728, i64 1
  store i8 0, i8* %5731, align 1
  %5732 = and i64 %5689, 16711680
  %5733 = icmp eq i64 %5732, 16711680
  %5734 = select i1 %5733, i64 2, i64 1
  %5735 = getelementptr inbounds i8, i8* %5728, i64 %5734
  %5736 = lshr i64 %5689, 8
  %5737 = trunc i64 %5736 to i8
  store i8 %5737, i8* %5735, align 1
  %5738 = getelementptr inbounds i8, i8* %5735, i64 1
  store i8 0, i8* %5738, align 1
  %5739 = and i64 %5689, 65280
  %5740 = icmp eq i64 %5739, 65280
  %5741 = select i1 %5740, i64 2, i64 1
  %5742 = getelementptr inbounds i8, i8* %5735, i64 %5741
  %5743 = trunc i64 %5689 to i8
  store i8 %5743, i8* %5742, align 1
  %5744 = getelementptr inbounds i8, i8* %5742, i64 1
  store i8 0, i8* %5744, align 1
  %5745 = and i64 %5689, 255
  %5746 = icmp eq i64 %5745, 255
  %5747 = select i1 %5746, i64 2, i64 1
  %5748 = getelementptr inbounds i8, i8* %5742, i64 %5747
  br label %5771

5749:                                             ; preds = %5683
  %5750 = lshr i64 %5689, 48
  %5751 = trunc i64 %5750 to i8
  %5752 = getelementptr inbounds i8, i8* %5664, i64 1
  store i8 %5751, i8* %5752, align 1
  %5753 = lshr i64 %5689, 40
  %5754 = trunc i64 %5753 to i8
  %5755 = getelementptr inbounds i8, i8* %5664, i64 2
  store i8 %5754, i8* %5755, align 1
  %5756 = lshr i64 %5689, 32
  %5757 = trunc i64 %5756 to i8
  %5758 = getelementptr inbounds i8, i8* %5664, i64 3
  store i8 %5757, i8* %5758, align 1
  %5759 = lshr i64 %5689, 24
  %5760 = trunc i64 %5759 to i8
  %5761 = getelementptr inbounds i8, i8* %5664, i64 4
  store i8 %5760, i8* %5761, align 1
  %5762 = lshr i64 %5689, 16
  %5763 = trunc i64 %5762 to i8
  %5764 = getelementptr inbounds i8, i8* %5664, i64 5
  store i8 %5763, i8* %5764, align 1
  %5765 = lshr i64 %5689, 8
  %5766 = trunc i64 %5765 to i8
  %5767 = getelementptr inbounds i8, i8* %5664, i64 6
  store i8 %5766, i8* %5767, align 1
  %5768 = trunc i64 %5689 to i8
  %5769 = getelementptr inbounds i8, i8* %5664, i64 7
  store i8 %5768, i8* %5769, align 1
  %5770 = getelementptr inbounds i8, i8* %5664, i64 8
  br label %5771

5771:                                             ; preds = %5749, %5696
  %5772 = phi i8* [ %5748, %5696 ], [ %5770, %5749 ]
  %5773 = add nsw i32 %5681, 64
  %5774 = sext i32 %5676 to i64
  br label %5780

5775:                                             ; preds = %5661
  %5776 = zext i32 %5680 to i64
  %5777 = shl i64 %5663, %5776
  %5778 = sext i32 %5676 to i64
  %5779 = or i64 %5777, %5778
  br label %5780

5780:                                             ; preds = %5771, %5775, %5538
  %5781 = phi i32 [ %5530, %5538 ], [ %5773, %5771 ], [ %5681, %5775 ]
  %5782 = phi i64 [ %5531, %5538 ], [ %5774, %5771 ], [ %5779, %5775 ]
  %5783 = phi i8* [ %5532, %5538 ], [ %5772, %5771 ], [ %5664, %5775 ]
  %5784 = phi i32 [ %5539, %5538 ], [ 0, %5771 ], [ 0, %5775 ]
  %5785 = getelementptr inbounds i16, i16* %1, i64 28
  %5786 = load i16, i16* %5785, align 2
  %5787 = sext i16 %5786 to i32
  %5788 = icmp eq i16 %5786, 0
  br i1 %5788, label %5789, label %5791

5789:                                             ; preds = %5780
  %5790 = add nuw nsw i32 %5784, 16
  br label %6031

5791:                                             ; preds = %5780
  %5792 = ashr i32 %5787, 31
  %5793 = add nsw i32 %5792, %5787
  %5794 = xor i32 %5793, %5792
  %5795 = sext i32 %5794 to i64
  %5796 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %5795
  %5797 = load i8, i8* %5796, align 1
  %5798 = zext i8 %5797 to i32
  %5799 = icmp sgt i32 %5784, 255
  br i1 %5799, label %5800, label %5912

5800:                                             ; preds = %5791
  %5801 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %5802 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %5803 = load i8, i8* %5801, align 4
  %5804 = sext i8 %5803 to i32
  %5805 = sub nsw i32 %5781, %5804
  %5806 = icmp slt i32 %5805, 0
  br i1 %5806, label %5807, label %5901

5807:                                             ; preds = %5800
  %5808 = zext i32 %5781 to i64
  %5809 = shl i64 %5782, %5808
  %5810 = load i32, i32* %5802, align 4
  %5811 = sub nsw i32 0, %5805
  %5812 = lshr i32 %5810, %5811
  %5813 = zext i32 %5812 to i64
  %5814 = or i64 %5809, %5813
  %5815 = and i64 %5814, -9187201950435737472
  %5816 = sub i64 -72340172838076674, %5814
  %5817 = and i64 %5815, %5816
  %5818 = icmp eq i64 %5817, 0
  %5819 = lshr i64 %5809, 56
  %5820 = trunc i64 %5819 to i8
  store i8 %5820, i8* %5783, align 1
  br i1 %5818, label %5874, label %5821

5821:                                             ; preds = %5807
  %5822 = getelementptr inbounds i8, i8* %5783, i64 1
  store i8 0, i8* %5822, align 1
  %5823 = icmp eq i64 %5819, 255
  %5824 = select i1 %5823, i64 2, i64 1
  %5825 = getelementptr inbounds i8, i8* %5783, i64 %5824
  %5826 = lshr i64 %5809, 48
  %5827 = trunc i64 %5826 to i8
  store i8 %5827, i8* %5825, align 1
  %5828 = getelementptr inbounds i8, i8* %5825, i64 1
  store i8 0, i8* %5828, align 1
  %5829 = and i64 %5809, 71776119061217280
  %5830 = icmp eq i64 %5829, 71776119061217280
  %5831 = select i1 %5830, i64 2, i64 1
  %5832 = getelementptr inbounds i8, i8* %5825, i64 %5831
  %5833 = lshr i64 %5809, 40
  %5834 = trunc i64 %5833 to i8
  store i8 %5834, i8* %5832, align 1
  %5835 = getelementptr inbounds i8, i8* %5832, i64 1
  store i8 0, i8* %5835, align 1
  %5836 = and i64 %5809, 280375465082880
  %5837 = icmp eq i64 %5836, 280375465082880
  %5838 = select i1 %5837, i64 2, i64 1
  %5839 = getelementptr inbounds i8, i8* %5832, i64 %5838
  %5840 = lshr i64 %5809, 32
  %5841 = trunc i64 %5840 to i8
  store i8 %5841, i8* %5839, align 1
  %5842 = getelementptr inbounds i8, i8* %5839, i64 1
  store i8 0, i8* %5842, align 1
  %5843 = and i64 %5809, 1095216660480
  %5844 = icmp eq i64 %5843, 1095216660480
  %5845 = select i1 %5844, i64 2, i64 1
  %5846 = getelementptr inbounds i8, i8* %5839, i64 %5845
  %5847 = lshr i64 %5814, 24
  %5848 = trunc i64 %5847 to i8
  store i8 %5848, i8* %5846, align 1
  %5849 = getelementptr inbounds i8, i8* %5846, i64 1
  store i8 0, i8* %5849, align 1
  %5850 = and i64 %5814, 4278190080
  %5851 = icmp eq i64 %5850, 4278190080
  %5852 = select i1 %5851, i64 2, i64 1
  %5853 = getelementptr inbounds i8, i8* %5846, i64 %5852
  %5854 = lshr i64 %5814, 16
  %5855 = trunc i64 %5854 to i8
  store i8 %5855, i8* %5853, align 1
  %5856 = getelementptr inbounds i8, i8* %5853, i64 1
  store i8 0, i8* %5856, align 1
  %5857 = and i64 %5814, 16711680
  %5858 = icmp eq i64 %5857, 16711680
  %5859 = select i1 %5858, i64 2, i64 1
  %5860 = getelementptr inbounds i8, i8* %5853, i64 %5859
  %5861 = lshr i64 %5814, 8
  %5862 = trunc i64 %5861 to i8
  store i8 %5862, i8* %5860, align 1
  %5863 = getelementptr inbounds i8, i8* %5860, i64 1
  store i8 0, i8* %5863, align 1
  %5864 = and i64 %5814, 65280
  %5865 = icmp eq i64 %5864, 65280
  %5866 = select i1 %5865, i64 2, i64 1
  %5867 = getelementptr inbounds i8, i8* %5860, i64 %5866
  %5868 = trunc i64 %5814 to i8
  store i8 %5868, i8* %5867, align 1
  %5869 = getelementptr inbounds i8, i8* %5867, i64 1
  store i8 0, i8* %5869, align 1
  %5870 = and i64 %5814, 255
  %5871 = icmp eq i64 %5870, 255
  %5872 = select i1 %5871, i64 2, i64 1
  %5873 = getelementptr inbounds i8, i8* %5867, i64 %5872
  br label %5896

5874:                                             ; preds = %5807
  %5875 = lshr i64 %5809, 48
  %5876 = trunc i64 %5875 to i8
  %5877 = getelementptr inbounds i8, i8* %5783, i64 1
  store i8 %5876, i8* %5877, align 1
  %5878 = lshr i64 %5809, 40
  %5879 = trunc i64 %5878 to i8
  %5880 = getelementptr inbounds i8, i8* %5783, i64 2
  store i8 %5879, i8* %5880, align 1
  %5881 = lshr i64 %5809, 32
  %5882 = trunc i64 %5881 to i8
  %5883 = getelementptr inbounds i8, i8* %5783, i64 3
  store i8 %5882, i8* %5883, align 1
  %5884 = lshr i64 %5814, 24
  %5885 = trunc i64 %5884 to i8
  %5886 = getelementptr inbounds i8, i8* %5783, i64 4
  store i8 %5885, i8* %5886, align 1
  %5887 = lshr i64 %5814, 16
  %5888 = trunc i64 %5887 to i8
  %5889 = getelementptr inbounds i8, i8* %5783, i64 5
  store i8 %5888, i8* %5889, align 1
  %5890 = lshr i64 %5814, 8
  %5891 = trunc i64 %5890 to i8
  %5892 = getelementptr inbounds i8, i8* %5783, i64 6
  store i8 %5891, i8* %5892, align 1
  %5893 = trunc i64 %5814 to i8
  %5894 = getelementptr inbounds i8, i8* %5783, i64 7
  store i8 %5893, i8* %5894, align 1
  %5895 = getelementptr inbounds i8, i8* %5783, i64 8
  br label %5896

5896:                                             ; preds = %5874, %5821
  %5897 = phi i8* [ %5873, %5821 ], [ %5895, %5874 ]
  %5898 = add nsw i32 %5805, 64
  %5899 = load i32, i32* %5802, align 4
  %5900 = zext i32 %5899 to i64
  br label %5907

5901:                                             ; preds = %5800
  %5902 = zext i32 %5804 to i64
  %5903 = shl i64 %5782, %5902
  %5904 = load i32, i32* %5802, align 4
  %5905 = zext i32 %5904 to i64
  %5906 = or i64 %5903, %5905
  br label %5907

5907:                                             ; preds = %5896, %5901
  %5908 = phi i32 [ %5898, %5896 ], [ %5805, %5901 ]
  %5909 = phi i64 [ %5900, %5896 ], [ %5906, %5901 ]
  %5910 = phi i8* [ %5897, %5896 ], [ %5783, %5901 ]
  %5911 = and i32 %5784, 255
  br label %5912

5912:                                             ; preds = %5907, %5791
  %5913 = phi i32 [ %5781, %5791 ], [ %5908, %5907 ]
  %5914 = phi i64 [ %5782, %5791 ], [ %5909, %5907 ]
  %5915 = phi i8* [ %5783, %5791 ], [ %5910, %5907 ]
  %5916 = phi i32 [ %5784, %5791 ], [ %5911, %5907 ]
  %5917 = add nuw nsw i32 %5916, %5798
  %5918 = zext i8 %5797 to i64
  %5919 = shl nsw i64 -1, %5918
  %5920 = trunc i64 %5919 to i32
  %5921 = xor i32 %5920, -1
  %5922 = and i32 %5793, %5921
  %5923 = sext i32 %5917 to i64
  %5924 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %5923
  %5925 = load i32, i32* %5924, align 4
  %5926 = shl i32 %5925, %5798
  %5927 = or i32 %5926, %5922
  %5928 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %5923
  %5929 = load i8, i8* %5928, align 1
  %5930 = sext i8 %5929 to i32
  %5931 = add nsw i32 %5930, %5798
  %5932 = sub nsw i32 %5913, %5931
  %5933 = icmp slt i32 %5932, 0
  br i1 %5933, label %5934, label %6026

5934:                                             ; preds = %5912
  %5935 = zext i32 %5913 to i64
  %5936 = shl i64 %5914, %5935
  %5937 = sub nsw i32 0, %5932
  %5938 = ashr i32 %5927, %5937
  %5939 = sext i32 %5938 to i64
  %5940 = or i64 %5936, %5939
  %5941 = and i64 %5940, -9187201950435737472
  %5942 = sub i64 -72340172838076674, %5940
  %5943 = and i64 %5941, %5942
  %5944 = icmp eq i64 %5943, 0
  %5945 = lshr i64 %5940, 56
  %5946 = trunc i64 %5945 to i8
  store i8 %5946, i8* %5915, align 1
  br i1 %5944, label %6000, label %5947

5947:                                             ; preds = %5934
  %5948 = getelementptr inbounds i8, i8* %5915, i64 1
  store i8 0, i8* %5948, align 1
  %5949 = icmp eq i64 %5945, 255
  %5950 = select i1 %5949, i64 2, i64 1
  %5951 = getelementptr inbounds i8, i8* %5915, i64 %5950
  %5952 = lshr i64 %5940, 48
  %5953 = trunc i64 %5952 to i8
  store i8 %5953, i8* %5951, align 1
  %5954 = getelementptr inbounds i8, i8* %5951, i64 1
  store i8 0, i8* %5954, align 1
  %5955 = and i64 %5940, 71776119061217280
  %5956 = icmp eq i64 %5955, 71776119061217280
  %5957 = select i1 %5956, i64 2, i64 1
  %5958 = getelementptr inbounds i8, i8* %5951, i64 %5957
  %5959 = lshr i64 %5940, 40
  %5960 = trunc i64 %5959 to i8
  store i8 %5960, i8* %5958, align 1
  %5961 = getelementptr inbounds i8, i8* %5958, i64 1
  store i8 0, i8* %5961, align 1
  %5962 = and i64 %5940, 280375465082880
  %5963 = icmp eq i64 %5962, 280375465082880
  %5964 = select i1 %5963, i64 2, i64 1
  %5965 = getelementptr inbounds i8, i8* %5958, i64 %5964
  %5966 = lshr i64 %5940, 32
  %5967 = trunc i64 %5966 to i8
  store i8 %5967, i8* %5965, align 1
  %5968 = getelementptr inbounds i8, i8* %5965, i64 1
  store i8 0, i8* %5968, align 1
  %5969 = and i64 %5940, 1095216660480
  %5970 = icmp eq i64 %5969, 1095216660480
  %5971 = select i1 %5970, i64 2, i64 1
  %5972 = getelementptr inbounds i8, i8* %5965, i64 %5971
  %5973 = lshr i64 %5940, 24
  %5974 = trunc i64 %5973 to i8
  store i8 %5974, i8* %5972, align 1
  %5975 = getelementptr inbounds i8, i8* %5972, i64 1
  store i8 0, i8* %5975, align 1
  %5976 = and i64 %5940, 4278190080
  %5977 = icmp eq i64 %5976, 4278190080
  %5978 = select i1 %5977, i64 2, i64 1
  %5979 = getelementptr inbounds i8, i8* %5972, i64 %5978
  %5980 = lshr i64 %5940, 16
  %5981 = trunc i64 %5980 to i8
  store i8 %5981, i8* %5979, align 1
  %5982 = getelementptr inbounds i8, i8* %5979, i64 1
  store i8 0, i8* %5982, align 1
  %5983 = and i64 %5940, 16711680
  %5984 = icmp eq i64 %5983, 16711680
  %5985 = select i1 %5984, i64 2, i64 1
  %5986 = getelementptr inbounds i8, i8* %5979, i64 %5985
  %5987 = lshr i64 %5940, 8
  %5988 = trunc i64 %5987 to i8
  store i8 %5988, i8* %5986, align 1
  %5989 = getelementptr inbounds i8, i8* %5986, i64 1
  store i8 0, i8* %5989, align 1
  %5990 = and i64 %5940, 65280
  %5991 = icmp eq i64 %5990, 65280
  %5992 = select i1 %5991, i64 2, i64 1
  %5993 = getelementptr inbounds i8, i8* %5986, i64 %5992
  %5994 = trunc i64 %5940 to i8
  store i8 %5994, i8* %5993, align 1
  %5995 = getelementptr inbounds i8, i8* %5993, i64 1
  store i8 0, i8* %5995, align 1
  %5996 = and i64 %5940, 255
  %5997 = icmp eq i64 %5996, 255
  %5998 = select i1 %5997, i64 2, i64 1
  %5999 = getelementptr inbounds i8, i8* %5993, i64 %5998
  br label %6022

6000:                                             ; preds = %5934
  %6001 = lshr i64 %5940, 48
  %6002 = trunc i64 %6001 to i8
  %6003 = getelementptr inbounds i8, i8* %5915, i64 1
  store i8 %6002, i8* %6003, align 1
  %6004 = lshr i64 %5940, 40
  %6005 = trunc i64 %6004 to i8
  %6006 = getelementptr inbounds i8, i8* %5915, i64 2
  store i8 %6005, i8* %6006, align 1
  %6007 = lshr i64 %5940, 32
  %6008 = trunc i64 %6007 to i8
  %6009 = getelementptr inbounds i8, i8* %5915, i64 3
  store i8 %6008, i8* %6009, align 1
  %6010 = lshr i64 %5940, 24
  %6011 = trunc i64 %6010 to i8
  %6012 = getelementptr inbounds i8, i8* %5915, i64 4
  store i8 %6011, i8* %6012, align 1
  %6013 = lshr i64 %5940, 16
  %6014 = trunc i64 %6013 to i8
  %6015 = getelementptr inbounds i8, i8* %5915, i64 5
  store i8 %6014, i8* %6015, align 1
  %6016 = lshr i64 %5940, 8
  %6017 = trunc i64 %6016 to i8
  %6018 = getelementptr inbounds i8, i8* %5915, i64 6
  store i8 %6017, i8* %6018, align 1
  %6019 = trunc i64 %5940 to i8
  %6020 = getelementptr inbounds i8, i8* %5915, i64 7
  store i8 %6019, i8* %6020, align 1
  %6021 = getelementptr inbounds i8, i8* %5915, i64 8
  br label %6022

6022:                                             ; preds = %6000, %5947
  %6023 = phi i8* [ %5999, %5947 ], [ %6021, %6000 ]
  %6024 = add nsw i32 %5932, 64
  %6025 = sext i32 %5927 to i64
  br label %6031

6026:                                             ; preds = %5912
  %6027 = zext i32 %5931 to i64
  %6028 = shl i64 %5914, %6027
  %6029 = sext i32 %5927 to i64
  %6030 = or i64 %6028, %6029
  br label %6031

6031:                                             ; preds = %6022, %6026, %5789
  %6032 = phi i32 [ %5781, %5789 ], [ %6024, %6022 ], [ %5932, %6026 ]
  %6033 = phi i64 [ %5782, %5789 ], [ %6025, %6022 ], [ %6030, %6026 ]
  %6034 = phi i8* [ %5783, %5789 ], [ %6023, %6022 ], [ %5915, %6026 ]
  %6035 = phi i32 [ %5790, %5789 ], [ 0, %6022 ], [ 0, %6026 ]
  %6036 = getelementptr inbounds i16, i16* %1, i64 35
  %6037 = load i16, i16* %6036, align 2
  %6038 = sext i16 %6037 to i32
  %6039 = icmp eq i16 %6037, 0
  br i1 %6039, label %6040, label %6042

6040:                                             ; preds = %6031
  %6041 = add nuw nsw i32 %6035, 16
  br label %6282

6042:                                             ; preds = %6031
  %6043 = ashr i32 %6038, 31
  %6044 = add nsw i32 %6043, %6038
  %6045 = xor i32 %6044, %6043
  %6046 = sext i32 %6045 to i64
  %6047 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %6046
  %6048 = load i8, i8* %6047, align 1
  %6049 = zext i8 %6048 to i32
  %6050 = icmp sgt i32 %6035, 255
  br i1 %6050, label %6051, label %6163

6051:                                             ; preds = %6042
  %6052 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %6053 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  %6054 = load i8, i8* %6052, align 4
  %6055 = sext i8 %6054 to i32
  %6056 = sub nsw i32 %6032, %6055
  %6057 = icmp slt i32 %6056, 0
  br i1 %6057, label %6058, label %6152

6058:                                             ; preds = %6051
  %6059 = zext i32 %6032 to i64
  %6060 = shl i64 %6033, %6059
  %6061 = load i32, i32* %6053, align 4
  %6062 = sub nsw i32 0, %6056
  %6063 = lshr i32 %6061, %6062
  %6064 = zext i32 %6063 to i64
  %6065 = or i64 %6060, %6064
  %6066 = and i64 %6065, -9187201950435737472
  %6067 = sub i64 -72340172838076674, %6065
  %6068 = and i64 %6066, %6067
  %6069 = icmp eq i64 %6068, 0
  %6070 = lshr i64 %6060, 56
  %6071 = trunc i64 %6070 to i8
  store i8 %6071, i8* %6034, align 1
  br i1 %6069, label %6125, label %6072

6072:                                             ; preds = %6058
  %6073 = getelementptr inbounds i8, i8* %6034, i64 1
  store i8 0, i8* %6073, align 1
  %6074 = icmp eq i64 %6070, 255
  %6075 = select i1 %6074, i64 2, i64 1
  %6076 = getelementptr inbounds i8, i8* %6034, i64 %6075
  %6077 = lshr i64 %6060, 48
  %6078 = trunc i64 %6077 to i8
  store i8 %6078, i8* %6076, align 1
  %6079 = getelementptr inbounds i8, i8* %6076, i64 1
  store i8 0, i8* %6079, align 1
  %6080 = and i64 %6060, 71776119061217280
  %6081 = icmp eq i64 %6080, 71776119061217280
  %6082 = select i1 %6081, i64 2, i64 1
  %6083 = getelementptr inbounds i8, i8* %6076, i64 %6082
  %6084 = lshr i64 %6060, 40
  %6085 = trunc i64 %6084 to i8
  store i8 %6085, i8* %6083, align 1
  %6086 = getelementptr inbounds i8, i8* %6083, i64 1
  store i8 0, i8* %6086, align 1
  %6087 = and i64 %6060, 280375465082880
  %6088 = icmp eq i64 %6087, 280375465082880
  %6089 = select i1 %6088, i64 2, i64 1
  %6090 = getelementptr inbounds i8, i8* %6083, i64 %6089
  %6091 = lshr i64 %6060, 32
  %6092 = trunc i64 %6091 to i8
  store i8 %6092, i8* %6090, align 1
  %6093 = getelementptr inbounds i8, i8* %6090, i64 1
  store i8 0, i8* %6093, align 1
  %6094 = and i64 %6060, 1095216660480
  %6095 = icmp eq i64 %6094, 1095216660480
  %6096 = select i1 %6095, i64 2, i64 1
  %6097 = getelementptr inbounds i8, i8* %6090, i64 %6096
  %6098 = lshr i64 %6065, 24
  %6099 = trunc i64 %6098 to i8
  store i8 %6099, i8* %6097, align 1
  %6100 = getelementptr inbounds i8, i8* %6097, i64 1
  store i8 0, i8* %6100, align 1
  %6101 = and i64 %6065, 4278190080
  %6102 = icmp eq i64 %6101, 4278190080
  %6103 = select i1 %6102, i64 2, i64 1
  %6104 = getelementptr inbounds i8, i8* %6097, i64 %6103
  %6105 = lshr i64 %6065, 16
  %6106 = trunc i64 %6105 to i8
  store i8 %6106, i8* %6104, align 1
  %6107 = getelementptr inbounds i8, i8* %6104, i64 1
  store i8 0, i8* %6107, align 1
  %6108 = and i64 %6065, 16711680
  %6109 = icmp eq i64 %6108, 16711680
  %6110 = select i1 %6109, i64 2, i64 1
  %6111 = getelementptr inbounds i8, i8* %6104, i64 %6110
  %6112 = lshr i64 %6065, 8
  %6113 = trunc i64 %6112 to i8
  store i8 %6113, i8* %6111, align 1
  %6114 = getelementptr inbounds i8, i8* %6111, i64 1
  store i8 0, i8* %6114, align 1
  %6115 = and i64 %6065, 65280
  %6116 = icmp eq i64 %6115, 65280
  %6117 = select i1 %6116, i64 2, i64 1
  %6118 = getelementptr inbounds i8, i8* %6111, i64 %6117
  %6119 = trunc i64 %6065 to i8
  store i8 %6119, i8* %6118, align 1
  %6120 = getelementptr inbounds i8, i8* %6118, i64 1
  store i8 0, i8* %6120, align 1
  %6121 = and i64 %6065, 255
  %6122 = icmp eq i64 %6121, 255
  %6123 = select i1 %6122, i64 2, i64 1
  %6124 = getelementptr inbounds i8, i8* %6118, i64 %6123
  br label %6147

6125:                                             ; preds = %6058
  %6126 = lshr i64 %6060, 48
  %6127 = trunc i64 %6126 to i8
  %6128 = getelementptr inbounds i8, i8* %6034, i64 1
  store i8 %6127, i8* %6128, align 1
  %6129 = lshr i64 %6060, 40
  %6130 = trunc i64 %6129 to i8
  %6131 = getelementptr inbounds i8, i8* %6034, i64 2
  store i8 %6130, i8* %6131, align 1
  %6132 = lshr i64 %6060, 32
  %6133 = trunc i64 %6132 to i8
  %6134 = getelementptr inbounds i8, i8* %6034, i64 3
  store i8 %6133, i8* %6134, align 1
  %6135 = lshr i64 %6065, 24
  %6136 = trunc i64 %6135 to i8
  %6137 = getelementptr inbounds i8, i8* %6034, i64 4
  store i8 %6136, i8* %6137, align 1
  %6138 = lshr i64 %6065, 16
  %6139 = trunc i64 %6138 to i8
  %6140 = getelementptr inbounds i8, i8* %6034, i64 5
  store i8 %6139, i8* %6140, align 1
  %6141 = lshr i64 %6065, 8
  %6142 = trunc i64 %6141 to i8
  %6143 = getelementptr inbounds i8, i8* %6034, i64 6
  store i8 %6142, i8* %6143, align 1
  %6144 = trunc i64 %6065 to i8
  %6145 = getelementptr inbounds i8, i8* %6034, i64 7
  store i8 %6144, i8* %6145, align 1
  %6146 = getelementptr inbounds i8, i8* %6034, i64 8
  br label %6147

6147:                                             ; preds = %6125, %6072
  %6148 = phi i8* [ %6124, %6072 ], [ %6146, %6125 ]
  %6149 = add nsw i32 %6056, 64
  %6150 = load i32, i32* %6053, align 4
  %6151 = zext i32 %6150 to i64
  br label %6158

6152:                                             ; preds = %6051
  %6153 = zext i32 %6055 to i64
  %6154 = shl i64 %6033, %6153
  %6155 = load i32, i32* %6053, align 4
  %6156 = zext i32 %6155 to i64
  %6157 = or i64 %6154, %6156
  br label %6158

6158:                                             ; preds = %6147, %6152
  %6159 = phi i32 [ %6149, %6147 ], [ %6056, %6152 ]
  %6160 = phi i64 [ %6151, %6147 ], [ %6157, %6152 ]
  %6161 = phi i8* [ %6148, %6147 ], [ %6034, %6152 ]
  %6162 = and i32 %6035, 255
  br label %6163

6163:                                             ; preds = %6158, %6042
  %6164 = phi i32 [ %6032, %6042 ], [ %6159, %6158 ]
  %6165 = phi i64 [ %6033, %6042 ], [ %6160, %6158 ]
  %6166 = phi i8* [ %6034, %6042 ], [ %6161, %6158 ]
  %6167 = phi i32 [ %6035, %6042 ], [ %6162, %6158 ]
  %6168 = add nuw nsw i32 %6167, %6049
  %6169 = zext i8 %6048 to i64
  %6170 = shl nsw i64 -1, %6169
  %6171 = trunc i64 %6170 to i32
  %6172 = xor i32 %6171, -1
  %6173 = and i32 %6044, %6172
  %6174 = sext i32 %6168 to i64
  %6175 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %6174
  %6176 = load i32, i32* %6175, align 4
  %6177 = shl i32 %6176, %6049
  %6178 = or i32 %6177, %6173
  %6179 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %6174
  %6180 = load i8, i8* %6179, align 1
  %6181 = sext i8 %6180 to i32
  %6182 = add nsw i32 %6181, %6049
  %6183 = sub nsw i32 %6164, %6182
  %6184 = icmp slt i32 %6183, 0
  br i1 %6184, label %6185, label %6277

6185:                                             ; preds = %6163
  %6186 = zext i32 %6164 to i64
  %6187 = shl i64 %6165, %6186
  %6188 = sub nsw i32 0, %6183
  %6189 = ashr i32 %6178, %6188
  %6190 = sext i32 %6189 to i64
  %6191 = or i64 %6187, %6190
  %6192 = and i64 %6191, -9187201950435737472
  %6193 = sub i64 -72340172838076674, %6191
  %6194 = and i64 %6192, %6193
  %6195 = icmp eq i64 %6194, 0
  %6196 = lshr i64 %6191, 56
  %6197 = trunc i64 %6196 to i8
  store i8 %6197, i8* %6166, align 1
  br i1 %6195, label %6251, label %6198

6198:                                             ; preds = %6185
  %6199 = getelementptr inbounds i8, i8* %6166, i64 1
  store i8 0, i8* %6199, align 1
  %6200 = icmp eq i64 %6196, 255
  %6201 = select i1 %6200, i64 2, i64 1
  %6202 = getelementptr inbounds i8, i8* %6166, i64 %6201
  %6203 = lshr i64 %6191, 48
  %6204 = trunc i64 %6203 to i8
  store i8 %6204, i8* %6202, align 1
  %6205 = getelementptr inbounds i8, i8* %6202, i64 1
  store i8 0, i8* %6205, align 1
  %6206 = and i64 %6191, 71776119061217280
  %6207 = icmp eq i64 %6206, 71776119061217280
  %6208 = select i1 %6207, i64 2, i64 1
  %6209 = getelementptr inbounds i8, i8* %6202, i64 %6208
  %6210 = lshr i64 %6191, 40
  %6211 = trunc i64 %6210 to i8
  store i8 %6211, i8* %6209, align 1
  %6212 = getelementptr inbounds i8, i8* %6209, i64 1
  store i8 0, i8* %6212, align 1
  %6213 = and i64 %6191, 280375465082880
  %6214 = icmp eq i64 %6213, 280375465082880
  %6215 = select i1 %6214, i64 2, i64 1
  %6216 = getelementptr inbounds i8, i8* %6209, i64 %6215
  %6217 = lshr i64 %6191, 32
  %6218 = trunc i64 %6217 to i8
  store i8 %6218, i8* %6216, align 1
  %6219 = getelementptr inbounds i8, i8* %6216, i64 1
  store i8 0, i8* %6219, align 1
  %6220 = and i64 %6191, 1095216660480
  %6221 = icmp eq i64 %6220, 1095216660480
  %6222 = select i1 %6221, i64 2, i64 1
  %6223 = getelementptr inbounds i8, i8* %6216, i64 %6222
  %6224 = lshr i64 %6191, 24
  %6225 = trunc i64 %6224 to i8
  store i8 %6225, i8* %6223, align 1
  %6226 = getelementptr inbounds i8, i8* %6223, i64 1
  store i8 0, i8* %6226, align 1
  %6227 = and i64 %6191, 4278190080
  %6228 = icmp eq i64 %6227, 4278190080
  %6229 = select i1 %6228, i64 2, i64 1
  %6230 = getelementptr inbounds i8, i8* %6223, i64 %6229
  %6231 = lshr i64 %6191, 16
  %6232 = trunc i64 %6231 to i8
  store i8 %6232, i8* %6230, align 1
  %6233 = getelementptr inbounds i8, i8* %6230, i64 1
  store i8 0, i8* %6233, align 1
  %6234 = and i64 %6191, 16711680
  %6235 = icmp eq i64 %6234, 16711680
  %6236 = select i1 %6235, i64 2, i64 1
  %6237 = getelementptr inbounds i8, i8* %6230, i64 %6236
  %6238 = lshr i64 %6191, 8
  %6239 = trunc i64 %6238 to i8
  store i8 %6239, i8* %6237, align 1
  %6240 = getelementptr inbounds i8, i8* %6237, i64 1
  store i8 0, i8* %6240, align 1
  %6241 = and i64 %6191, 65280
  %6242 = icmp eq i64 %6241, 65280
  %6243 = select i1 %6242, i64 2, i64 1
  %6244 = getelementptr inbounds i8, i8* %6237, i64 %6243
  %6245 = trunc i64 %6191 to i8
  store i8 %6245, i8* %6244, align 1
  %6246 = getelementptr inbounds i8, i8* %6244, i64 1
  store i8 0, i8* %6246, align 1
  %6247 = and i64 %6191, 255
  %6248 = icmp eq i64 %6247, 255
  %6249 = select i1 %6248, i64 2, i64 1
  %6250 = getelementptr inbounds i8, i8* %6244, i64 %6249
  br label %6273

6251:                                             ; preds = %6185
  %6252 = lshr i64 %6191, 48
  %6253 = trunc i64 %6252 to i8
  %6254 = getelementptr inbounds i8, i8* %6166, i64 1
  store i8 %6253, i8* %6254, align 1
  %6255 = lshr i64 %6191, 40
  %6256 = trunc i64 %6255 to i8
  %6257 = getelementptr inbounds i8, i8* %6166, i64 2
  store i8 %6256, i8* %6257, align 1
  %6258 = lshr i64 %6191, 32
  %6259 = trunc i64 %6258 to i8
  %6260 = getelementptr inbounds i8, i8* %6166, i64 3
  store i8 %6259, i8* %6260, align 1
  %6261 = lshr i64 %6191, 24
  %6262 = trunc i64 %6261 to i8
  %6263 = getelementptr inbounds i8, i8* %6166, i64 4
  store i8 %6262, i8* %6263, align 1
  %6264 = lshr i64 %6191, 16
  %6265 = trunc i64 %6264 to i8
  %6266 = getelementptr inbounds i8, i8* %6166, i64 5
  store i8 %6265, i8* %6266, align 1
  %6267 = lshr i64 %6191, 8
  %6268 = trunc i64 %6267 to i8
  %6269 = getelementptr inbounds i8, i8* %6166, i64 6
  store i8 %6268, i8* %6269, align 1
  %6270 = trunc i64 %6191 to i8
  %6271 = getelementptr inbounds i8, i8* %6166, i64 7
  store i8 %6270, i8* %6271, align 1
  %6272 = getelementptr inbounds i8, i8* %6166, i64 8
  br label %6273

6273:                                             ; preds = %6251, %6198
  %6274 = phi i8* [ %6250, %6198 ], [ %6272, %6251 ]
  %6275 = add nsw i32 %6183, 64
  %6276 = sext i32 %6178 to i64
  br label %6282

6277:                                             ; preds = %6163
  %6278 = zext i32 %6182 to i64
  %6279 = shl i64 %6165, %6278
  %6280 = sext i32 %6178 to i64
  %6281 = or i64 %6279, %6280
  br label %6282

6282:                                             ; preds = %6273, %6277, %6040
  %6283 = phi i32 [ %6032, %6040 ], [ %6275, %6273 ], [ %6183, %6277 ]
  %6284 = phi i64 [ %6033, %6040 ], [ %6276, %6273 ], [ %6281, %6277 ]
  %6285 = phi i8* [ %6034, %6040 ], [ %6274, %6273 ], [ %6166, %6277 ]
  %6286 = phi i32 [ %6041, %6040 ], [ 0, %6273 ], [ 0, %6277 ]
  %6287 = getelementptr inbounds i16, i16* %1, i64 42
  %6288 = load i16, i16* %6287, align 2
  %6289 = sext i16 %6288 to i32
  %6290 = icmp eq i16 %6288, 0
  br i1 %6290, label %6291, label %6293

6291:                                             ; preds = %6282
  %6292 = add nuw nsw i32 %6286, 16
  br label %6541

6293:                                             ; preds = %6282
  %6294 = ashr i32 %6289, 31
  %6295 = add nsw i32 %6294, %6289
  %6296 = xor i32 %6295, %6294
  %6297 = sext i32 %6296 to i64
  %6298 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %6297
  %6299 = load i8, i8* %6298, align 1
  %6300 = zext i8 %6299 to i32
  %6301 = icmp sgt i32 %6286, 255
  br i1 %6301, label %6302, label %6422

6302:                                             ; preds = %6293
  %6303 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %6304 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %6305

6305:                                             ; preds = %6302, %6415
  %6306 = phi i32 [ %6286, %6302 ], [ %6310, %6415 ]
  %6307 = phi i8* [ %6285, %6302 ], [ %6418, %6415 ]
  %6308 = phi i64 [ %6284, %6302 ], [ %6417, %6415 ]
  %6309 = phi i32 [ %6283, %6302 ], [ %6416, %6415 ]
  %6310 = add nsw i32 %6306, -256
  %6311 = load i8, i8* %6303, align 4
  %6312 = sext i8 %6311 to i32
  %6313 = sub nsw i32 %6309, %6312
  %6314 = icmp slt i32 %6313, 0
  br i1 %6314, label %6315, label %6409

6315:                                             ; preds = %6305
  %6316 = zext i32 %6309 to i64
  %6317 = shl i64 %6308, %6316
  %6318 = load i32, i32* %6304, align 4
  %6319 = sub nsw i32 0, %6313
  %6320 = lshr i32 %6318, %6319
  %6321 = zext i32 %6320 to i64
  %6322 = or i64 %6317, %6321
  %6323 = and i64 %6322, -9187201950435737472
  %6324 = sub i64 -72340172838076674, %6322
  %6325 = and i64 %6323, %6324
  %6326 = icmp eq i64 %6325, 0
  %6327 = lshr i64 %6317, 56
  %6328 = trunc i64 %6327 to i8
  store i8 %6328, i8* %6307, align 1
  br i1 %6326, label %6382, label %6329

6329:                                             ; preds = %6315
  %6330 = getelementptr inbounds i8, i8* %6307, i64 1
  store i8 0, i8* %6330, align 1
  %6331 = icmp eq i64 %6327, 255
  %6332 = select i1 %6331, i64 2, i64 1
  %6333 = getelementptr inbounds i8, i8* %6307, i64 %6332
  %6334 = lshr i64 %6317, 48
  %6335 = trunc i64 %6334 to i8
  store i8 %6335, i8* %6333, align 1
  %6336 = getelementptr inbounds i8, i8* %6333, i64 1
  store i8 0, i8* %6336, align 1
  %6337 = and i64 %6317, 71776119061217280
  %6338 = icmp eq i64 %6337, 71776119061217280
  %6339 = select i1 %6338, i64 2, i64 1
  %6340 = getelementptr inbounds i8, i8* %6333, i64 %6339
  %6341 = lshr i64 %6317, 40
  %6342 = trunc i64 %6341 to i8
  store i8 %6342, i8* %6340, align 1
  %6343 = getelementptr inbounds i8, i8* %6340, i64 1
  store i8 0, i8* %6343, align 1
  %6344 = and i64 %6317, 280375465082880
  %6345 = icmp eq i64 %6344, 280375465082880
  %6346 = select i1 %6345, i64 2, i64 1
  %6347 = getelementptr inbounds i8, i8* %6340, i64 %6346
  %6348 = lshr i64 %6317, 32
  %6349 = trunc i64 %6348 to i8
  store i8 %6349, i8* %6347, align 1
  %6350 = getelementptr inbounds i8, i8* %6347, i64 1
  store i8 0, i8* %6350, align 1
  %6351 = and i64 %6317, 1095216660480
  %6352 = icmp eq i64 %6351, 1095216660480
  %6353 = select i1 %6352, i64 2, i64 1
  %6354 = getelementptr inbounds i8, i8* %6347, i64 %6353
  %6355 = lshr i64 %6322, 24
  %6356 = trunc i64 %6355 to i8
  store i8 %6356, i8* %6354, align 1
  %6357 = getelementptr inbounds i8, i8* %6354, i64 1
  store i8 0, i8* %6357, align 1
  %6358 = and i64 %6322, 4278190080
  %6359 = icmp eq i64 %6358, 4278190080
  %6360 = select i1 %6359, i64 2, i64 1
  %6361 = getelementptr inbounds i8, i8* %6354, i64 %6360
  %6362 = lshr i64 %6322, 16
  %6363 = trunc i64 %6362 to i8
  store i8 %6363, i8* %6361, align 1
  %6364 = getelementptr inbounds i8, i8* %6361, i64 1
  store i8 0, i8* %6364, align 1
  %6365 = and i64 %6322, 16711680
  %6366 = icmp eq i64 %6365, 16711680
  %6367 = select i1 %6366, i64 2, i64 1
  %6368 = getelementptr inbounds i8, i8* %6361, i64 %6367
  %6369 = lshr i64 %6322, 8
  %6370 = trunc i64 %6369 to i8
  store i8 %6370, i8* %6368, align 1
  %6371 = getelementptr inbounds i8, i8* %6368, i64 1
  store i8 0, i8* %6371, align 1
  %6372 = and i64 %6322, 65280
  %6373 = icmp eq i64 %6372, 65280
  %6374 = select i1 %6373, i64 2, i64 1
  %6375 = getelementptr inbounds i8, i8* %6368, i64 %6374
  %6376 = trunc i64 %6322 to i8
  store i8 %6376, i8* %6375, align 1
  %6377 = getelementptr inbounds i8, i8* %6375, i64 1
  store i8 0, i8* %6377, align 1
  %6378 = and i64 %6322, 255
  %6379 = icmp eq i64 %6378, 255
  %6380 = select i1 %6379, i64 2, i64 1
  %6381 = getelementptr inbounds i8, i8* %6375, i64 %6380
  br label %6404

6382:                                             ; preds = %6315
  %6383 = lshr i64 %6317, 48
  %6384 = trunc i64 %6383 to i8
  %6385 = getelementptr inbounds i8, i8* %6307, i64 1
  store i8 %6384, i8* %6385, align 1
  %6386 = lshr i64 %6317, 40
  %6387 = trunc i64 %6386 to i8
  %6388 = getelementptr inbounds i8, i8* %6307, i64 2
  store i8 %6387, i8* %6388, align 1
  %6389 = lshr i64 %6317, 32
  %6390 = trunc i64 %6389 to i8
  %6391 = getelementptr inbounds i8, i8* %6307, i64 3
  store i8 %6390, i8* %6391, align 1
  %6392 = lshr i64 %6322, 24
  %6393 = trunc i64 %6392 to i8
  %6394 = getelementptr inbounds i8, i8* %6307, i64 4
  store i8 %6393, i8* %6394, align 1
  %6395 = lshr i64 %6322, 16
  %6396 = trunc i64 %6395 to i8
  %6397 = getelementptr inbounds i8, i8* %6307, i64 5
  store i8 %6396, i8* %6397, align 1
  %6398 = lshr i64 %6322, 8
  %6399 = trunc i64 %6398 to i8
  %6400 = getelementptr inbounds i8, i8* %6307, i64 6
  store i8 %6399, i8* %6400, align 1
  %6401 = trunc i64 %6322 to i8
  %6402 = getelementptr inbounds i8, i8* %6307, i64 7
  store i8 %6401, i8* %6402, align 1
  %6403 = getelementptr inbounds i8, i8* %6307, i64 8
  br label %6404

6404:                                             ; preds = %6382, %6329
  %6405 = phi i8* [ %6381, %6329 ], [ %6403, %6382 ]
  %6406 = add nsw i32 %6313, 64
  %6407 = load i32, i32* %6304, align 4
  %6408 = zext i32 %6407 to i64
  br label %6415

6409:                                             ; preds = %6305
  %6410 = zext i32 %6312 to i64
  %6411 = shl i64 %6308, %6410
  %6412 = load i32, i32* %6304, align 4
  %6413 = zext i32 %6412 to i64
  %6414 = or i64 %6411, %6413
  br label %6415

6415:                                             ; preds = %6409, %6404
  %6416 = phi i32 [ %6406, %6404 ], [ %6313, %6409 ]
  %6417 = phi i64 [ %6408, %6404 ], [ %6414, %6409 ]
  %6418 = phi i8* [ %6405, %6404 ], [ %6307, %6409 ]
  %6419 = icmp sgt i32 %6310, 255
  br i1 %6419, label %6305, label %6420

6420:                                             ; preds = %6415
  %6421 = and i32 %6286, 255
  br label %6422

6422:                                             ; preds = %6420, %6293
  %6423 = phi i32 [ %6283, %6293 ], [ %6416, %6420 ]
  %6424 = phi i64 [ %6284, %6293 ], [ %6417, %6420 ]
  %6425 = phi i8* [ %6285, %6293 ], [ %6418, %6420 ]
  %6426 = phi i32 [ %6286, %6293 ], [ %6421, %6420 ]
  %6427 = add nsw i32 %6426, %6300
  %6428 = zext i8 %6299 to i64
  %6429 = shl nsw i64 -1, %6428
  %6430 = trunc i64 %6429 to i32
  %6431 = xor i32 %6430, -1
  %6432 = and i32 %6295, %6431
  %6433 = sext i32 %6427 to i64
  %6434 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %6433
  %6435 = load i32, i32* %6434, align 4
  %6436 = shl i32 %6435, %6300
  %6437 = or i32 %6436, %6432
  %6438 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %6433
  %6439 = load i8, i8* %6438, align 1
  %6440 = sext i8 %6439 to i32
  %6441 = add nsw i32 %6440, %6300
  %6442 = sub nsw i32 %6423, %6441
  %6443 = icmp slt i32 %6442, 0
  br i1 %6443, label %6444, label %6536

6444:                                             ; preds = %6422
  %6445 = zext i32 %6423 to i64
  %6446 = shl i64 %6424, %6445
  %6447 = sub nsw i32 0, %6442
  %6448 = ashr i32 %6437, %6447
  %6449 = sext i32 %6448 to i64
  %6450 = or i64 %6446, %6449
  %6451 = and i64 %6450, -9187201950435737472
  %6452 = sub i64 -72340172838076674, %6450
  %6453 = and i64 %6451, %6452
  %6454 = icmp eq i64 %6453, 0
  %6455 = lshr i64 %6450, 56
  %6456 = trunc i64 %6455 to i8
  store i8 %6456, i8* %6425, align 1
  br i1 %6454, label %6510, label %6457

6457:                                             ; preds = %6444
  %6458 = getelementptr inbounds i8, i8* %6425, i64 1
  store i8 0, i8* %6458, align 1
  %6459 = icmp eq i64 %6455, 255
  %6460 = select i1 %6459, i64 2, i64 1
  %6461 = getelementptr inbounds i8, i8* %6425, i64 %6460
  %6462 = lshr i64 %6450, 48
  %6463 = trunc i64 %6462 to i8
  store i8 %6463, i8* %6461, align 1
  %6464 = getelementptr inbounds i8, i8* %6461, i64 1
  store i8 0, i8* %6464, align 1
  %6465 = and i64 %6450, 71776119061217280
  %6466 = icmp eq i64 %6465, 71776119061217280
  %6467 = select i1 %6466, i64 2, i64 1
  %6468 = getelementptr inbounds i8, i8* %6461, i64 %6467
  %6469 = lshr i64 %6450, 40
  %6470 = trunc i64 %6469 to i8
  store i8 %6470, i8* %6468, align 1
  %6471 = getelementptr inbounds i8, i8* %6468, i64 1
  store i8 0, i8* %6471, align 1
  %6472 = and i64 %6450, 280375465082880
  %6473 = icmp eq i64 %6472, 280375465082880
  %6474 = select i1 %6473, i64 2, i64 1
  %6475 = getelementptr inbounds i8, i8* %6468, i64 %6474
  %6476 = lshr i64 %6450, 32
  %6477 = trunc i64 %6476 to i8
  store i8 %6477, i8* %6475, align 1
  %6478 = getelementptr inbounds i8, i8* %6475, i64 1
  store i8 0, i8* %6478, align 1
  %6479 = and i64 %6450, 1095216660480
  %6480 = icmp eq i64 %6479, 1095216660480
  %6481 = select i1 %6480, i64 2, i64 1
  %6482 = getelementptr inbounds i8, i8* %6475, i64 %6481
  %6483 = lshr i64 %6450, 24
  %6484 = trunc i64 %6483 to i8
  store i8 %6484, i8* %6482, align 1
  %6485 = getelementptr inbounds i8, i8* %6482, i64 1
  store i8 0, i8* %6485, align 1
  %6486 = and i64 %6450, 4278190080
  %6487 = icmp eq i64 %6486, 4278190080
  %6488 = select i1 %6487, i64 2, i64 1
  %6489 = getelementptr inbounds i8, i8* %6482, i64 %6488
  %6490 = lshr i64 %6450, 16
  %6491 = trunc i64 %6490 to i8
  store i8 %6491, i8* %6489, align 1
  %6492 = getelementptr inbounds i8, i8* %6489, i64 1
  store i8 0, i8* %6492, align 1
  %6493 = and i64 %6450, 16711680
  %6494 = icmp eq i64 %6493, 16711680
  %6495 = select i1 %6494, i64 2, i64 1
  %6496 = getelementptr inbounds i8, i8* %6489, i64 %6495
  %6497 = lshr i64 %6450, 8
  %6498 = trunc i64 %6497 to i8
  store i8 %6498, i8* %6496, align 1
  %6499 = getelementptr inbounds i8, i8* %6496, i64 1
  store i8 0, i8* %6499, align 1
  %6500 = and i64 %6450, 65280
  %6501 = icmp eq i64 %6500, 65280
  %6502 = select i1 %6501, i64 2, i64 1
  %6503 = getelementptr inbounds i8, i8* %6496, i64 %6502
  %6504 = trunc i64 %6450 to i8
  store i8 %6504, i8* %6503, align 1
  %6505 = getelementptr inbounds i8, i8* %6503, i64 1
  store i8 0, i8* %6505, align 1
  %6506 = and i64 %6450, 255
  %6507 = icmp eq i64 %6506, 255
  %6508 = select i1 %6507, i64 2, i64 1
  %6509 = getelementptr inbounds i8, i8* %6503, i64 %6508
  br label %6532

6510:                                             ; preds = %6444
  %6511 = lshr i64 %6450, 48
  %6512 = trunc i64 %6511 to i8
  %6513 = getelementptr inbounds i8, i8* %6425, i64 1
  store i8 %6512, i8* %6513, align 1
  %6514 = lshr i64 %6450, 40
  %6515 = trunc i64 %6514 to i8
  %6516 = getelementptr inbounds i8, i8* %6425, i64 2
  store i8 %6515, i8* %6516, align 1
  %6517 = lshr i64 %6450, 32
  %6518 = trunc i64 %6517 to i8
  %6519 = getelementptr inbounds i8, i8* %6425, i64 3
  store i8 %6518, i8* %6519, align 1
  %6520 = lshr i64 %6450, 24
  %6521 = trunc i64 %6520 to i8
  %6522 = getelementptr inbounds i8, i8* %6425, i64 4
  store i8 %6521, i8* %6522, align 1
  %6523 = lshr i64 %6450, 16
  %6524 = trunc i64 %6523 to i8
  %6525 = getelementptr inbounds i8, i8* %6425, i64 5
  store i8 %6524, i8* %6525, align 1
  %6526 = lshr i64 %6450, 8
  %6527 = trunc i64 %6526 to i8
  %6528 = getelementptr inbounds i8, i8* %6425, i64 6
  store i8 %6527, i8* %6528, align 1
  %6529 = trunc i64 %6450 to i8
  %6530 = getelementptr inbounds i8, i8* %6425, i64 7
  store i8 %6529, i8* %6530, align 1
  %6531 = getelementptr inbounds i8, i8* %6425, i64 8
  br label %6532

6532:                                             ; preds = %6510, %6457
  %6533 = phi i8* [ %6509, %6457 ], [ %6531, %6510 ]
  %6534 = add nsw i32 %6442, 64
  %6535 = sext i32 %6437 to i64
  br label %6541

6536:                                             ; preds = %6422
  %6537 = zext i32 %6441 to i64
  %6538 = shl i64 %6424, %6537
  %6539 = sext i32 %6437 to i64
  %6540 = or i64 %6538, %6539
  br label %6541

6541:                                             ; preds = %6532, %6536, %6291
  %6542 = phi i32 [ %6283, %6291 ], [ %6534, %6532 ], [ %6442, %6536 ]
  %6543 = phi i64 [ %6284, %6291 ], [ %6535, %6532 ], [ %6540, %6536 ]
  %6544 = phi i8* [ %6285, %6291 ], [ %6533, %6532 ], [ %6425, %6536 ]
  %6545 = phi i32 [ %6292, %6291 ], [ 0, %6532 ], [ 0, %6536 ]
  %6546 = getelementptr inbounds i16, i16* %1, i64 49
  %6547 = load i16, i16* %6546, align 2
  %6548 = sext i16 %6547 to i32
  %6549 = icmp eq i16 %6547, 0
  br i1 %6549, label %6550, label %6552

6550:                                             ; preds = %6541
  %6551 = add nuw nsw i32 %6545, 16
  br label %6800

6552:                                             ; preds = %6541
  %6553 = ashr i32 %6548, 31
  %6554 = add nsw i32 %6553, %6548
  %6555 = xor i32 %6554, %6553
  %6556 = sext i32 %6555 to i64
  %6557 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %6556
  %6558 = load i8, i8* %6557, align 1
  %6559 = zext i8 %6558 to i32
  %6560 = icmp sgt i32 %6545, 255
  br i1 %6560, label %6561, label %6681

6561:                                             ; preds = %6552
  %6562 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %6563 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %6564

6564:                                             ; preds = %6561, %6674
  %6565 = phi i32 [ %6545, %6561 ], [ %6569, %6674 ]
  %6566 = phi i8* [ %6544, %6561 ], [ %6677, %6674 ]
  %6567 = phi i64 [ %6543, %6561 ], [ %6676, %6674 ]
  %6568 = phi i32 [ %6542, %6561 ], [ %6675, %6674 ]
  %6569 = add nsw i32 %6565, -256
  %6570 = load i8, i8* %6562, align 4
  %6571 = sext i8 %6570 to i32
  %6572 = sub nsw i32 %6568, %6571
  %6573 = icmp slt i32 %6572, 0
  br i1 %6573, label %6574, label %6668

6574:                                             ; preds = %6564
  %6575 = zext i32 %6568 to i64
  %6576 = shl i64 %6567, %6575
  %6577 = load i32, i32* %6563, align 4
  %6578 = sub nsw i32 0, %6572
  %6579 = lshr i32 %6577, %6578
  %6580 = zext i32 %6579 to i64
  %6581 = or i64 %6576, %6580
  %6582 = and i64 %6581, -9187201950435737472
  %6583 = sub i64 -72340172838076674, %6581
  %6584 = and i64 %6582, %6583
  %6585 = icmp eq i64 %6584, 0
  %6586 = lshr i64 %6576, 56
  %6587 = trunc i64 %6586 to i8
  store i8 %6587, i8* %6566, align 1
  br i1 %6585, label %6641, label %6588

6588:                                             ; preds = %6574
  %6589 = getelementptr inbounds i8, i8* %6566, i64 1
  store i8 0, i8* %6589, align 1
  %6590 = icmp eq i64 %6586, 255
  %6591 = select i1 %6590, i64 2, i64 1
  %6592 = getelementptr inbounds i8, i8* %6566, i64 %6591
  %6593 = lshr i64 %6576, 48
  %6594 = trunc i64 %6593 to i8
  store i8 %6594, i8* %6592, align 1
  %6595 = getelementptr inbounds i8, i8* %6592, i64 1
  store i8 0, i8* %6595, align 1
  %6596 = and i64 %6576, 71776119061217280
  %6597 = icmp eq i64 %6596, 71776119061217280
  %6598 = select i1 %6597, i64 2, i64 1
  %6599 = getelementptr inbounds i8, i8* %6592, i64 %6598
  %6600 = lshr i64 %6576, 40
  %6601 = trunc i64 %6600 to i8
  store i8 %6601, i8* %6599, align 1
  %6602 = getelementptr inbounds i8, i8* %6599, i64 1
  store i8 0, i8* %6602, align 1
  %6603 = and i64 %6576, 280375465082880
  %6604 = icmp eq i64 %6603, 280375465082880
  %6605 = select i1 %6604, i64 2, i64 1
  %6606 = getelementptr inbounds i8, i8* %6599, i64 %6605
  %6607 = lshr i64 %6576, 32
  %6608 = trunc i64 %6607 to i8
  store i8 %6608, i8* %6606, align 1
  %6609 = getelementptr inbounds i8, i8* %6606, i64 1
  store i8 0, i8* %6609, align 1
  %6610 = and i64 %6576, 1095216660480
  %6611 = icmp eq i64 %6610, 1095216660480
  %6612 = select i1 %6611, i64 2, i64 1
  %6613 = getelementptr inbounds i8, i8* %6606, i64 %6612
  %6614 = lshr i64 %6581, 24
  %6615 = trunc i64 %6614 to i8
  store i8 %6615, i8* %6613, align 1
  %6616 = getelementptr inbounds i8, i8* %6613, i64 1
  store i8 0, i8* %6616, align 1
  %6617 = and i64 %6581, 4278190080
  %6618 = icmp eq i64 %6617, 4278190080
  %6619 = select i1 %6618, i64 2, i64 1
  %6620 = getelementptr inbounds i8, i8* %6613, i64 %6619
  %6621 = lshr i64 %6581, 16
  %6622 = trunc i64 %6621 to i8
  store i8 %6622, i8* %6620, align 1
  %6623 = getelementptr inbounds i8, i8* %6620, i64 1
  store i8 0, i8* %6623, align 1
  %6624 = and i64 %6581, 16711680
  %6625 = icmp eq i64 %6624, 16711680
  %6626 = select i1 %6625, i64 2, i64 1
  %6627 = getelementptr inbounds i8, i8* %6620, i64 %6626
  %6628 = lshr i64 %6581, 8
  %6629 = trunc i64 %6628 to i8
  store i8 %6629, i8* %6627, align 1
  %6630 = getelementptr inbounds i8, i8* %6627, i64 1
  store i8 0, i8* %6630, align 1
  %6631 = and i64 %6581, 65280
  %6632 = icmp eq i64 %6631, 65280
  %6633 = select i1 %6632, i64 2, i64 1
  %6634 = getelementptr inbounds i8, i8* %6627, i64 %6633
  %6635 = trunc i64 %6581 to i8
  store i8 %6635, i8* %6634, align 1
  %6636 = getelementptr inbounds i8, i8* %6634, i64 1
  store i8 0, i8* %6636, align 1
  %6637 = and i64 %6581, 255
  %6638 = icmp eq i64 %6637, 255
  %6639 = select i1 %6638, i64 2, i64 1
  %6640 = getelementptr inbounds i8, i8* %6634, i64 %6639
  br label %6663

6641:                                             ; preds = %6574
  %6642 = lshr i64 %6576, 48
  %6643 = trunc i64 %6642 to i8
  %6644 = getelementptr inbounds i8, i8* %6566, i64 1
  store i8 %6643, i8* %6644, align 1
  %6645 = lshr i64 %6576, 40
  %6646 = trunc i64 %6645 to i8
  %6647 = getelementptr inbounds i8, i8* %6566, i64 2
  store i8 %6646, i8* %6647, align 1
  %6648 = lshr i64 %6576, 32
  %6649 = trunc i64 %6648 to i8
  %6650 = getelementptr inbounds i8, i8* %6566, i64 3
  store i8 %6649, i8* %6650, align 1
  %6651 = lshr i64 %6581, 24
  %6652 = trunc i64 %6651 to i8
  %6653 = getelementptr inbounds i8, i8* %6566, i64 4
  store i8 %6652, i8* %6653, align 1
  %6654 = lshr i64 %6581, 16
  %6655 = trunc i64 %6654 to i8
  %6656 = getelementptr inbounds i8, i8* %6566, i64 5
  store i8 %6655, i8* %6656, align 1
  %6657 = lshr i64 %6581, 8
  %6658 = trunc i64 %6657 to i8
  %6659 = getelementptr inbounds i8, i8* %6566, i64 6
  store i8 %6658, i8* %6659, align 1
  %6660 = trunc i64 %6581 to i8
  %6661 = getelementptr inbounds i8, i8* %6566, i64 7
  store i8 %6660, i8* %6661, align 1
  %6662 = getelementptr inbounds i8, i8* %6566, i64 8
  br label %6663

6663:                                             ; preds = %6641, %6588
  %6664 = phi i8* [ %6640, %6588 ], [ %6662, %6641 ]
  %6665 = add nsw i32 %6572, 64
  %6666 = load i32, i32* %6563, align 4
  %6667 = zext i32 %6666 to i64
  br label %6674

6668:                                             ; preds = %6564
  %6669 = zext i32 %6571 to i64
  %6670 = shl i64 %6567, %6669
  %6671 = load i32, i32* %6563, align 4
  %6672 = zext i32 %6671 to i64
  %6673 = or i64 %6670, %6672
  br label %6674

6674:                                             ; preds = %6668, %6663
  %6675 = phi i32 [ %6665, %6663 ], [ %6572, %6668 ]
  %6676 = phi i64 [ %6667, %6663 ], [ %6673, %6668 ]
  %6677 = phi i8* [ %6664, %6663 ], [ %6566, %6668 ]
  %6678 = icmp sgt i32 %6569, 255
  br i1 %6678, label %6564, label %6679

6679:                                             ; preds = %6674
  %6680 = and i32 %6545, 255
  br label %6681

6681:                                             ; preds = %6679, %6552
  %6682 = phi i32 [ %6542, %6552 ], [ %6675, %6679 ]
  %6683 = phi i64 [ %6543, %6552 ], [ %6676, %6679 ]
  %6684 = phi i8* [ %6544, %6552 ], [ %6677, %6679 ]
  %6685 = phi i32 [ %6545, %6552 ], [ %6680, %6679 ]
  %6686 = add nsw i32 %6685, %6559
  %6687 = zext i8 %6558 to i64
  %6688 = shl nsw i64 -1, %6687
  %6689 = trunc i64 %6688 to i32
  %6690 = xor i32 %6689, -1
  %6691 = and i32 %6554, %6690
  %6692 = sext i32 %6686 to i64
  %6693 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %6692
  %6694 = load i32, i32* %6693, align 4
  %6695 = shl i32 %6694, %6559
  %6696 = or i32 %6695, %6691
  %6697 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %6692
  %6698 = load i8, i8* %6697, align 1
  %6699 = sext i8 %6698 to i32
  %6700 = add nsw i32 %6699, %6559
  %6701 = sub nsw i32 %6682, %6700
  %6702 = icmp slt i32 %6701, 0
  br i1 %6702, label %6703, label %6795

6703:                                             ; preds = %6681
  %6704 = zext i32 %6682 to i64
  %6705 = shl i64 %6683, %6704
  %6706 = sub nsw i32 0, %6701
  %6707 = ashr i32 %6696, %6706
  %6708 = sext i32 %6707 to i64
  %6709 = or i64 %6705, %6708
  %6710 = and i64 %6709, -9187201950435737472
  %6711 = sub i64 -72340172838076674, %6709
  %6712 = and i64 %6710, %6711
  %6713 = icmp eq i64 %6712, 0
  %6714 = lshr i64 %6709, 56
  %6715 = trunc i64 %6714 to i8
  store i8 %6715, i8* %6684, align 1
  br i1 %6713, label %6769, label %6716

6716:                                             ; preds = %6703
  %6717 = getelementptr inbounds i8, i8* %6684, i64 1
  store i8 0, i8* %6717, align 1
  %6718 = icmp eq i64 %6714, 255
  %6719 = select i1 %6718, i64 2, i64 1
  %6720 = getelementptr inbounds i8, i8* %6684, i64 %6719
  %6721 = lshr i64 %6709, 48
  %6722 = trunc i64 %6721 to i8
  store i8 %6722, i8* %6720, align 1
  %6723 = getelementptr inbounds i8, i8* %6720, i64 1
  store i8 0, i8* %6723, align 1
  %6724 = and i64 %6709, 71776119061217280
  %6725 = icmp eq i64 %6724, 71776119061217280
  %6726 = select i1 %6725, i64 2, i64 1
  %6727 = getelementptr inbounds i8, i8* %6720, i64 %6726
  %6728 = lshr i64 %6709, 40
  %6729 = trunc i64 %6728 to i8
  store i8 %6729, i8* %6727, align 1
  %6730 = getelementptr inbounds i8, i8* %6727, i64 1
  store i8 0, i8* %6730, align 1
  %6731 = and i64 %6709, 280375465082880
  %6732 = icmp eq i64 %6731, 280375465082880
  %6733 = select i1 %6732, i64 2, i64 1
  %6734 = getelementptr inbounds i8, i8* %6727, i64 %6733
  %6735 = lshr i64 %6709, 32
  %6736 = trunc i64 %6735 to i8
  store i8 %6736, i8* %6734, align 1
  %6737 = getelementptr inbounds i8, i8* %6734, i64 1
  store i8 0, i8* %6737, align 1
  %6738 = and i64 %6709, 1095216660480
  %6739 = icmp eq i64 %6738, 1095216660480
  %6740 = select i1 %6739, i64 2, i64 1
  %6741 = getelementptr inbounds i8, i8* %6734, i64 %6740
  %6742 = lshr i64 %6709, 24
  %6743 = trunc i64 %6742 to i8
  store i8 %6743, i8* %6741, align 1
  %6744 = getelementptr inbounds i8, i8* %6741, i64 1
  store i8 0, i8* %6744, align 1
  %6745 = and i64 %6709, 4278190080
  %6746 = icmp eq i64 %6745, 4278190080
  %6747 = select i1 %6746, i64 2, i64 1
  %6748 = getelementptr inbounds i8, i8* %6741, i64 %6747
  %6749 = lshr i64 %6709, 16
  %6750 = trunc i64 %6749 to i8
  store i8 %6750, i8* %6748, align 1
  %6751 = getelementptr inbounds i8, i8* %6748, i64 1
  store i8 0, i8* %6751, align 1
  %6752 = and i64 %6709, 16711680
  %6753 = icmp eq i64 %6752, 16711680
  %6754 = select i1 %6753, i64 2, i64 1
  %6755 = getelementptr inbounds i8, i8* %6748, i64 %6754
  %6756 = lshr i64 %6709, 8
  %6757 = trunc i64 %6756 to i8
  store i8 %6757, i8* %6755, align 1
  %6758 = getelementptr inbounds i8, i8* %6755, i64 1
  store i8 0, i8* %6758, align 1
  %6759 = and i64 %6709, 65280
  %6760 = icmp eq i64 %6759, 65280
  %6761 = select i1 %6760, i64 2, i64 1
  %6762 = getelementptr inbounds i8, i8* %6755, i64 %6761
  %6763 = trunc i64 %6709 to i8
  store i8 %6763, i8* %6762, align 1
  %6764 = getelementptr inbounds i8, i8* %6762, i64 1
  store i8 0, i8* %6764, align 1
  %6765 = and i64 %6709, 255
  %6766 = icmp eq i64 %6765, 255
  %6767 = select i1 %6766, i64 2, i64 1
  %6768 = getelementptr inbounds i8, i8* %6762, i64 %6767
  br label %6791

6769:                                             ; preds = %6703
  %6770 = lshr i64 %6709, 48
  %6771 = trunc i64 %6770 to i8
  %6772 = getelementptr inbounds i8, i8* %6684, i64 1
  store i8 %6771, i8* %6772, align 1
  %6773 = lshr i64 %6709, 40
  %6774 = trunc i64 %6773 to i8
  %6775 = getelementptr inbounds i8, i8* %6684, i64 2
  store i8 %6774, i8* %6775, align 1
  %6776 = lshr i64 %6709, 32
  %6777 = trunc i64 %6776 to i8
  %6778 = getelementptr inbounds i8, i8* %6684, i64 3
  store i8 %6777, i8* %6778, align 1
  %6779 = lshr i64 %6709, 24
  %6780 = trunc i64 %6779 to i8
  %6781 = getelementptr inbounds i8, i8* %6684, i64 4
  store i8 %6780, i8* %6781, align 1
  %6782 = lshr i64 %6709, 16
  %6783 = trunc i64 %6782 to i8
  %6784 = getelementptr inbounds i8, i8* %6684, i64 5
  store i8 %6783, i8* %6784, align 1
  %6785 = lshr i64 %6709, 8
  %6786 = trunc i64 %6785 to i8
  %6787 = getelementptr inbounds i8, i8* %6684, i64 6
  store i8 %6786, i8* %6787, align 1
  %6788 = trunc i64 %6709 to i8
  %6789 = getelementptr inbounds i8, i8* %6684, i64 7
  store i8 %6788, i8* %6789, align 1
  %6790 = getelementptr inbounds i8, i8* %6684, i64 8
  br label %6791

6791:                                             ; preds = %6769, %6716
  %6792 = phi i8* [ %6768, %6716 ], [ %6790, %6769 ]
  %6793 = add nsw i32 %6701, 64
  %6794 = sext i32 %6696 to i64
  br label %6800

6795:                                             ; preds = %6681
  %6796 = zext i32 %6700 to i64
  %6797 = shl i64 %6683, %6796
  %6798 = sext i32 %6696 to i64
  %6799 = or i64 %6797, %6798
  br label %6800

6800:                                             ; preds = %6791, %6795, %6550
  %6801 = phi i32 [ %6542, %6550 ], [ %6793, %6791 ], [ %6701, %6795 ]
  %6802 = phi i64 [ %6543, %6550 ], [ %6794, %6791 ], [ %6799, %6795 ]
  %6803 = phi i8* [ %6544, %6550 ], [ %6792, %6791 ], [ %6684, %6795 ]
  %6804 = phi i32 [ %6551, %6550 ], [ 0, %6791 ], [ 0, %6795 ]
  %6805 = getelementptr inbounds i16, i16* %1, i64 56
  %6806 = load i16, i16* %6805, align 2
  %6807 = sext i16 %6806 to i32
  %6808 = icmp eq i16 %6806, 0
  br i1 %6808, label %6809, label %6811

6809:                                             ; preds = %6800
  %6810 = add nuw nsw i32 %6804, 16
  br label %7059

6811:                                             ; preds = %6800
  %6812 = ashr i32 %6807, 31
  %6813 = add nsw i32 %6812, %6807
  %6814 = xor i32 %6813, %6812
  %6815 = sext i32 %6814 to i64
  %6816 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %6815
  %6817 = load i8, i8* %6816, align 1
  %6818 = zext i8 %6817 to i32
  %6819 = icmp sgt i32 %6804, 255
  br i1 %6819, label %6820, label %6940

6820:                                             ; preds = %6811
  %6821 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %6822 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %6823

6823:                                             ; preds = %6820, %6933
  %6824 = phi i32 [ %6804, %6820 ], [ %6828, %6933 ]
  %6825 = phi i8* [ %6803, %6820 ], [ %6936, %6933 ]
  %6826 = phi i64 [ %6802, %6820 ], [ %6935, %6933 ]
  %6827 = phi i32 [ %6801, %6820 ], [ %6934, %6933 ]
  %6828 = add nsw i32 %6824, -256
  %6829 = load i8, i8* %6821, align 4
  %6830 = sext i8 %6829 to i32
  %6831 = sub nsw i32 %6827, %6830
  %6832 = icmp slt i32 %6831, 0
  br i1 %6832, label %6833, label %6927

6833:                                             ; preds = %6823
  %6834 = zext i32 %6827 to i64
  %6835 = shl i64 %6826, %6834
  %6836 = load i32, i32* %6822, align 4
  %6837 = sub nsw i32 0, %6831
  %6838 = lshr i32 %6836, %6837
  %6839 = zext i32 %6838 to i64
  %6840 = or i64 %6835, %6839
  %6841 = and i64 %6840, -9187201950435737472
  %6842 = sub i64 -72340172838076674, %6840
  %6843 = and i64 %6841, %6842
  %6844 = icmp eq i64 %6843, 0
  %6845 = lshr i64 %6835, 56
  %6846 = trunc i64 %6845 to i8
  store i8 %6846, i8* %6825, align 1
  br i1 %6844, label %6900, label %6847

6847:                                             ; preds = %6833
  %6848 = getelementptr inbounds i8, i8* %6825, i64 1
  store i8 0, i8* %6848, align 1
  %6849 = icmp eq i64 %6845, 255
  %6850 = select i1 %6849, i64 2, i64 1
  %6851 = getelementptr inbounds i8, i8* %6825, i64 %6850
  %6852 = lshr i64 %6835, 48
  %6853 = trunc i64 %6852 to i8
  store i8 %6853, i8* %6851, align 1
  %6854 = getelementptr inbounds i8, i8* %6851, i64 1
  store i8 0, i8* %6854, align 1
  %6855 = and i64 %6835, 71776119061217280
  %6856 = icmp eq i64 %6855, 71776119061217280
  %6857 = select i1 %6856, i64 2, i64 1
  %6858 = getelementptr inbounds i8, i8* %6851, i64 %6857
  %6859 = lshr i64 %6835, 40
  %6860 = trunc i64 %6859 to i8
  store i8 %6860, i8* %6858, align 1
  %6861 = getelementptr inbounds i8, i8* %6858, i64 1
  store i8 0, i8* %6861, align 1
  %6862 = and i64 %6835, 280375465082880
  %6863 = icmp eq i64 %6862, 280375465082880
  %6864 = select i1 %6863, i64 2, i64 1
  %6865 = getelementptr inbounds i8, i8* %6858, i64 %6864
  %6866 = lshr i64 %6835, 32
  %6867 = trunc i64 %6866 to i8
  store i8 %6867, i8* %6865, align 1
  %6868 = getelementptr inbounds i8, i8* %6865, i64 1
  store i8 0, i8* %6868, align 1
  %6869 = and i64 %6835, 1095216660480
  %6870 = icmp eq i64 %6869, 1095216660480
  %6871 = select i1 %6870, i64 2, i64 1
  %6872 = getelementptr inbounds i8, i8* %6865, i64 %6871
  %6873 = lshr i64 %6840, 24
  %6874 = trunc i64 %6873 to i8
  store i8 %6874, i8* %6872, align 1
  %6875 = getelementptr inbounds i8, i8* %6872, i64 1
  store i8 0, i8* %6875, align 1
  %6876 = and i64 %6840, 4278190080
  %6877 = icmp eq i64 %6876, 4278190080
  %6878 = select i1 %6877, i64 2, i64 1
  %6879 = getelementptr inbounds i8, i8* %6872, i64 %6878
  %6880 = lshr i64 %6840, 16
  %6881 = trunc i64 %6880 to i8
  store i8 %6881, i8* %6879, align 1
  %6882 = getelementptr inbounds i8, i8* %6879, i64 1
  store i8 0, i8* %6882, align 1
  %6883 = and i64 %6840, 16711680
  %6884 = icmp eq i64 %6883, 16711680
  %6885 = select i1 %6884, i64 2, i64 1
  %6886 = getelementptr inbounds i8, i8* %6879, i64 %6885
  %6887 = lshr i64 %6840, 8
  %6888 = trunc i64 %6887 to i8
  store i8 %6888, i8* %6886, align 1
  %6889 = getelementptr inbounds i8, i8* %6886, i64 1
  store i8 0, i8* %6889, align 1
  %6890 = and i64 %6840, 65280
  %6891 = icmp eq i64 %6890, 65280
  %6892 = select i1 %6891, i64 2, i64 1
  %6893 = getelementptr inbounds i8, i8* %6886, i64 %6892
  %6894 = trunc i64 %6840 to i8
  store i8 %6894, i8* %6893, align 1
  %6895 = getelementptr inbounds i8, i8* %6893, i64 1
  store i8 0, i8* %6895, align 1
  %6896 = and i64 %6840, 255
  %6897 = icmp eq i64 %6896, 255
  %6898 = select i1 %6897, i64 2, i64 1
  %6899 = getelementptr inbounds i8, i8* %6893, i64 %6898
  br label %6922

6900:                                             ; preds = %6833
  %6901 = lshr i64 %6835, 48
  %6902 = trunc i64 %6901 to i8
  %6903 = getelementptr inbounds i8, i8* %6825, i64 1
  store i8 %6902, i8* %6903, align 1
  %6904 = lshr i64 %6835, 40
  %6905 = trunc i64 %6904 to i8
  %6906 = getelementptr inbounds i8, i8* %6825, i64 2
  store i8 %6905, i8* %6906, align 1
  %6907 = lshr i64 %6835, 32
  %6908 = trunc i64 %6907 to i8
  %6909 = getelementptr inbounds i8, i8* %6825, i64 3
  store i8 %6908, i8* %6909, align 1
  %6910 = lshr i64 %6840, 24
  %6911 = trunc i64 %6910 to i8
  %6912 = getelementptr inbounds i8, i8* %6825, i64 4
  store i8 %6911, i8* %6912, align 1
  %6913 = lshr i64 %6840, 16
  %6914 = trunc i64 %6913 to i8
  %6915 = getelementptr inbounds i8, i8* %6825, i64 5
  store i8 %6914, i8* %6915, align 1
  %6916 = lshr i64 %6840, 8
  %6917 = trunc i64 %6916 to i8
  %6918 = getelementptr inbounds i8, i8* %6825, i64 6
  store i8 %6917, i8* %6918, align 1
  %6919 = trunc i64 %6840 to i8
  %6920 = getelementptr inbounds i8, i8* %6825, i64 7
  store i8 %6919, i8* %6920, align 1
  %6921 = getelementptr inbounds i8, i8* %6825, i64 8
  br label %6922

6922:                                             ; preds = %6900, %6847
  %6923 = phi i8* [ %6899, %6847 ], [ %6921, %6900 ]
  %6924 = add nsw i32 %6831, 64
  %6925 = load i32, i32* %6822, align 4
  %6926 = zext i32 %6925 to i64
  br label %6933

6927:                                             ; preds = %6823
  %6928 = zext i32 %6830 to i64
  %6929 = shl i64 %6826, %6928
  %6930 = load i32, i32* %6822, align 4
  %6931 = zext i32 %6930 to i64
  %6932 = or i64 %6929, %6931
  br label %6933

6933:                                             ; preds = %6927, %6922
  %6934 = phi i32 [ %6924, %6922 ], [ %6831, %6927 ]
  %6935 = phi i64 [ %6926, %6922 ], [ %6932, %6927 ]
  %6936 = phi i8* [ %6923, %6922 ], [ %6825, %6927 ]
  %6937 = icmp sgt i32 %6828, 255
  br i1 %6937, label %6823, label %6938

6938:                                             ; preds = %6933
  %6939 = and i32 %6804, 255
  br label %6940

6940:                                             ; preds = %6938, %6811
  %6941 = phi i32 [ %6801, %6811 ], [ %6934, %6938 ]
  %6942 = phi i64 [ %6802, %6811 ], [ %6935, %6938 ]
  %6943 = phi i8* [ %6803, %6811 ], [ %6936, %6938 ]
  %6944 = phi i32 [ %6804, %6811 ], [ %6939, %6938 ]
  %6945 = add nsw i32 %6944, %6818
  %6946 = zext i8 %6817 to i64
  %6947 = shl nsw i64 -1, %6946
  %6948 = trunc i64 %6947 to i32
  %6949 = xor i32 %6948, -1
  %6950 = and i32 %6813, %6949
  %6951 = sext i32 %6945 to i64
  %6952 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %6951
  %6953 = load i32, i32* %6952, align 4
  %6954 = shl i32 %6953, %6818
  %6955 = or i32 %6954, %6950
  %6956 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %6951
  %6957 = load i8, i8* %6956, align 1
  %6958 = sext i8 %6957 to i32
  %6959 = add nsw i32 %6958, %6818
  %6960 = sub nsw i32 %6941, %6959
  %6961 = icmp slt i32 %6960, 0
  br i1 %6961, label %6962, label %7054

6962:                                             ; preds = %6940
  %6963 = zext i32 %6941 to i64
  %6964 = shl i64 %6942, %6963
  %6965 = sub nsw i32 0, %6960
  %6966 = ashr i32 %6955, %6965
  %6967 = sext i32 %6966 to i64
  %6968 = or i64 %6964, %6967
  %6969 = and i64 %6968, -9187201950435737472
  %6970 = sub i64 -72340172838076674, %6968
  %6971 = and i64 %6969, %6970
  %6972 = icmp eq i64 %6971, 0
  %6973 = lshr i64 %6968, 56
  %6974 = trunc i64 %6973 to i8
  store i8 %6974, i8* %6943, align 1
  br i1 %6972, label %7028, label %6975

6975:                                             ; preds = %6962
  %6976 = getelementptr inbounds i8, i8* %6943, i64 1
  store i8 0, i8* %6976, align 1
  %6977 = icmp eq i64 %6973, 255
  %6978 = select i1 %6977, i64 2, i64 1
  %6979 = getelementptr inbounds i8, i8* %6943, i64 %6978
  %6980 = lshr i64 %6968, 48
  %6981 = trunc i64 %6980 to i8
  store i8 %6981, i8* %6979, align 1
  %6982 = getelementptr inbounds i8, i8* %6979, i64 1
  store i8 0, i8* %6982, align 1
  %6983 = and i64 %6968, 71776119061217280
  %6984 = icmp eq i64 %6983, 71776119061217280
  %6985 = select i1 %6984, i64 2, i64 1
  %6986 = getelementptr inbounds i8, i8* %6979, i64 %6985
  %6987 = lshr i64 %6968, 40
  %6988 = trunc i64 %6987 to i8
  store i8 %6988, i8* %6986, align 1
  %6989 = getelementptr inbounds i8, i8* %6986, i64 1
  store i8 0, i8* %6989, align 1
  %6990 = and i64 %6968, 280375465082880
  %6991 = icmp eq i64 %6990, 280375465082880
  %6992 = select i1 %6991, i64 2, i64 1
  %6993 = getelementptr inbounds i8, i8* %6986, i64 %6992
  %6994 = lshr i64 %6968, 32
  %6995 = trunc i64 %6994 to i8
  store i8 %6995, i8* %6993, align 1
  %6996 = getelementptr inbounds i8, i8* %6993, i64 1
  store i8 0, i8* %6996, align 1
  %6997 = and i64 %6968, 1095216660480
  %6998 = icmp eq i64 %6997, 1095216660480
  %6999 = select i1 %6998, i64 2, i64 1
  %7000 = getelementptr inbounds i8, i8* %6993, i64 %6999
  %7001 = lshr i64 %6968, 24
  %7002 = trunc i64 %7001 to i8
  store i8 %7002, i8* %7000, align 1
  %7003 = getelementptr inbounds i8, i8* %7000, i64 1
  store i8 0, i8* %7003, align 1
  %7004 = and i64 %6968, 4278190080
  %7005 = icmp eq i64 %7004, 4278190080
  %7006 = select i1 %7005, i64 2, i64 1
  %7007 = getelementptr inbounds i8, i8* %7000, i64 %7006
  %7008 = lshr i64 %6968, 16
  %7009 = trunc i64 %7008 to i8
  store i8 %7009, i8* %7007, align 1
  %7010 = getelementptr inbounds i8, i8* %7007, i64 1
  store i8 0, i8* %7010, align 1
  %7011 = and i64 %6968, 16711680
  %7012 = icmp eq i64 %7011, 16711680
  %7013 = select i1 %7012, i64 2, i64 1
  %7014 = getelementptr inbounds i8, i8* %7007, i64 %7013
  %7015 = lshr i64 %6968, 8
  %7016 = trunc i64 %7015 to i8
  store i8 %7016, i8* %7014, align 1
  %7017 = getelementptr inbounds i8, i8* %7014, i64 1
  store i8 0, i8* %7017, align 1
  %7018 = and i64 %6968, 65280
  %7019 = icmp eq i64 %7018, 65280
  %7020 = select i1 %7019, i64 2, i64 1
  %7021 = getelementptr inbounds i8, i8* %7014, i64 %7020
  %7022 = trunc i64 %6968 to i8
  store i8 %7022, i8* %7021, align 1
  %7023 = getelementptr inbounds i8, i8* %7021, i64 1
  store i8 0, i8* %7023, align 1
  %7024 = and i64 %6968, 255
  %7025 = icmp eq i64 %7024, 255
  %7026 = select i1 %7025, i64 2, i64 1
  %7027 = getelementptr inbounds i8, i8* %7021, i64 %7026
  br label %7050

7028:                                             ; preds = %6962
  %7029 = lshr i64 %6968, 48
  %7030 = trunc i64 %7029 to i8
  %7031 = getelementptr inbounds i8, i8* %6943, i64 1
  store i8 %7030, i8* %7031, align 1
  %7032 = lshr i64 %6968, 40
  %7033 = trunc i64 %7032 to i8
  %7034 = getelementptr inbounds i8, i8* %6943, i64 2
  store i8 %7033, i8* %7034, align 1
  %7035 = lshr i64 %6968, 32
  %7036 = trunc i64 %7035 to i8
  %7037 = getelementptr inbounds i8, i8* %6943, i64 3
  store i8 %7036, i8* %7037, align 1
  %7038 = lshr i64 %6968, 24
  %7039 = trunc i64 %7038 to i8
  %7040 = getelementptr inbounds i8, i8* %6943, i64 4
  store i8 %7039, i8* %7040, align 1
  %7041 = lshr i64 %6968, 16
  %7042 = trunc i64 %7041 to i8
  %7043 = getelementptr inbounds i8, i8* %6943, i64 5
  store i8 %7042, i8* %7043, align 1
  %7044 = lshr i64 %6968, 8
  %7045 = trunc i64 %7044 to i8
  %7046 = getelementptr inbounds i8, i8* %6943, i64 6
  store i8 %7045, i8* %7046, align 1
  %7047 = trunc i64 %6968 to i8
  %7048 = getelementptr inbounds i8, i8* %6943, i64 7
  store i8 %7047, i8* %7048, align 1
  %7049 = getelementptr inbounds i8, i8* %6943, i64 8
  br label %7050

7050:                                             ; preds = %7028, %6975
  %7051 = phi i8* [ %7027, %6975 ], [ %7049, %7028 ]
  %7052 = add nsw i32 %6960, 64
  %7053 = sext i32 %6955 to i64
  br label %7059

7054:                                             ; preds = %6940
  %7055 = zext i32 %6959 to i64
  %7056 = shl i64 %6942, %7055
  %7057 = sext i32 %6955 to i64
  %7058 = or i64 %7056, %7057
  br label %7059

7059:                                             ; preds = %7050, %7054, %6809
  %7060 = phi i32 [ %6801, %6809 ], [ %7052, %7050 ], [ %6960, %7054 ]
  %7061 = phi i64 [ %6802, %6809 ], [ %7053, %7050 ], [ %7058, %7054 ]
  %7062 = phi i8* [ %6803, %6809 ], [ %7051, %7050 ], [ %6943, %7054 ]
  %7063 = phi i32 [ %6810, %6809 ], [ 0, %7050 ], [ 0, %7054 ]
  %7064 = getelementptr inbounds i16, i16* %1, i64 57
  %7065 = load i16, i16* %7064, align 2
  %7066 = sext i16 %7065 to i32
  %7067 = icmp eq i16 %7065, 0
  br i1 %7067, label %7068, label %7070

7068:                                             ; preds = %7059
  %7069 = add nuw nsw i32 %7063, 16
  br label %7318

7070:                                             ; preds = %7059
  %7071 = ashr i32 %7066, 31
  %7072 = add nsw i32 %7071, %7066
  %7073 = xor i32 %7072, %7071
  %7074 = sext i32 %7073 to i64
  %7075 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %7074
  %7076 = load i8, i8* %7075, align 1
  %7077 = zext i8 %7076 to i32
  %7078 = icmp sgt i32 %7063, 255
  br i1 %7078, label %7079, label %7199

7079:                                             ; preds = %7070
  %7080 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %7081 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %7082

7082:                                             ; preds = %7079, %7192
  %7083 = phi i32 [ %7063, %7079 ], [ %7087, %7192 ]
  %7084 = phi i8* [ %7062, %7079 ], [ %7195, %7192 ]
  %7085 = phi i64 [ %7061, %7079 ], [ %7194, %7192 ]
  %7086 = phi i32 [ %7060, %7079 ], [ %7193, %7192 ]
  %7087 = add nsw i32 %7083, -256
  %7088 = load i8, i8* %7080, align 4
  %7089 = sext i8 %7088 to i32
  %7090 = sub nsw i32 %7086, %7089
  %7091 = icmp slt i32 %7090, 0
  br i1 %7091, label %7092, label %7186

7092:                                             ; preds = %7082
  %7093 = zext i32 %7086 to i64
  %7094 = shl i64 %7085, %7093
  %7095 = load i32, i32* %7081, align 4
  %7096 = sub nsw i32 0, %7090
  %7097 = lshr i32 %7095, %7096
  %7098 = zext i32 %7097 to i64
  %7099 = or i64 %7094, %7098
  %7100 = and i64 %7099, -9187201950435737472
  %7101 = sub i64 -72340172838076674, %7099
  %7102 = and i64 %7100, %7101
  %7103 = icmp eq i64 %7102, 0
  %7104 = lshr i64 %7094, 56
  %7105 = trunc i64 %7104 to i8
  store i8 %7105, i8* %7084, align 1
  br i1 %7103, label %7159, label %7106

7106:                                             ; preds = %7092
  %7107 = getelementptr inbounds i8, i8* %7084, i64 1
  store i8 0, i8* %7107, align 1
  %7108 = icmp eq i64 %7104, 255
  %7109 = select i1 %7108, i64 2, i64 1
  %7110 = getelementptr inbounds i8, i8* %7084, i64 %7109
  %7111 = lshr i64 %7094, 48
  %7112 = trunc i64 %7111 to i8
  store i8 %7112, i8* %7110, align 1
  %7113 = getelementptr inbounds i8, i8* %7110, i64 1
  store i8 0, i8* %7113, align 1
  %7114 = and i64 %7094, 71776119061217280
  %7115 = icmp eq i64 %7114, 71776119061217280
  %7116 = select i1 %7115, i64 2, i64 1
  %7117 = getelementptr inbounds i8, i8* %7110, i64 %7116
  %7118 = lshr i64 %7094, 40
  %7119 = trunc i64 %7118 to i8
  store i8 %7119, i8* %7117, align 1
  %7120 = getelementptr inbounds i8, i8* %7117, i64 1
  store i8 0, i8* %7120, align 1
  %7121 = and i64 %7094, 280375465082880
  %7122 = icmp eq i64 %7121, 280375465082880
  %7123 = select i1 %7122, i64 2, i64 1
  %7124 = getelementptr inbounds i8, i8* %7117, i64 %7123
  %7125 = lshr i64 %7094, 32
  %7126 = trunc i64 %7125 to i8
  store i8 %7126, i8* %7124, align 1
  %7127 = getelementptr inbounds i8, i8* %7124, i64 1
  store i8 0, i8* %7127, align 1
  %7128 = and i64 %7094, 1095216660480
  %7129 = icmp eq i64 %7128, 1095216660480
  %7130 = select i1 %7129, i64 2, i64 1
  %7131 = getelementptr inbounds i8, i8* %7124, i64 %7130
  %7132 = lshr i64 %7099, 24
  %7133 = trunc i64 %7132 to i8
  store i8 %7133, i8* %7131, align 1
  %7134 = getelementptr inbounds i8, i8* %7131, i64 1
  store i8 0, i8* %7134, align 1
  %7135 = and i64 %7099, 4278190080
  %7136 = icmp eq i64 %7135, 4278190080
  %7137 = select i1 %7136, i64 2, i64 1
  %7138 = getelementptr inbounds i8, i8* %7131, i64 %7137
  %7139 = lshr i64 %7099, 16
  %7140 = trunc i64 %7139 to i8
  store i8 %7140, i8* %7138, align 1
  %7141 = getelementptr inbounds i8, i8* %7138, i64 1
  store i8 0, i8* %7141, align 1
  %7142 = and i64 %7099, 16711680
  %7143 = icmp eq i64 %7142, 16711680
  %7144 = select i1 %7143, i64 2, i64 1
  %7145 = getelementptr inbounds i8, i8* %7138, i64 %7144
  %7146 = lshr i64 %7099, 8
  %7147 = trunc i64 %7146 to i8
  store i8 %7147, i8* %7145, align 1
  %7148 = getelementptr inbounds i8, i8* %7145, i64 1
  store i8 0, i8* %7148, align 1
  %7149 = and i64 %7099, 65280
  %7150 = icmp eq i64 %7149, 65280
  %7151 = select i1 %7150, i64 2, i64 1
  %7152 = getelementptr inbounds i8, i8* %7145, i64 %7151
  %7153 = trunc i64 %7099 to i8
  store i8 %7153, i8* %7152, align 1
  %7154 = getelementptr inbounds i8, i8* %7152, i64 1
  store i8 0, i8* %7154, align 1
  %7155 = and i64 %7099, 255
  %7156 = icmp eq i64 %7155, 255
  %7157 = select i1 %7156, i64 2, i64 1
  %7158 = getelementptr inbounds i8, i8* %7152, i64 %7157
  br label %7181

7159:                                             ; preds = %7092
  %7160 = lshr i64 %7094, 48
  %7161 = trunc i64 %7160 to i8
  %7162 = getelementptr inbounds i8, i8* %7084, i64 1
  store i8 %7161, i8* %7162, align 1
  %7163 = lshr i64 %7094, 40
  %7164 = trunc i64 %7163 to i8
  %7165 = getelementptr inbounds i8, i8* %7084, i64 2
  store i8 %7164, i8* %7165, align 1
  %7166 = lshr i64 %7094, 32
  %7167 = trunc i64 %7166 to i8
  %7168 = getelementptr inbounds i8, i8* %7084, i64 3
  store i8 %7167, i8* %7168, align 1
  %7169 = lshr i64 %7099, 24
  %7170 = trunc i64 %7169 to i8
  %7171 = getelementptr inbounds i8, i8* %7084, i64 4
  store i8 %7170, i8* %7171, align 1
  %7172 = lshr i64 %7099, 16
  %7173 = trunc i64 %7172 to i8
  %7174 = getelementptr inbounds i8, i8* %7084, i64 5
  store i8 %7173, i8* %7174, align 1
  %7175 = lshr i64 %7099, 8
  %7176 = trunc i64 %7175 to i8
  %7177 = getelementptr inbounds i8, i8* %7084, i64 6
  store i8 %7176, i8* %7177, align 1
  %7178 = trunc i64 %7099 to i8
  %7179 = getelementptr inbounds i8, i8* %7084, i64 7
  store i8 %7178, i8* %7179, align 1
  %7180 = getelementptr inbounds i8, i8* %7084, i64 8
  br label %7181

7181:                                             ; preds = %7159, %7106
  %7182 = phi i8* [ %7158, %7106 ], [ %7180, %7159 ]
  %7183 = add nsw i32 %7090, 64
  %7184 = load i32, i32* %7081, align 4
  %7185 = zext i32 %7184 to i64
  br label %7192

7186:                                             ; preds = %7082
  %7187 = zext i32 %7089 to i64
  %7188 = shl i64 %7085, %7187
  %7189 = load i32, i32* %7081, align 4
  %7190 = zext i32 %7189 to i64
  %7191 = or i64 %7188, %7190
  br label %7192

7192:                                             ; preds = %7186, %7181
  %7193 = phi i32 [ %7183, %7181 ], [ %7090, %7186 ]
  %7194 = phi i64 [ %7185, %7181 ], [ %7191, %7186 ]
  %7195 = phi i8* [ %7182, %7181 ], [ %7084, %7186 ]
  %7196 = icmp sgt i32 %7087, 255
  br i1 %7196, label %7082, label %7197

7197:                                             ; preds = %7192
  %7198 = and i32 %7063, 255
  br label %7199

7199:                                             ; preds = %7197, %7070
  %7200 = phi i32 [ %7060, %7070 ], [ %7193, %7197 ]
  %7201 = phi i64 [ %7061, %7070 ], [ %7194, %7197 ]
  %7202 = phi i8* [ %7062, %7070 ], [ %7195, %7197 ]
  %7203 = phi i32 [ %7063, %7070 ], [ %7198, %7197 ]
  %7204 = add nsw i32 %7203, %7077
  %7205 = zext i8 %7076 to i64
  %7206 = shl nsw i64 -1, %7205
  %7207 = trunc i64 %7206 to i32
  %7208 = xor i32 %7207, -1
  %7209 = and i32 %7072, %7208
  %7210 = sext i32 %7204 to i64
  %7211 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %7210
  %7212 = load i32, i32* %7211, align 4
  %7213 = shl i32 %7212, %7077
  %7214 = or i32 %7213, %7209
  %7215 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %7210
  %7216 = load i8, i8* %7215, align 1
  %7217 = sext i8 %7216 to i32
  %7218 = add nsw i32 %7217, %7077
  %7219 = sub nsw i32 %7200, %7218
  %7220 = icmp slt i32 %7219, 0
  br i1 %7220, label %7221, label %7313

7221:                                             ; preds = %7199
  %7222 = zext i32 %7200 to i64
  %7223 = shl i64 %7201, %7222
  %7224 = sub nsw i32 0, %7219
  %7225 = ashr i32 %7214, %7224
  %7226 = sext i32 %7225 to i64
  %7227 = or i64 %7223, %7226
  %7228 = and i64 %7227, -9187201950435737472
  %7229 = sub i64 -72340172838076674, %7227
  %7230 = and i64 %7228, %7229
  %7231 = icmp eq i64 %7230, 0
  %7232 = lshr i64 %7227, 56
  %7233 = trunc i64 %7232 to i8
  store i8 %7233, i8* %7202, align 1
  br i1 %7231, label %7287, label %7234

7234:                                             ; preds = %7221
  %7235 = getelementptr inbounds i8, i8* %7202, i64 1
  store i8 0, i8* %7235, align 1
  %7236 = icmp eq i64 %7232, 255
  %7237 = select i1 %7236, i64 2, i64 1
  %7238 = getelementptr inbounds i8, i8* %7202, i64 %7237
  %7239 = lshr i64 %7227, 48
  %7240 = trunc i64 %7239 to i8
  store i8 %7240, i8* %7238, align 1
  %7241 = getelementptr inbounds i8, i8* %7238, i64 1
  store i8 0, i8* %7241, align 1
  %7242 = and i64 %7227, 71776119061217280
  %7243 = icmp eq i64 %7242, 71776119061217280
  %7244 = select i1 %7243, i64 2, i64 1
  %7245 = getelementptr inbounds i8, i8* %7238, i64 %7244
  %7246 = lshr i64 %7227, 40
  %7247 = trunc i64 %7246 to i8
  store i8 %7247, i8* %7245, align 1
  %7248 = getelementptr inbounds i8, i8* %7245, i64 1
  store i8 0, i8* %7248, align 1
  %7249 = and i64 %7227, 280375465082880
  %7250 = icmp eq i64 %7249, 280375465082880
  %7251 = select i1 %7250, i64 2, i64 1
  %7252 = getelementptr inbounds i8, i8* %7245, i64 %7251
  %7253 = lshr i64 %7227, 32
  %7254 = trunc i64 %7253 to i8
  store i8 %7254, i8* %7252, align 1
  %7255 = getelementptr inbounds i8, i8* %7252, i64 1
  store i8 0, i8* %7255, align 1
  %7256 = and i64 %7227, 1095216660480
  %7257 = icmp eq i64 %7256, 1095216660480
  %7258 = select i1 %7257, i64 2, i64 1
  %7259 = getelementptr inbounds i8, i8* %7252, i64 %7258
  %7260 = lshr i64 %7227, 24
  %7261 = trunc i64 %7260 to i8
  store i8 %7261, i8* %7259, align 1
  %7262 = getelementptr inbounds i8, i8* %7259, i64 1
  store i8 0, i8* %7262, align 1
  %7263 = and i64 %7227, 4278190080
  %7264 = icmp eq i64 %7263, 4278190080
  %7265 = select i1 %7264, i64 2, i64 1
  %7266 = getelementptr inbounds i8, i8* %7259, i64 %7265
  %7267 = lshr i64 %7227, 16
  %7268 = trunc i64 %7267 to i8
  store i8 %7268, i8* %7266, align 1
  %7269 = getelementptr inbounds i8, i8* %7266, i64 1
  store i8 0, i8* %7269, align 1
  %7270 = and i64 %7227, 16711680
  %7271 = icmp eq i64 %7270, 16711680
  %7272 = select i1 %7271, i64 2, i64 1
  %7273 = getelementptr inbounds i8, i8* %7266, i64 %7272
  %7274 = lshr i64 %7227, 8
  %7275 = trunc i64 %7274 to i8
  store i8 %7275, i8* %7273, align 1
  %7276 = getelementptr inbounds i8, i8* %7273, i64 1
  store i8 0, i8* %7276, align 1
  %7277 = and i64 %7227, 65280
  %7278 = icmp eq i64 %7277, 65280
  %7279 = select i1 %7278, i64 2, i64 1
  %7280 = getelementptr inbounds i8, i8* %7273, i64 %7279
  %7281 = trunc i64 %7227 to i8
  store i8 %7281, i8* %7280, align 1
  %7282 = getelementptr inbounds i8, i8* %7280, i64 1
  store i8 0, i8* %7282, align 1
  %7283 = and i64 %7227, 255
  %7284 = icmp eq i64 %7283, 255
  %7285 = select i1 %7284, i64 2, i64 1
  %7286 = getelementptr inbounds i8, i8* %7280, i64 %7285
  br label %7309

7287:                                             ; preds = %7221
  %7288 = lshr i64 %7227, 48
  %7289 = trunc i64 %7288 to i8
  %7290 = getelementptr inbounds i8, i8* %7202, i64 1
  store i8 %7289, i8* %7290, align 1
  %7291 = lshr i64 %7227, 40
  %7292 = trunc i64 %7291 to i8
  %7293 = getelementptr inbounds i8, i8* %7202, i64 2
  store i8 %7292, i8* %7293, align 1
  %7294 = lshr i64 %7227, 32
  %7295 = trunc i64 %7294 to i8
  %7296 = getelementptr inbounds i8, i8* %7202, i64 3
  store i8 %7295, i8* %7296, align 1
  %7297 = lshr i64 %7227, 24
  %7298 = trunc i64 %7297 to i8
  %7299 = getelementptr inbounds i8, i8* %7202, i64 4
  store i8 %7298, i8* %7299, align 1
  %7300 = lshr i64 %7227, 16
  %7301 = trunc i64 %7300 to i8
  %7302 = getelementptr inbounds i8, i8* %7202, i64 5
  store i8 %7301, i8* %7302, align 1
  %7303 = lshr i64 %7227, 8
  %7304 = trunc i64 %7303 to i8
  %7305 = getelementptr inbounds i8, i8* %7202, i64 6
  store i8 %7304, i8* %7305, align 1
  %7306 = trunc i64 %7227 to i8
  %7307 = getelementptr inbounds i8, i8* %7202, i64 7
  store i8 %7306, i8* %7307, align 1
  %7308 = getelementptr inbounds i8, i8* %7202, i64 8
  br label %7309

7309:                                             ; preds = %7287, %7234
  %7310 = phi i8* [ %7286, %7234 ], [ %7308, %7287 ]
  %7311 = add nsw i32 %7219, 64
  %7312 = sext i32 %7214 to i64
  br label %7318

7313:                                             ; preds = %7199
  %7314 = zext i32 %7218 to i64
  %7315 = shl i64 %7201, %7314
  %7316 = sext i32 %7214 to i64
  %7317 = or i64 %7315, %7316
  br label %7318

7318:                                             ; preds = %7309, %7313, %7068
  %7319 = phi i32 [ %7060, %7068 ], [ %7311, %7309 ], [ %7219, %7313 ]
  %7320 = phi i64 [ %7061, %7068 ], [ %7312, %7309 ], [ %7317, %7313 ]
  %7321 = phi i8* [ %7062, %7068 ], [ %7310, %7309 ], [ %7202, %7313 ]
  %7322 = phi i32 [ %7069, %7068 ], [ 0, %7309 ], [ 0, %7313 ]
  %7323 = getelementptr inbounds i16, i16* %1, i64 50
  %7324 = load i16, i16* %7323, align 2
  %7325 = sext i16 %7324 to i32
  %7326 = icmp eq i16 %7324, 0
  br i1 %7326, label %7327, label %7329

7327:                                             ; preds = %7318
  %7328 = add nuw nsw i32 %7322, 16
  br label %7577

7329:                                             ; preds = %7318
  %7330 = ashr i32 %7325, 31
  %7331 = add nsw i32 %7330, %7325
  %7332 = xor i32 %7331, %7330
  %7333 = sext i32 %7332 to i64
  %7334 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %7333
  %7335 = load i8, i8* %7334, align 1
  %7336 = zext i8 %7335 to i32
  %7337 = icmp sgt i32 %7322, 255
  br i1 %7337, label %7338, label %7458

7338:                                             ; preds = %7329
  %7339 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %7340 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %7341

7341:                                             ; preds = %7338, %7451
  %7342 = phi i32 [ %7322, %7338 ], [ %7346, %7451 ]
  %7343 = phi i8* [ %7321, %7338 ], [ %7454, %7451 ]
  %7344 = phi i64 [ %7320, %7338 ], [ %7453, %7451 ]
  %7345 = phi i32 [ %7319, %7338 ], [ %7452, %7451 ]
  %7346 = add nsw i32 %7342, -256
  %7347 = load i8, i8* %7339, align 4
  %7348 = sext i8 %7347 to i32
  %7349 = sub nsw i32 %7345, %7348
  %7350 = icmp slt i32 %7349, 0
  br i1 %7350, label %7351, label %7445

7351:                                             ; preds = %7341
  %7352 = zext i32 %7345 to i64
  %7353 = shl i64 %7344, %7352
  %7354 = load i32, i32* %7340, align 4
  %7355 = sub nsw i32 0, %7349
  %7356 = lshr i32 %7354, %7355
  %7357 = zext i32 %7356 to i64
  %7358 = or i64 %7353, %7357
  %7359 = and i64 %7358, -9187201950435737472
  %7360 = sub i64 -72340172838076674, %7358
  %7361 = and i64 %7359, %7360
  %7362 = icmp eq i64 %7361, 0
  %7363 = lshr i64 %7353, 56
  %7364 = trunc i64 %7363 to i8
  store i8 %7364, i8* %7343, align 1
  br i1 %7362, label %7418, label %7365

7365:                                             ; preds = %7351
  %7366 = getelementptr inbounds i8, i8* %7343, i64 1
  store i8 0, i8* %7366, align 1
  %7367 = icmp eq i64 %7363, 255
  %7368 = select i1 %7367, i64 2, i64 1
  %7369 = getelementptr inbounds i8, i8* %7343, i64 %7368
  %7370 = lshr i64 %7353, 48
  %7371 = trunc i64 %7370 to i8
  store i8 %7371, i8* %7369, align 1
  %7372 = getelementptr inbounds i8, i8* %7369, i64 1
  store i8 0, i8* %7372, align 1
  %7373 = and i64 %7353, 71776119061217280
  %7374 = icmp eq i64 %7373, 71776119061217280
  %7375 = select i1 %7374, i64 2, i64 1
  %7376 = getelementptr inbounds i8, i8* %7369, i64 %7375
  %7377 = lshr i64 %7353, 40
  %7378 = trunc i64 %7377 to i8
  store i8 %7378, i8* %7376, align 1
  %7379 = getelementptr inbounds i8, i8* %7376, i64 1
  store i8 0, i8* %7379, align 1
  %7380 = and i64 %7353, 280375465082880
  %7381 = icmp eq i64 %7380, 280375465082880
  %7382 = select i1 %7381, i64 2, i64 1
  %7383 = getelementptr inbounds i8, i8* %7376, i64 %7382
  %7384 = lshr i64 %7353, 32
  %7385 = trunc i64 %7384 to i8
  store i8 %7385, i8* %7383, align 1
  %7386 = getelementptr inbounds i8, i8* %7383, i64 1
  store i8 0, i8* %7386, align 1
  %7387 = and i64 %7353, 1095216660480
  %7388 = icmp eq i64 %7387, 1095216660480
  %7389 = select i1 %7388, i64 2, i64 1
  %7390 = getelementptr inbounds i8, i8* %7383, i64 %7389
  %7391 = lshr i64 %7358, 24
  %7392 = trunc i64 %7391 to i8
  store i8 %7392, i8* %7390, align 1
  %7393 = getelementptr inbounds i8, i8* %7390, i64 1
  store i8 0, i8* %7393, align 1
  %7394 = and i64 %7358, 4278190080
  %7395 = icmp eq i64 %7394, 4278190080
  %7396 = select i1 %7395, i64 2, i64 1
  %7397 = getelementptr inbounds i8, i8* %7390, i64 %7396
  %7398 = lshr i64 %7358, 16
  %7399 = trunc i64 %7398 to i8
  store i8 %7399, i8* %7397, align 1
  %7400 = getelementptr inbounds i8, i8* %7397, i64 1
  store i8 0, i8* %7400, align 1
  %7401 = and i64 %7358, 16711680
  %7402 = icmp eq i64 %7401, 16711680
  %7403 = select i1 %7402, i64 2, i64 1
  %7404 = getelementptr inbounds i8, i8* %7397, i64 %7403
  %7405 = lshr i64 %7358, 8
  %7406 = trunc i64 %7405 to i8
  store i8 %7406, i8* %7404, align 1
  %7407 = getelementptr inbounds i8, i8* %7404, i64 1
  store i8 0, i8* %7407, align 1
  %7408 = and i64 %7358, 65280
  %7409 = icmp eq i64 %7408, 65280
  %7410 = select i1 %7409, i64 2, i64 1
  %7411 = getelementptr inbounds i8, i8* %7404, i64 %7410
  %7412 = trunc i64 %7358 to i8
  store i8 %7412, i8* %7411, align 1
  %7413 = getelementptr inbounds i8, i8* %7411, i64 1
  store i8 0, i8* %7413, align 1
  %7414 = and i64 %7358, 255
  %7415 = icmp eq i64 %7414, 255
  %7416 = select i1 %7415, i64 2, i64 1
  %7417 = getelementptr inbounds i8, i8* %7411, i64 %7416
  br label %7440

7418:                                             ; preds = %7351
  %7419 = lshr i64 %7353, 48
  %7420 = trunc i64 %7419 to i8
  %7421 = getelementptr inbounds i8, i8* %7343, i64 1
  store i8 %7420, i8* %7421, align 1
  %7422 = lshr i64 %7353, 40
  %7423 = trunc i64 %7422 to i8
  %7424 = getelementptr inbounds i8, i8* %7343, i64 2
  store i8 %7423, i8* %7424, align 1
  %7425 = lshr i64 %7353, 32
  %7426 = trunc i64 %7425 to i8
  %7427 = getelementptr inbounds i8, i8* %7343, i64 3
  store i8 %7426, i8* %7427, align 1
  %7428 = lshr i64 %7358, 24
  %7429 = trunc i64 %7428 to i8
  %7430 = getelementptr inbounds i8, i8* %7343, i64 4
  store i8 %7429, i8* %7430, align 1
  %7431 = lshr i64 %7358, 16
  %7432 = trunc i64 %7431 to i8
  %7433 = getelementptr inbounds i8, i8* %7343, i64 5
  store i8 %7432, i8* %7433, align 1
  %7434 = lshr i64 %7358, 8
  %7435 = trunc i64 %7434 to i8
  %7436 = getelementptr inbounds i8, i8* %7343, i64 6
  store i8 %7435, i8* %7436, align 1
  %7437 = trunc i64 %7358 to i8
  %7438 = getelementptr inbounds i8, i8* %7343, i64 7
  store i8 %7437, i8* %7438, align 1
  %7439 = getelementptr inbounds i8, i8* %7343, i64 8
  br label %7440

7440:                                             ; preds = %7418, %7365
  %7441 = phi i8* [ %7417, %7365 ], [ %7439, %7418 ]
  %7442 = add nsw i32 %7349, 64
  %7443 = load i32, i32* %7340, align 4
  %7444 = zext i32 %7443 to i64
  br label %7451

7445:                                             ; preds = %7341
  %7446 = zext i32 %7348 to i64
  %7447 = shl i64 %7344, %7446
  %7448 = load i32, i32* %7340, align 4
  %7449 = zext i32 %7448 to i64
  %7450 = or i64 %7447, %7449
  br label %7451

7451:                                             ; preds = %7445, %7440
  %7452 = phi i32 [ %7442, %7440 ], [ %7349, %7445 ]
  %7453 = phi i64 [ %7444, %7440 ], [ %7450, %7445 ]
  %7454 = phi i8* [ %7441, %7440 ], [ %7343, %7445 ]
  %7455 = icmp sgt i32 %7346, 255
  br i1 %7455, label %7341, label %7456

7456:                                             ; preds = %7451
  %7457 = and i32 %7322, 255
  br label %7458

7458:                                             ; preds = %7456, %7329
  %7459 = phi i32 [ %7319, %7329 ], [ %7452, %7456 ]
  %7460 = phi i64 [ %7320, %7329 ], [ %7453, %7456 ]
  %7461 = phi i8* [ %7321, %7329 ], [ %7454, %7456 ]
  %7462 = phi i32 [ %7322, %7329 ], [ %7457, %7456 ]
  %7463 = add nsw i32 %7462, %7336
  %7464 = zext i8 %7335 to i64
  %7465 = shl nsw i64 -1, %7464
  %7466 = trunc i64 %7465 to i32
  %7467 = xor i32 %7466, -1
  %7468 = and i32 %7331, %7467
  %7469 = sext i32 %7463 to i64
  %7470 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %7469
  %7471 = load i32, i32* %7470, align 4
  %7472 = shl i32 %7471, %7336
  %7473 = or i32 %7472, %7468
  %7474 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %7469
  %7475 = load i8, i8* %7474, align 1
  %7476 = sext i8 %7475 to i32
  %7477 = add nsw i32 %7476, %7336
  %7478 = sub nsw i32 %7459, %7477
  %7479 = icmp slt i32 %7478, 0
  br i1 %7479, label %7480, label %7572

7480:                                             ; preds = %7458
  %7481 = zext i32 %7459 to i64
  %7482 = shl i64 %7460, %7481
  %7483 = sub nsw i32 0, %7478
  %7484 = ashr i32 %7473, %7483
  %7485 = sext i32 %7484 to i64
  %7486 = or i64 %7482, %7485
  %7487 = and i64 %7486, -9187201950435737472
  %7488 = sub i64 -72340172838076674, %7486
  %7489 = and i64 %7487, %7488
  %7490 = icmp eq i64 %7489, 0
  %7491 = lshr i64 %7486, 56
  %7492 = trunc i64 %7491 to i8
  store i8 %7492, i8* %7461, align 1
  br i1 %7490, label %7546, label %7493

7493:                                             ; preds = %7480
  %7494 = getelementptr inbounds i8, i8* %7461, i64 1
  store i8 0, i8* %7494, align 1
  %7495 = icmp eq i64 %7491, 255
  %7496 = select i1 %7495, i64 2, i64 1
  %7497 = getelementptr inbounds i8, i8* %7461, i64 %7496
  %7498 = lshr i64 %7486, 48
  %7499 = trunc i64 %7498 to i8
  store i8 %7499, i8* %7497, align 1
  %7500 = getelementptr inbounds i8, i8* %7497, i64 1
  store i8 0, i8* %7500, align 1
  %7501 = and i64 %7486, 71776119061217280
  %7502 = icmp eq i64 %7501, 71776119061217280
  %7503 = select i1 %7502, i64 2, i64 1
  %7504 = getelementptr inbounds i8, i8* %7497, i64 %7503
  %7505 = lshr i64 %7486, 40
  %7506 = trunc i64 %7505 to i8
  store i8 %7506, i8* %7504, align 1
  %7507 = getelementptr inbounds i8, i8* %7504, i64 1
  store i8 0, i8* %7507, align 1
  %7508 = and i64 %7486, 280375465082880
  %7509 = icmp eq i64 %7508, 280375465082880
  %7510 = select i1 %7509, i64 2, i64 1
  %7511 = getelementptr inbounds i8, i8* %7504, i64 %7510
  %7512 = lshr i64 %7486, 32
  %7513 = trunc i64 %7512 to i8
  store i8 %7513, i8* %7511, align 1
  %7514 = getelementptr inbounds i8, i8* %7511, i64 1
  store i8 0, i8* %7514, align 1
  %7515 = and i64 %7486, 1095216660480
  %7516 = icmp eq i64 %7515, 1095216660480
  %7517 = select i1 %7516, i64 2, i64 1
  %7518 = getelementptr inbounds i8, i8* %7511, i64 %7517
  %7519 = lshr i64 %7486, 24
  %7520 = trunc i64 %7519 to i8
  store i8 %7520, i8* %7518, align 1
  %7521 = getelementptr inbounds i8, i8* %7518, i64 1
  store i8 0, i8* %7521, align 1
  %7522 = and i64 %7486, 4278190080
  %7523 = icmp eq i64 %7522, 4278190080
  %7524 = select i1 %7523, i64 2, i64 1
  %7525 = getelementptr inbounds i8, i8* %7518, i64 %7524
  %7526 = lshr i64 %7486, 16
  %7527 = trunc i64 %7526 to i8
  store i8 %7527, i8* %7525, align 1
  %7528 = getelementptr inbounds i8, i8* %7525, i64 1
  store i8 0, i8* %7528, align 1
  %7529 = and i64 %7486, 16711680
  %7530 = icmp eq i64 %7529, 16711680
  %7531 = select i1 %7530, i64 2, i64 1
  %7532 = getelementptr inbounds i8, i8* %7525, i64 %7531
  %7533 = lshr i64 %7486, 8
  %7534 = trunc i64 %7533 to i8
  store i8 %7534, i8* %7532, align 1
  %7535 = getelementptr inbounds i8, i8* %7532, i64 1
  store i8 0, i8* %7535, align 1
  %7536 = and i64 %7486, 65280
  %7537 = icmp eq i64 %7536, 65280
  %7538 = select i1 %7537, i64 2, i64 1
  %7539 = getelementptr inbounds i8, i8* %7532, i64 %7538
  %7540 = trunc i64 %7486 to i8
  store i8 %7540, i8* %7539, align 1
  %7541 = getelementptr inbounds i8, i8* %7539, i64 1
  store i8 0, i8* %7541, align 1
  %7542 = and i64 %7486, 255
  %7543 = icmp eq i64 %7542, 255
  %7544 = select i1 %7543, i64 2, i64 1
  %7545 = getelementptr inbounds i8, i8* %7539, i64 %7544
  br label %7568

7546:                                             ; preds = %7480
  %7547 = lshr i64 %7486, 48
  %7548 = trunc i64 %7547 to i8
  %7549 = getelementptr inbounds i8, i8* %7461, i64 1
  store i8 %7548, i8* %7549, align 1
  %7550 = lshr i64 %7486, 40
  %7551 = trunc i64 %7550 to i8
  %7552 = getelementptr inbounds i8, i8* %7461, i64 2
  store i8 %7551, i8* %7552, align 1
  %7553 = lshr i64 %7486, 32
  %7554 = trunc i64 %7553 to i8
  %7555 = getelementptr inbounds i8, i8* %7461, i64 3
  store i8 %7554, i8* %7555, align 1
  %7556 = lshr i64 %7486, 24
  %7557 = trunc i64 %7556 to i8
  %7558 = getelementptr inbounds i8, i8* %7461, i64 4
  store i8 %7557, i8* %7558, align 1
  %7559 = lshr i64 %7486, 16
  %7560 = trunc i64 %7559 to i8
  %7561 = getelementptr inbounds i8, i8* %7461, i64 5
  store i8 %7560, i8* %7561, align 1
  %7562 = lshr i64 %7486, 8
  %7563 = trunc i64 %7562 to i8
  %7564 = getelementptr inbounds i8, i8* %7461, i64 6
  store i8 %7563, i8* %7564, align 1
  %7565 = trunc i64 %7486 to i8
  %7566 = getelementptr inbounds i8, i8* %7461, i64 7
  store i8 %7565, i8* %7566, align 1
  %7567 = getelementptr inbounds i8, i8* %7461, i64 8
  br label %7568

7568:                                             ; preds = %7546, %7493
  %7569 = phi i8* [ %7545, %7493 ], [ %7567, %7546 ]
  %7570 = add nsw i32 %7478, 64
  %7571 = sext i32 %7473 to i64
  br label %7577

7572:                                             ; preds = %7458
  %7573 = zext i32 %7477 to i64
  %7574 = shl i64 %7460, %7573
  %7575 = sext i32 %7473 to i64
  %7576 = or i64 %7574, %7575
  br label %7577

7577:                                             ; preds = %7568, %7572, %7327
  %7578 = phi i32 [ %7319, %7327 ], [ %7570, %7568 ], [ %7478, %7572 ]
  %7579 = phi i64 [ %7320, %7327 ], [ %7571, %7568 ], [ %7576, %7572 ]
  %7580 = phi i8* [ %7321, %7327 ], [ %7569, %7568 ], [ %7461, %7572 ]
  %7581 = phi i32 [ %7328, %7327 ], [ 0, %7568 ], [ 0, %7572 ]
  %7582 = getelementptr inbounds i16, i16* %1, i64 43
  %7583 = load i16, i16* %7582, align 2
  %7584 = sext i16 %7583 to i32
  %7585 = icmp eq i16 %7583, 0
  br i1 %7585, label %7586, label %7588

7586:                                             ; preds = %7577
  %7587 = add nuw nsw i32 %7581, 16
  br label %7836

7588:                                             ; preds = %7577
  %7589 = ashr i32 %7584, 31
  %7590 = add nsw i32 %7589, %7584
  %7591 = xor i32 %7590, %7589
  %7592 = sext i32 %7591 to i64
  %7593 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %7592
  %7594 = load i8, i8* %7593, align 1
  %7595 = zext i8 %7594 to i32
  %7596 = icmp sgt i32 %7581, 255
  br i1 %7596, label %7597, label %7717

7597:                                             ; preds = %7588
  %7598 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %7599 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %7600

7600:                                             ; preds = %7597, %7710
  %7601 = phi i32 [ %7581, %7597 ], [ %7605, %7710 ]
  %7602 = phi i8* [ %7580, %7597 ], [ %7713, %7710 ]
  %7603 = phi i64 [ %7579, %7597 ], [ %7712, %7710 ]
  %7604 = phi i32 [ %7578, %7597 ], [ %7711, %7710 ]
  %7605 = add nsw i32 %7601, -256
  %7606 = load i8, i8* %7598, align 4
  %7607 = sext i8 %7606 to i32
  %7608 = sub nsw i32 %7604, %7607
  %7609 = icmp slt i32 %7608, 0
  br i1 %7609, label %7610, label %7704

7610:                                             ; preds = %7600
  %7611 = zext i32 %7604 to i64
  %7612 = shl i64 %7603, %7611
  %7613 = load i32, i32* %7599, align 4
  %7614 = sub nsw i32 0, %7608
  %7615 = lshr i32 %7613, %7614
  %7616 = zext i32 %7615 to i64
  %7617 = or i64 %7612, %7616
  %7618 = and i64 %7617, -9187201950435737472
  %7619 = sub i64 -72340172838076674, %7617
  %7620 = and i64 %7618, %7619
  %7621 = icmp eq i64 %7620, 0
  %7622 = lshr i64 %7612, 56
  %7623 = trunc i64 %7622 to i8
  store i8 %7623, i8* %7602, align 1
  br i1 %7621, label %7677, label %7624

7624:                                             ; preds = %7610
  %7625 = getelementptr inbounds i8, i8* %7602, i64 1
  store i8 0, i8* %7625, align 1
  %7626 = icmp eq i64 %7622, 255
  %7627 = select i1 %7626, i64 2, i64 1
  %7628 = getelementptr inbounds i8, i8* %7602, i64 %7627
  %7629 = lshr i64 %7612, 48
  %7630 = trunc i64 %7629 to i8
  store i8 %7630, i8* %7628, align 1
  %7631 = getelementptr inbounds i8, i8* %7628, i64 1
  store i8 0, i8* %7631, align 1
  %7632 = and i64 %7612, 71776119061217280
  %7633 = icmp eq i64 %7632, 71776119061217280
  %7634 = select i1 %7633, i64 2, i64 1
  %7635 = getelementptr inbounds i8, i8* %7628, i64 %7634
  %7636 = lshr i64 %7612, 40
  %7637 = trunc i64 %7636 to i8
  store i8 %7637, i8* %7635, align 1
  %7638 = getelementptr inbounds i8, i8* %7635, i64 1
  store i8 0, i8* %7638, align 1
  %7639 = and i64 %7612, 280375465082880
  %7640 = icmp eq i64 %7639, 280375465082880
  %7641 = select i1 %7640, i64 2, i64 1
  %7642 = getelementptr inbounds i8, i8* %7635, i64 %7641
  %7643 = lshr i64 %7612, 32
  %7644 = trunc i64 %7643 to i8
  store i8 %7644, i8* %7642, align 1
  %7645 = getelementptr inbounds i8, i8* %7642, i64 1
  store i8 0, i8* %7645, align 1
  %7646 = and i64 %7612, 1095216660480
  %7647 = icmp eq i64 %7646, 1095216660480
  %7648 = select i1 %7647, i64 2, i64 1
  %7649 = getelementptr inbounds i8, i8* %7642, i64 %7648
  %7650 = lshr i64 %7617, 24
  %7651 = trunc i64 %7650 to i8
  store i8 %7651, i8* %7649, align 1
  %7652 = getelementptr inbounds i8, i8* %7649, i64 1
  store i8 0, i8* %7652, align 1
  %7653 = and i64 %7617, 4278190080
  %7654 = icmp eq i64 %7653, 4278190080
  %7655 = select i1 %7654, i64 2, i64 1
  %7656 = getelementptr inbounds i8, i8* %7649, i64 %7655
  %7657 = lshr i64 %7617, 16
  %7658 = trunc i64 %7657 to i8
  store i8 %7658, i8* %7656, align 1
  %7659 = getelementptr inbounds i8, i8* %7656, i64 1
  store i8 0, i8* %7659, align 1
  %7660 = and i64 %7617, 16711680
  %7661 = icmp eq i64 %7660, 16711680
  %7662 = select i1 %7661, i64 2, i64 1
  %7663 = getelementptr inbounds i8, i8* %7656, i64 %7662
  %7664 = lshr i64 %7617, 8
  %7665 = trunc i64 %7664 to i8
  store i8 %7665, i8* %7663, align 1
  %7666 = getelementptr inbounds i8, i8* %7663, i64 1
  store i8 0, i8* %7666, align 1
  %7667 = and i64 %7617, 65280
  %7668 = icmp eq i64 %7667, 65280
  %7669 = select i1 %7668, i64 2, i64 1
  %7670 = getelementptr inbounds i8, i8* %7663, i64 %7669
  %7671 = trunc i64 %7617 to i8
  store i8 %7671, i8* %7670, align 1
  %7672 = getelementptr inbounds i8, i8* %7670, i64 1
  store i8 0, i8* %7672, align 1
  %7673 = and i64 %7617, 255
  %7674 = icmp eq i64 %7673, 255
  %7675 = select i1 %7674, i64 2, i64 1
  %7676 = getelementptr inbounds i8, i8* %7670, i64 %7675
  br label %7699

7677:                                             ; preds = %7610
  %7678 = lshr i64 %7612, 48
  %7679 = trunc i64 %7678 to i8
  %7680 = getelementptr inbounds i8, i8* %7602, i64 1
  store i8 %7679, i8* %7680, align 1
  %7681 = lshr i64 %7612, 40
  %7682 = trunc i64 %7681 to i8
  %7683 = getelementptr inbounds i8, i8* %7602, i64 2
  store i8 %7682, i8* %7683, align 1
  %7684 = lshr i64 %7612, 32
  %7685 = trunc i64 %7684 to i8
  %7686 = getelementptr inbounds i8, i8* %7602, i64 3
  store i8 %7685, i8* %7686, align 1
  %7687 = lshr i64 %7617, 24
  %7688 = trunc i64 %7687 to i8
  %7689 = getelementptr inbounds i8, i8* %7602, i64 4
  store i8 %7688, i8* %7689, align 1
  %7690 = lshr i64 %7617, 16
  %7691 = trunc i64 %7690 to i8
  %7692 = getelementptr inbounds i8, i8* %7602, i64 5
  store i8 %7691, i8* %7692, align 1
  %7693 = lshr i64 %7617, 8
  %7694 = trunc i64 %7693 to i8
  %7695 = getelementptr inbounds i8, i8* %7602, i64 6
  store i8 %7694, i8* %7695, align 1
  %7696 = trunc i64 %7617 to i8
  %7697 = getelementptr inbounds i8, i8* %7602, i64 7
  store i8 %7696, i8* %7697, align 1
  %7698 = getelementptr inbounds i8, i8* %7602, i64 8
  br label %7699

7699:                                             ; preds = %7677, %7624
  %7700 = phi i8* [ %7676, %7624 ], [ %7698, %7677 ]
  %7701 = add nsw i32 %7608, 64
  %7702 = load i32, i32* %7599, align 4
  %7703 = zext i32 %7702 to i64
  br label %7710

7704:                                             ; preds = %7600
  %7705 = zext i32 %7607 to i64
  %7706 = shl i64 %7603, %7705
  %7707 = load i32, i32* %7599, align 4
  %7708 = zext i32 %7707 to i64
  %7709 = or i64 %7706, %7708
  br label %7710

7710:                                             ; preds = %7704, %7699
  %7711 = phi i32 [ %7701, %7699 ], [ %7608, %7704 ]
  %7712 = phi i64 [ %7703, %7699 ], [ %7709, %7704 ]
  %7713 = phi i8* [ %7700, %7699 ], [ %7602, %7704 ]
  %7714 = icmp sgt i32 %7605, 255
  br i1 %7714, label %7600, label %7715

7715:                                             ; preds = %7710
  %7716 = and i32 %7581, 255
  br label %7717

7717:                                             ; preds = %7715, %7588
  %7718 = phi i32 [ %7578, %7588 ], [ %7711, %7715 ]
  %7719 = phi i64 [ %7579, %7588 ], [ %7712, %7715 ]
  %7720 = phi i8* [ %7580, %7588 ], [ %7713, %7715 ]
  %7721 = phi i32 [ %7581, %7588 ], [ %7716, %7715 ]
  %7722 = add nsw i32 %7721, %7595
  %7723 = zext i8 %7594 to i64
  %7724 = shl nsw i64 -1, %7723
  %7725 = trunc i64 %7724 to i32
  %7726 = xor i32 %7725, -1
  %7727 = and i32 %7590, %7726
  %7728 = sext i32 %7722 to i64
  %7729 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %7728
  %7730 = load i32, i32* %7729, align 4
  %7731 = shl i32 %7730, %7595
  %7732 = or i32 %7731, %7727
  %7733 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %7728
  %7734 = load i8, i8* %7733, align 1
  %7735 = sext i8 %7734 to i32
  %7736 = add nsw i32 %7735, %7595
  %7737 = sub nsw i32 %7718, %7736
  %7738 = icmp slt i32 %7737, 0
  br i1 %7738, label %7739, label %7831

7739:                                             ; preds = %7717
  %7740 = zext i32 %7718 to i64
  %7741 = shl i64 %7719, %7740
  %7742 = sub nsw i32 0, %7737
  %7743 = ashr i32 %7732, %7742
  %7744 = sext i32 %7743 to i64
  %7745 = or i64 %7741, %7744
  %7746 = and i64 %7745, -9187201950435737472
  %7747 = sub i64 -72340172838076674, %7745
  %7748 = and i64 %7746, %7747
  %7749 = icmp eq i64 %7748, 0
  %7750 = lshr i64 %7745, 56
  %7751 = trunc i64 %7750 to i8
  store i8 %7751, i8* %7720, align 1
  br i1 %7749, label %7805, label %7752

7752:                                             ; preds = %7739
  %7753 = getelementptr inbounds i8, i8* %7720, i64 1
  store i8 0, i8* %7753, align 1
  %7754 = icmp eq i64 %7750, 255
  %7755 = select i1 %7754, i64 2, i64 1
  %7756 = getelementptr inbounds i8, i8* %7720, i64 %7755
  %7757 = lshr i64 %7745, 48
  %7758 = trunc i64 %7757 to i8
  store i8 %7758, i8* %7756, align 1
  %7759 = getelementptr inbounds i8, i8* %7756, i64 1
  store i8 0, i8* %7759, align 1
  %7760 = and i64 %7745, 71776119061217280
  %7761 = icmp eq i64 %7760, 71776119061217280
  %7762 = select i1 %7761, i64 2, i64 1
  %7763 = getelementptr inbounds i8, i8* %7756, i64 %7762
  %7764 = lshr i64 %7745, 40
  %7765 = trunc i64 %7764 to i8
  store i8 %7765, i8* %7763, align 1
  %7766 = getelementptr inbounds i8, i8* %7763, i64 1
  store i8 0, i8* %7766, align 1
  %7767 = and i64 %7745, 280375465082880
  %7768 = icmp eq i64 %7767, 280375465082880
  %7769 = select i1 %7768, i64 2, i64 1
  %7770 = getelementptr inbounds i8, i8* %7763, i64 %7769
  %7771 = lshr i64 %7745, 32
  %7772 = trunc i64 %7771 to i8
  store i8 %7772, i8* %7770, align 1
  %7773 = getelementptr inbounds i8, i8* %7770, i64 1
  store i8 0, i8* %7773, align 1
  %7774 = and i64 %7745, 1095216660480
  %7775 = icmp eq i64 %7774, 1095216660480
  %7776 = select i1 %7775, i64 2, i64 1
  %7777 = getelementptr inbounds i8, i8* %7770, i64 %7776
  %7778 = lshr i64 %7745, 24
  %7779 = trunc i64 %7778 to i8
  store i8 %7779, i8* %7777, align 1
  %7780 = getelementptr inbounds i8, i8* %7777, i64 1
  store i8 0, i8* %7780, align 1
  %7781 = and i64 %7745, 4278190080
  %7782 = icmp eq i64 %7781, 4278190080
  %7783 = select i1 %7782, i64 2, i64 1
  %7784 = getelementptr inbounds i8, i8* %7777, i64 %7783
  %7785 = lshr i64 %7745, 16
  %7786 = trunc i64 %7785 to i8
  store i8 %7786, i8* %7784, align 1
  %7787 = getelementptr inbounds i8, i8* %7784, i64 1
  store i8 0, i8* %7787, align 1
  %7788 = and i64 %7745, 16711680
  %7789 = icmp eq i64 %7788, 16711680
  %7790 = select i1 %7789, i64 2, i64 1
  %7791 = getelementptr inbounds i8, i8* %7784, i64 %7790
  %7792 = lshr i64 %7745, 8
  %7793 = trunc i64 %7792 to i8
  store i8 %7793, i8* %7791, align 1
  %7794 = getelementptr inbounds i8, i8* %7791, i64 1
  store i8 0, i8* %7794, align 1
  %7795 = and i64 %7745, 65280
  %7796 = icmp eq i64 %7795, 65280
  %7797 = select i1 %7796, i64 2, i64 1
  %7798 = getelementptr inbounds i8, i8* %7791, i64 %7797
  %7799 = trunc i64 %7745 to i8
  store i8 %7799, i8* %7798, align 1
  %7800 = getelementptr inbounds i8, i8* %7798, i64 1
  store i8 0, i8* %7800, align 1
  %7801 = and i64 %7745, 255
  %7802 = icmp eq i64 %7801, 255
  %7803 = select i1 %7802, i64 2, i64 1
  %7804 = getelementptr inbounds i8, i8* %7798, i64 %7803
  br label %7827

7805:                                             ; preds = %7739
  %7806 = lshr i64 %7745, 48
  %7807 = trunc i64 %7806 to i8
  %7808 = getelementptr inbounds i8, i8* %7720, i64 1
  store i8 %7807, i8* %7808, align 1
  %7809 = lshr i64 %7745, 40
  %7810 = trunc i64 %7809 to i8
  %7811 = getelementptr inbounds i8, i8* %7720, i64 2
  store i8 %7810, i8* %7811, align 1
  %7812 = lshr i64 %7745, 32
  %7813 = trunc i64 %7812 to i8
  %7814 = getelementptr inbounds i8, i8* %7720, i64 3
  store i8 %7813, i8* %7814, align 1
  %7815 = lshr i64 %7745, 24
  %7816 = trunc i64 %7815 to i8
  %7817 = getelementptr inbounds i8, i8* %7720, i64 4
  store i8 %7816, i8* %7817, align 1
  %7818 = lshr i64 %7745, 16
  %7819 = trunc i64 %7818 to i8
  %7820 = getelementptr inbounds i8, i8* %7720, i64 5
  store i8 %7819, i8* %7820, align 1
  %7821 = lshr i64 %7745, 8
  %7822 = trunc i64 %7821 to i8
  %7823 = getelementptr inbounds i8, i8* %7720, i64 6
  store i8 %7822, i8* %7823, align 1
  %7824 = trunc i64 %7745 to i8
  %7825 = getelementptr inbounds i8, i8* %7720, i64 7
  store i8 %7824, i8* %7825, align 1
  %7826 = getelementptr inbounds i8, i8* %7720, i64 8
  br label %7827

7827:                                             ; preds = %7805, %7752
  %7828 = phi i8* [ %7804, %7752 ], [ %7826, %7805 ]
  %7829 = add nsw i32 %7737, 64
  %7830 = sext i32 %7732 to i64
  br label %7836

7831:                                             ; preds = %7717
  %7832 = zext i32 %7736 to i64
  %7833 = shl i64 %7719, %7832
  %7834 = sext i32 %7732 to i64
  %7835 = or i64 %7833, %7834
  br label %7836

7836:                                             ; preds = %7827, %7831, %7586
  %7837 = phi i32 [ %7578, %7586 ], [ %7829, %7827 ], [ %7737, %7831 ]
  %7838 = phi i64 [ %7579, %7586 ], [ %7830, %7827 ], [ %7835, %7831 ]
  %7839 = phi i8* [ %7580, %7586 ], [ %7828, %7827 ], [ %7720, %7831 ]
  %7840 = phi i32 [ %7587, %7586 ], [ 0, %7827 ], [ 0, %7831 ]
  %7841 = getelementptr inbounds i16, i16* %1, i64 36
  %7842 = load i16, i16* %7841, align 2
  %7843 = sext i16 %7842 to i32
  %7844 = icmp eq i16 %7842, 0
  br i1 %7844, label %7845, label %7847

7845:                                             ; preds = %7836
  %7846 = add nuw nsw i32 %7840, 16
  br label %8095

7847:                                             ; preds = %7836
  %7848 = ashr i32 %7843, 31
  %7849 = add nsw i32 %7848, %7843
  %7850 = xor i32 %7849, %7848
  %7851 = sext i32 %7850 to i64
  %7852 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %7851
  %7853 = load i8, i8* %7852, align 1
  %7854 = zext i8 %7853 to i32
  %7855 = icmp sgt i32 %7840, 255
  br i1 %7855, label %7856, label %7976

7856:                                             ; preds = %7847
  %7857 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %7858 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %7859

7859:                                             ; preds = %7856, %7969
  %7860 = phi i32 [ %7840, %7856 ], [ %7864, %7969 ]
  %7861 = phi i8* [ %7839, %7856 ], [ %7972, %7969 ]
  %7862 = phi i64 [ %7838, %7856 ], [ %7971, %7969 ]
  %7863 = phi i32 [ %7837, %7856 ], [ %7970, %7969 ]
  %7864 = add nsw i32 %7860, -256
  %7865 = load i8, i8* %7857, align 4
  %7866 = sext i8 %7865 to i32
  %7867 = sub nsw i32 %7863, %7866
  %7868 = icmp slt i32 %7867, 0
  br i1 %7868, label %7869, label %7963

7869:                                             ; preds = %7859
  %7870 = zext i32 %7863 to i64
  %7871 = shl i64 %7862, %7870
  %7872 = load i32, i32* %7858, align 4
  %7873 = sub nsw i32 0, %7867
  %7874 = lshr i32 %7872, %7873
  %7875 = zext i32 %7874 to i64
  %7876 = or i64 %7871, %7875
  %7877 = and i64 %7876, -9187201950435737472
  %7878 = sub i64 -72340172838076674, %7876
  %7879 = and i64 %7877, %7878
  %7880 = icmp eq i64 %7879, 0
  %7881 = lshr i64 %7871, 56
  %7882 = trunc i64 %7881 to i8
  store i8 %7882, i8* %7861, align 1
  br i1 %7880, label %7936, label %7883

7883:                                             ; preds = %7869
  %7884 = getelementptr inbounds i8, i8* %7861, i64 1
  store i8 0, i8* %7884, align 1
  %7885 = icmp eq i64 %7881, 255
  %7886 = select i1 %7885, i64 2, i64 1
  %7887 = getelementptr inbounds i8, i8* %7861, i64 %7886
  %7888 = lshr i64 %7871, 48
  %7889 = trunc i64 %7888 to i8
  store i8 %7889, i8* %7887, align 1
  %7890 = getelementptr inbounds i8, i8* %7887, i64 1
  store i8 0, i8* %7890, align 1
  %7891 = and i64 %7871, 71776119061217280
  %7892 = icmp eq i64 %7891, 71776119061217280
  %7893 = select i1 %7892, i64 2, i64 1
  %7894 = getelementptr inbounds i8, i8* %7887, i64 %7893
  %7895 = lshr i64 %7871, 40
  %7896 = trunc i64 %7895 to i8
  store i8 %7896, i8* %7894, align 1
  %7897 = getelementptr inbounds i8, i8* %7894, i64 1
  store i8 0, i8* %7897, align 1
  %7898 = and i64 %7871, 280375465082880
  %7899 = icmp eq i64 %7898, 280375465082880
  %7900 = select i1 %7899, i64 2, i64 1
  %7901 = getelementptr inbounds i8, i8* %7894, i64 %7900
  %7902 = lshr i64 %7871, 32
  %7903 = trunc i64 %7902 to i8
  store i8 %7903, i8* %7901, align 1
  %7904 = getelementptr inbounds i8, i8* %7901, i64 1
  store i8 0, i8* %7904, align 1
  %7905 = and i64 %7871, 1095216660480
  %7906 = icmp eq i64 %7905, 1095216660480
  %7907 = select i1 %7906, i64 2, i64 1
  %7908 = getelementptr inbounds i8, i8* %7901, i64 %7907
  %7909 = lshr i64 %7876, 24
  %7910 = trunc i64 %7909 to i8
  store i8 %7910, i8* %7908, align 1
  %7911 = getelementptr inbounds i8, i8* %7908, i64 1
  store i8 0, i8* %7911, align 1
  %7912 = and i64 %7876, 4278190080
  %7913 = icmp eq i64 %7912, 4278190080
  %7914 = select i1 %7913, i64 2, i64 1
  %7915 = getelementptr inbounds i8, i8* %7908, i64 %7914
  %7916 = lshr i64 %7876, 16
  %7917 = trunc i64 %7916 to i8
  store i8 %7917, i8* %7915, align 1
  %7918 = getelementptr inbounds i8, i8* %7915, i64 1
  store i8 0, i8* %7918, align 1
  %7919 = and i64 %7876, 16711680
  %7920 = icmp eq i64 %7919, 16711680
  %7921 = select i1 %7920, i64 2, i64 1
  %7922 = getelementptr inbounds i8, i8* %7915, i64 %7921
  %7923 = lshr i64 %7876, 8
  %7924 = trunc i64 %7923 to i8
  store i8 %7924, i8* %7922, align 1
  %7925 = getelementptr inbounds i8, i8* %7922, i64 1
  store i8 0, i8* %7925, align 1
  %7926 = and i64 %7876, 65280
  %7927 = icmp eq i64 %7926, 65280
  %7928 = select i1 %7927, i64 2, i64 1
  %7929 = getelementptr inbounds i8, i8* %7922, i64 %7928
  %7930 = trunc i64 %7876 to i8
  store i8 %7930, i8* %7929, align 1
  %7931 = getelementptr inbounds i8, i8* %7929, i64 1
  store i8 0, i8* %7931, align 1
  %7932 = and i64 %7876, 255
  %7933 = icmp eq i64 %7932, 255
  %7934 = select i1 %7933, i64 2, i64 1
  %7935 = getelementptr inbounds i8, i8* %7929, i64 %7934
  br label %7958

7936:                                             ; preds = %7869
  %7937 = lshr i64 %7871, 48
  %7938 = trunc i64 %7937 to i8
  %7939 = getelementptr inbounds i8, i8* %7861, i64 1
  store i8 %7938, i8* %7939, align 1
  %7940 = lshr i64 %7871, 40
  %7941 = trunc i64 %7940 to i8
  %7942 = getelementptr inbounds i8, i8* %7861, i64 2
  store i8 %7941, i8* %7942, align 1
  %7943 = lshr i64 %7871, 32
  %7944 = trunc i64 %7943 to i8
  %7945 = getelementptr inbounds i8, i8* %7861, i64 3
  store i8 %7944, i8* %7945, align 1
  %7946 = lshr i64 %7876, 24
  %7947 = trunc i64 %7946 to i8
  %7948 = getelementptr inbounds i8, i8* %7861, i64 4
  store i8 %7947, i8* %7948, align 1
  %7949 = lshr i64 %7876, 16
  %7950 = trunc i64 %7949 to i8
  %7951 = getelementptr inbounds i8, i8* %7861, i64 5
  store i8 %7950, i8* %7951, align 1
  %7952 = lshr i64 %7876, 8
  %7953 = trunc i64 %7952 to i8
  %7954 = getelementptr inbounds i8, i8* %7861, i64 6
  store i8 %7953, i8* %7954, align 1
  %7955 = trunc i64 %7876 to i8
  %7956 = getelementptr inbounds i8, i8* %7861, i64 7
  store i8 %7955, i8* %7956, align 1
  %7957 = getelementptr inbounds i8, i8* %7861, i64 8
  br label %7958

7958:                                             ; preds = %7936, %7883
  %7959 = phi i8* [ %7935, %7883 ], [ %7957, %7936 ]
  %7960 = add nsw i32 %7867, 64
  %7961 = load i32, i32* %7858, align 4
  %7962 = zext i32 %7961 to i64
  br label %7969

7963:                                             ; preds = %7859
  %7964 = zext i32 %7866 to i64
  %7965 = shl i64 %7862, %7964
  %7966 = load i32, i32* %7858, align 4
  %7967 = zext i32 %7966 to i64
  %7968 = or i64 %7965, %7967
  br label %7969

7969:                                             ; preds = %7963, %7958
  %7970 = phi i32 [ %7960, %7958 ], [ %7867, %7963 ]
  %7971 = phi i64 [ %7962, %7958 ], [ %7968, %7963 ]
  %7972 = phi i8* [ %7959, %7958 ], [ %7861, %7963 ]
  %7973 = icmp sgt i32 %7864, 255
  br i1 %7973, label %7859, label %7974

7974:                                             ; preds = %7969
  %7975 = and i32 %7840, 255
  br label %7976

7976:                                             ; preds = %7974, %7847
  %7977 = phi i32 [ %7837, %7847 ], [ %7970, %7974 ]
  %7978 = phi i64 [ %7838, %7847 ], [ %7971, %7974 ]
  %7979 = phi i8* [ %7839, %7847 ], [ %7972, %7974 ]
  %7980 = phi i32 [ %7840, %7847 ], [ %7975, %7974 ]
  %7981 = add nsw i32 %7980, %7854
  %7982 = zext i8 %7853 to i64
  %7983 = shl nsw i64 -1, %7982
  %7984 = trunc i64 %7983 to i32
  %7985 = xor i32 %7984, -1
  %7986 = and i32 %7849, %7985
  %7987 = sext i32 %7981 to i64
  %7988 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %7987
  %7989 = load i32, i32* %7988, align 4
  %7990 = shl i32 %7989, %7854
  %7991 = or i32 %7990, %7986
  %7992 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %7987
  %7993 = load i8, i8* %7992, align 1
  %7994 = sext i8 %7993 to i32
  %7995 = add nsw i32 %7994, %7854
  %7996 = sub nsw i32 %7977, %7995
  %7997 = icmp slt i32 %7996, 0
  br i1 %7997, label %7998, label %8090

7998:                                             ; preds = %7976
  %7999 = zext i32 %7977 to i64
  %8000 = shl i64 %7978, %7999
  %8001 = sub nsw i32 0, %7996
  %8002 = ashr i32 %7991, %8001
  %8003 = sext i32 %8002 to i64
  %8004 = or i64 %8000, %8003
  %8005 = and i64 %8004, -9187201950435737472
  %8006 = sub i64 -72340172838076674, %8004
  %8007 = and i64 %8005, %8006
  %8008 = icmp eq i64 %8007, 0
  %8009 = lshr i64 %8004, 56
  %8010 = trunc i64 %8009 to i8
  store i8 %8010, i8* %7979, align 1
  br i1 %8008, label %8064, label %8011

8011:                                             ; preds = %7998
  %8012 = getelementptr inbounds i8, i8* %7979, i64 1
  store i8 0, i8* %8012, align 1
  %8013 = icmp eq i64 %8009, 255
  %8014 = select i1 %8013, i64 2, i64 1
  %8015 = getelementptr inbounds i8, i8* %7979, i64 %8014
  %8016 = lshr i64 %8004, 48
  %8017 = trunc i64 %8016 to i8
  store i8 %8017, i8* %8015, align 1
  %8018 = getelementptr inbounds i8, i8* %8015, i64 1
  store i8 0, i8* %8018, align 1
  %8019 = and i64 %8004, 71776119061217280
  %8020 = icmp eq i64 %8019, 71776119061217280
  %8021 = select i1 %8020, i64 2, i64 1
  %8022 = getelementptr inbounds i8, i8* %8015, i64 %8021
  %8023 = lshr i64 %8004, 40
  %8024 = trunc i64 %8023 to i8
  store i8 %8024, i8* %8022, align 1
  %8025 = getelementptr inbounds i8, i8* %8022, i64 1
  store i8 0, i8* %8025, align 1
  %8026 = and i64 %8004, 280375465082880
  %8027 = icmp eq i64 %8026, 280375465082880
  %8028 = select i1 %8027, i64 2, i64 1
  %8029 = getelementptr inbounds i8, i8* %8022, i64 %8028
  %8030 = lshr i64 %8004, 32
  %8031 = trunc i64 %8030 to i8
  store i8 %8031, i8* %8029, align 1
  %8032 = getelementptr inbounds i8, i8* %8029, i64 1
  store i8 0, i8* %8032, align 1
  %8033 = and i64 %8004, 1095216660480
  %8034 = icmp eq i64 %8033, 1095216660480
  %8035 = select i1 %8034, i64 2, i64 1
  %8036 = getelementptr inbounds i8, i8* %8029, i64 %8035
  %8037 = lshr i64 %8004, 24
  %8038 = trunc i64 %8037 to i8
  store i8 %8038, i8* %8036, align 1
  %8039 = getelementptr inbounds i8, i8* %8036, i64 1
  store i8 0, i8* %8039, align 1
  %8040 = and i64 %8004, 4278190080
  %8041 = icmp eq i64 %8040, 4278190080
  %8042 = select i1 %8041, i64 2, i64 1
  %8043 = getelementptr inbounds i8, i8* %8036, i64 %8042
  %8044 = lshr i64 %8004, 16
  %8045 = trunc i64 %8044 to i8
  store i8 %8045, i8* %8043, align 1
  %8046 = getelementptr inbounds i8, i8* %8043, i64 1
  store i8 0, i8* %8046, align 1
  %8047 = and i64 %8004, 16711680
  %8048 = icmp eq i64 %8047, 16711680
  %8049 = select i1 %8048, i64 2, i64 1
  %8050 = getelementptr inbounds i8, i8* %8043, i64 %8049
  %8051 = lshr i64 %8004, 8
  %8052 = trunc i64 %8051 to i8
  store i8 %8052, i8* %8050, align 1
  %8053 = getelementptr inbounds i8, i8* %8050, i64 1
  store i8 0, i8* %8053, align 1
  %8054 = and i64 %8004, 65280
  %8055 = icmp eq i64 %8054, 65280
  %8056 = select i1 %8055, i64 2, i64 1
  %8057 = getelementptr inbounds i8, i8* %8050, i64 %8056
  %8058 = trunc i64 %8004 to i8
  store i8 %8058, i8* %8057, align 1
  %8059 = getelementptr inbounds i8, i8* %8057, i64 1
  store i8 0, i8* %8059, align 1
  %8060 = and i64 %8004, 255
  %8061 = icmp eq i64 %8060, 255
  %8062 = select i1 %8061, i64 2, i64 1
  %8063 = getelementptr inbounds i8, i8* %8057, i64 %8062
  br label %8086

8064:                                             ; preds = %7998
  %8065 = lshr i64 %8004, 48
  %8066 = trunc i64 %8065 to i8
  %8067 = getelementptr inbounds i8, i8* %7979, i64 1
  store i8 %8066, i8* %8067, align 1
  %8068 = lshr i64 %8004, 40
  %8069 = trunc i64 %8068 to i8
  %8070 = getelementptr inbounds i8, i8* %7979, i64 2
  store i8 %8069, i8* %8070, align 1
  %8071 = lshr i64 %8004, 32
  %8072 = trunc i64 %8071 to i8
  %8073 = getelementptr inbounds i8, i8* %7979, i64 3
  store i8 %8072, i8* %8073, align 1
  %8074 = lshr i64 %8004, 24
  %8075 = trunc i64 %8074 to i8
  %8076 = getelementptr inbounds i8, i8* %7979, i64 4
  store i8 %8075, i8* %8076, align 1
  %8077 = lshr i64 %8004, 16
  %8078 = trunc i64 %8077 to i8
  %8079 = getelementptr inbounds i8, i8* %7979, i64 5
  store i8 %8078, i8* %8079, align 1
  %8080 = lshr i64 %8004, 8
  %8081 = trunc i64 %8080 to i8
  %8082 = getelementptr inbounds i8, i8* %7979, i64 6
  store i8 %8081, i8* %8082, align 1
  %8083 = trunc i64 %8004 to i8
  %8084 = getelementptr inbounds i8, i8* %7979, i64 7
  store i8 %8083, i8* %8084, align 1
  %8085 = getelementptr inbounds i8, i8* %7979, i64 8
  br label %8086

8086:                                             ; preds = %8064, %8011
  %8087 = phi i8* [ %8063, %8011 ], [ %8085, %8064 ]
  %8088 = add nsw i32 %7996, 64
  %8089 = sext i32 %7991 to i64
  br label %8095

8090:                                             ; preds = %7976
  %8091 = zext i32 %7995 to i64
  %8092 = shl i64 %7978, %8091
  %8093 = sext i32 %7991 to i64
  %8094 = or i64 %8092, %8093
  br label %8095

8095:                                             ; preds = %8086, %8090, %7845
  %8096 = phi i32 [ %7837, %7845 ], [ %8088, %8086 ], [ %7996, %8090 ]
  %8097 = phi i64 [ %7838, %7845 ], [ %8089, %8086 ], [ %8094, %8090 ]
  %8098 = phi i8* [ %7839, %7845 ], [ %8087, %8086 ], [ %7979, %8090 ]
  %8099 = phi i32 [ %7846, %7845 ], [ 0, %8086 ], [ 0, %8090 ]
  %8100 = getelementptr inbounds i16, i16* %1, i64 29
  %8101 = load i16, i16* %8100, align 2
  %8102 = sext i16 %8101 to i32
  %8103 = icmp eq i16 %8101, 0
  br i1 %8103, label %8104, label %8106

8104:                                             ; preds = %8095
  %8105 = add nuw nsw i32 %8099, 16
  br label %8354

8106:                                             ; preds = %8095
  %8107 = ashr i32 %8102, 31
  %8108 = add nsw i32 %8107, %8102
  %8109 = xor i32 %8108, %8107
  %8110 = sext i32 %8109 to i64
  %8111 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %8110
  %8112 = load i8, i8* %8111, align 1
  %8113 = zext i8 %8112 to i32
  %8114 = icmp sgt i32 %8099, 255
  br i1 %8114, label %8115, label %8235

8115:                                             ; preds = %8106
  %8116 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %8117 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %8118

8118:                                             ; preds = %8115, %8228
  %8119 = phi i32 [ %8099, %8115 ], [ %8123, %8228 ]
  %8120 = phi i8* [ %8098, %8115 ], [ %8231, %8228 ]
  %8121 = phi i64 [ %8097, %8115 ], [ %8230, %8228 ]
  %8122 = phi i32 [ %8096, %8115 ], [ %8229, %8228 ]
  %8123 = add nsw i32 %8119, -256
  %8124 = load i8, i8* %8116, align 4
  %8125 = sext i8 %8124 to i32
  %8126 = sub nsw i32 %8122, %8125
  %8127 = icmp slt i32 %8126, 0
  br i1 %8127, label %8128, label %8222

8128:                                             ; preds = %8118
  %8129 = zext i32 %8122 to i64
  %8130 = shl i64 %8121, %8129
  %8131 = load i32, i32* %8117, align 4
  %8132 = sub nsw i32 0, %8126
  %8133 = lshr i32 %8131, %8132
  %8134 = zext i32 %8133 to i64
  %8135 = or i64 %8130, %8134
  %8136 = and i64 %8135, -9187201950435737472
  %8137 = sub i64 -72340172838076674, %8135
  %8138 = and i64 %8136, %8137
  %8139 = icmp eq i64 %8138, 0
  %8140 = lshr i64 %8130, 56
  %8141 = trunc i64 %8140 to i8
  store i8 %8141, i8* %8120, align 1
  br i1 %8139, label %8195, label %8142

8142:                                             ; preds = %8128
  %8143 = getelementptr inbounds i8, i8* %8120, i64 1
  store i8 0, i8* %8143, align 1
  %8144 = icmp eq i64 %8140, 255
  %8145 = select i1 %8144, i64 2, i64 1
  %8146 = getelementptr inbounds i8, i8* %8120, i64 %8145
  %8147 = lshr i64 %8130, 48
  %8148 = trunc i64 %8147 to i8
  store i8 %8148, i8* %8146, align 1
  %8149 = getelementptr inbounds i8, i8* %8146, i64 1
  store i8 0, i8* %8149, align 1
  %8150 = and i64 %8130, 71776119061217280
  %8151 = icmp eq i64 %8150, 71776119061217280
  %8152 = select i1 %8151, i64 2, i64 1
  %8153 = getelementptr inbounds i8, i8* %8146, i64 %8152
  %8154 = lshr i64 %8130, 40
  %8155 = trunc i64 %8154 to i8
  store i8 %8155, i8* %8153, align 1
  %8156 = getelementptr inbounds i8, i8* %8153, i64 1
  store i8 0, i8* %8156, align 1
  %8157 = and i64 %8130, 280375465082880
  %8158 = icmp eq i64 %8157, 280375465082880
  %8159 = select i1 %8158, i64 2, i64 1
  %8160 = getelementptr inbounds i8, i8* %8153, i64 %8159
  %8161 = lshr i64 %8130, 32
  %8162 = trunc i64 %8161 to i8
  store i8 %8162, i8* %8160, align 1
  %8163 = getelementptr inbounds i8, i8* %8160, i64 1
  store i8 0, i8* %8163, align 1
  %8164 = and i64 %8130, 1095216660480
  %8165 = icmp eq i64 %8164, 1095216660480
  %8166 = select i1 %8165, i64 2, i64 1
  %8167 = getelementptr inbounds i8, i8* %8160, i64 %8166
  %8168 = lshr i64 %8135, 24
  %8169 = trunc i64 %8168 to i8
  store i8 %8169, i8* %8167, align 1
  %8170 = getelementptr inbounds i8, i8* %8167, i64 1
  store i8 0, i8* %8170, align 1
  %8171 = and i64 %8135, 4278190080
  %8172 = icmp eq i64 %8171, 4278190080
  %8173 = select i1 %8172, i64 2, i64 1
  %8174 = getelementptr inbounds i8, i8* %8167, i64 %8173
  %8175 = lshr i64 %8135, 16
  %8176 = trunc i64 %8175 to i8
  store i8 %8176, i8* %8174, align 1
  %8177 = getelementptr inbounds i8, i8* %8174, i64 1
  store i8 0, i8* %8177, align 1
  %8178 = and i64 %8135, 16711680
  %8179 = icmp eq i64 %8178, 16711680
  %8180 = select i1 %8179, i64 2, i64 1
  %8181 = getelementptr inbounds i8, i8* %8174, i64 %8180
  %8182 = lshr i64 %8135, 8
  %8183 = trunc i64 %8182 to i8
  store i8 %8183, i8* %8181, align 1
  %8184 = getelementptr inbounds i8, i8* %8181, i64 1
  store i8 0, i8* %8184, align 1
  %8185 = and i64 %8135, 65280
  %8186 = icmp eq i64 %8185, 65280
  %8187 = select i1 %8186, i64 2, i64 1
  %8188 = getelementptr inbounds i8, i8* %8181, i64 %8187
  %8189 = trunc i64 %8135 to i8
  store i8 %8189, i8* %8188, align 1
  %8190 = getelementptr inbounds i8, i8* %8188, i64 1
  store i8 0, i8* %8190, align 1
  %8191 = and i64 %8135, 255
  %8192 = icmp eq i64 %8191, 255
  %8193 = select i1 %8192, i64 2, i64 1
  %8194 = getelementptr inbounds i8, i8* %8188, i64 %8193
  br label %8217

8195:                                             ; preds = %8128
  %8196 = lshr i64 %8130, 48
  %8197 = trunc i64 %8196 to i8
  %8198 = getelementptr inbounds i8, i8* %8120, i64 1
  store i8 %8197, i8* %8198, align 1
  %8199 = lshr i64 %8130, 40
  %8200 = trunc i64 %8199 to i8
  %8201 = getelementptr inbounds i8, i8* %8120, i64 2
  store i8 %8200, i8* %8201, align 1
  %8202 = lshr i64 %8130, 32
  %8203 = trunc i64 %8202 to i8
  %8204 = getelementptr inbounds i8, i8* %8120, i64 3
  store i8 %8203, i8* %8204, align 1
  %8205 = lshr i64 %8135, 24
  %8206 = trunc i64 %8205 to i8
  %8207 = getelementptr inbounds i8, i8* %8120, i64 4
  store i8 %8206, i8* %8207, align 1
  %8208 = lshr i64 %8135, 16
  %8209 = trunc i64 %8208 to i8
  %8210 = getelementptr inbounds i8, i8* %8120, i64 5
  store i8 %8209, i8* %8210, align 1
  %8211 = lshr i64 %8135, 8
  %8212 = trunc i64 %8211 to i8
  %8213 = getelementptr inbounds i8, i8* %8120, i64 6
  store i8 %8212, i8* %8213, align 1
  %8214 = trunc i64 %8135 to i8
  %8215 = getelementptr inbounds i8, i8* %8120, i64 7
  store i8 %8214, i8* %8215, align 1
  %8216 = getelementptr inbounds i8, i8* %8120, i64 8
  br label %8217

8217:                                             ; preds = %8195, %8142
  %8218 = phi i8* [ %8194, %8142 ], [ %8216, %8195 ]
  %8219 = add nsw i32 %8126, 64
  %8220 = load i32, i32* %8117, align 4
  %8221 = zext i32 %8220 to i64
  br label %8228

8222:                                             ; preds = %8118
  %8223 = zext i32 %8125 to i64
  %8224 = shl i64 %8121, %8223
  %8225 = load i32, i32* %8117, align 4
  %8226 = zext i32 %8225 to i64
  %8227 = or i64 %8224, %8226
  br label %8228

8228:                                             ; preds = %8222, %8217
  %8229 = phi i32 [ %8219, %8217 ], [ %8126, %8222 ]
  %8230 = phi i64 [ %8221, %8217 ], [ %8227, %8222 ]
  %8231 = phi i8* [ %8218, %8217 ], [ %8120, %8222 ]
  %8232 = icmp sgt i32 %8123, 255
  br i1 %8232, label %8118, label %8233

8233:                                             ; preds = %8228
  %8234 = and i32 %8099, 255
  br label %8235

8235:                                             ; preds = %8233, %8106
  %8236 = phi i32 [ %8096, %8106 ], [ %8229, %8233 ]
  %8237 = phi i64 [ %8097, %8106 ], [ %8230, %8233 ]
  %8238 = phi i8* [ %8098, %8106 ], [ %8231, %8233 ]
  %8239 = phi i32 [ %8099, %8106 ], [ %8234, %8233 ]
  %8240 = add nsw i32 %8239, %8113
  %8241 = zext i8 %8112 to i64
  %8242 = shl nsw i64 -1, %8241
  %8243 = trunc i64 %8242 to i32
  %8244 = xor i32 %8243, -1
  %8245 = and i32 %8108, %8244
  %8246 = sext i32 %8240 to i64
  %8247 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %8246
  %8248 = load i32, i32* %8247, align 4
  %8249 = shl i32 %8248, %8113
  %8250 = or i32 %8249, %8245
  %8251 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %8246
  %8252 = load i8, i8* %8251, align 1
  %8253 = sext i8 %8252 to i32
  %8254 = add nsw i32 %8253, %8113
  %8255 = sub nsw i32 %8236, %8254
  %8256 = icmp slt i32 %8255, 0
  br i1 %8256, label %8257, label %8349

8257:                                             ; preds = %8235
  %8258 = zext i32 %8236 to i64
  %8259 = shl i64 %8237, %8258
  %8260 = sub nsw i32 0, %8255
  %8261 = ashr i32 %8250, %8260
  %8262 = sext i32 %8261 to i64
  %8263 = or i64 %8259, %8262
  %8264 = and i64 %8263, -9187201950435737472
  %8265 = sub i64 -72340172838076674, %8263
  %8266 = and i64 %8264, %8265
  %8267 = icmp eq i64 %8266, 0
  %8268 = lshr i64 %8263, 56
  %8269 = trunc i64 %8268 to i8
  store i8 %8269, i8* %8238, align 1
  br i1 %8267, label %8323, label %8270

8270:                                             ; preds = %8257
  %8271 = getelementptr inbounds i8, i8* %8238, i64 1
  store i8 0, i8* %8271, align 1
  %8272 = icmp eq i64 %8268, 255
  %8273 = select i1 %8272, i64 2, i64 1
  %8274 = getelementptr inbounds i8, i8* %8238, i64 %8273
  %8275 = lshr i64 %8263, 48
  %8276 = trunc i64 %8275 to i8
  store i8 %8276, i8* %8274, align 1
  %8277 = getelementptr inbounds i8, i8* %8274, i64 1
  store i8 0, i8* %8277, align 1
  %8278 = and i64 %8263, 71776119061217280
  %8279 = icmp eq i64 %8278, 71776119061217280
  %8280 = select i1 %8279, i64 2, i64 1
  %8281 = getelementptr inbounds i8, i8* %8274, i64 %8280
  %8282 = lshr i64 %8263, 40
  %8283 = trunc i64 %8282 to i8
  store i8 %8283, i8* %8281, align 1
  %8284 = getelementptr inbounds i8, i8* %8281, i64 1
  store i8 0, i8* %8284, align 1
  %8285 = and i64 %8263, 280375465082880
  %8286 = icmp eq i64 %8285, 280375465082880
  %8287 = select i1 %8286, i64 2, i64 1
  %8288 = getelementptr inbounds i8, i8* %8281, i64 %8287
  %8289 = lshr i64 %8263, 32
  %8290 = trunc i64 %8289 to i8
  store i8 %8290, i8* %8288, align 1
  %8291 = getelementptr inbounds i8, i8* %8288, i64 1
  store i8 0, i8* %8291, align 1
  %8292 = and i64 %8263, 1095216660480
  %8293 = icmp eq i64 %8292, 1095216660480
  %8294 = select i1 %8293, i64 2, i64 1
  %8295 = getelementptr inbounds i8, i8* %8288, i64 %8294
  %8296 = lshr i64 %8263, 24
  %8297 = trunc i64 %8296 to i8
  store i8 %8297, i8* %8295, align 1
  %8298 = getelementptr inbounds i8, i8* %8295, i64 1
  store i8 0, i8* %8298, align 1
  %8299 = and i64 %8263, 4278190080
  %8300 = icmp eq i64 %8299, 4278190080
  %8301 = select i1 %8300, i64 2, i64 1
  %8302 = getelementptr inbounds i8, i8* %8295, i64 %8301
  %8303 = lshr i64 %8263, 16
  %8304 = trunc i64 %8303 to i8
  store i8 %8304, i8* %8302, align 1
  %8305 = getelementptr inbounds i8, i8* %8302, i64 1
  store i8 0, i8* %8305, align 1
  %8306 = and i64 %8263, 16711680
  %8307 = icmp eq i64 %8306, 16711680
  %8308 = select i1 %8307, i64 2, i64 1
  %8309 = getelementptr inbounds i8, i8* %8302, i64 %8308
  %8310 = lshr i64 %8263, 8
  %8311 = trunc i64 %8310 to i8
  store i8 %8311, i8* %8309, align 1
  %8312 = getelementptr inbounds i8, i8* %8309, i64 1
  store i8 0, i8* %8312, align 1
  %8313 = and i64 %8263, 65280
  %8314 = icmp eq i64 %8313, 65280
  %8315 = select i1 %8314, i64 2, i64 1
  %8316 = getelementptr inbounds i8, i8* %8309, i64 %8315
  %8317 = trunc i64 %8263 to i8
  store i8 %8317, i8* %8316, align 1
  %8318 = getelementptr inbounds i8, i8* %8316, i64 1
  store i8 0, i8* %8318, align 1
  %8319 = and i64 %8263, 255
  %8320 = icmp eq i64 %8319, 255
  %8321 = select i1 %8320, i64 2, i64 1
  %8322 = getelementptr inbounds i8, i8* %8316, i64 %8321
  br label %8345

8323:                                             ; preds = %8257
  %8324 = lshr i64 %8263, 48
  %8325 = trunc i64 %8324 to i8
  %8326 = getelementptr inbounds i8, i8* %8238, i64 1
  store i8 %8325, i8* %8326, align 1
  %8327 = lshr i64 %8263, 40
  %8328 = trunc i64 %8327 to i8
  %8329 = getelementptr inbounds i8, i8* %8238, i64 2
  store i8 %8328, i8* %8329, align 1
  %8330 = lshr i64 %8263, 32
  %8331 = trunc i64 %8330 to i8
  %8332 = getelementptr inbounds i8, i8* %8238, i64 3
  store i8 %8331, i8* %8332, align 1
  %8333 = lshr i64 %8263, 24
  %8334 = trunc i64 %8333 to i8
  %8335 = getelementptr inbounds i8, i8* %8238, i64 4
  store i8 %8334, i8* %8335, align 1
  %8336 = lshr i64 %8263, 16
  %8337 = trunc i64 %8336 to i8
  %8338 = getelementptr inbounds i8, i8* %8238, i64 5
  store i8 %8337, i8* %8338, align 1
  %8339 = lshr i64 %8263, 8
  %8340 = trunc i64 %8339 to i8
  %8341 = getelementptr inbounds i8, i8* %8238, i64 6
  store i8 %8340, i8* %8341, align 1
  %8342 = trunc i64 %8263 to i8
  %8343 = getelementptr inbounds i8, i8* %8238, i64 7
  store i8 %8342, i8* %8343, align 1
  %8344 = getelementptr inbounds i8, i8* %8238, i64 8
  br label %8345

8345:                                             ; preds = %8323, %8270
  %8346 = phi i8* [ %8322, %8270 ], [ %8344, %8323 ]
  %8347 = add nsw i32 %8255, 64
  %8348 = sext i32 %8250 to i64
  br label %8354

8349:                                             ; preds = %8235
  %8350 = zext i32 %8254 to i64
  %8351 = shl i64 %8237, %8350
  %8352 = sext i32 %8250 to i64
  %8353 = or i64 %8351, %8352
  br label %8354

8354:                                             ; preds = %8345, %8349, %8104
  %8355 = phi i32 [ %8096, %8104 ], [ %8347, %8345 ], [ %8255, %8349 ]
  %8356 = phi i64 [ %8097, %8104 ], [ %8348, %8345 ], [ %8353, %8349 ]
  %8357 = phi i8* [ %8098, %8104 ], [ %8346, %8345 ], [ %8238, %8349 ]
  %8358 = phi i32 [ %8105, %8104 ], [ 0, %8345 ], [ 0, %8349 ]
  %8359 = getelementptr inbounds i16, i16* %1, i64 22
  %8360 = load i16, i16* %8359, align 2
  %8361 = sext i16 %8360 to i32
  %8362 = icmp eq i16 %8360, 0
  br i1 %8362, label %8363, label %8365

8363:                                             ; preds = %8354
  %8364 = add nuw nsw i32 %8358, 16
  br label %8613

8365:                                             ; preds = %8354
  %8366 = ashr i32 %8361, 31
  %8367 = add nsw i32 %8366, %8361
  %8368 = xor i32 %8367, %8366
  %8369 = sext i32 %8368 to i64
  %8370 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %8369
  %8371 = load i8, i8* %8370, align 1
  %8372 = zext i8 %8371 to i32
  %8373 = icmp sgt i32 %8358, 255
  br i1 %8373, label %8374, label %8494

8374:                                             ; preds = %8365
  %8375 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %8376 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %8377

8377:                                             ; preds = %8374, %8487
  %8378 = phi i32 [ %8358, %8374 ], [ %8382, %8487 ]
  %8379 = phi i8* [ %8357, %8374 ], [ %8490, %8487 ]
  %8380 = phi i64 [ %8356, %8374 ], [ %8489, %8487 ]
  %8381 = phi i32 [ %8355, %8374 ], [ %8488, %8487 ]
  %8382 = add nsw i32 %8378, -256
  %8383 = load i8, i8* %8375, align 4
  %8384 = sext i8 %8383 to i32
  %8385 = sub nsw i32 %8381, %8384
  %8386 = icmp slt i32 %8385, 0
  br i1 %8386, label %8387, label %8481

8387:                                             ; preds = %8377
  %8388 = zext i32 %8381 to i64
  %8389 = shl i64 %8380, %8388
  %8390 = load i32, i32* %8376, align 4
  %8391 = sub nsw i32 0, %8385
  %8392 = lshr i32 %8390, %8391
  %8393 = zext i32 %8392 to i64
  %8394 = or i64 %8389, %8393
  %8395 = and i64 %8394, -9187201950435737472
  %8396 = sub i64 -72340172838076674, %8394
  %8397 = and i64 %8395, %8396
  %8398 = icmp eq i64 %8397, 0
  %8399 = lshr i64 %8389, 56
  %8400 = trunc i64 %8399 to i8
  store i8 %8400, i8* %8379, align 1
  br i1 %8398, label %8454, label %8401

8401:                                             ; preds = %8387
  %8402 = getelementptr inbounds i8, i8* %8379, i64 1
  store i8 0, i8* %8402, align 1
  %8403 = icmp eq i64 %8399, 255
  %8404 = select i1 %8403, i64 2, i64 1
  %8405 = getelementptr inbounds i8, i8* %8379, i64 %8404
  %8406 = lshr i64 %8389, 48
  %8407 = trunc i64 %8406 to i8
  store i8 %8407, i8* %8405, align 1
  %8408 = getelementptr inbounds i8, i8* %8405, i64 1
  store i8 0, i8* %8408, align 1
  %8409 = and i64 %8389, 71776119061217280
  %8410 = icmp eq i64 %8409, 71776119061217280
  %8411 = select i1 %8410, i64 2, i64 1
  %8412 = getelementptr inbounds i8, i8* %8405, i64 %8411
  %8413 = lshr i64 %8389, 40
  %8414 = trunc i64 %8413 to i8
  store i8 %8414, i8* %8412, align 1
  %8415 = getelementptr inbounds i8, i8* %8412, i64 1
  store i8 0, i8* %8415, align 1
  %8416 = and i64 %8389, 280375465082880
  %8417 = icmp eq i64 %8416, 280375465082880
  %8418 = select i1 %8417, i64 2, i64 1
  %8419 = getelementptr inbounds i8, i8* %8412, i64 %8418
  %8420 = lshr i64 %8389, 32
  %8421 = trunc i64 %8420 to i8
  store i8 %8421, i8* %8419, align 1
  %8422 = getelementptr inbounds i8, i8* %8419, i64 1
  store i8 0, i8* %8422, align 1
  %8423 = and i64 %8389, 1095216660480
  %8424 = icmp eq i64 %8423, 1095216660480
  %8425 = select i1 %8424, i64 2, i64 1
  %8426 = getelementptr inbounds i8, i8* %8419, i64 %8425
  %8427 = lshr i64 %8394, 24
  %8428 = trunc i64 %8427 to i8
  store i8 %8428, i8* %8426, align 1
  %8429 = getelementptr inbounds i8, i8* %8426, i64 1
  store i8 0, i8* %8429, align 1
  %8430 = and i64 %8394, 4278190080
  %8431 = icmp eq i64 %8430, 4278190080
  %8432 = select i1 %8431, i64 2, i64 1
  %8433 = getelementptr inbounds i8, i8* %8426, i64 %8432
  %8434 = lshr i64 %8394, 16
  %8435 = trunc i64 %8434 to i8
  store i8 %8435, i8* %8433, align 1
  %8436 = getelementptr inbounds i8, i8* %8433, i64 1
  store i8 0, i8* %8436, align 1
  %8437 = and i64 %8394, 16711680
  %8438 = icmp eq i64 %8437, 16711680
  %8439 = select i1 %8438, i64 2, i64 1
  %8440 = getelementptr inbounds i8, i8* %8433, i64 %8439
  %8441 = lshr i64 %8394, 8
  %8442 = trunc i64 %8441 to i8
  store i8 %8442, i8* %8440, align 1
  %8443 = getelementptr inbounds i8, i8* %8440, i64 1
  store i8 0, i8* %8443, align 1
  %8444 = and i64 %8394, 65280
  %8445 = icmp eq i64 %8444, 65280
  %8446 = select i1 %8445, i64 2, i64 1
  %8447 = getelementptr inbounds i8, i8* %8440, i64 %8446
  %8448 = trunc i64 %8394 to i8
  store i8 %8448, i8* %8447, align 1
  %8449 = getelementptr inbounds i8, i8* %8447, i64 1
  store i8 0, i8* %8449, align 1
  %8450 = and i64 %8394, 255
  %8451 = icmp eq i64 %8450, 255
  %8452 = select i1 %8451, i64 2, i64 1
  %8453 = getelementptr inbounds i8, i8* %8447, i64 %8452
  br label %8476

8454:                                             ; preds = %8387
  %8455 = lshr i64 %8389, 48
  %8456 = trunc i64 %8455 to i8
  %8457 = getelementptr inbounds i8, i8* %8379, i64 1
  store i8 %8456, i8* %8457, align 1
  %8458 = lshr i64 %8389, 40
  %8459 = trunc i64 %8458 to i8
  %8460 = getelementptr inbounds i8, i8* %8379, i64 2
  store i8 %8459, i8* %8460, align 1
  %8461 = lshr i64 %8389, 32
  %8462 = trunc i64 %8461 to i8
  %8463 = getelementptr inbounds i8, i8* %8379, i64 3
  store i8 %8462, i8* %8463, align 1
  %8464 = lshr i64 %8394, 24
  %8465 = trunc i64 %8464 to i8
  %8466 = getelementptr inbounds i8, i8* %8379, i64 4
  store i8 %8465, i8* %8466, align 1
  %8467 = lshr i64 %8394, 16
  %8468 = trunc i64 %8467 to i8
  %8469 = getelementptr inbounds i8, i8* %8379, i64 5
  store i8 %8468, i8* %8469, align 1
  %8470 = lshr i64 %8394, 8
  %8471 = trunc i64 %8470 to i8
  %8472 = getelementptr inbounds i8, i8* %8379, i64 6
  store i8 %8471, i8* %8472, align 1
  %8473 = trunc i64 %8394 to i8
  %8474 = getelementptr inbounds i8, i8* %8379, i64 7
  store i8 %8473, i8* %8474, align 1
  %8475 = getelementptr inbounds i8, i8* %8379, i64 8
  br label %8476

8476:                                             ; preds = %8454, %8401
  %8477 = phi i8* [ %8453, %8401 ], [ %8475, %8454 ]
  %8478 = add nsw i32 %8385, 64
  %8479 = load i32, i32* %8376, align 4
  %8480 = zext i32 %8479 to i64
  br label %8487

8481:                                             ; preds = %8377
  %8482 = zext i32 %8384 to i64
  %8483 = shl i64 %8380, %8482
  %8484 = load i32, i32* %8376, align 4
  %8485 = zext i32 %8484 to i64
  %8486 = or i64 %8483, %8485
  br label %8487

8487:                                             ; preds = %8481, %8476
  %8488 = phi i32 [ %8478, %8476 ], [ %8385, %8481 ]
  %8489 = phi i64 [ %8480, %8476 ], [ %8486, %8481 ]
  %8490 = phi i8* [ %8477, %8476 ], [ %8379, %8481 ]
  %8491 = icmp sgt i32 %8382, 255
  br i1 %8491, label %8377, label %8492

8492:                                             ; preds = %8487
  %8493 = and i32 %8358, 255
  br label %8494

8494:                                             ; preds = %8492, %8365
  %8495 = phi i32 [ %8355, %8365 ], [ %8488, %8492 ]
  %8496 = phi i64 [ %8356, %8365 ], [ %8489, %8492 ]
  %8497 = phi i8* [ %8357, %8365 ], [ %8490, %8492 ]
  %8498 = phi i32 [ %8358, %8365 ], [ %8493, %8492 ]
  %8499 = add nsw i32 %8498, %8372
  %8500 = zext i8 %8371 to i64
  %8501 = shl nsw i64 -1, %8500
  %8502 = trunc i64 %8501 to i32
  %8503 = xor i32 %8502, -1
  %8504 = and i32 %8367, %8503
  %8505 = sext i32 %8499 to i64
  %8506 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %8505
  %8507 = load i32, i32* %8506, align 4
  %8508 = shl i32 %8507, %8372
  %8509 = or i32 %8508, %8504
  %8510 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %8505
  %8511 = load i8, i8* %8510, align 1
  %8512 = sext i8 %8511 to i32
  %8513 = add nsw i32 %8512, %8372
  %8514 = sub nsw i32 %8495, %8513
  %8515 = icmp slt i32 %8514, 0
  br i1 %8515, label %8516, label %8608

8516:                                             ; preds = %8494
  %8517 = zext i32 %8495 to i64
  %8518 = shl i64 %8496, %8517
  %8519 = sub nsw i32 0, %8514
  %8520 = ashr i32 %8509, %8519
  %8521 = sext i32 %8520 to i64
  %8522 = or i64 %8518, %8521
  %8523 = and i64 %8522, -9187201950435737472
  %8524 = sub i64 -72340172838076674, %8522
  %8525 = and i64 %8523, %8524
  %8526 = icmp eq i64 %8525, 0
  %8527 = lshr i64 %8522, 56
  %8528 = trunc i64 %8527 to i8
  store i8 %8528, i8* %8497, align 1
  br i1 %8526, label %8582, label %8529

8529:                                             ; preds = %8516
  %8530 = getelementptr inbounds i8, i8* %8497, i64 1
  store i8 0, i8* %8530, align 1
  %8531 = icmp eq i64 %8527, 255
  %8532 = select i1 %8531, i64 2, i64 1
  %8533 = getelementptr inbounds i8, i8* %8497, i64 %8532
  %8534 = lshr i64 %8522, 48
  %8535 = trunc i64 %8534 to i8
  store i8 %8535, i8* %8533, align 1
  %8536 = getelementptr inbounds i8, i8* %8533, i64 1
  store i8 0, i8* %8536, align 1
  %8537 = and i64 %8522, 71776119061217280
  %8538 = icmp eq i64 %8537, 71776119061217280
  %8539 = select i1 %8538, i64 2, i64 1
  %8540 = getelementptr inbounds i8, i8* %8533, i64 %8539
  %8541 = lshr i64 %8522, 40
  %8542 = trunc i64 %8541 to i8
  store i8 %8542, i8* %8540, align 1
  %8543 = getelementptr inbounds i8, i8* %8540, i64 1
  store i8 0, i8* %8543, align 1
  %8544 = and i64 %8522, 280375465082880
  %8545 = icmp eq i64 %8544, 280375465082880
  %8546 = select i1 %8545, i64 2, i64 1
  %8547 = getelementptr inbounds i8, i8* %8540, i64 %8546
  %8548 = lshr i64 %8522, 32
  %8549 = trunc i64 %8548 to i8
  store i8 %8549, i8* %8547, align 1
  %8550 = getelementptr inbounds i8, i8* %8547, i64 1
  store i8 0, i8* %8550, align 1
  %8551 = and i64 %8522, 1095216660480
  %8552 = icmp eq i64 %8551, 1095216660480
  %8553 = select i1 %8552, i64 2, i64 1
  %8554 = getelementptr inbounds i8, i8* %8547, i64 %8553
  %8555 = lshr i64 %8522, 24
  %8556 = trunc i64 %8555 to i8
  store i8 %8556, i8* %8554, align 1
  %8557 = getelementptr inbounds i8, i8* %8554, i64 1
  store i8 0, i8* %8557, align 1
  %8558 = and i64 %8522, 4278190080
  %8559 = icmp eq i64 %8558, 4278190080
  %8560 = select i1 %8559, i64 2, i64 1
  %8561 = getelementptr inbounds i8, i8* %8554, i64 %8560
  %8562 = lshr i64 %8522, 16
  %8563 = trunc i64 %8562 to i8
  store i8 %8563, i8* %8561, align 1
  %8564 = getelementptr inbounds i8, i8* %8561, i64 1
  store i8 0, i8* %8564, align 1
  %8565 = and i64 %8522, 16711680
  %8566 = icmp eq i64 %8565, 16711680
  %8567 = select i1 %8566, i64 2, i64 1
  %8568 = getelementptr inbounds i8, i8* %8561, i64 %8567
  %8569 = lshr i64 %8522, 8
  %8570 = trunc i64 %8569 to i8
  store i8 %8570, i8* %8568, align 1
  %8571 = getelementptr inbounds i8, i8* %8568, i64 1
  store i8 0, i8* %8571, align 1
  %8572 = and i64 %8522, 65280
  %8573 = icmp eq i64 %8572, 65280
  %8574 = select i1 %8573, i64 2, i64 1
  %8575 = getelementptr inbounds i8, i8* %8568, i64 %8574
  %8576 = trunc i64 %8522 to i8
  store i8 %8576, i8* %8575, align 1
  %8577 = getelementptr inbounds i8, i8* %8575, i64 1
  store i8 0, i8* %8577, align 1
  %8578 = and i64 %8522, 255
  %8579 = icmp eq i64 %8578, 255
  %8580 = select i1 %8579, i64 2, i64 1
  %8581 = getelementptr inbounds i8, i8* %8575, i64 %8580
  br label %8604

8582:                                             ; preds = %8516
  %8583 = lshr i64 %8522, 48
  %8584 = trunc i64 %8583 to i8
  %8585 = getelementptr inbounds i8, i8* %8497, i64 1
  store i8 %8584, i8* %8585, align 1
  %8586 = lshr i64 %8522, 40
  %8587 = trunc i64 %8586 to i8
  %8588 = getelementptr inbounds i8, i8* %8497, i64 2
  store i8 %8587, i8* %8588, align 1
  %8589 = lshr i64 %8522, 32
  %8590 = trunc i64 %8589 to i8
  %8591 = getelementptr inbounds i8, i8* %8497, i64 3
  store i8 %8590, i8* %8591, align 1
  %8592 = lshr i64 %8522, 24
  %8593 = trunc i64 %8592 to i8
  %8594 = getelementptr inbounds i8, i8* %8497, i64 4
  store i8 %8593, i8* %8594, align 1
  %8595 = lshr i64 %8522, 16
  %8596 = trunc i64 %8595 to i8
  %8597 = getelementptr inbounds i8, i8* %8497, i64 5
  store i8 %8596, i8* %8597, align 1
  %8598 = lshr i64 %8522, 8
  %8599 = trunc i64 %8598 to i8
  %8600 = getelementptr inbounds i8, i8* %8497, i64 6
  store i8 %8599, i8* %8600, align 1
  %8601 = trunc i64 %8522 to i8
  %8602 = getelementptr inbounds i8, i8* %8497, i64 7
  store i8 %8601, i8* %8602, align 1
  %8603 = getelementptr inbounds i8, i8* %8497, i64 8
  br label %8604

8604:                                             ; preds = %8582, %8529
  %8605 = phi i8* [ %8581, %8529 ], [ %8603, %8582 ]
  %8606 = add nsw i32 %8514, 64
  %8607 = sext i32 %8509 to i64
  br label %8613

8608:                                             ; preds = %8494
  %8609 = zext i32 %8513 to i64
  %8610 = shl i64 %8496, %8609
  %8611 = sext i32 %8509 to i64
  %8612 = or i64 %8610, %8611
  br label %8613

8613:                                             ; preds = %8604, %8608, %8363
  %8614 = phi i32 [ %8355, %8363 ], [ %8606, %8604 ], [ %8514, %8608 ]
  %8615 = phi i64 [ %8356, %8363 ], [ %8607, %8604 ], [ %8612, %8608 ]
  %8616 = phi i8* [ %8357, %8363 ], [ %8605, %8604 ], [ %8497, %8608 ]
  %8617 = phi i32 [ %8364, %8363 ], [ 0, %8604 ], [ 0, %8608 ]
  %8618 = getelementptr inbounds i16, i16* %1, i64 15
  %8619 = load i16, i16* %8618, align 2
  %8620 = sext i16 %8619 to i32
  %8621 = icmp eq i16 %8619, 0
  br i1 %8621, label %8622, label %8624

8622:                                             ; preds = %8613
  %8623 = add nuw nsw i32 %8617, 16
  br label %8872

8624:                                             ; preds = %8613
  %8625 = ashr i32 %8620, 31
  %8626 = add nsw i32 %8625, %8620
  %8627 = xor i32 %8626, %8625
  %8628 = sext i32 %8627 to i64
  %8629 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %8628
  %8630 = load i8, i8* %8629, align 1
  %8631 = zext i8 %8630 to i32
  %8632 = icmp sgt i32 %8617, 255
  br i1 %8632, label %8633, label %8753

8633:                                             ; preds = %8624
  %8634 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %8635 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %8636

8636:                                             ; preds = %8633, %8746
  %8637 = phi i32 [ %8617, %8633 ], [ %8641, %8746 ]
  %8638 = phi i8* [ %8616, %8633 ], [ %8749, %8746 ]
  %8639 = phi i64 [ %8615, %8633 ], [ %8748, %8746 ]
  %8640 = phi i32 [ %8614, %8633 ], [ %8747, %8746 ]
  %8641 = add nsw i32 %8637, -256
  %8642 = load i8, i8* %8634, align 4
  %8643 = sext i8 %8642 to i32
  %8644 = sub nsw i32 %8640, %8643
  %8645 = icmp slt i32 %8644, 0
  br i1 %8645, label %8646, label %8740

8646:                                             ; preds = %8636
  %8647 = zext i32 %8640 to i64
  %8648 = shl i64 %8639, %8647
  %8649 = load i32, i32* %8635, align 4
  %8650 = sub nsw i32 0, %8644
  %8651 = lshr i32 %8649, %8650
  %8652 = zext i32 %8651 to i64
  %8653 = or i64 %8648, %8652
  %8654 = and i64 %8653, -9187201950435737472
  %8655 = sub i64 -72340172838076674, %8653
  %8656 = and i64 %8654, %8655
  %8657 = icmp eq i64 %8656, 0
  %8658 = lshr i64 %8648, 56
  %8659 = trunc i64 %8658 to i8
  store i8 %8659, i8* %8638, align 1
  br i1 %8657, label %8713, label %8660

8660:                                             ; preds = %8646
  %8661 = getelementptr inbounds i8, i8* %8638, i64 1
  store i8 0, i8* %8661, align 1
  %8662 = icmp eq i64 %8658, 255
  %8663 = select i1 %8662, i64 2, i64 1
  %8664 = getelementptr inbounds i8, i8* %8638, i64 %8663
  %8665 = lshr i64 %8648, 48
  %8666 = trunc i64 %8665 to i8
  store i8 %8666, i8* %8664, align 1
  %8667 = getelementptr inbounds i8, i8* %8664, i64 1
  store i8 0, i8* %8667, align 1
  %8668 = and i64 %8648, 71776119061217280
  %8669 = icmp eq i64 %8668, 71776119061217280
  %8670 = select i1 %8669, i64 2, i64 1
  %8671 = getelementptr inbounds i8, i8* %8664, i64 %8670
  %8672 = lshr i64 %8648, 40
  %8673 = trunc i64 %8672 to i8
  store i8 %8673, i8* %8671, align 1
  %8674 = getelementptr inbounds i8, i8* %8671, i64 1
  store i8 0, i8* %8674, align 1
  %8675 = and i64 %8648, 280375465082880
  %8676 = icmp eq i64 %8675, 280375465082880
  %8677 = select i1 %8676, i64 2, i64 1
  %8678 = getelementptr inbounds i8, i8* %8671, i64 %8677
  %8679 = lshr i64 %8648, 32
  %8680 = trunc i64 %8679 to i8
  store i8 %8680, i8* %8678, align 1
  %8681 = getelementptr inbounds i8, i8* %8678, i64 1
  store i8 0, i8* %8681, align 1
  %8682 = and i64 %8648, 1095216660480
  %8683 = icmp eq i64 %8682, 1095216660480
  %8684 = select i1 %8683, i64 2, i64 1
  %8685 = getelementptr inbounds i8, i8* %8678, i64 %8684
  %8686 = lshr i64 %8653, 24
  %8687 = trunc i64 %8686 to i8
  store i8 %8687, i8* %8685, align 1
  %8688 = getelementptr inbounds i8, i8* %8685, i64 1
  store i8 0, i8* %8688, align 1
  %8689 = and i64 %8653, 4278190080
  %8690 = icmp eq i64 %8689, 4278190080
  %8691 = select i1 %8690, i64 2, i64 1
  %8692 = getelementptr inbounds i8, i8* %8685, i64 %8691
  %8693 = lshr i64 %8653, 16
  %8694 = trunc i64 %8693 to i8
  store i8 %8694, i8* %8692, align 1
  %8695 = getelementptr inbounds i8, i8* %8692, i64 1
  store i8 0, i8* %8695, align 1
  %8696 = and i64 %8653, 16711680
  %8697 = icmp eq i64 %8696, 16711680
  %8698 = select i1 %8697, i64 2, i64 1
  %8699 = getelementptr inbounds i8, i8* %8692, i64 %8698
  %8700 = lshr i64 %8653, 8
  %8701 = trunc i64 %8700 to i8
  store i8 %8701, i8* %8699, align 1
  %8702 = getelementptr inbounds i8, i8* %8699, i64 1
  store i8 0, i8* %8702, align 1
  %8703 = and i64 %8653, 65280
  %8704 = icmp eq i64 %8703, 65280
  %8705 = select i1 %8704, i64 2, i64 1
  %8706 = getelementptr inbounds i8, i8* %8699, i64 %8705
  %8707 = trunc i64 %8653 to i8
  store i8 %8707, i8* %8706, align 1
  %8708 = getelementptr inbounds i8, i8* %8706, i64 1
  store i8 0, i8* %8708, align 1
  %8709 = and i64 %8653, 255
  %8710 = icmp eq i64 %8709, 255
  %8711 = select i1 %8710, i64 2, i64 1
  %8712 = getelementptr inbounds i8, i8* %8706, i64 %8711
  br label %8735

8713:                                             ; preds = %8646
  %8714 = lshr i64 %8648, 48
  %8715 = trunc i64 %8714 to i8
  %8716 = getelementptr inbounds i8, i8* %8638, i64 1
  store i8 %8715, i8* %8716, align 1
  %8717 = lshr i64 %8648, 40
  %8718 = trunc i64 %8717 to i8
  %8719 = getelementptr inbounds i8, i8* %8638, i64 2
  store i8 %8718, i8* %8719, align 1
  %8720 = lshr i64 %8648, 32
  %8721 = trunc i64 %8720 to i8
  %8722 = getelementptr inbounds i8, i8* %8638, i64 3
  store i8 %8721, i8* %8722, align 1
  %8723 = lshr i64 %8653, 24
  %8724 = trunc i64 %8723 to i8
  %8725 = getelementptr inbounds i8, i8* %8638, i64 4
  store i8 %8724, i8* %8725, align 1
  %8726 = lshr i64 %8653, 16
  %8727 = trunc i64 %8726 to i8
  %8728 = getelementptr inbounds i8, i8* %8638, i64 5
  store i8 %8727, i8* %8728, align 1
  %8729 = lshr i64 %8653, 8
  %8730 = trunc i64 %8729 to i8
  %8731 = getelementptr inbounds i8, i8* %8638, i64 6
  store i8 %8730, i8* %8731, align 1
  %8732 = trunc i64 %8653 to i8
  %8733 = getelementptr inbounds i8, i8* %8638, i64 7
  store i8 %8732, i8* %8733, align 1
  %8734 = getelementptr inbounds i8, i8* %8638, i64 8
  br label %8735

8735:                                             ; preds = %8713, %8660
  %8736 = phi i8* [ %8712, %8660 ], [ %8734, %8713 ]
  %8737 = add nsw i32 %8644, 64
  %8738 = load i32, i32* %8635, align 4
  %8739 = zext i32 %8738 to i64
  br label %8746

8740:                                             ; preds = %8636
  %8741 = zext i32 %8643 to i64
  %8742 = shl i64 %8639, %8741
  %8743 = load i32, i32* %8635, align 4
  %8744 = zext i32 %8743 to i64
  %8745 = or i64 %8742, %8744
  br label %8746

8746:                                             ; preds = %8740, %8735
  %8747 = phi i32 [ %8737, %8735 ], [ %8644, %8740 ]
  %8748 = phi i64 [ %8739, %8735 ], [ %8745, %8740 ]
  %8749 = phi i8* [ %8736, %8735 ], [ %8638, %8740 ]
  %8750 = icmp sgt i32 %8641, 255
  br i1 %8750, label %8636, label %8751

8751:                                             ; preds = %8746
  %8752 = and i32 %8617, 255
  br label %8753

8753:                                             ; preds = %8751, %8624
  %8754 = phi i32 [ %8614, %8624 ], [ %8747, %8751 ]
  %8755 = phi i64 [ %8615, %8624 ], [ %8748, %8751 ]
  %8756 = phi i8* [ %8616, %8624 ], [ %8749, %8751 ]
  %8757 = phi i32 [ %8617, %8624 ], [ %8752, %8751 ]
  %8758 = add nsw i32 %8757, %8631
  %8759 = zext i8 %8630 to i64
  %8760 = shl nsw i64 -1, %8759
  %8761 = trunc i64 %8760 to i32
  %8762 = xor i32 %8761, -1
  %8763 = and i32 %8626, %8762
  %8764 = sext i32 %8758 to i64
  %8765 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %8764
  %8766 = load i32, i32* %8765, align 4
  %8767 = shl i32 %8766, %8631
  %8768 = or i32 %8767, %8763
  %8769 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %8764
  %8770 = load i8, i8* %8769, align 1
  %8771 = sext i8 %8770 to i32
  %8772 = add nsw i32 %8771, %8631
  %8773 = sub nsw i32 %8754, %8772
  %8774 = icmp slt i32 %8773, 0
  br i1 %8774, label %8775, label %8867

8775:                                             ; preds = %8753
  %8776 = zext i32 %8754 to i64
  %8777 = shl i64 %8755, %8776
  %8778 = sub nsw i32 0, %8773
  %8779 = ashr i32 %8768, %8778
  %8780 = sext i32 %8779 to i64
  %8781 = or i64 %8777, %8780
  %8782 = and i64 %8781, -9187201950435737472
  %8783 = sub i64 -72340172838076674, %8781
  %8784 = and i64 %8782, %8783
  %8785 = icmp eq i64 %8784, 0
  %8786 = lshr i64 %8781, 56
  %8787 = trunc i64 %8786 to i8
  store i8 %8787, i8* %8756, align 1
  br i1 %8785, label %8841, label %8788

8788:                                             ; preds = %8775
  %8789 = getelementptr inbounds i8, i8* %8756, i64 1
  store i8 0, i8* %8789, align 1
  %8790 = icmp eq i64 %8786, 255
  %8791 = select i1 %8790, i64 2, i64 1
  %8792 = getelementptr inbounds i8, i8* %8756, i64 %8791
  %8793 = lshr i64 %8781, 48
  %8794 = trunc i64 %8793 to i8
  store i8 %8794, i8* %8792, align 1
  %8795 = getelementptr inbounds i8, i8* %8792, i64 1
  store i8 0, i8* %8795, align 1
  %8796 = and i64 %8781, 71776119061217280
  %8797 = icmp eq i64 %8796, 71776119061217280
  %8798 = select i1 %8797, i64 2, i64 1
  %8799 = getelementptr inbounds i8, i8* %8792, i64 %8798
  %8800 = lshr i64 %8781, 40
  %8801 = trunc i64 %8800 to i8
  store i8 %8801, i8* %8799, align 1
  %8802 = getelementptr inbounds i8, i8* %8799, i64 1
  store i8 0, i8* %8802, align 1
  %8803 = and i64 %8781, 280375465082880
  %8804 = icmp eq i64 %8803, 280375465082880
  %8805 = select i1 %8804, i64 2, i64 1
  %8806 = getelementptr inbounds i8, i8* %8799, i64 %8805
  %8807 = lshr i64 %8781, 32
  %8808 = trunc i64 %8807 to i8
  store i8 %8808, i8* %8806, align 1
  %8809 = getelementptr inbounds i8, i8* %8806, i64 1
  store i8 0, i8* %8809, align 1
  %8810 = and i64 %8781, 1095216660480
  %8811 = icmp eq i64 %8810, 1095216660480
  %8812 = select i1 %8811, i64 2, i64 1
  %8813 = getelementptr inbounds i8, i8* %8806, i64 %8812
  %8814 = lshr i64 %8781, 24
  %8815 = trunc i64 %8814 to i8
  store i8 %8815, i8* %8813, align 1
  %8816 = getelementptr inbounds i8, i8* %8813, i64 1
  store i8 0, i8* %8816, align 1
  %8817 = and i64 %8781, 4278190080
  %8818 = icmp eq i64 %8817, 4278190080
  %8819 = select i1 %8818, i64 2, i64 1
  %8820 = getelementptr inbounds i8, i8* %8813, i64 %8819
  %8821 = lshr i64 %8781, 16
  %8822 = trunc i64 %8821 to i8
  store i8 %8822, i8* %8820, align 1
  %8823 = getelementptr inbounds i8, i8* %8820, i64 1
  store i8 0, i8* %8823, align 1
  %8824 = and i64 %8781, 16711680
  %8825 = icmp eq i64 %8824, 16711680
  %8826 = select i1 %8825, i64 2, i64 1
  %8827 = getelementptr inbounds i8, i8* %8820, i64 %8826
  %8828 = lshr i64 %8781, 8
  %8829 = trunc i64 %8828 to i8
  store i8 %8829, i8* %8827, align 1
  %8830 = getelementptr inbounds i8, i8* %8827, i64 1
  store i8 0, i8* %8830, align 1
  %8831 = and i64 %8781, 65280
  %8832 = icmp eq i64 %8831, 65280
  %8833 = select i1 %8832, i64 2, i64 1
  %8834 = getelementptr inbounds i8, i8* %8827, i64 %8833
  %8835 = trunc i64 %8781 to i8
  store i8 %8835, i8* %8834, align 1
  %8836 = getelementptr inbounds i8, i8* %8834, i64 1
  store i8 0, i8* %8836, align 1
  %8837 = and i64 %8781, 255
  %8838 = icmp eq i64 %8837, 255
  %8839 = select i1 %8838, i64 2, i64 1
  %8840 = getelementptr inbounds i8, i8* %8834, i64 %8839
  br label %8863

8841:                                             ; preds = %8775
  %8842 = lshr i64 %8781, 48
  %8843 = trunc i64 %8842 to i8
  %8844 = getelementptr inbounds i8, i8* %8756, i64 1
  store i8 %8843, i8* %8844, align 1
  %8845 = lshr i64 %8781, 40
  %8846 = trunc i64 %8845 to i8
  %8847 = getelementptr inbounds i8, i8* %8756, i64 2
  store i8 %8846, i8* %8847, align 1
  %8848 = lshr i64 %8781, 32
  %8849 = trunc i64 %8848 to i8
  %8850 = getelementptr inbounds i8, i8* %8756, i64 3
  store i8 %8849, i8* %8850, align 1
  %8851 = lshr i64 %8781, 24
  %8852 = trunc i64 %8851 to i8
  %8853 = getelementptr inbounds i8, i8* %8756, i64 4
  store i8 %8852, i8* %8853, align 1
  %8854 = lshr i64 %8781, 16
  %8855 = trunc i64 %8854 to i8
  %8856 = getelementptr inbounds i8, i8* %8756, i64 5
  store i8 %8855, i8* %8856, align 1
  %8857 = lshr i64 %8781, 8
  %8858 = trunc i64 %8857 to i8
  %8859 = getelementptr inbounds i8, i8* %8756, i64 6
  store i8 %8858, i8* %8859, align 1
  %8860 = trunc i64 %8781 to i8
  %8861 = getelementptr inbounds i8, i8* %8756, i64 7
  store i8 %8860, i8* %8861, align 1
  %8862 = getelementptr inbounds i8, i8* %8756, i64 8
  br label %8863

8863:                                             ; preds = %8841, %8788
  %8864 = phi i8* [ %8840, %8788 ], [ %8862, %8841 ]
  %8865 = add nsw i32 %8773, 64
  %8866 = sext i32 %8768 to i64
  br label %8872

8867:                                             ; preds = %8753
  %8868 = zext i32 %8772 to i64
  %8869 = shl i64 %8755, %8868
  %8870 = sext i32 %8768 to i64
  %8871 = or i64 %8869, %8870
  br label %8872

8872:                                             ; preds = %8863, %8867, %8622
  %8873 = phi i32 [ %8614, %8622 ], [ %8865, %8863 ], [ %8773, %8867 ]
  %8874 = phi i64 [ %8615, %8622 ], [ %8866, %8863 ], [ %8871, %8867 ]
  %8875 = phi i8* [ %8616, %8622 ], [ %8864, %8863 ], [ %8756, %8867 ]
  %8876 = phi i32 [ %8623, %8622 ], [ 0, %8863 ], [ 0, %8867 ]
  %8877 = getelementptr inbounds i16, i16* %1, i64 23
  %8878 = load i16, i16* %8877, align 2
  %8879 = sext i16 %8878 to i32
  %8880 = icmp eq i16 %8878, 0
  br i1 %8880, label %8881, label %8883

8881:                                             ; preds = %8872
  %8882 = add nuw nsw i32 %8876, 16
  br label %9131

8883:                                             ; preds = %8872
  %8884 = ashr i32 %8879, 31
  %8885 = add nsw i32 %8884, %8879
  %8886 = xor i32 %8885, %8884
  %8887 = sext i32 %8886 to i64
  %8888 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %8887
  %8889 = load i8, i8* %8888, align 1
  %8890 = zext i8 %8889 to i32
  %8891 = icmp sgt i32 %8876, 255
  br i1 %8891, label %8892, label %9012

8892:                                             ; preds = %8883
  %8893 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %8894 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %8895

8895:                                             ; preds = %8892, %9005
  %8896 = phi i32 [ %8876, %8892 ], [ %8900, %9005 ]
  %8897 = phi i8* [ %8875, %8892 ], [ %9008, %9005 ]
  %8898 = phi i64 [ %8874, %8892 ], [ %9007, %9005 ]
  %8899 = phi i32 [ %8873, %8892 ], [ %9006, %9005 ]
  %8900 = add nsw i32 %8896, -256
  %8901 = load i8, i8* %8893, align 4
  %8902 = sext i8 %8901 to i32
  %8903 = sub nsw i32 %8899, %8902
  %8904 = icmp slt i32 %8903, 0
  br i1 %8904, label %8905, label %8999

8905:                                             ; preds = %8895
  %8906 = zext i32 %8899 to i64
  %8907 = shl i64 %8898, %8906
  %8908 = load i32, i32* %8894, align 4
  %8909 = sub nsw i32 0, %8903
  %8910 = lshr i32 %8908, %8909
  %8911 = zext i32 %8910 to i64
  %8912 = or i64 %8907, %8911
  %8913 = and i64 %8912, -9187201950435737472
  %8914 = sub i64 -72340172838076674, %8912
  %8915 = and i64 %8913, %8914
  %8916 = icmp eq i64 %8915, 0
  %8917 = lshr i64 %8907, 56
  %8918 = trunc i64 %8917 to i8
  store i8 %8918, i8* %8897, align 1
  br i1 %8916, label %8972, label %8919

8919:                                             ; preds = %8905
  %8920 = getelementptr inbounds i8, i8* %8897, i64 1
  store i8 0, i8* %8920, align 1
  %8921 = icmp eq i64 %8917, 255
  %8922 = select i1 %8921, i64 2, i64 1
  %8923 = getelementptr inbounds i8, i8* %8897, i64 %8922
  %8924 = lshr i64 %8907, 48
  %8925 = trunc i64 %8924 to i8
  store i8 %8925, i8* %8923, align 1
  %8926 = getelementptr inbounds i8, i8* %8923, i64 1
  store i8 0, i8* %8926, align 1
  %8927 = and i64 %8907, 71776119061217280
  %8928 = icmp eq i64 %8927, 71776119061217280
  %8929 = select i1 %8928, i64 2, i64 1
  %8930 = getelementptr inbounds i8, i8* %8923, i64 %8929
  %8931 = lshr i64 %8907, 40
  %8932 = trunc i64 %8931 to i8
  store i8 %8932, i8* %8930, align 1
  %8933 = getelementptr inbounds i8, i8* %8930, i64 1
  store i8 0, i8* %8933, align 1
  %8934 = and i64 %8907, 280375465082880
  %8935 = icmp eq i64 %8934, 280375465082880
  %8936 = select i1 %8935, i64 2, i64 1
  %8937 = getelementptr inbounds i8, i8* %8930, i64 %8936
  %8938 = lshr i64 %8907, 32
  %8939 = trunc i64 %8938 to i8
  store i8 %8939, i8* %8937, align 1
  %8940 = getelementptr inbounds i8, i8* %8937, i64 1
  store i8 0, i8* %8940, align 1
  %8941 = and i64 %8907, 1095216660480
  %8942 = icmp eq i64 %8941, 1095216660480
  %8943 = select i1 %8942, i64 2, i64 1
  %8944 = getelementptr inbounds i8, i8* %8937, i64 %8943
  %8945 = lshr i64 %8912, 24
  %8946 = trunc i64 %8945 to i8
  store i8 %8946, i8* %8944, align 1
  %8947 = getelementptr inbounds i8, i8* %8944, i64 1
  store i8 0, i8* %8947, align 1
  %8948 = and i64 %8912, 4278190080
  %8949 = icmp eq i64 %8948, 4278190080
  %8950 = select i1 %8949, i64 2, i64 1
  %8951 = getelementptr inbounds i8, i8* %8944, i64 %8950
  %8952 = lshr i64 %8912, 16
  %8953 = trunc i64 %8952 to i8
  store i8 %8953, i8* %8951, align 1
  %8954 = getelementptr inbounds i8, i8* %8951, i64 1
  store i8 0, i8* %8954, align 1
  %8955 = and i64 %8912, 16711680
  %8956 = icmp eq i64 %8955, 16711680
  %8957 = select i1 %8956, i64 2, i64 1
  %8958 = getelementptr inbounds i8, i8* %8951, i64 %8957
  %8959 = lshr i64 %8912, 8
  %8960 = trunc i64 %8959 to i8
  store i8 %8960, i8* %8958, align 1
  %8961 = getelementptr inbounds i8, i8* %8958, i64 1
  store i8 0, i8* %8961, align 1
  %8962 = and i64 %8912, 65280
  %8963 = icmp eq i64 %8962, 65280
  %8964 = select i1 %8963, i64 2, i64 1
  %8965 = getelementptr inbounds i8, i8* %8958, i64 %8964
  %8966 = trunc i64 %8912 to i8
  store i8 %8966, i8* %8965, align 1
  %8967 = getelementptr inbounds i8, i8* %8965, i64 1
  store i8 0, i8* %8967, align 1
  %8968 = and i64 %8912, 255
  %8969 = icmp eq i64 %8968, 255
  %8970 = select i1 %8969, i64 2, i64 1
  %8971 = getelementptr inbounds i8, i8* %8965, i64 %8970
  br label %8994

8972:                                             ; preds = %8905
  %8973 = lshr i64 %8907, 48
  %8974 = trunc i64 %8973 to i8
  %8975 = getelementptr inbounds i8, i8* %8897, i64 1
  store i8 %8974, i8* %8975, align 1
  %8976 = lshr i64 %8907, 40
  %8977 = trunc i64 %8976 to i8
  %8978 = getelementptr inbounds i8, i8* %8897, i64 2
  store i8 %8977, i8* %8978, align 1
  %8979 = lshr i64 %8907, 32
  %8980 = trunc i64 %8979 to i8
  %8981 = getelementptr inbounds i8, i8* %8897, i64 3
  store i8 %8980, i8* %8981, align 1
  %8982 = lshr i64 %8912, 24
  %8983 = trunc i64 %8982 to i8
  %8984 = getelementptr inbounds i8, i8* %8897, i64 4
  store i8 %8983, i8* %8984, align 1
  %8985 = lshr i64 %8912, 16
  %8986 = trunc i64 %8985 to i8
  %8987 = getelementptr inbounds i8, i8* %8897, i64 5
  store i8 %8986, i8* %8987, align 1
  %8988 = lshr i64 %8912, 8
  %8989 = trunc i64 %8988 to i8
  %8990 = getelementptr inbounds i8, i8* %8897, i64 6
  store i8 %8989, i8* %8990, align 1
  %8991 = trunc i64 %8912 to i8
  %8992 = getelementptr inbounds i8, i8* %8897, i64 7
  store i8 %8991, i8* %8992, align 1
  %8993 = getelementptr inbounds i8, i8* %8897, i64 8
  br label %8994

8994:                                             ; preds = %8972, %8919
  %8995 = phi i8* [ %8971, %8919 ], [ %8993, %8972 ]
  %8996 = add nsw i32 %8903, 64
  %8997 = load i32, i32* %8894, align 4
  %8998 = zext i32 %8997 to i64
  br label %9005

8999:                                             ; preds = %8895
  %9000 = zext i32 %8902 to i64
  %9001 = shl i64 %8898, %9000
  %9002 = load i32, i32* %8894, align 4
  %9003 = zext i32 %9002 to i64
  %9004 = or i64 %9001, %9003
  br label %9005

9005:                                             ; preds = %8999, %8994
  %9006 = phi i32 [ %8996, %8994 ], [ %8903, %8999 ]
  %9007 = phi i64 [ %8998, %8994 ], [ %9004, %8999 ]
  %9008 = phi i8* [ %8995, %8994 ], [ %8897, %8999 ]
  %9009 = icmp sgt i32 %8900, 255
  br i1 %9009, label %8895, label %9010

9010:                                             ; preds = %9005
  %9011 = and i32 %8876, 255
  br label %9012

9012:                                             ; preds = %9010, %8883
  %9013 = phi i32 [ %8873, %8883 ], [ %9006, %9010 ]
  %9014 = phi i64 [ %8874, %8883 ], [ %9007, %9010 ]
  %9015 = phi i8* [ %8875, %8883 ], [ %9008, %9010 ]
  %9016 = phi i32 [ %8876, %8883 ], [ %9011, %9010 ]
  %9017 = add nsw i32 %9016, %8890
  %9018 = zext i8 %8889 to i64
  %9019 = shl nsw i64 -1, %9018
  %9020 = trunc i64 %9019 to i32
  %9021 = xor i32 %9020, -1
  %9022 = and i32 %8885, %9021
  %9023 = sext i32 %9017 to i64
  %9024 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %9023
  %9025 = load i32, i32* %9024, align 4
  %9026 = shl i32 %9025, %8890
  %9027 = or i32 %9026, %9022
  %9028 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %9023
  %9029 = load i8, i8* %9028, align 1
  %9030 = sext i8 %9029 to i32
  %9031 = add nsw i32 %9030, %8890
  %9032 = sub nsw i32 %9013, %9031
  %9033 = icmp slt i32 %9032, 0
  br i1 %9033, label %9034, label %9126

9034:                                             ; preds = %9012
  %9035 = zext i32 %9013 to i64
  %9036 = shl i64 %9014, %9035
  %9037 = sub nsw i32 0, %9032
  %9038 = ashr i32 %9027, %9037
  %9039 = sext i32 %9038 to i64
  %9040 = or i64 %9036, %9039
  %9041 = and i64 %9040, -9187201950435737472
  %9042 = sub i64 -72340172838076674, %9040
  %9043 = and i64 %9041, %9042
  %9044 = icmp eq i64 %9043, 0
  %9045 = lshr i64 %9040, 56
  %9046 = trunc i64 %9045 to i8
  store i8 %9046, i8* %9015, align 1
  br i1 %9044, label %9100, label %9047

9047:                                             ; preds = %9034
  %9048 = getelementptr inbounds i8, i8* %9015, i64 1
  store i8 0, i8* %9048, align 1
  %9049 = icmp eq i64 %9045, 255
  %9050 = select i1 %9049, i64 2, i64 1
  %9051 = getelementptr inbounds i8, i8* %9015, i64 %9050
  %9052 = lshr i64 %9040, 48
  %9053 = trunc i64 %9052 to i8
  store i8 %9053, i8* %9051, align 1
  %9054 = getelementptr inbounds i8, i8* %9051, i64 1
  store i8 0, i8* %9054, align 1
  %9055 = and i64 %9040, 71776119061217280
  %9056 = icmp eq i64 %9055, 71776119061217280
  %9057 = select i1 %9056, i64 2, i64 1
  %9058 = getelementptr inbounds i8, i8* %9051, i64 %9057
  %9059 = lshr i64 %9040, 40
  %9060 = trunc i64 %9059 to i8
  store i8 %9060, i8* %9058, align 1
  %9061 = getelementptr inbounds i8, i8* %9058, i64 1
  store i8 0, i8* %9061, align 1
  %9062 = and i64 %9040, 280375465082880
  %9063 = icmp eq i64 %9062, 280375465082880
  %9064 = select i1 %9063, i64 2, i64 1
  %9065 = getelementptr inbounds i8, i8* %9058, i64 %9064
  %9066 = lshr i64 %9040, 32
  %9067 = trunc i64 %9066 to i8
  store i8 %9067, i8* %9065, align 1
  %9068 = getelementptr inbounds i8, i8* %9065, i64 1
  store i8 0, i8* %9068, align 1
  %9069 = and i64 %9040, 1095216660480
  %9070 = icmp eq i64 %9069, 1095216660480
  %9071 = select i1 %9070, i64 2, i64 1
  %9072 = getelementptr inbounds i8, i8* %9065, i64 %9071
  %9073 = lshr i64 %9040, 24
  %9074 = trunc i64 %9073 to i8
  store i8 %9074, i8* %9072, align 1
  %9075 = getelementptr inbounds i8, i8* %9072, i64 1
  store i8 0, i8* %9075, align 1
  %9076 = and i64 %9040, 4278190080
  %9077 = icmp eq i64 %9076, 4278190080
  %9078 = select i1 %9077, i64 2, i64 1
  %9079 = getelementptr inbounds i8, i8* %9072, i64 %9078
  %9080 = lshr i64 %9040, 16
  %9081 = trunc i64 %9080 to i8
  store i8 %9081, i8* %9079, align 1
  %9082 = getelementptr inbounds i8, i8* %9079, i64 1
  store i8 0, i8* %9082, align 1
  %9083 = and i64 %9040, 16711680
  %9084 = icmp eq i64 %9083, 16711680
  %9085 = select i1 %9084, i64 2, i64 1
  %9086 = getelementptr inbounds i8, i8* %9079, i64 %9085
  %9087 = lshr i64 %9040, 8
  %9088 = trunc i64 %9087 to i8
  store i8 %9088, i8* %9086, align 1
  %9089 = getelementptr inbounds i8, i8* %9086, i64 1
  store i8 0, i8* %9089, align 1
  %9090 = and i64 %9040, 65280
  %9091 = icmp eq i64 %9090, 65280
  %9092 = select i1 %9091, i64 2, i64 1
  %9093 = getelementptr inbounds i8, i8* %9086, i64 %9092
  %9094 = trunc i64 %9040 to i8
  store i8 %9094, i8* %9093, align 1
  %9095 = getelementptr inbounds i8, i8* %9093, i64 1
  store i8 0, i8* %9095, align 1
  %9096 = and i64 %9040, 255
  %9097 = icmp eq i64 %9096, 255
  %9098 = select i1 %9097, i64 2, i64 1
  %9099 = getelementptr inbounds i8, i8* %9093, i64 %9098
  br label %9122

9100:                                             ; preds = %9034
  %9101 = lshr i64 %9040, 48
  %9102 = trunc i64 %9101 to i8
  %9103 = getelementptr inbounds i8, i8* %9015, i64 1
  store i8 %9102, i8* %9103, align 1
  %9104 = lshr i64 %9040, 40
  %9105 = trunc i64 %9104 to i8
  %9106 = getelementptr inbounds i8, i8* %9015, i64 2
  store i8 %9105, i8* %9106, align 1
  %9107 = lshr i64 %9040, 32
  %9108 = trunc i64 %9107 to i8
  %9109 = getelementptr inbounds i8, i8* %9015, i64 3
  store i8 %9108, i8* %9109, align 1
  %9110 = lshr i64 %9040, 24
  %9111 = trunc i64 %9110 to i8
  %9112 = getelementptr inbounds i8, i8* %9015, i64 4
  store i8 %9111, i8* %9112, align 1
  %9113 = lshr i64 %9040, 16
  %9114 = trunc i64 %9113 to i8
  %9115 = getelementptr inbounds i8, i8* %9015, i64 5
  store i8 %9114, i8* %9115, align 1
  %9116 = lshr i64 %9040, 8
  %9117 = trunc i64 %9116 to i8
  %9118 = getelementptr inbounds i8, i8* %9015, i64 6
  store i8 %9117, i8* %9118, align 1
  %9119 = trunc i64 %9040 to i8
  %9120 = getelementptr inbounds i8, i8* %9015, i64 7
  store i8 %9119, i8* %9120, align 1
  %9121 = getelementptr inbounds i8, i8* %9015, i64 8
  br label %9122

9122:                                             ; preds = %9100, %9047
  %9123 = phi i8* [ %9099, %9047 ], [ %9121, %9100 ]
  %9124 = add nsw i32 %9032, 64
  %9125 = sext i32 %9027 to i64
  br label %9131

9126:                                             ; preds = %9012
  %9127 = zext i32 %9031 to i64
  %9128 = shl i64 %9014, %9127
  %9129 = sext i32 %9027 to i64
  %9130 = or i64 %9128, %9129
  br label %9131

9131:                                             ; preds = %9122, %9126, %8881
  %9132 = phi i32 [ %8873, %8881 ], [ %9124, %9122 ], [ %9032, %9126 ]
  %9133 = phi i64 [ %8874, %8881 ], [ %9125, %9122 ], [ %9130, %9126 ]
  %9134 = phi i8* [ %8875, %8881 ], [ %9123, %9122 ], [ %9015, %9126 ]
  %9135 = phi i32 [ %8882, %8881 ], [ 0, %9122 ], [ 0, %9126 ]
  %9136 = getelementptr inbounds i16, i16* %1, i64 30
  %9137 = load i16, i16* %9136, align 2
  %9138 = sext i16 %9137 to i32
  %9139 = icmp eq i16 %9137, 0
  br i1 %9139, label %9140, label %9142

9140:                                             ; preds = %9131
  %9141 = add nuw nsw i32 %9135, 16
  br label %9390

9142:                                             ; preds = %9131
  %9143 = ashr i32 %9138, 31
  %9144 = add nsw i32 %9143, %9138
  %9145 = xor i32 %9144, %9143
  %9146 = sext i32 %9145 to i64
  %9147 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %9146
  %9148 = load i8, i8* %9147, align 1
  %9149 = zext i8 %9148 to i32
  %9150 = icmp sgt i32 %9135, 255
  br i1 %9150, label %9151, label %9271

9151:                                             ; preds = %9142
  %9152 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %9153 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %9154

9154:                                             ; preds = %9151, %9264
  %9155 = phi i32 [ %9135, %9151 ], [ %9159, %9264 ]
  %9156 = phi i8* [ %9134, %9151 ], [ %9267, %9264 ]
  %9157 = phi i64 [ %9133, %9151 ], [ %9266, %9264 ]
  %9158 = phi i32 [ %9132, %9151 ], [ %9265, %9264 ]
  %9159 = add nsw i32 %9155, -256
  %9160 = load i8, i8* %9152, align 4
  %9161 = sext i8 %9160 to i32
  %9162 = sub nsw i32 %9158, %9161
  %9163 = icmp slt i32 %9162, 0
  br i1 %9163, label %9164, label %9258

9164:                                             ; preds = %9154
  %9165 = zext i32 %9158 to i64
  %9166 = shl i64 %9157, %9165
  %9167 = load i32, i32* %9153, align 4
  %9168 = sub nsw i32 0, %9162
  %9169 = lshr i32 %9167, %9168
  %9170 = zext i32 %9169 to i64
  %9171 = or i64 %9166, %9170
  %9172 = and i64 %9171, -9187201950435737472
  %9173 = sub i64 -72340172838076674, %9171
  %9174 = and i64 %9172, %9173
  %9175 = icmp eq i64 %9174, 0
  %9176 = lshr i64 %9166, 56
  %9177 = trunc i64 %9176 to i8
  store i8 %9177, i8* %9156, align 1
  br i1 %9175, label %9231, label %9178

9178:                                             ; preds = %9164
  %9179 = getelementptr inbounds i8, i8* %9156, i64 1
  store i8 0, i8* %9179, align 1
  %9180 = icmp eq i64 %9176, 255
  %9181 = select i1 %9180, i64 2, i64 1
  %9182 = getelementptr inbounds i8, i8* %9156, i64 %9181
  %9183 = lshr i64 %9166, 48
  %9184 = trunc i64 %9183 to i8
  store i8 %9184, i8* %9182, align 1
  %9185 = getelementptr inbounds i8, i8* %9182, i64 1
  store i8 0, i8* %9185, align 1
  %9186 = and i64 %9166, 71776119061217280
  %9187 = icmp eq i64 %9186, 71776119061217280
  %9188 = select i1 %9187, i64 2, i64 1
  %9189 = getelementptr inbounds i8, i8* %9182, i64 %9188
  %9190 = lshr i64 %9166, 40
  %9191 = trunc i64 %9190 to i8
  store i8 %9191, i8* %9189, align 1
  %9192 = getelementptr inbounds i8, i8* %9189, i64 1
  store i8 0, i8* %9192, align 1
  %9193 = and i64 %9166, 280375465082880
  %9194 = icmp eq i64 %9193, 280375465082880
  %9195 = select i1 %9194, i64 2, i64 1
  %9196 = getelementptr inbounds i8, i8* %9189, i64 %9195
  %9197 = lshr i64 %9166, 32
  %9198 = trunc i64 %9197 to i8
  store i8 %9198, i8* %9196, align 1
  %9199 = getelementptr inbounds i8, i8* %9196, i64 1
  store i8 0, i8* %9199, align 1
  %9200 = and i64 %9166, 1095216660480
  %9201 = icmp eq i64 %9200, 1095216660480
  %9202 = select i1 %9201, i64 2, i64 1
  %9203 = getelementptr inbounds i8, i8* %9196, i64 %9202
  %9204 = lshr i64 %9171, 24
  %9205 = trunc i64 %9204 to i8
  store i8 %9205, i8* %9203, align 1
  %9206 = getelementptr inbounds i8, i8* %9203, i64 1
  store i8 0, i8* %9206, align 1
  %9207 = and i64 %9171, 4278190080
  %9208 = icmp eq i64 %9207, 4278190080
  %9209 = select i1 %9208, i64 2, i64 1
  %9210 = getelementptr inbounds i8, i8* %9203, i64 %9209
  %9211 = lshr i64 %9171, 16
  %9212 = trunc i64 %9211 to i8
  store i8 %9212, i8* %9210, align 1
  %9213 = getelementptr inbounds i8, i8* %9210, i64 1
  store i8 0, i8* %9213, align 1
  %9214 = and i64 %9171, 16711680
  %9215 = icmp eq i64 %9214, 16711680
  %9216 = select i1 %9215, i64 2, i64 1
  %9217 = getelementptr inbounds i8, i8* %9210, i64 %9216
  %9218 = lshr i64 %9171, 8
  %9219 = trunc i64 %9218 to i8
  store i8 %9219, i8* %9217, align 1
  %9220 = getelementptr inbounds i8, i8* %9217, i64 1
  store i8 0, i8* %9220, align 1
  %9221 = and i64 %9171, 65280
  %9222 = icmp eq i64 %9221, 65280
  %9223 = select i1 %9222, i64 2, i64 1
  %9224 = getelementptr inbounds i8, i8* %9217, i64 %9223
  %9225 = trunc i64 %9171 to i8
  store i8 %9225, i8* %9224, align 1
  %9226 = getelementptr inbounds i8, i8* %9224, i64 1
  store i8 0, i8* %9226, align 1
  %9227 = and i64 %9171, 255
  %9228 = icmp eq i64 %9227, 255
  %9229 = select i1 %9228, i64 2, i64 1
  %9230 = getelementptr inbounds i8, i8* %9224, i64 %9229
  br label %9253

9231:                                             ; preds = %9164
  %9232 = lshr i64 %9166, 48
  %9233 = trunc i64 %9232 to i8
  %9234 = getelementptr inbounds i8, i8* %9156, i64 1
  store i8 %9233, i8* %9234, align 1
  %9235 = lshr i64 %9166, 40
  %9236 = trunc i64 %9235 to i8
  %9237 = getelementptr inbounds i8, i8* %9156, i64 2
  store i8 %9236, i8* %9237, align 1
  %9238 = lshr i64 %9166, 32
  %9239 = trunc i64 %9238 to i8
  %9240 = getelementptr inbounds i8, i8* %9156, i64 3
  store i8 %9239, i8* %9240, align 1
  %9241 = lshr i64 %9171, 24
  %9242 = trunc i64 %9241 to i8
  %9243 = getelementptr inbounds i8, i8* %9156, i64 4
  store i8 %9242, i8* %9243, align 1
  %9244 = lshr i64 %9171, 16
  %9245 = trunc i64 %9244 to i8
  %9246 = getelementptr inbounds i8, i8* %9156, i64 5
  store i8 %9245, i8* %9246, align 1
  %9247 = lshr i64 %9171, 8
  %9248 = trunc i64 %9247 to i8
  %9249 = getelementptr inbounds i8, i8* %9156, i64 6
  store i8 %9248, i8* %9249, align 1
  %9250 = trunc i64 %9171 to i8
  %9251 = getelementptr inbounds i8, i8* %9156, i64 7
  store i8 %9250, i8* %9251, align 1
  %9252 = getelementptr inbounds i8, i8* %9156, i64 8
  br label %9253

9253:                                             ; preds = %9231, %9178
  %9254 = phi i8* [ %9230, %9178 ], [ %9252, %9231 ]
  %9255 = add nsw i32 %9162, 64
  %9256 = load i32, i32* %9153, align 4
  %9257 = zext i32 %9256 to i64
  br label %9264

9258:                                             ; preds = %9154
  %9259 = zext i32 %9161 to i64
  %9260 = shl i64 %9157, %9259
  %9261 = load i32, i32* %9153, align 4
  %9262 = zext i32 %9261 to i64
  %9263 = or i64 %9260, %9262
  br label %9264

9264:                                             ; preds = %9258, %9253
  %9265 = phi i32 [ %9255, %9253 ], [ %9162, %9258 ]
  %9266 = phi i64 [ %9257, %9253 ], [ %9263, %9258 ]
  %9267 = phi i8* [ %9254, %9253 ], [ %9156, %9258 ]
  %9268 = icmp sgt i32 %9159, 255
  br i1 %9268, label %9154, label %9269

9269:                                             ; preds = %9264
  %9270 = and i32 %9135, 255
  br label %9271

9271:                                             ; preds = %9269, %9142
  %9272 = phi i32 [ %9132, %9142 ], [ %9265, %9269 ]
  %9273 = phi i64 [ %9133, %9142 ], [ %9266, %9269 ]
  %9274 = phi i8* [ %9134, %9142 ], [ %9267, %9269 ]
  %9275 = phi i32 [ %9135, %9142 ], [ %9270, %9269 ]
  %9276 = add nsw i32 %9275, %9149
  %9277 = zext i8 %9148 to i64
  %9278 = shl nsw i64 -1, %9277
  %9279 = trunc i64 %9278 to i32
  %9280 = xor i32 %9279, -1
  %9281 = and i32 %9144, %9280
  %9282 = sext i32 %9276 to i64
  %9283 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %9282
  %9284 = load i32, i32* %9283, align 4
  %9285 = shl i32 %9284, %9149
  %9286 = or i32 %9285, %9281
  %9287 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %9282
  %9288 = load i8, i8* %9287, align 1
  %9289 = sext i8 %9288 to i32
  %9290 = add nsw i32 %9289, %9149
  %9291 = sub nsw i32 %9272, %9290
  %9292 = icmp slt i32 %9291, 0
  br i1 %9292, label %9293, label %9385

9293:                                             ; preds = %9271
  %9294 = zext i32 %9272 to i64
  %9295 = shl i64 %9273, %9294
  %9296 = sub nsw i32 0, %9291
  %9297 = ashr i32 %9286, %9296
  %9298 = sext i32 %9297 to i64
  %9299 = or i64 %9295, %9298
  %9300 = and i64 %9299, -9187201950435737472
  %9301 = sub i64 -72340172838076674, %9299
  %9302 = and i64 %9300, %9301
  %9303 = icmp eq i64 %9302, 0
  %9304 = lshr i64 %9299, 56
  %9305 = trunc i64 %9304 to i8
  store i8 %9305, i8* %9274, align 1
  br i1 %9303, label %9359, label %9306

9306:                                             ; preds = %9293
  %9307 = getelementptr inbounds i8, i8* %9274, i64 1
  store i8 0, i8* %9307, align 1
  %9308 = icmp eq i64 %9304, 255
  %9309 = select i1 %9308, i64 2, i64 1
  %9310 = getelementptr inbounds i8, i8* %9274, i64 %9309
  %9311 = lshr i64 %9299, 48
  %9312 = trunc i64 %9311 to i8
  store i8 %9312, i8* %9310, align 1
  %9313 = getelementptr inbounds i8, i8* %9310, i64 1
  store i8 0, i8* %9313, align 1
  %9314 = and i64 %9299, 71776119061217280
  %9315 = icmp eq i64 %9314, 71776119061217280
  %9316 = select i1 %9315, i64 2, i64 1
  %9317 = getelementptr inbounds i8, i8* %9310, i64 %9316
  %9318 = lshr i64 %9299, 40
  %9319 = trunc i64 %9318 to i8
  store i8 %9319, i8* %9317, align 1
  %9320 = getelementptr inbounds i8, i8* %9317, i64 1
  store i8 0, i8* %9320, align 1
  %9321 = and i64 %9299, 280375465082880
  %9322 = icmp eq i64 %9321, 280375465082880
  %9323 = select i1 %9322, i64 2, i64 1
  %9324 = getelementptr inbounds i8, i8* %9317, i64 %9323
  %9325 = lshr i64 %9299, 32
  %9326 = trunc i64 %9325 to i8
  store i8 %9326, i8* %9324, align 1
  %9327 = getelementptr inbounds i8, i8* %9324, i64 1
  store i8 0, i8* %9327, align 1
  %9328 = and i64 %9299, 1095216660480
  %9329 = icmp eq i64 %9328, 1095216660480
  %9330 = select i1 %9329, i64 2, i64 1
  %9331 = getelementptr inbounds i8, i8* %9324, i64 %9330
  %9332 = lshr i64 %9299, 24
  %9333 = trunc i64 %9332 to i8
  store i8 %9333, i8* %9331, align 1
  %9334 = getelementptr inbounds i8, i8* %9331, i64 1
  store i8 0, i8* %9334, align 1
  %9335 = and i64 %9299, 4278190080
  %9336 = icmp eq i64 %9335, 4278190080
  %9337 = select i1 %9336, i64 2, i64 1
  %9338 = getelementptr inbounds i8, i8* %9331, i64 %9337
  %9339 = lshr i64 %9299, 16
  %9340 = trunc i64 %9339 to i8
  store i8 %9340, i8* %9338, align 1
  %9341 = getelementptr inbounds i8, i8* %9338, i64 1
  store i8 0, i8* %9341, align 1
  %9342 = and i64 %9299, 16711680
  %9343 = icmp eq i64 %9342, 16711680
  %9344 = select i1 %9343, i64 2, i64 1
  %9345 = getelementptr inbounds i8, i8* %9338, i64 %9344
  %9346 = lshr i64 %9299, 8
  %9347 = trunc i64 %9346 to i8
  store i8 %9347, i8* %9345, align 1
  %9348 = getelementptr inbounds i8, i8* %9345, i64 1
  store i8 0, i8* %9348, align 1
  %9349 = and i64 %9299, 65280
  %9350 = icmp eq i64 %9349, 65280
  %9351 = select i1 %9350, i64 2, i64 1
  %9352 = getelementptr inbounds i8, i8* %9345, i64 %9351
  %9353 = trunc i64 %9299 to i8
  store i8 %9353, i8* %9352, align 1
  %9354 = getelementptr inbounds i8, i8* %9352, i64 1
  store i8 0, i8* %9354, align 1
  %9355 = and i64 %9299, 255
  %9356 = icmp eq i64 %9355, 255
  %9357 = select i1 %9356, i64 2, i64 1
  %9358 = getelementptr inbounds i8, i8* %9352, i64 %9357
  br label %9381

9359:                                             ; preds = %9293
  %9360 = lshr i64 %9299, 48
  %9361 = trunc i64 %9360 to i8
  %9362 = getelementptr inbounds i8, i8* %9274, i64 1
  store i8 %9361, i8* %9362, align 1
  %9363 = lshr i64 %9299, 40
  %9364 = trunc i64 %9363 to i8
  %9365 = getelementptr inbounds i8, i8* %9274, i64 2
  store i8 %9364, i8* %9365, align 1
  %9366 = lshr i64 %9299, 32
  %9367 = trunc i64 %9366 to i8
  %9368 = getelementptr inbounds i8, i8* %9274, i64 3
  store i8 %9367, i8* %9368, align 1
  %9369 = lshr i64 %9299, 24
  %9370 = trunc i64 %9369 to i8
  %9371 = getelementptr inbounds i8, i8* %9274, i64 4
  store i8 %9370, i8* %9371, align 1
  %9372 = lshr i64 %9299, 16
  %9373 = trunc i64 %9372 to i8
  %9374 = getelementptr inbounds i8, i8* %9274, i64 5
  store i8 %9373, i8* %9374, align 1
  %9375 = lshr i64 %9299, 8
  %9376 = trunc i64 %9375 to i8
  %9377 = getelementptr inbounds i8, i8* %9274, i64 6
  store i8 %9376, i8* %9377, align 1
  %9378 = trunc i64 %9299 to i8
  %9379 = getelementptr inbounds i8, i8* %9274, i64 7
  store i8 %9378, i8* %9379, align 1
  %9380 = getelementptr inbounds i8, i8* %9274, i64 8
  br label %9381

9381:                                             ; preds = %9359, %9306
  %9382 = phi i8* [ %9358, %9306 ], [ %9380, %9359 ]
  %9383 = add nsw i32 %9291, 64
  %9384 = sext i32 %9286 to i64
  br label %9390

9385:                                             ; preds = %9271
  %9386 = zext i32 %9290 to i64
  %9387 = shl i64 %9273, %9386
  %9388 = sext i32 %9286 to i64
  %9389 = or i64 %9387, %9388
  br label %9390

9390:                                             ; preds = %9381, %9385, %9140
  %9391 = phi i32 [ %9132, %9140 ], [ %9383, %9381 ], [ %9291, %9385 ]
  %9392 = phi i64 [ %9133, %9140 ], [ %9384, %9381 ], [ %9389, %9385 ]
  %9393 = phi i8* [ %9134, %9140 ], [ %9382, %9381 ], [ %9274, %9385 ]
  %9394 = phi i32 [ %9141, %9140 ], [ 0, %9381 ], [ 0, %9385 ]
  %9395 = getelementptr inbounds i16, i16* %1, i64 37
  %9396 = load i16, i16* %9395, align 2
  %9397 = sext i16 %9396 to i32
  %9398 = icmp eq i16 %9396, 0
  br i1 %9398, label %9399, label %9401

9399:                                             ; preds = %9390
  %9400 = add nuw nsw i32 %9394, 16
  br label %9649

9401:                                             ; preds = %9390
  %9402 = ashr i32 %9397, 31
  %9403 = add nsw i32 %9402, %9397
  %9404 = xor i32 %9403, %9402
  %9405 = sext i32 %9404 to i64
  %9406 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %9405
  %9407 = load i8, i8* %9406, align 1
  %9408 = zext i8 %9407 to i32
  %9409 = icmp sgt i32 %9394, 255
  br i1 %9409, label %9410, label %9530

9410:                                             ; preds = %9401
  %9411 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %9412 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %9413

9413:                                             ; preds = %9410, %9523
  %9414 = phi i32 [ %9394, %9410 ], [ %9418, %9523 ]
  %9415 = phi i8* [ %9393, %9410 ], [ %9526, %9523 ]
  %9416 = phi i64 [ %9392, %9410 ], [ %9525, %9523 ]
  %9417 = phi i32 [ %9391, %9410 ], [ %9524, %9523 ]
  %9418 = add nsw i32 %9414, -256
  %9419 = load i8, i8* %9411, align 4
  %9420 = sext i8 %9419 to i32
  %9421 = sub nsw i32 %9417, %9420
  %9422 = icmp slt i32 %9421, 0
  br i1 %9422, label %9423, label %9517

9423:                                             ; preds = %9413
  %9424 = zext i32 %9417 to i64
  %9425 = shl i64 %9416, %9424
  %9426 = load i32, i32* %9412, align 4
  %9427 = sub nsw i32 0, %9421
  %9428 = lshr i32 %9426, %9427
  %9429 = zext i32 %9428 to i64
  %9430 = or i64 %9425, %9429
  %9431 = and i64 %9430, -9187201950435737472
  %9432 = sub i64 -72340172838076674, %9430
  %9433 = and i64 %9431, %9432
  %9434 = icmp eq i64 %9433, 0
  %9435 = lshr i64 %9425, 56
  %9436 = trunc i64 %9435 to i8
  store i8 %9436, i8* %9415, align 1
  br i1 %9434, label %9490, label %9437

9437:                                             ; preds = %9423
  %9438 = getelementptr inbounds i8, i8* %9415, i64 1
  store i8 0, i8* %9438, align 1
  %9439 = icmp eq i64 %9435, 255
  %9440 = select i1 %9439, i64 2, i64 1
  %9441 = getelementptr inbounds i8, i8* %9415, i64 %9440
  %9442 = lshr i64 %9425, 48
  %9443 = trunc i64 %9442 to i8
  store i8 %9443, i8* %9441, align 1
  %9444 = getelementptr inbounds i8, i8* %9441, i64 1
  store i8 0, i8* %9444, align 1
  %9445 = and i64 %9425, 71776119061217280
  %9446 = icmp eq i64 %9445, 71776119061217280
  %9447 = select i1 %9446, i64 2, i64 1
  %9448 = getelementptr inbounds i8, i8* %9441, i64 %9447
  %9449 = lshr i64 %9425, 40
  %9450 = trunc i64 %9449 to i8
  store i8 %9450, i8* %9448, align 1
  %9451 = getelementptr inbounds i8, i8* %9448, i64 1
  store i8 0, i8* %9451, align 1
  %9452 = and i64 %9425, 280375465082880
  %9453 = icmp eq i64 %9452, 280375465082880
  %9454 = select i1 %9453, i64 2, i64 1
  %9455 = getelementptr inbounds i8, i8* %9448, i64 %9454
  %9456 = lshr i64 %9425, 32
  %9457 = trunc i64 %9456 to i8
  store i8 %9457, i8* %9455, align 1
  %9458 = getelementptr inbounds i8, i8* %9455, i64 1
  store i8 0, i8* %9458, align 1
  %9459 = and i64 %9425, 1095216660480
  %9460 = icmp eq i64 %9459, 1095216660480
  %9461 = select i1 %9460, i64 2, i64 1
  %9462 = getelementptr inbounds i8, i8* %9455, i64 %9461
  %9463 = lshr i64 %9430, 24
  %9464 = trunc i64 %9463 to i8
  store i8 %9464, i8* %9462, align 1
  %9465 = getelementptr inbounds i8, i8* %9462, i64 1
  store i8 0, i8* %9465, align 1
  %9466 = and i64 %9430, 4278190080
  %9467 = icmp eq i64 %9466, 4278190080
  %9468 = select i1 %9467, i64 2, i64 1
  %9469 = getelementptr inbounds i8, i8* %9462, i64 %9468
  %9470 = lshr i64 %9430, 16
  %9471 = trunc i64 %9470 to i8
  store i8 %9471, i8* %9469, align 1
  %9472 = getelementptr inbounds i8, i8* %9469, i64 1
  store i8 0, i8* %9472, align 1
  %9473 = and i64 %9430, 16711680
  %9474 = icmp eq i64 %9473, 16711680
  %9475 = select i1 %9474, i64 2, i64 1
  %9476 = getelementptr inbounds i8, i8* %9469, i64 %9475
  %9477 = lshr i64 %9430, 8
  %9478 = trunc i64 %9477 to i8
  store i8 %9478, i8* %9476, align 1
  %9479 = getelementptr inbounds i8, i8* %9476, i64 1
  store i8 0, i8* %9479, align 1
  %9480 = and i64 %9430, 65280
  %9481 = icmp eq i64 %9480, 65280
  %9482 = select i1 %9481, i64 2, i64 1
  %9483 = getelementptr inbounds i8, i8* %9476, i64 %9482
  %9484 = trunc i64 %9430 to i8
  store i8 %9484, i8* %9483, align 1
  %9485 = getelementptr inbounds i8, i8* %9483, i64 1
  store i8 0, i8* %9485, align 1
  %9486 = and i64 %9430, 255
  %9487 = icmp eq i64 %9486, 255
  %9488 = select i1 %9487, i64 2, i64 1
  %9489 = getelementptr inbounds i8, i8* %9483, i64 %9488
  br label %9512

9490:                                             ; preds = %9423
  %9491 = lshr i64 %9425, 48
  %9492 = trunc i64 %9491 to i8
  %9493 = getelementptr inbounds i8, i8* %9415, i64 1
  store i8 %9492, i8* %9493, align 1
  %9494 = lshr i64 %9425, 40
  %9495 = trunc i64 %9494 to i8
  %9496 = getelementptr inbounds i8, i8* %9415, i64 2
  store i8 %9495, i8* %9496, align 1
  %9497 = lshr i64 %9425, 32
  %9498 = trunc i64 %9497 to i8
  %9499 = getelementptr inbounds i8, i8* %9415, i64 3
  store i8 %9498, i8* %9499, align 1
  %9500 = lshr i64 %9430, 24
  %9501 = trunc i64 %9500 to i8
  %9502 = getelementptr inbounds i8, i8* %9415, i64 4
  store i8 %9501, i8* %9502, align 1
  %9503 = lshr i64 %9430, 16
  %9504 = trunc i64 %9503 to i8
  %9505 = getelementptr inbounds i8, i8* %9415, i64 5
  store i8 %9504, i8* %9505, align 1
  %9506 = lshr i64 %9430, 8
  %9507 = trunc i64 %9506 to i8
  %9508 = getelementptr inbounds i8, i8* %9415, i64 6
  store i8 %9507, i8* %9508, align 1
  %9509 = trunc i64 %9430 to i8
  %9510 = getelementptr inbounds i8, i8* %9415, i64 7
  store i8 %9509, i8* %9510, align 1
  %9511 = getelementptr inbounds i8, i8* %9415, i64 8
  br label %9512

9512:                                             ; preds = %9490, %9437
  %9513 = phi i8* [ %9489, %9437 ], [ %9511, %9490 ]
  %9514 = add nsw i32 %9421, 64
  %9515 = load i32, i32* %9412, align 4
  %9516 = zext i32 %9515 to i64
  br label %9523

9517:                                             ; preds = %9413
  %9518 = zext i32 %9420 to i64
  %9519 = shl i64 %9416, %9518
  %9520 = load i32, i32* %9412, align 4
  %9521 = zext i32 %9520 to i64
  %9522 = or i64 %9519, %9521
  br label %9523

9523:                                             ; preds = %9517, %9512
  %9524 = phi i32 [ %9514, %9512 ], [ %9421, %9517 ]
  %9525 = phi i64 [ %9516, %9512 ], [ %9522, %9517 ]
  %9526 = phi i8* [ %9513, %9512 ], [ %9415, %9517 ]
  %9527 = icmp sgt i32 %9418, 255
  br i1 %9527, label %9413, label %9528

9528:                                             ; preds = %9523
  %9529 = and i32 %9394, 255
  br label %9530

9530:                                             ; preds = %9528, %9401
  %9531 = phi i32 [ %9391, %9401 ], [ %9524, %9528 ]
  %9532 = phi i64 [ %9392, %9401 ], [ %9525, %9528 ]
  %9533 = phi i8* [ %9393, %9401 ], [ %9526, %9528 ]
  %9534 = phi i32 [ %9394, %9401 ], [ %9529, %9528 ]
  %9535 = add nsw i32 %9534, %9408
  %9536 = zext i8 %9407 to i64
  %9537 = shl nsw i64 -1, %9536
  %9538 = trunc i64 %9537 to i32
  %9539 = xor i32 %9538, -1
  %9540 = and i32 %9403, %9539
  %9541 = sext i32 %9535 to i64
  %9542 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %9541
  %9543 = load i32, i32* %9542, align 4
  %9544 = shl i32 %9543, %9408
  %9545 = or i32 %9544, %9540
  %9546 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %9541
  %9547 = load i8, i8* %9546, align 1
  %9548 = sext i8 %9547 to i32
  %9549 = add nsw i32 %9548, %9408
  %9550 = sub nsw i32 %9531, %9549
  %9551 = icmp slt i32 %9550, 0
  br i1 %9551, label %9552, label %9644

9552:                                             ; preds = %9530
  %9553 = zext i32 %9531 to i64
  %9554 = shl i64 %9532, %9553
  %9555 = sub nsw i32 0, %9550
  %9556 = ashr i32 %9545, %9555
  %9557 = sext i32 %9556 to i64
  %9558 = or i64 %9554, %9557
  %9559 = and i64 %9558, -9187201950435737472
  %9560 = sub i64 -72340172838076674, %9558
  %9561 = and i64 %9559, %9560
  %9562 = icmp eq i64 %9561, 0
  %9563 = lshr i64 %9558, 56
  %9564 = trunc i64 %9563 to i8
  store i8 %9564, i8* %9533, align 1
  br i1 %9562, label %9618, label %9565

9565:                                             ; preds = %9552
  %9566 = getelementptr inbounds i8, i8* %9533, i64 1
  store i8 0, i8* %9566, align 1
  %9567 = icmp eq i64 %9563, 255
  %9568 = select i1 %9567, i64 2, i64 1
  %9569 = getelementptr inbounds i8, i8* %9533, i64 %9568
  %9570 = lshr i64 %9558, 48
  %9571 = trunc i64 %9570 to i8
  store i8 %9571, i8* %9569, align 1
  %9572 = getelementptr inbounds i8, i8* %9569, i64 1
  store i8 0, i8* %9572, align 1
  %9573 = and i64 %9558, 71776119061217280
  %9574 = icmp eq i64 %9573, 71776119061217280
  %9575 = select i1 %9574, i64 2, i64 1
  %9576 = getelementptr inbounds i8, i8* %9569, i64 %9575
  %9577 = lshr i64 %9558, 40
  %9578 = trunc i64 %9577 to i8
  store i8 %9578, i8* %9576, align 1
  %9579 = getelementptr inbounds i8, i8* %9576, i64 1
  store i8 0, i8* %9579, align 1
  %9580 = and i64 %9558, 280375465082880
  %9581 = icmp eq i64 %9580, 280375465082880
  %9582 = select i1 %9581, i64 2, i64 1
  %9583 = getelementptr inbounds i8, i8* %9576, i64 %9582
  %9584 = lshr i64 %9558, 32
  %9585 = trunc i64 %9584 to i8
  store i8 %9585, i8* %9583, align 1
  %9586 = getelementptr inbounds i8, i8* %9583, i64 1
  store i8 0, i8* %9586, align 1
  %9587 = and i64 %9558, 1095216660480
  %9588 = icmp eq i64 %9587, 1095216660480
  %9589 = select i1 %9588, i64 2, i64 1
  %9590 = getelementptr inbounds i8, i8* %9583, i64 %9589
  %9591 = lshr i64 %9558, 24
  %9592 = trunc i64 %9591 to i8
  store i8 %9592, i8* %9590, align 1
  %9593 = getelementptr inbounds i8, i8* %9590, i64 1
  store i8 0, i8* %9593, align 1
  %9594 = and i64 %9558, 4278190080
  %9595 = icmp eq i64 %9594, 4278190080
  %9596 = select i1 %9595, i64 2, i64 1
  %9597 = getelementptr inbounds i8, i8* %9590, i64 %9596
  %9598 = lshr i64 %9558, 16
  %9599 = trunc i64 %9598 to i8
  store i8 %9599, i8* %9597, align 1
  %9600 = getelementptr inbounds i8, i8* %9597, i64 1
  store i8 0, i8* %9600, align 1
  %9601 = and i64 %9558, 16711680
  %9602 = icmp eq i64 %9601, 16711680
  %9603 = select i1 %9602, i64 2, i64 1
  %9604 = getelementptr inbounds i8, i8* %9597, i64 %9603
  %9605 = lshr i64 %9558, 8
  %9606 = trunc i64 %9605 to i8
  store i8 %9606, i8* %9604, align 1
  %9607 = getelementptr inbounds i8, i8* %9604, i64 1
  store i8 0, i8* %9607, align 1
  %9608 = and i64 %9558, 65280
  %9609 = icmp eq i64 %9608, 65280
  %9610 = select i1 %9609, i64 2, i64 1
  %9611 = getelementptr inbounds i8, i8* %9604, i64 %9610
  %9612 = trunc i64 %9558 to i8
  store i8 %9612, i8* %9611, align 1
  %9613 = getelementptr inbounds i8, i8* %9611, i64 1
  store i8 0, i8* %9613, align 1
  %9614 = and i64 %9558, 255
  %9615 = icmp eq i64 %9614, 255
  %9616 = select i1 %9615, i64 2, i64 1
  %9617 = getelementptr inbounds i8, i8* %9611, i64 %9616
  br label %9640

9618:                                             ; preds = %9552
  %9619 = lshr i64 %9558, 48
  %9620 = trunc i64 %9619 to i8
  %9621 = getelementptr inbounds i8, i8* %9533, i64 1
  store i8 %9620, i8* %9621, align 1
  %9622 = lshr i64 %9558, 40
  %9623 = trunc i64 %9622 to i8
  %9624 = getelementptr inbounds i8, i8* %9533, i64 2
  store i8 %9623, i8* %9624, align 1
  %9625 = lshr i64 %9558, 32
  %9626 = trunc i64 %9625 to i8
  %9627 = getelementptr inbounds i8, i8* %9533, i64 3
  store i8 %9626, i8* %9627, align 1
  %9628 = lshr i64 %9558, 24
  %9629 = trunc i64 %9628 to i8
  %9630 = getelementptr inbounds i8, i8* %9533, i64 4
  store i8 %9629, i8* %9630, align 1
  %9631 = lshr i64 %9558, 16
  %9632 = trunc i64 %9631 to i8
  %9633 = getelementptr inbounds i8, i8* %9533, i64 5
  store i8 %9632, i8* %9633, align 1
  %9634 = lshr i64 %9558, 8
  %9635 = trunc i64 %9634 to i8
  %9636 = getelementptr inbounds i8, i8* %9533, i64 6
  store i8 %9635, i8* %9636, align 1
  %9637 = trunc i64 %9558 to i8
  %9638 = getelementptr inbounds i8, i8* %9533, i64 7
  store i8 %9637, i8* %9638, align 1
  %9639 = getelementptr inbounds i8, i8* %9533, i64 8
  br label %9640

9640:                                             ; preds = %9618, %9565
  %9641 = phi i8* [ %9617, %9565 ], [ %9639, %9618 ]
  %9642 = add nsw i32 %9550, 64
  %9643 = sext i32 %9545 to i64
  br label %9649

9644:                                             ; preds = %9530
  %9645 = zext i32 %9549 to i64
  %9646 = shl i64 %9532, %9645
  %9647 = sext i32 %9545 to i64
  %9648 = or i64 %9646, %9647
  br label %9649

9649:                                             ; preds = %9640, %9644, %9399
  %9650 = phi i32 [ %9391, %9399 ], [ %9642, %9640 ], [ %9550, %9644 ]
  %9651 = phi i64 [ %9392, %9399 ], [ %9643, %9640 ], [ %9648, %9644 ]
  %9652 = phi i8* [ %9393, %9399 ], [ %9641, %9640 ], [ %9533, %9644 ]
  %9653 = phi i32 [ %9400, %9399 ], [ 0, %9640 ], [ 0, %9644 ]
  %9654 = getelementptr inbounds i16, i16* %1, i64 44
  %9655 = load i16, i16* %9654, align 2
  %9656 = sext i16 %9655 to i32
  %9657 = icmp eq i16 %9655, 0
  br i1 %9657, label %9658, label %9660

9658:                                             ; preds = %9649
  %9659 = add nuw nsw i32 %9653, 16
  br label %9908

9660:                                             ; preds = %9649
  %9661 = ashr i32 %9656, 31
  %9662 = add nsw i32 %9661, %9656
  %9663 = xor i32 %9662, %9661
  %9664 = sext i32 %9663 to i64
  %9665 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %9664
  %9666 = load i8, i8* %9665, align 1
  %9667 = zext i8 %9666 to i32
  %9668 = icmp sgt i32 %9653, 255
  br i1 %9668, label %9669, label %9789

9669:                                             ; preds = %9660
  %9670 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %9671 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %9672

9672:                                             ; preds = %9669, %9782
  %9673 = phi i32 [ %9653, %9669 ], [ %9677, %9782 ]
  %9674 = phi i8* [ %9652, %9669 ], [ %9785, %9782 ]
  %9675 = phi i64 [ %9651, %9669 ], [ %9784, %9782 ]
  %9676 = phi i32 [ %9650, %9669 ], [ %9783, %9782 ]
  %9677 = add nsw i32 %9673, -256
  %9678 = load i8, i8* %9670, align 4
  %9679 = sext i8 %9678 to i32
  %9680 = sub nsw i32 %9676, %9679
  %9681 = icmp slt i32 %9680, 0
  br i1 %9681, label %9682, label %9776

9682:                                             ; preds = %9672
  %9683 = zext i32 %9676 to i64
  %9684 = shl i64 %9675, %9683
  %9685 = load i32, i32* %9671, align 4
  %9686 = sub nsw i32 0, %9680
  %9687 = lshr i32 %9685, %9686
  %9688 = zext i32 %9687 to i64
  %9689 = or i64 %9684, %9688
  %9690 = and i64 %9689, -9187201950435737472
  %9691 = sub i64 -72340172838076674, %9689
  %9692 = and i64 %9690, %9691
  %9693 = icmp eq i64 %9692, 0
  %9694 = lshr i64 %9684, 56
  %9695 = trunc i64 %9694 to i8
  store i8 %9695, i8* %9674, align 1
  br i1 %9693, label %9749, label %9696

9696:                                             ; preds = %9682
  %9697 = getelementptr inbounds i8, i8* %9674, i64 1
  store i8 0, i8* %9697, align 1
  %9698 = icmp eq i64 %9694, 255
  %9699 = select i1 %9698, i64 2, i64 1
  %9700 = getelementptr inbounds i8, i8* %9674, i64 %9699
  %9701 = lshr i64 %9684, 48
  %9702 = trunc i64 %9701 to i8
  store i8 %9702, i8* %9700, align 1
  %9703 = getelementptr inbounds i8, i8* %9700, i64 1
  store i8 0, i8* %9703, align 1
  %9704 = and i64 %9684, 71776119061217280
  %9705 = icmp eq i64 %9704, 71776119061217280
  %9706 = select i1 %9705, i64 2, i64 1
  %9707 = getelementptr inbounds i8, i8* %9700, i64 %9706
  %9708 = lshr i64 %9684, 40
  %9709 = trunc i64 %9708 to i8
  store i8 %9709, i8* %9707, align 1
  %9710 = getelementptr inbounds i8, i8* %9707, i64 1
  store i8 0, i8* %9710, align 1
  %9711 = and i64 %9684, 280375465082880
  %9712 = icmp eq i64 %9711, 280375465082880
  %9713 = select i1 %9712, i64 2, i64 1
  %9714 = getelementptr inbounds i8, i8* %9707, i64 %9713
  %9715 = lshr i64 %9684, 32
  %9716 = trunc i64 %9715 to i8
  store i8 %9716, i8* %9714, align 1
  %9717 = getelementptr inbounds i8, i8* %9714, i64 1
  store i8 0, i8* %9717, align 1
  %9718 = and i64 %9684, 1095216660480
  %9719 = icmp eq i64 %9718, 1095216660480
  %9720 = select i1 %9719, i64 2, i64 1
  %9721 = getelementptr inbounds i8, i8* %9714, i64 %9720
  %9722 = lshr i64 %9689, 24
  %9723 = trunc i64 %9722 to i8
  store i8 %9723, i8* %9721, align 1
  %9724 = getelementptr inbounds i8, i8* %9721, i64 1
  store i8 0, i8* %9724, align 1
  %9725 = and i64 %9689, 4278190080
  %9726 = icmp eq i64 %9725, 4278190080
  %9727 = select i1 %9726, i64 2, i64 1
  %9728 = getelementptr inbounds i8, i8* %9721, i64 %9727
  %9729 = lshr i64 %9689, 16
  %9730 = trunc i64 %9729 to i8
  store i8 %9730, i8* %9728, align 1
  %9731 = getelementptr inbounds i8, i8* %9728, i64 1
  store i8 0, i8* %9731, align 1
  %9732 = and i64 %9689, 16711680
  %9733 = icmp eq i64 %9732, 16711680
  %9734 = select i1 %9733, i64 2, i64 1
  %9735 = getelementptr inbounds i8, i8* %9728, i64 %9734
  %9736 = lshr i64 %9689, 8
  %9737 = trunc i64 %9736 to i8
  store i8 %9737, i8* %9735, align 1
  %9738 = getelementptr inbounds i8, i8* %9735, i64 1
  store i8 0, i8* %9738, align 1
  %9739 = and i64 %9689, 65280
  %9740 = icmp eq i64 %9739, 65280
  %9741 = select i1 %9740, i64 2, i64 1
  %9742 = getelementptr inbounds i8, i8* %9735, i64 %9741
  %9743 = trunc i64 %9689 to i8
  store i8 %9743, i8* %9742, align 1
  %9744 = getelementptr inbounds i8, i8* %9742, i64 1
  store i8 0, i8* %9744, align 1
  %9745 = and i64 %9689, 255
  %9746 = icmp eq i64 %9745, 255
  %9747 = select i1 %9746, i64 2, i64 1
  %9748 = getelementptr inbounds i8, i8* %9742, i64 %9747
  br label %9771

9749:                                             ; preds = %9682
  %9750 = lshr i64 %9684, 48
  %9751 = trunc i64 %9750 to i8
  %9752 = getelementptr inbounds i8, i8* %9674, i64 1
  store i8 %9751, i8* %9752, align 1
  %9753 = lshr i64 %9684, 40
  %9754 = trunc i64 %9753 to i8
  %9755 = getelementptr inbounds i8, i8* %9674, i64 2
  store i8 %9754, i8* %9755, align 1
  %9756 = lshr i64 %9684, 32
  %9757 = trunc i64 %9756 to i8
  %9758 = getelementptr inbounds i8, i8* %9674, i64 3
  store i8 %9757, i8* %9758, align 1
  %9759 = lshr i64 %9689, 24
  %9760 = trunc i64 %9759 to i8
  %9761 = getelementptr inbounds i8, i8* %9674, i64 4
  store i8 %9760, i8* %9761, align 1
  %9762 = lshr i64 %9689, 16
  %9763 = trunc i64 %9762 to i8
  %9764 = getelementptr inbounds i8, i8* %9674, i64 5
  store i8 %9763, i8* %9764, align 1
  %9765 = lshr i64 %9689, 8
  %9766 = trunc i64 %9765 to i8
  %9767 = getelementptr inbounds i8, i8* %9674, i64 6
  store i8 %9766, i8* %9767, align 1
  %9768 = trunc i64 %9689 to i8
  %9769 = getelementptr inbounds i8, i8* %9674, i64 7
  store i8 %9768, i8* %9769, align 1
  %9770 = getelementptr inbounds i8, i8* %9674, i64 8
  br label %9771

9771:                                             ; preds = %9749, %9696
  %9772 = phi i8* [ %9748, %9696 ], [ %9770, %9749 ]
  %9773 = add nsw i32 %9680, 64
  %9774 = load i32, i32* %9671, align 4
  %9775 = zext i32 %9774 to i64
  br label %9782

9776:                                             ; preds = %9672
  %9777 = zext i32 %9679 to i64
  %9778 = shl i64 %9675, %9777
  %9779 = load i32, i32* %9671, align 4
  %9780 = zext i32 %9779 to i64
  %9781 = or i64 %9778, %9780
  br label %9782

9782:                                             ; preds = %9776, %9771
  %9783 = phi i32 [ %9773, %9771 ], [ %9680, %9776 ]
  %9784 = phi i64 [ %9775, %9771 ], [ %9781, %9776 ]
  %9785 = phi i8* [ %9772, %9771 ], [ %9674, %9776 ]
  %9786 = icmp sgt i32 %9677, 255
  br i1 %9786, label %9672, label %9787

9787:                                             ; preds = %9782
  %9788 = and i32 %9653, 255
  br label %9789

9789:                                             ; preds = %9787, %9660
  %9790 = phi i32 [ %9650, %9660 ], [ %9783, %9787 ]
  %9791 = phi i64 [ %9651, %9660 ], [ %9784, %9787 ]
  %9792 = phi i8* [ %9652, %9660 ], [ %9785, %9787 ]
  %9793 = phi i32 [ %9653, %9660 ], [ %9788, %9787 ]
  %9794 = add nsw i32 %9793, %9667
  %9795 = zext i8 %9666 to i64
  %9796 = shl nsw i64 -1, %9795
  %9797 = trunc i64 %9796 to i32
  %9798 = xor i32 %9797, -1
  %9799 = and i32 %9662, %9798
  %9800 = sext i32 %9794 to i64
  %9801 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %9800
  %9802 = load i32, i32* %9801, align 4
  %9803 = shl i32 %9802, %9667
  %9804 = or i32 %9803, %9799
  %9805 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %9800
  %9806 = load i8, i8* %9805, align 1
  %9807 = sext i8 %9806 to i32
  %9808 = add nsw i32 %9807, %9667
  %9809 = sub nsw i32 %9790, %9808
  %9810 = icmp slt i32 %9809, 0
  br i1 %9810, label %9811, label %9903

9811:                                             ; preds = %9789
  %9812 = zext i32 %9790 to i64
  %9813 = shl i64 %9791, %9812
  %9814 = sub nsw i32 0, %9809
  %9815 = ashr i32 %9804, %9814
  %9816 = sext i32 %9815 to i64
  %9817 = or i64 %9813, %9816
  %9818 = and i64 %9817, -9187201950435737472
  %9819 = sub i64 -72340172838076674, %9817
  %9820 = and i64 %9818, %9819
  %9821 = icmp eq i64 %9820, 0
  %9822 = lshr i64 %9817, 56
  %9823 = trunc i64 %9822 to i8
  store i8 %9823, i8* %9792, align 1
  br i1 %9821, label %9877, label %9824

9824:                                             ; preds = %9811
  %9825 = getelementptr inbounds i8, i8* %9792, i64 1
  store i8 0, i8* %9825, align 1
  %9826 = icmp eq i64 %9822, 255
  %9827 = select i1 %9826, i64 2, i64 1
  %9828 = getelementptr inbounds i8, i8* %9792, i64 %9827
  %9829 = lshr i64 %9817, 48
  %9830 = trunc i64 %9829 to i8
  store i8 %9830, i8* %9828, align 1
  %9831 = getelementptr inbounds i8, i8* %9828, i64 1
  store i8 0, i8* %9831, align 1
  %9832 = and i64 %9817, 71776119061217280
  %9833 = icmp eq i64 %9832, 71776119061217280
  %9834 = select i1 %9833, i64 2, i64 1
  %9835 = getelementptr inbounds i8, i8* %9828, i64 %9834
  %9836 = lshr i64 %9817, 40
  %9837 = trunc i64 %9836 to i8
  store i8 %9837, i8* %9835, align 1
  %9838 = getelementptr inbounds i8, i8* %9835, i64 1
  store i8 0, i8* %9838, align 1
  %9839 = and i64 %9817, 280375465082880
  %9840 = icmp eq i64 %9839, 280375465082880
  %9841 = select i1 %9840, i64 2, i64 1
  %9842 = getelementptr inbounds i8, i8* %9835, i64 %9841
  %9843 = lshr i64 %9817, 32
  %9844 = trunc i64 %9843 to i8
  store i8 %9844, i8* %9842, align 1
  %9845 = getelementptr inbounds i8, i8* %9842, i64 1
  store i8 0, i8* %9845, align 1
  %9846 = and i64 %9817, 1095216660480
  %9847 = icmp eq i64 %9846, 1095216660480
  %9848 = select i1 %9847, i64 2, i64 1
  %9849 = getelementptr inbounds i8, i8* %9842, i64 %9848
  %9850 = lshr i64 %9817, 24
  %9851 = trunc i64 %9850 to i8
  store i8 %9851, i8* %9849, align 1
  %9852 = getelementptr inbounds i8, i8* %9849, i64 1
  store i8 0, i8* %9852, align 1
  %9853 = and i64 %9817, 4278190080
  %9854 = icmp eq i64 %9853, 4278190080
  %9855 = select i1 %9854, i64 2, i64 1
  %9856 = getelementptr inbounds i8, i8* %9849, i64 %9855
  %9857 = lshr i64 %9817, 16
  %9858 = trunc i64 %9857 to i8
  store i8 %9858, i8* %9856, align 1
  %9859 = getelementptr inbounds i8, i8* %9856, i64 1
  store i8 0, i8* %9859, align 1
  %9860 = and i64 %9817, 16711680
  %9861 = icmp eq i64 %9860, 16711680
  %9862 = select i1 %9861, i64 2, i64 1
  %9863 = getelementptr inbounds i8, i8* %9856, i64 %9862
  %9864 = lshr i64 %9817, 8
  %9865 = trunc i64 %9864 to i8
  store i8 %9865, i8* %9863, align 1
  %9866 = getelementptr inbounds i8, i8* %9863, i64 1
  store i8 0, i8* %9866, align 1
  %9867 = and i64 %9817, 65280
  %9868 = icmp eq i64 %9867, 65280
  %9869 = select i1 %9868, i64 2, i64 1
  %9870 = getelementptr inbounds i8, i8* %9863, i64 %9869
  %9871 = trunc i64 %9817 to i8
  store i8 %9871, i8* %9870, align 1
  %9872 = getelementptr inbounds i8, i8* %9870, i64 1
  store i8 0, i8* %9872, align 1
  %9873 = and i64 %9817, 255
  %9874 = icmp eq i64 %9873, 255
  %9875 = select i1 %9874, i64 2, i64 1
  %9876 = getelementptr inbounds i8, i8* %9870, i64 %9875
  br label %9899

9877:                                             ; preds = %9811
  %9878 = lshr i64 %9817, 48
  %9879 = trunc i64 %9878 to i8
  %9880 = getelementptr inbounds i8, i8* %9792, i64 1
  store i8 %9879, i8* %9880, align 1
  %9881 = lshr i64 %9817, 40
  %9882 = trunc i64 %9881 to i8
  %9883 = getelementptr inbounds i8, i8* %9792, i64 2
  store i8 %9882, i8* %9883, align 1
  %9884 = lshr i64 %9817, 32
  %9885 = trunc i64 %9884 to i8
  %9886 = getelementptr inbounds i8, i8* %9792, i64 3
  store i8 %9885, i8* %9886, align 1
  %9887 = lshr i64 %9817, 24
  %9888 = trunc i64 %9887 to i8
  %9889 = getelementptr inbounds i8, i8* %9792, i64 4
  store i8 %9888, i8* %9889, align 1
  %9890 = lshr i64 %9817, 16
  %9891 = trunc i64 %9890 to i8
  %9892 = getelementptr inbounds i8, i8* %9792, i64 5
  store i8 %9891, i8* %9892, align 1
  %9893 = lshr i64 %9817, 8
  %9894 = trunc i64 %9893 to i8
  %9895 = getelementptr inbounds i8, i8* %9792, i64 6
  store i8 %9894, i8* %9895, align 1
  %9896 = trunc i64 %9817 to i8
  %9897 = getelementptr inbounds i8, i8* %9792, i64 7
  store i8 %9896, i8* %9897, align 1
  %9898 = getelementptr inbounds i8, i8* %9792, i64 8
  br label %9899

9899:                                             ; preds = %9877, %9824
  %9900 = phi i8* [ %9876, %9824 ], [ %9898, %9877 ]
  %9901 = add nsw i32 %9809, 64
  %9902 = sext i32 %9804 to i64
  br label %9908

9903:                                             ; preds = %9789
  %9904 = zext i32 %9808 to i64
  %9905 = shl i64 %9791, %9904
  %9906 = sext i32 %9804 to i64
  %9907 = or i64 %9905, %9906
  br label %9908

9908:                                             ; preds = %9899, %9903, %9658
  %9909 = phi i32 [ %9650, %9658 ], [ %9901, %9899 ], [ %9809, %9903 ]
  %9910 = phi i64 [ %9651, %9658 ], [ %9902, %9899 ], [ %9907, %9903 ]
  %9911 = phi i8* [ %9652, %9658 ], [ %9900, %9899 ], [ %9792, %9903 ]
  %9912 = phi i32 [ %9659, %9658 ], [ 0, %9899 ], [ 0, %9903 ]
  %9913 = getelementptr inbounds i16, i16* %1, i64 51
  %9914 = load i16, i16* %9913, align 2
  %9915 = sext i16 %9914 to i32
  %9916 = icmp eq i16 %9914, 0
  br i1 %9916, label %9917, label %9919

9917:                                             ; preds = %9908
  %9918 = add nuw nsw i32 %9912, 16
  br label %10167

9919:                                             ; preds = %9908
  %9920 = ashr i32 %9915, 31
  %9921 = add nsw i32 %9920, %9915
  %9922 = xor i32 %9921, %9920
  %9923 = sext i32 %9922 to i64
  %9924 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %9923
  %9925 = load i8, i8* %9924, align 1
  %9926 = zext i8 %9925 to i32
  %9927 = icmp sgt i32 %9912, 255
  br i1 %9927, label %9928, label %10048

9928:                                             ; preds = %9919
  %9929 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %9930 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %9931

9931:                                             ; preds = %9928, %10041
  %9932 = phi i32 [ %9912, %9928 ], [ %9936, %10041 ]
  %9933 = phi i8* [ %9911, %9928 ], [ %10044, %10041 ]
  %9934 = phi i64 [ %9910, %9928 ], [ %10043, %10041 ]
  %9935 = phi i32 [ %9909, %9928 ], [ %10042, %10041 ]
  %9936 = add nsw i32 %9932, -256
  %9937 = load i8, i8* %9929, align 4
  %9938 = sext i8 %9937 to i32
  %9939 = sub nsw i32 %9935, %9938
  %9940 = icmp slt i32 %9939, 0
  br i1 %9940, label %9941, label %10035

9941:                                             ; preds = %9931
  %9942 = zext i32 %9935 to i64
  %9943 = shl i64 %9934, %9942
  %9944 = load i32, i32* %9930, align 4
  %9945 = sub nsw i32 0, %9939
  %9946 = lshr i32 %9944, %9945
  %9947 = zext i32 %9946 to i64
  %9948 = or i64 %9943, %9947
  %9949 = and i64 %9948, -9187201950435737472
  %9950 = sub i64 -72340172838076674, %9948
  %9951 = and i64 %9949, %9950
  %9952 = icmp eq i64 %9951, 0
  %9953 = lshr i64 %9943, 56
  %9954 = trunc i64 %9953 to i8
  store i8 %9954, i8* %9933, align 1
  br i1 %9952, label %10008, label %9955

9955:                                             ; preds = %9941
  %9956 = getelementptr inbounds i8, i8* %9933, i64 1
  store i8 0, i8* %9956, align 1
  %9957 = icmp eq i64 %9953, 255
  %9958 = select i1 %9957, i64 2, i64 1
  %9959 = getelementptr inbounds i8, i8* %9933, i64 %9958
  %9960 = lshr i64 %9943, 48
  %9961 = trunc i64 %9960 to i8
  store i8 %9961, i8* %9959, align 1
  %9962 = getelementptr inbounds i8, i8* %9959, i64 1
  store i8 0, i8* %9962, align 1
  %9963 = and i64 %9943, 71776119061217280
  %9964 = icmp eq i64 %9963, 71776119061217280
  %9965 = select i1 %9964, i64 2, i64 1
  %9966 = getelementptr inbounds i8, i8* %9959, i64 %9965
  %9967 = lshr i64 %9943, 40
  %9968 = trunc i64 %9967 to i8
  store i8 %9968, i8* %9966, align 1
  %9969 = getelementptr inbounds i8, i8* %9966, i64 1
  store i8 0, i8* %9969, align 1
  %9970 = and i64 %9943, 280375465082880
  %9971 = icmp eq i64 %9970, 280375465082880
  %9972 = select i1 %9971, i64 2, i64 1
  %9973 = getelementptr inbounds i8, i8* %9966, i64 %9972
  %9974 = lshr i64 %9943, 32
  %9975 = trunc i64 %9974 to i8
  store i8 %9975, i8* %9973, align 1
  %9976 = getelementptr inbounds i8, i8* %9973, i64 1
  store i8 0, i8* %9976, align 1
  %9977 = and i64 %9943, 1095216660480
  %9978 = icmp eq i64 %9977, 1095216660480
  %9979 = select i1 %9978, i64 2, i64 1
  %9980 = getelementptr inbounds i8, i8* %9973, i64 %9979
  %9981 = lshr i64 %9948, 24
  %9982 = trunc i64 %9981 to i8
  store i8 %9982, i8* %9980, align 1
  %9983 = getelementptr inbounds i8, i8* %9980, i64 1
  store i8 0, i8* %9983, align 1
  %9984 = and i64 %9948, 4278190080
  %9985 = icmp eq i64 %9984, 4278190080
  %9986 = select i1 %9985, i64 2, i64 1
  %9987 = getelementptr inbounds i8, i8* %9980, i64 %9986
  %9988 = lshr i64 %9948, 16
  %9989 = trunc i64 %9988 to i8
  store i8 %9989, i8* %9987, align 1
  %9990 = getelementptr inbounds i8, i8* %9987, i64 1
  store i8 0, i8* %9990, align 1
  %9991 = and i64 %9948, 16711680
  %9992 = icmp eq i64 %9991, 16711680
  %9993 = select i1 %9992, i64 2, i64 1
  %9994 = getelementptr inbounds i8, i8* %9987, i64 %9993
  %9995 = lshr i64 %9948, 8
  %9996 = trunc i64 %9995 to i8
  store i8 %9996, i8* %9994, align 1
  %9997 = getelementptr inbounds i8, i8* %9994, i64 1
  store i8 0, i8* %9997, align 1
  %9998 = and i64 %9948, 65280
  %9999 = icmp eq i64 %9998, 65280
  %10000 = select i1 %9999, i64 2, i64 1
  %10001 = getelementptr inbounds i8, i8* %9994, i64 %10000
  %10002 = trunc i64 %9948 to i8
  store i8 %10002, i8* %10001, align 1
  %10003 = getelementptr inbounds i8, i8* %10001, i64 1
  store i8 0, i8* %10003, align 1
  %10004 = and i64 %9948, 255
  %10005 = icmp eq i64 %10004, 255
  %10006 = select i1 %10005, i64 2, i64 1
  %10007 = getelementptr inbounds i8, i8* %10001, i64 %10006
  br label %10030

10008:                                            ; preds = %9941
  %10009 = lshr i64 %9943, 48
  %10010 = trunc i64 %10009 to i8
  %10011 = getelementptr inbounds i8, i8* %9933, i64 1
  store i8 %10010, i8* %10011, align 1
  %10012 = lshr i64 %9943, 40
  %10013 = trunc i64 %10012 to i8
  %10014 = getelementptr inbounds i8, i8* %9933, i64 2
  store i8 %10013, i8* %10014, align 1
  %10015 = lshr i64 %9943, 32
  %10016 = trunc i64 %10015 to i8
  %10017 = getelementptr inbounds i8, i8* %9933, i64 3
  store i8 %10016, i8* %10017, align 1
  %10018 = lshr i64 %9948, 24
  %10019 = trunc i64 %10018 to i8
  %10020 = getelementptr inbounds i8, i8* %9933, i64 4
  store i8 %10019, i8* %10020, align 1
  %10021 = lshr i64 %9948, 16
  %10022 = trunc i64 %10021 to i8
  %10023 = getelementptr inbounds i8, i8* %9933, i64 5
  store i8 %10022, i8* %10023, align 1
  %10024 = lshr i64 %9948, 8
  %10025 = trunc i64 %10024 to i8
  %10026 = getelementptr inbounds i8, i8* %9933, i64 6
  store i8 %10025, i8* %10026, align 1
  %10027 = trunc i64 %9948 to i8
  %10028 = getelementptr inbounds i8, i8* %9933, i64 7
  store i8 %10027, i8* %10028, align 1
  %10029 = getelementptr inbounds i8, i8* %9933, i64 8
  br label %10030

10030:                                            ; preds = %10008, %9955
  %10031 = phi i8* [ %10007, %9955 ], [ %10029, %10008 ]
  %10032 = add nsw i32 %9939, 64
  %10033 = load i32, i32* %9930, align 4
  %10034 = zext i32 %10033 to i64
  br label %10041

10035:                                            ; preds = %9931
  %10036 = zext i32 %9938 to i64
  %10037 = shl i64 %9934, %10036
  %10038 = load i32, i32* %9930, align 4
  %10039 = zext i32 %10038 to i64
  %10040 = or i64 %10037, %10039
  br label %10041

10041:                                            ; preds = %10035, %10030
  %10042 = phi i32 [ %10032, %10030 ], [ %9939, %10035 ]
  %10043 = phi i64 [ %10034, %10030 ], [ %10040, %10035 ]
  %10044 = phi i8* [ %10031, %10030 ], [ %9933, %10035 ]
  %10045 = icmp sgt i32 %9936, 255
  br i1 %10045, label %9931, label %10046

10046:                                            ; preds = %10041
  %10047 = and i32 %9912, 255
  br label %10048

10048:                                            ; preds = %10046, %9919
  %10049 = phi i32 [ %9909, %9919 ], [ %10042, %10046 ]
  %10050 = phi i64 [ %9910, %9919 ], [ %10043, %10046 ]
  %10051 = phi i8* [ %9911, %9919 ], [ %10044, %10046 ]
  %10052 = phi i32 [ %9912, %9919 ], [ %10047, %10046 ]
  %10053 = add nsw i32 %10052, %9926
  %10054 = zext i8 %9925 to i64
  %10055 = shl nsw i64 -1, %10054
  %10056 = trunc i64 %10055 to i32
  %10057 = xor i32 %10056, -1
  %10058 = and i32 %9921, %10057
  %10059 = sext i32 %10053 to i64
  %10060 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %10059
  %10061 = load i32, i32* %10060, align 4
  %10062 = shl i32 %10061, %9926
  %10063 = or i32 %10062, %10058
  %10064 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %10059
  %10065 = load i8, i8* %10064, align 1
  %10066 = sext i8 %10065 to i32
  %10067 = add nsw i32 %10066, %9926
  %10068 = sub nsw i32 %10049, %10067
  %10069 = icmp slt i32 %10068, 0
  br i1 %10069, label %10070, label %10162

10070:                                            ; preds = %10048
  %10071 = zext i32 %10049 to i64
  %10072 = shl i64 %10050, %10071
  %10073 = sub nsw i32 0, %10068
  %10074 = ashr i32 %10063, %10073
  %10075 = sext i32 %10074 to i64
  %10076 = or i64 %10072, %10075
  %10077 = and i64 %10076, -9187201950435737472
  %10078 = sub i64 -72340172838076674, %10076
  %10079 = and i64 %10077, %10078
  %10080 = icmp eq i64 %10079, 0
  %10081 = lshr i64 %10076, 56
  %10082 = trunc i64 %10081 to i8
  store i8 %10082, i8* %10051, align 1
  br i1 %10080, label %10136, label %10083

10083:                                            ; preds = %10070
  %10084 = getelementptr inbounds i8, i8* %10051, i64 1
  store i8 0, i8* %10084, align 1
  %10085 = icmp eq i64 %10081, 255
  %10086 = select i1 %10085, i64 2, i64 1
  %10087 = getelementptr inbounds i8, i8* %10051, i64 %10086
  %10088 = lshr i64 %10076, 48
  %10089 = trunc i64 %10088 to i8
  store i8 %10089, i8* %10087, align 1
  %10090 = getelementptr inbounds i8, i8* %10087, i64 1
  store i8 0, i8* %10090, align 1
  %10091 = and i64 %10076, 71776119061217280
  %10092 = icmp eq i64 %10091, 71776119061217280
  %10093 = select i1 %10092, i64 2, i64 1
  %10094 = getelementptr inbounds i8, i8* %10087, i64 %10093
  %10095 = lshr i64 %10076, 40
  %10096 = trunc i64 %10095 to i8
  store i8 %10096, i8* %10094, align 1
  %10097 = getelementptr inbounds i8, i8* %10094, i64 1
  store i8 0, i8* %10097, align 1
  %10098 = and i64 %10076, 280375465082880
  %10099 = icmp eq i64 %10098, 280375465082880
  %10100 = select i1 %10099, i64 2, i64 1
  %10101 = getelementptr inbounds i8, i8* %10094, i64 %10100
  %10102 = lshr i64 %10076, 32
  %10103 = trunc i64 %10102 to i8
  store i8 %10103, i8* %10101, align 1
  %10104 = getelementptr inbounds i8, i8* %10101, i64 1
  store i8 0, i8* %10104, align 1
  %10105 = and i64 %10076, 1095216660480
  %10106 = icmp eq i64 %10105, 1095216660480
  %10107 = select i1 %10106, i64 2, i64 1
  %10108 = getelementptr inbounds i8, i8* %10101, i64 %10107
  %10109 = lshr i64 %10076, 24
  %10110 = trunc i64 %10109 to i8
  store i8 %10110, i8* %10108, align 1
  %10111 = getelementptr inbounds i8, i8* %10108, i64 1
  store i8 0, i8* %10111, align 1
  %10112 = and i64 %10076, 4278190080
  %10113 = icmp eq i64 %10112, 4278190080
  %10114 = select i1 %10113, i64 2, i64 1
  %10115 = getelementptr inbounds i8, i8* %10108, i64 %10114
  %10116 = lshr i64 %10076, 16
  %10117 = trunc i64 %10116 to i8
  store i8 %10117, i8* %10115, align 1
  %10118 = getelementptr inbounds i8, i8* %10115, i64 1
  store i8 0, i8* %10118, align 1
  %10119 = and i64 %10076, 16711680
  %10120 = icmp eq i64 %10119, 16711680
  %10121 = select i1 %10120, i64 2, i64 1
  %10122 = getelementptr inbounds i8, i8* %10115, i64 %10121
  %10123 = lshr i64 %10076, 8
  %10124 = trunc i64 %10123 to i8
  store i8 %10124, i8* %10122, align 1
  %10125 = getelementptr inbounds i8, i8* %10122, i64 1
  store i8 0, i8* %10125, align 1
  %10126 = and i64 %10076, 65280
  %10127 = icmp eq i64 %10126, 65280
  %10128 = select i1 %10127, i64 2, i64 1
  %10129 = getelementptr inbounds i8, i8* %10122, i64 %10128
  %10130 = trunc i64 %10076 to i8
  store i8 %10130, i8* %10129, align 1
  %10131 = getelementptr inbounds i8, i8* %10129, i64 1
  store i8 0, i8* %10131, align 1
  %10132 = and i64 %10076, 255
  %10133 = icmp eq i64 %10132, 255
  %10134 = select i1 %10133, i64 2, i64 1
  %10135 = getelementptr inbounds i8, i8* %10129, i64 %10134
  br label %10158

10136:                                            ; preds = %10070
  %10137 = lshr i64 %10076, 48
  %10138 = trunc i64 %10137 to i8
  %10139 = getelementptr inbounds i8, i8* %10051, i64 1
  store i8 %10138, i8* %10139, align 1
  %10140 = lshr i64 %10076, 40
  %10141 = trunc i64 %10140 to i8
  %10142 = getelementptr inbounds i8, i8* %10051, i64 2
  store i8 %10141, i8* %10142, align 1
  %10143 = lshr i64 %10076, 32
  %10144 = trunc i64 %10143 to i8
  %10145 = getelementptr inbounds i8, i8* %10051, i64 3
  store i8 %10144, i8* %10145, align 1
  %10146 = lshr i64 %10076, 24
  %10147 = trunc i64 %10146 to i8
  %10148 = getelementptr inbounds i8, i8* %10051, i64 4
  store i8 %10147, i8* %10148, align 1
  %10149 = lshr i64 %10076, 16
  %10150 = trunc i64 %10149 to i8
  %10151 = getelementptr inbounds i8, i8* %10051, i64 5
  store i8 %10150, i8* %10151, align 1
  %10152 = lshr i64 %10076, 8
  %10153 = trunc i64 %10152 to i8
  %10154 = getelementptr inbounds i8, i8* %10051, i64 6
  store i8 %10153, i8* %10154, align 1
  %10155 = trunc i64 %10076 to i8
  %10156 = getelementptr inbounds i8, i8* %10051, i64 7
  store i8 %10155, i8* %10156, align 1
  %10157 = getelementptr inbounds i8, i8* %10051, i64 8
  br label %10158

10158:                                            ; preds = %10136, %10083
  %10159 = phi i8* [ %10135, %10083 ], [ %10157, %10136 ]
  %10160 = add nsw i32 %10068, 64
  %10161 = sext i32 %10063 to i64
  br label %10167

10162:                                            ; preds = %10048
  %10163 = zext i32 %10067 to i64
  %10164 = shl i64 %10050, %10163
  %10165 = sext i32 %10063 to i64
  %10166 = or i64 %10164, %10165
  br label %10167

10167:                                            ; preds = %10158, %10162, %9917
  %10168 = phi i32 [ %9909, %9917 ], [ %10160, %10158 ], [ %10068, %10162 ]
  %10169 = phi i64 [ %9910, %9917 ], [ %10161, %10158 ], [ %10166, %10162 ]
  %10170 = phi i8* [ %9911, %9917 ], [ %10159, %10158 ], [ %10051, %10162 ]
  %10171 = phi i32 [ %9918, %9917 ], [ 0, %10158 ], [ 0, %10162 ]
  %10172 = getelementptr inbounds i16, i16* %1, i64 58
  %10173 = load i16, i16* %10172, align 2
  %10174 = sext i16 %10173 to i32
  %10175 = icmp eq i16 %10173, 0
  br i1 %10175, label %10176, label %10178

10176:                                            ; preds = %10167
  %10177 = add nuw nsw i32 %10171, 16
  br label %10426

10178:                                            ; preds = %10167
  %10179 = ashr i32 %10174, 31
  %10180 = add nsw i32 %10179, %10174
  %10181 = xor i32 %10180, %10179
  %10182 = sext i32 %10181 to i64
  %10183 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %10182
  %10184 = load i8, i8* %10183, align 1
  %10185 = zext i8 %10184 to i32
  %10186 = icmp sgt i32 %10171, 255
  br i1 %10186, label %10187, label %10307

10187:                                            ; preds = %10178
  %10188 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %10189 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %10190

10190:                                            ; preds = %10187, %10300
  %10191 = phi i32 [ %10171, %10187 ], [ %10195, %10300 ]
  %10192 = phi i8* [ %10170, %10187 ], [ %10303, %10300 ]
  %10193 = phi i64 [ %10169, %10187 ], [ %10302, %10300 ]
  %10194 = phi i32 [ %10168, %10187 ], [ %10301, %10300 ]
  %10195 = add nsw i32 %10191, -256
  %10196 = load i8, i8* %10188, align 4
  %10197 = sext i8 %10196 to i32
  %10198 = sub nsw i32 %10194, %10197
  %10199 = icmp slt i32 %10198, 0
  br i1 %10199, label %10200, label %10294

10200:                                            ; preds = %10190
  %10201 = zext i32 %10194 to i64
  %10202 = shl i64 %10193, %10201
  %10203 = load i32, i32* %10189, align 4
  %10204 = sub nsw i32 0, %10198
  %10205 = lshr i32 %10203, %10204
  %10206 = zext i32 %10205 to i64
  %10207 = or i64 %10202, %10206
  %10208 = and i64 %10207, -9187201950435737472
  %10209 = sub i64 -72340172838076674, %10207
  %10210 = and i64 %10208, %10209
  %10211 = icmp eq i64 %10210, 0
  %10212 = lshr i64 %10202, 56
  %10213 = trunc i64 %10212 to i8
  store i8 %10213, i8* %10192, align 1
  br i1 %10211, label %10267, label %10214

10214:                                            ; preds = %10200
  %10215 = getelementptr inbounds i8, i8* %10192, i64 1
  store i8 0, i8* %10215, align 1
  %10216 = icmp eq i64 %10212, 255
  %10217 = select i1 %10216, i64 2, i64 1
  %10218 = getelementptr inbounds i8, i8* %10192, i64 %10217
  %10219 = lshr i64 %10202, 48
  %10220 = trunc i64 %10219 to i8
  store i8 %10220, i8* %10218, align 1
  %10221 = getelementptr inbounds i8, i8* %10218, i64 1
  store i8 0, i8* %10221, align 1
  %10222 = and i64 %10202, 71776119061217280
  %10223 = icmp eq i64 %10222, 71776119061217280
  %10224 = select i1 %10223, i64 2, i64 1
  %10225 = getelementptr inbounds i8, i8* %10218, i64 %10224
  %10226 = lshr i64 %10202, 40
  %10227 = trunc i64 %10226 to i8
  store i8 %10227, i8* %10225, align 1
  %10228 = getelementptr inbounds i8, i8* %10225, i64 1
  store i8 0, i8* %10228, align 1
  %10229 = and i64 %10202, 280375465082880
  %10230 = icmp eq i64 %10229, 280375465082880
  %10231 = select i1 %10230, i64 2, i64 1
  %10232 = getelementptr inbounds i8, i8* %10225, i64 %10231
  %10233 = lshr i64 %10202, 32
  %10234 = trunc i64 %10233 to i8
  store i8 %10234, i8* %10232, align 1
  %10235 = getelementptr inbounds i8, i8* %10232, i64 1
  store i8 0, i8* %10235, align 1
  %10236 = and i64 %10202, 1095216660480
  %10237 = icmp eq i64 %10236, 1095216660480
  %10238 = select i1 %10237, i64 2, i64 1
  %10239 = getelementptr inbounds i8, i8* %10232, i64 %10238
  %10240 = lshr i64 %10207, 24
  %10241 = trunc i64 %10240 to i8
  store i8 %10241, i8* %10239, align 1
  %10242 = getelementptr inbounds i8, i8* %10239, i64 1
  store i8 0, i8* %10242, align 1
  %10243 = and i64 %10207, 4278190080
  %10244 = icmp eq i64 %10243, 4278190080
  %10245 = select i1 %10244, i64 2, i64 1
  %10246 = getelementptr inbounds i8, i8* %10239, i64 %10245
  %10247 = lshr i64 %10207, 16
  %10248 = trunc i64 %10247 to i8
  store i8 %10248, i8* %10246, align 1
  %10249 = getelementptr inbounds i8, i8* %10246, i64 1
  store i8 0, i8* %10249, align 1
  %10250 = and i64 %10207, 16711680
  %10251 = icmp eq i64 %10250, 16711680
  %10252 = select i1 %10251, i64 2, i64 1
  %10253 = getelementptr inbounds i8, i8* %10246, i64 %10252
  %10254 = lshr i64 %10207, 8
  %10255 = trunc i64 %10254 to i8
  store i8 %10255, i8* %10253, align 1
  %10256 = getelementptr inbounds i8, i8* %10253, i64 1
  store i8 0, i8* %10256, align 1
  %10257 = and i64 %10207, 65280
  %10258 = icmp eq i64 %10257, 65280
  %10259 = select i1 %10258, i64 2, i64 1
  %10260 = getelementptr inbounds i8, i8* %10253, i64 %10259
  %10261 = trunc i64 %10207 to i8
  store i8 %10261, i8* %10260, align 1
  %10262 = getelementptr inbounds i8, i8* %10260, i64 1
  store i8 0, i8* %10262, align 1
  %10263 = and i64 %10207, 255
  %10264 = icmp eq i64 %10263, 255
  %10265 = select i1 %10264, i64 2, i64 1
  %10266 = getelementptr inbounds i8, i8* %10260, i64 %10265
  br label %10289

10267:                                            ; preds = %10200
  %10268 = lshr i64 %10202, 48
  %10269 = trunc i64 %10268 to i8
  %10270 = getelementptr inbounds i8, i8* %10192, i64 1
  store i8 %10269, i8* %10270, align 1
  %10271 = lshr i64 %10202, 40
  %10272 = trunc i64 %10271 to i8
  %10273 = getelementptr inbounds i8, i8* %10192, i64 2
  store i8 %10272, i8* %10273, align 1
  %10274 = lshr i64 %10202, 32
  %10275 = trunc i64 %10274 to i8
  %10276 = getelementptr inbounds i8, i8* %10192, i64 3
  store i8 %10275, i8* %10276, align 1
  %10277 = lshr i64 %10207, 24
  %10278 = trunc i64 %10277 to i8
  %10279 = getelementptr inbounds i8, i8* %10192, i64 4
  store i8 %10278, i8* %10279, align 1
  %10280 = lshr i64 %10207, 16
  %10281 = trunc i64 %10280 to i8
  %10282 = getelementptr inbounds i8, i8* %10192, i64 5
  store i8 %10281, i8* %10282, align 1
  %10283 = lshr i64 %10207, 8
  %10284 = trunc i64 %10283 to i8
  %10285 = getelementptr inbounds i8, i8* %10192, i64 6
  store i8 %10284, i8* %10285, align 1
  %10286 = trunc i64 %10207 to i8
  %10287 = getelementptr inbounds i8, i8* %10192, i64 7
  store i8 %10286, i8* %10287, align 1
  %10288 = getelementptr inbounds i8, i8* %10192, i64 8
  br label %10289

10289:                                            ; preds = %10267, %10214
  %10290 = phi i8* [ %10266, %10214 ], [ %10288, %10267 ]
  %10291 = add nsw i32 %10198, 64
  %10292 = load i32, i32* %10189, align 4
  %10293 = zext i32 %10292 to i64
  br label %10300

10294:                                            ; preds = %10190
  %10295 = zext i32 %10197 to i64
  %10296 = shl i64 %10193, %10295
  %10297 = load i32, i32* %10189, align 4
  %10298 = zext i32 %10297 to i64
  %10299 = or i64 %10296, %10298
  br label %10300

10300:                                            ; preds = %10294, %10289
  %10301 = phi i32 [ %10291, %10289 ], [ %10198, %10294 ]
  %10302 = phi i64 [ %10293, %10289 ], [ %10299, %10294 ]
  %10303 = phi i8* [ %10290, %10289 ], [ %10192, %10294 ]
  %10304 = icmp sgt i32 %10195, 255
  br i1 %10304, label %10190, label %10305

10305:                                            ; preds = %10300
  %10306 = and i32 %10171, 255
  br label %10307

10307:                                            ; preds = %10305, %10178
  %10308 = phi i32 [ %10168, %10178 ], [ %10301, %10305 ]
  %10309 = phi i64 [ %10169, %10178 ], [ %10302, %10305 ]
  %10310 = phi i8* [ %10170, %10178 ], [ %10303, %10305 ]
  %10311 = phi i32 [ %10171, %10178 ], [ %10306, %10305 ]
  %10312 = add nsw i32 %10311, %10185
  %10313 = zext i8 %10184 to i64
  %10314 = shl nsw i64 -1, %10313
  %10315 = trunc i64 %10314 to i32
  %10316 = xor i32 %10315, -1
  %10317 = and i32 %10180, %10316
  %10318 = sext i32 %10312 to i64
  %10319 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %10318
  %10320 = load i32, i32* %10319, align 4
  %10321 = shl i32 %10320, %10185
  %10322 = or i32 %10321, %10317
  %10323 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %10318
  %10324 = load i8, i8* %10323, align 1
  %10325 = sext i8 %10324 to i32
  %10326 = add nsw i32 %10325, %10185
  %10327 = sub nsw i32 %10308, %10326
  %10328 = icmp slt i32 %10327, 0
  br i1 %10328, label %10329, label %10421

10329:                                            ; preds = %10307
  %10330 = zext i32 %10308 to i64
  %10331 = shl i64 %10309, %10330
  %10332 = sub nsw i32 0, %10327
  %10333 = ashr i32 %10322, %10332
  %10334 = sext i32 %10333 to i64
  %10335 = or i64 %10331, %10334
  %10336 = and i64 %10335, -9187201950435737472
  %10337 = sub i64 -72340172838076674, %10335
  %10338 = and i64 %10336, %10337
  %10339 = icmp eq i64 %10338, 0
  %10340 = lshr i64 %10335, 56
  %10341 = trunc i64 %10340 to i8
  store i8 %10341, i8* %10310, align 1
  br i1 %10339, label %10395, label %10342

10342:                                            ; preds = %10329
  %10343 = getelementptr inbounds i8, i8* %10310, i64 1
  store i8 0, i8* %10343, align 1
  %10344 = icmp eq i64 %10340, 255
  %10345 = select i1 %10344, i64 2, i64 1
  %10346 = getelementptr inbounds i8, i8* %10310, i64 %10345
  %10347 = lshr i64 %10335, 48
  %10348 = trunc i64 %10347 to i8
  store i8 %10348, i8* %10346, align 1
  %10349 = getelementptr inbounds i8, i8* %10346, i64 1
  store i8 0, i8* %10349, align 1
  %10350 = and i64 %10335, 71776119061217280
  %10351 = icmp eq i64 %10350, 71776119061217280
  %10352 = select i1 %10351, i64 2, i64 1
  %10353 = getelementptr inbounds i8, i8* %10346, i64 %10352
  %10354 = lshr i64 %10335, 40
  %10355 = trunc i64 %10354 to i8
  store i8 %10355, i8* %10353, align 1
  %10356 = getelementptr inbounds i8, i8* %10353, i64 1
  store i8 0, i8* %10356, align 1
  %10357 = and i64 %10335, 280375465082880
  %10358 = icmp eq i64 %10357, 280375465082880
  %10359 = select i1 %10358, i64 2, i64 1
  %10360 = getelementptr inbounds i8, i8* %10353, i64 %10359
  %10361 = lshr i64 %10335, 32
  %10362 = trunc i64 %10361 to i8
  store i8 %10362, i8* %10360, align 1
  %10363 = getelementptr inbounds i8, i8* %10360, i64 1
  store i8 0, i8* %10363, align 1
  %10364 = and i64 %10335, 1095216660480
  %10365 = icmp eq i64 %10364, 1095216660480
  %10366 = select i1 %10365, i64 2, i64 1
  %10367 = getelementptr inbounds i8, i8* %10360, i64 %10366
  %10368 = lshr i64 %10335, 24
  %10369 = trunc i64 %10368 to i8
  store i8 %10369, i8* %10367, align 1
  %10370 = getelementptr inbounds i8, i8* %10367, i64 1
  store i8 0, i8* %10370, align 1
  %10371 = and i64 %10335, 4278190080
  %10372 = icmp eq i64 %10371, 4278190080
  %10373 = select i1 %10372, i64 2, i64 1
  %10374 = getelementptr inbounds i8, i8* %10367, i64 %10373
  %10375 = lshr i64 %10335, 16
  %10376 = trunc i64 %10375 to i8
  store i8 %10376, i8* %10374, align 1
  %10377 = getelementptr inbounds i8, i8* %10374, i64 1
  store i8 0, i8* %10377, align 1
  %10378 = and i64 %10335, 16711680
  %10379 = icmp eq i64 %10378, 16711680
  %10380 = select i1 %10379, i64 2, i64 1
  %10381 = getelementptr inbounds i8, i8* %10374, i64 %10380
  %10382 = lshr i64 %10335, 8
  %10383 = trunc i64 %10382 to i8
  store i8 %10383, i8* %10381, align 1
  %10384 = getelementptr inbounds i8, i8* %10381, i64 1
  store i8 0, i8* %10384, align 1
  %10385 = and i64 %10335, 65280
  %10386 = icmp eq i64 %10385, 65280
  %10387 = select i1 %10386, i64 2, i64 1
  %10388 = getelementptr inbounds i8, i8* %10381, i64 %10387
  %10389 = trunc i64 %10335 to i8
  store i8 %10389, i8* %10388, align 1
  %10390 = getelementptr inbounds i8, i8* %10388, i64 1
  store i8 0, i8* %10390, align 1
  %10391 = and i64 %10335, 255
  %10392 = icmp eq i64 %10391, 255
  %10393 = select i1 %10392, i64 2, i64 1
  %10394 = getelementptr inbounds i8, i8* %10388, i64 %10393
  br label %10417

10395:                                            ; preds = %10329
  %10396 = lshr i64 %10335, 48
  %10397 = trunc i64 %10396 to i8
  %10398 = getelementptr inbounds i8, i8* %10310, i64 1
  store i8 %10397, i8* %10398, align 1
  %10399 = lshr i64 %10335, 40
  %10400 = trunc i64 %10399 to i8
  %10401 = getelementptr inbounds i8, i8* %10310, i64 2
  store i8 %10400, i8* %10401, align 1
  %10402 = lshr i64 %10335, 32
  %10403 = trunc i64 %10402 to i8
  %10404 = getelementptr inbounds i8, i8* %10310, i64 3
  store i8 %10403, i8* %10404, align 1
  %10405 = lshr i64 %10335, 24
  %10406 = trunc i64 %10405 to i8
  %10407 = getelementptr inbounds i8, i8* %10310, i64 4
  store i8 %10406, i8* %10407, align 1
  %10408 = lshr i64 %10335, 16
  %10409 = trunc i64 %10408 to i8
  %10410 = getelementptr inbounds i8, i8* %10310, i64 5
  store i8 %10409, i8* %10410, align 1
  %10411 = lshr i64 %10335, 8
  %10412 = trunc i64 %10411 to i8
  %10413 = getelementptr inbounds i8, i8* %10310, i64 6
  store i8 %10412, i8* %10413, align 1
  %10414 = trunc i64 %10335 to i8
  %10415 = getelementptr inbounds i8, i8* %10310, i64 7
  store i8 %10414, i8* %10415, align 1
  %10416 = getelementptr inbounds i8, i8* %10310, i64 8
  br label %10417

10417:                                            ; preds = %10395, %10342
  %10418 = phi i8* [ %10394, %10342 ], [ %10416, %10395 ]
  %10419 = add nsw i32 %10327, 64
  %10420 = sext i32 %10322 to i64
  br label %10426

10421:                                            ; preds = %10307
  %10422 = zext i32 %10326 to i64
  %10423 = shl i64 %10309, %10422
  %10424 = sext i32 %10322 to i64
  %10425 = or i64 %10423, %10424
  br label %10426

10426:                                            ; preds = %10417, %10421, %10176
  %10427 = phi i32 [ %10168, %10176 ], [ %10419, %10417 ], [ %10327, %10421 ]
  %10428 = phi i64 [ %10169, %10176 ], [ %10420, %10417 ], [ %10425, %10421 ]
  %10429 = phi i8* [ %10170, %10176 ], [ %10418, %10417 ], [ %10310, %10421 ]
  %10430 = phi i32 [ %10177, %10176 ], [ 0, %10417 ], [ 0, %10421 ]
  %10431 = getelementptr inbounds i16, i16* %1, i64 59
  %10432 = load i16, i16* %10431, align 2
  %10433 = sext i16 %10432 to i32
  %10434 = icmp eq i16 %10432, 0
  br i1 %10434, label %10435, label %10437

10435:                                            ; preds = %10426
  %10436 = add nuw nsw i32 %10430, 16
  br label %10685

10437:                                            ; preds = %10426
  %10438 = ashr i32 %10433, 31
  %10439 = add nsw i32 %10438, %10433
  %10440 = xor i32 %10439, %10438
  %10441 = sext i32 %10440 to i64
  %10442 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %10441
  %10443 = load i8, i8* %10442, align 1
  %10444 = zext i8 %10443 to i32
  %10445 = icmp sgt i32 %10430, 255
  br i1 %10445, label %10446, label %10566

10446:                                            ; preds = %10437
  %10447 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %10448 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %10449

10449:                                            ; preds = %10446, %10559
  %10450 = phi i32 [ %10430, %10446 ], [ %10454, %10559 ]
  %10451 = phi i8* [ %10429, %10446 ], [ %10562, %10559 ]
  %10452 = phi i64 [ %10428, %10446 ], [ %10561, %10559 ]
  %10453 = phi i32 [ %10427, %10446 ], [ %10560, %10559 ]
  %10454 = add nsw i32 %10450, -256
  %10455 = load i8, i8* %10447, align 4
  %10456 = sext i8 %10455 to i32
  %10457 = sub nsw i32 %10453, %10456
  %10458 = icmp slt i32 %10457, 0
  br i1 %10458, label %10459, label %10553

10459:                                            ; preds = %10449
  %10460 = zext i32 %10453 to i64
  %10461 = shl i64 %10452, %10460
  %10462 = load i32, i32* %10448, align 4
  %10463 = sub nsw i32 0, %10457
  %10464 = lshr i32 %10462, %10463
  %10465 = zext i32 %10464 to i64
  %10466 = or i64 %10461, %10465
  %10467 = and i64 %10466, -9187201950435737472
  %10468 = sub i64 -72340172838076674, %10466
  %10469 = and i64 %10467, %10468
  %10470 = icmp eq i64 %10469, 0
  %10471 = lshr i64 %10461, 56
  %10472 = trunc i64 %10471 to i8
  store i8 %10472, i8* %10451, align 1
  br i1 %10470, label %10526, label %10473

10473:                                            ; preds = %10459
  %10474 = getelementptr inbounds i8, i8* %10451, i64 1
  store i8 0, i8* %10474, align 1
  %10475 = icmp eq i64 %10471, 255
  %10476 = select i1 %10475, i64 2, i64 1
  %10477 = getelementptr inbounds i8, i8* %10451, i64 %10476
  %10478 = lshr i64 %10461, 48
  %10479 = trunc i64 %10478 to i8
  store i8 %10479, i8* %10477, align 1
  %10480 = getelementptr inbounds i8, i8* %10477, i64 1
  store i8 0, i8* %10480, align 1
  %10481 = and i64 %10461, 71776119061217280
  %10482 = icmp eq i64 %10481, 71776119061217280
  %10483 = select i1 %10482, i64 2, i64 1
  %10484 = getelementptr inbounds i8, i8* %10477, i64 %10483
  %10485 = lshr i64 %10461, 40
  %10486 = trunc i64 %10485 to i8
  store i8 %10486, i8* %10484, align 1
  %10487 = getelementptr inbounds i8, i8* %10484, i64 1
  store i8 0, i8* %10487, align 1
  %10488 = and i64 %10461, 280375465082880
  %10489 = icmp eq i64 %10488, 280375465082880
  %10490 = select i1 %10489, i64 2, i64 1
  %10491 = getelementptr inbounds i8, i8* %10484, i64 %10490
  %10492 = lshr i64 %10461, 32
  %10493 = trunc i64 %10492 to i8
  store i8 %10493, i8* %10491, align 1
  %10494 = getelementptr inbounds i8, i8* %10491, i64 1
  store i8 0, i8* %10494, align 1
  %10495 = and i64 %10461, 1095216660480
  %10496 = icmp eq i64 %10495, 1095216660480
  %10497 = select i1 %10496, i64 2, i64 1
  %10498 = getelementptr inbounds i8, i8* %10491, i64 %10497
  %10499 = lshr i64 %10466, 24
  %10500 = trunc i64 %10499 to i8
  store i8 %10500, i8* %10498, align 1
  %10501 = getelementptr inbounds i8, i8* %10498, i64 1
  store i8 0, i8* %10501, align 1
  %10502 = and i64 %10466, 4278190080
  %10503 = icmp eq i64 %10502, 4278190080
  %10504 = select i1 %10503, i64 2, i64 1
  %10505 = getelementptr inbounds i8, i8* %10498, i64 %10504
  %10506 = lshr i64 %10466, 16
  %10507 = trunc i64 %10506 to i8
  store i8 %10507, i8* %10505, align 1
  %10508 = getelementptr inbounds i8, i8* %10505, i64 1
  store i8 0, i8* %10508, align 1
  %10509 = and i64 %10466, 16711680
  %10510 = icmp eq i64 %10509, 16711680
  %10511 = select i1 %10510, i64 2, i64 1
  %10512 = getelementptr inbounds i8, i8* %10505, i64 %10511
  %10513 = lshr i64 %10466, 8
  %10514 = trunc i64 %10513 to i8
  store i8 %10514, i8* %10512, align 1
  %10515 = getelementptr inbounds i8, i8* %10512, i64 1
  store i8 0, i8* %10515, align 1
  %10516 = and i64 %10466, 65280
  %10517 = icmp eq i64 %10516, 65280
  %10518 = select i1 %10517, i64 2, i64 1
  %10519 = getelementptr inbounds i8, i8* %10512, i64 %10518
  %10520 = trunc i64 %10466 to i8
  store i8 %10520, i8* %10519, align 1
  %10521 = getelementptr inbounds i8, i8* %10519, i64 1
  store i8 0, i8* %10521, align 1
  %10522 = and i64 %10466, 255
  %10523 = icmp eq i64 %10522, 255
  %10524 = select i1 %10523, i64 2, i64 1
  %10525 = getelementptr inbounds i8, i8* %10519, i64 %10524
  br label %10548

10526:                                            ; preds = %10459
  %10527 = lshr i64 %10461, 48
  %10528 = trunc i64 %10527 to i8
  %10529 = getelementptr inbounds i8, i8* %10451, i64 1
  store i8 %10528, i8* %10529, align 1
  %10530 = lshr i64 %10461, 40
  %10531 = trunc i64 %10530 to i8
  %10532 = getelementptr inbounds i8, i8* %10451, i64 2
  store i8 %10531, i8* %10532, align 1
  %10533 = lshr i64 %10461, 32
  %10534 = trunc i64 %10533 to i8
  %10535 = getelementptr inbounds i8, i8* %10451, i64 3
  store i8 %10534, i8* %10535, align 1
  %10536 = lshr i64 %10466, 24
  %10537 = trunc i64 %10536 to i8
  %10538 = getelementptr inbounds i8, i8* %10451, i64 4
  store i8 %10537, i8* %10538, align 1
  %10539 = lshr i64 %10466, 16
  %10540 = trunc i64 %10539 to i8
  %10541 = getelementptr inbounds i8, i8* %10451, i64 5
  store i8 %10540, i8* %10541, align 1
  %10542 = lshr i64 %10466, 8
  %10543 = trunc i64 %10542 to i8
  %10544 = getelementptr inbounds i8, i8* %10451, i64 6
  store i8 %10543, i8* %10544, align 1
  %10545 = trunc i64 %10466 to i8
  %10546 = getelementptr inbounds i8, i8* %10451, i64 7
  store i8 %10545, i8* %10546, align 1
  %10547 = getelementptr inbounds i8, i8* %10451, i64 8
  br label %10548

10548:                                            ; preds = %10526, %10473
  %10549 = phi i8* [ %10525, %10473 ], [ %10547, %10526 ]
  %10550 = add nsw i32 %10457, 64
  %10551 = load i32, i32* %10448, align 4
  %10552 = zext i32 %10551 to i64
  br label %10559

10553:                                            ; preds = %10449
  %10554 = zext i32 %10456 to i64
  %10555 = shl i64 %10452, %10554
  %10556 = load i32, i32* %10448, align 4
  %10557 = zext i32 %10556 to i64
  %10558 = or i64 %10555, %10557
  br label %10559

10559:                                            ; preds = %10553, %10548
  %10560 = phi i32 [ %10550, %10548 ], [ %10457, %10553 ]
  %10561 = phi i64 [ %10552, %10548 ], [ %10558, %10553 ]
  %10562 = phi i8* [ %10549, %10548 ], [ %10451, %10553 ]
  %10563 = icmp sgt i32 %10454, 255
  br i1 %10563, label %10449, label %10564

10564:                                            ; preds = %10559
  %10565 = and i32 %10430, 255
  br label %10566

10566:                                            ; preds = %10564, %10437
  %10567 = phi i32 [ %10427, %10437 ], [ %10560, %10564 ]
  %10568 = phi i64 [ %10428, %10437 ], [ %10561, %10564 ]
  %10569 = phi i8* [ %10429, %10437 ], [ %10562, %10564 ]
  %10570 = phi i32 [ %10430, %10437 ], [ %10565, %10564 ]
  %10571 = add nsw i32 %10570, %10444
  %10572 = zext i8 %10443 to i64
  %10573 = shl nsw i64 -1, %10572
  %10574 = trunc i64 %10573 to i32
  %10575 = xor i32 %10574, -1
  %10576 = and i32 %10439, %10575
  %10577 = sext i32 %10571 to i64
  %10578 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %10577
  %10579 = load i32, i32* %10578, align 4
  %10580 = shl i32 %10579, %10444
  %10581 = or i32 %10580, %10576
  %10582 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %10577
  %10583 = load i8, i8* %10582, align 1
  %10584 = sext i8 %10583 to i32
  %10585 = add nsw i32 %10584, %10444
  %10586 = sub nsw i32 %10567, %10585
  %10587 = icmp slt i32 %10586, 0
  br i1 %10587, label %10588, label %10680

10588:                                            ; preds = %10566
  %10589 = zext i32 %10567 to i64
  %10590 = shl i64 %10568, %10589
  %10591 = sub nsw i32 0, %10586
  %10592 = ashr i32 %10581, %10591
  %10593 = sext i32 %10592 to i64
  %10594 = or i64 %10590, %10593
  %10595 = and i64 %10594, -9187201950435737472
  %10596 = sub i64 -72340172838076674, %10594
  %10597 = and i64 %10595, %10596
  %10598 = icmp eq i64 %10597, 0
  %10599 = lshr i64 %10594, 56
  %10600 = trunc i64 %10599 to i8
  store i8 %10600, i8* %10569, align 1
  br i1 %10598, label %10654, label %10601

10601:                                            ; preds = %10588
  %10602 = getelementptr inbounds i8, i8* %10569, i64 1
  store i8 0, i8* %10602, align 1
  %10603 = icmp eq i64 %10599, 255
  %10604 = select i1 %10603, i64 2, i64 1
  %10605 = getelementptr inbounds i8, i8* %10569, i64 %10604
  %10606 = lshr i64 %10594, 48
  %10607 = trunc i64 %10606 to i8
  store i8 %10607, i8* %10605, align 1
  %10608 = getelementptr inbounds i8, i8* %10605, i64 1
  store i8 0, i8* %10608, align 1
  %10609 = and i64 %10594, 71776119061217280
  %10610 = icmp eq i64 %10609, 71776119061217280
  %10611 = select i1 %10610, i64 2, i64 1
  %10612 = getelementptr inbounds i8, i8* %10605, i64 %10611
  %10613 = lshr i64 %10594, 40
  %10614 = trunc i64 %10613 to i8
  store i8 %10614, i8* %10612, align 1
  %10615 = getelementptr inbounds i8, i8* %10612, i64 1
  store i8 0, i8* %10615, align 1
  %10616 = and i64 %10594, 280375465082880
  %10617 = icmp eq i64 %10616, 280375465082880
  %10618 = select i1 %10617, i64 2, i64 1
  %10619 = getelementptr inbounds i8, i8* %10612, i64 %10618
  %10620 = lshr i64 %10594, 32
  %10621 = trunc i64 %10620 to i8
  store i8 %10621, i8* %10619, align 1
  %10622 = getelementptr inbounds i8, i8* %10619, i64 1
  store i8 0, i8* %10622, align 1
  %10623 = and i64 %10594, 1095216660480
  %10624 = icmp eq i64 %10623, 1095216660480
  %10625 = select i1 %10624, i64 2, i64 1
  %10626 = getelementptr inbounds i8, i8* %10619, i64 %10625
  %10627 = lshr i64 %10594, 24
  %10628 = trunc i64 %10627 to i8
  store i8 %10628, i8* %10626, align 1
  %10629 = getelementptr inbounds i8, i8* %10626, i64 1
  store i8 0, i8* %10629, align 1
  %10630 = and i64 %10594, 4278190080
  %10631 = icmp eq i64 %10630, 4278190080
  %10632 = select i1 %10631, i64 2, i64 1
  %10633 = getelementptr inbounds i8, i8* %10626, i64 %10632
  %10634 = lshr i64 %10594, 16
  %10635 = trunc i64 %10634 to i8
  store i8 %10635, i8* %10633, align 1
  %10636 = getelementptr inbounds i8, i8* %10633, i64 1
  store i8 0, i8* %10636, align 1
  %10637 = and i64 %10594, 16711680
  %10638 = icmp eq i64 %10637, 16711680
  %10639 = select i1 %10638, i64 2, i64 1
  %10640 = getelementptr inbounds i8, i8* %10633, i64 %10639
  %10641 = lshr i64 %10594, 8
  %10642 = trunc i64 %10641 to i8
  store i8 %10642, i8* %10640, align 1
  %10643 = getelementptr inbounds i8, i8* %10640, i64 1
  store i8 0, i8* %10643, align 1
  %10644 = and i64 %10594, 65280
  %10645 = icmp eq i64 %10644, 65280
  %10646 = select i1 %10645, i64 2, i64 1
  %10647 = getelementptr inbounds i8, i8* %10640, i64 %10646
  %10648 = trunc i64 %10594 to i8
  store i8 %10648, i8* %10647, align 1
  %10649 = getelementptr inbounds i8, i8* %10647, i64 1
  store i8 0, i8* %10649, align 1
  %10650 = and i64 %10594, 255
  %10651 = icmp eq i64 %10650, 255
  %10652 = select i1 %10651, i64 2, i64 1
  %10653 = getelementptr inbounds i8, i8* %10647, i64 %10652
  br label %10676

10654:                                            ; preds = %10588
  %10655 = lshr i64 %10594, 48
  %10656 = trunc i64 %10655 to i8
  %10657 = getelementptr inbounds i8, i8* %10569, i64 1
  store i8 %10656, i8* %10657, align 1
  %10658 = lshr i64 %10594, 40
  %10659 = trunc i64 %10658 to i8
  %10660 = getelementptr inbounds i8, i8* %10569, i64 2
  store i8 %10659, i8* %10660, align 1
  %10661 = lshr i64 %10594, 32
  %10662 = trunc i64 %10661 to i8
  %10663 = getelementptr inbounds i8, i8* %10569, i64 3
  store i8 %10662, i8* %10663, align 1
  %10664 = lshr i64 %10594, 24
  %10665 = trunc i64 %10664 to i8
  %10666 = getelementptr inbounds i8, i8* %10569, i64 4
  store i8 %10665, i8* %10666, align 1
  %10667 = lshr i64 %10594, 16
  %10668 = trunc i64 %10667 to i8
  %10669 = getelementptr inbounds i8, i8* %10569, i64 5
  store i8 %10668, i8* %10669, align 1
  %10670 = lshr i64 %10594, 8
  %10671 = trunc i64 %10670 to i8
  %10672 = getelementptr inbounds i8, i8* %10569, i64 6
  store i8 %10671, i8* %10672, align 1
  %10673 = trunc i64 %10594 to i8
  %10674 = getelementptr inbounds i8, i8* %10569, i64 7
  store i8 %10673, i8* %10674, align 1
  %10675 = getelementptr inbounds i8, i8* %10569, i64 8
  br label %10676

10676:                                            ; preds = %10654, %10601
  %10677 = phi i8* [ %10653, %10601 ], [ %10675, %10654 ]
  %10678 = add nsw i32 %10586, 64
  %10679 = sext i32 %10581 to i64
  br label %10685

10680:                                            ; preds = %10566
  %10681 = zext i32 %10585 to i64
  %10682 = shl i64 %10568, %10681
  %10683 = sext i32 %10581 to i64
  %10684 = or i64 %10682, %10683
  br label %10685

10685:                                            ; preds = %10676, %10680, %10435
  %10686 = phi i32 [ %10427, %10435 ], [ %10678, %10676 ], [ %10586, %10680 ]
  %10687 = phi i64 [ %10428, %10435 ], [ %10679, %10676 ], [ %10684, %10680 ]
  %10688 = phi i8* [ %10429, %10435 ], [ %10677, %10676 ], [ %10569, %10680 ]
  %10689 = phi i32 [ %10436, %10435 ], [ 0, %10676 ], [ 0, %10680 ]
  %10690 = getelementptr inbounds i16, i16* %1, i64 52
  %10691 = load i16, i16* %10690, align 2
  %10692 = sext i16 %10691 to i32
  %10693 = icmp eq i16 %10691, 0
  br i1 %10693, label %10694, label %10696

10694:                                            ; preds = %10685
  %10695 = add nuw nsw i32 %10689, 16
  br label %10944

10696:                                            ; preds = %10685
  %10697 = ashr i32 %10692, 31
  %10698 = add nsw i32 %10697, %10692
  %10699 = xor i32 %10698, %10697
  %10700 = sext i32 %10699 to i64
  %10701 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %10700
  %10702 = load i8, i8* %10701, align 1
  %10703 = zext i8 %10702 to i32
  %10704 = icmp sgt i32 %10689, 255
  br i1 %10704, label %10705, label %10825

10705:                                            ; preds = %10696
  %10706 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %10707 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %10708

10708:                                            ; preds = %10705, %10818
  %10709 = phi i32 [ %10689, %10705 ], [ %10713, %10818 ]
  %10710 = phi i8* [ %10688, %10705 ], [ %10821, %10818 ]
  %10711 = phi i64 [ %10687, %10705 ], [ %10820, %10818 ]
  %10712 = phi i32 [ %10686, %10705 ], [ %10819, %10818 ]
  %10713 = add nsw i32 %10709, -256
  %10714 = load i8, i8* %10706, align 4
  %10715 = sext i8 %10714 to i32
  %10716 = sub nsw i32 %10712, %10715
  %10717 = icmp slt i32 %10716, 0
  br i1 %10717, label %10718, label %10812

10718:                                            ; preds = %10708
  %10719 = zext i32 %10712 to i64
  %10720 = shl i64 %10711, %10719
  %10721 = load i32, i32* %10707, align 4
  %10722 = sub nsw i32 0, %10716
  %10723 = lshr i32 %10721, %10722
  %10724 = zext i32 %10723 to i64
  %10725 = or i64 %10720, %10724
  %10726 = and i64 %10725, -9187201950435737472
  %10727 = sub i64 -72340172838076674, %10725
  %10728 = and i64 %10726, %10727
  %10729 = icmp eq i64 %10728, 0
  %10730 = lshr i64 %10720, 56
  %10731 = trunc i64 %10730 to i8
  store i8 %10731, i8* %10710, align 1
  br i1 %10729, label %10785, label %10732

10732:                                            ; preds = %10718
  %10733 = getelementptr inbounds i8, i8* %10710, i64 1
  store i8 0, i8* %10733, align 1
  %10734 = icmp eq i64 %10730, 255
  %10735 = select i1 %10734, i64 2, i64 1
  %10736 = getelementptr inbounds i8, i8* %10710, i64 %10735
  %10737 = lshr i64 %10720, 48
  %10738 = trunc i64 %10737 to i8
  store i8 %10738, i8* %10736, align 1
  %10739 = getelementptr inbounds i8, i8* %10736, i64 1
  store i8 0, i8* %10739, align 1
  %10740 = and i64 %10720, 71776119061217280
  %10741 = icmp eq i64 %10740, 71776119061217280
  %10742 = select i1 %10741, i64 2, i64 1
  %10743 = getelementptr inbounds i8, i8* %10736, i64 %10742
  %10744 = lshr i64 %10720, 40
  %10745 = trunc i64 %10744 to i8
  store i8 %10745, i8* %10743, align 1
  %10746 = getelementptr inbounds i8, i8* %10743, i64 1
  store i8 0, i8* %10746, align 1
  %10747 = and i64 %10720, 280375465082880
  %10748 = icmp eq i64 %10747, 280375465082880
  %10749 = select i1 %10748, i64 2, i64 1
  %10750 = getelementptr inbounds i8, i8* %10743, i64 %10749
  %10751 = lshr i64 %10720, 32
  %10752 = trunc i64 %10751 to i8
  store i8 %10752, i8* %10750, align 1
  %10753 = getelementptr inbounds i8, i8* %10750, i64 1
  store i8 0, i8* %10753, align 1
  %10754 = and i64 %10720, 1095216660480
  %10755 = icmp eq i64 %10754, 1095216660480
  %10756 = select i1 %10755, i64 2, i64 1
  %10757 = getelementptr inbounds i8, i8* %10750, i64 %10756
  %10758 = lshr i64 %10725, 24
  %10759 = trunc i64 %10758 to i8
  store i8 %10759, i8* %10757, align 1
  %10760 = getelementptr inbounds i8, i8* %10757, i64 1
  store i8 0, i8* %10760, align 1
  %10761 = and i64 %10725, 4278190080
  %10762 = icmp eq i64 %10761, 4278190080
  %10763 = select i1 %10762, i64 2, i64 1
  %10764 = getelementptr inbounds i8, i8* %10757, i64 %10763
  %10765 = lshr i64 %10725, 16
  %10766 = trunc i64 %10765 to i8
  store i8 %10766, i8* %10764, align 1
  %10767 = getelementptr inbounds i8, i8* %10764, i64 1
  store i8 0, i8* %10767, align 1
  %10768 = and i64 %10725, 16711680
  %10769 = icmp eq i64 %10768, 16711680
  %10770 = select i1 %10769, i64 2, i64 1
  %10771 = getelementptr inbounds i8, i8* %10764, i64 %10770
  %10772 = lshr i64 %10725, 8
  %10773 = trunc i64 %10772 to i8
  store i8 %10773, i8* %10771, align 1
  %10774 = getelementptr inbounds i8, i8* %10771, i64 1
  store i8 0, i8* %10774, align 1
  %10775 = and i64 %10725, 65280
  %10776 = icmp eq i64 %10775, 65280
  %10777 = select i1 %10776, i64 2, i64 1
  %10778 = getelementptr inbounds i8, i8* %10771, i64 %10777
  %10779 = trunc i64 %10725 to i8
  store i8 %10779, i8* %10778, align 1
  %10780 = getelementptr inbounds i8, i8* %10778, i64 1
  store i8 0, i8* %10780, align 1
  %10781 = and i64 %10725, 255
  %10782 = icmp eq i64 %10781, 255
  %10783 = select i1 %10782, i64 2, i64 1
  %10784 = getelementptr inbounds i8, i8* %10778, i64 %10783
  br label %10807

10785:                                            ; preds = %10718
  %10786 = lshr i64 %10720, 48
  %10787 = trunc i64 %10786 to i8
  %10788 = getelementptr inbounds i8, i8* %10710, i64 1
  store i8 %10787, i8* %10788, align 1
  %10789 = lshr i64 %10720, 40
  %10790 = trunc i64 %10789 to i8
  %10791 = getelementptr inbounds i8, i8* %10710, i64 2
  store i8 %10790, i8* %10791, align 1
  %10792 = lshr i64 %10720, 32
  %10793 = trunc i64 %10792 to i8
  %10794 = getelementptr inbounds i8, i8* %10710, i64 3
  store i8 %10793, i8* %10794, align 1
  %10795 = lshr i64 %10725, 24
  %10796 = trunc i64 %10795 to i8
  %10797 = getelementptr inbounds i8, i8* %10710, i64 4
  store i8 %10796, i8* %10797, align 1
  %10798 = lshr i64 %10725, 16
  %10799 = trunc i64 %10798 to i8
  %10800 = getelementptr inbounds i8, i8* %10710, i64 5
  store i8 %10799, i8* %10800, align 1
  %10801 = lshr i64 %10725, 8
  %10802 = trunc i64 %10801 to i8
  %10803 = getelementptr inbounds i8, i8* %10710, i64 6
  store i8 %10802, i8* %10803, align 1
  %10804 = trunc i64 %10725 to i8
  %10805 = getelementptr inbounds i8, i8* %10710, i64 7
  store i8 %10804, i8* %10805, align 1
  %10806 = getelementptr inbounds i8, i8* %10710, i64 8
  br label %10807

10807:                                            ; preds = %10785, %10732
  %10808 = phi i8* [ %10784, %10732 ], [ %10806, %10785 ]
  %10809 = add nsw i32 %10716, 64
  %10810 = load i32, i32* %10707, align 4
  %10811 = zext i32 %10810 to i64
  br label %10818

10812:                                            ; preds = %10708
  %10813 = zext i32 %10715 to i64
  %10814 = shl i64 %10711, %10813
  %10815 = load i32, i32* %10707, align 4
  %10816 = zext i32 %10815 to i64
  %10817 = or i64 %10814, %10816
  br label %10818

10818:                                            ; preds = %10812, %10807
  %10819 = phi i32 [ %10809, %10807 ], [ %10716, %10812 ]
  %10820 = phi i64 [ %10811, %10807 ], [ %10817, %10812 ]
  %10821 = phi i8* [ %10808, %10807 ], [ %10710, %10812 ]
  %10822 = icmp sgt i32 %10713, 255
  br i1 %10822, label %10708, label %10823

10823:                                            ; preds = %10818
  %10824 = and i32 %10689, 255
  br label %10825

10825:                                            ; preds = %10823, %10696
  %10826 = phi i32 [ %10686, %10696 ], [ %10819, %10823 ]
  %10827 = phi i64 [ %10687, %10696 ], [ %10820, %10823 ]
  %10828 = phi i8* [ %10688, %10696 ], [ %10821, %10823 ]
  %10829 = phi i32 [ %10689, %10696 ], [ %10824, %10823 ]
  %10830 = add nsw i32 %10829, %10703
  %10831 = zext i8 %10702 to i64
  %10832 = shl nsw i64 -1, %10831
  %10833 = trunc i64 %10832 to i32
  %10834 = xor i32 %10833, -1
  %10835 = and i32 %10698, %10834
  %10836 = sext i32 %10830 to i64
  %10837 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %10836
  %10838 = load i32, i32* %10837, align 4
  %10839 = shl i32 %10838, %10703
  %10840 = or i32 %10839, %10835
  %10841 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %10836
  %10842 = load i8, i8* %10841, align 1
  %10843 = sext i8 %10842 to i32
  %10844 = add nsw i32 %10843, %10703
  %10845 = sub nsw i32 %10826, %10844
  %10846 = icmp slt i32 %10845, 0
  br i1 %10846, label %10847, label %10939

10847:                                            ; preds = %10825
  %10848 = zext i32 %10826 to i64
  %10849 = shl i64 %10827, %10848
  %10850 = sub nsw i32 0, %10845
  %10851 = ashr i32 %10840, %10850
  %10852 = sext i32 %10851 to i64
  %10853 = or i64 %10849, %10852
  %10854 = and i64 %10853, -9187201950435737472
  %10855 = sub i64 -72340172838076674, %10853
  %10856 = and i64 %10854, %10855
  %10857 = icmp eq i64 %10856, 0
  %10858 = lshr i64 %10853, 56
  %10859 = trunc i64 %10858 to i8
  store i8 %10859, i8* %10828, align 1
  br i1 %10857, label %10913, label %10860

10860:                                            ; preds = %10847
  %10861 = getelementptr inbounds i8, i8* %10828, i64 1
  store i8 0, i8* %10861, align 1
  %10862 = icmp eq i64 %10858, 255
  %10863 = select i1 %10862, i64 2, i64 1
  %10864 = getelementptr inbounds i8, i8* %10828, i64 %10863
  %10865 = lshr i64 %10853, 48
  %10866 = trunc i64 %10865 to i8
  store i8 %10866, i8* %10864, align 1
  %10867 = getelementptr inbounds i8, i8* %10864, i64 1
  store i8 0, i8* %10867, align 1
  %10868 = and i64 %10853, 71776119061217280
  %10869 = icmp eq i64 %10868, 71776119061217280
  %10870 = select i1 %10869, i64 2, i64 1
  %10871 = getelementptr inbounds i8, i8* %10864, i64 %10870
  %10872 = lshr i64 %10853, 40
  %10873 = trunc i64 %10872 to i8
  store i8 %10873, i8* %10871, align 1
  %10874 = getelementptr inbounds i8, i8* %10871, i64 1
  store i8 0, i8* %10874, align 1
  %10875 = and i64 %10853, 280375465082880
  %10876 = icmp eq i64 %10875, 280375465082880
  %10877 = select i1 %10876, i64 2, i64 1
  %10878 = getelementptr inbounds i8, i8* %10871, i64 %10877
  %10879 = lshr i64 %10853, 32
  %10880 = trunc i64 %10879 to i8
  store i8 %10880, i8* %10878, align 1
  %10881 = getelementptr inbounds i8, i8* %10878, i64 1
  store i8 0, i8* %10881, align 1
  %10882 = and i64 %10853, 1095216660480
  %10883 = icmp eq i64 %10882, 1095216660480
  %10884 = select i1 %10883, i64 2, i64 1
  %10885 = getelementptr inbounds i8, i8* %10878, i64 %10884
  %10886 = lshr i64 %10853, 24
  %10887 = trunc i64 %10886 to i8
  store i8 %10887, i8* %10885, align 1
  %10888 = getelementptr inbounds i8, i8* %10885, i64 1
  store i8 0, i8* %10888, align 1
  %10889 = and i64 %10853, 4278190080
  %10890 = icmp eq i64 %10889, 4278190080
  %10891 = select i1 %10890, i64 2, i64 1
  %10892 = getelementptr inbounds i8, i8* %10885, i64 %10891
  %10893 = lshr i64 %10853, 16
  %10894 = trunc i64 %10893 to i8
  store i8 %10894, i8* %10892, align 1
  %10895 = getelementptr inbounds i8, i8* %10892, i64 1
  store i8 0, i8* %10895, align 1
  %10896 = and i64 %10853, 16711680
  %10897 = icmp eq i64 %10896, 16711680
  %10898 = select i1 %10897, i64 2, i64 1
  %10899 = getelementptr inbounds i8, i8* %10892, i64 %10898
  %10900 = lshr i64 %10853, 8
  %10901 = trunc i64 %10900 to i8
  store i8 %10901, i8* %10899, align 1
  %10902 = getelementptr inbounds i8, i8* %10899, i64 1
  store i8 0, i8* %10902, align 1
  %10903 = and i64 %10853, 65280
  %10904 = icmp eq i64 %10903, 65280
  %10905 = select i1 %10904, i64 2, i64 1
  %10906 = getelementptr inbounds i8, i8* %10899, i64 %10905
  %10907 = trunc i64 %10853 to i8
  store i8 %10907, i8* %10906, align 1
  %10908 = getelementptr inbounds i8, i8* %10906, i64 1
  store i8 0, i8* %10908, align 1
  %10909 = and i64 %10853, 255
  %10910 = icmp eq i64 %10909, 255
  %10911 = select i1 %10910, i64 2, i64 1
  %10912 = getelementptr inbounds i8, i8* %10906, i64 %10911
  br label %10935

10913:                                            ; preds = %10847
  %10914 = lshr i64 %10853, 48
  %10915 = trunc i64 %10914 to i8
  %10916 = getelementptr inbounds i8, i8* %10828, i64 1
  store i8 %10915, i8* %10916, align 1
  %10917 = lshr i64 %10853, 40
  %10918 = trunc i64 %10917 to i8
  %10919 = getelementptr inbounds i8, i8* %10828, i64 2
  store i8 %10918, i8* %10919, align 1
  %10920 = lshr i64 %10853, 32
  %10921 = trunc i64 %10920 to i8
  %10922 = getelementptr inbounds i8, i8* %10828, i64 3
  store i8 %10921, i8* %10922, align 1
  %10923 = lshr i64 %10853, 24
  %10924 = trunc i64 %10923 to i8
  %10925 = getelementptr inbounds i8, i8* %10828, i64 4
  store i8 %10924, i8* %10925, align 1
  %10926 = lshr i64 %10853, 16
  %10927 = trunc i64 %10926 to i8
  %10928 = getelementptr inbounds i8, i8* %10828, i64 5
  store i8 %10927, i8* %10928, align 1
  %10929 = lshr i64 %10853, 8
  %10930 = trunc i64 %10929 to i8
  %10931 = getelementptr inbounds i8, i8* %10828, i64 6
  store i8 %10930, i8* %10931, align 1
  %10932 = trunc i64 %10853 to i8
  %10933 = getelementptr inbounds i8, i8* %10828, i64 7
  store i8 %10932, i8* %10933, align 1
  %10934 = getelementptr inbounds i8, i8* %10828, i64 8
  br label %10935

10935:                                            ; preds = %10913, %10860
  %10936 = phi i8* [ %10912, %10860 ], [ %10934, %10913 ]
  %10937 = add nsw i32 %10845, 64
  %10938 = sext i32 %10840 to i64
  br label %10944

10939:                                            ; preds = %10825
  %10940 = zext i32 %10844 to i64
  %10941 = shl i64 %10827, %10940
  %10942 = sext i32 %10840 to i64
  %10943 = or i64 %10941, %10942
  br label %10944

10944:                                            ; preds = %10935, %10939, %10694
  %10945 = phi i32 [ %10686, %10694 ], [ %10937, %10935 ], [ %10845, %10939 ]
  %10946 = phi i64 [ %10687, %10694 ], [ %10938, %10935 ], [ %10943, %10939 ]
  %10947 = phi i8* [ %10688, %10694 ], [ %10936, %10935 ], [ %10828, %10939 ]
  %10948 = phi i32 [ %10695, %10694 ], [ 0, %10935 ], [ 0, %10939 ]
  %10949 = getelementptr inbounds i16, i16* %1, i64 45
  %10950 = load i16, i16* %10949, align 2
  %10951 = sext i16 %10950 to i32
  %10952 = icmp eq i16 %10950, 0
  br i1 %10952, label %10953, label %10955

10953:                                            ; preds = %10944
  %10954 = add nuw nsw i32 %10948, 16
  br label %11203

10955:                                            ; preds = %10944
  %10956 = ashr i32 %10951, 31
  %10957 = add nsw i32 %10956, %10951
  %10958 = xor i32 %10957, %10956
  %10959 = sext i32 %10958 to i64
  %10960 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %10959
  %10961 = load i8, i8* %10960, align 1
  %10962 = zext i8 %10961 to i32
  %10963 = icmp sgt i32 %10948, 255
  br i1 %10963, label %10964, label %11084

10964:                                            ; preds = %10955
  %10965 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %10966 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %10967

10967:                                            ; preds = %10964, %11077
  %10968 = phi i32 [ %10948, %10964 ], [ %10972, %11077 ]
  %10969 = phi i8* [ %10947, %10964 ], [ %11080, %11077 ]
  %10970 = phi i64 [ %10946, %10964 ], [ %11079, %11077 ]
  %10971 = phi i32 [ %10945, %10964 ], [ %11078, %11077 ]
  %10972 = add nsw i32 %10968, -256
  %10973 = load i8, i8* %10965, align 4
  %10974 = sext i8 %10973 to i32
  %10975 = sub nsw i32 %10971, %10974
  %10976 = icmp slt i32 %10975, 0
  br i1 %10976, label %10977, label %11071

10977:                                            ; preds = %10967
  %10978 = zext i32 %10971 to i64
  %10979 = shl i64 %10970, %10978
  %10980 = load i32, i32* %10966, align 4
  %10981 = sub nsw i32 0, %10975
  %10982 = lshr i32 %10980, %10981
  %10983 = zext i32 %10982 to i64
  %10984 = or i64 %10979, %10983
  %10985 = and i64 %10984, -9187201950435737472
  %10986 = sub i64 -72340172838076674, %10984
  %10987 = and i64 %10985, %10986
  %10988 = icmp eq i64 %10987, 0
  %10989 = lshr i64 %10979, 56
  %10990 = trunc i64 %10989 to i8
  store i8 %10990, i8* %10969, align 1
  br i1 %10988, label %11044, label %10991

10991:                                            ; preds = %10977
  %10992 = getelementptr inbounds i8, i8* %10969, i64 1
  store i8 0, i8* %10992, align 1
  %10993 = icmp eq i64 %10989, 255
  %10994 = select i1 %10993, i64 2, i64 1
  %10995 = getelementptr inbounds i8, i8* %10969, i64 %10994
  %10996 = lshr i64 %10979, 48
  %10997 = trunc i64 %10996 to i8
  store i8 %10997, i8* %10995, align 1
  %10998 = getelementptr inbounds i8, i8* %10995, i64 1
  store i8 0, i8* %10998, align 1
  %10999 = and i64 %10979, 71776119061217280
  %11000 = icmp eq i64 %10999, 71776119061217280
  %11001 = select i1 %11000, i64 2, i64 1
  %11002 = getelementptr inbounds i8, i8* %10995, i64 %11001
  %11003 = lshr i64 %10979, 40
  %11004 = trunc i64 %11003 to i8
  store i8 %11004, i8* %11002, align 1
  %11005 = getelementptr inbounds i8, i8* %11002, i64 1
  store i8 0, i8* %11005, align 1
  %11006 = and i64 %10979, 280375465082880
  %11007 = icmp eq i64 %11006, 280375465082880
  %11008 = select i1 %11007, i64 2, i64 1
  %11009 = getelementptr inbounds i8, i8* %11002, i64 %11008
  %11010 = lshr i64 %10979, 32
  %11011 = trunc i64 %11010 to i8
  store i8 %11011, i8* %11009, align 1
  %11012 = getelementptr inbounds i8, i8* %11009, i64 1
  store i8 0, i8* %11012, align 1
  %11013 = and i64 %10979, 1095216660480
  %11014 = icmp eq i64 %11013, 1095216660480
  %11015 = select i1 %11014, i64 2, i64 1
  %11016 = getelementptr inbounds i8, i8* %11009, i64 %11015
  %11017 = lshr i64 %10984, 24
  %11018 = trunc i64 %11017 to i8
  store i8 %11018, i8* %11016, align 1
  %11019 = getelementptr inbounds i8, i8* %11016, i64 1
  store i8 0, i8* %11019, align 1
  %11020 = and i64 %10984, 4278190080
  %11021 = icmp eq i64 %11020, 4278190080
  %11022 = select i1 %11021, i64 2, i64 1
  %11023 = getelementptr inbounds i8, i8* %11016, i64 %11022
  %11024 = lshr i64 %10984, 16
  %11025 = trunc i64 %11024 to i8
  store i8 %11025, i8* %11023, align 1
  %11026 = getelementptr inbounds i8, i8* %11023, i64 1
  store i8 0, i8* %11026, align 1
  %11027 = and i64 %10984, 16711680
  %11028 = icmp eq i64 %11027, 16711680
  %11029 = select i1 %11028, i64 2, i64 1
  %11030 = getelementptr inbounds i8, i8* %11023, i64 %11029
  %11031 = lshr i64 %10984, 8
  %11032 = trunc i64 %11031 to i8
  store i8 %11032, i8* %11030, align 1
  %11033 = getelementptr inbounds i8, i8* %11030, i64 1
  store i8 0, i8* %11033, align 1
  %11034 = and i64 %10984, 65280
  %11035 = icmp eq i64 %11034, 65280
  %11036 = select i1 %11035, i64 2, i64 1
  %11037 = getelementptr inbounds i8, i8* %11030, i64 %11036
  %11038 = trunc i64 %10984 to i8
  store i8 %11038, i8* %11037, align 1
  %11039 = getelementptr inbounds i8, i8* %11037, i64 1
  store i8 0, i8* %11039, align 1
  %11040 = and i64 %10984, 255
  %11041 = icmp eq i64 %11040, 255
  %11042 = select i1 %11041, i64 2, i64 1
  %11043 = getelementptr inbounds i8, i8* %11037, i64 %11042
  br label %11066

11044:                                            ; preds = %10977
  %11045 = lshr i64 %10979, 48
  %11046 = trunc i64 %11045 to i8
  %11047 = getelementptr inbounds i8, i8* %10969, i64 1
  store i8 %11046, i8* %11047, align 1
  %11048 = lshr i64 %10979, 40
  %11049 = trunc i64 %11048 to i8
  %11050 = getelementptr inbounds i8, i8* %10969, i64 2
  store i8 %11049, i8* %11050, align 1
  %11051 = lshr i64 %10979, 32
  %11052 = trunc i64 %11051 to i8
  %11053 = getelementptr inbounds i8, i8* %10969, i64 3
  store i8 %11052, i8* %11053, align 1
  %11054 = lshr i64 %10984, 24
  %11055 = trunc i64 %11054 to i8
  %11056 = getelementptr inbounds i8, i8* %10969, i64 4
  store i8 %11055, i8* %11056, align 1
  %11057 = lshr i64 %10984, 16
  %11058 = trunc i64 %11057 to i8
  %11059 = getelementptr inbounds i8, i8* %10969, i64 5
  store i8 %11058, i8* %11059, align 1
  %11060 = lshr i64 %10984, 8
  %11061 = trunc i64 %11060 to i8
  %11062 = getelementptr inbounds i8, i8* %10969, i64 6
  store i8 %11061, i8* %11062, align 1
  %11063 = trunc i64 %10984 to i8
  %11064 = getelementptr inbounds i8, i8* %10969, i64 7
  store i8 %11063, i8* %11064, align 1
  %11065 = getelementptr inbounds i8, i8* %10969, i64 8
  br label %11066

11066:                                            ; preds = %11044, %10991
  %11067 = phi i8* [ %11043, %10991 ], [ %11065, %11044 ]
  %11068 = add nsw i32 %10975, 64
  %11069 = load i32, i32* %10966, align 4
  %11070 = zext i32 %11069 to i64
  br label %11077

11071:                                            ; preds = %10967
  %11072 = zext i32 %10974 to i64
  %11073 = shl i64 %10970, %11072
  %11074 = load i32, i32* %10966, align 4
  %11075 = zext i32 %11074 to i64
  %11076 = or i64 %11073, %11075
  br label %11077

11077:                                            ; preds = %11071, %11066
  %11078 = phi i32 [ %11068, %11066 ], [ %10975, %11071 ]
  %11079 = phi i64 [ %11070, %11066 ], [ %11076, %11071 ]
  %11080 = phi i8* [ %11067, %11066 ], [ %10969, %11071 ]
  %11081 = icmp sgt i32 %10972, 255
  br i1 %11081, label %10967, label %11082

11082:                                            ; preds = %11077
  %11083 = and i32 %10948, 255
  br label %11084

11084:                                            ; preds = %11082, %10955
  %11085 = phi i32 [ %10945, %10955 ], [ %11078, %11082 ]
  %11086 = phi i64 [ %10946, %10955 ], [ %11079, %11082 ]
  %11087 = phi i8* [ %10947, %10955 ], [ %11080, %11082 ]
  %11088 = phi i32 [ %10948, %10955 ], [ %11083, %11082 ]
  %11089 = add nsw i32 %11088, %10962
  %11090 = zext i8 %10961 to i64
  %11091 = shl nsw i64 -1, %11090
  %11092 = trunc i64 %11091 to i32
  %11093 = xor i32 %11092, -1
  %11094 = and i32 %10957, %11093
  %11095 = sext i32 %11089 to i64
  %11096 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %11095
  %11097 = load i32, i32* %11096, align 4
  %11098 = shl i32 %11097, %10962
  %11099 = or i32 %11098, %11094
  %11100 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %11095
  %11101 = load i8, i8* %11100, align 1
  %11102 = sext i8 %11101 to i32
  %11103 = add nsw i32 %11102, %10962
  %11104 = sub nsw i32 %11085, %11103
  %11105 = icmp slt i32 %11104, 0
  br i1 %11105, label %11106, label %11198

11106:                                            ; preds = %11084
  %11107 = zext i32 %11085 to i64
  %11108 = shl i64 %11086, %11107
  %11109 = sub nsw i32 0, %11104
  %11110 = ashr i32 %11099, %11109
  %11111 = sext i32 %11110 to i64
  %11112 = or i64 %11108, %11111
  %11113 = and i64 %11112, -9187201950435737472
  %11114 = sub i64 -72340172838076674, %11112
  %11115 = and i64 %11113, %11114
  %11116 = icmp eq i64 %11115, 0
  %11117 = lshr i64 %11112, 56
  %11118 = trunc i64 %11117 to i8
  store i8 %11118, i8* %11087, align 1
  br i1 %11116, label %11172, label %11119

11119:                                            ; preds = %11106
  %11120 = getelementptr inbounds i8, i8* %11087, i64 1
  store i8 0, i8* %11120, align 1
  %11121 = icmp eq i64 %11117, 255
  %11122 = select i1 %11121, i64 2, i64 1
  %11123 = getelementptr inbounds i8, i8* %11087, i64 %11122
  %11124 = lshr i64 %11112, 48
  %11125 = trunc i64 %11124 to i8
  store i8 %11125, i8* %11123, align 1
  %11126 = getelementptr inbounds i8, i8* %11123, i64 1
  store i8 0, i8* %11126, align 1
  %11127 = and i64 %11112, 71776119061217280
  %11128 = icmp eq i64 %11127, 71776119061217280
  %11129 = select i1 %11128, i64 2, i64 1
  %11130 = getelementptr inbounds i8, i8* %11123, i64 %11129
  %11131 = lshr i64 %11112, 40
  %11132 = trunc i64 %11131 to i8
  store i8 %11132, i8* %11130, align 1
  %11133 = getelementptr inbounds i8, i8* %11130, i64 1
  store i8 0, i8* %11133, align 1
  %11134 = and i64 %11112, 280375465082880
  %11135 = icmp eq i64 %11134, 280375465082880
  %11136 = select i1 %11135, i64 2, i64 1
  %11137 = getelementptr inbounds i8, i8* %11130, i64 %11136
  %11138 = lshr i64 %11112, 32
  %11139 = trunc i64 %11138 to i8
  store i8 %11139, i8* %11137, align 1
  %11140 = getelementptr inbounds i8, i8* %11137, i64 1
  store i8 0, i8* %11140, align 1
  %11141 = and i64 %11112, 1095216660480
  %11142 = icmp eq i64 %11141, 1095216660480
  %11143 = select i1 %11142, i64 2, i64 1
  %11144 = getelementptr inbounds i8, i8* %11137, i64 %11143
  %11145 = lshr i64 %11112, 24
  %11146 = trunc i64 %11145 to i8
  store i8 %11146, i8* %11144, align 1
  %11147 = getelementptr inbounds i8, i8* %11144, i64 1
  store i8 0, i8* %11147, align 1
  %11148 = and i64 %11112, 4278190080
  %11149 = icmp eq i64 %11148, 4278190080
  %11150 = select i1 %11149, i64 2, i64 1
  %11151 = getelementptr inbounds i8, i8* %11144, i64 %11150
  %11152 = lshr i64 %11112, 16
  %11153 = trunc i64 %11152 to i8
  store i8 %11153, i8* %11151, align 1
  %11154 = getelementptr inbounds i8, i8* %11151, i64 1
  store i8 0, i8* %11154, align 1
  %11155 = and i64 %11112, 16711680
  %11156 = icmp eq i64 %11155, 16711680
  %11157 = select i1 %11156, i64 2, i64 1
  %11158 = getelementptr inbounds i8, i8* %11151, i64 %11157
  %11159 = lshr i64 %11112, 8
  %11160 = trunc i64 %11159 to i8
  store i8 %11160, i8* %11158, align 1
  %11161 = getelementptr inbounds i8, i8* %11158, i64 1
  store i8 0, i8* %11161, align 1
  %11162 = and i64 %11112, 65280
  %11163 = icmp eq i64 %11162, 65280
  %11164 = select i1 %11163, i64 2, i64 1
  %11165 = getelementptr inbounds i8, i8* %11158, i64 %11164
  %11166 = trunc i64 %11112 to i8
  store i8 %11166, i8* %11165, align 1
  %11167 = getelementptr inbounds i8, i8* %11165, i64 1
  store i8 0, i8* %11167, align 1
  %11168 = and i64 %11112, 255
  %11169 = icmp eq i64 %11168, 255
  %11170 = select i1 %11169, i64 2, i64 1
  %11171 = getelementptr inbounds i8, i8* %11165, i64 %11170
  br label %11194

11172:                                            ; preds = %11106
  %11173 = lshr i64 %11112, 48
  %11174 = trunc i64 %11173 to i8
  %11175 = getelementptr inbounds i8, i8* %11087, i64 1
  store i8 %11174, i8* %11175, align 1
  %11176 = lshr i64 %11112, 40
  %11177 = trunc i64 %11176 to i8
  %11178 = getelementptr inbounds i8, i8* %11087, i64 2
  store i8 %11177, i8* %11178, align 1
  %11179 = lshr i64 %11112, 32
  %11180 = trunc i64 %11179 to i8
  %11181 = getelementptr inbounds i8, i8* %11087, i64 3
  store i8 %11180, i8* %11181, align 1
  %11182 = lshr i64 %11112, 24
  %11183 = trunc i64 %11182 to i8
  %11184 = getelementptr inbounds i8, i8* %11087, i64 4
  store i8 %11183, i8* %11184, align 1
  %11185 = lshr i64 %11112, 16
  %11186 = trunc i64 %11185 to i8
  %11187 = getelementptr inbounds i8, i8* %11087, i64 5
  store i8 %11186, i8* %11187, align 1
  %11188 = lshr i64 %11112, 8
  %11189 = trunc i64 %11188 to i8
  %11190 = getelementptr inbounds i8, i8* %11087, i64 6
  store i8 %11189, i8* %11190, align 1
  %11191 = trunc i64 %11112 to i8
  %11192 = getelementptr inbounds i8, i8* %11087, i64 7
  store i8 %11191, i8* %11192, align 1
  %11193 = getelementptr inbounds i8, i8* %11087, i64 8
  br label %11194

11194:                                            ; preds = %11172, %11119
  %11195 = phi i8* [ %11171, %11119 ], [ %11193, %11172 ]
  %11196 = add nsw i32 %11104, 64
  %11197 = sext i32 %11099 to i64
  br label %11203

11198:                                            ; preds = %11084
  %11199 = zext i32 %11103 to i64
  %11200 = shl i64 %11086, %11199
  %11201 = sext i32 %11099 to i64
  %11202 = or i64 %11200, %11201
  br label %11203

11203:                                            ; preds = %11194, %11198, %10953
  %11204 = phi i32 [ %10945, %10953 ], [ %11196, %11194 ], [ %11104, %11198 ]
  %11205 = phi i64 [ %10946, %10953 ], [ %11197, %11194 ], [ %11202, %11198 ]
  %11206 = phi i8* [ %10947, %10953 ], [ %11195, %11194 ], [ %11087, %11198 ]
  %11207 = phi i32 [ %10954, %10953 ], [ 0, %11194 ], [ 0, %11198 ]
  %11208 = getelementptr inbounds i16, i16* %1, i64 38
  %11209 = load i16, i16* %11208, align 2
  %11210 = sext i16 %11209 to i32
  %11211 = icmp eq i16 %11209, 0
  br i1 %11211, label %11212, label %11214

11212:                                            ; preds = %11203
  %11213 = add nuw nsw i32 %11207, 16
  br label %11462

11214:                                            ; preds = %11203
  %11215 = ashr i32 %11210, 31
  %11216 = add nsw i32 %11215, %11210
  %11217 = xor i32 %11216, %11215
  %11218 = sext i32 %11217 to i64
  %11219 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %11218
  %11220 = load i8, i8* %11219, align 1
  %11221 = zext i8 %11220 to i32
  %11222 = icmp sgt i32 %11207, 255
  br i1 %11222, label %11223, label %11343

11223:                                            ; preds = %11214
  %11224 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %11225 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %11226

11226:                                            ; preds = %11223, %11336
  %11227 = phi i32 [ %11207, %11223 ], [ %11231, %11336 ]
  %11228 = phi i8* [ %11206, %11223 ], [ %11339, %11336 ]
  %11229 = phi i64 [ %11205, %11223 ], [ %11338, %11336 ]
  %11230 = phi i32 [ %11204, %11223 ], [ %11337, %11336 ]
  %11231 = add nsw i32 %11227, -256
  %11232 = load i8, i8* %11224, align 4
  %11233 = sext i8 %11232 to i32
  %11234 = sub nsw i32 %11230, %11233
  %11235 = icmp slt i32 %11234, 0
  br i1 %11235, label %11236, label %11330

11236:                                            ; preds = %11226
  %11237 = zext i32 %11230 to i64
  %11238 = shl i64 %11229, %11237
  %11239 = load i32, i32* %11225, align 4
  %11240 = sub nsw i32 0, %11234
  %11241 = lshr i32 %11239, %11240
  %11242 = zext i32 %11241 to i64
  %11243 = or i64 %11238, %11242
  %11244 = and i64 %11243, -9187201950435737472
  %11245 = sub i64 -72340172838076674, %11243
  %11246 = and i64 %11244, %11245
  %11247 = icmp eq i64 %11246, 0
  %11248 = lshr i64 %11238, 56
  %11249 = trunc i64 %11248 to i8
  store i8 %11249, i8* %11228, align 1
  br i1 %11247, label %11303, label %11250

11250:                                            ; preds = %11236
  %11251 = getelementptr inbounds i8, i8* %11228, i64 1
  store i8 0, i8* %11251, align 1
  %11252 = icmp eq i64 %11248, 255
  %11253 = select i1 %11252, i64 2, i64 1
  %11254 = getelementptr inbounds i8, i8* %11228, i64 %11253
  %11255 = lshr i64 %11238, 48
  %11256 = trunc i64 %11255 to i8
  store i8 %11256, i8* %11254, align 1
  %11257 = getelementptr inbounds i8, i8* %11254, i64 1
  store i8 0, i8* %11257, align 1
  %11258 = and i64 %11238, 71776119061217280
  %11259 = icmp eq i64 %11258, 71776119061217280
  %11260 = select i1 %11259, i64 2, i64 1
  %11261 = getelementptr inbounds i8, i8* %11254, i64 %11260
  %11262 = lshr i64 %11238, 40
  %11263 = trunc i64 %11262 to i8
  store i8 %11263, i8* %11261, align 1
  %11264 = getelementptr inbounds i8, i8* %11261, i64 1
  store i8 0, i8* %11264, align 1
  %11265 = and i64 %11238, 280375465082880
  %11266 = icmp eq i64 %11265, 280375465082880
  %11267 = select i1 %11266, i64 2, i64 1
  %11268 = getelementptr inbounds i8, i8* %11261, i64 %11267
  %11269 = lshr i64 %11238, 32
  %11270 = trunc i64 %11269 to i8
  store i8 %11270, i8* %11268, align 1
  %11271 = getelementptr inbounds i8, i8* %11268, i64 1
  store i8 0, i8* %11271, align 1
  %11272 = and i64 %11238, 1095216660480
  %11273 = icmp eq i64 %11272, 1095216660480
  %11274 = select i1 %11273, i64 2, i64 1
  %11275 = getelementptr inbounds i8, i8* %11268, i64 %11274
  %11276 = lshr i64 %11243, 24
  %11277 = trunc i64 %11276 to i8
  store i8 %11277, i8* %11275, align 1
  %11278 = getelementptr inbounds i8, i8* %11275, i64 1
  store i8 0, i8* %11278, align 1
  %11279 = and i64 %11243, 4278190080
  %11280 = icmp eq i64 %11279, 4278190080
  %11281 = select i1 %11280, i64 2, i64 1
  %11282 = getelementptr inbounds i8, i8* %11275, i64 %11281
  %11283 = lshr i64 %11243, 16
  %11284 = trunc i64 %11283 to i8
  store i8 %11284, i8* %11282, align 1
  %11285 = getelementptr inbounds i8, i8* %11282, i64 1
  store i8 0, i8* %11285, align 1
  %11286 = and i64 %11243, 16711680
  %11287 = icmp eq i64 %11286, 16711680
  %11288 = select i1 %11287, i64 2, i64 1
  %11289 = getelementptr inbounds i8, i8* %11282, i64 %11288
  %11290 = lshr i64 %11243, 8
  %11291 = trunc i64 %11290 to i8
  store i8 %11291, i8* %11289, align 1
  %11292 = getelementptr inbounds i8, i8* %11289, i64 1
  store i8 0, i8* %11292, align 1
  %11293 = and i64 %11243, 65280
  %11294 = icmp eq i64 %11293, 65280
  %11295 = select i1 %11294, i64 2, i64 1
  %11296 = getelementptr inbounds i8, i8* %11289, i64 %11295
  %11297 = trunc i64 %11243 to i8
  store i8 %11297, i8* %11296, align 1
  %11298 = getelementptr inbounds i8, i8* %11296, i64 1
  store i8 0, i8* %11298, align 1
  %11299 = and i64 %11243, 255
  %11300 = icmp eq i64 %11299, 255
  %11301 = select i1 %11300, i64 2, i64 1
  %11302 = getelementptr inbounds i8, i8* %11296, i64 %11301
  br label %11325

11303:                                            ; preds = %11236
  %11304 = lshr i64 %11238, 48
  %11305 = trunc i64 %11304 to i8
  %11306 = getelementptr inbounds i8, i8* %11228, i64 1
  store i8 %11305, i8* %11306, align 1
  %11307 = lshr i64 %11238, 40
  %11308 = trunc i64 %11307 to i8
  %11309 = getelementptr inbounds i8, i8* %11228, i64 2
  store i8 %11308, i8* %11309, align 1
  %11310 = lshr i64 %11238, 32
  %11311 = trunc i64 %11310 to i8
  %11312 = getelementptr inbounds i8, i8* %11228, i64 3
  store i8 %11311, i8* %11312, align 1
  %11313 = lshr i64 %11243, 24
  %11314 = trunc i64 %11313 to i8
  %11315 = getelementptr inbounds i8, i8* %11228, i64 4
  store i8 %11314, i8* %11315, align 1
  %11316 = lshr i64 %11243, 16
  %11317 = trunc i64 %11316 to i8
  %11318 = getelementptr inbounds i8, i8* %11228, i64 5
  store i8 %11317, i8* %11318, align 1
  %11319 = lshr i64 %11243, 8
  %11320 = trunc i64 %11319 to i8
  %11321 = getelementptr inbounds i8, i8* %11228, i64 6
  store i8 %11320, i8* %11321, align 1
  %11322 = trunc i64 %11243 to i8
  %11323 = getelementptr inbounds i8, i8* %11228, i64 7
  store i8 %11322, i8* %11323, align 1
  %11324 = getelementptr inbounds i8, i8* %11228, i64 8
  br label %11325

11325:                                            ; preds = %11303, %11250
  %11326 = phi i8* [ %11302, %11250 ], [ %11324, %11303 ]
  %11327 = add nsw i32 %11234, 64
  %11328 = load i32, i32* %11225, align 4
  %11329 = zext i32 %11328 to i64
  br label %11336

11330:                                            ; preds = %11226
  %11331 = zext i32 %11233 to i64
  %11332 = shl i64 %11229, %11331
  %11333 = load i32, i32* %11225, align 4
  %11334 = zext i32 %11333 to i64
  %11335 = or i64 %11332, %11334
  br label %11336

11336:                                            ; preds = %11330, %11325
  %11337 = phi i32 [ %11327, %11325 ], [ %11234, %11330 ]
  %11338 = phi i64 [ %11329, %11325 ], [ %11335, %11330 ]
  %11339 = phi i8* [ %11326, %11325 ], [ %11228, %11330 ]
  %11340 = icmp sgt i32 %11231, 255
  br i1 %11340, label %11226, label %11341

11341:                                            ; preds = %11336
  %11342 = and i32 %11207, 255
  br label %11343

11343:                                            ; preds = %11341, %11214
  %11344 = phi i32 [ %11204, %11214 ], [ %11337, %11341 ]
  %11345 = phi i64 [ %11205, %11214 ], [ %11338, %11341 ]
  %11346 = phi i8* [ %11206, %11214 ], [ %11339, %11341 ]
  %11347 = phi i32 [ %11207, %11214 ], [ %11342, %11341 ]
  %11348 = add nsw i32 %11347, %11221
  %11349 = zext i8 %11220 to i64
  %11350 = shl nsw i64 -1, %11349
  %11351 = trunc i64 %11350 to i32
  %11352 = xor i32 %11351, -1
  %11353 = and i32 %11216, %11352
  %11354 = sext i32 %11348 to i64
  %11355 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %11354
  %11356 = load i32, i32* %11355, align 4
  %11357 = shl i32 %11356, %11221
  %11358 = or i32 %11357, %11353
  %11359 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %11354
  %11360 = load i8, i8* %11359, align 1
  %11361 = sext i8 %11360 to i32
  %11362 = add nsw i32 %11361, %11221
  %11363 = sub nsw i32 %11344, %11362
  %11364 = icmp slt i32 %11363, 0
  br i1 %11364, label %11365, label %11457

11365:                                            ; preds = %11343
  %11366 = zext i32 %11344 to i64
  %11367 = shl i64 %11345, %11366
  %11368 = sub nsw i32 0, %11363
  %11369 = ashr i32 %11358, %11368
  %11370 = sext i32 %11369 to i64
  %11371 = or i64 %11367, %11370
  %11372 = and i64 %11371, -9187201950435737472
  %11373 = sub i64 -72340172838076674, %11371
  %11374 = and i64 %11372, %11373
  %11375 = icmp eq i64 %11374, 0
  %11376 = lshr i64 %11371, 56
  %11377 = trunc i64 %11376 to i8
  store i8 %11377, i8* %11346, align 1
  br i1 %11375, label %11431, label %11378

11378:                                            ; preds = %11365
  %11379 = getelementptr inbounds i8, i8* %11346, i64 1
  store i8 0, i8* %11379, align 1
  %11380 = icmp eq i64 %11376, 255
  %11381 = select i1 %11380, i64 2, i64 1
  %11382 = getelementptr inbounds i8, i8* %11346, i64 %11381
  %11383 = lshr i64 %11371, 48
  %11384 = trunc i64 %11383 to i8
  store i8 %11384, i8* %11382, align 1
  %11385 = getelementptr inbounds i8, i8* %11382, i64 1
  store i8 0, i8* %11385, align 1
  %11386 = and i64 %11371, 71776119061217280
  %11387 = icmp eq i64 %11386, 71776119061217280
  %11388 = select i1 %11387, i64 2, i64 1
  %11389 = getelementptr inbounds i8, i8* %11382, i64 %11388
  %11390 = lshr i64 %11371, 40
  %11391 = trunc i64 %11390 to i8
  store i8 %11391, i8* %11389, align 1
  %11392 = getelementptr inbounds i8, i8* %11389, i64 1
  store i8 0, i8* %11392, align 1
  %11393 = and i64 %11371, 280375465082880
  %11394 = icmp eq i64 %11393, 280375465082880
  %11395 = select i1 %11394, i64 2, i64 1
  %11396 = getelementptr inbounds i8, i8* %11389, i64 %11395
  %11397 = lshr i64 %11371, 32
  %11398 = trunc i64 %11397 to i8
  store i8 %11398, i8* %11396, align 1
  %11399 = getelementptr inbounds i8, i8* %11396, i64 1
  store i8 0, i8* %11399, align 1
  %11400 = and i64 %11371, 1095216660480
  %11401 = icmp eq i64 %11400, 1095216660480
  %11402 = select i1 %11401, i64 2, i64 1
  %11403 = getelementptr inbounds i8, i8* %11396, i64 %11402
  %11404 = lshr i64 %11371, 24
  %11405 = trunc i64 %11404 to i8
  store i8 %11405, i8* %11403, align 1
  %11406 = getelementptr inbounds i8, i8* %11403, i64 1
  store i8 0, i8* %11406, align 1
  %11407 = and i64 %11371, 4278190080
  %11408 = icmp eq i64 %11407, 4278190080
  %11409 = select i1 %11408, i64 2, i64 1
  %11410 = getelementptr inbounds i8, i8* %11403, i64 %11409
  %11411 = lshr i64 %11371, 16
  %11412 = trunc i64 %11411 to i8
  store i8 %11412, i8* %11410, align 1
  %11413 = getelementptr inbounds i8, i8* %11410, i64 1
  store i8 0, i8* %11413, align 1
  %11414 = and i64 %11371, 16711680
  %11415 = icmp eq i64 %11414, 16711680
  %11416 = select i1 %11415, i64 2, i64 1
  %11417 = getelementptr inbounds i8, i8* %11410, i64 %11416
  %11418 = lshr i64 %11371, 8
  %11419 = trunc i64 %11418 to i8
  store i8 %11419, i8* %11417, align 1
  %11420 = getelementptr inbounds i8, i8* %11417, i64 1
  store i8 0, i8* %11420, align 1
  %11421 = and i64 %11371, 65280
  %11422 = icmp eq i64 %11421, 65280
  %11423 = select i1 %11422, i64 2, i64 1
  %11424 = getelementptr inbounds i8, i8* %11417, i64 %11423
  %11425 = trunc i64 %11371 to i8
  store i8 %11425, i8* %11424, align 1
  %11426 = getelementptr inbounds i8, i8* %11424, i64 1
  store i8 0, i8* %11426, align 1
  %11427 = and i64 %11371, 255
  %11428 = icmp eq i64 %11427, 255
  %11429 = select i1 %11428, i64 2, i64 1
  %11430 = getelementptr inbounds i8, i8* %11424, i64 %11429
  br label %11453

11431:                                            ; preds = %11365
  %11432 = lshr i64 %11371, 48
  %11433 = trunc i64 %11432 to i8
  %11434 = getelementptr inbounds i8, i8* %11346, i64 1
  store i8 %11433, i8* %11434, align 1
  %11435 = lshr i64 %11371, 40
  %11436 = trunc i64 %11435 to i8
  %11437 = getelementptr inbounds i8, i8* %11346, i64 2
  store i8 %11436, i8* %11437, align 1
  %11438 = lshr i64 %11371, 32
  %11439 = trunc i64 %11438 to i8
  %11440 = getelementptr inbounds i8, i8* %11346, i64 3
  store i8 %11439, i8* %11440, align 1
  %11441 = lshr i64 %11371, 24
  %11442 = trunc i64 %11441 to i8
  %11443 = getelementptr inbounds i8, i8* %11346, i64 4
  store i8 %11442, i8* %11443, align 1
  %11444 = lshr i64 %11371, 16
  %11445 = trunc i64 %11444 to i8
  %11446 = getelementptr inbounds i8, i8* %11346, i64 5
  store i8 %11445, i8* %11446, align 1
  %11447 = lshr i64 %11371, 8
  %11448 = trunc i64 %11447 to i8
  %11449 = getelementptr inbounds i8, i8* %11346, i64 6
  store i8 %11448, i8* %11449, align 1
  %11450 = trunc i64 %11371 to i8
  %11451 = getelementptr inbounds i8, i8* %11346, i64 7
  store i8 %11450, i8* %11451, align 1
  %11452 = getelementptr inbounds i8, i8* %11346, i64 8
  br label %11453

11453:                                            ; preds = %11431, %11378
  %11454 = phi i8* [ %11430, %11378 ], [ %11452, %11431 ]
  %11455 = add nsw i32 %11363, 64
  %11456 = sext i32 %11358 to i64
  br label %11462

11457:                                            ; preds = %11343
  %11458 = zext i32 %11362 to i64
  %11459 = shl i64 %11345, %11458
  %11460 = sext i32 %11358 to i64
  %11461 = or i64 %11459, %11460
  br label %11462

11462:                                            ; preds = %11453, %11457, %11212
  %11463 = phi i32 [ %11204, %11212 ], [ %11455, %11453 ], [ %11363, %11457 ]
  %11464 = phi i64 [ %11205, %11212 ], [ %11456, %11453 ], [ %11461, %11457 ]
  %11465 = phi i8* [ %11206, %11212 ], [ %11454, %11453 ], [ %11346, %11457 ]
  %11466 = phi i32 [ %11213, %11212 ], [ 0, %11453 ], [ 0, %11457 ]
  %11467 = getelementptr inbounds i16, i16* %1, i64 31
  %11468 = load i16, i16* %11467, align 2
  %11469 = sext i16 %11468 to i32
  %11470 = icmp eq i16 %11468, 0
  br i1 %11470, label %11471, label %11473

11471:                                            ; preds = %11462
  %11472 = add nuw nsw i32 %11466, 16
  br label %11721

11473:                                            ; preds = %11462
  %11474 = ashr i32 %11469, 31
  %11475 = add nsw i32 %11474, %11469
  %11476 = xor i32 %11475, %11474
  %11477 = sext i32 %11476 to i64
  %11478 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %11477
  %11479 = load i8, i8* %11478, align 1
  %11480 = zext i8 %11479 to i32
  %11481 = icmp sgt i32 %11466, 255
  br i1 %11481, label %11482, label %11602

11482:                                            ; preds = %11473
  %11483 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %11484 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %11485

11485:                                            ; preds = %11482, %11595
  %11486 = phi i32 [ %11466, %11482 ], [ %11490, %11595 ]
  %11487 = phi i8* [ %11465, %11482 ], [ %11598, %11595 ]
  %11488 = phi i64 [ %11464, %11482 ], [ %11597, %11595 ]
  %11489 = phi i32 [ %11463, %11482 ], [ %11596, %11595 ]
  %11490 = add nsw i32 %11486, -256
  %11491 = load i8, i8* %11483, align 4
  %11492 = sext i8 %11491 to i32
  %11493 = sub nsw i32 %11489, %11492
  %11494 = icmp slt i32 %11493, 0
  br i1 %11494, label %11495, label %11589

11495:                                            ; preds = %11485
  %11496 = zext i32 %11489 to i64
  %11497 = shl i64 %11488, %11496
  %11498 = load i32, i32* %11484, align 4
  %11499 = sub nsw i32 0, %11493
  %11500 = lshr i32 %11498, %11499
  %11501 = zext i32 %11500 to i64
  %11502 = or i64 %11497, %11501
  %11503 = and i64 %11502, -9187201950435737472
  %11504 = sub i64 -72340172838076674, %11502
  %11505 = and i64 %11503, %11504
  %11506 = icmp eq i64 %11505, 0
  %11507 = lshr i64 %11497, 56
  %11508 = trunc i64 %11507 to i8
  store i8 %11508, i8* %11487, align 1
  br i1 %11506, label %11562, label %11509

11509:                                            ; preds = %11495
  %11510 = getelementptr inbounds i8, i8* %11487, i64 1
  store i8 0, i8* %11510, align 1
  %11511 = icmp eq i64 %11507, 255
  %11512 = select i1 %11511, i64 2, i64 1
  %11513 = getelementptr inbounds i8, i8* %11487, i64 %11512
  %11514 = lshr i64 %11497, 48
  %11515 = trunc i64 %11514 to i8
  store i8 %11515, i8* %11513, align 1
  %11516 = getelementptr inbounds i8, i8* %11513, i64 1
  store i8 0, i8* %11516, align 1
  %11517 = and i64 %11497, 71776119061217280
  %11518 = icmp eq i64 %11517, 71776119061217280
  %11519 = select i1 %11518, i64 2, i64 1
  %11520 = getelementptr inbounds i8, i8* %11513, i64 %11519
  %11521 = lshr i64 %11497, 40
  %11522 = trunc i64 %11521 to i8
  store i8 %11522, i8* %11520, align 1
  %11523 = getelementptr inbounds i8, i8* %11520, i64 1
  store i8 0, i8* %11523, align 1
  %11524 = and i64 %11497, 280375465082880
  %11525 = icmp eq i64 %11524, 280375465082880
  %11526 = select i1 %11525, i64 2, i64 1
  %11527 = getelementptr inbounds i8, i8* %11520, i64 %11526
  %11528 = lshr i64 %11497, 32
  %11529 = trunc i64 %11528 to i8
  store i8 %11529, i8* %11527, align 1
  %11530 = getelementptr inbounds i8, i8* %11527, i64 1
  store i8 0, i8* %11530, align 1
  %11531 = and i64 %11497, 1095216660480
  %11532 = icmp eq i64 %11531, 1095216660480
  %11533 = select i1 %11532, i64 2, i64 1
  %11534 = getelementptr inbounds i8, i8* %11527, i64 %11533
  %11535 = lshr i64 %11502, 24
  %11536 = trunc i64 %11535 to i8
  store i8 %11536, i8* %11534, align 1
  %11537 = getelementptr inbounds i8, i8* %11534, i64 1
  store i8 0, i8* %11537, align 1
  %11538 = and i64 %11502, 4278190080
  %11539 = icmp eq i64 %11538, 4278190080
  %11540 = select i1 %11539, i64 2, i64 1
  %11541 = getelementptr inbounds i8, i8* %11534, i64 %11540
  %11542 = lshr i64 %11502, 16
  %11543 = trunc i64 %11542 to i8
  store i8 %11543, i8* %11541, align 1
  %11544 = getelementptr inbounds i8, i8* %11541, i64 1
  store i8 0, i8* %11544, align 1
  %11545 = and i64 %11502, 16711680
  %11546 = icmp eq i64 %11545, 16711680
  %11547 = select i1 %11546, i64 2, i64 1
  %11548 = getelementptr inbounds i8, i8* %11541, i64 %11547
  %11549 = lshr i64 %11502, 8
  %11550 = trunc i64 %11549 to i8
  store i8 %11550, i8* %11548, align 1
  %11551 = getelementptr inbounds i8, i8* %11548, i64 1
  store i8 0, i8* %11551, align 1
  %11552 = and i64 %11502, 65280
  %11553 = icmp eq i64 %11552, 65280
  %11554 = select i1 %11553, i64 2, i64 1
  %11555 = getelementptr inbounds i8, i8* %11548, i64 %11554
  %11556 = trunc i64 %11502 to i8
  store i8 %11556, i8* %11555, align 1
  %11557 = getelementptr inbounds i8, i8* %11555, i64 1
  store i8 0, i8* %11557, align 1
  %11558 = and i64 %11502, 255
  %11559 = icmp eq i64 %11558, 255
  %11560 = select i1 %11559, i64 2, i64 1
  %11561 = getelementptr inbounds i8, i8* %11555, i64 %11560
  br label %11584

11562:                                            ; preds = %11495
  %11563 = lshr i64 %11497, 48
  %11564 = trunc i64 %11563 to i8
  %11565 = getelementptr inbounds i8, i8* %11487, i64 1
  store i8 %11564, i8* %11565, align 1
  %11566 = lshr i64 %11497, 40
  %11567 = trunc i64 %11566 to i8
  %11568 = getelementptr inbounds i8, i8* %11487, i64 2
  store i8 %11567, i8* %11568, align 1
  %11569 = lshr i64 %11497, 32
  %11570 = trunc i64 %11569 to i8
  %11571 = getelementptr inbounds i8, i8* %11487, i64 3
  store i8 %11570, i8* %11571, align 1
  %11572 = lshr i64 %11502, 24
  %11573 = trunc i64 %11572 to i8
  %11574 = getelementptr inbounds i8, i8* %11487, i64 4
  store i8 %11573, i8* %11574, align 1
  %11575 = lshr i64 %11502, 16
  %11576 = trunc i64 %11575 to i8
  %11577 = getelementptr inbounds i8, i8* %11487, i64 5
  store i8 %11576, i8* %11577, align 1
  %11578 = lshr i64 %11502, 8
  %11579 = trunc i64 %11578 to i8
  %11580 = getelementptr inbounds i8, i8* %11487, i64 6
  store i8 %11579, i8* %11580, align 1
  %11581 = trunc i64 %11502 to i8
  %11582 = getelementptr inbounds i8, i8* %11487, i64 7
  store i8 %11581, i8* %11582, align 1
  %11583 = getelementptr inbounds i8, i8* %11487, i64 8
  br label %11584

11584:                                            ; preds = %11562, %11509
  %11585 = phi i8* [ %11561, %11509 ], [ %11583, %11562 ]
  %11586 = add nsw i32 %11493, 64
  %11587 = load i32, i32* %11484, align 4
  %11588 = zext i32 %11587 to i64
  br label %11595

11589:                                            ; preds = %11485
  %11590 = zext i32 %11492 to i64
  %11591 = shl i64 %11488, %11590
  %11592 = load i32, i32* %11484, align 4
  %11593 = zext i32 %11592 to i64
  %11594 = or i64 %11591, %11593
  br label %11595

11595:                                            ; preds = %11589, %11584
  %11596 = phi i32 [ %11586, %11584 ], [ %11493, %11589 ]
  %11597 = phi i64 [ %11588, %11584 ], [ %11594, %11589 ]
  %11598 = phi i8* [ %11585, %11584 ], [ %11487, %11589 ]
  %11599 = icmp sgt i32 %11490, 255
  br i1 %11599, label %11485, label %11600

11600:                                            ; preds = %11595
  %11601 = and i32 %11466, 255
  br label %11602

11602:                                            ; preds = %11600, %11473
  %11603 = phi i32 [ %11463, %11473 ], [ %11596, %11600 ]
  %11604 = phi i64 [ %11464, %11473 ], [ %11597, %11600 ]
  %11605 = phi i8* [ %11465, %11473 ], [ %11598, %11600 ]
  %11606 = phi i32 [ %11466, %11473 ], [ %11601, %11600 ]
  %11607 = add nsw i32 %11606, %11480
  %11608 = zext i8 %11479 to i64
  %11609 = shl nsw i64 -1, %11608
  %11610 = trunc i64 %11609 to i32
  %11611 = xor i32 %11610, -1
  %11612 = and i32 %11475, %11611
  %11613 = sext i32 %11607 to i64
  %11614 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %11613
  %11615 = load i32, i32* %11614, align 4
  %11616 = shl i32 %11615, %11480
  %11617 = or i32 %11616, %11612
  %11618 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %11613
  %11619 = load i8, i8* %11618, align 1
  %11620 = sext i8 %11619 to i32
  %11621 = add nsw i32 %11620, %11480
  %11622 = sub nsw i32 %11603, %11621
  %11623 = icmp slt i32 %11622, 0
  br i1 %11623, label %11624, label %11716

11624:                                            ; preds = %11602
  %11625 = zext i32 %11603 to i64
  %11626 = shl i64 %11604, %11625
  %11627 = sub nsw i32 0, %11622
  %11628 = ashr i32 %11617, %11627
  %11629 = sext i32 %11628 to i64
  %11630 = or i64 %11626, %11629
  %11631 = and i64 %11630, -9187201950435737472
  %11632 = sub i64 -72340172838076674, %11630
  %11633 = and i64 %11631, %11632
  %11634 = icmp eq i64 %11633, 0
  %11635 = lshr i64 %11630, 56
  %11636 = trunc i64 %11635 to i8
  store i8 %11636, i8* %11605, align 1
  br i1 %11634, label %11690, label %11637

11637:                                            ; preds = %11624
  %11638 = getelementptr inbounds i8, i8* %11605, i64 1
  store i8 0, i8* %11638, align 1
  %11639 = icmp eq i64 %11635, 255
  %11640 = select i1 %11639, i64 2, i64 1
  %11641 = getelementptr inbounds i8, i8* %11605, i64 %11640
  %11642 = lshr i64 %11630, 48
  %11643 = trunc i64 %11642 to i8
  store i8 %11643, i8* %11641, align 1
  %11644 = getelementptr inbounds i8, i8* %11641, i64 1
  store i8 0, i8* %11644, align 1
  %11645 = and i64 %11630, 71776119061217280
  %11646 = icmp eq i64 %11645, 71776119061217280
  %11647 = select i1 %11646, i64 2, i64 1
  %11648 = getelementptr inbounds i8, i8* %11641, i64 %11647
  %11649 = lshr i64 %11630, 40
  %11650 = trunc i64 %11649 to i8
  store i8 %11650, i8* %11648, align 1
  %11651 = getelementptr inbounds i8, i8* %11648, i64 1
  store i8 0, i8* %11651, align 1
  %11652 = and i64 %11630, 280375465082880
  %11653 = icmp eq i64 %11652, 280375465082880
  %11654 = select i1 %11653, i64 2, i64 1
  %11655 = getelementptr inbounds i8, i8* %11648, i64 %11654
  %11656 = lshr i64 %11630, 32
  %11657 = trunc i64 %11656 to i8
  store i8 %11657, i8* %11655, align 1
  %11658 = getelementptr inbounds i8, i8* %11655, i64 1
  store i8 0, i8* %11658, align 1
  %11659 = and i64 %11630, 1095216660480
  %11660 = icmp eq i64 %11659, 1095216660480
  %11661 = select i1 %11660, i64 2, i64 1
  %11662 = getelementptr inbounds i8, i8* %11655, i64 %11661
  %11663 = lshr i64 %11630, 24
  %11664 = trunc i64 %11663 to i8
  store i8 %11664, i8* %11662, align 1
  %11665 = getelementptr inbounds i8, i8* %11662, i64 1
  store i8 0, i8* %11665, align 1
  %11666 = and i64 %11630, 4278190080
  %11667 = icmp eq i64 %11666, 4278190080
  %11668 = select i1 %11667, i64 2, i64 1
  %11669 = getelementptr inbounds i8, i8* %11662, i64 %11668
  %11670 = lshr i64 %11630, 16
  %11671 = trunc i64 %11670 to i8
  store i8 %11671, i8* %11669, align 1
  %11672 = getelementptr inbounds i8, i8* %11669, i64 1
  store i8 0, i8* %11672, align 1
  %11673 = and i64 %11630, 16711680
  %11674 = icmp eq i64 %11673, 16711680
  %11675 = select i1 %11674, i64 2, i64 1
  %11676 = getelementptr inbounds i8, i8* %11669, i64 %11675
  %11677 = lshr i64 %11630, 8
  %11678 = trunc i64 %11677 to i8
  store i8 %11678, i8* %11676, align 1
  %11679 = getelementptr inbounds i8, i8* %11676, i64 1
  store i8 0, i8* %11679, align 1
  %11680 = and i64 %11630, 65280
  %11681 = icmp eq i64 %11680, 65280
  %11682 = select i1 %11681, i64 2, i64 1
  %11683 = getelementptr inbounds i8, i8* %11676, i64 %11682
  %11684 = trunc i64 %11630 to i8
  store i8 %11684, i8* %11683, align 1
  %11685 = getelementptr inbounds i8, i8* %11683, i64 1
  store i8 0, i8* %11685, align 1
  %11686 = and i64 %11630, 255
  %11687 = icmp eq i64 %11686, 255
  %11688 = select i1 %11687, i64 2, i64 1
  %11689 = getelementptr inbounds i8, i8* %11683, i64 %11688
  br label %11712

11690:                                            ; preds = %11624
  %11691 = lshr i64 %11630, 48
  %11692 = trunc i64 %11691 to i8
  %11693 = getelementptr inbounds i8, i8* %11605, i64 1
  store i8 %11692, i8* %11693, align 1
  %11694 = lshr i64 %11630, 40
  %11695 = trunc i64 %11694 to i8
  %11696 = getelementptr inbounds i8, i8* %11605, i64 2
  store i8 %11695, i8* %11696, align 1
  %11697 = lshr i64 %11630, 32
  %11698 = trunc i64 %11697 to i8
  %11699 = getelementptr inbounds i8, i8* %11605, i64 3
  store i8 %11698, i8* %11699, align 1
  %11700 = lshr i64 %11630, 24
  %11701 = trunc i64 %11700 to i8
  %11702 = getelementptr inbounds i8, i8* %11605, i64 4
  store i8 %11701, i8* %11702, align 1
  %11703 = lshr i64 %11630, 16
  %11704 = trunc i64 %11703 to i8
  %11705 = getelementptr inbounds i8, i8* %11605, i64 5
  store i8 %11704, i8* %11705, align 1
  %11706 = lshr i64 %11630, 8
  %11707 = trunc i64 %11706 to i8
  %11708 = getelementptr inbounds i8, i8* %11605, i64 6
  store i8 %11707, i8* %11708, align 1
  %11709 = trunc i64 %11630 to i8
  %11710 = getelementptr inbounds i8, i8* %11605, i64 7
  store i8 %11709, i8* %11710, align 1
  %11711 = getelementptr inbounds i8, i8* %11605, i64 8
  br label %11712

11712:                                            ; preds = %11690, %11637
  %11713 = phi i8* [ %11689, %11637 ], [ %11711, %11690 ]
  %11714 = add nsw i32 %11622, 64
  %11715 = sext i32 %11617 to i64
  br label %11721

11716:                                            ; preds = %11602
  %11717 = zext i32 %11621 to i64
  %11718 = shl i64 %11604, %11717
  %11719 = sext i32 %11617 to i64
  %11720 = or i64 %11718, %11719
  br label %11721

11721:                                            ; preds = %11712, %11716, %11471
  %11722 = phi i32 [ %11463, %11471 ], [ %11714, %11712 ], [ %11622, %11716 ]
  %11723 = phi i64 [ %11464, %11471 ], [ %11715, %11712 ], [ %11720, %11716 ]
  %11724 = phi i8* [ %11465, %11471 ], [ %11713, %11712 ], [ %11605, %11716 ]
  %11725 = phi i32 [ %11472, %11471 ], [ 0, %11712 ], [ 0, %11716 ]
  %11726 = getelementptr inbounds i16, i16* %1, i64 39
  %11727 = load i16, i16* %11726, align 2
  %11728 = sext i16 %11727 to i32
  %11729 = icmp eq i16 %11727, 0
  br i1 %11729, label %11730, label %11732

11730:                                            ; preds = %11721
  %11731 = add nuw nsw i32 %11725, 16
  br label %11980

11732:                                            ; preds = %11721
  %11733 = ashr i32 %11728, 31
  %11734 = add nsw i32 %11733, %11728
  %11735 = xor i32 %11734, %11733
  %11736 = sext i32 %11735 to i64
  %11737 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %11736
  %11738 = load i8, i8* %11737, align 1
  %11739 = zext i8 %11738 to i32
  %11740 = icmp sgt i32 %11725, 255
  br i1 %11740, label %11741, label %11861

11741:                                            ; preds = %11732
  %11742 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %11743 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %11744

11744:                                            ; preds = %11741, %11854
  %11745 = phi i32 [ %11725, %11741 ], [ %11749, %11854 ]
  %11746 = phi i8* [ %11724, %11741 ], [ %11857, %11854 ]
  %11747 = phi i64 [ %11723, %11741 ], [ %11856, %11854 ]
  %11748 = phi i32 [ %11722, %11741 ], [ %11855, %11854 ]
  %11749 = add nsw i32 %11745, -256
  %11750 = load i8, i8* %11742, align 4
  %11751 = sext i8 %11750 to i32
  %11752 = sub nsw i32 %11748, %11751
  %11753 = icmp slt i32 %11752, 0
  br i1 %11753, label %11754, label %11848

11754:                                            ; preds = %11744
  %11755 = zext i32 %11748 to i64
  %11756 = shl i64 %11747, %11755
  %11757 = load i32, i32* %11743, align 4
  %11758 = sub nsw i32 0, %11752
  %11759 = lshr i32 %11757, %11758
  %11760 = zext i32 %11759 to i64
  %11761 = or i64 %11756, %11760
  %11762 = and i64 %11761, -9187201950435737472
  %11763 = sub i64 -72340172838076674, %11761
  %11764 = and i64 %11762, %11763
  %11765 = icmp eq i64 %11764, 0
  %11766 = lshr i64 %11756, 56
  %11767 = trunc i64 %11766 to i8
  store i8 %11767, i8* %11746, align 1
  br i1 %11765, label %11821, label %11768

11768:                                            ; preds = %11754
  %11769 = getelementptr inbounds i8, i8* %11746, i64 1
  store i8 0, i8* %11769, align 1
  %11770 = icmp eq i64 %11766, 255
  %11771 = select i1 %11770, i64 2, i64 1
  %11772 = getelementptr inbounds i8, i8* %11746, i64 %11771
  %11773 = lshr i64 %11756, 48
  %11774 = trunc i64 %11773 to i8
  store i8 %11774, i8* %11772, align 1
  %11775 = getelementptr inbounds i8, i8* %11772, i64 1
  store i8 0, i8* %11775, align 1
  %11776 = and i64 %11756, 71776119061217280
  %11777 = icmp eq i64 %11776, 71776119061217280
  %11778 = select i1 %11777, i64 2, i64 1
  %11779 = getelementptr inbounds i8, i8* %11772, i64 %11778
  %11780 = lshr i64 %11756, 40
  %11781 = trunc i64 %11780 to i8
  store i8 %11781, i8* %11779, align 1
  %11782 = getelementptr inbounds i8, i8* %11779, i64 1
  store i8 0, i8* %11782, align 1
  %11783 = and i64 %11756, 280375465082880
  %11784 = icmp eq i64 %11783, 280375465082880
  %11785 = select i1 %11784, i64 2, i64 1
  %11786 = getelementptr inbounds i8, i8* %11779, i64 %11785
  %11787 = lshr i64 %11756, 32
  %11788 = trunc i64 %11787 to i8
  store i8 %11788, i8* %11786, align 1
  %11789 = getelementptr inbounds i8, i8* %11786, i64 1
  store i8 0, i8* %11789, align 1
  %11790 = and i64 %11756, 1095216660480
  %11791 = icmp eq i64 %11790, 1095216660480
  %11792 = select i1 %11791, i64 2, i64 1
  %11793 = getelementptr inbounds i8, i8* %11786, i64 %11792
  %11794 = lshr i64 %11761, 24
  %11795 = trunc i64 %11794 to i8
  store i8 %11795, i8* %11793, align 1
  %11796 = getelementptr inbounds i8, i8* %11793, i64 1
  store i8 0, i8* %11796, align 1
  %11797 = and i64 %11761, 4278190080
  %11798 = icmp eq i64 %11797, 4278190080
  %11799 = select i1 %11798, i64 2, i64 1
  %11800 = getelementptr inbounds i8, i8* %11793, i64 %11799
  %11801 = lshr i64 %11761, 16
  %11802 = trunc i64 %11801 to i8
  store i8 %11802, i8* %11800, align 1
  %11803 = getelementptr inbounds i8, i8* %11800, i64 1
  store i8 0, i8* %11803, align 1
  %11804 = and i64 %11761, 16711680
  %11805 = icmp eq i64 %11804, 16711680
  %11806 = select i1 %11805, i64 2, i64 1
  %11807 = getelementptr inbounds i8, i8* %11800, i64 %11806
  %11808 = lshr i64 %11761, 8
  %11809 = trunc i64 %11808 to i8
  store i8 %11809, i8* %11807, align 1
  %11810 = getelementptr inbounds i8, i8* %11807, i64 1
  store i8 0, i8* %11810, align 1
  %11811 = and i64 %11761, 65280
  %11812 = icmp eq i64 %11811, 65280
  %11813 = select i1 %11812, i64 2, i64 1
  %11814 = getelementptr inbounds i8, i8* %11807, i64 %11813
  %11815 = trunc i64 %11761 to i8
  store i8 %11815, i8* %11814, align 1
  %11816 = getelementptr inbounds i8, i8* %11814, i64 1
  store i8 0, i8* %11816, align 1
  %11817 = and i64 %11761, 255
  %11818 = icmp eq i64 %11817, 255
  %11819 = select i1 %11818, i64 2, i64 1
  %11820 = getelementptr inbounds i8, i8* %11814, i64 %11819
  br label %11843

11821:                                            ; preds = %11754
  %11822 = lshr i64 %11756, 48
  %11823 = trunc i64 %11822 to i8
  %11824 = getelementptr inbounds i8, i8* %11746, i64 1
  store i8 %11823, i8* %11824, align 1
  %11825 = lshr i64 %11756, 40
  %11826 = trunc i64 %11825 to i8
  %11827 = getelementptr inbounds i8, i8* %11746, i64 2
  store i8 %11826, i8* %11827, align 1
  %11828 = lshr i64 %11756, 32
  %11829 = trunc i64 %11828 to i8
  %11830 = getelementptr inbounds i8, i8* %11746, i64 3
  store i8 %11829, i8* %11830, align 1
  %11831 = lshr i64 %11761, 24
  %11832 = trunc i64 %11831 to i8
  %11833 = getelementptr inbounds i8, i8* %11746, i64 4
  store i8 %11832, i8* %11833, align 1
  %11834 = lshr i64 %11761, 16
  %11835 = trunc i64 %11834 to i8
  %11836 = getelementptr inbounds i8, i8* %11746, i64 5
  store i8 %11835, i8* %11836, align 1
  %11837 = lshr i64 %11761, 8
  %11838 = trunc i64 %11837 to i8
  %11839 = getelementptr inbounds i8, i8* %11746, i64 6
  store i8 %11838, i8* %11839, align 1
  %11840 = trunc i64 %11761 to i8
  %11841 = getelementptr inbounds i8, i8* %11746, i64 7
  store i8 %11840, i8* %11841, align 1
  %11842 = getelementptr inbounds i8, i8* %11746, i64 8
  br label %11843

11843:                                            ; preds = %11821, %11768
  %11844 = phi i8* [ %11820, %11768 ], [ %11842, %11821 ]
  %11845 = add nsw i32 %11752, 64
  %11846 = load i32, i32* %11743, align 4
  %11847 = zext i32 %11846 to i64
  br label %11854

11848:                                            ; preds = %11744
  %11849 = zext i32 %11751 to i64
  %11850 = shl i64 %11747, %11849
  %11851 = load i32, i32* %11743, align 4
  %11852 = zext i32 %11851 to i64
  %11853 = or i64 %11850, %11852
  br label %11854

11854:                                            ; preds = %11848, %11843
  %11855 = phi i32 [ %11845, %11843 ], [ %11752, %11848 ]
  %11856 = phi i64 [ %11847, %11843 ], [ %11853, %11848 ]
  %11857 = phi i8* [ %11844, %11843 ], [ %11746, %11848 ]
  %11858 = icmp sgt i32 %11749, 255
  br i1 %11858, label %11744, label %11859

11859:                                            ; preds = %11854
  %11860 = and i32 %11725, 255
  br label %11861

11861:                                            ; preds = %11859, %11732
  %11862 = phi i32 [ %11722, %11732 ], [ %11855, %11859 ]
  %11863 = phi i64 [ %11723, %11732 ], [ %11856, %11859 ]
  %11864 = phi i8* [ %11724, %11732 ], [ %11857, %11859 ]
  %11865 = phi i32 [ %11725, %11732 ], [ %11860, %11859 ]
  %11866 = add nsw i32 %11865, %11739
  %11867 = zext i8 %11738 to i64
  %11868 = shl nsw i64 -1, %11867
  %11869 = trunc i64 %11868 to i32
  %11870 = xor i32 %11869, -1
  %11871 = and i32 %11734, %11870
  %11872 = sext i32 %11866 to i64
  %11873 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %11872
  %11874 = load i32, i32* %11873, align 4
  %11875 = shl i32 %11874, %11739
  %11876 = or i32 %11875, %11871
  %11877 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %11872
  %11878 = load i8, i8* %11877, align 1
  %11879 = sext i8 %11878 to i32
  %11880 = add nsw i32 %11879, %11739
  %11881 = sub nsw i32 %11862, %11880
  %11882 = icmp slt i32 %11881, 0
  br i1 %11882, label %11883, label %11975

11883:                                            ; preds = %11861
  %11884 = zext i32 %11862 to i64
  %11885 = shl i64 %11863, %11884
  %11886 = sub nsw i32 0, %11881
  %11887 = ashr i32 %11876, %11886
  %11888 = sext i32 %11887 to i64
  %11889 = or i64 %11885, %11888
  %11890 = and i64 %11889, -9187201950435737472
  %11891 = sub i64 -72340172838076674, %11889
  %11892 = and i64 %11890, %11891
  %11893 = icmp eq i64 %11892, 0
  %11894 = lshr i64 %11889, 56
  %11895 = trunc i64 %11894 to i8
  store i8 %11895, i8* %11864, align 1
  br i1 %11893, label %11949, label %11896

11896:                                            ; preds = %11883
  %11897 = getelementptr inbounds i8, i8* %11864, i64 1
  store i8 0, i8* %11897, align 1
  %11898 = icmp eq i64 %11894, 255
  %11899 = select i1 %11898, i64 2, i64 1
  %11900 = getelementptr inbounds i8, i8* %11864, i64 %11899
  %11901 = lshr i64 %11889, 48
  %11902 = trunc i64 %11901 to i8
  store i8 %11902, i8* %11900, align 1
  %11903 = getelementptr inbounds i8, i8* %11900, i64 1
  store i8 0, i8* %11903, align 1
  %11904 = and i64 %11889, 71776119061217280
  %11905 = icmp eq i64 %11904, 71776119061217280
  %11906 = select i1 %11905, i64 2, i64 1
  %11907 = getelementptr inbounds i8, i8* %11900, i64 %11906
  %11908 = lshr i64 %11889, 40
  %11909 = trunc i64 %11908 to i8
  store i8 %11909, i8* %11907, align 1
  %11910 = getelementptr inbounds i8, i8* %11907, i64 1
  store i8 0, i8* %11910, align 1
  %11911 = and i64 %11889, 280375465082880
  %11912 = icmp eq i64 %11911, 280375465082880
  %11913 = select i1 %11912, i64 2, i64 1
  %11914 = getelementptr inbounds i8, i8* %11907, i64 %11913
  %11915 = lshr i64 %11889, 32
  %11916 = trunc i64 %11915 to i8
  store i8 %11916, i8* %11914, align 1
  %11917 = getelementptr inbounds i8, i8* %11914, i64 1
  store i8 0, i8* %11917, align 1
  %11918 = and i64 %11889, 1095216660480
  %11919 = icmp eq i64 %11918, 1095216660480
  %11920 = select i1 %11919, i64 2, i64 1
  %11921 = getelementptr inbounds i8, i8* %11914, i64 %11920
  %11922 = lshr i64 %11889, 24
  %11923 = trunc i64 %11922 to i8
  store i8 %11923, i8* %11921, align 1
  %11924 = getelementptr inbounds i8, i8* %11921, i64 1
  store i8 0, i8* %11924, align 1
  %11925 = and i64 %11889, 4278190080
  %11926 = icmp eq i64 %11925, 4278190080
  %11927 = select i1 %11926, i64 2, i64 1
  %11928 = getelementptr inbounds i8, i8* %11921, i64 %11927
  %11929 = lshr i64 %11889, 16
  %11930 = trunc i64 %11929 to i8
  store i8 %11930, i8* %11928, align 1
  %11931 = getelementptr inbounds i8, i8* %11928, i64 1
  store i8 0, i8* %11931, align 1
  %11932 = and i64 %11889, 16711680
  %11933 = icmp eq i64 %11932, 16711680
  %11934 = select i1 %11933, i64 2, i64 1
  %11935 = getelementptr inbounds i8, i8* %11928, i64 %11934
  %11936 = lshr i64 %11889, 8
  %11937 = trunc i64 %11936 to i8
  store i8 %11937, i8* %11935, align 1
  %11938 = getelementptr inbounds i8, i8* %11935, i64 1
  store i8 0, i8* %11938, align 1
  %11939 = and i64 %11889, 65280
  %11940 = icmp eq i64 %11939, 65280
  %11941 = select i1 %11940, i64 2, i64 1
  %11942 = getelementptr inbounds i8, i8* %11935, i64 %11941
  %11943 = trunc i64 %11889 to i8
  store i8 %11943, i8* %11942, align 1
  %11944 = getelementptr inbounds i8, i8* %11942, i64 1
  store i8 0, i8* %11944, align 1
  %11945 = and i64 %11889, 255
  %11946 = icmp eq i64 %11945, 255
  %11947 = select i1 %11946, i64 2, i64 1
  %11948 = getelementptr inbounds i8, i8* %11942, i64 %11947
  br label %11971

11949:                                            ; preds = %11883
  %11950 = lshr i64 %11889, 48
  %11951 = trunc i64 %11950 to i8
  %11952 = getelementptr inbounds i8, i8* %11864, i64 1
  store i8 %11951, i8* %11952, align 1
  %11953 = lshr i64 %11889, 40
  %11954 = trunc i64 %11953 to i8
  %11955 = getelementptr inbounds i8, i8* %11864, i64 2
  store i8 %11954, i8* %11955, align 1
  %11956 = lshr i64 %11889, 32
  %11957 = trunc i64 %11956 to i8
  %11958 = getelementptr inbounds i8, i8* %11864, i64 3
  store i8 %11957, i8* %11958, align 1
  %11959 = lshr i64 %11889, 24
  %11960 = trunc i64 %11959 to i8
  %11961 = getelementptr inbounds i8, i8* %11864, i64 4
  store i8 %11960, i8* %11961, align 1
  %11962 = lshr i64 %11889, 16
  %11963 = trunc i64 %11962 to i8
  %11964 = getelementptr inbounds i8, i8* %11864, i64 5
  store i8 %11963, i8* %11964, align 1
  %11965 = lshr i64 %11889, 8
  %11966 = trunc i64 %11965 to i8
  %11967 = getelementptr inbounds i8, i8* %11864, i64 6
  store i8 %11966, i8* %11967, align 1
  %11968 = trunc i64 %11889 to i8
  %11969 = getelementptr inbounds i8, i8* %11864, i64 7
  store i8 %11968, i8* %11969, align 1
  %11970 = getelementptr inbounds i8, i8* %11864, i64 8
  br label %11971

11971:                                            ; preds = %11949, %11896
  %11972 = phi i8* [ %11948, %11896 ], [ %11970, %11949 ]
  %11973 = add nsw i32 %11881, 64
  %11974 = sext i32 %11876 to i64
  br label %11980

11975:                                            ; preds = %11861
  %11976 = zext i32 %11880 to i64
  %11977 = shl i64 %11863, %11976
  %11978 = sext i32 %11876 to i64
  %11979 = or i64 %11977, %11978
  br label %11980

11980:                                            ; preds = %11971, %11975, %11730
  %11981 = phi i32 [ %11722, %11730 ], [ %11973, %11971 ], [ %11881, %11975 ]
  %11982 = phi i64 [ %11723, %11730 ], [ %11974, %11971 ], [ %11979, %11975 ]
  %11983 = phi i8* [ %11724, %11730 ], [ %11972, %11971 ], [ %11864, %11975 ]
  %11984 = phi i32 [ %11731, %11730 ], [ 0, %11971 ], [ 0, %11975 ]
  %11985 = getelementptr inbounds i16, i16* %1, i64 46
  %11986 = load i16, i16* %11985, align 2
  %11987 = sext i16 %11986 to i32
  %11988 = icmp eq i16 %11986, 0
  br i1 %11988, label %11989, label %11991

11989:                                            ; preds = %11980
  %11990 = add nuw nsw i32 %11984, 16
  br label %12239

11991:                                            ; preds = %11980
  %11992 = ashr i32 %11987, 31
  %11993 = add nsw i32 %11992, %11987
  %11994 = xor i32 %11993, %11992
  %11995 = sext i32 %11994 to i64
  %11996 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %11995
  %11997 = load i8, i8* %11996, align 1
  %11998 = zext i8 %11997 to i32
  %11999 = icmp sgt i32 %11984, 255
  br i1 %11999, label %12000, label %12120

12000:                                            ; preds = %11991
  %12001 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %12002 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %12003

12003:                                            ; preds = %12000, %12113
  %12004 = phi i32 [ %11984, %12000 ], [ %12008, %12113 ]
  %12005 = phi i8* [ %11983, %12000 ], [ %12116, %12113 ]
  %12006 = phi i64 [ %11982, %12000 ], [ %12115, %12113 ]
  %12007 = phi i32 [ %11981, %12000 ], [ %12114, %12113 ]
  %12008 = add nsw i32 %12004, -256
  %12009 = load i8, i8* %12001, align 4
  %12010 = sext i8 %12009 to i32
  %12011 = sub nsw i32 %12007, %12010
  %12012 = icmp slt i32 %12011, 0
  br i1 %12012, label %12013, label %12107

12013:                                            ; preds = %12003
  %12014 = zext i32 %12007 to i64
  %12015 = shl i64 %12006, %12014
  %12016 = load i32, i32* %12002, align 4
  %12017 = sub nsw i32 0, %12011
  %12018 = lshr i32 %12016, %12017
  %12019 = zext i32 %12018 to i64
  %12020 = or i64 %12015, %12019
  %12021 = and i64 %12020, -9187201950435737472
  %12022 = sub i64 -72340172838076674, %12020
  %12023 = and i64 %12021, %12022
  %12024 = icmp eq i64 %12023, 0
  %12025 = lshr i64 %12015, 56
  %12026 = trunc i64 %12025 to i8
  store i8 %12026, i8* %12005, align 1
  br i1 %12024, label %12080, label %12027

12027:                                            ; preds = %12013
  %12028 = getelementptr inbounds i8, i8* %12005, i64 1
  store i8 0, i8* %12028, align 1
  %12029 = icmp eq i64 %12025, 255
  %12030 = select i1 %12029, i64 2, i64 1
  %12031 = getelementptr inbounds i8, i8* %12005, i64 %12030
  %12032 = lshr i64 %12015, 48
  %12033 = trunc i64 %12032 to i8
  store i8 %12033, i8* %12031, align 1
  %12034 = getelementptr inbounds i8, i8* %12031, i64 1
  store i8 0, i8* %12034, align 1
  %12035 = and i64 %12015, 71776119061217280
  %12036 = icmp eq i64 %12035, 71776119061217280
  %12037 = select i1 %12036, i64 2, i64 1
  %12038 = getelementptr inbounds i8, i8* %12031, i64 %12037
  %12039 = lshr i64 %12015, 40
  %12040 = trunc i64 %12039 to i8
  store i8 %12040, i8* %12038, align 1
  %12041 = getelementptr inbounds i8, i8* %12038, i64 1
  store i8 0, i8* %12041, align 1
  %12042 = and i64 %12015, 280375465082880
  %12043 = icmp eq i64 %12042, 280375465082880
  %12044 = select i1 %12043, i64 2, i64 1
  %12045 = getelementptr inbounds i8, i8* %12038, i64 %12044
  %12046 = lshr i64 %12015, 32
  %12047 = trunc i64 %12046 to i8
  store i8 %12047, i8* %12045, align 1
  %12048 = getelementptr inbounds i8, i8* %12045, i64 1
  store i8 0, i8* %12048, align 1
  %12049 = and i64 %12015, 1095216660480
  %12050 = icmp eq i64 %12049, 1095216660480
  %12051 = select i1 %12050, i64 2, i64 1
  %12052 = getelementptr inbounds i8, i8* %12045, i64 %12051
  %12053 = lshr i64 %12020, 24
  %12054 = trunc i64 %12053 to i8
  store i8 %12054, i8* %12052, align 1
  %12055 = getelementptr inbounds i8, i8* %12052, i64 1
  store i8 0, i8* %12055, align 1
  %12056 = and i64 %12020, 4278190080
  %12057 = icmp eq i64 %12056, 4278190080
  %12058 = select i1 %12057, i64 2, i64 1
  %12059 = getelementptr inbounds i8, i8* %12052, i64 %12058
  %12060 = lshr i64 %12020, 16
  %12061 = trunc i64 %12060 to i8
  store i8 %12061, i8* %12059, align 1
  %12062 = getelementptr inbounds i8, i8* %12059, i64 1
  store i8 0, i8* %12062, align 1
  %12063 = and i64 %12020, 16711680
  %12064 = icmp eq i64 %12063, 16711680
  %12065 = select i1 %12064, i64 2, i64 1
  %12066 = getelementptr inbounds i8, i8* %12059, i64 %12065
  %12067 = lshr i64 %12020, 8
  %12068 = trunc i64 %12067 to i8
  store i8 %12068, i8* %12066, align 1
  %12069 = getelementptr inbounds i8, i8* %12066, i64 1
  store i8 0, i8* %12069, align 1
  %12070 = and i64 %12020, 65280
  %12071 = icmp eq i64 %12070, 65280
  %12072 = select i1 %12071, i64 2, i64 1
  %12073 = getelementptr inbounds i8, i8* %12066, i64 %12072
  %12074 = trunc i64 %12020 to i8
  store i8 %12074, i8* %12073, align 1
  %12075 = getelementptr inbounds i8, i8* %12073, i64 1
  store i8 0, i8* %12075, align 1
  %12076 = and i64 %12020, 255
  %12077 = icmp eq i64 %12076, 255
  %12078 = select i1 %12077, i64 2, i64 1
  %12079 = getelementptr inbounds i8, i8* %12073, i64 %12078
  br label %12102

12080:                                            ; preds = %12013
  %12081 = lshr i64 %12015, 48
  %12082 = trunc i64 %12081 to i8
  %12083 = getelementptr inbounds i8, i8* %12005, i64 1
  store i8 %12082, i8* %12083, align 1
  %12084 = lshr i64 %12015, 40
  %12085 = trunc i64 %12084 to i8
  %12086 = getelementptr inbounds i8, i8* %12005, i64 2
  store i8 %12085, i8* %12086, align 1
  %12087 = lshr i64 %12015, 32
  %12088 = trunc i64 %12087 to i8
  %12089 = getelementptr inbounds i8, i8* %12005, i64 3
  store i8 %12088, i8* %12089, align 1
  %12090 = lshr i64 %12020, 24
  %12091 = trunc i64 %12090 to i8
  %12092 = getelementptr inbounds i8, i8* %12005, i64 4
  store i8 %12091, i8* %12092, align 1
  %12093 = lshr i64 %12020, 16
  %12094 = trunc i64 %12093 to i8
  %12095 = getelementptr inbounds i8, i8* %12005, i64 5
  store i8 %12094, i8* %12095, align 1
  %12096 = lshr i64 %12020, 8
  %12097 = trunc i64 %12096 to i8
  %12098 = getelementptr inbounds i8, i8* %12005, i64 6
  store i8 %12097, i8* %12098, align 1
  %12099 = trunc i64 %12020 to i8
  %12100 = getelementptr inbounds i8, i8* %12005, i64 7
  store i8 %12099, i8* %12100, align 1
  %12101 = getelementptr inbounds i8, i8* %12005, i64 8
  br label %12102

12102:                                            ; preds = %12080, %12027
  %12103 = phi i8* [ %12079, %12027 ], [ %12101, %12080 ]
  %12104 = add nsw i32 %12011, 64
  %12105 = load i32, i32* %12002, align 4
  %12106 = zext i32 %12105 to i64
  br label %12113

12107:                                            ; preds = %12003
  %12108 = zext i32 %12010 to i64
  %12109 = shl i64 %12006, %12108
  %12110 = load i32, i32* %12002, align 4
  %12111 = zext i32 %12110 to i64
  %12112 = or i64 %12109, %12111
  br label %12113

12113:                                            ; preds = %12107, %12102
  %12114 = phi i32 [ %12104, %12102 ], [ %12011, %12107 ]
  %12115 = phi i64 [ %12106, %12102 ], [ %12112, %12107 ]
  %12116 = phi i8* [ %12103, %12102 ], [ %12005, %12107 ]
  %12117 = icmp sgt i32 %12008, 255
  br i1 %12117, label %12003, label %12118

12118:                                            ; preds = %12113
  %12119 = and i32 %11984, 255
  br label %12120

12120:                                            ; preds = %12118, %11991
  %12121 = phi i32 [ %11981, %11991 ], [ %12114, %12118 ]
  %12122 = phi i64 [ %11982, %11991 ], [ %12115, %12118 ]
  %12123 = phi i8* [ %11983, %11991 ], [ %12116, %12118 ]
  %12124 = phi i32 [ %11984, %11991 ], [ %12119, %12118 ]
  %12125 = add nsw i32 %12124, %11998
  %12126 = zext i8 %11997 to i64
  %12127 = shl nsw i64 -1, %12126
  %12128 = trunc i64 %12127 to i32
  %12129 = xor i32 %12128, -1
  %12130 = and i32 %11993, %12129
  %12131 = sext i32 %12125 to i64
  %12132 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %12131
  %12133 = load i32, i32* %12132, align 4
  %12134 = shl i32 %12133, %11998
  %12135 = or i32 %12134, %12130
  %12136 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %12131
  %12137 = load i8, i8* %12136, align 1
  %12138 = sext i8 %12137 to i32
  %12139 = add nsw i32 %12138, %11998
  %12140 = sub nsw i32 %12121, %12139
  %12141 = icmp slt i32 %12140, 0
  br i1 %12141, label %12142, label %12234

12142:                                            ; preds = %12120
  %12143 = zext i32 %12121 to i64
  %12144 = shl i64 %12122, %12143
  %12145 = sub nsw i32 0, %12140
  %12146 = ashr i32 %12135, %12145
  %12147 = sext i32 %12146 to i64
  %12148 = or i64 %12144, %12147
  %12149 = and i64 %12148, -9187201950435737472
  %12150 = sub i64 -72340172838076674, %12148
  %12151 = and i64 %12149, %12150
  %12152 = icmp eq i64 %12151, 0
  %12153 = lshr i64 %12148, 56
  %12154 = trunc i64 %12153 to i8
  store i8 %12154, i8* %12123, align 1
  br i1 %12152, label %12208, label %12155

12155:                                            ; preds = %12142
  %12156 = getelementptr inbounds i8, i8* %12123, i64 1
  store i8 0, i8* %12156, align 1
  %12157 = icmp eq i64 %12153, 255
  %12158 = select i1 %12157, i64 2, i64 1
  %12159 = getelementptr inbounds i8, i8* %12123, i64 %12158
  %12160 = lshr i64 %12148, 48
  %12161 = trunc i64 %12160 to i8
  store i8 %12161, i8* %12159, align 1
  %12162 = getelementptr inbounds i8, i8* %12159, i64 1
  store i8 0, i8* %12162, align 1
  %12163 = and i64 %12148, 71776119061217280
  %12164 = icmp eq i64 %12163, 71776119061217280
  %12165 = select i1 %12164, i64 2, i64 1
  %12166 = getelementptr inbounds i8, i8* %12159, i64 %12165
  %12167 = lshr i64 %12148, 40
  %12168 = trunc i64 %12167 to i8
  store i8 %12168, i8* %12166, align 1
  %12169 = getelementptr inbounds i8, i8* %12166, i64 1
  store i8 0, i8* %12169, align 1
  %12170 = and i64 %12148, 280375465082880
  %12171 = icmp eq i64 %12170, 280375465082880
  %12172 = select i1 %12171, i64 2, i64 1
  %12173 = getelementptr inbounds i8, i8* %12166, i64 %12172
  %12174 = lshr i64 %12148, 32
  %12175 = trunc i64 %12174 to i8
  store i8 %12175, i8* %12173, align 1
  %12176 = getelementptr inbounds i8, i8* %12173, i64 1
  store i8 0, i8* %12176, align 1
  %12177 = and i64 %12148, 1095216660480
  %12178 = icmp eq i64 %12177, 1095216660480
  %12179 = select i1 %12178, i64 2, i64 1
  %12180 = getelementptr inbounds i8, i8* %12173, i64 %12179
  %12181 = lshr i64 %12148, 24
  %12182 = trunc i64 %12181 to i8
  store i8 %12182, i8* %12180, align 1
  %12183 = getelementptr inbounds i8, i8* %12180, i64 1
  store i8 0, i8* %12183, align 1
  %12184 = and i64 %12148, 4278190080
  %12185 = icmp eq i64 %12184, 4278190080
  %12186 = select i1 %12185, i64 2, i64 1
  %12187 = getelementptr inbounds i8, i8* %12180, i64 %12186
  %12188 = lshr i64 %12148, 16
  %12189 = trunc i64 %12188 to i8
  store i8 %12189, i8* %12187, align 1
  %12190 = getelementptr inbounds i8, i8* %12187, i64 1
  store i8 0, i8* %12190, align 1
  %12191 = and i64 %12148, 16711680
  %12192 = icmp eq i64 %12191, 16711680
  %12193 = select i1 %12192, i64 2, i64 1
  %12194 = getelementptr inbounds i8, i8* %12187, i64 %12193
  %12195 = lshr i64 %12148, 8
  %12196 = trunc i64 %12195 to i8
  store i8 %12196, i8* %12194, align 1
  %12197 = getelementptr inbounds i8, i8* %12194, i64 1
  store i8 0, i8* %12197, align 1
  %12198 = and i64 %12148, 65280
  %12199 = icmp eq i64 %12198, 65280
  %12200 = select i1 %12199, i64 2, i64 1
  %12201 = getelementptr inbounds i8, i8* %12194, i64 %12200
  %12202 = trunc i64 %12148 to i8
  store i8 %12202, i8* %12201, align 1
  %12203 = getelementptr inbounds i8, i8* %12201, i64 1
  store i8 0, i8* %12203, align 1
  %12204 = and i64 %12148, 255
  %12205 = icmp eq i64 %12204, 255
  %12206 = select i1 %12205, i64 2, i64 1
  %12207 = getelementptr inbounds i8, i8* %12201, i64 %12206
  br label %12230

12208:                                            ; preds = %12142
  %12209 = lshr i64 %12148, 48
  %12210 = trunc i64 %12209 to i8
  %12211 = getelementptr inbounds i8, i8* %12123, i64 1
  store i8 %12210, i8* %12211, align 1
  %12212 = lshr i64 %12148, 40
  %12213 = trunc i64 %12212 to i8
  %12214 = getelementptr inbounds i8, i8* %12123, i64 2
  store i8 %12213, i8* %12214, align 1
  %12215 = lshr i64 %12148, 32
  %12216 = trunc i64 %12215 to i8
  %12217 = getelementptr inbounds i8, i8* %12123, i64 3
  store i8 %12216, i8* %12217, align 1
  %12218 = lshr i64 %12148, 24
  %12219 = trunc i64 %12218 to i8
  %12220 = getelementptr inbounds i8, i8* %12123, i64 4
  store i8 %12219, i8* %12220, align 1
  %12221 = lshr i64 %12148, 16
  %12222 = trunc i64 %12221 to i8
  %12223 = getelementptr inbounds i8, i8* %12123, i64 5
  store i8 %12222, i8* %12223, align 1
  %12224 = lshr i64 %12148, 8
  %12225 = trunc i64 %12224 to i8
  %12226 = getelementptr inbounds i8, i8* %12123, i64 6
  store i8 %12225, i8* %12226, align 1
  %12227 = trunc i64 %12148 to i8
  %12228 = getelementptr inbounds i8, i8* %12123, i64 7
  store i8 %12227, i8* %12228, align 1
  %12229 = getelementptr inbounds i8, i8* %12123, i64 8
  br label %12230

12230:                                            ; preds = %12208, %12155
  %12231 = phi i8* [ %12207, %12155 ], [ %12229, %12208 ]
  %12232 = add nsw i32 %12140, 64
  %12233 = sext i32 %12135 to i64
  br label %12239

12234:                                            ; preds = %12120
  %12235 = zext i32 %12139 to i64
  %12236 = shl i64 %12122, %12235
  %12237 = sext i32 %12135 to i64
  %12238 = or i64 %12236, %12237
  br label %12239

12239:                                            ; preds = %12230, %12234, %11989
  %12240 = phi i32 [ %11981, %11989 ], [ %12232, %12230 ], [ %12140, %12234 ]
  %12241 = phi i64 [ %11982, %11989 ], [ %12233, %12230 ], [ %12238, %12234 ]
  %12242 = phi i8* [ %11983, %11989 ], [ %12231, %12230 ], [ %12123, %12234 ]
  %12243 = phi i32 [ %11990, %11989 ], [ 0, %12230 ], [ 0, %12234 ]
  %12244 = getelementptr inbounds i16, i16* %1, i64 53
  %12245 = load i16, i16* %12244, align 2
  %12246 = sext i16 %12245 to i32
  %12247 = icmp eq i16 %12245, 0
  br i1 %12247, label %12248, label %12250

12248:                                            ; preds = %12239
  %12249 = add nuw nsw i32 %12243, 16
  br label %12498

12250:                                            ; preds = %12239
  %12251 = ashr i32 %12246, 31
  %12252 = add nsw i32 %12251, %12246
  %12253 = xor i32 %12252, %12251
  %12254 = sext i32 %12253 to i64
  %12255 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %12254
  %12256 = load i8, i8* %12255, align 1
  %12257 = zext i8 %12256 to i32
  %12258 = icmp sgt i32 %12243, 255
  br i1 %12258, label %12259, label %12379

12259:                                            ; preds = %12250
  %12260 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %12261 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %12262

12262:                                            ; preds = %12259, %12372
  %12263 = phi i32 [ %12243, %12259 ], [ %12267, %12372 ]
  %12264 = phi i8* [ %12242, %12259 ], [ %12375, %12372 ]
  %12265 = phi i64 [ %12241, %12259 ], [ %12374, %12372 ]
  %12266 = phi i32 [ %12240, %12259 ], [ %12373, %12372 ]
  %12267 = add nsw i32 %12263, -256
  %12268 = load i8, i8* %12260, align 4
  %12269 = sext i8 %12268 to i32
  %12270 = sub nsw i32 %12266, %12269
  %12271 = icmp slt i32 %12270, 0
  br i1 %12271, label %12272, label %12366

12272:                                            ; preds = %12262
  %12273 = zext i32 %12266 to i64
  %12274 = shl i64 %12265, %12273
  %12275 = load i32, i32* %12261, align 4
  %12276 = sub nsw i32 0, %12270
  %12277 = lshr i32 %12275, %12276
  %12278 = zext i32 %12277 to i64
  %12279 = or i64 %12274, %12278
  %12280 = and i64 %12279, -9187201950435737472
  %12281 = sub i64 -72340172838076674, %12279
  %12282 = and i64 %12280, %12281
  %12283 = icmp eq i64 %12282, 0
  %12284 = lshr i64 %12274, 56
  %12285 = trunc i64 %12284 to i8
  store i8 %12285, i8* %12264, align 1
  br i1 %12283, label %12339, label %12286

12286:                                            ; preds = %12272
  %12287 = getelementptr inbounds i8, i8* %12264, i64 1
  store i8 0, i8* %12287, align 1
  %12288 = icmp eq i64 %12284, 255
  %12289 = select i1 %12288, i64 2, i64 1
  %12290 = getelementptr inbounds i8, i8* %12264, i64 %12289
  %12291 = lshr i64 %12274, 48
  %12292 = trunc i64 %12291 to i8
  store i8 %12292, i8* %12290, align 1
  %12293 = getelementptr inbounds i8, i8* %12290, i64 1
  store i8 0, i8* %12293, align 1
  %12294 = and i64 %12274, 71776119061217280
  %12295 = icmp eq i64 %12294, 71776119061217280
  %12296 = select i1 %12295, i64 2, i64 1
  %12297 = getelementptr inbounds i8, i8* %12290, i64 %12296
  %12298 = lshr i64 %12274, 40
  %12299 = trunc i64 %12298 to i8
  store i8 %12299, i8* %12297, align 1
  %12300 = getelementptr inbounds i8, i8* %12297, i64 1
  store i8 0, i8* %12300, align 1
  %12301 = and i64 %12274, 280375465082880
  %12302 = icmp eq i64 %12301, 280375465082880
  %12303 = select i1 %12302, i64 2, i64 1
  %12304 = getelementptr inbounds i8, i8* %12297, i64 %12303
  %12305 = lshr i64 %12274, 32
  %12306 = trunc i64 %12305 to i8
  store i8 %12306, i8* %12304, align 1
  %12307 = getelementptr inbounds i8, i8* %12304, i64 1
  store i8 0, i8* %12307, align 1
  %12308 = and i64 %12274, 1095216660480
  %12309 = icmp eq i64 %12308, 1095216660480
  %12310 = select i1 %12309, i64 2, i64 1
  %12311 = getelementptr inbounds i8, i8* %12304, i64 %12310
  %12312 = lshr i64 %12279, 24
  %12313 = trunc i64 %12312 to i8
  store i8 %12313, i8* %12311, align 1
  %12314 = getelementptr inbounds i8, i8* %12311, i64 1
  store i8 0, i8* %12314, align 1
  %12315 = and i64 %12279, 4278190080
  %12316 = icmp eq i64 %12315, 4278190080
  %12317 = select i1 %12316, i64 2, i64 1
  %12318 = getelementptr inbounds i8, i8* %12311, i64 %12317
  %12319 = lshr i64 %12279, 16
  %12320 = trunc i64 %12319 to i8
  store i8 %12320, i8* %12318, align 1
  %12321 = getelementptr inbounds i8, i8* %12318, i64 1
  store i8 0, i8* %12321, align 1
  %12322 = and i64 %12279, 16711680
  %12323 = icmp eq i64 %12322, 16711680
  %12324 = select i1 %12323, i64 2, i64 1
  %12325 = getelementptr inbounds i8, i8* %12318, i64 %12324
  %12326 = lshr i64 %12279, 8
  %12327 = trunc i64 %12326 to i8
  store i8 %12327, i8* %12325, align 1
  %12328 = getelementptr inbounds i8, i8* %12325, i64 1
  store i8 0, i8* %12328, align 1
  %12329 = and i64 %12279, 65280
  %12330 = icmp eq i64 %12329, 65280
  %12331 = select i1 %12330, i64 2, i64 1
  %12332 = getelementptr inbounds i8, i8* %12325, i64 %12331
  %12333 = trunc i64 %12279 to i8
  store i8 %12333, i8* %12332, align 1
  %12334 = getelementptr inbounds i8, i8* %12332, i64 1
  store i8 0, i8* %12334, align 1
  %12335 = and i64 %12279, 255
  %12336 = icmp eq i64 %12335, 255
  %12337 = select i1 %12336, i64 2, i64 1
  %12338 = getelementptr inbounds i8, i8* %12332, i64 %12337
  br label %12361

12339:                                            ; preds = %12272
  %12340 = lshr i64 %12274, 48
  %12341 = trunc i64 %12340 to i8
  %12342 = getelementptr inbounds i8, i8* %12264, i64 1
  store i8 %12341, i8* %12342, align 1
  %12343 = lshr i64 %12274, 40
  %12344 = trunc i64 %12343 to i8
  %12345 = getelementptr inbounds i8, i8* %12264, i64 2
  store i8 %12344, i8* %12345, align 1
  %12346 = lshr i64 %12274, 32
  %12347 = trunc i64 %12346 to i8
  %12348 = getelementptr inbounds i8, i8* %12264, i64 3
  store i8 %12347, i8* %12348, align 1
  %12349 = lshr i64 %12279, 24
  %12350 = trunc i64 %12349 to i8
  %12351 = getelementptr inbounds i8, i8* %12264, i64 4
  store i8 %12350, i8* %12351, align 1
  %12352 = lshr i64 %12279, 16
  %12353 = trunc i64 %12352 to i8
  %12354 = getelementptr inbounds i8, i8* %12264, i64 5
  store i8 %12353, i8* %12354, align 1
  %12355 = lshr i64 %12279, 8
  %12356 = trunc i64 %12355 to i8
  %12357 = getelementptr inbounds i8, i8* %12264, i64 6
  store i8 %12356, i8* %12357, align 1
  %12358 = trunc i64 %12279 to i8
  %12359 = getelementptr inbounds i8, i8* %12264, i64 7
  store i8 %12358, i8* %12359, align 1
  %12360 = getelementptr inbounds i8, i8* %12264, i64 8
  br label %12361

12361:                                            ; preds = %12339, %12286
  %12362 = phi i8* [ %12338, %12286 ], [ %12360, %12339 ]
  %12363 = add nsw i32 %12270, 64
  %12364 = load i32, i32* %12261, align 4
  %12365 = zext i32 %12364 to i64
  br label %12372

12366:                                            ; preds = %12262
  %12367 = zext i32 %12269 to i64
  %12368 = shl i64 %12265, %12367
  %12369 = load i32, i32* %12261, align 4
  %12370 = zext i32 %12369 to i64
  %12371 = or i64 %12368, %12370
  br label %12372

12372:                                            ; preds = %12366, %12361
  %12373 = phi i32 [ %12363, %12361 ], [ %12270, %12366 ]
  %12374 = phi i64 [ %12365, %12361 ], [ %12371, %12366 ]
  %12375 = phi i8* [ %12362, %12361 ], [ %12264, %12366 ]
  %12376 = icmp sgt i32 %12267, 255
  br i1 %12376, label %12262, label %12377

12377:                                            ; preds = %12372
  %12378 = and i32 %12243, 255
  br label %12379

12379:                                            ; preds = %12377, %12250
  %12380 = phi i32 [ %12240, %12250 ], [ %12373, %12377 ]
  %12381 = phi i64 [ %12241, %12250 ], [ %12374, %12377 ]
  %12382 = phi i8* [ %12242, %12250 ], [ %12375, %12377 ]
  %12383 = phi i32 [ %12243, %12250 ], [ %12378, %12377 ]
  %12384 = add nsw i32 %12383, %12257
  %12385 = zext i8 %12256 to i64
  %12386 = shl nsw i64 -1, %12385
  %12387 = trunc i64 %12386 to i32
  %12388 = xor i32 %12387, -1
  %12389 = and i32 %12252, %12388
  %12390 = sext i32 %12384 to i64
  %12391 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %12390
  %12392 = load i32, i32* %12391, align 4
  %12393 = shl i32 %12392, %12257
  %12394 = or i32 %12393, %12389
  %12395 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %12390
  %12396 = load i8, i8* %12395, align 1
  %12397 = sext i8 %12396 to i32
  %12398 = add nsw i32 %12397, %12257
  %12399 = sub nsw i32 %12380, %12398
  %12400 = icmp slt i32 %12399, 0
  br i1 %12400, label %12401, label %12493

12401:                                            ; preds = %12379
  %12402 = zext i32 %12380 to i64
  %12403 = shl i64 %12381, %12402
  %12404 = sub nsw i32 0, %12399
  %12405 = ashr i32 %12394, %12404
  %12406 = sext i32 %12405 to i64
  %12407 = or i64 %12403, %12406
  %12408 = and i64 %12407, -9187201950435737472
  %12409 = sub i64 -72340172838076674, %12407
  %12410 = and i64 %12408, %12409
  %12411 = icmp eq i64 %12410, 0
  %12412 = lshr i64 %12407, 56
  %12413 = trunc i64 %12412 to i8
  store i8 %12413, i8* %12382, align 1
  br i1 %12411, label %12467, label %12414

12414:                                            ; preds = %12401
  %12415 = getelementptr inbounds i8, i8* %12382, i64 1
  store i8 0, i8* %12415, align 1
  %12416 = icmp eq i64 %12412, 255
  %12417 = select i1 %12416, i64 2, i64 1
  %12418 = getelementptr inbounds i8, i8* %12382, i64 %12417
  %12419 = lshr i64 %12407, 48
  %12420 = trunc i64 %12419 to i8
  store i8 %12420, i8* %12418, align 1
  %12421 = getelementptr inbounds i8, i8* %12418, i64 1
  store i8 0, i8* %12421, align 1
  %12422 = and i64 %12407, 71776119061217280
  %12423 = icmp eq i64 %12422, 71776119061217280
  %12424 = select i1 %12423, i64 2, i64 1
  %12425 = getelementptr inbounds i8, i8* %12418, i64 %12424
  %12426 = lshr i64 %12407, 40
  %12427 = trunc i64 %12426 to i8
  store i8 %12427, i8* %12425, align 1
  %12428 = getelementptr inbounds i8, i8* %12425, i64 1
  store i8 0, i8* %12428, align 1
  %12429 = and i64 %12407, 280375465082880
  %12430 = icmp eq i64 %12429, 280375465082880
  %12431 = select i1 %12430, i64 2, i64 1
  %12432 = getelementptr inbounds i8, i8* %12425, i64 %12431
  %12433 = lshr i64 %12407, 32
  %12434 = trunc i64 %12433 to i8
  store i8 %12434, i8* %12432, align 1
  %12435 = getelementptr inbounds i8, i8* %12432, i64 1
  store i8 0, i8* %12435, align 1
  %12436 = and i64 %12407, 1095216660480
  %12437 = icmp eq i64 %12436, 1095216660480
  %12438 = select i1 %12437, i64 2, i64 1
  %12439 = getelementptr inbounds i8, i8* %12432, i64 %12438
  %12440 = lshr i64 %12407, 24
  %12441 = trunc i64 %12440 to i8
  store i8 %12441, i8* %12439, align 1
  %12442 = getelementptr inbounds i8, i8* %12439, i64 1
  store i8 0, i8* %12442, align 1
  %12443 = and i64 %12407, 4278190080
  %12444 = icmp eq i64 %12443, 4278190080
  %12445 = select i1 %12444, i64 2, i64 1
  %12446 = getelementptr inbounds i8, i8* %12439, i64 %12445
  %12447 = lshr i64 %12407, 16
  %12448 = trunc i64 %12447 to i8
  store i8 %12448, i8* %12446, align 1
  %12449 = getelementptr inbounds i8, i8* %12446, i64 1
  store i8 0, i8* %12449, align 1
  %12450 = and i64 %12407, 16711680
  %12451 = icmp eq i64 %12450, 16711680
  %12452 = select i1 %12451, i64 2, i64 1
  %12453 = getelementptr inbounds i8, i8* %12446, i64 %12452
  %12454 = lshr i64 %12407, 8
  %12455 = trunc i64 %12454 to i8
  store i8 %12455, i8* %12453, align 1
  %12456 = getelementptr inbounds i8, i8* %12453, i64 1
  store i8 0, i8* %12456, align 1
  %12457 = and i64 %12407, 65280
  %12458 = icmp eq i64 %12457, 65280
  %12459 = select i1 %12458, i64 2, i64 1
  %12460 = getelementptr inbounds i8, i8* %12453, i64 %12459
  %12461 = trunc i64 %12407 to i8
  store i8 %12461, i8* %12460, align 1
  %12462 = getelementptr inbounds i8, i8* %12460, i64 1
  store i8 0, i8* %12462, align 1
  %12463 = and i64 %12407, 255
  %12464 = icmp eq i64 %12463, 255
  %12465 = select i1 %12464, i64 2, i64 1
  %12466 = getelementptr inbounds i8, i8* %12460, i64 %12465
  br label %12489

12467:                                            ; preds = %12401
  %12468 = lshr i64 %12407, 48
  %12469 = trunc i64 %12468 to i8
  %12470 = getelementptr inbounds i8, i8* %12382, i64 1
  store i8 %12469, i8* %12470, align 1
  %12471 = lshr i64 %12407, 40
  %12472 = trunc i64 %12471 to i8
  %12473 = getelementptr inbounds i8, i8* %12382, i64 2
  store i8 %12472, i8* %12473, align 1
  %12474 = lshr i64 %12407, 32
  %12475 = trunc i64 %12474 to i8
  %12476 = getelementptr inbounds i8, i8* %12382, i64 3
  store i8 %12475, i8* %12476, align 1
  %12477 = lshr i64 %12407, 24
  %12478 = trunc i64 %12477 to i8
  %12479 = getelementptr inbounds i8, i8* %12382, i64 4
  store i8 %12478, i8* %12479, align 1
  %12480 = lshr i64 %12407, 16
  %12481 = trunc i64 %12480 to i8
  %12482 = getelementptr inbounds i8, i8* %12382, i64 5
  store i8 %12481, i8* %12482, align 1
  %12483 = lshr i64 %12407, 8
  %12484 = trunc i64 %12483 to i8
  %12485 = getelementptr inbounds i8, i8* %12382, i64 6
  store i8 %12484, i8* %12485, align 1
  %12486 = trunc i64 %12407 to i8
  %12487 = getelementptr inbounds i8, i8* %12382, i64 7
  store i8 %12486, i8* %12487, align 1
  %12488 = getelementptr inbounds i8, i8* %12382, i64 8
  br label %12489

12489:                                            ; preds = %12467, %12414
  %12490 = phi i8* [ %12466, %12414 ], [ %12488, %12467 ]
  %12491 = add nsw i32 %12399, 64
  %12492 = sext i32 %12394 to i64
  br label %12498

12493:                                            ; preds = %12379
  %12494 = zext i32 %12398 to i64
  %12495 = shl i64 %12381, %12494
  %12496 = sext i32 %12394 to i64
  %12497 = or i64 %12495, %12496
  br label %12498

12498:                                            ; preds = %12489, %12493, %12248
  %12499 = phi i32 [ %12240, %12248 ], [ %12491, %12489 ], [ %12399, %12493 ]
  %12500 = phi i64 [ %12241, %12248 ], [ %12492, %12489 ], [ %12497, %12493 ]
  %12501 = phi i8* [ %12242, %12248 ], [ %12490, %12489 ], [ %12382, %12493 ]
  %12502 = phi i32 [ %12249, %12248 ], [ 0, %12489 ], [ 0, %12493 ]
  %12503 = getelementptr inbounds i16, i16* %1, i64 60
  %12504 = load i16, i16* %12503, align 2
  %12505 = sext i16 %12504 to i32
  %12506 = icmp eq i16 %12504, 0
  br i1 %12506, label %12507, label %12509

12507:                                            ; preds = %12498
  %12508 = add nuw nsw i32 %12502, 16
  br label %12757

12509:                                            ; preds = %12498
  %12510 = ashr i32 %12505, 31
  %12511 = add nsw i32 %12510, %12505
  %12512 = xor i32 %12511, %12510
  %12513 = sext i32 %12512 to i64
  %12514 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %12513
  %12515 = load i8, i8* %12514, align 1
  %12516 = zext i8 %12515 to i32
  %12517 = icmp sgt i32 %12502, 255
  br i1 %12517, label %12518, label %12638

12518:                                            ; preds = %12509
  %12519 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %12520 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %12521

12521:                                            ; preds = %12518, %12631
  %12522 = phi i32 [ %12502, %12518 ], [ %12526, %12631 ]
  %12523 = phi i8* [ %12501, %12518 ], [ %12634, %12631 ]
  %12524 = phi i64 [ %12500, %12518 ], [ %12633, %12631 ]
  %12525 = phi i32 [ %12499, %12518 ], [ %12632, %12631 ]
  %12526 = add nsw i32 %12522, -256
  %12527 = load i8, i8* %12519, align 4
  %12528 = sext i8 %12527 to i32
  %12529 = sub nsw i32 %12525, %12528
  %12530 = icmp slt i32 %12529, 0
  br i1 %12530, label %12531, label %12625

12531:                                            ; preds = %12521
  %12532 = zext i32 %12525 to i64
  %12533 = shl i64 %12524, %12532
  %12534 = load i32, i32* %12520, align 4
  %12535 = sub nsw i32 0, %12529
  %12536 = lshr i32 %12534, %12535
  %12537 = zext i32 %12536 to i64
  %12538 = or i64 %12533, %12537
  %12539 = and i64 %12538, -9187201950435737472
  %12540 = sub i64 -72340172838076674, %12538
  %12541 = and i64 %12539, %12540
  %12542 = icmp eq i64 %12541, 0
  %12543 = lshr i64 %12533, 56
  %12544 = trunc i64 %12543 to i8
  store i8 %12544, i8* %12523, align 1
  br i1 %12542, label %12598, label %12545

12545:                                            ; preds = %12531
  %12546 = getelementptr inbounds i8, i8* %12523, i64 1
  store i8 0, i8* %12546, align 1
  %12547 = icmp eq i64 %12543, 255
  %12548 = select i1 %12547, i64 2, i64 1
  %12549 = getelementptr inbounds i8, i8* %12523, i64 %12548
  %12550 = lshr i64 %12533, 48
  %12551 = trunc i64 %12550 to i8
  store i8 %12551, i8* %12549, align 1
  %12552 = getelementptr inbounds i8, i8* %12549, i64 1
  store i8 0, i8* %12552, align 1
  %12553 = and i64 %12533, 71776119061217280
  %12554 = icmp eq i64 %12553, 71776119061217280
  %12555 = select i1 %12554, i64 2, i64 1
  %12556 = getelementptr inbounds i8, i8* %12549, i64 %12555
  %12557 = lshr i64 %12533, 40
  %12558 = trunc i64 %12557 to i8
  store i8 %12558, i8* %12556, align 1
  %12559 = getelementptr inbounds i8, i8* %12556, i64 1
  store i8 0, i8* %12559, align 1
  %12560 = and i64 %12533, 280375465082880
  %12561 = icmp eq i64 %12560, 280375465082880
  %12562 = select i1 %12561, i64 2, i64 1
  %12563 = getelementptr inbounds i8, i8* %12556, i64 %12562
  %12564 = lshr i64 %12533, 32
  %12565 = trunc i64 %12564 to i8
  store i8 %12565, i8* %12563, align 1
  %12566 = getelementptr inbounds i8, i8* %12563, i64 1
  store i8 0, i8* %12566, align 1
  %12567 = and i64 %12533, 1095216660480
  %12568 = icmp eq i64 %12567, 1095216660480
  %12569 = select i1 %12568, i64 2, i64 1
  %12570 = getelementptr inbounds i8, i8* %12563, i64 %12569
  %12571 = lshr i64 %12538, 24
  %12572 = trunc i64 %12571 to i8
  store i8 %12572, i8* %12570, align 1
  %12573 = getelementptr inbounds i8, i8* %12570, i64 1
  store i8 0, i8* %12573, align 1
  %12574 = and i64 %12538, 4278190080
  %12575 = icmp eq i64 %12574, 4278190080
  %12576 = select i1 %12575, i64 2, i64 1
  %12577 = getelementptr inbounds i8, i8* %12570, i64 %12576
  %12578 = lshr i64 %12538, 16
  %12579 = trunc i64 %12578 to i8
  store i8 %12579, i8* %12577, align 1
  %12580 = getelementptr inbounds i8, i8* %12577, i64 1
  store i8 0, i8* %12580, align 1
  %12581 = and i64 %12538, 16711680
  %12582 = icmp eq i64 %12581, 16711680
  %12583 = select i1 %12582, i64 2, i64 1
  %12584 = getelementptr inbounds i8, i8* %12577, i64 %12583
  %12585 = lshr i64 %12538, 8
  %12586 = trunc i64 %12585 to i8
  store i8 %12586, i8* %12584, align 1
  %12587 = getelementptr inbounds i8, i8* %12584, i64 1
  store i8 0, i8* %12587, align 1
  %12588 = and i64 %12538, 65280
  %12589 = icmp eq i64 %12588, 65280
  %12590 = select i1 %12589, i64 2, i64 1
  %12591 = getelementptr inbounds i8, i8* %12584, i64 %12590
  %12592 = trunc i64 %12538 to i8
  store i8 %12592, i8* %12591, align 1
  %12593 = getelementptr inbounds i8, i8* %12591, i64 1
  store i8 0, i8* %12593, align 1
  %12594 = and i64 %12538, 255
  %12595 = icmp eq i64 %12594, 255
  %12596 = select i1 %12595, i64 2, i64 1
  %12597 = getelementptr inbounds i8, i8* %12591, i64 %12596
  br label %12620

12598:                                            ; preds = %12531
  %12599 = lshr i64 %12533, 48
  %12600 = trunc i64 %12599 to i8
  %12601 = getelementptr inbounds i8, i8* %12523, i64 1
  store i8 %12600, i8* %12601, align 1
  %12602 = lshr i64 %12533, 40
  %12603 = trunc i64 %12602 to i8
  %12604 = getelementptr inbounds i8, i8* %12523, i64 2
  store i8 %12603, i8* %12604, align 1
  %12605 = lshr i64 %12533, 32
  %12606 = trunc i64 %12605 to i8
  %12607 = getelementptr inbounds i8, i8* %12523, i64 3
  store i8 %12606, i8* %12607, align 1
  %12608 = lshr i64 %12538, 24
  %12609 = trunc i64 %12608 to i8
  %12610 = getelementptr inbounds i8, i8* %12523, i64 4
  store i8 %12609, i8* %12610, align 1
  %12611 = lshr i64 %12538, 16
  %12612 = trunc i64 %12611 to i8
  %12613 = getelementptr inbounds i8, i8* %12523, i64 5
  store i8 %12612, i8* %12613, align 1
  %12614 = lshr i64 %12538, 8
  %12615 = trunc i64 %12614 to i8
  %12616 = getelementptr inbounds i8, i8* %12523, i64 6
  store i8 %12615, i8* %12616, align 1
  %12617 = trunc i64 %12538 to i8
  %12618 = getelementptr inbounds i8, i8* %12523, i64 7
  store i8 %12617, i8* %12618, align 1
  %12619 = getelementptr inbounds i8, i8* %12523, i64 8
  br label %12620

12620:                                            ; preds = %12598, %12545
  %12621 = phi i8* [ %12597, %12545 ], [ %12619, %12598 ]
  %12622 = add nsw i32 %12529, 64
  %12623 = load i32, i32* %12520, align 4
  %12624 = zext i32 %12623 to i64
  br label %12631

12625:                                            ; preds = %12521
  %12626 = zext i32 %12528 to i64
  %12627 = shl i64 %12524, %12626
  %12628 = load i32, i32* %12520, align 4
  %12629 = zext i32 %12628 to i64
  %12630 = or i64 %12627, %12629
  br label %12631

12631:                                            ; preds = %12625, %12620
  %12632 = phi i32 [ %12622, %12620 ], [ %12529, %12625 ]
  %12633 = phi i64 [ %12624, %12620 ], [ %12630, %12625 ]
  %12634 = phi i8* [ %12621, %12620 ], [ %12523, %12625 ]
  %12635 = icmp sgt i32 %12526, 255
  br i1 %12635, label %12521, label %12636

12636:                                            ; preds = %12631
  %12637 = and i32 %12502, 255
  br label %12638

12638:                                            ; preds = %12636, %12509
  %12639 = phi i32 [ %12499, %12509 ], [ %12632, %12636 ]
  %12640 = phi i64 [ %12500, %12509 ], [ %12633, %12636 ]
  %12641 = phi i8* [ %12501, %12509 ], [ %12634, %12636 ]
  %12642 = phi i32 [ %12502, %12509 ], [ %12637, %12636 ]
  %12643 = add nsw i32 %12642, %12516
  %12644 = zext i8 %12515 to i64
  %12645 = shl nsw i64 -1, %12644
  %12646 = trunc i64 %12645 to i32
  %12647 = xor i32 %12646, -1
  %12648 = and i32 %12511, %12647
  %12649 = sext i32 %12643 to i64
  %12650 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %12649
  %12651 = load i32, i32* %12650, align 4
  %12652 = shl i32 %12651, %12516
  %12653 = or i32 %12652, %12648
  %12654 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %12649
  %12655 = load i8, i8* %12654, align 1
  %12656 = sext i8 %12655 to i32
  %12657 = add nsw i32 %12656, %12516
  %12658 = sub nsw i32 %12639, %12657
  %12659 = icmp slt i32 %12658, 0
  br i1 %12659, label %12660, label %12752

12660:                                            ; preds = %12638
  %12661 = zext i32 %12639 to i64
  %12662 = shl i64 %12640, %12661
  %12663 = sub nsw i32 0, %12658
  %12664 = ashr i32 %12653, %12663
  %12665 = sext i32 %12664 to i64
  %12666 = or i64 %12662, %12665
  %12667 = and i64 %12666, -9187201950435737472
  %12668 = sub i64 -72340172838076674, %12666
  %12669 = and i64 %12667, %12668
  %12670 = icmp eq i64 %12669, 0
  %12671 = lshr i64 %12666, 56
  %12672 = trunc i64 %12671 to i8
  store i8 %12672, i8* %12641, align 1
  br i1 %12670, label %12726, label %12673

12673:                                            ; preds = %12660
  %12674 = getelementptr inbounds i8, i8* %12641, i64 1
  store i8 0, i8* %12674, align 1
  %12675 = icmp eq i64 %12671, 255
  %12676 = select i1 %12675, i64 2, i64 1
  %12677 = getelementptr inbounds i8, i8* %12641, i64 %12676
  %12678 = lshr i64 %12666, 48
  %12679 = trunc i64 %12678 to i8
  store i8 %12679, i8* %12677, align 1
  %12680 = getelementptr inbounds i8, i8* %12677, i64 1
  store i8 0, i8* %12680, align 1
  %12681 = and i64 %12666, 71776119061217280
  %12682 = icmp eq i64 %12681, 71776119061217280
  %12683 = select i1 %12682, i64 2, i64 1
  %12684 = getelementptr inbounds i8, i8* %12677, i64 %12683
  %12685 = lshr i64 %12666, 40
  %12686 = trunc i64 %12685 to i8
  store i8 %12686, i8* %12684, align 1
  %12687 = getelementptr inbounds i8, i8* %12684, i64 1
  store i8 0, i8* %12687, align 1
  %12688 = and i64 %12666, 280375465082880
  %12689 = icmp eq i64 %12688, 280375465082880
  %12690 = select i1 %12689, i64 2, i64 1
  %12691 = getelementptr inbounds i8, i8* %12684, i64 %12690
  %12692 = lshr i64 %12666, 32
  %12693 = trunc i64 %12692 to i8
  store i8 %12693, i8* %12691, align 1
  %12694 = getelementptr inbounds i8, i8* %12691, i64 1
  store i8 0, i8* %12694, align 1
  %12695 = and i64 %12666, 1095216660480
  %12696 = icmp eq i64 %12695, 1095216660480
  %12697 = select i1 %12696, i64 2, i64 1
  %12698 = getelementptr inbounds i8, i8* %12691, i64 %12697
  %12699 = lshr i64 %12666, 24
  %12700 = trunc i64 %12699 to i8
  store i8 %12700, i8* %12698, align 1
  %12701 = getelementptr inbounds i8, i8* %12698, i64 1
  store i8 0, i8* %12701, align 1
  %12702 = and i64 %12666, 4278190080
  %12703 = icmp eq i64 %12702, 4278190080
  %12704 = select i1 %12703, i64 2, i64 1
  %12705 = getelementptr inbounds i8, i8* %12698, i64 %12704
  %12706 = lshr i64 %12666, 16
  %12707 = trunc i64 %12706 to i8
  store i8 %12707, i8* %12705, align 1
  %12708 = getelementptr inbounds i8, i8* %12705, i64 1
  store i8 0, i8* %12708, align 1
  %12709 = and i64 %12666, 16711680
  %12710 = icmp eq i64 %12709, 16711680
  %12711 = select i1 %12710, i64 2, i64 1
  %12712 = getelementptr inbounds i8, i8* %12705, i64 %12711
  %12713 = lshr i64 %12666, 8
  %12714 = trunc i64 %12713 to i8
  store i8 %12714, i8* %12712, align 1
  %12715 = getelementptr inbounds i8, i8* %12712, i64 1
  store i8 0, i8* %12715, align 1
  %12716 = and i64 %12666, 65280
  %12717 = icmp eq i64 %12716, 65280
  %12718 = select i1 %12717, i64 2, i64 1
  %12719 = getelementptr inbounds i8, i8* %12712, i64 %12718
  %12720 = trunc i64 %12666 to i8
  store i8 %12720, i8* %12719, align 1
  %12721 = getelementptr inbounds i8, i8* %12719, i64 1
  store i8 0, i8* %12721, align 1
  %12722 = and i64 %12666, 255
  %12723 = icmp eq i64 %12722, 255
  %12724 = select i1 %12723, i64 2, i64 1
  %12725 = getelementptr inbounds i8, i8* %12719, i64 %12724
  br label %12748

12726:                                            ; preds = %12660
  %12727 = lshr i64 %12666, 48
  %12728 = trunc i64 %12727 to i8
  %12729 = getelementptr inbounds i8, i8* %12641, i64 1
  store i8 %12728, i8* %12729, align 1
  %12730 = lshr i64 %12666, 40
  %12731 = trunc i64 %12730 to i8
  %12732 = getelementptr inbounds i8, i8* %12641, i64 2
  store i8 %12731, i8* %12732, align 1
  %12733 = lshr i64 %12666, 32
  %12734 = trunc i64 %12733 to i8
  %12735 = getelementptr inbounds i8, i8* %12641, i64 3
  store i8 %12734, i8* %12735, align 1
  %12736 = lshr i64 %12666, 24
  %12737 = trunc i64 %12736 to i8
  %12738 = getelementptr inbounds i8, i8* %12641, i64 4
  store i8 %12737, i8* %12738, align 1
  %12739 = lshr i64 %12666, 16
  %12740 = trunc i64 %12739 to i8
  %12741 = getelementptr inbounds i8, i8* %12641, i64 5
  store i8 %12740, i8* %12741, align 1
  %12742 = lshr i64 %12666, 8
  %12743 = trunc i64 %12742 to i8
  %12744 = getelementptr inbounds i8, i8* %12641, i64 6
  store i8 %12743, i8* %12744, align 1
  %12745 = trunc i64 %12666 to i8
  %12746 = getelementptr inbounds i8, i8* %12641, i64 7
  store i8 %12745, i8* %12746, align 1
  %12747 = getelementptr inbounds i8, i8* %12641, i64 8
  br label %12748

12748:                                            ; preds = %12726, %12673
  %12749 = phi i8* [ %12725, %12673 ], [ %12747, %12726 ]
  %12750 = add nsw i32 %12658, 64
  %12751 = sext i32 %12653 to i64
  br label %12757

12752:                                            ; preds = %12638
  %12753 = zext i32 %12657 to i64
  %12754 = shl i64 %12640, %12753
  %12755 = sext i32 %12653 to i64
  %12756 = or i64 %12754, %12755
  br label %12757

12757:                                            ; preds = %12748, %12752, %12507
  %12758 = phi i32 [ %12499, %12507 ], [ %12750, %12748 ], [ %12658, %12752 ]
  %12759 = phi i64 [ %12500, %12507 ], [ %12751, %12748 ], [ %12756, %12752 ]
  %12760 = phi i8* [ %12501, %12507 ], [ %12749, %12748 ], [ %12641, %12752 ]
  %12761 = phi i32 [ %12508, %12507 ], [ 0, %12748 ], [ 0, %12752 ]
  %12762 = getelementptr inbounds i16, i16* %1, i64 61
  %12763 = load i16, i16* %12762, align 2
  %12764 = sext i16 %12763 to i32
  %12765 = icmp eq i16 %12763, 0
  br i1 %12765, label %12766, label %12768

12766:                                            ; preds = %12757
  %12767 = add nuw nsw i32 %12761, 16
  br label %13016

12768:                                            ; preds = %12757
  %12769 = ashr i32 %12764, 31
  %12770 = add nsw i32 %12769, %12764
  %12771 = xor i32 %12770, %12769
  %12772 = sext i32 %12771 to i64
  %12773 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %12772
  %12774 = load i8, i8* %12773, align 1
  %12775 = zext i8 %12774 to i32
  %12776 = icmp sgt i32 %12761, 255
  br i1 %12776, label %12777, label %12897

12777:                                            ; preds = %12768
  %12778 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %12779 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %12780

12780:                                            ; preds = %12777, %12890
  %12781 = phi i32 [ %12761, %12777 ], [ %12785, %12890 ]
  %12782 = phi i8* [ %12760, %12777 ], [ %12893, %12890 ]
  %12783 = phi i64 [ %12759, %12777 ], [ %12892, %12890 ]
  %12784 = phi i32 [ %12758, %12777 ], [ %12891, %12890 ]
  %12785 = add nsw i32 %12781, -256
  %12786 = load i8, i8* %12778, align 4
  %12787 = sext i8 %12786 to i32
  %12788 = sub nsw i32 %12784, %12787
  %12789 = icmp slt i32 %12788, 0
  br i1 %12789, label %12790, label %12884

12790:                                            ; preds = %12780
  %12791 = zext i32 %12784 to i64
  %12792 = shl i64 %12783, %12791
  %12793 = load i32, i32* %12779, align 4
  %12794 = sub nsw i32 0, %12788
  %12795 = lshr i32 %12793, %12794
  %12796 = zext i32 %12795 to i64
  %12797 = or i64 %12792, %12796
  %12798 = and i64 %12797, -9187201950435737472
  %12799 = sub i64 -72340172838076674, %12797
  %12800 = and i64 %12798, %12799
  %12801 = icmp eq i64 %12800, 0
  %12802 = lshr i64 %12792, 56
  %12803 = trunc i64 %12802 to i8
  store i8 %12803, i8* %12782, align 1
  br i1 %12801, label %12857, label %12804

12804:                                            ; preds = %12790
  %12805 = getelementptr inbounds i8, i8* %12782, i64 1
  store i8 0, i8* %12805, align 1
  %12806 = icmp eq i64 %12802, 255
  %12807 = select i1 %12806, i64 2, i64 1
  %12808 = getelementptr inbounds i8, i8* %12782, i64 %12807
  %12809 = lshr i64 %12792, 48
  %12810 = trunc i64 %12809 to i8
  store i8 %12810, i8* %12808, align 1
  %12811 = getelementptr inbounds i8, i8* %12808, i64 1
  store i8 0, i8* %12811, align 1
  %12812 = and i64 %12792, 71776119061217280
  %12813 = icmp eq i64 %12812, 71776119061217280
  %12814 = select i1 %12813, i64 2, i64 1
  %12815 = getelementptr inbounds i8, i8* %12808, i64 %12814
  %12816 = lshr i64 %12792, 40
  %12817 = trunc i64 %12816 to i8
  store i8 %12817, i8* %12815, align 1
  %12818 = getelementptr inbounds i8, i8* %12815, i64 1
  store i8 0, i8* %12818, align 1
  %12819 = and i64 %12792, 280375465082880
  %12820 = icmp eq i64 %12819, 280375465082880
  %12821 = select i1 %12820, i64 2, i64 1
  %12822 = getelementptr inbounds i8, i8* %12815, i64 %12821
  %12823 = lshr i64 %12792, 32
  %12824 = trunc i64 %12823 to i8
  store i8 %12824, i8* %12822, align 1
  %12825 = getelementptr inbounds i8, i8* %12822, i64 1
  store i8 0, i8* %12825, align 1
  %12826 = and i64 %12792, 1095216660480
  %12827 = icmp eq i64 %12826, 1095216660480
  %12828 = select i1 %12827, i64 2, i64 1
  %12829 = getelementptr inbounds i8, i8* %12822, i64 %12828
  %12830 = lshr i64 %12797, 24
  %12831 = trunc i64 %12830 to i8
  store i8 %12831, i8* %12829, align 1
  %12832 = getelementptr inbounds i8, i8* %12829, i64 1
  store i8 0, i8* %12832, align 1
  %12833 = and i64 %12797, 4278190080
  %12834 = icmp eq i64 %12833, 4278190080
  %12835 = select i1 %12834, i64 2, i64 1
  %12836 = getelementptr inbounds i8, i8* %12829, i64 %12835
  %12837 = lshr i64 %12797, 16
  %12838 = trunc i64 %12837 to i8
  store i8 %12838, i8* %12836, align 1
  %12839 = getelementptr inbounds i8, i8* %12836, i64 1
  store i8 0, i8* %12839, align 1
  %12840 = and i64 %12797, 16711680
  %12841 = icmp eq i64 %12840, 16711680
  %12842 = select i1 %12841, i64 2, i64 1
  %12843 = getelementptr inbounds i8, i8* %12836, i64 %12842
  %12844 = lshr i64 %12797, 8
  %12845 = trunc i64 %12844 to i8
  store i8 %12845, i8* %12843, align 1
  %12846 = getelementptr inbounds i8, i8* %12843, i64 1
  store i8 0, i8* %12846, align 1
  %12847 = and i64 %12797, 65280
  %12848 = icmp eq i64 %12847, 65280
  %12849 = select i1 %12848, i64 2, i64 1
  %12850 = getelementptr inbounds i8, i8* %12843, i64 %12849
  %12851 = trunc i64 %12797 to i8
  store i8 %12851, i8* %12850, align 1
  %12852 = getelementptr inbounds i8, i8* %12850, i64 1
  store i8 0, i8* %12852, align 1
  %12853 = and i64 %12797, 255
  %12854 = icmp eq i64 %12853, 255
  %12855 = select i1 %12854, i64 2, i64 1
  %12856 = getelementptr inbounds i8, i8* %12850, i64 %12855
  br label %12879

12857:                                            ; preds = %12790
  %12858 = lshr i64 %12792, 48
  %12859 = trunc i64 %12858 to i8
  %12860 = getelementptr inbounds i8, i8* %12782, i64 1
  store i8 %12859, i8* %12860, align 1
  %12861 = lshr i64 %12792, 40
  %12862 = trunc i64 %12861 to i8
  %12863 = getelementptr inbounds i8, i8* %12782, i64 2
  store i8 %12862, i8* %12863, align 1
  %12864 = lshr i64 %12792, 32
  %12865 = trunc i64 %12864 to i8
  %12866 = getelementptr inbounds i8, i8* %12782, i64 3
  store i8 %12865, i8* %12866, align 1
  %12867 = lshr i64 %12797, 24
  %12868 = trunc i64 %12867 to i8
  %12869 = getelementptr inbounds i8, i8* %12782, i64 4
  store i8 %12868, i8* %12869, align 1
  %12870 = lshr i64 %12797, 16
  %12871 = trunc i64 %12870 to i8
  %12872 = getelementptr inbounds i8, i8* %12782, i64 5
  store i8 %12871, i8* %12872, align 1
  %12873 = lshr i64 %12797, 8
  %12874 = trunc i64 %12873 to i8
  %12875 = getelementptr inbounds i8, i8* %12782, i64 6
  store i8 %12874, i8* %12875, align 1
  %12876 = trunc i64 %12797 to i8
  %12877 = getelementptr inbounds i8, i8* %12782, i64 7
  store i8 %12876, i8* %12877, align 1
  %12878 = getelementptr inbounds i8, i8* %12782, i64 8
  br label %12879

12879:                                            ; preds = %12857, %12804
  %12880 = phi i8* [ %12856, %12804 ], [ %12878, %12857 ]
  %12881 = add nsw i32 %12788, 64
  %12882 = load i32, i32* %12779, align 4
  %12883 = zext i32 %12882 to i64
  br label %12890

12884:                                            ; preds = %12780
  %12885 = zext i32 %12787 to i64
  %12886 = shl i64 %12783, %12885
  %12887 = load i32, i32* %12779, align 4
  %12888 = zext i32 %12887 to i64
  %12889 = or i64 %12886, %12888
  br label %12890

12890:                                            ; preds = %12884, %12879
  %12891 = phi i32 [ %12881, %12879 ], [ %12788, %12884 ]
  %12892 = phi i64 [ %12883, %12879 ], [ %12889, %12884 ]
  %12893 = phi i8* [ %12880, %12879 ], [ %12782, %12884 ]
  %12894 = icmp sgt i32 %12785, 255
  br i1 %12894, label %12780, label %12895

12895:                                            ; preds = %12890
  %12896 = and i32 %12761, 255
  br label %12897

12897:                                            ; preds = %12895, %12768
  %12898 = phi i32 [ %12758, %12768 ], [ %12891, %12895 ]
  %12899 = phi i64 [ %12759, %12768 ], [ %12892, %12895 ]
  %12900 = phi i8* [ %12760, %12768 ], [ %12893, %12895 ]
  %12901 = phi i32 [ %12761, %12768 ], [ %12896, %12895 ]
  %12902 = add nsw i32 %12901, %12775
  %12903 = zext i8 %12774 to i64
  %12904 = shl nsw i64 -1, %12903
  %12905 = trunc i64 %12904 to i32
  %12906 = xor i32 %12905, -1
  %12907 = and i32 %12770, %12906
  %12908 = sext i32 %12902 to i64
  %12909 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %12908
  %12910 = load i32, i32* %12909, align 4
  %12911 = shl i32 %12910, %12775
  %12912 = or i32 %12911, %12907
  %12913 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %12908
  %12914 = load i8, i8* %12913, align 1
  %12915 = sext i8 %12914 to i32
  %12916 = add nsw i32 %12915, %12775
  %12917 = sub nsw i32 %12898, %12916
  %12918 = icmp slt i32 %12917, 0
  br i1 %12918, label %12919, label %13011

12919:                                            ; preds = %12897
  %12920 = zext i32 %12898 to i64
  %12921 = shl i64 %12899, %12920
  %12922 = sub nsw i32 0, %12917
  %12923 = ashr i32 %12912, %12922
  %12924 = sext i32 %12923 to i64
  %12925 = or i64 %12921, %12924
  %12926 = and i64 %12925, -9187201950435737472
  %12927 = sub i64 -72340172838076674, %12925
  %12928 = and i64 %12926, %12927
  %12929 = icmp eq i64 %12928, 0
  %12930 = lshr i64 %12925, 56
  %12931 = trunc i64 %12930 to i8
  store i8 %12931, i8* %12900, align 1
  br i1 %12929, label %12985, label %12932

12932:                                            ; preds = %12919
  %12933 = getelementptr inbounds i8, i8* %12900, i64 1
  store i8 0, i8* %12933, align 1
  %12934 = icmp eq i64 %12930, 255
  %12935 = select i1 %12934, i64 2, i64 1
  %12936 = getelementptr inbounds i8, i8* %12900, i64 %12935
  %12937 = lshr i64 %12925, 48
  %12938 = trunc i64 %12937 to i8
  store i8 %12938, i8* %12936, align 1
  %12939 = getelementptr inbounds i8, i8* %12936, i64 1
  store i8 0, i8* %12939, align 1
  %12940 = and i64 %12925, 71776119061217280
  %12941 = icmp eq i64 %12940, 71776119061217280
  %12942 = select i1 %12941, i64 2, i64 1
  %12943 = getelementptr inbounds i8, i8* %12936, i64 %12942
  %12944 = lshr i64 %12925, 40
  %12945 = trunc i64 %12944 to i8
  store i8 %12945, i8* %12943, align 1
  %12946 = getelementptr inbounds i8, i8* %12943, i64 1
  store i8 0, i8* %12946, align 1
  %12947 = and i64 %12925, 280375465082880
  %12948 = icmp eq i64 %12947, 280375465082880
  %12949 = select i1 %12948, i64 2, i64 1
  %12950 = getelementptr inbounds i8, i8* %12943, i64 %12949
  %12951 = lshr i64 %12925, 32
  %12952 = trunc i64 %12951 to i8
  store i8 %12952, i8* %12950, align 1
  %12953 = getelementptr inbounds i8, i8* %12950, i64 1
  store i8 0, i8* %12953, align 1
  %12954 = and i64 %12925, 1095216660480
  %12955 = icmp eq i64 %12954, 1095216660480
  %12956 = select i1 %12955, i64 2, i64 1
  %12957 = getelementptr inbounds i8, i8* %12950, i64 %12956
  %12958 = lshr i64 %12925, 24
  %12959 = trunc i64 %12958 to i8
  store i8 %12959, i8* %12957, align 1
  %12960 = getelementptr inbounds i8, i8* %12957, i64 1
  store i8 0, i8* %12960, align 1
  %12961 = and i64 %12925, 4278190080
  %12962 = icmp eq i64 %12961, 4278190080
  %12963 = select i1 %12962, i64 2, i64 1
  %12964 = getelementptr inbounds i8, i8* %12957, i64 %12963
  %12965 = lshr i64 %12925, 16
  %12966 = trunc i64 %12965 to i8
  store i8 %12966, i8* %12964, align 1
  %12967 = getelementptr inbounds i8, i8* %12964, i64 1
  store i8 0, i8* %12967, align 1
  %12968 = and i64 %12925, 16711680
  %12969 = icmp eq i64 %12968, 16711680
  %12970 = select i1 %12969, i64 2, i64 1
  %12971 = getelementptr inbounds i8, i8* %12964, i64 %12970
  %12972 = lshr i64 %12925, 8
  %12973 = trunc i64 %12972 to i8
  store i8 %12973, i8* %12971, align 1
  %12974 = getelementptr inbounds i8, i8* %12971, i64 1
  store i8 0, i8* %12974, align 1
  %12975 = and i64 %12925, 65280
  %12976 = icmp eq i64 %12975, 65280
  %12977 = select i1 %12976, i64 2, i64 1
  %12978 = getelementptr inbounds i8, i8* %12971, i64 %12977
  %12979 = trunc i64 %12925 to i8
  store i8 %12979, i8* %12978, align 1
  %12980 = getelementptr inbounds i8, i8* %12978, i64 1
  store i8 0, i8* %12980, align 1
  %12981 = and i64 %12925, 255
  %12982 = icmp eq i64 %12981, 255
  %12983 = select i1 %12982, i64 2, i64 1
  %12984 = getelementptr inbounds i8, i8* %12978, i64 %12983
  br label %13007

12985:                                            ; preds = %12919
  %12986 = lshr i64 %12925, 48
  %12987 = trunc i64 %12986 to i8
  %12988 = getelementptr inbounds i8, i8* %12900, i64 1
  store i8 %12987, i8* %12988, align 1
  %12989 = lshr i64 %12925, 40
  %12990 = trunc i64 %12989 to i8
  %12991 = getelementptr inbounds i8, i8* %12900, i64 2
  store i8 %12990, i8* %12991, align 1
  %12992 = lshr i64 %12925, 32
  %12993 = trunc i64 %12992 to i8
  %12994 = getelementptr inbounds i8, i8* %12900, i64 3
  store i8 %12993, i8* %12994, align 1
  %12995 = lshr i64 %12925, 24
  %12996 = trunc i64 %12995 to i8
  %12997 = getelementptr inbounds i8, i8* %12900, i64 4
  store i8 %12996, i8* %12997, align 1
  %12998 = lshr i64 %12925, 16
  %12999 = trunc i64 %12998 to i8
  %13000 = getelementptr inbounds i8, i8* %12900, i64 5
  store i8 %12999, i8* %13000, align 1
  %13001 = lshr i64 %12925, 8
  %13002 = trunc i64 %13001 to i8
  %13003 = getelementptr inbounds i8, i8* %12900, i64 6
  store i8 %13002, i8* %13003, align 1
  %13004 = trunc i64 %12925 to i8
  %13005 = getelementptr inbounds i8, i8* %12900, i64 7
  store i8 %13004, i8* %13005, align 1
  %13006 = getelementptr inbounds i8, i8* %12900, i64 8
  br label %13007

13007:                                            ; preds = %12985, %12932
  %13008 = phi i8* [ %12984, %12932 ], [ %13006, %12985 ]
  %13009 = add nsw i32 %12917, 64
  %13010 = sext i32 %12912 to i64
  br label %13016

13011:                                            ; preds = %12897
  %13012 = zext i32 %12916 to i64
  %13013 = shl i64 %12899, %13012
  %13014 = sext i32 %12912 to i64
  %13015 = or i64 %13013, %13014
  br label %13016

13016:                                            ; preds = %13007, %13011, %12766
  %13017 = phi i32 [ %12758, %12766 ], [ %13009, %13007 ], [ %12917, %13011 ]
  %13018 = phi i64 [ %12759, %12766 ], [ %13010, %13007 ], [ %13015, %13011 ]
  %13019 = phi i8* [ %12760, %12766 ], [ %13008, %13007 ], [ %12900, %13011 ]
  %13020 = phi i32 [ %12767, %12766 ], [ 0, %13007 ], [ 0, %13011 ]
  %13021 = getelementptr inbounds i16, i16* %1, i64 54
  %13022 = load i16, i16* %13021, align 2
  %13023 = sext i16 %13022 to i32
  %13024 = icmp eq i16 %13022, 0
  br i1 %13024, label %13025, label %13027

13025:                                            ; preds = %13016
  %13026 = add nuw nsw i32 %13020, 16
  br label %13275

13027:                                            ; preds = %13016
  %13028 = ashr i32 %13023, 31
  %13029 = add nsw i32 %13028, %13023
  %13030 = xor i32 %13029, %13028
  %13031 = sext i32 %13030 to i64
  %13032 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %13031
  %13033 = load i8, i8* %13032, align 1
  %13034 = zext i8 %13033 to i32
  %13035 = icmp sgt i32 %13020, 255
  br i1 %13035, label %13036, label %13156

13036:                                            ; preds = %13027
  %13037 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %13038 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %13039

13039:                                            ; preds = %13036, %13149
  %13040 = phi i32 [ %13020, %13036 ], [ %13044, %13149 ]
  %13041 = phi i8* [ %13019, %13036 ], [ %13152, %13149 ]
  %13042 = phi i64 [ %13018, %13036 ], [ %13151, %13149 ]
  %13043 = phi i32 [ %13017, %13036 ], [ %13150, %13149 ]
  %13044 = add nsw i32 %13040, -256
  %13045 = load i8, i8* %13037, align 4
  %13046 = sext i8 %13045 to i32
  %13047 = sub nsw i32 %13043, %13046
  %13048 = icmp slt i32 %13047, 0
  br i1 %13048, label %13049, label %13143

13049:                                            ; preds = %13039
  %13050 = zext i32 %13043 to i64
  %13051 = shl i64 %13042, %13050
  %13052 = load i32, i32* %13038, align 4
  %13053 = sub nsw i32 0, %13047
  %13054 = lshr i32 %13052, %13053
  %13055 = zext i32 %13054 to i64
  %13056 = or i64 %13051, %13055
  %13057 = and i64 %13056, -9187201950435737472
  %13058 = sub i64 -72340172838076674, %13056
  %13059 = and i64 %13057, %13058
  %13060 = icmp eq i64 %13059, 0
  %13061 = lshr i64 %13051, 56
  %13062 = trunc i64 %13061 to i8
  store i8 %13062, i8* %13041, align 1
  br i1 %13060, label %13116, label %13063

13063:                                            ; preds = %13049
  %13064 = getelementptr inbounds i8, i8* %13041, i64 1
  store i8 0, i8* %13064, align 1
  %13065 = icmp eq i64 %13061, 255
  %13066 = select i1 %13065, i64 2, i64 1
  %13067 = getelementptr inbounds i8, i8* %13041, i64 %13066
  %13068 = lshr i64 %13051, 48
  %13069 = trunc i64 %13068 to i8
  store i8 %13069, i8* %13067, align 1
  %13070 = getelementptr inbounds i8, i8* %13067, i64 1
  store i8 0, i8* %13070, align 1
  %13071 = and i64 %13051, 71776119061217280
  %13072 = icmp eq i64 %13071, 71776119061217280
  %13073 = select i1 %13072, i64 2, i64 1
  %13074 = getelementptr inbounds i8, i8* %13067, i64 %13073
  %13075 = lshr i64 %13051, 40
  %13076 = trunc i64 %13075 to i8
  store i8 %13076, i8* %13074, align 1
  %13077 = getelementptr inbounds i8, i8* %13074, i64 1
  store i8 0, i8* %13077, align 1
  %13078 = and i64 %13051, 280375465082880
  %13079 = icmp eq i64 %13078, 280375465082880
  %13080 = select i1 %13079, i64 2, i64 1
  %13081 = getelementptr inbounds i8, i8* %13074, i64 %13080
  %13082 = lshr i64 %13051, 32
  %13083 = trunc i64 %13082 to i8
  store i8 %13083, i8* %13081, align 1
  %13084 = getelementptr inbounds i8, i8* %13081, i64 1
  store i8 0, i8* %13084, align 1
  %13085 = and i64 %13051, 1095216660480
  %13086 = icmp eq i64 %13085, 1095216660480
  %13087 = select i1 %13086, i64 2, i64 1
  %13088 = getelementptr inbounds i8, i8* %13081, i64 %13087
  %13089 = lshr i64 %13056, 24
  %13090 = trunc i64 %13089 to i8
  store i8 %13090, i8* %13088, align 1
  %13091 = getelementptr inbounds i8, i8* %13088, i64 1
  store i8 0, i8* %13091, align 1
  %13092 = and i64 %13056, 4278190080
  %13093 = icmp eq i64 %13092, 4278190080
  %13094 = select i1 %13093, i64 2, i64 1
  %13095 = getelementptr inbounds i8, i8* %13088, i64 %13094
  %13096 = lshr i64 %13056, 16
  %13097 = trunc i64 %13096 to i8
  store i8 %13097, i8* %13095, align 1
  %13098 = getelementptr inbounds i8, i8* %13095, i64 1
  store i8 0, i8* %13098, align 1
  %13099 = and i64 %13056, 16711680
  %13100 = icmp eq i64 %13099, 16711680
  %13101 = select i1 %13100, i64 2, i64 1
  %13102 = getelementptr inbounds i8, i8* %13095, i64 %13101
  %13103 = lshr i64 %13056, 8
  %13104 = trunc i64 %13103 to i8
  store i8 %13104, i8* %13102, align 1
  %13105 = getelementptr inbounds i8, i8* %13102, i64 1
  store i8 0, i8* %13105, align 1
  %13106 = and i64 %13056, 65280
  %13107 = icmp eq i64 %13106, 65280
  %13108 = select i1 %13107, i64 2, i64 1
  %13109 = getelementptr inbounds i8, i8* %13102, i64 %13108
  %13110 = trunc i64 %13056 to i8
  store i8 %13110, i8* %13109, align 1
  %13111 = getelementptr inbounds i8, i8* %13109, i64 1
  store i8 0, i8* %13111, align 1
  %13112 = and i64 %13056, 255
  %13113 = icmp eq i64 %13112, 255
  %13114 = select i1 %13113, i64 2, i64 1
  %13115 = getelementptr inbounds i8, i8* %13109, i64 %13114
  br label %13138

13116:                                            ; preds = %13049
  %13117 = lshr i64 %13051, 48
  %13118 = trunc i64 %13117 to i8
  %13119 = getelementptr inbounds i8, i8* %13041, i64 1
  store i8 %13118, i8* %13119, align 1
  %13120 = lshr i64 %13051, 40
  %13121 = trunc i64 %13120 to i8
  %13122 = getelementptr inbounds i8, i8* %13041, i64 2
  store i8 %13121, i8* %13122, align 1
  %13123 = lshr i64 %13051, 32
  %13124 = trunc i64 %13123 to i8
  %13125 = getelementptr inbounds i8, i8* %13041, i64 3
  store i8 %13124, i8* %13125, align 1
  %13126 = lshr i64 %13056, 24
  %13127 = trunc i64 %13126 to i8
  %13128 = getelementptr inbounds i8, i8* %13041, i64 4
  store i8 %13127, i8* %13128, align 1
  %13129 = lshr i64 %13056, 16
  %13130 = trunc i64 %13129 to i8
  %13131 = getelementptr inbounds i8, i8* %13041, i64 5
  store i8 %13130, i8* %13131, align 1
  %13132 = lshr i64 %13056, 8
  %13133 = trunc i64 %13132 to i8
  %13134 = getelementptr inbounds i8, i8* %13041, i64 6
  store i8 %13133, i8* %13134, align 1
  %13135 = trunc i64 %13056 to i8
  %13136 = getelementptr inbounds i8, i8* %13041, i64 7
  store i8 %13135, i8* %13136, align 1
  %13137 = getelementptr inbounds i8, i8* %13041, i64 8
  br label %13138

13138:                                            ; preds = %13116, %13063
  %13139 = phi i8* [ %13115, %13063 ], [ %13137, %13116 ]
  %13140 = add nsw i32 %13047, 64
  %13141 = load i32, i32* %13038, align 4
  %13142 = zext i32 %13141 to i64
  br label %13149

13143:                                            ; preds = %13039
  %13144 = zext i32 %13046 to i64
  %13145 = shl i64 %13042, %13144
  %13146 = load i32, i32* %13038, align 4
  %13147 = zext i32 %13146 to i64
  %13148 = or i64 %13145, %13147
  br label %13149

13149:                                            ; preds = %13143, %13138
  %13150 = phi i32 [ %13140, %13138 ], [ %13047, %13143 ]
  %13151 = phi i64 [ %13142, %13138 ], [ %13148, %13143 ]
  %13152 = phi i8* [ %13139, %13138 ], [ %13041, %13143 ]
  %13153 = icmp sgt i32 %13044, 255
  br i1 %13153, label %13039, label %13154

13154:                                            ; preds = %13149
  %13155 = and i32 %13020, 255
  br label %13156

13156:                                            ; preds = %13154, %13027
  %13157 = phi i32 [ %13017, %13027 ], [ %13150, %13154 ]
  %13158 = phi i64 [ %13018, %13027 ], [ %13151, %13154 ]
  %13159 = phi i8* [ %13019, %13027 ], [ %13152, %13154 ]
  %13160 = phi i32 [ %13020, %13027 ], [ %13155, %13154 ]
  %13161 = add nsw i32 %13160, %13034
  %13162 = zext i8 %13033 to i64
  %13163 = shl nsw i64 -1, %13162
  %13164 = trunc i64 %13163 to i32
  %13165 = xor i32 %13164, -1
  %13166 = and i32 %13029, %13165
  %13167 = sext i32 %13161 to i64
  %13168 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %13167
  %13169 = load i32, i32* %13168, align 4
  %13170 = shl i32 %13169, %13034
  %13171 = or i32 %13170, %13166
  %13172 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %13167
  %13173 = load i8, i8* %13172, align 1
  %13174 = sext i8 %13173 to i32
  %13175 = add nsw i32 %13174, %13034
  %13176 = sub nsw i32 %13157, %13175
  %13177 = icmp slt i32 %13176, 0
  br i1 %13177, label %13178, label %13270

13178:                                            ; preds = %13156
  %13179 = zext i32 %13157 to i64
  %13180 = shl i64 %13158, %13179
  %13181 = sub nsw i32 0, %13176
  %13182 = ashr i32 %13171, %13181
  %13183 = sext i32 %13182 to i64
  %13184 = or i64 %13180, %13183
  %13185 = and i64 %13184, -9187201950435737472
  %13186 = sub i64 -72340172838076674, %13184
  %13187 = and i64 %13185, %13186
  %13188 = icmp eq i64 %13187, 0
  %13189 = lshr i64 %13184, 56
  %13190 = trunc i64 %13189 to i8
  store i8 %13190, i8* %13159, align 1
  br i1 %13188, label %13244, label %13191

13191:                                            ; preds = %13178
  %13192 = getelementptr inbounds i8, i8* %13159, i64 1
  store i8 0, i8* %13192, align 1
  %13193 = icmp eq i64 %13189, 255
  %13194 = select i1 %13193, i64 2, i64 1
  %13195 = getelementptr inbounds i8, i8* %13159, i64 %13194
  %13196 = lshr i64 %13184, 48
  %13197 = trunc i64 %13196 to i8
  store i8 %13197, i8* %13195, align 1
  %13198 = getelementptr inbounds i8, i8* %13195, i64 1
  store i8 0, i8* %13198, align 1
  %13199 = and i64 %13184, 71776119061217280
  %13200 = icmp eq i64 %13199, 71776119061217280
  %13201 = select i1 %13200, i64 2, i64 1
  %13202 = getelementptr inbounds i8, i8* %13195, i64 %13201
  %13203 = lshr i64 %13184, 40
  %13204 = trunc i64 %13203 to i8
  store i8 %13204, i8* %13202, align 1
  %13205 = getelementptr inbounds i8, i8* %13202, i64 1
  store i8 0, i8* %13205, align 1
  %13206 = and i64 %13184, 280375465082880
  %13207 = icmp eq i64 %13206, 280375465082880
  %13208 = select i1 %13207, i64 2, i64 1
  %13209 = getelementptr inbounds i8, i8* %13202, i64 %13208
  %13210 = lshr i64 %13184, 32
  %13211 = trunc i64 %13210 to i8
  store i8 %13211, i8* %13209, align 1
  %13212 = getelementptr inbounds i8, i8* %13209, i64 1
  store i8 0, i8* %13212, align 1
  %13213 = and i64 %13184, 1095216660480
  %13214 = icmp eq i64 %13213, 1095216660480
  %13215 = select i1 %13214, i64 2, i64 1
  %13216 = getelementptr inbounds i8, i8* %13209, i64 %13215
  %13217 = lshr i64 %13184, 24
  %13218 = trunc i64 %13217 to i8
  store i8 %13218, i8* %13216, align 1
  %13219 = getelementptr inbounds i8, i8* %13216, i64 1
  store i8 0, i8* %13219, align 1
  %13220 = and i64 %13184, 4278190080
  %13221 = icmp eq i64 %13220, 4278190080
  %13222 = select i1 %13221, i64 2, i64 1
  %13223 = getelementptr inbounds i8, i8* %13216, i64 %13222
  %13224 = lshr i64 %13184, 16
  %13225 = trunc i64 %13224 to i8
  store i8 %13225, i8* %13223, align 1
  %13226 = getelementptr inbounds i8, i8* %13223, i64 1
  store i8 0, i8* %13226, align 1
  %13227 = and i64 %13184, 16711680
  %13228 = icmp eq i64 %13227, 16711680
  %13229 = select i1 %13228, i64 2, i64 1
  %13230 = getelementptr inbounds i8, i8* %13223, i64 %13229
  %13231 = lshr i64 %13184, 8
  %13232 = trunc i64 %13231 to i8
  store i8 %13232, i8* %13230, align 1
  %13233 = getelementptr inbounds i8, i8* %13230, i64 1
  store i8 0, i8* %13233, align 1
  %13234 = and i64 %13184, 65280
  %13235 = icmp eq i64 %13234, 65280
  %13236 = select i1 %13235, i64 2, i64 1
  %13237 = getelementptr inbounds i8, i8* %13230, i64 %13236
  %13238 = trunc i64 %13184 to i8
  store i8 %13238, i8* %13237, align 1
  %13239 = getelementptr inbounds i8, i8* %13237, i64 1
  store i8 0, i8* %13239, align 1
  %13240 = and i64 %13184, 255
  %13241 = icmp eq i64 %13240, 255
  %13242 = select i1 %13241, i64 2, i64 1
  %13243 = getelementptr inbounds i8, i8* %13237, i64 %13242
  br label %13266

13244:                                            ; preds = %13178
  %13245 = lshr i64 %13184, 48
  %13246 = trunc i64 %13245 to i8
  %13247 = getelementptr inbounds i8, i8* %13159, i64 1
  store i8 %13246, i8* %13247, align 1
  %13248 = lshr i64 %13184, 40
  %13249 = trunc i64 %13248 to i8
  %13250 = getelementptr inbounds i8, i8* %13159, i64 2
  store i8 %13249, i8* %13250, align 1
  %13251 = lshr i64 %13184, 32
  %13252 = trunc i64 %13251 to i8
  %13253 = getelementptr inbounds i8, i8* %13159, i64 3
  store i8 %13252, i8* %13253, align 1
  %13254 = lshr i64 %13184, 24
  %13255 = trunc i64 %13254 to i8
  %13256 = getelementptr inbounds i8, i8* %13159, i64 4
  store i8 %13255, i8* %13256, align 1
  %13257 = lshr i64 %13184, 16
  %13258 = trunc i64 %13257 to i8
  %13259 = getelementptr inbounds i8, i8* %13159, i64 5
  store i8 %13258, i8* %13259, align 1
  %13260 = lshr i64 %13184, 8
  %13261 = trunc i64 %13260 to i8
  %13262 = getelementptr inbounds i8, i8* %13159, i64 6
  store i8 %13261, i8* %13262, align 1
  %13263 = trunc i64 %13184 to i8
  %13264 = getelementptr inbounds i8, i8* %13159, i64 7
  store i8 %13263, i8* %13264, align 1
  %13265 = getelementptr inbounds i8, i8* %13159, i64 8
  br label %13266

13266:                                            ; preds = %13244, %13191
  %13267 = phi i8* [ %13243, %13191 ], [ %13265, %13244 ]
  %13268 = add nsw i32 %13176, 64
  %13269 = sext i32 %13171 to i64
  br label %13275

13270:                                            ; preds = %13156
  %13271 = zext i32 %13175 to i64
  %13272 = shl i64 %13158, %13271
  %13273 = sext i32 %13171 to i64
  %13274 = or i64 %13272, %13273
  br label %13275

13275:                                            ; preds = %13266, %13270, %13025
  %13276 = phi i32 [ %13017, %13025 ], [ %13268, %13266 ], [ %13176, %13270 ]
  %13277 = phi i64 [ %13018, %13025 ], [ %13269, %13266 ], [ %13274, %13270 ]
  %13278 = phi i8* [ %13019, %13025 ], [ %13267, %13266 ], [ %13159, %13270 ]
  %13279 = phi i32 [ %13026, %13025 ], [ 0, %13266 ], [ 0, %13270 ]
  %13280 = getelementptr inbounds i16, i16* %1, i64 47
  %13281 = load i16, i16* %13280, align 2
  %13282 = sext i16 %13281 to i32
  %13283 = icmp eq i16 %13281, 0
  br i1 %13283, label %13284, label %13286

13284:                                            ; preds = %13275
  %13285 = add nuw nsw i32 %13279, 16
  br label %13534

13286:                                            ; preds = %13275
  %13287 = ashr i32 %13282, 31
  %13288 = add nsw i32 %13287, %13282
  %13289 = xor i32 %13288, %13287
  %13290 = sext i32 %13289 to i64
  %13291 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %13290
  %13292 = load i8, i8* %13291, align 1
  %13293 = zext i8 %13292 to i32
  %13294 = icmp sgt i32 %13279, 255
  br i1 %13294, label %13295, label %13415

13295:                                            ; preds = %13286
  %13296 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %13297 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %13298

13298:                                            ; preds = %13295, %13408
  %13299 = phi i32 [ %13279, %13295 ], [ %13303, %13408 ]
  %13300 = phi i8* [ %13278, %13295 ], [ %13411, %13408 ]
  %13301 = phi i64 [ %13277, %13295 ], [ %13410, %13408 ]
  %13302 = phi i32 [ %13276, %13295 ], [ %13409, %13408 ]
  %13303 = add nsw i32 %13299, -256
  %13304 = load i8, i8* %13296, align 4
  %13305 = sext i8 %13304 to i32
  %13306 = sub nsw i32 %13302, %13305
  %13307 = icmp slt i32 %13306, 0
  br i1 %13307, label %13308, label %13402

13308:                                            ; preds = %13298
  %13309 = zext i32 %13302 to i64
  %13310 = shl i64 %13301, %13309
  %13311 = load i32, i32* %13297, align 4
  %13312 = sub nsw i32 0, %13306
  %13313 = lshr i32 %13311, %13312
  %13314 = zext i32 %13313 to i64
  %13315 = or i64 %13310, %13314
  %13316 = and i64 %13315, -9187201950435737472
  %13317 = sub i64 -72340172838076674, %13315
  %13318 = and i64 %13316, %13317
  %13319 = icmp eq i64 %13318, 0
  %13320 = lshr i64 %13310, 56
  %13321 = trunc i64 %13320 to i8
  store i8 %13321, i8* %13300, align 1
  br i1 %13319, label %13375, label %13322

13322:                                            ; preds = %13308
  %13323 = getelementptr inbounds i8, i8* %13300, i64 1
  store i8 0, i8* %13323, align 1
  %13324 = icmp eq i64 %13320, 255
  %13325 = select i1 %13324, i64 2, i64 1
  %13326 = getelementptr inbounds i8, i8* %13300, i64 %13325
  %13327 = lshr i64 %13310, 48
  %13328 = trunc i64 %13327 to i8
  store i8 %13328, i8* %13326, align 1
  %13329 = getelementptr inbounds i8, i8* %13326, i64 1
  store i8 0, i8* %13329, align 1
  %13330 = and i64 %13310, 71776119061217280
  %13331 = icmp eq i64 %13330, 71776119061217280
  %13332 = select i1 %13331, i64 2, i64 1
  %13333 = getelementptr inbounds i8, i8* %13326, i64 %13332
  %13334 = lshr i64 %13310, 40
  %13335 = trunc i64 %13334 to i8
  store i8 %13335, i8* %13333, align 1
  %13336 = getelementptr inbounds i8, i8* %13333, i64 1
  store i8 0, i8* %13336, align 1
  %13337 = and i64 %13310, 280375465082880
  %13338 = icmp eq i64 %13337, 280375465082880
  %13339 = select i1 %13338, i64 2, i64 1
  %13340 = getelementptr inbounds i8, i8* %13333, i64 %13339
  %13341 = lshr i64 %13310, 32
  %13342 = trunc i64 %13341 to i8
  store i8 %13342, i8* %13340, align 1
  %13343 = getelementptr inbounds i8, i8* %13340, i64 1
  store i8 0, i8* %13343, align 1
  %13344 = and i64 %13310, 1095216660480
  %13345 = icmp eq i64 %13344, 1095216660480
  %13346 = select i1 %13345, i64 2, i64 1
  %13347 = getelementptr inbounds i8, i8* %13340, i64 %13346
  %13348 = lshr i64 %13315, 24
  %13349 = trunc i64 %13348 to i8
  store i8 %13349, i8* %13347, align 1
  %13350 = getelementptr inbounds i8, i8* %13347, i64 1
  store i8 0, i8* %13350, align 1
  %13351 = and i64 %13315, 4278190080
  %13352 = icmp eq i64 %13351, 4278190080
  %13353 = select i1 %13352, i64 2, i64 1
  %13354 = getelementptr inbounds i8, i8* %13347, i64 %13353
  %13355 = lshr i64 %13315, 16
  %13356 = trunc i64 %13355 to i8
  store i8 %13356, i8* %13354, align 1
  %13357 = getelementptr inbounds i8, i8* %13354, i64 1
  store i8 0, i8* %13357, align 1
  %13358 = and i64 %13315, 16711680
  %13359 = icmp eq i64 %13358, 16711680
  %13360 = select i1 %13359, i64 2, i64 1
  %13361 = getelementptr inbounds i8, i8* %13354, i64 %13360
  %13362 = lshr i64 %13315, 8
  %13363 = trunc i64 %13362 to i8
  store i8 %13363, i8* %13361, align 1
  %13364 = getelementptr inbounds i8, i8* %13361, i64 1
  store i8 0, i8* %13364, align 1
  %13365 = and i64 %13315, 65280
  %13366 = icmp eq i64 %13365, 65280
  %13367 = select i1 %13366, i64 2, i64 1
  %13368 = getelementptr inbounds i8, i8* %13361, i64 %13367
  %13369 = trunc i64 %13315 to i8
  store i8 %13369, i8* %13368, align 1
  %13370 = getelementptr inbounds i8, i8* %13368, i64 1
  store i8 0, i8* %13370, align 1
  %13371 = and i64 %13315, 255
  %13372 = icmp eq i64 %13371, 255
  %13373 = select i1 %13372, i64 2, i64 1
  %13374 = getelementptr inbounds i8, i8* %13368, i64 %13373
  br label %13397

13375:                                            ; preds = %13308
  %13376 = lshr i64 %13310, 48
  %13377 = trunc i64 %13376 to i8
  %13378 = getelementptr inbounds i8, i8* %13300, i64 1
  store i8 %13377, i8* %13378, align 1
  %13379 = lshr i64 %13310, 40
  %13380 = trunc i64 %13379 to i8
  %13381 = getelementptr inbounds i8, i8* %13300, i64 2
  store i8 %13380, i8* %13381, align 1
  %13382 = lshr i64 %13310, 32
  %13383 = trunc i64 %13382 to i8
  %13384 = getelementptr inbounds i8, i8* %13300, i64 3
  store i8 %13383, i8* %13384, align 1
  %13385 = lshr i64 %13315, 24
  %13386 = trunc i64 %13385 to i8
  %13387 = getelementptr inbounds i8, i8* %13300, i64 4
  store i8 %13386, i8* %13387, align 1
  %13388 = lshr i64 %13315, 16
  %13389 = trunc i64 %13388 to i8
  %13390 = getelementptr inbounds i8, i8* %13300, i64 5
  store i8 %13389, i8* %13390, align 1
  %13391 = lshr i64 %13315, 8
  %13392 = trunc i64 %13391 to i8
  %13393 = getelementptr inbounds i8, i8* %13300, i64 6
  store i8 %13392, i8* %13393, align 1
  %13394 = trunc i64 %13315 to i8
  %13395 = getelementptr inbounds i8, i8* %13300, i64 7
  store i8 %13394, i8* %13395, align 1
  %13396 = getelementptr inbounds i8, i8* %13300, i64 8
  br label %13397

13397:                                            ; preds = %13375, %13322
  %13398 = phi i8* [ %13374, %13322 ], [ %13396, %13375 ]
  %13399 = add nsw i32 %13306, 64
  %13400 = load i32, i32* %13297, align 4
  %13401 = zext i32 %13400 to i64
  br label %13408

13402:                                            ; preds = %13298
  %13403 = zext i32 %13305 to i64
  %13404 = shl i64 %13301, %13403
  %13405 = load i32, i32* %13297, align 4
  %13406 = zext i32 %13405 to i64
  %13407 = or i64 %13404, %13406
  br label %13408

13408:                                            ; preds = %13402, %13397
  %13409 = phi i32 [ %13399, %13397 ], [ %13306, %13402 ]
  %13410 = phi i64 [ %13401, %13397 ], [ %13407, %13402 ]
  %13411 = phi i8* [ %13398, %13397 ], [ %13300, %13402 ]
  %13412 = icmp sgt i32 %13303, 255
  br i1 %13412, label %13298, label %13413

13413:                                            ; preds = %13408
  %13414 = and i32 %13279, 255
  br label %13415

13415:                                            ; preds = %13413, %13286
  %13416 = phi i32 [ %13276, %13286 ], [ %13409, %13413 ]
  %13417 = phi i64 [ %13277, %13286 ], [ %13410, %13413 ]
  %13418 = phi i8* [ %13278, %13286 ], [ %13411, %13413 ]
  %13419 = phi i32 [ %13279, %13286 ], [ %13414, %13413 ]
  %13420 = add nsw i32 %13419, %13293
  %13421 = zext i8 %13292 to i64
  %13422 = shl nsw i64 -1, %13421
  %13423 = trunc i64 %13422 to i32
  %13424 = xor i32 %13423, -1
  %13425 = and i32 %13288, %13424
  %13426 = sext i32 %13420 to i64
  %13427 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %13426
  %13428 = load i32, i32* %13427, align 4
  %13429 = shl i32 %13428, %13293
  %13430 = or i32 %13429, %13425
  %13431 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %13426
  %13432 = load i8, i8* %13431, align 1
  %13433 = sext i8 %13432 to i32
  %13434 = add nsw i32 %13433, %13293
  %13435 = sub nsw i32 %13416, %13434
  %13436 = icmp slt i32 %13435, 0
  br i1 %13436, label %13437, label %13529

13437:                                            ; preds = %13415
  %13438 = zext i32 %13416 to i64
  %13439 = shl i64 %13417, %13438
  %13440 = sub nsw i32 0, %13435
  %13441 = ashr i32 %13430, %13440
  %13442 = sext i32 %13441 to i64
  %13443 = or i64 %13439, %13442
  %13444 = and i64 %13443, -9187201950435737472
  %13445 = sub i64 -72340172838076674, %13443
  %13446 = and i64 %13444, %13445
  %13447 = icmp eq i64 %13446, 0
  %13448 = lshr i64 %13443, 56
  %13449 = trunc i64 %13448 to i8
  store i8 %13449, i8* %13418, align 1
  br i1 %13447, label %13503, label %13450

13450:                                            ; preds = %13437
  %13451 = getelementptr inbounds i8, i8* %13418, i64 1
  store i8 0, i8* %13451, align 1
  %13452 = icmp eq i64 %13448, 255
  %13453 = select i1 %13452, i64 2, i64 1
  %13454 = getelementptr inbounds i8, i8* %13418, i64 %13453
  %13455 = lshr i64 %13443, 48
  %13456 = trunc i64 %13455 to i8
  store i8 %13456, i8* %13454, align 1
  %13457 = getelementptr inbounds i8, i8* %13454, i64 1
  store i8 0, i8* %13457, align 1
  %13458 = and i64 %13443, 71776119061217280
  %13459 = icmp eq i64 %13458, 71776119061217280
  %13460 = select i1 %13459, i64 2, i64 1
  %13461 = getelementptr inbounds i8, i8* %13454, i64 %13460
  %13462 = lshr i64 %13443, 40
  %13463 = trunc i64 %13462 to i8
  store i8 %13463, i8* %13461, align 1
  %13464 = getelementptr inbounds i8, i8* %13461, i64 1
  store i8 0, i8* %13464, align 1
  %13465 = and i64 %13443, 280375465082880
  %13466 = icmp eq i64 %13465, 280375465082880
  %13467 = select i1 %13466, i64 2, i64 1
  %13468 = getelementptr inbounds i8, i8* %13461, i64 %13467
  %13469 = lshr i64 %13443, 32
  %13470 = trunc i64 %13469 to i8
  store i8 %13470, i8* %13468, align 1
  %13471 = getelementptr inbounds i8, i8* %13468, i64 1
  store i8 0, i8* %13471, align 1
  %13472 = and i64 %13443, 1095216660480
  %13473 = icmp eq i64 %13472, 1095216660480
  %13474 = select i1 %13473, i64 2, i64 1
  %13475 = getelementptr inbounds i8, i8* %13468, i64 %13474
  %13476 = lshr i64 %13443, 24
  %13477 = trunc i64 %13476 to i8
  store i8 %13477, i8* %13475, align 1
  %13478 = getelementptr inbounds i8, i8* %13475, i64 1
  store i8 0, i8* %13478, align 1
  %13479 = and i64 %13443, 4278190080
  %13480 = icmp eq i64 %13479, 4278190080
  %13481 = select i1 %13480, i64 2, i64 1
  %13482 = getelementptr inbounds i8, i8* %13475, i64 %13481
  %13483 = lshr i64 %13443, 16
  %13484 = trunc i64 %13483 to i8
  store i8 %13484, i8* %13482, align 1
  %13485 = getelementptr inbounds i8, i8* %13482, i64 1
  store i8 0, i8* %13485, align 1
  %13486 = and i64 %13443, 16711680
  %13487 = icmp eq i64 %13486, 16711680
  %13488 = select i1 %13487, i64 2, i64 1
  %13489 = getelementptr inbounds i8, i8* %13482, i64 %13488
  %13490 = lshr i64 %13443, 8
  %13491 = trunc i64 %13490 to i8
  store i8 %13491, i8* %13489, align 1
  %13492 = getelementptr inbounds i8, i8* %13489, i64 1
  store i8 0, i8* %13492, align 1
  %13493 = and i64 %13443, 65280
  %13494 = icmp eq i64 %13493, 65280
  %13495 = select i1 %13494, i64 2, i64 1
  %13496 = getelementptr inbounds i8, i8* %13489, i64 %13495
  %13497 = trunc i64 %13443 to i8
  store i8 %13497, i8* %13496, align 1
  %13498 = getelementptr inbounds i8, i8* %13496, i64 1
  store i8 0, i8* %13498, align 1
  %13499 = and i64 %13443, 255
  %13500 = icmp eq i64 %13499, 255
  %13501 = select i1 %13500, i64 2, i64 1
  %13502 = getelementptr inbounds i8, i8* %13496, i64 %13501
  br label %13525

13503:                                            ; preds = %13437
  %13504 = lshr i64 %13443, 48
  %13505 = trunc i64 %13504 to i8
  %13506 = getelementptr inbounds i8, i8* %13418, i64 1
  store i8 %13505, i8* %13506, align 1
  %13507 = lshr i64 %13443, 40
  %13508 = trunc i64 %13507 to i8
  %13509 = getelementptr inbounds i8, i8* %13418, i64 2
  store i8 %13508, i8* %13509, align 1
  %13510 = lshr i64 %13443, 32
  %13511 = trunc i64 %13510 to i8
  %13512 = getelementptr inbounds i8, i8* %13418, i64 3
  store i8 %13511, i8* %13512, align 1
  %13513 = lshr i64 %13443, 24
  %13514 = trunc i64 %13513 to i8
  %13515 = getelementptr inbounds i8, i8* %13418, i64 4
  store i8 %13514, i8* %13515, align 1
  %13516 = lshr i64 %13443, 16
  %13517 = trunc i64 %13516 to i8
  %13518 = getelementptr inbounds i8, i8* %13418, i64 5
  store i8 %13517, i8* %13518, align 1
  %13519 = lshr i64 %13443, 8
  %13520 = trunc i64 %13519 to i8
  %13521 = getelementptr inbounds i8, i8* %13418, i64 6
  store i8 %13520, i8* %13521, align 1
  %13522 = trunc i64 %13443 to i8
  %13523 = getelementptr inbounds i8, i8* %13418, i64 7
  store i8 %13522, i8* %13523, align 1
  %13524 = getelementptr inbounds i8, i8* %13418, i64 8
  br label %13525

13525:                                            ; preds = %13503, %13450
  %13526 = phi i8* [ %13502, %13450 ], [ %13524, %13503 ]
  %13527 = add nsw i32 %13435, 64
  %13528 = sext i32 %13430 to i64
  br label %13534

13529:                                            ; preds = %13415
  %13530 = zext i32 %13434 to i64
  %13531 = shl i64 %13417, %13530
  %13532 = sext i32 %13430 to i64
  %13533 = or i64 %13531, %13532
  br label %13534

13534:                                            ; preds = %13525, %13529, %13284
  %13535 = phi i32 [ %13276, %13284 ], [ %13527, %13525 ], [ %13435, %13529 ]
  %13536 = phi i64 [ %13277, %13284 ], [ %13528, %13525 ], [ %13533, %13529 ]
  %13537 = phi i8* [ %13278, %13284 ], [ %13526, %13525 ], [ %13418, %13529 ]
  %13538 = phi i32 [ %13285, %13284 ], [ 0, %13525 ], [ 0, %13529 ]
  %13539 = getelementptr inbounds i16, i16* %1, i64 55
  %13540 = load i16, i16* %13539, align 2
  %13541 = sext i16 %13540 to i32
  %13542 = icmp eq i16 %13540, 0
  br i1 %13542, label %13543, label %13545

13543:                                            ; preds = %13534
  %13544 = add nuw nsw i32 %13538, 16
  br label %13793

13545:                                            ; preds = %13534
  %13546 = ashr i32 %13541, 31
  %13547 = add nsw i32 %13546, %13541
  %13548 = xor i32 %13547, %13546
  %13549 = sext i32 %13548 to i64
  %13550 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %13549
  %13551 = load i8, i8* %13550, align 1
  %13552 = zext i8 %13551 to i32
  %13553 = icmp sgt i32 %13538, 255
  br i1 %13553, label %13554, label %13674

13554:                                            ; preds = %13545
  %13555 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %13556 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %13557

13557:                                            ; preds = %13554, %13667
  %13558 = phi i32 [ %13538, %13554 ], [ %13562, %13667 ]
  %13559 = phi i8* [ %13537, %13554 ], [ %13670, %13667 ]
  %13560 = phi i64 [ %13536, %13554 ], [ %13669, %13667 ]
  %13561 = phi i32 [ %13535, %13554 ], [ %13668, %13667 ]
  %13562 = add nsw i32 %13558, -256
  %13563 = load i8, i8* %13555, align 4
  %13564 = sext i8 %13563 to i32
  %13565 = sub nsw i32 %13561, %13564
  %13566 = icmp slt i32 %13565, 0
  br i1 %13566, label %13567, label %13661

13567:                                            ; preds = %13557
  %13568 = zext i32 %13561 to i64
  %13569 = shl i64 %13560, %13568
  %13570 = load i32, i32* %13556, align 4
  %13571 = sub nsw i32 0, %13565
  %13572 = lshr i32 %13570, %13571
  %13573 = zext i32 %13572 to i64
  %13574 = or i64 %13569, %13573
  %13575 = and i64 %13574, -9187201950435737472
  %13576 = sub i64 -72340172838076674, %13574
  %13577 = and i64 %13575, %13576
  %13578 = icmp eq i64 %13577, 0
  %13579 = lshr i64 %13569, 56
  %13580 = trunc i64 %13579 to i8
  store i8 %13580, i8* %13559, align 1
  br i1 %13578, label %13634, label %13581

13581:                                            ; preds = %13567
  %13582 = getelementptr inbounds i8, i8* %13559, i64 1
  store i8 0, i8* %13582, align 1
  %13583 = icmp eq i64 %13579, 255
  %13584 = select i1 %13583, i64 2, i64 1
  %13585 = getelementptr inbounds i8, i8* %13559, i64 %13584
  %13586 = lshr i64 %13569, 48
  %13587 = trunc i64 %13586 to i8
  store i8 %13587, i8* %13585, align 1
  %13588 = getelementptr inbounds i8, i8* %13585, i64 1
  store i8 0, i8* %13588, align 1
  %13589 = and i64 %13569, 71776119061217280
  %13590 = icmp eq i64 %13589, 71776119061217280
  %13591 = select i1 %13590, i64 2, i64 1
  %13592 = getelementptr inbounds i8, i8* %13585, i64 %13591
  %13593 = lshr i64 %13569, 40
  %13594 = trunc i64 %13593 to i8
  store i8 %13594, i8* %13592, align 1
  %13595 = getelementptr inbounds i8, i8* %13592, i64 1
  store i8 0, i8* %13595, align 1
  %13596 = and i64 %13569, 280375465082880
  %13597 = icmp eq i64 %13596, 280375465082880
  %13598 = select i1 %13597, i64 2, i64 1
  %13599 = getelementptr inbounds i8, i8* %13592, i64 %13598
  %13600 = lshr i64 %13569, 32
  %13601 = trunc i64 %13600 to i8
  store i8 %13601, i8* %13599, align 1
  %13602 = getelementptr inbounds i8, i8* %13599, i64 1
  store i8 0, i8* %13602, align 1
  %13603 = and i64 %13569, 1095216660480
  %13604 = icmp eq i64 %13603, 1095216660480
  %13605 = select i1 %13604, i64 2, i64 1
  %13606 = getelementptr inbounds i8, i8* %13599, i64 %13605
  %13607 = lshr i64 %13574, 24
  %13608 = trunc i64 %13607 to i8
  store i8 %13608, i8* %13606, align 1
  %13609 = getelementptr inbounds i8, i8* %13606, i64 1
  store i8 0, i8* %13609, align 1
  %13610 = and i64 %13574, 4278190080
  %13611 = icmp eq i64 %13610, 4278190080
  %13612 = select i1 %13611, i64 2, i64 1
  %13613 = getelementptr inbounds i8, i8* %13606, i64 %13612
  %13614 = lshr i64 %13574, 16
  %13615 = trunc i64 %13614 to i8
  store i8 %13615, i8* %13613, align 1
  %13616 = getelementptr inbounds i8, i8* %13613, i64 1
  store i8 0, i8* %13616, align 1
  %13617 = and i64 %13574, 16711680
  %13618 = icmp eq i64 %13617, 16711680
  %13619 = select i1 %13618, i64 2, i64 1
  %13620 = getelementptr inbounds i8, i8* %13613, i64 %13619
  %13621 = lshr i64 %13574, 8
  %13622 = trunc i64 %13621 to i8
  store i8 %13622, i8* %13620, align 1
  %13623 = getelementptr inbounds i8, i8* %13620, i64 1
  store i8 0, i8* %13623, align 1
  %13624 = and i64 %13574, 65280
  %13625 = icmp eq i64 %13624, 65280
  %13626 = select i1 %13625, i64 2, i64 1
  %13627 = getelementptr inbounds i8, i8* %13620, i64 %13626
  %13628 = trunc i64 %13574 to i8
  store i8 %13628, i8* %13627, align 1
  %13629 = getelementptr inbounds i8, i8* %13627, i64 1
  store i8 0, i8* %13629, align 1
  %13630 = and i64 %13574, 255
  %13631 = icmp eq i64 %13630, 255
  %13632 = select i1 %13631, i64 2, i64 1
  %13633 = getelementptr inbounds i8, i8* %13627, i64 %13632
  br label %13656

13634:                                            ; preds = %13567
  %13635 = lshr i64 %13569, 48
  %13636 = trunc i64 %13635 to i8
  %13637 = getelementptr inbounds i8, i8* %13559, i64 1
  store i8 %13636, i8* %13637, align 1
  %13638 = lshr i64 %13569, 40
  %13639 = trunc i64 %13638 to i8
  %13640 = getelementptr inbounds i8, i8* %13559, i64 2
  store i8 %13639, i8* %13640, align 1
  %13641 = lshr i64 %13569, 32
  %13642 = trunc i64 %13641 to i8
  %13643 = getelementptr inbounds i8, i8* %13559, i64 3
  store i8 %13642, i8* %13643, align 1
  %13644 = lshr i64 %13574, 24
  %13645 = trunc i64 %13644 to i8
  %13646 = getelementptr inbounds i8, i8* %13559, i64 4
  store i8 %13645, i8* %13646, align 1
  %13647 = lshr i64 %13574, 16
  %13648 = trunc i64 %13647 to i8
  %13649 = getelementptr inbounds i8, i8* %13559, i64 5
  store i8 %13648, i8* %13649, align 1
  %13650 = lshr i64 %13574, 8
  %13651 = trunc i64 %13650 to i8
  %13652 = getelementptr inbounds i8, i8* %13559, i64 6
  store i8 %13651, i8* %13652, align 1
  %13653 = trunc i64 %13574 to i8
  %13654 = getelementptr inbounds i8, i8* %13559, i64 7
  store i8 %13653, i8* %13654, align 1
  %13655 = getelementptr inbounds i8, i8* %13559, i64 8
  br label %13656

13656:                                            ; preds = %13634, %13581
  %13657 = phi i8* [ %13633, %13581 ], [ %13655, %13634 ]
  %13658 = add nsw i32 %13565, 64
  %13659 = load i32, i32* %13556, align 4
  %13660 = zext i32 %13659 to i64
  br label %13667

13661:                                            ; preds = %13557
  %13662 = zext i32 %13564 to i64
  %13663 = shl i64 %13560, %13662
  %13664 = load i32, i32* %13556, align 4
  %13665 = zext i32 %13664 to i64
  %13666 = or i64 %13663, %13665
  br label %13667

13667:                                            ; preds = %13661, %13656
  %13668 = phi i32 [ %13658, %13656 ], [ %13565, %13661 ]
  %13669 = phi i64 [ %13660, %13656 ], [ %13666, %13661 ]
  %13670 = phi i8* [ %13657, %13656 ], [ %13559, %13661 ]
  %13671 = icmp sgt i32 %13562, 255
  br i1 %13671, label %13557, label %13672

13672:                                            ; preds = %13667
  %13673 = and i32 %13538, 255
  br label %13674

13674:                                            ; preds = %13672, %13545
  %13675 = phi i32 [ %13535, %13545 ], [ %13668, %13672 ]
  %13676 = phi i64 [ %13536, %13545 ], [ %13669, %13672 ]
  %13677 = phi i8* [ %13537, %13545 ], [ %13670, %13672 ]
  %13678 = phi i32 [ %13538, %13545 ], [ %13673, %13672 ]
  %13679 = add nsw i32 %13678, %13552
  %13680 = zext i8 %13551 to i64
  %13681 = shl nsw i64 -1, %13680
  %13682 = trunc i64 %13681 to i32
  %13683 = xor i32 %13682, -1
  %13684 = and i32 %13547, %13683
  %13685 = sext i32 %13679 to i64
  %13686 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %13685
  %13687 = load i32, i32* %13686, align 4
  %13688 = shl i32 %13687, %13552
  %13689 = or i32 %13688, %13684
  %13690 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %13685
  %13691 = load i8, i8* %13690, align 1
  %13692 = sext i8 %13691 to i32
  %13693 = add nsw i32 %13692, %13552
  %13694 = sub nsw i32 %13675, %13693
  %13695 = icmp slt i32 %13694, 0
  br i1 %13695, label %13696, label %13788

13696:                                            ; preds = %13674
  %13697 = zext i32 %13675 to i64
  %13698 = shl i64 %13676, %13697
  %13699 = sub nsw i32 0, %13694
  %13700 = ashr i32 %13689, %13699
  %13701 = sext i32 %13700 to i64
  %13702 = or i64 %13698, %13701
  %13703 = and i64 %13702, -9187201950435737472
  %13704 = sub i64 -72340172838076674, %13702
  %13705 = and i64 %13703, %13704
  %13706 = icmp eq i64 %13705, 0
  %13707 = lshr i64 %13702, 56
  %13708 = trunc i64 %13707 to i8
  store i8 %13708, i8* %13677, align 1
  br i1 %13706, label %13762, label %13709

13709:                                            ; preds = %13696
  %13710 = getelementptr inbounds i8, i8* %13677, i64 1
  store i8 0, i8* %13710, align 1
  %13711 = icmp eq i64 %13707, 255
  %13712 = select i1 %13711, i64 2, i64 1
  %13713 = getelementptr inbounds i8, i8* %13677, i64 %13712
  %13714 = lshr i64 %13702, 48
  %13715 = trunc i64 %13714 to i8
  store i8 %13715, i8* %13713, align 1
  %13716 = getelementptr inbounds i8, i8* %13713, i64 1
  store i8 0, i8* %13716, align 1
  %13717 = and i64 %13702, 71776119061217280
  %13718 = icmp eq i64 %13717, 71776119061217280
  %13719 = select i1 %13718, i64 2, i64 1
  %13720 = getelementptr inbounds i8, i8* %13713, i64 %13719
  %13721 = lshr i64 %13702, 40
  %13722 = trunc i64 %13721 to i8
  store i8 %13722, i8* %13720, align 1
  %13723 = getelementptr inbounds i8, i8* %13720, i64 1
  store i8 0, i8* %13723, align 1
  %13724 = and i64 %13702, 280375465082880
  %13725 = icmp eq i64 %13724, 280375465082880
  %13726 = select i1 %13725, i64 2, i64 1
  %13727 = getelementptr inbounds i8, i8* %13720, i64 %13726
  %13728 = lshr i64 %13702, 32
  %13729 = trunc i64 %13728 to i8
  store i8 %13729, i8* %13727, align 1
  %13730 = getelementptr inbounds i8, i8* %13727, i64 1
  store i8 0, i8* %13730, align 1
  %13731 = and i64 %13702, 1095216660480
  %13732 = icmp eq i64 %13731, 1095216660480
  %13733 = select i1 %13732, i64 2, i64 1
  %13734 = getelementptr inbounds i8, i8* %13727, i64 %13733
  %13735 = lshr i64 %13702, 24
  %13736 = trunc i64 %13735 to i8
  store i8 %13736, i8* %13734, align 1
  %13737 = getelementptr inbounds i8, i8* %13734, i64 1
  store i8 0, i8* %13737, align 1
  %13738 = and i64 %13702, 4278190080
  %13739 = icmp eq i64 %13738, 4278190080
  %13740 = select i1 %13739, i64 2, i64 1
  %13741 = getelementptr inbounds i8, i8* %13734, i64 %13740
  %13742 = lshr i64 %13702, 16
  %13743 = trunc i64 %13742 to i8
  store i8 %13743, i8* %13741, align 1
  %13744 = getelementptr inbounds i8, i8* %13741, i64 1
  store i8 0, i8* %13744, align 1
  %13745 = and i64 %13702, 16711680
  %13746 = icmp eq i64 %13745, 16711680
  %13747 = select i1 %13746, i64 2, i64 1
  %13748 = getelementptr inbounds i8, i8* %13741, i64 %13747
  %13749 = lshr i64 %13702, 8
  %13750 = trunc i64 %13749 to i8
  store i8 %13750, i8* %13748, align 1
  %13751 = getelementptr inbounds i8, i8* %13748, i64 1
  store i8 0, i8* %13751, align 1
  %13752 = and i64 %13702, 65280
  %13753 = icmp eq i64 %13752, 65280
  %13754 = select i1 %13753, i64 2, i64 1
  %13755 = getelementptr inbounds i8, i8* %13748, i64 %13754
  %13756 = trunc i64 %13702 to i8
  store i8 %13756, i8* %13755, align 1
  %13757 = getelementptr inbounds i8, i8* %13755, i64 1
  store i8 0, i8* %13757, align 1
  %13758 = and i64 %13702, 255
  %13759 = icmp eq i64 %13758, 255
  %13760 = select i1 %13759, i64 2, i64 1
  %13761 = getelementptr inbounds i8, i8* %13755, i64 %13760
  br label %13784

13762:                                            ; preds = %13696
  %13763 = lshr i64 %13702, 48
  %13764 = trunc i64 %13763 to i8
  %13765 = getelementptr inbounds i8, i8* %13677, i64 1
  store i8 %13764, i8* %13765, align 1
  %13766 = lshr i64 %13702, 40
  %13767 = trunc i64 %13766 to i8
  %13768 = getelementptr inbounds i8, i8* %13677, i64 2
  store i8 %13767, i8* %13768, align 1
  %13769 = lshr i64 %13702, 32
  %13770 = trunc i64 %13769 to i8
  %13771 = getelementptr inbounds i8, i8* %13677, i64 3
  store i8 %13770, i8* %13771, align 1
  %13772 = lshr i64 %13702, 24
  %13773 = trunc i64 %13772 to i8
  %13774 = getelementptr inbounds i8, i8* %13677, i64 4
  store i8 %13773, i8* %13774, align 1
  %13775 = lshr i64 %13702, 16
  %13776 = trunc i64 %13775 to i8
  %13777 = getelementptr inbounds i8, i8* %13677, i64 5
  store i8 %13776, i8* %13777, align 1
  %13778 = lshr i64 %13702, 8
  %13779 = trunc i64 %13778 to i8
  %13780 = getelementptr inbounds i8, i8* %13677, i64 6
  store i8 %13779, i8* %13780, align 1
  %13781 = trunc i64 %13702 to i8
  %13782 = getelementptr inbounds i8, i8* %13677, i64 7
  store i8 %13781, i8* %13782, align 1
  %13783 = getelementptr inbounds i8, i8* %13677, i64 8
  br label %13784

13784:                                            ; preds = %13762, %13709
  %13785 = phi i8* [ %13761, %13709 ], [ %13783, %13762 ]
  %13786 = add nsw i32 %13694, 64
  %13787 = sext i32 %13689 to i64
  br label %13793

13788:                                            ; preds = %13674
  %13789 = zext i32 %13693 to i64
  %13790 = shl i64 %13676, %13789
  %13791 = sext i32 %13689 to i64
  %13792 = or i64 %13790, %13791
  br label %13793

13793:                                            ; preds = %13784, %13788, %13543
  %13794 = phi i32 [ %13535, %13543 ], [ %13786, %13784 ], [ %13694, %13788 ]
  %13795 = phi i64 [ %13536, %13543 ], [ %13787, %13784 ], [ %13792, %13788 ]
  %13796 = phi i8* [ %13537, %13543 ], [ %13785, %13784 ], [ %13677, %13788 ]
  %13797 = phi i32 [ %13544, %13543 ], [ 0, %13784 ], [ 0, %13788 ]
  %13798 = getelementptr inbounds i16, i16* %1, i64 62
  %13799 = load i16, i16* %13798, align 2
  %13800 = sext i16 %13799 to i32
  %13801 = icmp eq i16 %13799, 0
  br i1 %13801, label %13802, label %13804

13802:                                            ; preds = %13793
  %13803 = add nuw nsw i32 %13797, 16
  br label %14052

13804:                                            ; preds = %13793
  %13805 = ashr i32 %13800, 31
  %13806 = add nsw i32 %13805, %13800
  %13807 = xor i32 %13806, %13805
  %13808 = sext i32 %13807 to i64
  %13809 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %13808
  %13810 = load i8, i8* %13809, align 1
  %13811 = zext i8 %13810 to i32
  %13812 = icmp sgt i32 %13797, 255
  br i1 %13812, label %13813, label %13933

13813:                                            ; preds = %13804
  %13814 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %13815 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %13816

13816:                                            ; preds = %13813, %13926
  %13817 = phi i32 [ %13797, %13813 ], [ %13821, %13926 ]
  %13818 = phi i8* [ %13796, %13813 ], [ %13929, %13926 ]
  %13819 = phi i64 [ %13795, %13813 ], [ %13928, %13926 ]
  %13820 = phi i32 [ %13794, %13813 ], [ %13927, %13926 ]
  %13821 = add nsw i32 %13817, -256
  %13822 = load i8, i8* %13814, align 4
  %13823 = sext i8 %13822 to i32
  %13824 = sub nsw i32 %13820, %13823
  %13825 = icmp slt i32 %13824, 0
  br i1 %13825, label %13826, label %13920

13826:                                            ; preds = %13816
  %13827 = zext i32 %13820 to i64
  %13828 = shl i64 %13819, %13827
  %13829 = load i32, i32* %13815, align 4
  %13830 = sub nsw i32 0, %13824
  %13831 = lshr i32 %13829, %13830
  %13832 = zext i32 %13831 to i64
  %13833 = or i64 %13828, %13832
  %13834 = and i64 %13833, -9187201950435737472
  %13835 = sub i64 -72340172838076674, %13833
  %13836 = and i64 %13834, %13835
  %13837 = icmp eq i64 %13836, 0
  %13838 = lshr i64 %13828, 56
  %13839 = trunc i64 %13838 to i8
  store i8 %13839, i8* %13818, align 1
  br i1 %13837, label %13893, label %13840

13840:                                            ; preds = %13826
  %13841 = getelementptr inbounds i8, i8* %13818, i64 1
  store i8 0, i8* %13841, align 1
  %13842 = icmp eq i64 %13838, 255
  %13843 = select i1 %13842, i64 2, i64 1
  %13844 = getelementptr inbounds i8, i8* %13818, i64 %13843
  %13845 = lshr i64 %13828, 48
  %13846 = trunc i64 %13845 to i8
  store i8 %13846, i8* %13844, align 1
  %13847 = getelementptr inbounds i8, i8* %13844, i64 1
  store i8 0, i8* %13847, align 1
  %13848 = and i64 %13828, 71776119061217280
  %13849 = icmp eq i64 %13848, 71776119061217280
  %13850 = select i1 %13849, i64 2, i64 1
  %13851 = getelementptr inbounds i8, i8* %13844, i64 %13850
  %13852 = lshr i64 %13828, 40
  %13853 = trunc i64 %13852 to i8
  store i8 %13853, i8* %13851, align 1
  %13854 = getelementptr inbounds i8, i8* %13851, i64 1
  store i8 0, i8* %13854, align 1
  %13855 = and i64 %13828, 280375465082880
  %13856 = icmp eq i64 %13855, 280375465082880
  %13857 = select i1 %13856, i64 2, i64 1
  %13858 = getelementptr inbounds i8, i8* %13851, i64 %13857
  %13859 = lshr i64 %13828, 32
  %13860 = trunc i64 %13859 to i8
  store i8 %13860, i8* %13858, align 1
  %13861 = getelementptr inbounds i8, i8* %13858, i64 1
  store i8 0, i8* %13861, align 1
  %13862 = and i64 %13828, 1095216660480
  %13863 = icmp eq i64 %13862, 1095216660480
  %13864 = select i1 %13863, i64 2, i64 1
  %13865 = getelementptr inbounds i8, i8* %13858, i64 %13864
  %13866 = lshr i64 %13833, 24
  %13867 = trunc i64 %13866 to i8
  store i8 %13867, i8* %13865, align 1
  %13868 = getelementptr inbounds i8, i8* %13865, i64 1
  store i8 0, i8* %13868, align 1
  %13869 = and i64 %13833, 4278190080
  %13870 = icmp eq i64 %13869, 4278190080
  %13871 = select i1 %13870, i64 2, i64 1
  %13872 = getelementptr inbounds i8, i8* %13865, i64 %13871
  %13873 = lshr i64 %13833, 16
  %13874 = trunc i64 %13873 to i8
  store i8 %13874, i8* %13872, align 1
  %13875 = getelementptr inbounds i8, i8* %13872, i64 1
  store i8 0, i8* %13875, align 1
  %13876 = and i64 %13833, 16711680
  %13877 = icmp eq i64 %13876, 16711680
  %13878 = select i1 %13877, i64 2, i64 1
  %13879 = getelementptr inbounds i8, i8* %13872, i64 %13878
  %13880 = lshr i64 %13833, 8
  %13881 = trunc i64 %13880 to i8
  store i8 %13881, i8* %13879, align 1
  %13882 = getelementptr inbounds i8, i8* %13879, i64 1
  store i8 0, i8* %13882, align 1
  %13883 = and i64 %13833, 65280
  %13884 = icmp eq i64 %13883, 65280
  %13885 = select i1 %13884, i64 2, i64 1
  %13886 = getelementptr inbounds i8, i8* %13879, i64 %13885
  %13887 = trunc i64 %13833 to i8
  store i8 %13887, i8* %13886, align 1
  %13888 = getelementptr inbounds i8, i8* %13886, i64 1
  store i8 0, i8* %13888, align 1
  %13889 = and i64 %13833, 255
  %13890 = icmp eq i64 %13889, 255
  %13891 = select i1 %13890, i64 2, i64 1
  %13892 = getelementptr inbounds i8, i8* %13886, i64 %13891
  br label %13915

13893:                                            ; preds = %13826
  %13894 = lshr i64 %13828, 48
  %13895 = trunc i64 %13894 to i8
  %13896 = getelementptr inbounds i8, i8* %13818, i64 1
  store i8 %13895, i8* %13896, align 1
  %13897 = lshr i64 %13828, 40
  %13898 = trunc i64 %13897 to i8
  %13899 = getelementptr inbounds i8, i8* %13818, i64 2
  store i8 %13898, i8* %13899, align 1
  %13900 = lshr i64 %13828, 32
  %13901 = trunc i64 %13900 to i8
  %13902 = getelementptr inbounds i8, i8* %13818, i64 3
  store i8 %13901, i8* %13902, align 1
  %13903 = lshr i64 %13833, 24
  %13904 = trunc i64 %13903 to i8
  %13905 = getelementptr inbounds i8, i8* %13818, i64 4
  store i8 %13904, i8* %13905, align 1
  %13906 = lshr i64 %13833, 16
  %13907 = trunc i64 %13906 to i8
  %13908 = getelementptr inbounds i8, i8* %13818, i64 5
  store i8 %13907, i8* %13908, align 1
  %13909 = lshr i64 %13833, 8
  %13910 = trunc i64 %13909 to i8
  %13911 = getelementptr inbounds i8, i8* %13818, i64 6
  store i8 %13910, i8* %13911, align 1
  %13912 = trunc i64 %13833 to i8
  %13913 = getelementptr inbounds i8, i8* %13818, i64 7
  store i8 %13912, i8* %13913, align 1
  %13914 = getelementptr inbounds i8, i8* %13818, i64 8
  br label %13915

13915:                                            ; preds = %13893, %13840
  %13916 = phi i8* [ %13892, %13840 ], [ %13914, %13893 ]
  %13917 = add nsw i32 %13824, 64
  %13918 = load i32, i32* %13815, align 4
  %13919 = zext i32 %13918 to i64
  br label %13926

13920:                                            ; preds = %13816
  %13921 = zext i32 %13823 to i64
  %13922 = shl i64 %13819, %13921
  %13923 = load i32, i32* %13815, align 4
  %13924 = zext i32 %13923 to i64
  %13925 = or i64 %13922, %13924
  br label %13926

13926:                                            ; preds = %13920, %13915
  %13927 = phi i32 [ %13917, %13915 ], [ %13824, %13920 ]
  %13928 = phi i64 [ %13919, %13915 ], [ %13925, %13920 ]
  %13929 = phi i8* [ %13916, %13915 ], [ %13818, %13920 ]
  %13930 = icmp sgt i32 %13821, 255
  br i1 %13930, label %13816, label %13931

13931:                                            ; preds = %13926
  %13932 = and i32 %13797, 255
  br label %13933

13933:                                            ; preds = %13931, %13804
  %13934 = phi i32 [ %13794, %13804 ], [ %13927, %13931 ]
  %13935 = phi i64 [ %13795, %13804 ], [ %13928, %13931 ]
  %13936 = phi i8* [ %13796, %13804 ], [ %13929, %13931 ]
  %13937 = phi i32 [ %13797, %13804 ], [ %13932, %13931 ]
  %13938 = add nsw i32 %13937, %13811
  %13939 = zext i8 %13810 to i64
  %13940 = shl nsw i64 -1, %13939
  %13941 = trunc i64 %13940 to i32
  %13942 = xor i32 %13941, -1
  %13943 = and i32 %13806, %13942
  %13944 = sext i32 %13938 to i64
  %13945 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %13944
  %13946 = load i32, i32* %13945, align 4
  %13947 = shl i32 %13946, %13811
  %13948 = or i32 %13947, %13943
  %13949 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %13944
  %13950 = load i8, i8* %13949, align 1
  %13951 = sext i8 %13950 to i32
  %13952 = add nsw i32 %13951, %13811
  %13953 = sub nsw i32 %13934, %13952
  %13954 = icmp slt i32 %13953, 0
  br i1 %13954, label %13955, label %14047

13955:                                            ; preds = %13933
  %13956 = zext i32 %13934 to i64
  %13957 = shl i64 %13935, %13956
  %13958 = sub nsw i32 0, %13953
  %13959 = ashr i32 %13948, %13958
  %13960 = sext i32 %13959 to i64
  %13961 = or i64 %13957, %13960
  %13962 = and i64 %13961, -9187201950435737472
  %13963 = sub i64 -72340172838076674, %13961
  %13964 = and i64 %13962, %13963
  %13965 = icmp eq i64 %13964, 0
  %13966 = lshr i64 %13961, 56
  %13967 = trunc i64 %13966 to i8
  store i8 %13967, i8* %13936, align 1
  br i1 %13965, label %14021, label %13968

13968:                                            ; preds = %13955
  %13969 = getelementptr inbounds i8, i8* %13936, i64 1
  store i8 0, i8* %13969, align 1
  %13970 = icmp eq i64 %13966, 255
  %13971 = select i1 %13970, i64 2, i64 1
  %13972 = getelementptr inbounds i8, i8* %13936, i64 %13971
  %13973 = lshr i64 %13961, 48
  %13974 = trunc i64 %13973 to i8
  store i8 %13974, i8* %13972, align 1
  %13975 = getelementptr inbounds i8, i8* %13972, i64 1
  store i8 0, i8* %13975, align 1
  %13976 = and i64 %13961, 71776119061217280
  %13977 = icmp eq i64 %13976, 71776119061217280
  %13978 = select i1 %13977, i64 2, i64 1
  %13979 = getelementptr inbounds i8, i8* %13972, i64 %13978
  %13980 = lshr i64 %13961, 40
  %13981 = trunc i64 %13980 to i8
  store i8 %13981, i8* %13979, align 1
  %13982 = getelementptr inbounds i8, i8* %13979, i64 1
  store i8 0, i8* %13982, align 1
  %13983 = and i64 %13961, 280375465082880
  %13984 = icmp eq i64 %13983, 280375465082880
  %13985 = select i1 %13984, i64 2, i64 1
  %13986 = getelementptr inbounds i8, i8* %13979, i64 %13985
  %13987 = lshr i64 %13961, 32
  %13988 = trunc i64 %13987 to i8
  store i8 %13988, i8* %13986, align 1
  %13989 = getelementptr inbounds i8, i8* %13986, i64 1
  store i8 0, i8* %13989, align 1
  %13990 = and i64 %13961, 1095216660480
  %13991 = icmp eq i64 %13990, 1095216660480
  %13992 = select i1 %13991, i64 2, i64 1
  %13993 = getelementptr inbounds i8, i8* %13986, i64 %13992
  %13994 = lshr i64 %13961, 24
  %13995 = trunc i64 %13994 to i8
  store i8 %13995, i8* %13993, align 1
  %13996 = getelementptr inbounds i8, i8* %13993, i64 1
  store i8 0, i8* %13996, align 1
  %13997 = and i64 %13961, 4278190080
  %13998 = icmp eq i64 %13997, 4278190080
  %13999 = select i1 %13998, i64 2, i64 1
  %14000 = getelementptr inbounds i8, i8* %13993, i64 %13999
  %14001 = lshr i64 %13961, 16
  %14002 = trunc i64 %14001 to i8
  store i8 %14002, i8* %14000, align 1
  %14003 = getelementptr inbounds i8, i8* %14000, i64 1
  store i8 0, i8* %14003, align 1
  %14004 = and i64 %13961, 16711680
  %14005 = icmp eq i64 %14004, 16711680
  %14006 = select i1 %14005, i64 2, i64 1
  %14007 = getelementptr inbounds i8, i8* %14000, i64 %14006
  %14008 = lshr i64 %13961, 8
  %14009 = trunc i64 %14008 to i8
  store i8 %14009, i8* %14007, align 1
  %14010 = getelementptr inbounds i8, i8* %14007, i64 1
  store i8 0, i8* %14010, align 1
  %14011 = and i64 %13961, 65280
  %14012 = icmp eq i64 %14011, 65280
  %14013 = select i1 %14012, i64 2, i64 1
  %14014 = getelementptr inbounds i8, i8* %14007, i64 %14013
  %14015 = trunc i64 %13961 to i8
  store i8 %14015, i8* %14014, align 1
  %14016 = getelementptr inbounds i8, i8* %14014, i64 1
  store i8 0, i8* %14016, align 1
  %14017 = and i64 %13961, 255
  %14018 = icmp eq i64 %14017, 255
  %14019 = select i1 %14018, i64 2, i64 1
  %14020 = getelementptr inbounds i8, i8* %14014, i64 %14019
  br label %14043

14021:                                            ; preds = %13955
  %14022 = lshr i64 %13961, 48
  %14023 = trunc i64 %14022 to i8
  %14024 = getelementptr inbounds i8, i8* %13936, i64 1
  store i8 %14023, i8* %14024, align 1
  %14025 = lshr i64 %13961, 40
  %14026 = trunc i64 %14025 to i8
  %14027 = getelementptr inbounds i8, i8* %13936, i64 2
  store i8 %14026, i8* %14027, align 1
  %14028 = lshr i64 %13961, 32
  %14029 = trunc i64 %14028 to i8
  %14030 = getelementptr inbounds i8, i8* %13936, i64 3
  store i8 %14029, i8* %14030, align 1
  %14031 = lshr i64 %13961, 24
  %14032 = trunc i64 %14031 to i8
  %14033 = getelementptr inbounds i8, i8* %13936, i64 4
  store i8 %14032, i8* %14033, align 1
  %14034 = lshr i64 %13961, 16
  %14035 = trunc i64 %14034 to i8
  %14036 = getelementptr inbounds i8, i8* %13936, i64 5
  store i8 %14035, i8* %14036, align 1
  %14037 = lshr i64 %13961, 8
  %14038 = trunc i64 %14037 to i8
  %14039 = getelementptr inbounds i8, i8* %13936, i64 6
  store i8 %14038, i8* %14039, align 1
  %14040 = trunc i64 %13961 to i8
  %14041 = getelementptr inbounds i8, i8* %13936, i64 7
  store i8 %14040, i8* %14041, align 1
  %14042 = getelementptr inbounds i8, i8* %13936, i64 8
  br label %14043

14043:                                            ; preds = %14021, %13968
  %14044 = phi i8* [ %14020, %13968 ], [ %14042, %14021 ]
  %14045 = add nsw i32 %13953, 64
  %14046 = sext i32 %13948 to i64
  br label %14052

14047:                                            ; preds = %13933
  %14048 = zext i32 %13952 to i64
  %14049 = shl i64 %13935, %14048
  %14050 = sext i32 %13948 to i64
  %14051 = or i64 %14049, %14050
  br label %14052

14052:                                            ; preds = %14043, %14047, %13802
  %14053 = phi i32 [ %13794, %13802 ], [ %14045, %14043 ], [ %13953, %14047 ]
  %14054 = phi i64 [ %13795, %13802 ], [ %14046, %14043 ], [ %14051, %14047 ]
  %14055 = phi i8* [ %13796, %13802 ], [ %14044, %14043 ], [ %13936, %14047 ]
  %14056 = phi i32 [ %13803, %13802 ], [ 0, %14043 ], [ 0, %14047 ]
  %14057 = getelementptr inbounds i16, i16* %1, i64 63
  %14058 = load i16, i16* %14057, align 2
  %14059 = sext i16 %14058 to i32
  %14060 = icmp eq i16 %14058, 0
  br i1 %14060, label %14309, label %14061

14061:                                            ; preds = %14052
  %14062 = ashr i32 %14059, 31
  %14063 = add nsw i32 %14062, %14059
  %14064 = xor i32 %14063, %14062
  %14065 = sext i32 %14064 to i64
  %14066 = getelementptr inbounds [65536 x i8], [65536 x i8]* @jpeg_nbits_table, i64 0, i64 %14065
  %14067 = load i8, i8* %14066, align 1
  %14068 = zext i8 %14067 to i32
  %14069 = icmp sgt i32 %14056, 255
  br i1 %14069, label %14070, label %14190

14070:                                            ; preds = %14061
  %14071 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 240
  %14072 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 240
  br label %14073

14073:                                            ; preds = %14070, %14183
  %14074 = phi i32 [ %14056, %14070 ], [ %14078, %14183 ]
  %14075 = phi i8* [ %14055, %14070 ], [ %14186, %14183 ]
  %14076 = phi i64 [ %14054, %14070 ], [ %14185, %14183 ]
  %14077 = phi i32 [ %14053, %14070 ], [ %14184, %14183 ]
  %14078 = add nsw i32 %14074, -256
  %14079 = load i8, i8* %14071, align 4
  %14080 = sext i8 %14079 to i32
  %14081 = sub nsw i32 %14077, %14080
  %14082 = icmp slt i32 %14081, 0
  br i1 %14082, label %14083, label %14177

14083:                                            ; preds = %14073
  %14084 = zext i32 %14077 to i64
  %14085 = shl i64 %14076, %14084
  %14086 = load i32, i32* %14072, align 4
  %14087 = sub nsw i32 0, %14081
  %14088 = lshr i32 %14086, %14087
  %14089 = zext i32 %14088 to i64
  %14090 = or i64 %14085, %14089
  %14091 = and i64 %14090, -9187201950435737472
  %14092 = sub i64 -72340172838076674, %14090
  %14093 = and i64 %14091, %14092
  %14094 = icmp eq i64 %14093, 0
  %14095 = lshr i64 %14085, 56
  %14096 = trunc i64 %14095 to i8
  store i8 %14096, i8* %14075, align 1
  br i1 %14094, label %14150, label %14097

14097:                                            ; preds = %14083
  %14098 = getelementptr inbounds i8, i8* %14075, i64 1
  store i8 0, i8* %14098, align 1
  %14099 = icmp eq i64 %14095, 255
  %14100 = select i1 %14099, i64 2, i64 1
  %14101 = getelementptr inbounds i8, i8* %14075, i64 %14100
  %14102 = lshr i64 %14085, 48
  %14103 = trunc i64 %14102 to i8
  store i8 %14103, i8* %14101, align 1
  %14104 = getelementptr inbounds i8, i8* %14101, i64 1
  store i8 0, i8* %14104, align 1
  %14105 = and i64 %14085, 71776119061217280
  %14106 = icmp eq i64 %14105, 71776119061217280
  %14107 = select i1 %14106, i64 2, i64 1
  %14108 = getelementptr inbounds i8, i8* %14101, i64 %14107
  %14109 = lshr i64 %14085, 40
  %14110 = trunc i64 %14109 to i8
  store i8 %14110, i8* %14108, align 1
  %14111 = getelementptr inbounds i8, i8* %14108, i64 1
  store i8 0, i8* %14111, align 1
  %14112 = and i64 %14085, 280375465082880
  %14113 = icmp eq i64 %14112, 280375465082880
  %14114 = select i1 %14113, i64 2, i64 1
  %14115 = getelementptr inbounds i8, i8* %14108, i64 %14114
  %14116 = lshr i64 %14085, 32
  %14117 = trunc i64 %14116 to i8
  store i8 %14117, i8* %14115, align 1
  %14118 = getelementptr inbounds i8, i8* %14115, i64 1
  store i8 0, i8* %14118, align 1
  %14119 = and i64 %14085, 1095216660480
  %14120 = icmp eq i64 %14119, 1095216660480
  %14121 = select i1 %14120, i64 2, i64 1
  %14122 = getelementptr inbounds i8, i8* %14115, i64 %14121
  %14123 = lshr i64 %14090, 24
  %14124 = trunc i64 %14123 to i8
  store i8 %14124, i8* %14122, align 1
  %14125 = getelementptr inbounds i8, i8* %14122, i64 1
  store i8 0, i8* %14125, align 1
  %14126 = and i64 %14090, 4278190080
  %14127 = icmp eq i64 %14126, 4278190080
  %14128 = select i1 %14127, i64 2, i64 1
  %14129 = getelementptr inbounds i8, i8* %14122, i64 %14128
  %14130 = lshr i64 %14090, 16
  %14131 = trunc i64 %14130 to i8
  store i8 %14131, i8* %14129, align 1
  %14132 = getelementptr inbounds i8, i8* %14129, i64 1
  store i8 0, i8* %14132, align 1
  %14133 = and i64 %14090, 16711680
  %14134 = icmp eq i64 %14133, 16711680
  %14135 = select i1 %14134, i64 2, i64 1
  %14136 = getelementptr inbounds i8, i8* %14129, i64 %14135
  %14137 = lshr i64 %14090, 8
  %14138 = trunc i64 %14137 to i8
  store i8 %14138, i8* %14136, align 1
  %14139 = getelementptr inbounds i8, i8* %14136, i64 1
  store i8 0, i8* %14139, align 1
  %14140 = and i64 %14090, 65280
  %14141 = icmp eq i64 %14140, 65280
  %14142 = select i1 %14141, i64 2, i64 1
  %14143 = getelementptr inbounds i8, i8* %14136, i64 %14142
  %14144 = trunc i64 %14090 to i8
  store i8 %14144, i8* %14143, align 1
  %14145 = getelementptr inbounds i8, i8* %14143, i64 1
  store i8 0, i8* %14145, align 1
  %14146 = and i64 %14090, 255
  %14147 = icmp eq i64 %14146, 255
  %14148 = select i1 %14147, i64 2, i64 1
  %14149 = getelementptr inbounds i8, i8* %14143, i64 %14148
  br label %14172

14150:                                            ; preds = %14083
  %14151 = lshr i64 %14085, 48
  %14152 = trunc i64 %14151 to i8
  %14153 = getelementptr inbounds i8, i8* %14075, i64 1
  store i8 %14152, i8* %14153, align 1
  %14154 = lshr i64 %14085, 40
  %14155 = trunc i64 %14154 to i8
  %14156 = getelementptr inbounds i8, i8* %14075, i64 2
  store i8 %14155, i8* %14156, align 1
  %14157 = lshr i64 %14085, 32
  %14158 = trunc i64 %14157 to i8
  %14159 = getelementptr inbounds i8, i8* %14075, i64 3
  store i8 %14158, i8* %14159, align 1
  %14160 = lshr i64 %14090, 24
  %14161 = trunc i64 %14160 to i8
  %14162 = getelementptr inbounds i8, i8* %14075, i64 4
  store i8 %14161, i8* %14162, align 1
  %14163 = lshr i64 %14090, 16
  %14164 = trunc i64 %14163 to i8
  %14165 = getelementptr inbounds i8, i8* %14075, i64 5
  store i8 %14164, i8* %14165, align 1
  %14166 = lshr i64 %14090, 8
  %14167 = trunc i64 %14166 to i8
  %14168 = getelementptr inbounds i8, i8* %14075, i64 6
  store i8 %14167, i8* %14168, align 1
  %14169 = trunc i64 %14090 to i8
  %14170 = getelementptr inbounds i8, i8* %14075, i64 7
  store i8 %14169, i8* %14170, align 1
  %14171 = getelementptr inbounds i8, i8* %14075, i64 8
  br label %14172

14172:                                            ; preds = %14150, %14097
  %14173 = phi i8* [ %14149, %14097 ], [ %14171, %14150 ]
  %14174 = add nsw i32 %14081, 64
  %14175 = load i32, i32* %14072, align 4
  %14176 = zext i32 %14175 to i64
  br label %14183

14177:                                            ; preds = %14073
  %14178 = zext i32 %14080 to i64
  %14179 = shl i64 %14076, %14178
  %14180 = load i32, i32* %14072, align 4
  %14181 = zext i32 %14180 to i64
  %14182 = or i64 %14179, %14181
  br label %14183

14183:                                            ; preds = %14177, %14172
  %14184 = phi i32 [ %14174, %14172 ], [ %14081, %14177 ]
  %14185 = phi i64 [ %14176, %14172 ], [ %14182, %14177 ]
  %14186 = phi i8* [ %14173, %14172 ], [ %14075, %14177 ]
  %14187 = icmp sgt i32 %14078, 255
  br i1 %14187, label %14073, label %14188

14188:                                            ; preds = %14183
  %14189 = and i32 %14056, 255
  br label %14190

14190:                                            ; preds = %14188, %14061
  %14191 = phi i32 [ %14053, %14061 ], [ %14184, %14188 ]
  %14192 = phi i64 [ %14054, %14061 ], [ %14185, %14188 ]
  %14193 = phi i8* [ %14055, %14061 ], [ %14186, %14188 ]
  %14194 = phi i32 [ %14056, %14061 ], [ %14189, %14188 ]
  %14195 = add nsw i32 %14194, %14068
  %14196 = zext i8 %14067 to i64
  %14197 = shl nsw i64 -1, %14196
  %14198 = trunc i64 %14197 to i32
  %14199 = xor i32 %14198, -1
  %14200 = and i32 %14063, %14199
  %14201 = sext i32 %14195 to i64
  %14202 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 %14201
  %14203 = load i32, i32* %14202, align 4
  %14204 = shl i32 %14203, %14068
  %14205 = or i32 %14204, %14200
  %14206 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 %14201
  %14207 = load i8, i8* %14206, align 1
  %14208 = sext i8 %14207 to i32
  %14209 = add nsw i32 %14208, %14068
  %14210 = sub nsw i32 %14191, %14209
  %14211 = icmp slt i32 %14210, 0
  br i1 %14211, label %14212, label %14304

14212:                                            ; preds = %14190
  %14213 = zext i32 %14191 to i64
  %14214 = shl i64 %14192, %14213
  %14215 = sub nsw i32 0, %14210
  %14216 = ashr i32 %14205, %14215
  %14217 = sext i32 %14216 to i64
  %14218 = or i64 %14214, %14217
  %14219 = and i64 %14218, -9187201950435737472
  %14220 = sub i64 -72340172838076674, %14218
  %14221 = and i64 %14219, %14220
  %14222 = icmp eq i64 %14221, 0
  %14223 = lshr i64 %14218, 56
  %14224 = trunc i64 %14223 to i8
  store i8 %14224, i8* %14193, align 1
  br i1 %14222, label %14278, label %14225

14225:                                            ; preds = %14212
  %14226 = getelementptr inbounds i8, i8* %14193, i64 1
  store i8 0, i8* %14226, align 1
  %14227 = icmp eq i64 %14223, 255
  %14228 = select i1 %14227, i64 2, i64 1
  %14229 = getelementptr inbounds i8, i8* %14193, i64 %14228
  %14230 = lshr i64 %14218, 48
  %14231 = trunc i64 %14230 to i8
  store i8 %14231, i8* %14229, align 1
  %14232 = getelementptr inbounds i8, i8* %14229, i64 1
  store i8 0, i8* %14232, align 1
  %14233 = and i64 %14218, 71776119061217280
  %14234 = icmp eq i64 %14233, 71776119061217280
  %14235 = select i1 %14234, i64 2, i64 1
  %14236 = getelementptr inbounds i8, i8* %14229, i64 %14235
  %14237 = lshr i64 %14218, 40
  %14238 = trunc i64 %14237 to i8
  store i8 %14238, i8* %14236, align 1
  %14239 = getelementptr inbounds i8, i8* %14236, i64 1
  store i8 0, i8* %14239, align 1
  %14240 = and i64 %14218, 280375465082880
  %14241 = icmp eq i64 %14240, 280375465082880
  %14242 = select i1 %14241, i64 2, i64 1
  %14243 = getelementptr inbounds i8, i8* %14236, i64 %14242
  %14244 = lshr i64 %14218, 32
  %14245 = trunc i64 %14244 to i8
  store i8 %14245, i8* %14243, align 1
  %14246 = getelementptr inbounds i8, i8* %14243, i64 1
  store i8 0, i8* %14246, align 1
  %14247 = and i64 %14218, 1095216660480
  %14248 = icmp eq i64 %14247, 1095216660480
  %14249 = select i1 %14248, i64 2, i64 1
  %14250 = getelementptr inbounds i8, i8* %14243, i64 %14249
  %14251 = lshr i64 %14218, 24
  %14252 = trunc i64 %14251 to i8
  store i8 %14252, i8* %14250, align 1
  %14253 = getelementptr inbounds i8, i8* %14250, i64 1
  store i8 0, i8* %14253, align 1
  %14254 = and i64 %14218, 4278190080
  %14255 = icmp eq i64 %14254, 4278190080
  %14256 = select i1 %14255, i64 2, i64 1
  %14257 = getelementptr inbounds i8, i8* %14250, i64 %14256
  %14258 = lshr i64 %14218, 16
  %14259 = trunc i64 %14258 to i8
  store i8 %14259, i8* %14257, align 1
  %14260 = getelementptr inbounds i8, i8* %14257, i64 1
  store i8 0, i8* %14260, align 1
  %14261 = and i64 %14218, 16711680
  %14262 = icmp eq i64 %14261, 16711680
  %14263 = select i1 %14262, i64 2, i64 1
  %14264 = getelementptr inbounds i8, i8* %14257, i64 %14263
  %14265 = lshr i64 %14218, 8
  %14266 = trunc i64 %14265 to i8
  store i8 %14266, i8* %14264, align 1
  %14267 = getelementptr inbounds i8, i8* %14264, i64 1
  store i8 0, i8* %14267, align 1
  %14268 = and i64 %14218, 65280
  %14269 = icmp eq i64 %14268, 65280
  %14270 = select i1 %14269, i64 2, i64 1
  %14271 = getelementptr inbounds i8, i8* %14264, i64 %14270
  %14272 = trunc i64 %14218 to i8
  store i8 %14272, i8* %14271, align 1
  %14273 = getelementptr inbounds i8, i8* %14271, i64 1
  store i8 0, i8* %14273, align 1
  %14274 = and i64 %14218, 255
  %14275 = icmp eq i64 %14274, 255
  %14276 = select i1 %14275, i64 2, i64 1
  %14277 = getelementptr inbounds i8, i8* %14271, i64 %14276
  br label %14300

14278:                                            ; preds = %14212
  %14279 = lshr i64 %14218, 48
  %14280 = trunc i64 %14279 to i8
  %14281 = getelementptr inbounds i8, i8* %14193, i64 1
  store i8 %14280, i8* %14281, align 1
  %14282 = lshr i64 %14218, 40
  %14283 = trunc i64 %14282 to i8
  %14284 = getelementptr inbounds i8, i8* %14193, i64 2
  store i8 %14283, i8* %14284, align 1
  %14285 = lshr i64 %14218, 32
  %14286 = trunc i64 %14285 to i8
  %14287 = getelementptr inbounds i8, i8* %14193, i64 3
  store i8 %14286, i8* %14287, align 1
  %14288 = lshr i64 %14218, 24
  %14289 = trunc i64 %14288 to i8
  %14290 = getelementptr inbounds i8, i8* %14193, i64 4
  store i8 %14289, i8* %14290, align 1
  %14291 = lshr i64 %14218, 16
  %14292 = trunc i64 %14291 to i8
  %14293 = getelementptr inbounds i8, i8* %14193, i64 5
  store i8 %14292, i8* %14293, align 1
  %14294 = lshr i64 %14218, 8
  %14295 = trunc i64 %14294 to i8
  %14296 = getelementptr inbounds i8, i8* %14193, i64 6
  store i8 %14295, i8* %14296, align 1
  %14297 = trunc i64 %14218 to i8
  %14298 = getelementptr inbounds i8, i8* %14193, i64 7
  store i8 %14297, i8* %14298, align 1
  %14299 = getelementptr inbounds i8, i8* %14193, i64 8
  br label %14300

14300:                                            ; preds = %14278, %14225
  %14301 = phi i8* [ %14277, %14225 ], [ %14299, %14278 ]
  %14302 = add nsw i32 %14210, 64
  %14303 = sext i32 %14205 to i64
  br label %14417

14304:                                            ; preds = %14190
  %14305 = zext i32 %14209 to i64
  %14306 = shl i64 %14192, %14305
  %14307 = sext i32 %14205 to i64
  %14308 = or i64 %14306, %14307
  br label %14417

14309:                                            ; preds = %14052
  %14310 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 1, i64 0
  %14311 = load i8, i8* %14310, align 4
  %14312 = sext i8 %14311 to i32
  %14313 = sub nsw i32 %14053, %14312
  %14314 = icmp slt i32 %14313, 0
  br i1 %14314, label %14315, label %14410

14315:                                            ; preds = %14309
  %14316 = zext i32 %14053 to i64
  %14317 = shl i64 %14054, %14316
  %14318 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 0
  %14319 = load i32, i32* %14318, align 4
  %14320 = sub nsw i32 0, %14313
  %14321 = lshr i32 %14319, %14320
  %14322 = zext i32 %14321 to i64
  %14323 = or i64 %14317, %14322
  %14324 = and i64 %14323, -9187201950435737472
  %14325 = sub i64 -72340172838076674, %14323
  %14326 = and i64 %14324, %14325
  %14327 = icmp eq i64 %14326, 0
  %14328 = lshr i64 %14317, 56
  %14329 = trunc i64 %14328 to i8
  store i8 %14329, i8* %14055, align 1
  br i1 %14327, label %14383, label %14330

14330:                                            ; preds = %14315
  %14331 = getelementptr inbounds i8, i8* %14055, i64 1
  store i8 0, i8* %14331, align 1
  %14332 = icmp eq i64 %14328, 255
  %14333 = select i1 %14332, i64 2, i64 1
  %14334 = getelementptr inbounds i8, i8* %14055, i64 %14333
  %14335 = lshr i64 %14317, 48
  %14336 = trunc i64 %14335 to i8
  store i8 %14336, i8* %14334, align 1
  %14337 = getelementptr inbounds i8, i8* %14334, i64 1
  store i8 0, i8* %14337, align 1
  %14338 = and i64 %14317, 71776119061217280
  %14339 = icmp eq i64 %14338, 71776119061217280
  %14340 = select i1 %14339, i64 2, i64 1
  %14341 = getelementptr inbounds i8, i8* %14334, i64 %14340
  %14342 = lshr i64 %14317, 40
  %14343 = trunc i64 %14342 to i8
  store i8 %14343, i8* %14341, align 1
  %14344 = getelementptr inbounds i8, i8* %14341, i64 1
  store i8 0, i8* %14344, align 1
  %14345 = and i64 %14317, 280375465082880
  %14346 = icmp eq i64 %14345, 280375465082880
  %14347 = select i1 %14346, i64 2, i64 1
  %14348 = getelementptr inbounds i8, i8* %14341, i64 %14347
  %14349 = lshr i64 %14317, 32
  %14350 = trunc i64 %14349 to i8
  store i8 %14350, i8* %14348, align 1
  %14351 = getelementptr inbounds i8, i8* %14348, i64 1
  store i8 0, i8* %14351, align 1
  %14352 = and i64 %14317, 1095216660480
  %14353 = icmp eq i64 %14352, 1095216660480
  %14354 = select i1 %14353, i64 2, i64 1
  %14355 = getelementptr inbounds i8, i8* %14348, i64 %14354
  %14356 = lshr i64 %14323, 24
  %14357 = trunc i64 %14356 to i8
  store i8 %14357, i8* %14355, align 1
  %14358 = getelementptr inbounds i8, i8* %14355, i64 1
  store i8 0, i8* %14358, align 1
  %14359 = and i64 %14323, 4278190080
  %14360 = icmp eq i64 %14359, 4278190080
  %14361 = select i1 %14360, i64 2, i64 1
  %14362 = getelementptr inbounds i8, i8* %14355, i64 %14361
  %14363 = lshr i64 %14323, 16
  %14364 = trunc i64 %14363 to i8
  store i8 %14364, i8* %14362, align 1
  %14365 = getelementptr inbounds i8, i8* %14362, i64 1
  store i8 0, i8* %14365, align 1
  %14366 = and i64 %14323, 16711680
  %14367 = icmp eq i64 %14366, 16711680
  %14368 = select i1 %14367, i64 2, i64 1
  %14369 = getelementptr inbounds i8, i8* %14362, i64 %14368
  %14370 = lshr i64 %14323, 8
  %14371 = trunc i64 %14370 to i8
  store i8 %14371, i8* %14369, align 1
  %14372 = getelementptr inbounds i8, i8* %14369, i64 1
  store i8 0, i8* %14372, align 1
  %14373 = and i64 %14323, 65280
  %14374 = icmp eq i64 %14373, 65280
  %14375 = select i1 %14374, i64 2, i64 1
  %14376 = getelementptr inbounds i8, i8* %14369, i64 %14375
  %14377 = trunc i64 %14323 to i8
  store i8 %14377, i8* %14376, align 1
  %14378 = getelementptr inbounds i8, i8* %14376, i64 1
  store i8 0, i8* %14378, align 1
  %14379 = and i64 %14323, 255
  %14380 = icmp eq i64 %14379, 255
  %14381 = select i1 %14380, i64 2, i64 1
  %14382 = getelementptr inbounds i8, i8* %14376, i64 %14381
  br label %14405

14383:                                            ; preds = %14315
  %14384 = lshr i64 %14317, 48
  %14385 = trunc i64 %14384 to i8
  %14386 = getelementptr inbounds i8, i8* %14055, i64 1
  store i8 %14385, i8* %14386, align 1
  %14387 = lshr i64 %14317, 40
  %14388 = trunc i64 %14387 to i8
  %14389 = getelementptr inbounds i8, i8* %14055, i64 2
  store i8 %14388, i8* %14389, align 1
  %14390 = lshr i64 %14317, 32
  %14391 = trunc i64 %14390 to i8
  %14392 = getelementptr inbounds i8, i8* %14055, i64 3
  store i8 %14391, i8* %14392, align 1
  %14393 = lshr i64 %14323, 24
  %14394 = trunc i64 %14393 to i8
  %14395 = getelementptr inbounds i8, i8* %14055, i64 4
  store i8 %14394, i8* %14395, align 1
  %14396 = lshr i64 %14323, 16
  %14397 = trunc i64 %14396 to i8
  %14398 = getelementptr inbounds i8, i8* %14055, i64 5
  store i8 %14397, i8* %14398, align 1
  %14399 = lshr i64 %14323, 8
  %14400 = trunc i64 %14399 to i8
  %14401 = getelementptr inbounds i8, i8* %14055, i64 6
  store i8 %14400, i8* %14401, align 1
  %14402 = trunc i64 %14323 to i8
  %14403 = getelementptr inbounds i8, i8* %14055, i64 7
  store i8 %14402, i8* %14403, align 1
  %14404 = getelementptr inbounds i8, i8* %14055, i64 8
  br label %14405

14405:                                            ; preds = %14383, %14330
  %14406 = phi i8* [ %14382, %14330 ], [ %14404, %14383 ]
  %14407 = add nsw i32 %14313, 64
  %14408 = load i32, i32* %14318, align 4
  %14409 = zext i32 %14408 to i64
  br label %14417

14410:                                            ; preds = %14309
  %14411 = zext i32 %14312 to i64
  %14412 = shl i64 %14054, %14411
  %14413 = getelementptr inbounds %struct.c_derived_tbl, %struct.c_derived_tbl* %4, i64 0, i32 0, i64 0
  %14414 = load i32, i32* %14413, align 4
  %14415 = zext i32 %14414 to i64
  %14416 = or i64 %14412, %14415
  br label %14417

14417:                                            ; preds = %14300, %14304, %14405, %14410
  %14418 = phi i32 [ %14407, %14405 ], [ %14313, %14410 ], [ %14210, %14304 ], [ %14302, %14300 ]
  %14419 = phi i64 [ %14409, %14405 ], [ %14416, %14410 ], [ %14308, %14304 ], [ %14303, %14300 ]
  %14420 = phi i8* [ %14406, %14405 ], [ %14055, %14410 ], [ %14193, %14304 ], [ %14301, %14300 ]
  store i64 %14419, i64* %10, align 8
  store i32 %14418, i32* %8, align 8
  %14421 = icmp eq i32 %20, 0
  br i1 %14421, label %14460, label %14422

14422:                                            ; preds = %14417
  %14423 = ptrtoint i8* %14420 to i64
  %14424 = ptrtoint [512 x i8]* %6 to i64
  %14425 = sub i64 %14423, %14424
  %14426 = getelementptr inbounds %struct.working_state, %struct.working_state* %0, i64 0, i32 3
  %14427 = icmp eq i64 %14425, 0
  br i1 %14427, label %14468, label %14428

14428:                                            ; preds = %14422
  %14429 = getelementptr inbounds %struct.working_state, %struct.working_state* %0, i64 0, i32 0
  %14430 = bitcast %struct.working_state* %0 to i64*
  br label %14431

14431:                                            ; preds = %14428, %14457
  %14432 = phi i64 [ %14425, %14428 ], [ %14458, %14457 ]
  %14433 = phi i8* [ %7, %14428 ], [ %14440, %14457 ]
  %14434 = load i64, i64* %12, align 8
  %14435 = icmp ult i64 %14432, %14434
  %14436 = select i1 %14435, i64 %14432, i64 %14434
  %14437 = load i8*, i8** %14429, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14437, i8* align 1 %14433, i64 %14436, i1 false)
  %14438 = load i8*, i8** %14429, align 8
  %14439 = getelementptr inbounds i8, i8* %14438, i64 %14436
  store i8* %14439, i8** %14429, align 8
  %14440 = getelementptr inbounds i8, i8* %14433, i64 %14436
  %14441 = load i64, i64* %12, align 8
  %14442 = sub i64 %14441, %14436
  store i64 %14442, i64* %12, align 8
  %14443 = icmp eq i64 %14442, 0
  br i1 %14443, label %14444, label %14457

14444:                                            ; preds = %14431
  %14445 = load %struct.jpeg_compress_struct*, %struct.jpeg_compress_struct** %14426, align 8
  %14446 = getelementptr inbounds %struct.jpeg_compress_struct, %struct.jpeg_compress_struct* %14445, i64 0, i32 6
  %14447 = load %struct.jpeg_destination_mgr*, %struct.jpeg_destination_mgr** %14446, align 8
  %14448 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %14447, i64 0, i32 3
  %14449 = load i32 (%struct.jpeg_compress_struct*)*, i32 (%struct.jpeg_compress_struct*)** %14448, align 8
  %14450 = call i32 %14449(%struct.jpeg_compress_struct* %14445) #4
  %14451 = icmp eq i32 %14450, 0
  br i1 %14451, label %14468, label %14452

14452:                                            ; preds = %14444
  %14453 = bitcast %struct.jpeg_destination_mgr* %14447 to i64*
  %14454 = load i64, i64* %14453, align 8
  store i64 %14454, i64* %14430, align 8
  %14455 = getelementptr inbounds %struct.jpeg_destination_mgr, %struct.jpeg_destination_mgr* %14447, i64 0, i32 1
  %14456 = load i64, i64* %14455, align 8
  store i64 %14456, i64* %12, align 8
  br label %14457

14457:                                            ; preds = %14452, %14431
  %14458 = sub i64 %14432, %14436
  %14459 = icmp eq i64 %14458, 0
  br i1 %14459, label %14468, label %14431

14460:                                            ; preds = %14417
  %14461 = getelementptr inbounds %struct.working_state, %struct.working_state* %0, i64 0, i32 0
  %14462 = bitcast %struct.working_state* %0 to i64*
  %14463 = load i64, i64* %14462, align 8
  %14464 = ptrtoint i8* %14420 to i64
  %14465 = load i64, i64* %12, align 8
  %14466 = sub i64 %14463, %14464
  %14467 = add i64 %14466, %14465
  store i64 %14467, i64* %12, align 8
  store i8* %14420, i8** %14461, align 8
  br label %14468

14468:                                            ; preds = %14457, %14444, %14422, %14460
  %14469 = phi i32 [ 1, %14460 ], [ 1, %14422 ], [ 1, %14457 ], [ 0, %14444 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %7) #4
  ret i32 %14469
}

declare i8* @jsimd_huff_encode_one_block(i8*, i8*, i16*, i32, %struct.c_derived_tbl*, %struct.c_derived_tbl*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = !{i32 1, i32 33}
!9 = !{i32 2, i32 33}
