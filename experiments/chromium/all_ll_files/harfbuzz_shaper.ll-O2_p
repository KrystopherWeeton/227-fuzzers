; ModuleID = '../../third_party/blink/renderer/platform/fonts/shaping/harfbuzz_shaper.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/shaping/harfbuzz_shaper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_feature_t = type { i32, i32, i32, i32 }
%"class.blink::HarfBuzzShaper" = type { %"class.WTF::String", %"class.base::RepeatingCallback" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"struct.blink::RangeData" = type { %struct.hb_buffer_t*, %"class.blink::Font"*, i8, i32, i32, %"class.blink::FontFeatures", %"class.WTF::Deque.244" }
%struct.hb_buffer_t = type opaque
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.27 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.9, %class.scoped_refptr.19, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.26 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.254", [4 x i8] }>
%"class.WTF::RefCounted.254" = type { %"class.base::RefCounted.255" }
%"class.base::RefCounted.255" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.9 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.10", %"class.WTF::RefCounted.17", [4 x i8] }>
%"class.blink::FontSettings.10" = type { %"class.WTF::Vector.11" }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.blink::FontTagValuePair.14"*, i32, i32 }
%"class.blink::FontTagValuePair.14" = type { i32, float }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.19 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.20", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.23, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.20" = type { %"class.base::RefCounted.21" }
%"class.base::RefCounted.21" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.23 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.24", [4 x i8] }>
%"class.WTF::RefCounted.24" = type { %"class.base::RefCounted.25" }
%"class.base::RefCounted.25" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.26 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.27 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.28", %"class.WTF::Vector.30", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.28" = type { %"class.base::RefCounted.29" }
%"class.base::RefCounted.29" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32", [8 x i8] }
%"class.WTF::VectorBufferBase.32" = type { %class.scoped_refptr.33*, i32, i32 }
%class.scoped_refptr.33 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.34", [4 x i8] }>
%"class.WTF::RefCounted.34" = type { %"class.base::RefCounted.35" }
%"class.base::RefCounted.35" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.54", i32, [4 x i8], %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.192", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.208", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.233", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.172", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.90" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl.93" }
%"struct.std::__1::__cxx_atomic_impl.93" = type { %"struct.std::__1::__cxx_atomic_base_impl.94" }
%"struct.std::__1::__cxx_atomic_base_impl.94" = type { i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.90" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.90" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::Worklist.115"* }
%"class.blink::Worklist.115" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.90" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::Worklist.122"* }
%"class.blink::Worklist.122" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.90" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::Worklist.129"* }
%"class.blink::Worklist.129" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.90" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::Worklist.136"* }
%"class.blink::Worklist.136" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.90" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::Worklist.143"* }
%"class.blink::Worklist.143" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.90" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.150", %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.166", [4 x i8] }>
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152", %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { i64 }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { float }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.175", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.184" }
%"class.WTF::Vector.184" = type { %"class.WTF::VectorBuffer.185" }
%"class.WTF::VectorBuffer.185" = type { %"class.WTF::VectorBufferBase.186" }
%"class.WTF::VectorBufferBase.186" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.200" }
%"class.WTF::VectorBuffer.200" = type { %"class.WTF::VectorBufferBase.201" }
%"class.WTF::VectorBufferBase.201" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.214" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.101"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.108"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.115"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.122"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.129"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.249" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.232 }
%class.scoped_refptr.232 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.233" = type { %"struct.std::__1::__atomic_base.234" }
%"struct.std::__1::__atomic_base.234" = type { %"struct.std::__1::__cxx_atomic_impl.235" }
%"struct.std::__1::__cxx_atomic_impl.235" = type { %"struct.std::__1::__cxx_atomic_base_impl.236" }
%"struct.std::__1::__cxx_atomic_base_impl.236" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.238", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.238" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.39" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i8 }
%"class.blink::FontFeatures" = type { %"class.WTF::Vector.239" }
%"class.WTF::Vector.239" = type { %"class.WTF::VectorBuffer.240" }
%"class.WTF::VectorBuffer.240" = type { %"class.WTF::VectorBufferBase.241", [96 x i8] }
%"class.WTF::VectorBufferBase.241" = type { %struct.hb_feature_t*, i32, i32 }
%"class.WTF::Deque.244" = type { %"class.WTF::Deque<blink::ReshapeQueueItem, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::ReshapeQueueItem, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.247" }
%"class.WTF::VectorBuffer.247" = type { %"class.WTF::VectorBufferBase.248" }
%"class.WTF::VectorBufferBase.248" = type { %"struct.blink::ReshapeQueueItem"*, i32, i32 }
%"struct.blink::ReshapeQueueItem" = type { i32, i32, i32 }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.51, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.34" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.38 }
%union.anon.38 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.44, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.2" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.2" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.39" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.44 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type { %"class.WTF::RefCounted.45", %"class.blink::FontPlatformData"*, i64, %struct.hb_font_t*, %"struct.blink::HarfBuzzFontData"* }
%"class.WTF::RefCounted.45" = type { %"class.base::RefCounted.46" }
%"class.base::RefCounted.46" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_font_t = type opaque
%"struct.blink::HarfBuzzFontData" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.49, %class.scoped_refptr.49 }
%class.scoped_refptr.49 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.51 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.52", [4 x i8] }>
%"class.WTF::RefCounted.52" = type { %"class.base::RefCounted.53" }
%"class.base::RefCounted.53" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::BufferSlice" = type { i32, i32, i32, i32 }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.256", float, %"class.blink::FloatRect", %"class.WTF::Vector.258", %class.scoped_refptr.283, %"class.std::__1::unique_ptr.284", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.256" = type { %"class.base::RefCounted.257" }
%"class.base::RefCounted.257" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %class.scoped_refptr.261*, i32, i32 }
%class.scoped_refptr.261 = type { %"struct.blink::ShapeResult::RunInfo"* }
%"struct.blink::ShapeResult::RunInfo" = type <{ %"class.WTF::RefCounted.262", [4 x i8], %"class.blink::ShapeResult::RunInfo::GlyphDataCollection", %class.scoped_refptr.49, %"class.WTF::Vector.276", i32, i32, float, i32, i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.262" = type { %"class.base::RefCounted.263" }
%"class.base::RefCounted.263" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::ShapeResult::RunInfo::GlyphDataCollection" = type { %"class.std::__1::unique_ptr.264", %"class.blink::ShapeResult::RunInfo::GlyphOffsetArray" }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.blink::HarfBuzzRunGlyphData"* }
%"struct.blink::HarfBuzzRunGlyphData" = type { i32, float }
%"class.blink::ShapeResult::RunInfo::GlyphOffsetArray" = type <{ %"class.std::__1::unique_ptr.270", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::ShapeResult::GlyphOffset"* }
%"class.blink::ShapeResult::GlyphOffset" = type { %"class.blink::FloatSize" }
%"class.WTF::Vector.276" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { i32*, i32, i32 }
%class.scoped_refptr.283 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.287", i32, float }
%"class.WTF::Vector.287" = type { %"class.WTF::VectorBuffer.288" }
%"class.WTF::VectorBuffer.288" = type { %"class.WTF::VectorBufferBase.289" }
%"class.WTF::VectorBufferBase.289" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%"class.WTF::Vector.295" = type { %"class.WTF::VectorBuffer.296" }
%"class.WTF::VectorBuffer.296" = type { %"class.WTF::VectorBufferBase.297" }
%"class.WTF::VectorBufferBase.297" = type { i32*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::DequeConstIterator" = type { %"class.WTF::DequeIteratorBase.base", [4 x i8] }
%"class.WTF::DequeIteratorBase.base" = type <{ %"class.WTF::Deque.244"*, i32 }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::UTF16TextIterator" = type <{ i16*, i16*, i32, i32, i32, [4 x i8] }>
%"struct.blink::RunSegmenter::RunSegmenterRange" = type { i32, i32, i32, i32, i32 }
%"class.absl::optional.368" = type { %"class.absl::optional_internal::optional_data.369" }
%"class.absl::optional_internal::optional_data.369" = type { %"class.absl::optional_internal::optional_data_base.370" }
%"class.absl::optional_internal::optional_data_base.370" = type { %"class.absl::optional_internal::optional_data_dtor_base.371" }
%"class.absl::optional_internal::optional_data_dtor_base.371" = type { i8, %union.anon.372 }
%union.anon.372 = type { %"class.WTF::String" }
%"class.blink::SmallCapsIterator" = type <{ %"class.std::__1::unique_ptr.348", i32, i32, i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::UTF16TextIterator"* }
%"struct.blink::(anonymous namespace)::TrackEmoji" = type { i8, i32, i8, i32, i32 }
%"class.blink::OpenTypeCapsSupport" = type { %"class.blink::HarfBuzzFace"*, i32, i32, i32, i32 }
%"class.blink::FontFallbackIterator" = type <{ %"class.blink::FontDescription"*, %class.scoped_refptr.27, i32, i32, i32, [4 x i8], %"class.WTF::HashSet", %"class.WTF::HashSet.302", %class.scoped_refptr.306, %"class.WTF::Vector.317", i32, [4 x i8] }>
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.302" = type { %"class.WTF::HashTable.303" }
%"class.WTF::HashTable.303" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.306 = type { %"class.blink::FontDataForRangeSet"* }
%"class.blink::FontDataForRangeSet" = type { i32 (...)**, %"class.WTF::RefCounted.307", %class.scoped_refptr.49, %class.scoped_refptr.309 }
%"class.WTF::RefCounted.307" = type { %"class.base::RefCounted.308" }
%"class.base::RefCounted.308" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.309 = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.310", %"class.WTF::Vector.312" }
%"class.WTF::RefCounted.310" = type { %"class.base::RefCounted.311" }
%"class.base::RefCounted.311" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.312" = type { %"class.WTF::VectorBuffer.313" }
%"class.WTF::VectorBuffer.313" = type { %"class.WTF::VectorBufferBase.314" }
%"class.WTF::VectorBufferBase.314" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.WTF::Vector.317" = type { %"class.WTF::VectorBuffer.318" }
%"class.WTF::VectorBuffer.318" = type { %"class.WTF::VectorBufferBase.319" }
%"class.WTF::VectorBufferBase.319" = type { %class.scoped_refptr.306*, i32, i32 }
%"class.blink::CaseMappingHarfBuzzBufferFiller" = type { %struct.hb_buffer_t* }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%"class.blink::RunSegmenter" = type <{ i32, i32, %"struct.blink::RunSegmenter::RunSegmenterRange", [4 x i8], %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.357", i32, i32, i32, i32, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::ScriptRunIterator"* }
%"class.blink::ScriptRunIterator" = type { i16*, i32, %"class.WTF::Deque.326", i32, %"class.WTF::Vector.331", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.336", i32, i32, i32, %"class.blink::ScriptData"* }
%"class.WTF::Deque.326" = type { %"class.WTF::Deque<blink::ScriptRunIterator::BracketRec, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::ScriptRunIterator::BracketRec, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.329" }
%"class.WTF::VectorBuffer.329" = type { %"class.WTF::VectorBufferBase.330" }
%"class.WTF::VectorBufferBase.330" = type { %"struct.blink::ScriptRunIterator::BracketRec"*, i32, i32 }
%"struct.blink::ScriptRunIterator::BracketRec" = type { i32, i32 }
%"class.WTF::Vector.331" = type { %"class.WTF::VectorBuffer.332" }
%"class.WTF::VectorBuffer.332" = type { %"class.WTF::VectorBufferBase.333", [128 x i8] }
%"class.WTF::VectorBufferBase.333" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.WTF::Vector.331"* }
%"class.blink::ScriptData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::OrientationIterator"* }
%"class.blink::OrientationIterator" = type <{ %"class.std::__1::unique_ptr.348", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::SymbolsIterator"* }
%"class.blink::SymbolsIterator" = type <{ %"class.blink::UTF16RagelIterator", i32, i32, i8, [7 x i8] }>
%"class.blink::UTF16RagelIterator" = type <{ i16*, i32, i32, i8, [7 x i8] }>
%"class.WTF::Vector.363" = type { %"class.WTF::VectorBuffer.364" }
%"class.WTF::VectorBuffer.364" = type { %"class.WTF::VectorBufferBase.365" }
%"class.WTF::VectorBufferBase.365" = type { %"struct.blink::RunSegmenter::RunSegmenterRange"*, i32, i32 }

$_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv = comdat any

$_ZN5blink20FontFallbackIteratorD2Ev = comdat any

$_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16ReshapeQueueItemEEEmm = comdat any

$_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE6insertIRKS1_EEvjOT_ = comdat any

$_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI12hb_feature_tEEmm = comdat any

$_ZN3WTF12VectorBufferI12hb_feature_tLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_ = comdat any

$_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE7EraseAtEjj = comdat any

$_ZN5blink17ScriptRunIteratorD2Ev = comdat any

$_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIDsEEvOT_ = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_ = comdat any

@.str = private unnamed_addr constant [59 x i8] c"(it->start_index_ + it->num_characters_) <= text_.length()\00", align 1
@.str.1 = private unnamed_addr constant [75 x i8] c"../../third_party/blink/renderer/platform/fonts/shaping/harfbuzz_shaper.cc\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16ReshapeQueueItemEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ReshapeQueueItem]\00", align 1
@_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4smcp = internal constant %struct.hb_feature_t { i32 1936548720, i32 1, i32 0, i32 -1 }, align 4
@_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4pcap = internal constant %struct.hb_feature_t { i32 1885561200, i32 1, i32 0, i32 -1 }, align 4
@_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4c2sc = internal constant %struct.hb_feature_t { i32 1664250723, i32 1, i32 0, i32 -1 }, align 4
@_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4c2pc = internal constant %struct.hb_feature_t { i32 1664249955, i32 1, i32 0, i32 -1 }, align 4
@_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4unic = internal constant %struct.hb_feature_t { i32 1970170211, i32 1, i32 0, i32 -1 }, align 4
@_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4titl = internal constant %struct.hb_feature_t { i32 1953068140, i32 1, i32 0, i32 -1 }, align 4
@.str.4 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI12hb_feature_tEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = hb_feature_t]\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"position + length <= size()\00", align 1
@__const._ZN5blink12_GLOBAL__N_128ComputeBrokenEmojiPercentageEPNS_11ShapeResultEjj.track_emoji = private unnamed_addr constant { i8, [3 x i8], i32, i8, [3 x i8], i32, i32 } { i8 1, [3 x i8] zeroinitializer, i32 0, i8 0, [3 x i8] zeroinitializer, i32 0, i32 0 }, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.10 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14HarfBuzzShaper12CommitGlyphsEPNS_9RangeDataEPKNS_14SimpleFontDataE11UScriptCodeNS_24CanvasRotationInVerticalEbRKNS_11BufferSliceEPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* nocapture readnone, %"struct.blink::RangeData"* nocapture readonly, %"class.blink::SimpleFontData"*, i32, i8 signext, i1 zeroext, %"struct.blink::BufferSlice"* nocapture readonly dereferenceable(16), %"class.blink::ShapeResult"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.blink::BufferSlice", align 4
  %10 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 1
  %11 = load %"class.blink::Font"*, %"class.blink::Font"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %11, i64 0, i32 0, i32 12, i32 0
  %13 = bitcast %"struct.blink::FontDescription::BitFields"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 2
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %8
  %18 = and i8 %4, 1
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 4, i32 6
  br label %21

21:                                               ; preds = %8, %17
  %22 = phi i32 [ 4, %8 ], [ %20, %17 ]
  %23 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 2
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 1
  %26 = zext i1 %25 to i32
  %27 = or i32 %22, %26
  %28 = icmp eq i32 %3, -1
  br i1 %28, label %32, label %29, !prof !2

29:                                               ; preds = %21
  %30 = tail call i8* @uscript_getShortName_69(i32 %3) #12
  %31 = tail call i32 @hb_script_from_string(i8* %30, i32 -1) #12
  br label %32

32:                                               ; preds = %21, %29
  %33 = phi i32 [ %31, %29 ], [ 0, %21 ]
  %34 = bitcast %"struct.blink::BufferSlice"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"struct.blink::BufferSlice", %"struct.blink::BufferSlice"* %9, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.blink::BufferSlice", %"struct.blink::BufferSlice"* %9, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.blink::BufferSlice", %"struct.blink::BufferSlice"* %9, i64 0, i32 2
  %38 = getelementptr inbounds %"struct.blink::BufferSlice", %"struct.blink::BufferSlice"* %9, i64 0, i32 3
  %39 = icmp eq %"class.blink::SimpleFontData"* %2, null
  %40 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 0
  %42 = bitcast %"struct.blink::BufferSlice"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %42, i8 -86, i64 16, i1 false)
  br label %43

43:                                               ; preds = %150, %32
  %44 = phi %"struct.blink::BufferSlice"* [ %6, %32 ], [ %104, %150 ]
  %45 = getelementptr inbounds %"struct.blink::BufferSlice", %"struct.blink::BufferSlice"* %44, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.blink::BufferSlice", %"struct.blink::BufferSlice"* %44, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.blink::BufferSlice", %"struct.blink::BufferSlice"* %44, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = tail call noalias i8* @malloc(i64 80) #12
  %52 = bitcast i8* %51 to %"struct.blink::ShapeResult::RunInfo"*
  %53 = bitcast i8* %51 to i32*
  store i32 1, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %51, i64 8
  %55 = icmp ult i32 %48, 32768
  %56 = select i1 %55, i32 %48, i32 32768
  %57 = shl nuw nsw i32 %56, 3
  %58 = zext i32 %57 to i64
  %59 = tail call i8* @_Znam(i64 %58) #13
  %60 = ptrtoint i8* %59 to i64
  %61 = bitcast i8* %54 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %51, i64 16
  %63 = bitcast i8* %62 to i64*
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds i8, i8* %51, i64 24
  %65 = bitcast i8* %64 to i32*
  store i32 %56, i32* %65, align 8
  %66 = getelementptr inbounds i8, i8* %51, i64 32
  %67 = bitcast i8* %66 to %"class.blink::SimpleFontData"**
  store %"class.blink::SimpleFontData"* %2, %"class.blink::SimpleFontData"** %67, align 8
  br i1 %39, label %69, label %68

68:                                               ; preds = %43
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %40) #12
  br label %69

69:                                               ; preds = %43, %68
  %70 = getelementptr inbounds i8, i8* %51, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #12
  %71 = getelementptr inbounds i8, i8* %51, i64 56
  %72 = bitcast i8* %71 to i32*
  store i32 %46, i32* %72, align 8
  %73 = getelementptr inbounds i8, i8* %51, i64 60
  %74 = bitcast i8* %73 to i32*
  store i32 %50, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %51, i64 64
  %76 = bitcast i8* %75 to float*
  store float 0.000000e+00, float* %76, align 8
  %77 = getelementptr inbounds i8, i8* %51, i64 68
  %78 = bitcast i8* %77 to i32*
  store i32 %33, i32* %78, align 4
  %79 = getelementptr inbounds i8, i8* %51, i64 72
  %80 = bitcast i8* %79 to i32*
  store i32 %27, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %51, i64 76
  store i8 %4, i8* %81, align 4
  %82 = icmp eq i8* %51, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %69
  %84 = bitcast i8* %51 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %84) #12
  br label %85

85:                                               ; preds = %69, %83
  %86 = getelementptr inbounds %"struct.blink::BufferSlice", %"struct.blink::BufferSlice"* %44, i64 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %47, align 4
  %89 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %41, align 8
  tail call void @_ZN5blink11ShapeResult9InsertRunE13scoped_refptrINS0_7RunInfoEEjjP11hb_buffer_t(%"class.blink::ShapeResult"* %7, %"struct.blink::ShapeResult::RunInfo"* %52, i32 %87, i32 %88, %struct.hb_buffer_t* %89) #12
  %90 = load i32, i32* %65, align 8
  %91 = load i32, i32* %47, align 4
  %92 = icmp eq i32 %91, %90
  br i1 %92, label %102, label %93

93:                                               ; preds = %85
  %94 = load i32, i32* %45, align 4
  %95 = load i32, i32* %74, align 4
  %96 = add i32 %95, %94
  %97 = load i32, i32* %49, align 4
  %98 = sub i32 %97, %95
  %99 = load i32, i32* %86, align 4
  %100 = add i32 %99, %90
  %101 = sub i32 %91, %90
  store i32 %96, i32* %35, align 4
  store i32 %98, i32* %36, align 4
  store i32 %100, i32* %37, align 4
  store i32 %101, i32* %38, align 4
  br label %102

102:                                              ; preds = %85, %93
  %103 = phi i1 [ true, %93 ], [ false, %85 ]
  %104 = phi %"struct.blink::BufferSlice"* [ %9, %93 ], [ %44, %85 ]
  br i1 %82, label %150, label %105

105:                                              ; preds = %102
  %106 = bitcast i8* %51 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* nonnull %106) #12
  %107 = load i32, i32* %53, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %150

109:                                              ; preds = %105
  %110 = bitcast i8* %70 to i32**
  %111 = load i32*, i32** %110, align 8
  %112 = icmp eq i32* %111, null
  %113 = bitcast i32* %111 to i8*
  br i1 %112, label %121, label %114, !prof !3

114:                                              ; preds = %109
  %115 = getelementptr inbounds i8, i8* %51, i64 52
  %116 = bitcast i8* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %120, label %119, !prof !2

119:                                              ; preds = %114
  store i32 0, i32* %116, align 4
  br label %120

120:                                              ; preds = %119, %114
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %113) #12
  store i32* null, i32** %110, align 8
  br label %121

121:                                              ; preds = %120, %109
  %122 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %67, align 8
  %123 = icmp eq %"class.blink::SimpleFontData"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %122, i64 0, i32 0, i32 1, i32 0
  %126 = getelementptr inbounds %"class.base::RefCounted.35", %"class.base::RefCounted.35"* %125, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #12
  %127 = getelementptr inbounds %"class.base::RefCounted.35", %"class.base::RefCounted.35"* %125, i64 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %137

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.base::RefCounted.35", %"class.base::RefCounted.35"* %125, i64 -2
  %132 = bitcast %"class.base::RefCounted.35"* %131 to %"class.blink::FontData"*
  %133 = bitcast %"class.base::RefCounted.35"* %131 to void (%"class.blink::FontData"*)***
  %134 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %134, i64 1
  %136 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %135, align 8
  tail call void %136(%"class.blink::FontData"* nonnull %132) #12
  br label %137

137:                                              ; preds = %130, %124, %121
  %138 = bitcast i8* %62 to %"class.blink::ShapeResult::GlyphOffset"**
  %139 = load %"class.blink::ShapeResult::GlyphOffset"*, %"class.blink::ShapeResult::GlyphOffset"** %138, align 8
  store %"class.blink::ShapeResult::GlyphOffset"* null, %"class.blink::ShapeResult::GlyphOffset"** %138, align 8
  %140 = icmp eq %"class.blink::ShapeResult::GlyphOffset"* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %137
  %142 = bitcast %"class.blink::ShapeResult::GlyphOffset"* %139 to i8*
  tail call void @free(i8* %142) #12
  br label %143

143:                                              ; preds = %141, %137
  %144 = bitcast i8* %54 to %"struct.blink::HarfBuzzRunGlyphData"**
  %145 = load %"struct.blink::HarfBuzzRunGlyphData"*, %"struct.blink::HarfBuzzRunGlyphData"** %144, align 8
  store %"struct.blink::HarfBuzzRunGlyphData"* null, %"struct.blink::HarfBuzzRunGlyphData"** %144, align 8
  %146 = icmp eq %"struct.blink::HarfBuzzRunGlyphData"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = bitcast %"struct.blink::HarfBuzzRunGlyphData"* %145 to i8*
  tail call void @_ZdaPv(i8* %148) #13
  br label %149

149:                                              ; preds = %143, %147
  tail call void @free(i8* nonnull %51) #12
  br label %150

150:                                              ; preds = %102, %105, %149
  br i1 %103, label %43, label %151

151:                                              ; preds = %150
  br i1 %5, label %152, label %154

152:                                              ; preds = %151
  %153 = load %"class.blink::Font"*, %"class.blink::Font"** %10, align 8
  tail call void @_ZNK5blink4Font17ReportNotDefGlyphEv(%"class.blink::Font"* %153) #12
  br label %154

154:                                              ; preds = %152, %151
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink11ShapeResult9InsertRunE13scoped_refptrINS0_7RunInfoEEjjP11hb_buffer_t(%"class.blink::ShapeResult"*, %"struct.blink::ShapeResult::RunInfo"*, i32, i32, %struct.hb_buffer_t*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK5blink4Font17ReportNotDefGlyphEv(%"class.blink::Font"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14HarfBuzzShaper19ExtractShapeResultsEPNS_9RangeDataERbRKNS_16ReshapeQueueItemEPKNS_14SimpleFontDataE11UScriptCodeNS_24CanvasRotationInVerticalEbPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* nocapture readonly, %"struct.blink::RangeData"*, i8* nocapture dereferenceable(1), %"struct.blink::ReshapeQueueItem"* readonly dereferenceable(12), %"class.blink::SimpleFontData"*, i32, i8 signext, i1 zeroext, %"class.blink::ShapeResult"*) local_unnamed_addr #0 align 2 {
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"struct.blink::BufferSlice"*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"struct.blink::BufferSlice"*
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %"struct.blink::BufferSlice"*
  %16 = alloca { i64, i64 }, align 8
  %17 = bitcast { i64, i64 }* %16 to %"struct.blink::BufferSlice"*
  %18 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 0
  %19 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %18, align 8
  %20 = tail call i32 @hb_buffer_get_length(%struct.hb_buffer_t* %19) #12
  %21 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %18, align 8
  %22 = tail call %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t* %21, i32* null) #12
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %740, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %4, i64 0, i32 7
  %26 = load i16, i16* %25, align 8
  %27 = zext i16 %26 to i32
  %28 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast { i64, i64 }* %10 to i8*
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %32 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6
  %36 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 1
  %37 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 2
  %38 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = zext i32 %20 to i64
  %41 = bitcast { i64, i64 }* %10 to i8*
  br label %47

42:                                               ; preds = %215
  %43 = icmp eq i32 %219, %218
  %44 = icmp eq i32 %218, 2
  %45 = or i1 %44, %43
  %46 = or i1 %45, %7
  br i1 %46, label %604, label %222

47:                                               ; preds = %215, %24
  %48 = phi i64 [ 0, %24 ], [ %220, %215 ]
  %49 = phi i32 [ 2, %24 ], [ %219, %215 ]
  %50 = phi i32 [ 2, %24 ], [ %218, %215 ]
  %51 = phi i32 [ 0, %24 ], [ %55, %215 ]
  %52 = phi i32 [ 0, %24 ], [ %217, %215 ]
  %53 = phi i32 [ 0, %24 ], [ %216, %215 ]
  %54 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %48, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %48, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %82, label %59

59:                                               ; preds = %47
  %60 = icmp ne i32 %57, %27
  %61 = or i1 %60, %7
  br i1 %61, label %81, label %62

62:                                               ; preds = %59
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp ugt i32 %67, %55
  br i1 %68, label %69, label %81

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %81

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  %76 = bitcast %"class.WTF::StringImpl"* %75 to i16*
  %77 = zext i32 %55 to i64
  %78 = getelementptr inbounds i16, i16* %76, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = icmp eq i16 %79, 12288
  br i1 %80, label %82, label %81

81:                                               ; preds = %69, %62, %65, %59, %74
  br label %82

82:                                               ; preds = %74, %47, %81
  %83 = phi i32 [ 0, %81 ], [ 1, %47 ], [ 1, %74 ]
  %84 = icmp eq i32 %55, %51
  br i1 %84, label %210, label %85

85:                                               ; preds = %82
  %86 = icmp ne i32 %50, %49
  %87 = icmp ne i32 %50, 2
  %88 = and i1 %87, %86
  %89 = trunc i64 %48 to i32
  br i1 %88, label %90, label %215

90:                                               ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  %91 = sub i32 %52, %53
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  %92 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %18, align 8
  %93 = tail call i32 @hb_buffer_get_direction(%struct.hb_buffer_t* %92) #12
  %94 = and i32 %93, -3
  %95 = icmp eq i32 %94, 4
  br i1 %95, label %96, label %114

96:                                               ; preds = %90
  %97 = zext i32 %53 to i64
  %98 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %97, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %20, %52
  br i1 %100, label %101, label %109

101:                                              ; preds = %96
  %102 = load i32, i32* %32, align 4
  %103 = load i32, i32* %33, align 4
  %104 = add i32 %103, %102
  %105 = load i32, i32* %31, align 4
  %106 = icmp ult i32 %104, %105
  %107 = select i1 %106, i32 %104, i32 %105
  %108 = sub i32 %107, %99
  br label %134

109:                                              ; preds = %96
  %110 = zext i32 %52 to i64
  %111 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %110, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = sub i32 %112, %99
  br label %134

114:                                              ; preds = %90
  %115 = add i32 %52, -1
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %116, i32 2
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %53, 0
  br i1 %119, label %120, label %128

120:                                              ; preds = %114
  %121 = load i32, i32* %32, align 4
  %122 = load i32, i32* %33, align 4
  %123 = add i32 %122, %121
  %124 = load i32, i32* %31, align 4
  %125 = icmp ult i32 %123, %124
  %126 = select i1 %125, i32 %123, i32 %124
  %127 = sub i32 %126, %118
  br label %134

128:                                              ; preds = %114
  %129 = add i32 %53, -1
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %130, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = sub i32 %132, %118
  br label %134

134:                                              ; preds = %101, %109, %120, %128
  %135 = phi i32 [ %99, %101 ], [ %99, %109 ], [ %118, %120 ], [ %118, %128 ]
  %136 = phi i32 [ %108, %101 ], [ %113, %109 ], [ %127, %120 ], [ %133, %128 ]
  %137 = zext i32 %136 to i64
  %138 = shl nuw i64 %137, 32
  %139 = zext i32 %135 to i64
  %140 = or i64 %138, %139
  %141 = zext i32 %91 to i64
  %142 = shl nuw i64 %141, 32
  %143 = zext i32 %53 to i64
  %144 = or i64 %142, %143
  store i64 %140, i64* %34, align 8
  store i64 %144, i64* %30, align 8
  %145 = icmp ne i32 %49, 0
  %146 = or i1 %145, %7
  br i1 %146, label %208, label %147

147:                                              ; preds = %134
  %148 = load i8, i8* %2, align 1, !range !4
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %179

150:                                              ; preds = %147
  %151 = load i32, i32* %36, align 8
  %152 = icmp eq i32 %151, 0
  %153 = load i32, i32* %37, align 4
  br i1 %152, label %157, label %154

154:                                              ; preds = %150
  %155 = add i32 %153, 1
  %156 = icmp eq i32 %155, %151
  br i1 %156, label %165, label %167

157:                                              ; preds = %150
  %158 = icmp eq i32 %153, 0
  %159 = load i32, i32* %38, align 8
  br i1 %158, label %163, label %160

160:                                              ; preds = %157
  %161 = add i32 %159, -1
  %162 = icmp eq i32 %153, %161
  br i1 %162, label %165, label %167

163:                                              ; preds = %157
  %164 = icmp eq i32 %159, 0
  br i1 %164, label %165, label %167

165:                                              ; preds = %163, %160, %154
  tail call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %35) #12
  %166 = load i32, i32* %37, align 4
  br label %167

167:                                              ; preds = %154, %160, %163, %165
  %168 = phi i32 [ %153, %154 ], [ %153, %160 ], [ 0, %163 ], [ %166, %165 ]
  %169 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %39, align 8
  %170 = zext i32 %168 to i64
  %171 = load i32, i32* %38, align 8
  %172 = add i32 %171, -1
  %173 = icmp eq i32 %168, %172
  %174 = add i32 %168, 1
  %175 = select i1 %173, i32 0, i32 %174
  store i32 %175, i32* %37, align 4
  %176 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %169, i64 %170, i32 0
  store i32 0, i32* %176, align 4
  %177 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %169, i64 %170, i32 1
  store i32 0, i32* %177, align 4
  %178 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %169, i64 %170, i32 2
  store i32 0, i32* %178, align 4
  store i8 1, i8* %2, align 1
  br label %179

179:                                              ; preds = %167, %147
  %180 = load i32, i32* %36, align 8
  %181 = icmp eq i32 %180, 0
  %182 = load i32, i32* %37, align 4
  br i1 %181, label %186, label %183

183:                                              ; preds = %179
  %184 = add i32 %182, 1
  %185 = icmp eq i32 %184, %180
  br i1 %185, label %194, label %196

186:                                              ; preds = %179
  %187 = icmp eq i32 %182, 0
  %188 = load i32, i32* %38, align 8
  br i1 %187, label %192, label %189

189:                                              ; preds = %186
  %190 = add i32 %188, -1
  %191 = icmp eq i32 %182, %190
  br i1 %191, label %194, label %196

192:                                              ; preds = %186
  %193 = icmp eq i32 %188, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %192, %189, %183
  tail call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %35) #12
  %195 = load i32, i32* %37, align 4
  br label %196

196:                                              ; preds = %183, %189, %192, %194
  %197 = phi i32 [ %182, %183 ], [ %182, %189 ], [ 0, %192 ], [ %195, %194 ]
  %198 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %39, align 8
  %199 = zext i32 %197 to i64
  %200 = load i32, i32* %38, align 8
  %201 = add i32 %200, -1
  %202 = icmp eq i32 %197, %201
  %203 = add i32 %197, 1
  %204 = select i1 %202, i32 0, i32 %203
  store i32 %204, i32* %37, align 4
  %205 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %198, i64 %199, i32 0
  store i32 1, i32* %205, align 4
  %206 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %198, i64 %199, i32 1
  store i32 %135, i32* %206, align 4
  %207 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %198, i64 %199, i32 2
  store i32 %136, i32* %207, align 4
  br label %209

208:                                              ; preds = %134
  call void @_ZNK5blink14HarfBuzzShaper12CommitGlyphsEPNS_9RangeDataEPKNS_14SimpleFontDataE11UScriptCodeNS_24CanvasRotationInVerticalEbRKNS_11BufferSliceEPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* undef, %"struct.blink::RangeData"* %1, %"class.blink::SimpleFontData"* %4, i32 %5, i8 signext %6, i1 zeroext %7, %"struct.blink::BufferSlice"* nonnull dereferenceable(16) %11, %"class.blink::ShapeResult"* %8)
  br label %209

209:                                              ; preds = %208, %196
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  br label %215

210:                                              ; preds = %82
  %211 = and i32 %49, -3
  %212 = or i32 %83, %211
  %213 = icmp ne i32 %212, 0
  %214 = zext i1 %213 to i32
  br label %215

215:                                              ; preds = %85, %209, %210
  %216 = phi i32 [ %53, %210 ], [ %52, %209 ], [ %53, %85 ]
  %217 = phi i32 [ %52, %210 ], [ %89, %209 ], [ %89, %85 ]
  %218 = phi i32 [ %50, %210 ], [ %49, %209 ], [ %49, %85 ]
  %219 = phi i32 [ %214, %210 ], [ %83, %209 ], [ %83, %85 ]
  %220 = add nuw nsw i64 %48, 1
  %221 = icmp eq i64 %220, %40
  br i1 %221, label %42, label %47

222:                                              ; preds = %42
  %223 = icmp eq i32 %219, 0
  br i1 %223, label %224, label %414

224:                                              ; preds = %222
  %225 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %225) #12
  %226 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %227 = sub i32 %217, %216
  %228 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 -86, i64 16, i1 false)
  %229 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %18, align 8
  %230 = tail call i32 @hb_buffer_get_direction(%struct.hb_buffer_t* %229) #12
  %231 = and i32 %230, -3
  %232 = icmp eq i32 %231, 4
  br i1 %232, label %233, label %254

233:                                              ; preds = %224
  %234 = zext i32 %216 to i64
  %235 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %234, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %20, %217
  br i1 %237, label %238, label %249

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %240 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %243 = load i32, i32* %242, align 4
  %244 = add i32 %243, %241
  %245 = load i32, i32* %239, align 4
  %246 = icmp ult i32 %244, %245
  %247 = select i1 %246, i32 %244, i32 %245
  %248 = sub i32 %247, %236
  br label %277

249:                                              ; preds = %233
  %250 = zext i32 %217 to i64
  %251 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %250, i32 2
  %252 = load i32, i32* %251, align 4
  %253 = sub i32 %252, %236
  br label %277

254:                                              ; preds = %224
  %255 = add i32 %217, -1
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %256, i32 2
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %216, 0
  br i1 %259, label %260, label %271

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %262 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %265 = load i32, i32* %264, align 4
  %266 = add i32 %265, %263
  %267 = load i32, i32* %261, align 4
  %268 = icmp ult i32 %266, %267
  %269 = select i1 %268, i32 %266, i32 %267
  %270 = sub i32 %269, %258
  br label %277

271:                                              ; preds = %254
  %272 = add i32 %216, -1
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %273, i32 2
  %275 = load i32, i32* %274, align 4
  %276 = sub i32 %275, %258
  br label %277

277:                                              ; preds = %238, %249, %260, %271
  %278 = phi i32 [ %236, %238 ], [ %236, %249 ], [ %258, %260 ], [ %258, %271 ]
  %279 = phi i32 [ %248, %238 ], [ %253, %249 ], [ %270, %260 ], [ %276, %271 ]
  %280 = zext i32 %279 to i64
  %281 = shl nuw i64 %280, 32
  %282 = zext i32 %278 to i64
  %283 = or i64 %281, %282
  %284 = zext i32 %227 to i64
  %285 = shl nuw i64 %284, 32
  %286 = zext i32 %216 to i64
  %287 = or i64 %285, %286
  %288 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %283, i64* %288, align 8
  store i64 %287, i64* %226, align 8
  %289 = load i8, i8* %2, align 1, !range !4
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %291, label %326

291:                                              ; preds = %277
  %292 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6
  %293 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 1
  %294 = load i32, i32* %293, align 8
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 2
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %301, label %298

298:                                              ; preds = %291
  %299 = add i32 %297, 1
  %300 = icmp eq i32 %299, %294
  br i1 %300, label %310, label %312

301:                                              ; preds = %291
  %302 = icmp eq i32 %297, 0
  %303 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  br i1 %302, label %308, label %305

305:                                              ; preds = %301
  %306 = add i32 %304, -1
  %307 = icmp eq i32 %297, %306
  br i1 %307, label %310, label %312

308:                                              ; preds = %301
  %309 = icmp eq i32 %304, 0
  br i1 %309, label %310, label %312

310:                                              ; preds = %308, %305, %298
  tail call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %292) #12
  %311 = load i32, i32* %296, align 4
  br label %312

312:                                              ; preds = %298, %305, %308, %310
  %313 = phi i32 [ %297, %298 ], [ %297, %305 ], [ 0, %308 ], [ %311, %310 ]
  %314 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %292, i64 0, i32 0, i32 0, i32 0, i32 0
  %315 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %314, align 8
  %316 = zext i32 %313 to i64
  %317 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %318 = load i32, i32* %317, align 8
  %319 = add i32 %318, -1
  %320 = icmp eq i32 %313, %319
  %321 = add i32 %313, 1
  %322 = select i1 %320, i32 0, i32 %321
  store i32 %322, i32* %296, align 4
  %323 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %315, i64 %316, i32 0
  store i32 0, i32* %323, align 4
  %324 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %315, i64 %316, i32 1
  store i32 0, i32* %324, align 4
  %325 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %315, i64 %316, i32 2
  store i32 0, i32* %325, align 4
  store i8 1, i8* %2, align 1
  br label %326

326:                                              ; preds = %312, %277
  %327 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6
  %328 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 1
  %329 = load i32, i32* %328, align 8
  %330 = icmp eq i32 %329, 0
  %331 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 2
  %332 = load i32, i32* %331, align 4
  br i1 %330, label %336, label %333

333:                                              ; preds = %326
  %334 = add i32 %332, 1
  %335 = icmp eq i32 %334, %329
  br i1 %335, label %345, label %347

336:                                              ; preds = %326
  %337 = icmp eq i32 %332, 0
  %338 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %339 = load i32, i32* %338, align 8
  br i1 %337, label %343, label %340

340:                                              ; preds = %336
  %341 = add i32 %339, -1
  %342 = icmp eq i32 %332, %341
  br i1 %342, label %345, label %347

343:                                              ; preds = %336
  %344 = icmp eq i32 %339, 0
  br i1 %344, label %345, label %347

345:                                              ; preds = %343, %340, %333
  tail call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %327) #12
  %346 = load i32, i32* %331, align 4
  br label %347

347:                                              ; preds = %333, %340, %343, %345
  %348 = phi i32 [ %332, %333 ], [ %332, %340 ], [ 0, %343 ], [ %346, %345 ]
  %349 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %327, i64 0, i32 0, i32 0, i32 0, i32 0
  %350 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %349, align 8
  %351 = zext i32 %348 to i64
  %352 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %353 = load i32, i32* %352, align 8
  %354 = add i32 %353, -1
  %355 = icmp eq i32 %348, %354
  %356 = add i32 %348, 1
  %357 = select i1 %355, i32 0, i32 %356
  store i32 %357, i32* %331, align 4
  %358 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %350, i64 %351, i32 0
  store i32 1, i32* %358, align 4
  %359 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %350, i64 %351, i32 1
  store i32 %278, i32* %359, align 4
  %360 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %350, i64 %351, i32 2
  store i32 %279, i32* %360, align 4
  %361 = sub i32 %20, %217
  %362 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %18, align 8
  %363 = tail call i32 @hb_buffer_get_direction(%struct.hb_buffer_t* %362) #12
  %364 = and i32 %363, -3
  %365 = icmp eq i32 %364, 4
  br i1 %365, label %366, label %380

366:                                              ; preds = %347
  %367 = zext i32 %217 to i64
  %368 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %367, i32 2
  %369 = load i32, i32* %368, align 4
  %370 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %371 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %372 = load i32, i32* %371, align 4
  %373 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %374 = load i32, i32* %373, align 4
  %375 = add i32 %374, %372
  %376 = load i32, i32* %370, align 4
  %377 = icmp ult i32 %375, %376
  %378 = select i1 %377, i32 %375, i32 %376
  %379 = sub i32 %378, %369
  br label %403

380:                                              ; preds = %347
  %381 = add i32 %20, -1
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %382, i32 2
  %384 = load i32, i32* %383, align 4
  %385 = icmp eq i32 %217, 0
  br i1 %385, label %386, label %397

386:                                              ; preds = %380
  %387 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %388 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %389 = load i32, i32* %388, align 4
  %390 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %391 = load i32, i32* %390, align 4
  %392 = add i32 %391, %389
  %393 = load i32, i32* %387, align 4
  %394 = icmp ult i32 %392, %393
  %395 = select i1 %394, i32 %392, i32 %393
  %396 = sub i32 %395, %384
  br label %403

397:                                              ; preds = %380
  %398 = add i32 %217, -1
  %399 = zext i32 %398 to i64
  %400 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %399, i32 2
  %401 = load i32, i32* %400, align 4
  %402 = sub i32 %401, %384
  br label %403

403:                                              ; preds = %366, %386, %397
  %404 = phi i32 [ %369, %366 ], [ %384, %386 ], [ %384, %397 ]
  %405 = phi i32 [ %379, %366 ], [ %396, %386 ], [ %402, %397 ]
  %406 = zext i32 %405 to i64
  %407 = shl nuw i64 %406, 32
  %408 = zext i32 %404 to i64
  %409 = or i64 %407, %408
  %410 = zext i32 %361 to i64
  %411 = shl nuw i64 %410, 32
  %412 = zext i32 %217 to i64
  %413 = or i64 %411, %412
  store i64 %409, i64* %288, align 8
  store i64 %413, i64* %226, align 8
  call void @_ZNK5blink14HarfBuzzShaper12CommitGlyphsEPNS_9RangeDataEPKNS_14SimpleFontDataE11UScriptCodeNS_24CanvasRotationInVerticalEbRKNS_11BufferSliceEPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* undef, %"struct.blink::RangeData"* %1, %"class.blink::SimpleFontData"* %4, i32 %5, i8 signext %6, i1 zeroext false, %"struct.blink::BufferSlice"* nonnull dereferenceable(16) %13, %"class.blink::ShapeResult"* %8)
  br label %738

414:                                              ; preds = %222
  %415 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %415) #12
  %416 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %417 = sub i32 %217, %216
  %418 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %418, i8 -86, i64 16, i1 false)
  %419 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %18, align 8
  %420 = tail call i32 @hb_buffer_get_direction(%struct.hb_buffer_t* %419) #12
  %421 = and i32 %420, -3
  %422 = icmp eq i32 %421, 4
  br i1 %422, label %423, label %444

423:                                              ; preds = %414
  %424 = zext i32 %216 to i64
  %425 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %424, i32 2
  %426 = load i32, i32* %425, align 4
  %427 = icmp eq i32 %20, %217
  br i1 %427, label %428, label %439

428:                                              ; preds = %423
  %429 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %430 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %431 = load i32, i32* %430, align 4
  %432 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %433 = load i32, i32* %432, align 4
  %434 = add i32 %433, %431
  %435 = load i32, i32* %429, align 4
  %436 = icmp ult i32 %434, %435
  %437 = select i1 %436, i32 %434, i32 %435
  %438 = sub i32 %437, %426
  br label %467

439:                                              ; preds = %423
  %440 = zext i32 %217 to i64
  %441 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %440, i32 2
  %442 = load i32, i32* %441, align 4
  %443 = sub i32 %442, %426
  br label %467

444:                                              ; preds = %414
  %445 = add i32 %217, -1
  %446 = zext i32 %445 to i64
  %447 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %446, i32 2
  %448 = load i32, i32* %447, align 4
  %449 = icmp eq i32 %216, 0
  br i1 %449, label %450, label %461

450:                                              ; preds = %444
  %451 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %452 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %453 = load i32, i32* %452, align 4
  %454 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %455 = load i32, i32* %454, align 4
  %456 = add i32 %455, %453
  %457 = load i32, i32* %451, align 4
  %458 = icmp ult i32 %456, %457
  %459 = select i1 %458, i32 %456, i32 %457
  %460 = sub i32 %459, %448
  br label %467

461:                                              ; preds = %444
  %462 = add i32 %216, -1
  %463 = zext i32 %462 to i64
  %464 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %463, i32 2
  %465 = load i32, i32* %464, align 4
  %466 = sub i32 %465, %448
  br label %467

467:                                              ; preds = %428, %439, %450, %461
  %468 = phi i32 [ %426, %428 ], [ %426, %439 ], [ %448, %450 ], [ %448, %461 ]
  %469 = phi i32 [ %438, %428 ], [ %443, %439 ], [ %460, %450 ], [ %466, %461 ]
  %470 = zext i32 %469 to i64
  %471 = shl nuw i64 %470, 32
  %472 = zext i32 %468 to i64
  %473 = or i64 %471, %472
  %474 = zext i32 %417 to i64
  %475 = shl nuw i64 %474, 32
  %476 = zext i32 %216 to i64
  %477 = or i64 %475, %476
  %478 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 %473, i64* %478, align 8
  store i64 %477, i64* %416, align 8
  call void @_ZNK5blink14HarfBuzzShaper12CommitGlyphsEPNS_9RangeDataEPKNS_14SimpleFontDataE11UScriptCodeNS_24CanvasRotationInVerticalEbRKNS_11BufferSliceEPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* undef, %"struct.blink::RangeData"* %1, %"class.blink::SimpleFontData"* %4, i32 %5, i8 signext %6, i1 zeroext false, %"struct.blink::BufferSlice"* nonnull dereferenceable(16) %15, %"class.blink::ShapeResult"* %8)
  %479 = sub i32 %20, %217
  %480 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %18, align 8
  %481 = tail call i32 @hb_buffer_get_direction(%struct.hb_buffer_t* %480) #12
  %482 = and i32 %481, -3
  %483 = icmp eq i32 %482, 4
  br i1 %483, label %484, label %498

484:                                              ; preds = %467
  %485 = zext i32 %217 to i64
  %486 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %485, i32 2
  %487 = load i32, i32* %486, align 4
  %488 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %489 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %490 = load i32, i32* %489, align 4
  %491 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %492 = load i32, i32* %491, align 4
  %493 = add i32 %492, %490
  %494 = load i32, i32* %488, align 4
  %495 = icmp ult i32 %493, %494
  %496 = select i1 %495, i32 %493, i32 %494
  %497 = sub i32 %496, %487
  br label %521

498:                                              ; preds = %467
  %499 = add i32 %20, -1
  %500 = zext i32 %499 to i64
  %501 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %500, i32 2
  %502 = load i32, i32* %501, align 4
  %503 = icmp eq i32 %217, 0
  br i1 %503, label %504, label %515

504:                                              ; preds = %498
  %505 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %506 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %507 = load i32, i32* %506, align 4
  %508 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %509 = load i32, i32* %508, align 4
  %510 = add i32 %509, %507
  %511 = load i32, i32* %505, align 4
  %512 = icmp ult i32 %510, %511
  %513 = select i1 %512, i32 %510, i32 %511
  %514 = sub i32 %513, %502
  br label %521

515:                                              ; preds = %498
  %516 = add i32 %217, -1
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %517, i32 2
  %519 = load i32, i32* %518, align 4
  %520 = sub i32 %519, %502
  br label %521

521:                                              ; preds = %484, %504, %515
  %522 = phi i32 [ %487, %484 ], [ %502, %504 ], [ %502, %515 ]
  %523 = phi i32 [ %497, %484 ], [ %514, %504 ], [ %520, %515 ]
  %524 = zext i32 %523 to i64
  %525 = shl nuw i64 %524, 32
  %526 = zext i32 %522 to i64
  %527 = or i64 %525, %526
  %528 = zext i32 %479 to i64
  %529 = shl nuw i64 %528, 32
  %530 = zext i32 %217 to i64
  %531 = or i64 %529, %530
  store i64 %527, i64* %478, align 8
  store i64 %531, i64* %416, align 8
  %532 = load i8, i8* %2, align 1, !range !4
  %533 = icmp eq i8 %532, 0
  br i1 %533, label %534, label %569

534:                                              ; preds = %521
  %535 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6
  %536 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 1
  %537 = load i32, i32* %536, align 8
  %538 = icmp eq i32 %537, 0
  %539 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 2
  %540 = load i32, i32* %539, align 4
  br i1 %538, label %544, label %541

541:                                              ; preds = %534
  %542 = add i32 %540, 1
  %543 = icmp eq i32 %542, %537
  br i1 %543, label %553, label %555

544:                                              ; preds = %534
  %545 = icmp eq i32 %540, 0
  %546 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %547 = load i32, i32* %546, align 8
  br i1 %545, label %551, label %548

548:                                              ; preds = %544
  %549 = add i32 %547, -1
  %550 = icmp eq i32 %540, %549
  br i1 %550, label %553, label %555

551:                                              ; preds = %544
  %552 = icmp eq i32 %547, 0
  br i1 %552, label %553, label %555

553:                                              ; preds = %551, %548, %541
  tail call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %535) #12
  %554 = load i32, i32* %539, align 4
  br label %555

555:                                              ; preds = %541, %548, %551, %553
  %556 = phi i32 [ %540, %541 ], [ %540, %548 ], [ 0, %551 ], [ %554, %553 ]
  %557 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %535, i64 0, i32 0, i32 0, i32 0, i32 0
  %558 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %557, align 8
  %559 = zext i32 %556 to i64
  %560 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %561 = load i32, i32* %560, align 8
  %562 = add i32 %561, -1
  %563 = icmp eq i32 %556, %562
  %564 = add i32 %556, 1
  %565 = select i1 %563, i32 0, i32 %564
  store i32 %565, i32* %539, align 4
  %566 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %558, i64 %559, i32 0
  store i32 0, i32* %566, align 4
  %567 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %558, i64 %559, i32 1
  store i32 0, i32* %567, align 4
  %568 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %558, i64 %559, i32 2
  store i32 0, i32* %568, align 4
  store i8 1, i8* %2, align 1
  br label %569

569:                                              ; preds = %555, %521
  %570 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6
  %571 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 1
  %572 = load i32, i32* %571, align 8
  %573 = icmp eq i32 %572, 0
  %574 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 2
  %575 = load i32, i32* %574, align 4
  br i1 %573, label %579, label %576

576:                                              ; preds = %569
  %577 = add i32 %575, 1
  %578 = icmp eq i32 %577, %572
  br i1 %578, label %588, label %590

579:                                              ; preds = %569
  %580 = icmp eq i32 %575, 0
  %581 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %582 = load i32, i32* %581, align 8
  br i1 %580, label %586, label %583

583:                                              ; preds = %579
  %584 = add i32 %582, -1
  %585 = icmp eq i32 %575, %584
  br i1 %585, label %588, label %590

586:                                              ; preds = %579
  %587 = icmp eq i32 %582, 0
  br i1 %587, label %588, label %590

588:                                              ; preds = %586, %583, %576
  tail call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %570) #12
  %589 = load i32, i32* %574, align 4
  br label %590

590:                                              ; preds = %576, %583, %586, %588
  %591 = phi i32 [ %575, %576 ], [ %575, %583 ], [ 0, %586 ], [ %589, %588 ]
  %592 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %570, i64 0, i32 0, i32 0, i32 0, i32 0
  %593 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %592, align 8
  %594 = zext i32 %591 to i64
  %595 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %596 = load i32, i32* %595, align 8
  %597 = add i32 %596, -1
  %598 = icmp eq i32 %591, %597
  %599 = add i32 %591, 1
  %600 = select i1 %598, i32 0, i32 %599
  store i32 %600, i32* %574, align 4
  %601 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %593, i64 %594, i32 0
  store i32 1, i32* %601, align 4
  %602 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %593, i64 %594, i32 1
  store i32 %522, i32* %602, align 4
  %603 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %593, i64 %594, i32 2
  store i32 %523, i32* %603, align 4
  br label %738

604:                                              ; preds = %42
  %605 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %605) #12
  %606 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %607 = sub i32 %20, %216
  %608 = bitcast { i64, i64 }* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %608, i8 -86, i64 16, i1 false)
  %609 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %18, align 8
  %610 = tail call i32 @hb_buffer_get_direction(%struct.hb_buffer_t* %609) #12
  %611 = and i32 %610, -3
  %612 = icmp eq i32 %611, 4
  br i1 %612, label %613, label %627

613:                                              ; preds = %604
  %614 = zext i32 %216 to i64
  %615 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %614, i32 2
  %616 = load i32, i32* %615, align 4
  %617 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %618 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %619 = load i32, i32* %618, align 4
  %620 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %621 = load i32, i32* %620, align 4
  %622 = add i32 %621, %619
  %623 = load i32, i32* %617, align 4
  %624 = icmp ult i32 %622, %623
  %625 = select i1 %624, i32 %622, i32 %623
  %626 = sub i32 %625, %616
  br label %650

627:                                              ; preds = %604
  %628 = add i32 %20, -1
  %629 = zext i32 %628 to i64
  %630 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %629, i32 2
  %631 = load i32, i32* %630, align 4
  %632 = icmp eq i32 %216, 0
  br i1 %632, label %633, label %644

633:                                              ; preds = %627
  %634 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %635 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 1
  %636 = load i32, i32* %635, align 4
  %637 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %3, i64 0, i32 2
  %638 = load i32, i32* %637, align 4
  %639 = add i32 %638, %636
  %640 = load i32, i32* %634, align 4
  %641 = icmp ult i32 %639, %640
  %642 = select i1 %641, i32 %639, i32 %640
  %643 = sub i32 %642, %631
  br label %650

644:                                              ; preds = %627
  %645 = add i32 %216, -1
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %22, i64 %646, i32 2
  %648 = load i32, i32* %647, align 4
  %649 = sub i32 %648, %631
  br label %650

650:                                              ; preds = %613, %633, %644
  %651 = phi i32 [ %616, %613 ], [ %631, %633 ], [ %631, %644 ]
  %652 = phi i32 [ %626, %613 ], [ %643, %633 ], [ %649, %644 ]
  %653 = zext i32 %652 to i64
  %654 = shl nuw i64 %653, 32
  %655 = zext i32 %651 to i64
  %656 = or i64 %654, %655
  %657 = zext i32 %607 to i64
  %658 = shl nuw i64 %657, 32
  %659 = zext i32 %216 to i64
  %660 = or i64 %658, %659
  %661 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  store i64 %656, i64* %661, align 8
  store i64 %660, i64* %606, align 8
  %662 = icmp ne i32 %219, 1
  %663 = or i1 %662, %7
  br i1 %663, label %737, label %664

664:                                              ; preds = %650
  %665 = load i8, i8* %2, align 1, !range !4
  %666 = icmp eq i8 %665, 0
  br i1 %666, label %667, label %702

667:                                              ; preds = %664
  %668 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6
  %669 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 1
  %670 = load i32, i32* %669, align 8
  %671 = icmp eq i32 %670, 0
  %672 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 2
  %673 = load i32, i32* %672, align 4
  br i1 %671, label %677, label %674

674:                                              ; preds = %667
  %675 = add i32 %673, 1
  %676 = icmp eq i32 %675, %670
  br i1 %676, label %686, label %688

677:                                              ; preds = %667
  %678 = icmp eq i32 %673, 0
  %679 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %680 = load i32, i32* %679, align 8
  br i1 %678, label %684, label %681

681:                                              ; preds = %677
  %682 = add i32 %680, -1
  %683 = icmp eq i32 %673, %682
  br i1 %683, label %686, label %688

684:                                              ; preds = %677
  %685 = icmp eq i32 %680, 0
  br i1 %685, label %686, label %688

686:                                              ; preds = %684, %681, %674
  tail call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %668) #12
  %687 = load i32, i32* %672, align 4
  br label %688

688:                                              ; preds = %674, %681, %684, %686
  %689 = phi i32 [ %673, %674 ], [ %673, %681 ], [ 0, %684 ], [ %687, %686 ]
  %690 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %668, i64 0, i32 0, i32 0, i32 0, i32 0
  %691 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %690, align 8
  %692 = zext i32 %689 to i64
  %693 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %694 = load i32, i32* %693, align 8
  %695 = add i32 %694, -1
  %696 = icmp eq i32 %689, %695
  %697 = add i32 %689, 1
  %698 = select i1 %696, i32 0, i32 %697
  store i32 %698, i32* %672, align 4
  %699 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %691, i64 %692, i32 0
  store i32 0, i32* %699, align 4
  %700 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %691, i64 %692, i32 1
  store i32 0, i32* %700, align 4
  %701 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %691, i64 %692, i32 2
  store i32 0, i32* %701, align 4
  store i8 1, i8* %2, align 1
  br label %702

702:                                              ; preds = %688, %664
  %703 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6
  %704 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 1
  %705 = load i32, i32* %704, align 8
  %706 = icmp eq i32 %705, 0
  %707 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 2
  %708 = load i32, i32* %707, align 4
  br i1 %706, label %712, label %709

709:                                              ; preds = %702
  %710 = add i32 %708, 1
  %711 = icmp eq i32 %710, %705
  br i1 %711, label %721, label %723

712:                                              ; preds = %702
  %713 = icmp eq i32 %708, 0
  %714 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %715 = load i32, i32* %714, align 8
  br i1 %713, label %719, label %716

716:                                              ; preds = %712
  %717 = add i32 %715, -1
  %718 = icmp eq i32 %708, %717
  br i1 %718, label %721, label %723

719:                                              ; preds = %712
  %720 = icmp eq i32 %715, 0
  br i1 %720, label %721, label %723

721:                                              ; preds = %719, %716, %709
  tail call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %703) #12
  %722 = load i32, i32* %707, align 4
  br label %723

723:                                              ; preds = %709, %716, %719, %721
  %724 = phi i32 [ %708, %709 ], [ %708, %716 ], [ 0, %719 ], [ %722, %721 ]
  %725 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %703, i64 0, i32 0, i32 0, i32 0, i32 0
  %726 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %725, align 8
  %727 = zext i32 %724 to i64
  %728 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %729 = load i32, i32* %728, align 8
  %730 = add i32 %729, -1
  %731 = icmp eq i32 %724, %730
  %732 = add i32 %724, 1
  %733 = select i1 %731, i32 0, i32 %732
  store i32 %733, i32* %707, align 4
  %734 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %726, i64 %727, i32 0
  store i32 1, i32* %734, align 4
  %735 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %726, i64 %727, i32 1
  store i32 %651, i32* %735, align 4
  %736 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %726, i64 %727, i32 2
  store i32 %652, i32* %736, align 4
  br label %738

737:                                              ; preds = %650
  call void @_ZNK5blink14HarfBuzzShaper12CommitGlyphsEPNS_9RangeDataEPKNS_14SimpleFontDataE11UScriptCodeNS_24CanvasRotationInVerticalEbRKNS_11BufferSliceEPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* undef, %"struct.blink::RangeData"* %1, %"class.blink::SimpleFontData"* %4, i32 %5, i8 signext %6, i1 zeroext %7, %"struct.blink::BufferSlice"* nonnull dereferenceable(16) %17, %"class.blink::ShapeResult"* %8)
  br label %738

738:                                              ; preds = %723, %737, %403, %590
  %739 = phi i8* [ %415, %590 ], [ %225, %403 ], [ %605, %737 ], [ %605, %723 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %739) #12
  br label %740

740:                                              ; preds = %738, %9
  ret void
}

declare i32 @hb_buffer_get_length(%struct.hb_buffer_t*) local_unnamed_addr #2

declare %struct.hb_glyph_info_t* @hb_buffer_get_glyph_infos(%struct.hb_buffer_t*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14HarfBuzzShaper24CollectFallbackHintCharsERKN3WTF5DequeINS_16ReshapeQueueItemELj0ENS1_18PartitionAllocatorEEEbRNS1_6VectorIiLj0ES4_EE(%"class.blink::HarfBuzzShaper"* nocapture readonly, %"class.WTF::Deque.244"* dereferenceable(24), i1 zeroext, %"class.WTF::Vector.295"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.WTF::DequeConstIterator", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca i16, align 2
  %10 = alloca i32, align 4
  %11 = alloca %"class.blink::UTF16TextIterator", align 8
  %12 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %239, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %18, align 4
  %19 = bitcast %"class.WTF::DequeConstIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %6, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %6, i64 0, i32 0, i32 1
  %22 = bitcast %"class.WTF::DequeConstIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i32, i32* %12, align 8, !noalias !5
  store %"class.WTF::Deque.244"* %1, %"class.WTF::Deque.244"** %20, align 8, !alias.scope !5
  store i32 %23, i32* %21, align 8
  %24 = load i32, i32* %14, align 4, !noalias !8
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %236, label %26

26:                                               ; preds = %17
  %27 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %32 = bitcast %"class.logging::CheckError"* %8 to i8*
  %33 = bitcast i16* %9 to i8*
  %34 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %3, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast i32* %10 to i8*
  %37 = bitcast %"class.blink::UTF16TextIterator"* %11 to i8*
  %38 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %11, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %11, i64 0, i32 2
  %40 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %11, i64 0, i32 3
  %41 = getelementptr inbounds %"class.blink::UTF16TextIterator", %"class.blink::UTF16TextIterator"* %11, i64 0, i32 4
  %42 = bitcast %"class.blink::UTF16TextIterator"* %11 to i8*
  br label %43

43:                                               ; preds = %26, %223
  %44 = phi i64 [ 0, %26 ], [ %224, %223 ]
  %45 = call %"struct.blink::ReshapeQueueItem"* @_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv(%"class.WTF::DequeConstIterator"* nonnull %6)
  %46 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %236, label %49

49:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %50 = call %"struct.blink::ReshapeQueueItem"* @_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv(%"class.WTF::DequeConstIterator"* nonnull %6)
  %51 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = call %"struct.blink::ReshapeQueueItem"* @_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv(%"class.WTF::DequeConstIterator"* nonnull %6)
  %54 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %53, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, %52
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  br label %62

62:                                               ; preds = %49, %59
  %63 = phi i32 [ %61, %59 ], [ 0, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %64 = icmp ugt i32 %56, %63
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* null, i8** %28, align 8
  br label %73

66:                                               ; preds = %62
  %67 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %56) #12
  %68 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %63) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i8* %67, i8* %68) #12
  %69 = load i8*, i8** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  store i8* %69, i8** %28, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.1, i64 0, i64 0), i32 591, %"class.logging::CheckOpResult"* nonnull %7) #12
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %73

73:                                               ; preds = %65, %66, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %167, label %79

79:                                               ; preds = %73
  %80 = call %"struct.blink::ReshapeQueueItem"* @_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv(%"class.WTF::DequeConstIterator"* nonnull %6)
  %81 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %80, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %223, label %84

84:                                               ; preds = %79, %161
  %85 = phi i32 [ %162, %161 ], [ 0, %79 ]
  %86 = phi i64 [ %128, %161 ], [ %44, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %33) #12
  %87 = call %"struct.blink::ReshapeQueueItem"* @_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv(%"class.WTF::DequeConstIterator"* nonnull %6)
  %88 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %87, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %89, %85
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %114, label %93

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp ugt i32 %95, %90
  br i1 %96, label %97, label %114

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 1
  br i1 %101, label %109, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.WTF::StringImpl"* %102 to i8*
  %105 = zext i32 %90 to i64
  %106 = getelementptr inbounds i8, i8* %104, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i16
  br label %114

109:                                              ; preds = %97
  %110 = bitcast %"class.WTF::StringImpl"* %102 to i16*
  %111 = zext i32 %90 to i64
  %112 = getelementptr inbounds i16, i16* %110, i64 %111
  %113 = load i16, i16* %112, align 2
  br label %114

114:                                              ; preds = %84, %93, %103, %109
  %115 = phi i16 [ 0, %93 ], [ 0, %84 ], [ %108, %103 ], [ %113, %109 ]
  store i16 %115, i16* %9, align 2
  %116 = load i32, i32* %18, align 4
  %117 = load i32, i32* %34, align 8
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %126, label %119, !prof !2

119:                                              ; preds = %114
  %120 = load i32*, i32** %35, align 8
  %121 = zext i32 %116 to i64
  %122 = getelementptr inbounds i32, i32* %120, i64 %121
  %123 = zext i16 %115 to i32
  store i32 %123, i32* %122, align 4
  %124 = load i32, i32* %18, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %18, align 4
  br label %127

126:                                              ; preds = %114
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIDsEEvOT_(%"class.WTF::Vector.295"* %3, i16* nonnull dereferenceable(2) %9) #12
  br label %127

127:                                              ; preds = %119, %126
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %33) #12
  %128 = add i64 %86, 1
  br i1 %2, label %161, label %129

129:                                              ; preds = %127
  %130 = call %"struct.blink::ReshapeQueueItem"* @_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv(%"class.WTF::DequeConstIterator"* nonnull %6)
  %131 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %130, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, %85
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %157, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = icmp ugt i32 %138, %133
  br i1 %139, label %140, label %157

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 1
  br i1 %144, label %152, label %146

146:                                              ; preds = %140
  %147 = bitcast %"class.WTF::StringImpl"* %145 to i8*
  %148 = zext i32 %133 to i64
  %149 = getelementptr inbounds i8, i8* %147, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i16
  br label %157

152:                                              ; preds = %140
  %153 = bitcast %"class.WTF::StringImpl"* %145 to i16*
  %154 = zext i32 %133 to i64
  %155 = getelementptr inbounds i16, i16* %153, i64 %154
  %156 = load i16, i16* %155, align 2
  br label %157

157:                                              ; preds = %129, %136, %146, %152
  %158 = phi i16 [ 0, %136 ], [ 0, %129 ], [ %151, %146 ], [ %156, %152 ]
  %159 = zext i16 %158 to i32
  %160 = call zeroext i1 @_ZN5blink9Character17HasDefiniteScriptEi(i32 %159) #12
  br i1 %160, label %235, label %161

161:                                              ; preds = %127, %157
  %162 = add nuw i32 %85, 1
  %163 = call %"struct.blink::ReshapeQueueItem"* @_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv(%"class.WTF::DequeConstIterator"* nonnull %6)
  %164 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %163, i64 0, i32 2
  %165 = load i32, i32* %164, align 4
  %166 = icmp ult i32 %162, %165
  br i1 %166, label %84, label %223

167:                                              ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #12
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #12
  %168 = icmp eq %"class.WTF::StringImpl"* %74, null
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 1
  %170 = bitcast %"class.WTF::StringImpl"* %169 to i16*
  %171 = select i1 %168, i16* null, i16* %170
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 32, i1 false)
  %172 = call %"struct.blink::ReshapeQueueItem"* @_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv(%"class.WTF::DequeConstIterator"* nonnull %6)
  %173 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %172, i64 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds i16, i16* %171, i64 %175
  %177 = call %"struct.blink::ReshapeQueueItem"* @_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv(%"class.WTF::DequeConstIterator"* nonnull %6)
  %178 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %177, i64 0, i32 2
  %179 = load i32, i32* %178, align 4
  call void @_ZN5blink17UTF16TextIteratorC1EPKDsi(%"class.blink::UTF16TextIterator"* nonnull %11, i16* %176, i32 %179) #12
  %180 = load i32, i32* %39, align 8
  %181 = load i32, i32* %40, align 4
  %182 = icmp slt i32 %180, %181
  br i1 %182, label %183, label %220

183:                                              ; preds = %167
  %184 = load i16*, i16** %38, align 8
  br label %185

185:                                              ; preds = %183, %211
  %186 = phi i16* [ %215, %211 ], [ %184, %183 ]
  %187 = phi i64 [ %207, %211 ], [ %44, %183 ]
  %188 = load i16, i16* %186, align 2
  %189 = zext i16 %188 to i32
  store i32 %189, i32* %10, align 4
  store i32 1, i32* %41, align 8
  %190 = and i32 %189, 63488
  %191 = icmp eq i32 %190, 55296
  br i1 %191, label %192, label %194

192:                                              ; preds = %185
  %193 = call zeroext i1 @_ZN5blink17UTF16TextIterator20ConsumeSurrogatePairERi(%"class.blink::UTF16TextIterator"* nonnull %11, i32* nonnull dereferenceable(4) %10) #12
  br i1 %193, label %194, label %220

194:                                              ; preds = %185, %192
  %195 = load i32, i32* %18, align 4
  %196 = load i32, i32* %34, align 8
  %197 = icmp eq i32 %195, %196
  br i1 %197, label %205, label %198, !prof !2

198:                                              ; preds = %194
  %199 = load i32*, i32** %35, align 8
  %200 = zext i32 %195 to i64
  %201 = getelementptr inbounds i32, i32* %199, i64 %200
  %202 = load i32, i32* %10, align 4
  store i32 %202, i32* %201, align 4
  %203 = load i32, i32* %18, align 4
  %204 = add i32 %203, 1
  store i32 %204, i32* %18, align 4
  br label %206

205:                                              ; preds = %194
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.295"* %3, i32* nonnull dereferenceable(4) %10) #12
  br label %206

206:                                              ; preds = %198, %205
  %207 = add i64 %187, 1
  br i1 %2, label %211, label %208

208:                                              ; preds = %206
  %209 = load i32, i32* %10, align 4
  %210 = call zeroext i1 @_ZN5blink9Character17HasDefiniteScriptEi(i32 %209) #12
  br i1 %210, label %222, label %211

211:                                              ; preds = %208, %206
  %212 = load i32, i32* %41, align 8
  %213 = load i16*, i16** %38, align 8
  %214 = zext i32 %212 to i64
  %215 = getelementptr inbounds i16, i16* %213, i64 %214
  store i16* %215, i16** %38, align 8
  %216 = load i32, i32* %39, align 8
  %217 = add i32 %216, %212
  store i32 %217, i32* %39, align 8
  %218 = load i32, i32* %40, align 4
  %219 = icmp slt i32 %217, %218
  br i1 %219, label %185, label %220

220:                                              ; preds = %211, %192, %167
  %221 = phi i64 [ %44, %167 ], [ %187, %192 ], [ %207, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #12
  br label %223

222:                                              ; preds = %208
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #12
  br label %235

223:                                              ; preds = %161, %79, %220
  %224 = phi i64 [ %221, %220 ], [ %44, %79 ], [ %128, %161 ]
  %225 = load i32, i32* %21, align 8
  %226 = load %"class.WTF::Deque.244"*, %"class.WTF::Deque.244"** %20, align 8
  %227 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %226, i64 0, i32 0, i32 0, i32 0, i32 1
  %228 = load i32, i32* %227, align 8
  %229 = add i32 %228, -1
  %230 = icmp eq i32 %225, %229
  %231 = add i32 %225, 1
  %232 = select i1 %230, i32 0, i32 %231
  store i32 %232, i32* %21, align 8
  %233 = load i32, i32* %14, align 4, !noalias !8
  %234 = icmp eq i32 %232, %233
  br i1 %234, label %236, label %43

235:                                              ; preds = %157, %222
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  br label %239

236:                                              ; preds = %43, %223, %17
  %237 = phi i64 [ 0, %17 ], [ %224, %223 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %238 = icmp ne i64 %237, 0
  br label %239

239:                                              ; preds = %236, %235, %4
  %240 = phi i1 [ false, %4 ], [ %238, %236 ], [ true, %235 ]
  ret i1 %240
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::ReshapeQueueItem"* @_ZNK3WTF18DequeConstIteratorIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEEptEv(%"class.WTF::DequeConstIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::Deque.244"*, %"class.WTF::Deque.244"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = icmp eq i32 %8, %12
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  store i8* null, i8** %6, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %17, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %3) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %26 = load %"class.WTF::Deque.244"*, %"class.WTF::Deque.244"** %9, align 8
  %27 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %27, align 8
  %29 = load i32, i32* %7, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %28, i64 %30
  ret %"struct.blink::ReshapeQueueItem"* %31
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink9Character17HasDefiniteScriptEi(i32) local_unnamed_addr #2

declare void @_ZN5blink17UTF16TextIteratorC1EPKDsi(%"class.blink::UTF16TextIterator"*, i16*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14HarfBuzzShaper12ShapeSegmentEPNS_9RangeDataERKNS_12RunSegmenter17RunSegmenterRangeEPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"*, %"struct.blink::RangeData"*, %"struct.blink::RunSegmenter::RunSegmenterRange"* nocapture readonly dereferenceable(20), %"class.blink::ShapeResult"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.absl::optional.368", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.blink::SmallCapsIterator", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"struct.blink::(anonymous namespace)::TrackEmoji", align 4
  %10 = alloca %"class.blink::OpenTypeCapsSupport", align 8
  %11 = alloca %"class.blink::FontFallbackIterator", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.WTF::Vector.295", align 8
  %14 = alloca %"struct.blink::ReshapeQueueItem", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.blink::OpenTypeCapsSupport", align 8
  %17 = alloca %"class.blink::CaseMappingHarfBuzzBufferFiller", align 8
  %18 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 1
  %19 = load %"class.blink::Font"*, %"class.blink::Font"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %19, i64 0, i32 0, i32 3, i32 0
  %22 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutLocale"* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %4
  %25 = tail call dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() #12
  br label %26

26:                                               ; preds = %4, %24
  %27 = phi %"class.blink::LayoutLocale"* [ %25, %24 ], [ %22, %4 ]
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %27, i64 0, i32 6
  %29 = load %struct.hb_language_impl_t*, %struct.hb_language_impl_t** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %19, i64 0, i32 0, i32 12, i32 0
  %31 = bitcast %"struct.blink::FontDescription::BitFields"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 112
  %34 = icmp ne i64 %33, 0
  %35 = bitcast %"class.blink::OpenTypeCapsSupport"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12
  %36 = bitcast %"class.blink::OpenTypeCapsSupport"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  call void @_ZN5blink19OpenTypeCapsSupportC1Ev(%"class.blink::OpenTypeCapsSupport"* nonnull %10) #12
  %37 = bitcast %"class.blink::FontFallbackIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %37) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 112, i1 false)
  %38 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %2, i64 0, i32 4
  %39 = load i32, i32* %38, align 4
  %40 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %19) #12, !noalias !11
  %41 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %19, i64 0, i32 1, i32 0
  %42 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %41, align 8, !noalias !11
  %43 = icmp eq %"class.blink::FontFallbackList"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %26
  %45 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %42, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %45) #12
  br label %46

46:                                               ; preds = %26, %44
  call void @_ZN5blink20FontFallbackIteratorC1ERKNS_15FontDescriptionE13scoped_refptrINS_16FontFallbackListEENS_20FontFallbackPriorityE(%"class.blink::FontFallbackIterator"* nonnull %11, %"class.blink::FontDescription"* dereferenceable(80) %20, %"class.blink::FontFallbackList"* %42, i32 %39) #12
  %47 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6
  %48 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 2
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %56, label %53

53:                                               ; preds = %46
  %54 = add i32 %52, 1
  %55 = icmp eq i32 %54, %49
  br i1 %55, label %65, label %67

56:                                               ; preds = %46
  %57 = icmp eq i32 %52, 0
  %58 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  br i1 %57, label %63, label %60

60:                                               ; preds = %56
  %61 = add i32 %59, -1
  %62 = icmp eq i32 %52, %61
  br i1 %62, label %65, label %67

63:                                               ; preds = %56
  %64 = icmp eq i32 %59, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %63, %60, %53
  call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %47) #12
  %66 = load i32, i32* %51, align 4
  br label %67

67:                                               ; preds = %53, %60, %63, %65
  %68 = phi i32 [ %52, %53 ], [ %52, %60 ], [ 0, %63 ], [ %66, %65 ]
  %69 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %69, align 8
  %71 = zext i32 %68 to i64
  %72 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, -1
  %75 = icmp eq i32 %68, %74
  %76 = add i32 %68, 1
  %77 = select i1 %75, i32 0, i32 %76
  store i32 %77, i32* %51, align 4
  %78 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %70, i64 %71, i32 0
  store i32 0, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %70, i64 %71, i32 1
  store i32 0, i32* %79, align 4
  %80 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %70, i64 %71, i32 2
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %2, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %2, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = sub i32 %84, %82
  %86 = load i32, i32* %48, align 8
  %87 = icmp eq i32 %86, 0
  %88 = load i32, i32* %51, align 4
  br i1 %87, label %92, label %89

89:                                               ; preds = %67
  %90 = add i32 %88, 1
  %91 = icmp eq i32 %90, %86
  br i1 %91, label %100, label %102

92:                                               ; preds = %67
  %93 = icmp eq i32 %88, 0
  %94 = load i32, i32* %72, align 8
  br i1 %93, label %98, label %95

95:                                               ; preds = %92
  %96 = add i32 %94, -1
  %97 = icmp eq i32 %88, %96
  br i1 %97, label %100, label %102

98:                                               ; preds = %92
  %99 = icmp eq i32 %94, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %98, %95, %89
  call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %47) #12
  %101 = load i32, i32* %51, align 4
  br label %102

102:                                              ; preds = %89, %95, %98, %100
  %103 = phi i32 [ %88, %89 ], [ %88, %95 ], [ 0, %98 ], [ %101, %100 ]
  %104 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %69, align 8
  %105 = zext i32 %103 to i64
  %106 = load i32, i32* %72, align 8
  %107 = add i32 %106, -1
  %108 = icmp eq i32 %103, %107
  %109 = add i32 %103, 1
  %110 = select i1 %108, i32 0, i32 %109
  store i32 %110, i32* %51, align 4
  %111 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %104, i64 %105, i32 0
  store i32 1, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %104, i64 %105, i32 1
  store i32 %82, i32* %112, align 4
  %113 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %104, i64 %105, i32 2
  store i32 %85, i32* %113, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #12
  store i8 0, i8* %12, align 1
  %114 = bitcast %"class.WTF::Vector.295"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #12
  %115 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %13, i64 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %13, i64 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %13, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 16, i1 false) #12
  %118 = call zeroext i1 @_ZNK5blink20FontFallbackIterator13NeedsHintListEv(%"class.blink::FontFallbackIterator"* nonnull %11) #12
  br i1 %118, label %119, label %134

119:                                              ; preds = %102
  %120 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %121 = load i32, i32* %120, align 8
  %122 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 3
  %123 = load i32, i32* %122, align 4
  %124 = sub i32 %121, %123
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %134, label %126

126:                                              ; preds = %119
  %127 = zext i32 %124 to i64
  %128 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %127) #12
  %129 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %128, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12
  %130 = ptrtoint i8* %129 to i64
  %131 = bitcast %"class.WTF::Vector.295"* %13 to i64*
  store atomic i64 %130, i64* %131 monotonic, align 8
  %132 = lshr i64 %128, 2
  %133 = trunc i64 %132 to i32
  store i32 %133, i32* %116, align 8
  br label %134

134:                                              ; preds = %126, %119, %102
  %135 = load i32, i32* %48, align 8
  %136 = load i32, i32* %51, align 4
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %587, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.blink::ReshapeQueueItem"* %14 to i8*
  %140 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %14, i64 0, i32 0
  %141 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %14, i64 0, i32 1
  %142 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %14, i64 0, i32 2
  %143 = bitcast %"struct.blink::ReshapeQueueItem"* %14 to i64*
  %144 = bitcast i32* %15 to i8*
  %145 = bitcast %"class.blink::OpenTypeCapsSupport"* %16 to i8*
  %146 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %2, i64 0, i32 2
  %147 = getelementptr inbounds %"class.absl::optional.368", %"class.absl::optional.368"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %0, i64 0, i32 0, i32 0, i32 0
  %149 = getelementptr inbounds %"class.absl::optional.368", %"class.absl::optional.368"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.absl::optional.368", %"class.absl::optional.368"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %150, i64 0, i32 0, i32 0
  %152 = bitcast i32* %6 to i8*
  %153 = bitcast %"class.blink::SmallCapsIterator"* %7 to i8*
  %154 = getelementptr inbounds %"class.blink::SmallCapsIterator", %"class.blink::SmallCapsIterator"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 3
  %156 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 4
  %157 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 0
  %158 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %0, i64 0, i32 0
  %159 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %2, i64 0, i32 3
  %160 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 5
  %161 = getelementptr inbounds %"class.blink::FontFeatures", %"class.blink::FontFeatures"* %160, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 2
  %163 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %164 = getelementptr inbounds %"class.blink::FontFeatures", %"class.blink::FontFeatures"* %160, i64 0, i32 0, i32 0, i32 0, i32 0
  %165 = bitcast i32* %8 to i8*
  %166 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %11, i64 0, i32 4
  br label %167

167:                                              ; preds = %138, %582
  %168 = phi i32 [ %135, %138 ], [ %584, %582 ]
  %169 = phi i64 [ 0, %138 ], [ %583, %582 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %139) #12
  store i32 -1431655766, i32* %140, align 8
  store i32 -1431655766, i32* %141, align 4
  store i32 -1431655766, i32* %142, align 8
  %170 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %69, align 8
  %171 = zext i32 %168 to i64
  %172 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %170, i64 %171
  %173 = bitcast %"struct.blink::ReshapeQueueItem"* %172 to i64*
  %174 = load i64, i64* %173, align 4
  %175 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %170, i64 %171, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = add i32 %168, 1
  %178 = load i32, i32* %72, align 8
  %179 = add i32 %178, -1
  %180 = icmp eq i32 %168, %179
  %181 = select i1 %180, i32 0, i32 %177
  store i32 %181, i32* %48, align 8
  store i64 %174, i64* %143, align 8
  store i32 %176, i32* %142, align 8
  %182 = trunc i64 %174 to i32
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %214

184:                                              ; preds = %167
  %185 = call zeroext i1 @_ZNK5blink20FontFallbackIterator13NeedsHintListEv(%"class.blink::FontFallbackIterator"* nonnull %11) #12
  %186 = call zeroext i1 @_ZNK5blink14HarfBuzzShaper24CollectFallbackHintCharsERKN3WTF5DequeINS_16ReshapeQueueItemELj0ENS1_18PartitionAllocatorEEEbRNS1_6VectorIiLj0ES4_EE(%"class.blink::HarfBuzzShaper"* %0, %"class.WTF::Deque.244"* dereferenceable(24) %47, i1 zeroext %185, %"class.WTF::Vector.295"* nonnull dereferenceable(16) %13)
  br i1 %186, label %191, label %187

187:                                              ; preds = %184
  store i32 0, i32* %48, align 8
  store i32 0, i32* %51, align 4
  %188 = bitcast %"class.WTF::Deque.244"* %47 to i8**
  %189 = load i8*, i8** %188, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %189) #12
  %190 = bitcast %"class.WTF::Deque.244"* %47 to i64*
  store atomic i64 0, i64* %190 monotonic, align 8
  store i32 0, i32* %72, align 8
  br label %580

191:                                              ; preds = %184
  %192 = call %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator4NextERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"* nonnull %11, %"class.WTF::Vector.295"* nonnull dereferenceable(16) %13) #12
  %193 = ptrtoint %"class.blink::FontDataForRangeSet"* %192 to i64
  %194 = icmp eq i64 %169, 0
  br i1 %194, label %209, label %195

195:                                              ; preds = %191
  %196 = inttoptr i64 %169 to %"class.blink::FontDataForRangeSet"*
  %197 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %196, i64 0, i32 1, i32 0
  %198 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %197, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %198) #12
  %199 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %197, i64 0, i32 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %209

202:                                              ; preds = %195
  %203 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %197, i64 -2
  %204 = bitcast %"class.base::RefCounted.308"* %203 to %"class.blink::FontDataForRangeSet"*
  %205 = bitcast %"class.base::RefCounted.308"* %203 to void (%"class.blink::FontDataForRangeSet"*)***
  %206 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %205, align 8
  %207 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %206, i64 1
  %208 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %207, align 8
  call void %208(%"class.blink::FontDataForRangeSet"* nonnull %204) #12
  br label %209

209:                                              ; preds = %191, %195, %202
  %210 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %192, i64 0, i32 2, i32 0
  %211 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %210, align 8
  %212 = icmp eq %"class.blink::SimpleFontData"* %211, null
  br i1 %212, label %578, label %213

213:                                              ; preds = %209
  store i8 0, i8* %12, align 1
  br label %582

214:                                              ; preds = %167
  %215 = lshr i64 %174, 32
  %216 = trunc i64 %215 to i32
  %217 = inttoptr i64 %169 to %"class.blink::FontDataForRangeSet"*
  %218 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %217, i64 0, i32 2, i32 0
  %219 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %218, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #12
  store i32 0, i32* %15, align 4
  br i1 %34, label %220, label %350

220:                                              ; preds = %214
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #12
  %221 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %219, i64 0, i32 5
  %222 = call %"class.blink::HarfBuzzFace"* @_ZNK5blink16FontPlatformData15GetHarfBuzzFaceEv(%"class.blink::FontPlatformData"* %221) #12
  %223 = load i64, i64* %31, align 8
  %224 = lshr i64 %223, 4
  %225 = trunc i64 %224 to i32
  %226 = and i32 %225, 7
  %227 = load i32, i32* %146, align 4
  %228 = icmp eq i32 %227, -1
  br i1 %228, label %232, label %229, !prof !2

229:                                              ; preds = %220
  %230 = call i8* @uscript_getShortName_69(i32 %227) #12
  %231 = call i32 @hb_script_from_string(i8* %230, i32 -1) #12
  br label %232

232:                                              ; preds = %220, %229
  %233 = phi i32 [ %231, %229 ], [ 0, %220 ]
  call void @_ZN5blink19OpenTypeCapsSupportC1EPKNS_12HarfBuzzFaceENS_15FontDescription15FontVariantCapsE11hb_script_t(%"class.blink::OpenTypeCapsSupport"* nonnull %16, %"class.blink::HarfBuzzFace"* %222, i32 %226, i32 %233) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %145, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #12
  %234 = call zeroext i1 @_ZN5blink19OpenTypeCapsSupport21NeedsRunCaseSplittingEv(%"class.blink::OpenTypeCapsSupport"* nonnull %10) #12
  br i1 %234, label %238, label %235

235:                                              ; preds = %232
  %236 = load i32, i32* %141, align 4
  %237 = load i32, i32* %142, align 8
  br label %350

238:                                              ; preds = %232
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 16, i1 false) #12
  store i8 0, i8* %147, align 8
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %268, label %244

244:                                              ; preds = %238
  store %"class.WTF::StringImpl"* %239, %"class.WTF::StringImpl"** %149, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %245, label %262, label %246

246:                                              ; preds = %244
  %247 = load atomic i32, i32* %240 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %262

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i33
  %254 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %253, i33 1) #12
  %255 = extractvalue { i33, i1 } %254, 1
  %256 = extractvalue { i33, i1 } %254, 0
  %257 = icmp slt i33 %256, 0
  %258 = or i1 %255, %257
  br i1 %258, label %259, label %260, !prof !2

259:                                              ; preds = %250
  call void @llvm.trap() #12
  unreachable

260:                                              ; preds = %250
  %261 = trunc i33 %256 to i32
  store i32 %261, i32* %251, align 4
  br label %262

262:                                              ; preds = %260, %246, %244
  store i8 1, i8* %147, align 8
  call void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"* %150) #12
  %263 = load i8, i8* %147, align 8, !range !4
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %265, label %266, !prof !2

265:                                              ; preds = %262
  call void @llvm.trap() #12
  unreachable

266:                                              ; preds = %262
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  br label %268

268:                                              ; preds = %238, %266
  %269 = phi %"class.WTF::StringImpl"* [ %267, %266 ], [ %239, %238 ]
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 1
  %272 = bitcast %"class.WTF::StringImpl"* %271 to i16*
  %273 = select i1 %270, i16* null, i16* %272
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152) #12
  store i32 0, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %153) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 32, i1 false) #12
  %274 = load i32, i32* %141, align 4
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds i16, i16* %273, i64 %275
  %277 = load i32, i32* %142, align 8
  call void @_ZN5blink17SmallCapsIteratorC1EPKDsj(%"class.blink::SmallCapsIterator"* nonnull %7, i16* %276, i32 %277) #12
  %278 = call zeroext i1 @_ZN5blink17SmallCapsIterator7ConsumeEPjPNS0_17SmallCapsBehaviorE(%"class.blink::SmallCapsIterator"* nonnull %7, i32* nonnull %6, i32* nonnull %15) #12
  %279 = load i32, i32* %6, align 4
  %280 = icmp ne i32 %279, 0
  %281 = load i32, i32* %142, align 8
  %282 = icmp ugt i32 %281, %279
  %283 = and i1 %280, %282
  br i1 %283, label %284, label %316

284:                                              ; preds = %268
  %285 = load i32, i32* %141, align 4
  %286 = add i32 %285, %279
  %287 = sub i32 %281, %279
  %288 = load i32, i32* %48, align 8
  %289 = icmp eq i32 %288, 0
  %290 = load i32, i32* %51, align 4
  br i1 %289, label %294, label %291

291:                                              ; preds = %284
  %292 = add i32 %290, 1
  %293 = icmp eq i32 %292, %288
  br i1 %293, label %302, label %307

294:                                              ; preds = %284
  %295 = icmp eq i32 %290, 0
  %296 = load i32, i32* %72, align 8
  br i1 %295, label %300, label %297

297:                                              ; preds = %294
  %298 = add i32 %296, -1
  %299 = icmp eq i32 %290, %298
  br i1 %299, label %302, label %307

300:                                              ; preds = %294
  %301 = icmp eq i32 %296, 0
  br i1 %301, label %302, label %307

302:                                              ; preds = %300, %297, %291
  call void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"* %47) #12
  %303 = load i32, i32* %48, align 8
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %307

305:                                              ; preds = %302
  %306 = load i32, i32* %72, align 8
  br label %307

307:                                              ; preds = %305, %302, %300, %297, %291
  %308 = phi i32 [ %303, %302 ], [ %288, %291 ], [ %306, %305 ], [ %296, %300 ], [ %296, %297 ]
  %309 = add i32 %308, -1
  store i32 %309, i32* %48, align 8
  %310 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %69, align 8
  %311 = zext i32 %309 to i64
  %312 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %310, i64 %311, i32 0
  store i32 1, i32* %312, align 4
  %313 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %310, i64 %311, i32 1
  store i32 %286, i32* %313, align 4
  %314 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %310, i64 %311, i32 2
  store i32 %287, i32* %314, align 4
  %315 = load i32, i32* %6, align 4
  store i32 %315, i32* %142, align 8
  br label %316

316:                                              ; preds = %307, %268
  %317 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %154, align 8
  store %"class.blink::UTF16TextIterator"* null, %"class.blink::UTF16TextIterator"** %154, align 8
  %318 = icmp eq %"class.blink::UTF16TextIterator"* %317, null
  br i1 %318, label %321, label %319

319:                                              ; preds = %316
  %320 = bitcast %"class.blink::UTF16TextIterator"* %317 to i8*
  call void @free(i8* %320) #12
  br label %321

321:                                              ; preds = %319, %316
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %153) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152) #12
  %322 = load i8, i8* %147, align 8, !range !4
  %323 = icmp eq i8 %322, 0
  br i1 %323, label %341, label %324

324:                                              ; preds = %321
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %340, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %334, label %336

334:                                              ; preds = %327
  %335 = add i32 %333, -1
  store i32 %335, i32* %332, align 4
  br label %336

336:                                              ; preds = %334, %327
  %337 = phi i32 [ %335, %334 ], [ %333, %327 ]
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %325) #12
  br label %340

340:                                              ; preds = %339, %336, %324
  store i8 0, i8* %147, align 8
  br label %341

341:                                              ; preds = %321, %340
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147) #12
  %342 = load i32, i32* %155, align 4
  %343 = load i32, i32* %141, align 4
  %344 = load i32, i32* %142, align 8
  %345 = add i32 %344, %343
  %346 = icmp ult i32 %342, %345
  br i1 %346, label %347, label %577

347:                                              ; preds = %341
  %348 = load i32, i32* %156, align 8
  %349 = icmp ugt i32 %348, %343
  br i1 %349, label %350, label %577

350:                                              ; preds = %235, %347, %214
  %351 = phi i32 [ %237, %235 ], [ %344, %347 ], [ %176, %214 ]
  %352 = phi i32 [ %236, %235 ], [ %343, %347 ], [ %216, %214 ]
  %353 = load i32, i32* %155, align 4
  %354 = icmp ult i32 %353, %352
  %355 = select i1 %354, i32 %352, i32 %353
  %356 = add i32 %351, %352
  %357 = load i32, i32* %156, align 4
  %358 = icmp ult i32 %356, %357
  %359 = select i1 %358, i32 %356, i32 %357
  br i1 %34, label %360, label %381

360:                                              ; preds = %350
  %361 = load i32, i32* %15, align 4
  %362 = call i32 @_ZN5blink19OpenTypeCapsSupport15NeedsCaseChangeENS_17SmallCapsIterator17SmallCapsBehaviorE(%"class.blink::OpenTypeCapsSupport"* nonnull %10, i32 %361) #12
  %363 = load i32, i32* %15, align 4
  %364 = call zeroext i1 @_ZN5blink19OpenTypeCapsSupport18NeedsSyntheticFontENS_17SmallCapsIterator17SmallCapsBehaviorE(%"class.blink::OpenTypeCapsSupport"* nonnull %10, i32 %363) #12
  br i1 %364, label %365, label %381

365:                                              ; preds = %360
  %366 = call %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData17SmallCapsFontDataERKNS_15FontDescriptionE(%"class.blink::SimpleFontData"* %219, %"class.blink::FontDescription"* dereferenceable(80) %20) #12
  %367 = icmp eq %"class.blink::SimpleFontData"* %366, null
  br i1 %367, label %381, label %368

368:                                              ; preds = %365
  %369 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %366, i64 0, i32 0, i32 1, i32 0
  %370 = getelementptr inbounds %"class.base::RefCounted.35", %"class.base::RefCounted.35"* %369, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %370) #12
  %371 = getelementptr inbounds %"class.base::RefCounted.35", %"class.base::RefCounted.35"* %369, i64 0, i32 0, i32 0
  %372 = load i32, i32* %371, align 4
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %381

374:                                              ; preds = %368
  %375 = getelementptr inbounds %"class.base::RefCounted.35", %"class.base::RefCounted.35"* %369, i64 -2
  %376 = bitcast %"class.base::RefCounted.35"* %375 to %"class.blink::FontData"*
  %377 = bitcast %"class.base::RefCounted.35"* %375 to void (%"class.blink::FontData"*)***
  %378 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %377, align 8
  %379 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %378, i64 1
  %380 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %379, align 8
  call void %380(%"class.blink::FontData"* nonnull %376) #12
  br label %381

381:                                              ; preds = %374, %368, %365, %360, %350
  %382 = phi %"class.blink::SimpleFontData"* [ %219, %360 ], [ %219, %350 ], [ null, %365 ], [ %366, %368 ], [ %366, %374 ]
  %383 = phi i32 [ %362, %360 ], [ 0, %350 ], [ %362, %365 ], [ %362, %368 ], [ %362, %374 ]
  %384 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %21, align 8
  %385 = icmp eq %"class.blink::LayoutLocale"* %384, null
  br i1 %385, label %386, label %388

386:                                              ; preds = %381
  %387 = call dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() #12
  br label %388

388:                                              ; preds = %381, %386
  %389 = phi %"class.blink::LayoutLocale"* [ %387, %386 ], [ %384, %381 ]
  %390 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %389, i64 0, i32 2, i32 0, i32 0, i32 0
  %391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %390, align 8
  %392 = icmp eq %"class.WTF::StringImpl"* %391, null
  br i1 %392, label %410, label %393

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load atomic i32, i32* %394 monotonic, align 4
  %396 = and i32 %395, 2
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %410

398:                                              ; preds = %393
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  %401 = zext i32 %400 to i33
  %402 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %401, i33 1) #12
  %403 = extractvalue { i33, i1 } %402, 1
  %404 = extractvalue { i33, i1 } %402, 0
  %405 = icmp slt i33 %404, 0
  %406 = or i1 %403, %405
  br i1 %406, label %407, label %408, !prof !2

407:                                              ; preds = %398
  call void @llvm.trap() #12
  unreachable

408:                                              ; preds = %398
  %409 = trunc i33 %404 to i32
  store i32 %409, i32* %399, align 4
  br label %410

410:                                              ; preds = %388, %393, %408
  %411 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %157, align 8
  %412 = sub i32 %359, %355
  call void @_ZN5blink31CaseMappingHarfBuzzBufferFillerC1ENS_13CaseMapIntendEN3WTF12AtomicStringEP11hb_buffer_tRKNS2_6StringEjj(%"class.blink::CaseMappingHarfBuzzBufferFiller"* nonnull %17, i32 %383, %"class.WTF::StringImpl"* %391, %struct.hb_buffer_t* %411, %"class.WTF::String"* dereferenceable(8) %158, i32 %355, i32 %412) #12
  %413 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %382, i64 0, i32 5
  %414 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %382, i64 0, i32 5, i32 7
  %415 = load i32, i32* %414, align 8
  switch i32 %415, label %433 [
    i32 3, label %416
    i32 2, label %421
  ]

416:                                              ; preds = %410
  %417 = load i64, i64* %31, align 8
  %418 = trunc i64 %417 to i32
  %419 = icmp slt i32 %418, 0
  %420 = select i1 %419, i8 3, i8 1
  br label %433

421:                                              ; preds = %410
  %422 = load i32, i32* %159, align 4
  %423 = icmp eq i32 %422, 0
  %424 = load i64, i64* %31, align 8
  br i1 %423, label %425, label %429

425:                                              ; preds = %421
  %426 = trunc i64 %424 to i32
  %427 = icmp slt i32 %426, 0
  %428 = select i1 %427, i8 3, i8 1
  br label %433

429:                                              ; preds = %421
  %430 = lshr i64 %424, 30
  %431 = trunc i64 %430 to i8
  %432 = and i8 %431, 2
  br label %433

433:                                              ; preds = %410, %416, %425, %429
  %434 = phi i8 [ %420, %416 ], [ %428, %425 ], [ %432, %429 ], [ 0, %410 ]
  %435 = load i32, i32* %15, align 4
  %436 = call i32 @_ZN5blink19OpenTypeCapsSupport16FontFeatureToUseENS_17SmallCapsIterator17SmallCapsBehaviorE(%"class.blink::OpenTypeCapsSupport"* nonnull %10, i32 %435) #12
  %437 = add i32 %436, -1
  %438 = icmp ult i32 %437, 2
  br i1 %438, label %439, label %442

439:                                              ; preds = %433
  %440 = icmp eq i32 %436, 2
  call void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE6insertIRKS1_EEvjOT_(%"class.WTF::Vector.239"* %161, i32 0, %struct.hb_feature_t* nonnull dereferenceable(16) @_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4smcp) #12
  br i1 %440, label %441, label %451

441:                                              ; preds = %439
  call void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE6insertIRKS1_EEvjOT_(%"class.WTF::Vector.239"* %161, i32 0, %struct.hb_feature_t* nonnull dereferenceable(16) @_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4c2sc) #12
  br label %451

442:                                              ; preds = %433
  %443 = add i32 %436, -3
  %444 = icmp ult i32 %443, 2
  br i1 %444, label %445, label %448

445:                                              ; preds = %442
  call void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE6insertIRKS1_EEvjOT_(%"class.WTF::Vector.239"* %161, i32 0, %struct.hb_feature_t* nonnull dereferenceable(16) @_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4pcap) #12
  %446 = icmp eq i32 %436, 4
  br i1 %446, label %447, label %451

447:                                              ; preds = %445
  call void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE6insertIRKS1_EEvjOT_(%"class.WTF::Vector.239"* %161, i32 0, %struct.hb_feature_t* nonnull dereferenceable(16) @_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4c2pc) #12
  br label %451

448:                                              ; preds = %442
  switch i32 %436, label %451 [
    i32 5, label %449
    i32 6, label %450
  ]

449:                                              ; preds = %448
  call void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE6insertIRKS1_EEvjOT_(%"class.WTF::Vector.239"* %161, i32 0, %struct.hb_feature_t* nonnull dereferenceable(16) @_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4unic) #12
  br label %451

450:                                              ; preds = %448
  call void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE6insertIRKS1_EEvjOT_(%"class.WTF::Vector.239"* %161, i32 0, %struct.hb_feature_t* nonnull dereferenceable(16) @_ZZN5blink12_GLOBAL__N_132CapsFeatureSettingsScopedOverlay19OverlayCapsFeaturesENS_15FontDescription15FontVariantCapsEE4titl) #12
  br label %451

451:                                              ; preds = %439, %441, %445, %447, %448, %449, %450
  %452 = phi i32 [ 2, %441 ], [ 1, %439 ], [ 2, %447 ], [ 1, %445 ], [ 0, %448 ], [ 1, %450 ], [ 1, %449 ]
  %453 = load %"class.blink::Font"*, %"class.blink::Font"** %18, align 8
  %454 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %453, i64 0, i32 0, i32 12, i32 0
  %455 = bitcast %"struct.blink::FontDescription::BitFields"* %454 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = and i64 %456, 2
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %463, label %459

459:                                              ; preds = %451
  %460 = and i8 %434, 1
  %461 = icmp eq i8 %460, 0
  %462 = select i1 %461, i32 4, i32 6
  br label %463

463:                                              ; preds = %451, %459
  %464 = phi i32 [ 4, %451 ], [ %462, %459 ]
  %465 = load i8, i8* %162, align 8
  %466 = icmp eq i8 %465, 1
  %467 = zext i1 %466 to i32
  %468 = or i32 %464, %467
  %469 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %157, align 8
  %470 = load i32, i32* %163, align 4
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %474, label %472

472:                                              ; preds = %463
  %473 = load %struct.hb_feature_t*, %struct.hb_feature_t** %164, align 8
  br label %474

474:                                              ; preds = %463, %472
  %475 = phi %struct.hb_feature_t* [ %473, %472 ], [ null, %463 ]
  %476 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %217, i64 0, i32 3, i32 0
  %477 = load %"class.blink::UnicodeRangeSet"*, %"class.blink::UnicodeRangeSet"** %476, align 8
  %478 = icmp eq %"class.blink::UnicodeRangeSet"* %477, null
  br i1 %478, label %481, label %479

479:                                              ; preds = %474
  %480 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %477, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %480) #12
  br label %481

481:                                              ; preds = %474, %479
  %482 = load i32, i32* %146, align 4
  %483 = call %"class.blink::HarfBuzzFace"* @_ZNK5blink16FontPlatformData15GetHarfBuzzFaceEv(%"class.blink::FontPlatformData"* %413) #12
  %484 = icmp eq %"class.blink::HarfBuzzFace"* %483, null
  br i1 %484, label %551, label %485

485:                                              ; preds = %481
  call void @hb_buffer_set_language(%struct.hb_buffer_t* %469, %struct.hb_language_impl_t* %29) #12
  %486 = icmp eq i32 %482, -1
  br i1 %486, label %490, label %487, !prof !2

487:                                              ; preds = %485
  %488 = call i8* @uscript_getShortName_69(i32 %482) #12
  %489 = call i32 @hb_script_from_string(i8* %488, i32 -1) #12
  br label %490

490:                                              ; preds = %487, %485
  %491 = phi i32 [ %489, %487 ], [ 0, %485 ]
  call void @hb_buffer_set_script(%struct.hb_buffer_t* %469, i32 %491) #12
  call void @hb_buffer_set_direction(%struct.hb_buffer_t* %469, i32 %468) #12
  %492 = icmp ne i32 %464, 6
  %493 = zext i1 %492 to i32
  %494 = call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* nonnull %483, %"class.blink::UnicodeRangeSet"* %477, i32 %493) #12
  call void @hb_shape(%struct.hb_font_t* %494, %struct.hb_buffer_t* %469, %struct.hb_feature_t* %475, i32 %470) #12
  %495 = call zeroext i1 @_ZN5blink12HarfBuzzFace22ShouldSubpixelPositionEv(%"class.blink::HarfBuzzFace"* nonnull %483) #12
  br i1 %495, label %572, label %496

496:                                              ; preds = %490
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #12
  store i32 -1431655766, i32* %8, align 4
  %497 = call %struct.hb_glyph_position_t* @hb_buffer_get_glyph_positions(%struct.hb_buffer_t* %469, i32* nonnull %8) #12
  %498 = load i32, i32* %8, align 4
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %550, label %500

500:                                              ; preds = %496, %545
  %501 = phi i64 [ %546, %545 ], [ 0, %496 ]
  %502 = getelementptr inbounds %struct.hb_glyph_position_t, %struct.hb_glyph_position_t* %497, i64 %501, i32 2
  %503 = load i32, i32* %502, align 4
  %504 = and i32 %503, 65535
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %512, label %506

506:                                              ; preds = %500
  %507 = sitofp i32 %503 to float
  %508 = fmul float %507, 0x3EF0000000000000
  %509 = call float @llvm.round.f32(float %508) #12
  %510 = fptosi float %509 to i32
  %511 = shl i32 %510, 16
  store i32 %511, i32* %502, align 4
  br label %512

512:                                              ; preds = %506, %500
  %513 = getelementptr inbounds %struct.hb_glyph_position_t, %struct.hb_glyph_position_t* %497, i64 %501, i32 3
  %514 = load i32, i32* %513, align 4
  %515 = and i32 %514, 65535
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %523, label %517

517:                                              ; preds = %512
  %518 = sitofp i32 %514 to float
  %519 = fmul float %518, 0x3EF0000000000000
  %520 = call float @llvm.round.f32(float %519) #12
  %521 = fptosi float %520 to i32
  %522 = shl i32 %521, 16
  store i32 %522, i32* %513, align 4
  br label %523

523:                                              ; preds = %517, %512
  %524 = getelementptr inbounds %struct.hb_glyph_position_t, %struct.hb_glyph_position_t* %497, i64 %501, i32 0
  %525 = load i32, i32* %524, align 4
  %526 = and i32 %525, 65535
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %534, label %528

528:                                              ; preds = %523
  %529 = sitofp i32 %525 to float
  %530 = fmul float %529, 0x3EF0000000000000
  %531 = call float @llvm.round.f32(float %530) #12
  %532 = fptosi float %531 to i32
  %533 = shl i32 %532, 16
  store i32 %533, i32* %524, align 4
  br label %534

534:                                              ; preds = %528, %523
  %535 = getelementptr inbounds %struct.hb_glyph_position_t, %struct.hb_glyph_position_t* %497, i64 %501, i32 1
  %536 = load i32, i32* %535, align 4
  %537 = and i32 %536, 65535
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %545, label %539

539:                                              ; preds = %534
  %540 = sitofp i32 %536 to float
  %541 = fmul float %540, 0x3EF0000000000000
  %542 = call float @llvm.round.f32(float %541) #12
  %543 = fptosi float %542 to i32
  %544 = shl i32 %543, 16
  store i32 %544, i32* %535, align 4
  br label %545

545:                                              ; preds = %539, %534
  %546 = add nuw nsw i64 %501, 1
  %547 = load i32, i32* %8, align 4
  %548 = zext i32 %547 to i64
  %549 = icmp ult i64 %546, %548
  br i1 %549, label %500, label %550

550:                                              ; preds = %545, %496
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #12
  br label %572

551:                                              ; preds = %481
  br i1 %478, label %572, label %552

552:                                              ; preds = %551
  %553 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %477, i64 0, i32 0, i32 0
  %554 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %477, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %554) #12
  %555 = getelementptr inbounds %"class.blink::UnicodeRangeSet", %"class.blink::UnicodeRangeSet"* %477, i64 0, i32 0, i32 0, i32 0, i32 0
  %556 = load i32, i32* %555, align 4
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %558, label %572

558:                                              ; preds = %552
  %559 = getelementptr inbounds %"class.base::RefCounted.311", %"class.base::RefCounted.311"* %553, i64 2
  %560 = bitcast %"class.base::RefCounted.311"* %559 to %"struct.blink::UnicodeRange"**
  %561 = load %"struct.blink::UnicodeRange"*, %"struct.blink::UnicodeRange"** %560, align 8
  %562 = icmp eq %"struct.blink::UnicodeRange"* %561, null
  %563 = bitcast %"struct.blink::UnicodeRange"* %561 to i8*
  br i1 %562, label %570, label %564, !prof !3

564:                                              ; preds = %558
  %565 = getelementptr inbounds %"class.base::RefCounted.311", %"class.base::RefCounted.311"* %553, i64 5, i32 0, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %569, label %568, !prof !2

568:                                              ; preds = %564
  store i32 0, i32* %565, align 4
  br label %569

569:                                              ; preds = %568, %564
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %563) #12
  br label %570

570:                                              ; preds = %569, %558
  %571 = bitcast %"class.blink::UnicodeRangeSet"* %477 to i8*
  call void @free(i8* %571) #12
  br label %572

572:                                              ; preds = %490, %550, %551, %552, %570
  %573 = load i32, i32* %146, align 4
  %574 = load i32, i32* %166, align 8
  %575 = icmp eq i32 %574, 6
  call void @_ZNK5blink14HarfBuzzShaper19ExtractShapeResultsEPNS_9RangeDataERbRKNS_16ReshapeQueueItemEPKNS_14SimpleFontDataE11UScriptCodeNS_24CanvasRotationInVerticalEbPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* %0, %"struct.blink::RangeData"* %1, i8* nonnull dereferenceable(1) %12, %"struct.blink::ReshapeQueueItem"* nonnull dereferenceable(12) %14, %"class.blink::SimpleFontData"* %382, i32 %573, i8 signext %434, i1 zeroext %575, %"class.blink::ShapeResult"* %3)
  %576 = load %struct.hb_buffer_t*, %struct.hb_buffer_t** %157, align 8
  call void @hb_buffer_reset(%struct.hb_buffer_t* %576) #12
  call void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector.239"* %161, i32 0, i32 %452) #12
  br label %577

577:                                              ; preds = %341, %347, %572
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #12
  br label %582

578:                                              ; preds = %209
  %579 = ptrtoint %"class.blink::FontDataForRangeSet"* %192 to i64
  br label %580

580:                                              ; preds = %578, %187
  %581 = phi i64 [ %169, %187 ], [ %579, %578 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %139) #12
  br label %587

582:                                              ; preds = %577, %213
  %583 = phi i64 [ %193, %213 ], [ %169, %577 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %139) #12
  %584 = load i32, i32* %48, align 8
  %585 = load i32, i32* %51, align 4
  %586 = icmp eq i32 %584, %585
  br i1 %586, label %587, label %167

587:                                              ; preds = %582, %134, %580
  %588 = phi i64 [ %581, %580 ], [ 0, %134 ], [ %583, %582 ]
  %589 = load i32, i32* %38, align 4
  %590 = icmp eq i32 %589, 2
  br i1 %590, label %591, label %613

591:                                              ; preds = %587
  %592 = load i32, i32* %81, align 4
  %593 = load i32, i32* %83, align 4
  %594 = getelementptr inbounds %"struct.blink::(anonymous namespace)::TrackEmoji", %"struct.blink::(anonymous namespace)::TrackEmoji"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %594) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %594, i8* align 4 getelementptr inbounds ({ i8, [3 x i8], i32, i8, [3 x i8], i32, i32 }, { i8, [3 x i8], i32, i8, [3 x i8], i32, i32 }* @__const._ZN5blink12_GLOBAL__N_128ComputeBrokenEmojiPercentageEPNS_11ShapeResultEjj.track_emoji, i64 0, i32 0), i64 20, i1 false) #12
  %595 = call float @_ZNK5blink11ShapeResult12ForEachGlyphEfjjjPFvPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataEES1_(%"class.blink::ShapeResult"* %3, float 0.000000e+00, i32 %592, i32 %593, i32 0, void (i8*, i32, i16, <2 x float>, float, i1, i8, %"class.blink::SimpleFontData"*)* nonnull @_ZN5blink12_GLOBAL__N_119IdentifyBrokenEmojiEPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataE, i8* nonnull %594) #12
  %596 = getelementptr inbounds %"struct.blink::(anonymous namespace)::TrackEmoji", %"struct.blink::(anonymous namespace)::TrackEmoji"* %9, i64 0, i32 2
  %597 = load i8, i8* %596, align 4, !range !4
  %598 = zext i8 %597 to i32
  %599 = getelementptr inbounds %"struct.blink::(anonymous namespace)::TrackEmoji", %"struct.blink::(anonymous namespace)::TrackEmoji"* %9, i64 0, i32 3
  %600 = load i32, i32* %599, align 4
  %601 = add i32 %600, %598
  store i32 %601, i32* %599, align 4
  %602 = getelementptr inbounds %"struct.blink::(anonymous namespace)::TrackEmoji", %"struct.blink::(anonymous namespace)::TrackEmoji"* %9, i64 0, i32 4
  %603 = load i32, i32* %602, align 4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %594) #12
  %604 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %605 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %604, align 8
  %606 = icmp eq %"class.base::internal::BindStateBase"* %605, null
  br i1 %606, label %611, label %607

607:                                              ; preds = %591
  %608 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %605, i64 0, i32 1
  %609 = bitcast void ()** %608 to void (%"class.base::internal::BindStateBase"*, i32, i32)**
  %610 = load void (%"class.base::internal::BindStateBase"*, i32, i32)*, void (%"class.base::internal::BindStateBase"*, i32, i32)** %609, align 8
  call void %610(%"class.base::internal::BindStateBase"* nonnull %605, i32 %603, i32 %601) #12
  br label %613

611:                                              ; preds = %591
  %612 = load %"class.blink::Font"*, %"class.blink::Font"** %18, align 8
  call void @_ZNK5blink4Font31ReportEmojiSegmentGlyphCoverageEjj(%"class.blink::Font"* %612, i32 %603, i32 %601) #12
  br label %613

613:                                              ; preds = %607, %611, %587
  %614 = icmp eq i64 %588, 0
  br i1 %614, label %629, label %615

615:                                              ; preds = %613
  %616 = inttoptr i64 %588 to %"class.blink::FontDataForRangeSet"*
  %617 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %616, i64 0, i32 1, i32 0
  %618 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %617, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %618) #12
  %619 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %617, i64 0, i32 0, i32 0
  %620 = load i32, i32* %619, align 4
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %629

622:                                              ; preds = %615
  %623 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %617, i64 -2
  %624 = bitcast %"class.base::RefCounted.308"* %623 to %"class.blink::FontDataForRangeSet"*
  %625 = bitcast %"class.base::RefCounted.308"* %623 to void (%"class.blink::FontDataForRangeSet"*)***
  %626 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %625, align 8
  %627 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %626, i64 1
  %628 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %627, align 8
  call void %628(%"class.blink::FontDataForRangeSet"* nonnull %624) #12
  br label %629

629:                                              ; preds = %613, %615, %622
  %630 = load i32*, i32** %115, align 8
  %631 = icmp eq i32* %630, null
  %632 = bitcast i32* %630 to i8*
  br i1 %631, label %638, label %633, !prof !3

633:                                              ; preds = %629
  %634 = load i32, i32* %117, align 4
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %637, label %636, !prof !2

636:                                              ; preds = %633
  store i32 0, i32* %117, align 4
  br label %637

637:                                              ; preds = %636, %633
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %632) #12
  store i32* null, i32** %115, align 8
  br label %638

638:                                              ; preds = %629, %637
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #12
  call void @_ZN5blink20FontFallbackIteratorD2Ev(%"class.blink::FontFallbackIterator"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  ret void
}

declare void @_ZN5blink19OpenTypeCapsSupportC1Ev(%"class.blink::OpenTypeCapsSupport"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5blink20FontFallbackIterator13NeedsHintListEv(%"class.blink::FontFallbackIterator"*) local_unnamed_addr #2

declare %"class.blink::FontDataForRangeSet"* @_ZN5blink20FontFallbackIterator4NextERKN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::FontFallbackIterator"*, %"class.WTF::Vector.295"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::HarfBuzzFace"* @_ZNK5blink16FontPlatformData15GetHarfBuzzFaceEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #2

declare void @_ZN5blink19OpenTypeCapsSupportC1EPKNS_12HarfBuzzFaceENS_15FontDescription15FontVariantCapsE11hb_script_t(%"class.blink::OpenTypeCapsSupport"*, %"class.blink::HarfBuzzFace"*, i32, i32) unnamed_addr #2

declare zeroext i1 @_ZN5blink19OpenTypeCapsSupport21NeedsRunCaseSplittingEv(%"class.blink::OpenTypeCapsSupport"*) local_unnamed_addr #2

declare i32 @_ZN5blink19OpenTypeCapsSupport15NeedsCaseChangeENS_17SmallCapsIterator17SmallCapsBehaviorE(%"class.blink::OpenTypeCapsSupport"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink19OpenTypeCapsSupport18NeedsSyntheticFontENS_17SmallCapsIterator17SmallCapsBehaviorE(%"class.blink::OpenTypeCapsSupport"*, i32) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData17SmallCapsFontDataERKNS_15FontDescriptionE(%"class.blink::SimpleFontData"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN5blink31CaseMappingHarfBuzzBufferFillerC1ENS_13CaseMapIntendEN3WTF12AtomicStringEP11hb_buffer_tRKNS2_6StringEjj(%"class.blink::CaseMappingHarfBuzzBufferFiller"*, i32, %"class.WTF::StringImpl"*, %struct.hb_buffer_t*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #2

declare i32 @_ZN5blink19OpenTypeCapsSupport16FontFeatureToUseENS_17SmallCapsIterator17SmallCapsBehaviorE(%"class.blink::OpenTypeCapsSupport"*, i32) local_unnamed_addr #2

declare void @hb_buffer_reset(%struct.hb_buffer_t*) local_unnamed_addr #2

declare void @_ZNK5blink4Font31ReportEmojiSegmentGlyphCoverageEjj(%"class.blink::Font"*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20FontFallbackIteratorD2Ev(%"class.blink::FontFallbackIterator"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.WTF::Vector.317", %"class.WTF::Vector.317"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.306*, %class.scoped_refptr.306** %3, align 8
  %5 = icmp eq %class.scoped_refptr.306* %4, null
  br i1 %5, label %40, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.306* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.306, %class.scoped_refptr.306* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %class.scoped_refptr.306* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.306, %class.scoped_refptr.306* %15, i64 0, i32 0
  %17 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %16, align 8
  %18 = icmp eq %"class.blink::FontDataForRangeSet"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %20, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #12
  %22 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %20, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %20, i64 -2
  %27 = bitcast %"class.base::RefCounted.308"* %26 to %"class.blink::FontDataForRangeSet"*
  %28 = bitcast %"class.base::RefCounted.308"* %26 to void (%"class.blink::FontDataForRangeSet"*)***
  %29 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %29, i64 1
  %31 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %30, align 8
  tail call void %31(%"class.blink::FontDataForRangeSet"* nonnull %27) #12
  br label %32

32:                                               ; preds = %25, %19, %14
  %33 = getelementptr inbounds %class.scoped_refptr.306, %class.scoped_refptr.306* %15, i64 1
  %34 = icmp eq %class.scoped_refptr.306* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.317"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  store %class.scoped_refptr.306* null, %class.scoped_refptr.306** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 8, i32 0
  %42 = load %"class.blink::FontDataForRangeSet"*, %"class.blink::FontDataForRangeSet"** %41, align 8
  %43 = icmp eq %"class.blink::FontDataForRangeSet"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::FontDataForRangeSet", %"class.blink::FontDataForRangeSet"* %42, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %45, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %46) #12
  %47 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %45, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %57

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.base::RefCounted.308", %"class.base::RefCounted.308"* %45, i64 -2
  %52 = bitcast %"class.base::RefCounted.308"* %51 to %"class.blink::FontDataForRangeSet"*
  %53 = bitcast %"class.base::RefCounted.308"* %51 to void (%"class.blink::FontDataForRangeSet"*)***
  %54 = load void (%"class.blink::FontDataForRangeSet"*)**, void (%"class.blink::FontDataForRangeSet"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %54, i64 1
  %56 = load void (%"class.blink::FontDataForRangeSet"*)*, void (%"class.blink::FontDataForRangeSet"*)** %55, align 8
  tail call void %56(%"class.blink::FontDataForRangeSet"* nonnull %52) #12
  br label %57

57:                                               ; preds = %40, %44, %50
  %58 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 7, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = icmp eq i32* %59, null
  br i1 %60, label %63, label %61, !prof !3

61:                                               ; preds = %57
  %62 = bitcast i32* %59 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %62) #12
  store i32* null, i32** %58, align 8
  br label %63

63:                                               ; preds = %57, %61
  %64 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = icmp eq i32* %65, null
  br i1 %66, label %69, label %67, !prof !3

67:                                               ; preds = %63
  %68 = bitcast i32* %65 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #12
  store i32* null, i32** %64, align 8
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.blink::FontFallbackIterator", %"class.blink::FontFallbackIterator"* %0, i64 0, i32 1, i32 0
  %71 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %70, align 8
  %72 = icmp eq %"class.blink::FontFallbackList"* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %74) #12
  %75 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  tail call void @_ZN5blink16FontFallbackListD1Ev(%"class.blink::FontFallbackList"* nonnull %71) #12
  %79 = bitcast %"class.blink::FontFallbackList"* %71 to i8*
  tail call void @free(i8* %79) #12
  br label %80

80:                                               ; preds = %69, %73, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionEjj(%"class.blink::HarfBuzzShaper"*, %"class.blink::Font"*, i8 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::RangeData", align 8
  %7 = alloca %"struct.blink::RunSegmenter::RunSegmenterRange", align 4
  %8 = alloca %"class.blink::RunSegmenter", align 8
  %9 = alloca %"struct.blink::RunSegmenter::RunSegmenterRange", align 16
  %10 = sub i32 %4, %3
  %11 = tail call noalias i8* @malloc(i64 72) #12
  %12 = bitcast i8* %11 to %"class.blink::ShapeResult"*
  tail call void @_ZN5blink11ShapeResultC1EPKNS_4FontEjjNS_13TextDirectionE(%"class.blink::ShapeResult"* %12, %"class.blink::Font"* %1, i32 %3, i32 %10, i8 zeroext %2) #12
  %13 = tail call %struct.hb_buffer_t* @hb_buffer_create() #12
  %14 = bitcast %"struct.blink::RangeData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 5
  %16 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 5, i32 0, i32 0, i32 1, i64 0
  %17 = bitcast %"class.blink::FontFeatures"* %15 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 144, i1 false)
  store i8* %16, i8** %17, align 8, !alias.scope !14
  %18 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  store i32 6, i32* %18, align 8, !alias.scope !14
  %19 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %19, align 4, !alias.scope !14
  %20 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 6
  %21 = bitcast %"class.WTF::Deque.244"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #12, !alias.scope !14
  %22 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 0
  store %struct.hb_buffer_t* %13, %struct.hb_buffer_t** %22, align 8, !alias.scope !14
  %23 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 1
  store %"class.blink::Font"* %1, %"class.blink::Font"** %23, align 8, !alias.scope !14
  %24 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 2
  store i8 %2, i8* %24, align 8, !alias.scope !14
  %25 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %1, i64 0, i32 0
  call void @_ZN5blink12FontFeatures10InitializeERKNS_15FontDescriptionE(%"class.blink::FontFeatures"* %15, %"class.blink::FontDescription"* dereferenceable(80) %25) #12
  %26 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 3
  store i32 %3, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 4
  store i32 %4, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %5
  %35 = bitcast %"struct.blink::RunSegmenter::RunSegmenterRange"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %7, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %7, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %7, i64 0, i32 2
  %39 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %7, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %7, i64 0, i32 4
  store i32 %3, i32* %36, align 4
  store i32 %4, i32* %37, align 4
  store i32 25, i32* %38, align 4
  store i32 0, i32* %39, align 4
  store i32 0, i32* %40, align 4
  call void @_ZNK5blink14HarfBuzzShaper12ShapeSegmentEPNS_9RangeDataERKNS_12RunSegmenter17RunSegmenterRangeEPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* %0, %"struct.blink::RangeData"* nonnull %6, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull dereferenceable(20) %7, %"class.blink::ShapeResult"* %12)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %35) #12
  br label %100

41:                                               ; preds = %5
  %42 = bitcast %"class.blink::RunSegmenter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %42) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 80, i1 false)
  %43 = icmp eq %"class.WTF::StringImpl"* %29, null
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %45 = bitcast %"class.WTF::StringImpl"* %44 to i16*
  %46 = select i1 %43, i16* null, i16* %45
  br i1 %43, label %50, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  br label %50

50:                                               ; preds = %41, %47
  %51 = phi i32 [ %49, %47 ], [ 0, %41 ]
  %52 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %1, i64 0, i32 0, i32 12, i32 0
  %53 = bitcast %"struct.blink::FontDescription::BitFields"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = and i32 %55, 3
  call void @_ZN5blink12RunSegmenterC1EPKDsjNS_15FontOrientationEj(%"class.blink::RunSegmenter"* nonnull %8, i16* %46, i32 %51, i32 %56, i32 0) #12
  %57 = bitcast %"struct.blink::RunSegmenter::RunSegmenterRange"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %57) #12
  %58 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %9, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %9, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %9, i64 0, i32 4
  %61 = bitcast %"struct.blink::RunSegmenter::RunSegmenterRange"* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 -1, i32 0>, <4 x i32>* %61, align 16, !alias.scope !17
  store i32 0, i32* %60, align 16, !alias.scope !17
  br label %62

62:                                               ; preds = %72, %50
  %63 = call zeroext i1 @_ZN5blink12RunSegmenter7ConsumeEPNS0_17RunSegmenterRangeE(%"class.blink::RunSegmenter"* nonnull %8, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull %9) #12
  br i1 %63, label %64, label %75

64:                                               ; preds = %62
  %65 = load i32, i32* %59, align 4
  %66 = icmp ugt i32 %65, %3
  %67 = load i32, i32* %58, align 16
  %68 = icmp ult i32 %67, %4
  %69 = and i1 %66, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  call void @_ZNK5blink14HarfBuzzShaper12ShapeSegmentEPNS_9RangeDataERKNS_12RunSegmenter17RunSegmenterRangeEPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* %0, %"struct.blink::RangeData"* nonnull %6, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull dereferenceable(20) %9, %"class.blink::ShapeResult"* %12)
  %71 = load i32, i32* %59, align 4
  br label %72

72:                                               ; preds = %70, %64
  %73 = phi i32 [ %71, %70 ], [ %65, %64 ]
  %74 = icmp ult i32 %73, %4
  br i1 %74, label %62, label %75

75:                                               ; preds = %72, %62
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %57) #12
  %76 = getelementptr inbounds %"class.blink::RunSegmenter", %"class.blink::RunSegmenter"* %8, i64 0, i32 6, i32 0, i32 0, i32 0
  %77 = load %"class.blink::SymbolsIterator"*, %"class.blink::SymbolsIterator"** %76, align 8
  store %"class.blink::SymbolsIterator"* null, %"class.blink::SymbolsIterator"** %76, align 8
  %78 = icmp eq %"class.blink::SymbolsIterator"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.blink::SymbolsIterator"* %77 to i8*
  call void @free(i8* %80) #12
  br label %81

81:                                               ; preds = %79, %75
  %82 = getelementptr inbounds %"class.blink::RunSegmenter", %"class.blink::RunSegmenter"* %8, i64 0, i32 5, i32 0, i32 0, i32 0
  %83 = load %"class.blink::OrientationIterator"*, %"class.blink::OrientationIterator"** %82, align 8
  store %"class.blink::OrientationIterator"* null, %"class.blink::OrientationIterator"** %82, align 8
  %84 = icmp eq %"class.blink::OrientationIterator"* %83, null
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::OrientationIterator", %"class.blink::OrientationIterator"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::UTF16TextIterator"*, %"class.blink::UTF16TextIterator"** %86, align 8
  store %"class.blink::UTF16TextIterator"* null, %"class.blink::UTF16TextIterator"** %86, align 8
  %88 = icmp eq %"class.blink::UTF16TextIterator"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.blink::UTF16TextIterator"* %87 to i8*
  call void @free(i8* %90) #12
  br label %91

91:                                               ; preds = %89, %85
  %92 = bitcast %"class.blink::OrientationIterator"* %83 to i8*
  call void @free(i8* %92) #12
  br label %93

93:                                               ; preds = %91, %81
  %94 = getelementptr inbounds %"class.blink::RunSegmenter", %"class.blink::RunSegmenter"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %95 = load %"class.blink::ScriptRunIterator"*, %"class.blink::ScriptRunIterator"** %94, align 8
  store %"class.blink::ScriptRunIterator"* null, %"class.blink::ScriptRunIterator"** %94, align 8
  %96 = icmp eq %"class.blink::ScriptRunIterator"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  call void @_ZN5blink17ScriptRunIteratorD2Ev(%"class.blink::ScriptRunIterator"* nonnull %95) #12
  %98 = bitcast %"class.blink::ScriptRunIterator"* %95 to i8*
  call void @free(i8* %98) #12
  br label %99

99:                                               ; preds = %93, %97
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %42) #12
  br label %100

100:                                              ; preds = %99, %34
  %101 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %102 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %101, align 8
  %103 = icmp eq %"struct.blink::ReshapeQueueItem"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %100
  %105 = bitcast %"struct.blink::ReshapeQueueItem"* %102 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %105) #12
  store %"struct.blink::ReshapeQueueItem"* null, %"struct.blink::ReshapeQueueItem"** %101, align 8
  br label %106

106:                                              ; preds = %104, %100
  %107 = load i32, i32* %19, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %110, label %109, !prof !2

109:                                              ; preds = %106
  store i32 0, i32* %19, align 4
  br label %110

110:                                              ; preds = %109, %106
  %111 = getelementptr inbounds %"class.blink::FontFeatures", %"class.blink::FontFeatures"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %struct.hb_feature_t*, %struct.hb_feature_t** %111, align 8
  %113 = bitcast i8* %16 to %struct.hb_feature_t*
  %114 = icmp eq %struct.hb_feature_t* %112, %113
  br i1 %114, label %117, label %115, !prof !3

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::FontFeatures", %"class.blink::FontFeatures"* %15, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferI12hb_feature_tLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.240"* %116, %struct.hb_feature_t* %112) #12
  br label %117

117:                                              ; preds = %110, %115
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %14) #12
  %118 = icmp eq %struct.hb_buffer_t* %13, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %117
  call void @hb_buffer_destroy(%struct.hb_buffer_t* nonnull %13) #12
  br label %120

120:                                              ; preds = %117, %119
  ret %"class.blink::ShapeResult"* %12
}

declare %struct.hb_buffer_t* @hb_buffer_create() local_unnamed_addr #2

declare void @hb_buffer_destroy(%struct.hb_buffer_t*) local_unnamed_addr #2

declare void @_ZN5blink12RunSegmenterC1EPKDsjNS_15FontOrientationEj(%"class.blink::RunSegmenter"*, i16*, i32, i32, i32) unnamed_addr #2

declare zeroext i1 @_ZN5blink12RunSegmenter7ConsumeEPNS0_17RunSegmenterRangeE(%"class.blink::RunSegmenter"*, %"struct.blink::RunSegmenter::RunSegmenterRange"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionEjjRKN3WTF6VectorINS_12RunSegmenter17RunSegmenterRangeELj0ENS5_18PartitionAllocatorEEE(%"class.blink::HarfBuzzShaper"*, %"class.blink::Font"*, i8 zeroext, i32, i32, %"class.WTF::Vector.363"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.blink::RangeData", align 8
  %8 = sub i32 %4, %3
  %9 = tail call noalias i8* @malloc(i64 72) #12
  %10 = bitcast i8* %9 to %"class.blink::ShapeResult"*
  tail call void @_ZN5blink11ShapeResultC1EPKNS_4FontEjjNS_13TextDirectionE(%"class.blink::ShapeResult"* %10, %"class.blink::Font"* %1, i32 %3, i32 %8, i8 zeroext %2) #12
  %11 = tail call %struct.hb_buffer_t* @hb_buffer_create() #12
  %12 = bitcast %"struct.blink::RangeData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 5
  %14 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 5, i32 0, i32 0, i32 1, i64 0
  %15 = bitcast %"class.blink::FontFeatures"* %13 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 144, i1 false)
  store i8* %14, i8** %15, align 8, !alias.scope !20
  %16 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  store i32 6, i32* %16, align 8, !alias.scope !20
  %17 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %17, align 4, !alias.scope !20
  %18 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 6
  %19 = bitcast %"class.WTF::Deque.244"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12, !alias.scope !20
  %20 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 0
  store %struct.hb_buffer_t* %11, %struct.hb_buffer_t** %20, align 8, !alias.scope !20
  %21 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 1
  store %"class.blink::Font"* %1, %"class.blink::Font"** %21, align 8, !alias.scope !20
  %22 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 2
  store i8 %2, i8* %22, align 8, !alias.scope !20
  %23 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %1, i64 0, i32 0
  call void @_ZN5blink12FontFeatures10InitializeERKNS_15FontDescriptionE(%"class.blink::FontFeatures"* %13, %"class.blink::FontDescription"* dereferenceable(80) %23) #12
  %24 = getelementptr inbounds %"class.WTF::Vector.363", %"class.WTF::Vector.363"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.blink::RunSegmenter::RunSegmenterRange"*, %"struct.blink::RunSegmenter::RunSegmenterRange"** %24, align 8
  %26 = getelementptr inbounds %"class.WTF::Vector.363", %"class.WTF::Vector.363"* %5, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %25, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %6
  %32 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 3
  %33 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 4
  br label %55

34:                                               ; preds = %55, %6
  %35 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %35, align 8
  %37 = icmp eq %"struct.blink::ReshapeQueueItem"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = bitcast %"struct.blink::ReshapeQueueItem"* %36 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #12
  store %"struct.blink::ReshapeQueueItem"* null, %"struct.blink::ReshapeQueueItem"** %35, align 8
  br label %40

40:                                               ; preds = %38, %34
  %41 = load i32, i32* %17, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %40
  store i32 0, i32* %17, align 4
  br label %44

44:                                               ; preds = %43, %40
  %45 = getelementptr inbounds %"class.blink::FontFeatures", %"class.blink::FontFeatures"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %struct.hb_feature_t*, %struct.hb_feature_t** %45, align 8
  %47 = bitcast i8* %14 to %struct.hb_feature_t*
  %48 = icmp eq %struct.hb_feature_t* %46, %47
  br i1 %48, label %51, label %49, !prof !3

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::FontFeatures", %"class.blink::FontFeatures"* %13, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferI12hb_feature_tLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.240"* %50, %struct.hb_feature_t* %46) #12
  br label %51

51:                                               ; preds = %44, %49
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %12) #12
  %52 = icmp eq %struct.hb_buffer_t* %11, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %51
  call void @hb_buffer_destroy(%struct.hb_buffer_t* nonnull %11) #12
  br label %54

54:                                               ; preds = %51, %53
  ret %"class.blink::ShapeResult"* %10

55:                                               ; preds = %31, %55
  %56 = phi %"struct.blink::RunSegmenter::RunSegmenterRange"* [ %25, %31 ], [ %61, %55 ]
  %57 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %56, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %32, align 4
  %59 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %56, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %33, align 8
  call void @_ZNK5blink14HarfBuzzShaper12ShapeSegmentEPNS_9RangeDataERKNS_12RunSegmenter17RunSegmenterRangeEPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* %0, %"struct.blink::RangeData"* nonnull %7, %"struct.blink::RunSegmenter::RunSegmenterRange"* dereferenceable(20) %56, %"class.blink::ShapeResult"* %10)
  %61 = getelementptr inbounds %"struct.blink::RunSegmenter::RunSegmenterRange", %"struct.blink::RunSegmenter::RunSegmenterRange"* %56, i64 1
  %62 = icmp eq %"struct.blink::RunSegmenter::RunSegmenterRange"* %61, %29
  br i1 %62, label %34, label %55
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionEjjNS_12RunSegmenter17RunSegmenterRangeE(%"class.blink::HarfBuzzShaper"*, %"class.blink::Font"*, i8 zeroext, i32, i32, %"struct.blink::RunSegmenter::RunSegmenterRange"* nocapture readonly byval(%"struct.blink::RunSegmenter::RunSegmenterRange") align 8) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.blink::RangeData", align 8
  %8 = sub i32 %4, %3
  %9 = tail call noalias i8* @malloc(i64 72) #12
  %10 = bitcast i8* %9 to %"class.blink::ShapeResult"*
  tail call void @_ZN5blink11ShapeResultC1EPKNS_4FontEjjNS_13TextDirectionE(%"class.blink::ShapeResult"* %10, %"class.blink::Font"* %1, i32 %3, i32 %8, i8 zeroext %2) #12
  %11 = tail call %struct.hb_buffer_t* @hb_buffer_create() #12
  %12 = bitcast %"struct.blink::RangeData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 5
  %14 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 5, i32 0, i32 0, i32 1, i64 0
  %15 = bitcast %"class.blink::FontFeatures"* %13 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 144, i1 false)
  store i8* %14, i8** %15, align 8, !alias.scope !23
  %16 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  store i32 6, i32* %16, align 8, !alias.scope !23
  %17 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %17, align 4, !alias.scope !23
  %18 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 6
  %19 = bitcast %"class.WTF::Deque.244"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12, !alias.scope !23
  %20 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 0
  store %struct.hb_buffer_t* %11, %struct.hb_buffer_t** %20, align 8, !alias.scope !23
  %21 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 1
  store %"class.blink::Font"* %1, %"class.blink::Font"** %21, align 8, !alias.scope !23
  %22 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 2
  store i8 %2, i8* %22, align 8, !alias.scope !23
  %23 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %1, i64 0, i32 0
  call void @_ZN5blink12FontFeatures10InitializeERKNS_15FontDescriptionE(%"class.blink::FontFeatures"* %13, %"class.blink::FontDescription"* dereferenceable(80) %23) #12
  %24 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 3
  store i32 %3, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 4
  store i32 %4, i32* %25, align 8
  call void @_ZNK5blink14HarfBuzzShaper12ShapeSegmentEPNS_9RangeDataERKNS_12RunSegmenter17RunSegmenterRangeEPNS_11ShapeResultE(%"class.blink::HarfBuzzShaper"* %0, %"struct.blink::RangeData"* nonnull %7, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull dereferenceable(20) %5, %"class.blink::ShapeResult"* %10)
  %26 = getelementptr inbounds %"struct.blink::RangeData", %"struct.blink::RangeData"* %7, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %26, align 8
  %28 = icmp eq %"struct.blink::ReshapeQueueItem"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %6
  %30 = bitcast %"struct.blink::ReshapeQueueItem"* %27 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %30) #12
  store %"struct.blink::ReshapeQueueItem"* null, %"struct.blink::ReshapeQueueItem"** %26, align 8
  br label %31

31:                                               ; preds = %29, %6
  %32 = load i32, i32* %17, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %31
  store i32 0, i32* %17, align 4
  br label %35

35:                                               ; preds = %34, %31
  %36 = getelementptr inbounds %"class.blink::FontFeatures", %"class.blink::FontFeatures"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %struct.hb_feature_t*, %struct.hb_feature_t** %36, align 8
  %38 = bitcast i8* %14 to %struct.hb_feature_t*
  %39 = icmp eq %struct.hb_feature_t* %37, %38
  br i1 %39, label %42, label %40, !prof !3

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::FontFeatures", %"class.blink::FontFeatures"* %13, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferI12hb_feature_tLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.240"* %41, %struct.hb_feature_t* %37) #12
  br label %42

42:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %12) #12
  %43 = icmp eq %struct.hb_buffer_t* %11, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %42
  call void @hb_buffer_destroy(%struct.hb_buffer_t* nonnull %11) #12
  br label %45

45:                                               ; preds = %42, %44
  ret %"class.blink::ShapeResult"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionE(%"class.blink::HarfBuzzShaper"*, %"class.blink::Font"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HarfBuzzShaper", %"class.blink::HarfBuzzShaper"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ 0, %3 ]
  %12 = tail call %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionEjj(%"class.blink::HarfBuzzShaper"* %0, %"class.blink::Font"* %1, i8 zeroext %2, i32 0, i32 %11)
  ret %"class.blink::ShapeResult"* %12
}

declare i32 @hb_script_from_string(i8*, i32) local_unnamed_addr #2

declare i8* @uscript_getShortName_69(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare i32 @hb_buffer_get_direction(%struct.hb_buffer_t*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare zeroext i1 @_ZN5blink17UTF16TextIterator20ConsumeSurrogatePairERi(%"class.blink::UTF16TextIterator"*, i32* dereferenceable(4)) local_unnamed_addr #2

declare dereferenceable(80) %"class.blink::LayoutLocale"* @_ZN5blink12LayoutLocale10GetDefaultEv() local_unnamed_addr #2

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #2

declare void @_ZN5blink20FontFallbackIteratorC1ERKNS_15FontDescriptionE13scoped_refptrINS_16FontFallbackListEENS_20FontFallbackPriorityE(%"class.blink::FontFallbackIterator"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontFallbackList"*, i32) unnamed_addr #2

declare void @_ZN3WTF6String11Ensure16BitEv(%"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZN5blink17SmallCapsIteratorC1EPKDsj(%"class.blink::SmallCapsIterator"*, i16*, i32) unnamed_addr #2

declare zeroext i1 @_ZN5blink17SmallCapsIterator7ConsumeEPjPNS0_17SmallCapsBehaviorE(%"class.blink::SmallCapsIterator"*, i32*, i32*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.244"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16ReshapeQueueItemEEEmm(i64 %11) #12
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16ReshapeQueueItemEEEmm(i64 %11) #12
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16ReshapeQueueItemEEEPKcv, i64 0, i64 0)) #12
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque.244"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = udiv i64 %13, 12
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.244", %"class.WTF::Deque.244"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.blink::ReshapeQueueItem"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %24, i64 %26
  %29 = icmp ne %"struct.blink::ReshapeQueueItem"* %28, null
  %30 = icmp ne %"struct.blink::ReshapeQueueItem"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !3

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %5, i64 %33
  %35 = bitcast %"struct.blink::ReshapeQueueItem"* %27 to i8*
  %36 = ptrtoint %"struct.blink::ReshapeQueueItem"* %34 to i64
  %37 = ptrtoint %"struct.blink::ReshapeQueueItem"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.blink::ReshapeQueueItem"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* nonnull align 4 %35, i64 %38, i1 false) #12
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.blink::ReshapeQueueItem"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !3

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.blink::ReshapeQueueItem"* %5 to i8*
  %47 = mul nuw nsw i64 %45, 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* nonnull align 4 %46, i64 %47, i1 false) #12
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.blink::ReshapeQueueItem"*, %"struct.blink::ReshapeQueueItem"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.blink::ReshapeQueueItem"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %52, i64 %59
  %61 = icmp ne %"struct.blink::ReshapeQueueItem"* %60, null
  %62 = icmp ne %"struct.blink::ReshapeQueueItem"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !3

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.blink::ReshapeQueueItem", %"struct.blink::ReshapeQueueItem"* %5, i64 %65
  %67 = bitcast %"struct.blink::ReshapeQueueItem"* %58 to i8*
  %68 = ptrtoint %"struct.blink::ReshapeQueueItem"* %66 to i64
  %69 = ptrtoint %"struct.blink::ReshapeQueueItem"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.blink::ReshapeQueueItem"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* nonnull align 4 %67, i64 %70, i1 false) #12
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.blink::ReshapeQueueItem"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16ReshapeQueueItemEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 178782208
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 178782208) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 12
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE6insertIRKS1_EEvjOT_(%"class.WTF::Vector.239"*, i32, %struct.hb_feature_t* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %45

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %struct.hb_feature_t*, %struct.hb_feature_t** %30, align 8
  %32 = icmp ugt %struct.hb_feature_t* %31, %2
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %31, i64 %34
  %36 = icmp ugt %struct.hb_feature_t* %35, %2
  br i1 %36, label %38, label %37

37:                                               ; preds = %33, %28
  call void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.239"* %0, i32 %29) #12
  br label %45

38:                                               ; preds = %33
  %39 = ptrtoint %struct.hb_feature_t* %2 to i64
  %40 = ptrtoint %struct.hb_feature_t* %31 to i64
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 4
  call void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.239"* %0, i32 %29) #12
  %43 = load %struct.hb_feature_t*, %struct.hb_feature_t** %30, align 8
  %44 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %43, i64 %42
  br label %45

45:                                               ; preds = %38, %37, %23
  %46 = phi %struct.hb_feature_t* [ %2, %23 ], [ %2, %37 ], [ %44, %38 ]
  %47 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %struct.hb_feature_t*, %struct.hb_feature_t** %47, align 8
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %48, i64 %49
  %51 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %50, i64 1
  %52 = icmp ne %struct.hb_feature_t* %51, null
  %53 = icmp ne %struct.hb_feature_t* %50, null
  %54 = and i1 %53, %52
  br i1 %54, label %57, label %55, !prof !3

55:                                               ; preds = %45
  %56 = bitcast %struct.hb_feature_t* %50 to i8*
  br label %66

57:                                               ; preds = %45
  %58 = load i32, i32* %9, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %48, i64 %59
  %61 = bitcast %struct.hb_feature_t* %51 to i8*
  %62 = bitcast %struct.hb_feature_t* %50 to i8*
  %63 = ptrtoint %struct.hb_feature_t* %60 to i64
  %64 = ptrtoint %struct.hb_feature_t* %50 to i64
  %65 = sub i64 %63, %64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* nonnull align 4 %62, i64 %65, i1 false) #12
  br label %66

66:                                               ; preds = %55, %57
  %67 = phi i8* [ %56, %55 ], [ %62, %57 ]
  %68 = bitcast %struct.hb_feature_t* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 16, i1 false) #12
  %69 = load i32, i32* %9, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.239"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %struct.hb_feature_t*, %struct.hb_feature_t** %31, align 8
  %33 = icmp eq %struct.hb_feature_t* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 6
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI12hb_feature_tEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI12hb_feature_tEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.239"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 4
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.239"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 6, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.239"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.239"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 7
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %struct.hb_feature_t*, %struct.hb_feature_t** %5, align 8
  %7 = icmp eq %struct.hb_feature_t* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %struct.hb_feature_t*
  %10 = icmp eq %struct.hb_feature_t* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.239"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 6, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.239"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 6, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %struct.hb_feature_t* %6 to i8*
  %27 = shl nuw nsw i64 %25, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferI12hb_feature_tLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.240"* %19, %struct.hb_feature_t* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI12hb_feature_tEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI12hb_feature_tEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 4
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %struct.hb_feature_t*, %struct.hb_feature_t** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %struct.hb_feature_t* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %struct.hb_feature_t* %36 to i8*
  %45 = shl nuw nsw i64 %43, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #12
  %46 = load %struct.hb_feature_t*, %struct.hb_feature_t** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %struct.hb_feature_t* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %struct.hb_feature_t*
  %51 = icmp eq %struct.hb_feature_t* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI12hb_feature_tLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.240"* %53, %struct.hb_feature_t* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.239"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI12hb_feature_tEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI12hb_feature_tLj6ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.240"*, %struct.hb_feature_t*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %struct.hb_feature_t* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @hb_buffer_set_language(%struct.hb_buffer_t*, %struct.hb_language_impl_t*) local_unnamed_addr #2

declare void @hb_buffer_set_script(%struct.hb_buffer_t*, i32) local_unnamed_addr #2

declare void @hb_buffer_set_direction(%struct.hb_buffer_t*, i32) local_unnamed_addr #2

declare %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"*, %"class.blink::UnicodeRangeSet"*, i32) local_unnamed_addr #2

declare void @hb_shape(%struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12HarfBuzzFace22ShouldSubpixelPositionEv(%"class.blink::HarfBuzzFace"*) local_unnamed_addr #2

declare %struct.hb_glyph_position_t* @hb_buffer_get_glyph_positions(%struct.hb_buffer_t*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #7

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI12hb_feature_tLj6ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector.239"*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %48, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = add i32 %2, %1
  %12 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ugt i32 %11, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %10, align 8
  br label %26

17:                                               ; preds = %8
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %11) #12
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i8* %18, i8* %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %10, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 2085, %"class.logging::CheckOpResult"* nonnull %5) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %16, %17, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %27 = getelementptr inbounds %"class.WTF::Vector.239", %"class.WTF::Vector.239"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %struct.hb_feature_t*, %struct.hb_feature_t** %27, align 8
  %29 = zext i32 %1 to i64
  %30 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %28, i64 %29
  %31 = zext i32 %2 to i64
  %32 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %30, i64 %31
  %33 = icmp ne %struct.hb_feature_t* %30, null
  %34 = icmp ne %struct.hb_feature_t* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %45, !prof !3

36:                                               ; preds = %26
  %37 = load i32, i32* %12, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %struct.hb_feature_t, %struct.hb_feature_t* %28, i64 %38
  %40 = bitcast %struct.hb_feature_t* %30 to i8*
  %41 = bitcast %struct.hb_feature_t* %32 to i8*
  %42 = ptrtoint %struct.hb_feature_t* %39 to i64
  %43 = ptrtoint %struct.hb_feature_t* %32 to i64
  %44 = sub i64 %42, %43
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %40, i8* nonnull align 4 %41, i64 %44, i1 false) #12
  br label %45

45:                                               ; preds = %26, %36
  %46 = load i32, i32* %12, align 4
  %47 = sub i32 %46, %2
  store i32 %47, i32* %12, align 4
  br label %48

48:                                               ; preds = %3, %45
  ret void
}

declare float @_ZNK5blink11ShapeResult12ForEachGlyphEfjjjPFvPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataEES1_(%"class.blink::ShapeResult"*, float, i32, i32, i32, void (i8*, i32, i16, <2 x float>, float, i1, i8, %"class.blink::SimpleFontData"*)*, i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119IdentifyBrokenEmojiEPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataE(i8* nocapture, i32, i16 zeroext, <2 x float>, float, i1 zeroext, i8 signext, %"class.blink::SimpleFontData"* nocapture readnone) #10 {
  %9 = getelementptr inbounds i8, i8* %0, i64 4
  %10 = bitcast i8* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = load i8, i8* %0, align 4, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %13, %8
  %17 = getelementptr inbounds i8, i8* %0, i64 16
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %18, align 4
  store i8 0, i8* %0, align 4
  store i32 %1, i32* %10, align 4
  %21 = getelementptr inbounds i8, i8* %0, i64 8
  %22 = load i8, i8* %21, align 4, !range !4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds i8, i8* %0, i64 12
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

29:                                               ; preds = %16, %24
  %30 = icmp eq i16 %2, 0
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %21, align 4
  br label %34

32:                                               ; preds = %13
  %33 = getelementptr inbounds i8, i8* %0, i64 8
  store i8 1, i8* %33, align 4
  br label %34

34:                                               ; preds = %32, %29
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink16FontFallbackListD1Ev(%"class.blink::FontFallbackList"*) unnamed_addr #3

declare void @_ZN5blink11ShapeResultC1EPKNS_4FontEjjNS_13TextDirectionE(%"class.blink::ShapeResult"*, %"class.blink::Font"*, i32, i32, i8 zeroext) unnamed_addr #2

declare void @_ZN5blink12FontFeatures10InitializeERKNS_15FontDescriptionE(%"class.blink::FontFeatures"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ScriptRunIteratorD2Ev(%"class.blink::ScriptRunIterator"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::Vector.331"*, %"class.WTF::Vector.331"** %2, align 8
  store %"class.WTF::Vector.331"* null, %"class.WTF::Vector.331"** %2, align 8
  %4 = icmp eq %"class.WTF::Vector.331"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %3, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !2

9:                                                ; preds = %5
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %3, i64 0, i32 0, i32 1, i64 0
  %14 = bitcast i8* %13 to i32*
  %15 = icmp eq i32* %12, %14
  br i1 %15, label %18, label %16, !prof !3

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %3, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.332"* %17, i32* %12) #12
  br label %18

18:                                               ; preds = %16, %10
  store i32* null, i32** %11, align 8
  %19 = bitcast %"class.WTF::Vector.331"* %3 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %19) #12
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::Vector.331"*, %"class.WTF::Vector.331"** %21, align 8
  store %"class.WTF::Vector.331"* null, %"class.WTF::Vector.331"** %21, align 8
  %23 = icmp eq %"class.WTF::Vector.331"* %22, null
  br i1 %23, label %39, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %22, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28, !prof !2

28:                                               ; preds = %24
  store i32 0, i32* %25, align 4
  br label %29

29:                                               ; preds = %28, %24
  %30 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %22, i64 0, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %22, i64 0, i32 0, i32 1, i64 0
  %33 = bitcast i8* %32 to i32*
  %34 = icmp eq i32* %31, %33
  br i1 %34, label %37, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %22, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.332"* %36, i32* %31) #12
  br label %37

37:                                               ; preds = %35, %29
  store i32* null, i32** %30, align 8
  %38 = bitcast %"class.WTF::Vector.331"* %22 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %38) #12
  br label %39

39:                                               ; preds = %20, %37
  %40 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4
  %41 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %39
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %39
  %46 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %40, i64 0, i32 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %49 = bitcast i8* %48 to i32*
  %50 = icmp eq i32* %47, %49
  br i1 %50, label %53, label %51, !prof !3

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.WTF::Vector.331", %"class.WTF::Vector.331"* %40, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.332"* %52, i32* %47) #12
  br label %53

53:                                               ; preds = %45, %51
  store i32* null, i32** %46, align 8
  %54 = getelementptr inbounds %"class.blink::ScriptRunIterator", %"class.blink::ScriptRunIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %55 = load %"struct.blink::ScriptRunIterator::BracketRec"*, %"struct.blink::ScriptRunIterator::BracketRec"** %54, align 8
  %56 = icmp eq %"struct.blink::ScriptRunIterator::BracketRec"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast %"struct.blink::ScriptRunIterator::BracketRec"* %55 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %58) #12
  store %"struct.blink::ScriptRunIterator::BracketRec"* null, %"struct.blink::ScriptRunIterator::BracketRec"** %54, align 8
  br label %59

59:                                               ; preds = %53, %57
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI11UScriptCodeLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS1_(%"class.WTF::VectorBuffer.332"*, i32*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIDsEEvOT_(%"class.WTF::Vector.295"*, i16* dereferenceable(2)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  br i1 %15, label %18, label %45, !prof !3

18:                                               ; preds = %2
  %19 = icmp eq i32* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %20) #12
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.295"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load i32*, i32** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne i32* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast i32* %27 to i8*
  br i1 %30, label %32, label %38, !prof !3

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* nonnull align 4 %31, i64 %35, i1 false) #12
  %36 = bitcast %"class.WTF::Vector.295"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  %40 = bitcast %"class.WTF::Vector.295"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 2
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to i32*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi i32* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  %50 = load i16, i16* %1, align 2
  %51 = zext i16 %50 to i32
  store i32 %51, i32* %49, align 4
  %52 = load i32, i32* %3, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.295"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.295"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.295"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.295"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.295", %"class.WTF::Vector.295"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.295"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.295"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.295"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZNK3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE5beginEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!10 = distinct !{!10, !"_ZNK3WTF5DequeIN5blink16ReshapeQueueItemELj0ENS_18PartitionAllocatorEE3endEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink4Font26CreateFontFallbackIteratorENS_20FontFallbackPriorityE: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink4Font26CreateFontFallbackIteratorENS_20FontFallbackPriorityE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink12_GLOBAL__N_115CreateRangeDataEPKNS_4FontENS_13TextDirectionEP11hb_buffer_t: argument 0"}
!16 = distinct !{!16, !"_ZN5blink12_GLOBAL__N_115CreateRangeDataEPKNS_4FontENS_13TextDirectionEP11hb_buffer_t"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink12RunSegmenter9NullRangeEj: argument 0"}
!19 = distinct !{!19, !"_ZN5blink12RunSegmenter9NullRangeEj"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink12_GLOBAL__N_115CreateRangeDataEPKNS_4FontENS_13TextDirectionEP11hb_buffer_t: argument 0"}
!22 = distinct !{!22, !"_ZN5blink12_GLOBAL__N_115CreateRangeDataEPKNS_4FontENS_13TextDirectionEP11hb_buffer_t"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink12_GLOBAL__N_115CreateRangeDataEPKNS_4FontENS_13TextDirectionEP11hb_buffer_t: argument 0"}
!25 = distinct !{!25, !"_ZN5blink12_GLOBAL__N_115CreateRangeDataEPKNS_4FontENS_13TextDirectionEP11hb_buffer_t"}
