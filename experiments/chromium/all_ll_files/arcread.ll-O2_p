; ModuleID = '../../third_party/unrar/src/arcread.cpp'
source_filename = "../../third_party/unrar/src/arcread.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ErrorHandler = type <{ i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.Archive = type <{ %class.File, %class.CryptData, %class.ComprDataIO, i8, [7 x i8], %class.RAROptions*, %class.RarTime, i32, i32, i8, [7 x i8], %class.QuickOpen, i8, [7 x i8], i64, %struct.BaseBlock, %struct.MarkHeader, %struct.MainHeader, %struct.CryptHeader, [4 x i8], %struct.FileHeader, %struct.EndArcHeader, %struct.SubBlockHeader, [4 x i8], %struct.FileHeader, %struct.CommentHeader, %struct.ProtectHeader, %struct.UnixOwnersHeader, %struct.EAHeader, %struct.StreamHeader, [4 x i8], i64, i64, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i64, i8, i8, [16 x i8], i8, i8, i32, i64, i64, i64, i8, [3 x i8], [2048 x i32], [4 x i8] }>
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }
%class.ComprDataIO = type <{ i8, [7 x i8], i64, i8*, i8, [7 x i8], i64, i8*, i64, i8*, i64, i8, i8, i8, i8, [4 x i8], %class.File*, %class.File*, %class.CmdAdd*, %struct.FileHeader*, i64*, %class.CryptData*, %class.CryptData*, i32, i32, i8, i8, i8, [5 x i8], i64, i64, i64, i64, i64, i64, i64, %class.DataHash, %class.DataHash, %class.DataHash, i8, i8, [6 x i8] }>
%class.CmdAdd = type opaque
%class.DataHash = type <{ i32, i32, %struct.blake2sp_state*, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2sp_state = type <{ [8 x %struct.blake2s_state], %struct.blake2s_state, [512 x i8], i64, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2s_state = type <{ [240 x i8], i8*, i32*, i32*, i32*, i64, i8, [7 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1, %union.anon.2, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1 = type { i64 }
%union.anon.2 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.RAROptions = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array.4, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32, [4 x i8] }>
%class.Array.4 = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%struct.FilterMode = type { i32, i32, i32 }
%class.RarTime = type { i64 }
%class.QuickOpen = type <{ %class.Archive*, i8, [7 x i8], %struct.QuickOpenItem*, %struct.QuickOpenItem*, i8*, i64, %class.CryptData, i8, [7 x i8], i64, i64, i64, i64, i64, i64, %class.Array, i64, i64, i8, [7 x i8] }>
%struct.QuickOpenItem = type { i8*, i64, i64, %struct.QuickOpenItem* }
%class.Array = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>
%struct.BaseBlock = type { i32, i32, i32, i32, i8 }
%struct.MarkHeader = type { [8 x i8], i32 }
%struct.MainHeader = type { %struct.BaseBlock, i16, i32, i8, i8, i8, i64, i64, i64, i64 }
%struct.CryptHeader = type { %struct.BaseBlock, i8, i32, [16 x i8], [8 x i8] }
%struct.EndArcHeader = type { %struct.BaseBlock, i32, i32, i8, i8, i8, i8 }
%struct.SubBlockHeader = type <{ %struct.BlockHeader, i16, i8, i8 }>
%struct.BlockHeader = type { %struct.BaseBlock, i32 }
%struct.FileHeader = type { %struct.BlockHeader, i8, i32, i8, %union.anon, [2048 x i32], %class.Array, %class.RarTime, %class.RarTime, %class.RarTime, i64, i64, i64, %struct.HashValue, i32, i8, i8, i8, i8, i32, i8, [16 x i8], [16 x i8], i8, [8 x i8], i8, [32 x i8], i32, i8, i8, i8, i8, i64, i8, i8, i8, i32, i32, [2048 x i32], i8, i8, i8, i8, [256 x i8], [256 x i8], i32, i32 }
%union.anon = type { i32 }
%struct.HashValue = type { i32, %union.anon.0 }
%union.anon.0 = type { i32, [28 x i8] }
%struct.CommentHeader = type <{ %struct.BaseBlock, i16, i8, i8, i16, [2 x i8] }>
%struct.ProtectHeader = type { %struct.BlockHeader, i8, i16, i32, [8 x i8] }
%struct.UnixOwnersHeader = type { %struct.SubBlockHeader.base, i16, i16, [256 x i8], [256 x i8] }
%struct.SubBlockHeader.base = type <{ %struct.BlockHeader, i16, i8 }>
%struct.EAHeader = type { %struct.SubBlockHeader.base, i32, i8, i8, i32 }
%struct.StreamHeader = type <{ %struct.SubBlockHeader.base, i8, i32, i8, i8, [2 x i8], i32, i16, [260 x i8], [2 x i8] }>
%class.uiMsgStore = type <{ [8 x i32*], [8 x i32], i32, i32, i32, [4 x i8] }>
%class.RawRead = type { %class.Array, %class.File*, i64, i64, %class.CryptData* }
%class.EncodeFileName = type { i8*, i8, i32, i64, i64 }
%struct.RarLocalTime = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.sha256_context = type { [8 x i32], i64, [64 x i8] }
%class.Unpack = type { %class.ComprDataIO*, %class.BitInput, %class.ThreadPool*, %struct.UnpackThreadData*, i32, i8*, %class.Array, %class.Array, %class.Array.7, [4 x i32], i32, i32, i32, i64, i64, i32, i32, %struct.UnpackBlockHeader, %struct.UnpackBlockTables, i64, i8*, %class.FragmentedWindow, i8, i64, i8, i8, i8, i64, i8, [256 x i16], [256 x i16], [256 x i16], [256 x i16], [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.DecodeTable], [1028 x i8], i8, i32, i32, i32, [4 x %struct.AudioVariables], i32, i32, %class.ModelPPM, i32, [404 x i8], i32, i8, i8, i8, %class.RarVM, %class.BitInput, %class.Array.10, %class.Array.10, %class.Array.12, i32, i64, i64 }
%struct.UnpackThreadData = type <{ %class.Unpack*, %class.BitInput, i8, [3 x i8], %struct.UnpackBlockHeader, i8, [3 x i8], %struct.UnpackBlockTables, i32, i8, i8, i8, i8, %struct.UnpackDecodedItem*, i32, i32, i32, [4 x i8] }>
%struct.UnpackDecodedItem = type { i32, i16, %union.anon.6 }
%union.anon.6 = type { i32 }
%class.Array.7 = type <{ %struct.UnpackFilter*, i64, i64, i64, i8, [7 x i8] }>
%struct.UnpackFilter = type { i8, i32, i32, i8, i8 }
%struct.UnpackBlockHeader = type { i32, i32, i32, i32, i8, i8 }
%struct.UnpackBlockTables = type { %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable }
%struct.DecodeTable = type { i32, [16 x i32], [16 x i32], i32, [1024 x i8], [1024 x i16], [306 x i16] }
%class.FragmentedWindow = type { [32 x i8*], [32 x i64] }
%struct.AudioVariables = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32 }
%class.ModelPPM = type <{ i8, [25 x [16 x %struct.RARPPM_SEE2_CONTEXT]], %struct.RARPPM_SEE2_CONTEXT, [3 x i8], %struct.RARPPM_CONTEXT*, %struct.RARPPM_CONTEXT*, %struct.RARPPM_CONTEXT*, %struct.RARPPM_STATE*, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], [256 x i8], i8, i8, i8, i8, [128 x [64 x i16]], [4 x i8], %class.RangeCoder, %class.SubAllocator }>
%struct.RARPPM_SEE2_CONTEXT = type { i16, i8, i8 }
%struct.RARPPM_CONTEXT = type <{ i16, %union.anon.9, %struct.RARPPM_CONTEXT* }>
%union.anon.9 = type { %"struct.RARPPM_CONTEXT::FreqData" }
%"struct.RARPPM_CONTEXT::FreqData" = type <{ i16, %struct.RARPPM_STATE* }>
%struct.RARPPM_STATE = type <{ i8, i8, %struct.RARPPM_CONTEXT* }>
%class.RangeCoder = type { i32, i32, i32, %"struct.RangeCoder::SUBRANGE", %class.Unpack* }
%"struct.RangeCoder::SUBRANGE" = type { i32, i32, i32 }
%class.SubAllocator = type { i64, [38 x i8], [128 x i8], i8, i8*, i8*, i8*, [38 x %"struct.SubAllocator::RAR_NODE"], i8*, i8*, i8*, i8* }
%"struct.SubAllocator::RAR_NODE" = type { %"struct.SubAllocator::RAR_NODE"* }
%class.RarVM = type { i8*, [8 x i32] }
%class.BitInput = type { i32, i32, i8, i8* }
%class.Array.10 = type <{ %struct.UnpackFilter30**, i64, i64, i64, i8, [7 x i8] }>
%struct.UnpackFilter30 = type { i32, i32, i8, i32, %struct.VM_PreparedProgram }
%struct.VM_PreparedProgram = type <{ i32, [7 x i32], i8*, i32, [4 x i8] }>
%class.Array.12 = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>

$_ZN5ArrayIhE3AddEm = comdat any

@.str = private unnamed_addr constant [3 x i32] [i32 82, i32 82, i32 0], align 4
@ErrHandler = external global %class.ErrorHandler, align 4
@.str.1 = private unnamed_addr constant [4 x i32] [i32 67, i32 77, i32 84, i32 0], align 4
@.str.2 = private unnamed_addr constant [4 x i32] [i32 104, i32 37, i32 117, i32 0], align 4
@.str.3 = private unnamed_addr constant [5 x i32] [i32 104, i32 99, i32 37, i32 117, i32 0], align 4
@.str.4 = private unnamed_addr constant [4 x i32] [i32 120, i32 37, i32 117, i32 0], align 4
@.str.5 = private unnamed_addr constant [5 x i32] [i32 120, i32 99, i32 37, i32 117, i32 0], align 4
@.str.6 = private unnamed_addr constant [9 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [4 x i32] [i32 59, i32 37, i32 117, i32 0], align 4
@_ZZN7Archive17ConvertAttributesEvE4mask = internal unnamed_addr global i32 -1, align 4
@.str.8 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@.str.9 = private unnamed_addr constant [44 x i32] [i32 77, i32 97, i32 120, i32 105, i32 109, i32 117, i32 109, i32 32, i32 97, i32 108, i32 108, i32 111, i32 119, i32 101, i32 100, i32 32, i32 97, i32 114, i32 114, i32 97, i32 121, i32 32, i32 115, i32 105, i32 122, i32 101, i32 32, i32 40, i32 37, i32 117, i32 41, i32 32, i32 105, i32 115, i32 32, i32 101, i32 120, i32 99, i32 101, i32 101, i32 100, i32 101, i32 100, i32 0], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7Archive10ReadHeaderEv(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.uiMsgStore, align 8
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 46
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %47

6:                                                ; preds = %1
  %7 = bitcast %class.Archive* %0 to i64 (%class.Archive*)***
  %8 = load i64 (%class.Archive*)**, i64 (%class.Archive*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%class.Archive*)*, i64 (%class.Archive*)** %8, i64 6
  %10 = load i64 (%class.Archive*)*, i64 (%class.Archive*)** %9, align 8
  %11 = tail call i64 %10(%class.Archive* %0) #10
  %12 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %45 [
    i32 1, label %15
    i32 2, label %17
    i32 3, label %19
  ]

15:                                               ; preds = %6
  %16 = tail call i64 @_ZN7Archive12ReadHeader14Ev(%class.Archive* %0)
  br label %21

17:                                               ; preds = %6
  %18 = tail call i64 @_ZN7Archive12ReadHeader15Ev(%class.Archive* %0)
  br label %21

19:                                               ; preds = %6
  %20 = tail call i64 @_ZN7Archive12ReadHeader50Ev(%class.Archive* %0)
  br label %21

21:                                               ; preds = %19, %17, %15
  %22 = phi i64 [ %20, %19 ], [ %18, %17 ], [ %16, %15 ]
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %45, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %12, align 8
  %28 = icmp sgt i64 %26, %27
  br i1 %28, label %47, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %31 = bitcast %class.uiMsgStore* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 112, i1 false) #10
  %32 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 0
  %33 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 1
  %34 = bitcast i32** %33 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %34, align 8
  %35 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 3
  %36 = bitcast i32** %35 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %36, align 8
  %37 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 5
  %38 = bitcast i32** %37 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %38, align 8
  %39 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %39, align 8
  %40 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 1, i64 0
  %41 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 4
  %42 = bitcast i32* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 40, i1 false) #10
  store i32 26, i32* %41, align 8
  %43 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 2
  store i32 1, i32* %43, align 8
  store i32* %30, i32** %32, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #10
  %44 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 1, i8* %44, align 8
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  br label %45

45:                                               ; preds = %6, %29, %21
  %46 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  store i32 255, i32* %46, align 4
  br label %47

47:                                               ; preds = %24, %45, %1
  %48 = phi i64 [ 0, %1 ], [ 0, %45 ], [ %22, %24 ]
  ret i64 %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7Archive12ReadHeader14Ev(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.RawRead, align 8
  %3 = alloca i32, align 4
  %4 = alloca [2048 x i8], align 16
  %5 = bitcast %class.RawRead* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 72, i1 false)
  %6 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  call void @_ZN7RawReadC1EP4File(%class.RawRead* nonnull %2, %class.File* %6) #10
  %7 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 44
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %8, %10
  br i1 %11, label %41, label %12

12:                                               ; preds = %1
  %13 = call i64 @_ZN7RawRead4ReadEm(%class.RawRead* nonnull %2, i64 7) #10
  %14 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17
  call void @_ZN10MainHeader5ResetEv(%struct.MainHeader* %14) #10
  %15 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10
  store i32 -1431655766, i32* %3, align 4
  %16 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %2, i8* nonnull %15, i64 4) #10
  %17 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %2) #10
  %18 = icmp ult i16 %17, 7
  br i1 %18, label %40, label %19

19:                                               ; preds = %12
  %20 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %2) #10
  %21 = load i64, i64* %7, align 8
  %22 = zext i16 %17 to i64
  %23 = add nsw i64 %21, %22
  %24 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  store i32 1, i32* %25, align 4
  %26 = and i8 %20, 1
  %27 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 35
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 34
  %29 = lshr i8 %20, 3
  %30 = and i8 %29, 1
  store i8 %30, i8* %28, align 4
  %31 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 37
  %32 = lshr i8 %20, 2
  %33 = and i8 %32, 1
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 3
  %35 = lshr i8 %20, 1
  %36 = and i8 %35, 1
  store i8 %36, i8* %34, align 4
  %37 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 4
  %38 = lshr i8 %20, 4
  %39 = and i8 %38, 1
  store i8 %39, i8* %37, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  br label %163

40:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  br label %170

41:                                               ; preds = %1
  %42 = call i64 @_ZN7RawRead4ReadEm(%class.RawRead* nonnull %2, i64 21) #10
  %43 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20
  call void @_ZN10FileHeader5ResetEm(%struct.FileHeader* %43, i64 0) #10
  %44 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 0, i32 0, i32 1
  store i32 2, i32* %44, align 4
  %45 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %2) #10
  %46 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 0, i32 1
  store i32 %45, i32* %46, align 4
  %47 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %2) #10
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 11
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 13, i32 0
  store i32 1, i32* %50, align 8
  %51 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %2) #10
  %52 = zext i16 %51 to i32
  %53 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 13, i32 1, i32 0
  store i32 %52, i32* %53, align 4
  %54 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %2) #10
  %55 = zext i16 %54 to i32
  %56 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 0, i32 0, i32 3
  store i32 %55, i32* %56, align 4
  %57 = icmp ult i16 %54, 21
  br i1 %57, label %170, label %58

58:                                               ; preds = %41
  %59 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %2) #10
  %60 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %2) #10
  %61 = zext i8 %60 to i32
  %62 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 4, i32 0
  store i32 %61, i32* %62, align 4
  %63 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %2) #10
  %64 = zext i8 %63 to i32
  %65 = or i32 %64, 32768
  %66 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 0, i32 0, i32 2
  store i32 %65, i32* %66, align 8
  %67 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %2) #10
  %68 = icmp eq i8 %67, 2
  %69 = select i1 %68, i32 13, i32 10
  %70 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 2
  store i32 %69, i32* %70, align 4
  %71 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %2) #10
  %72 = zext i8 %71 to i64
  %73 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %2) #10
  %74 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 3
  store i8 %73, i8* %74, align 8
  %75 = load i32, i32* %66, align 8
  %76 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 15
  %77 = trunc i32 %75 to i8
  %78 = and i8 %77, 1
  store i8 %78, i8* %76, align 8
  %79 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 16
  %80 = lshr i32 %75, 1
  %81 = trunc i32 %80 to i8
  %82 = and i8 %81, 1
  store i8 %82, i8* %79, align 1
  %83 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 18
  %84 = lshr i32 %75, 2
  %85 = and i32 %84, 1
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %83, align 1
  %87 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 19
  store i32 %85, i32* %87, align 4
  %88 = load i32, i32* %46, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 10
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 32
  store i64 65536, i64* %91, align 8
  %92 = load i32, i32* %62, align 4
  %93 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 29
  %94 = lshr i32 %92, 4
  %95 = trunc i32 %94 to i8
  %96 = and i8 %95, 1
  store i8 %96, i8* %93, align 1
  %97 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 1
  store i8 0, i8* %97, align 8
  %98 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 36
  store i32 0, i32* %98, align 4
  %99 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 7
  call void @_ZN7RarTime6SetDosEj(%class.RarTime* %99, i32 %59) #10
  %100 = call i64 @_ZN7RawRead4ReadEm(%class.RawRead* nonnull %2, i64 %72) #10
  %101 = getelementptr inbounds [2048 x i8], [2048 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %101) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %101, i8 -86, i64 2048, i1 false)
  %102 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %2, i8* nonnull %101, i64 %72) #10
  %103 = getelementptr inbounds [2048 x i8], [2048 x i8]* %4, i64 0, i64 %72
  store i8 0, i8* %103, align 1
  call void @_Z8IntToExtPKcPcm(i8* nonnull %101, i8* nonnull %101, i64 2048) #10
  %104 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 5, i64 0
  %105 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* nonnull %101, i32* %104, i64 2048) #10
  %106 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  %107 = load %class.RAROptions*, %class.RAROptions** %106, align 8
  %108 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %107, i64 0, i32 56
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %116

111:                                              ; preds = %58
  %112 = call i32* @_Z8wcsupperPw(i32* %104) #10
  %113 = load %class.RAROptions*, %class.RAROptions** %106, align 8
  %114 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %113, i64 0, i32 56
  %115 = load i32, i32* %114, align 4
  br label %116

116:                                              ; preds = %111, %58
  %117 = phi i32 [ %115, %111 ], [ %109, %58 ]
  %118 = icmp eq i32 %117, 2
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  %120 = call i32* @_Z8wcslowerPw(i32* %104) #10
  br label %121

121:                                              ; preds = %116, %119
  %122 = load i32, i32* %98, align 4
  %123 = icmp eq i32 %122, 2
  br i1 %123, label %124, label %128

124:                                              ; preds = %121
  %125 = load i8, i8* %93, align 1, !range !2
  %126 = icmp eq i8 %125, 0
  %127 = select i1 %126, i32 32, i32 16
  store i32 %127, i32* %62, align 4
  br label %128

128:                                              ; preds = %124, %121
  %129 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  br label %130

130:                                              ; preds = %141, %128
  %131 = phi i32* [ %104, %128 ], [ %142, %141 ]
  %132 = load i32, i32* %131, align 4
  switch i32 %132, label %141 [
    i32 0, label %143
    i32 92, label %133
    i32 47, label %140
  ]

133:                                              ; preds = %130
  %134 = load i32, i32* %129, align 8
  %135 = icmp eq i32 %134, 3
  br i1 %135, label %136, label %140

136:                                              ; preds = %133
  %137 = load i32, i32* %98, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  store i32 95, i32* %131, align 4
  br label %141

140:                                              ; preds = %133, %130
  store i32 47, i32* %131, align 4
  br label %141

141:                                              ; preds = %140, %139, %136, %130
  %142 = getelementptr inbounds i32, i32* %131, i64 1
  br label %130

143:                                              ; preds = %130
  %144 = getelementptr inbounds %class.RawRead, %class.RawRead* %2, i64 0, i32 2
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %143
  %148 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  %149 = load i64, i64* %148, align 8
  %150 = load i64, i64* %7, align 8
  br label %159

151:                                              ; preds = %143
  %152 = load i64, i64* %7, align 8
  %153 = load i32, i32* %56, align 4
  %154 = zext i32 %153 to i64
  %155 = add nsw i64 %152, %154
  %156 = load i64, i64* %90, align 8
  %157 = add nsw i64 %155, %156
  %158 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  store i64 %157, i64* %158, align 8
  br label %159

159:                                              ; preds = %147, %151
  %160 = phi i64 [ %150, %147 ], [ %152, %151 ]
  %161 = phi i64 [ %149, %147 ], [ %157, %151 ]
  %162 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  store i32 2, i32* %162, align 4
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %101) #10
  br label %163

163:                                              ; preds = %19, %159
  %164 = phi i64 [ %21, %19 ], [ %160, %159 ]
  %165 = phi i64 [ %23, %19 ], [ %161, %159 ]
  %166 = icmp sgt i64 %165, %164
  br i1 %166, label %167, label %170

167:                                              ; preds = %163
  %168 = getelementptr inbounds %class.RawRead, %class.RawRead* %2, i64 0, i32 2
  %169 = load i64, i64* %168, align 8
  br label %170

170:                                              ; preds = %167, %163, %41, %40
  %171 = phi i64 [ 0, %40 ], [ 0, %41 ], [ %169, %167 ], [ 0, %163 ]
  %172 = getelementptr inbounds %class.RawRead, %class.RawRead* %2, i64 0, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  %174 = icmp eq i8* %173, null
  br i1 %174, label %185, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %class.RawRead, %class.RawRead* %2, i64 0, i32 0, i32 4
  %177 = load i8, i8* %176, align 8, !range !2
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %class.RawRead, %class.RawRead* %2, i64 0, i32 0, i32 2
  %181 = load i64, i64* %180, align 8
  call void @_Z9cleandataPvm(i8* nonnull %173, i64 %181) #10
  %182 = load i8*, i8** %172, align 8
  br label %183

183:                                              ; preds = %179, %175
  %184 = phi i8* [ %173, %175 ], [ %182, %179 ]
  call void @free(i8* %184) #10
  br label %185

185:                                              ; preds = %170, %183
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #10
  ret i64 %171
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7Archive12ReadHeader15Ev(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.uiMsgStore, align 8
  %3 = alloca %class.uiMsgStore, align 8
  %4 = alloca %class.uiMsgStore, align 8
  %5 = alloca %class.RawRead, align 8
  %6 = alloca [8192 x i8], align 16
  %7 = alloca %class.EncodeFileName, align 8
  %8 = alloca [4 x %class.RarTime*], align 16
  %9 = alloca %struct.RarLocalTime, align 4
  %10 = bitcast %class.RawRead* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 72, i1 false)
  %11 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  call void @_ZN7RawReadC1EP4File(%class.RawRead* nonnull %5, %class.File* %11) #10
  %12 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 42
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 44
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, 7
  %21 = icmp sgt i64 %17, %20
  br i1 %21, label %689, label %22

22:                                               ; preds = %1, %15
  %23 = call i64 @_ZN7RawRead4ReadEm(%class.RawRead* nonnull %5, i64 7) #10
  %24 = getelementptr inbounds %class.RawRead, %class.RawRead* %5, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %51

27:                                               ; preds = %22
  %28 = call i64 @_ZN4File10FileLengthEv(%class.File* %11) #10
  %29 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, %28
  br i1 %31, label %32, label %36

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %28
  br i1 %35, label %689, label %36

36:                                               ; preds = %32, %27
  %37 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %38 = bitcast %class.uiMsgStore* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %38) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 112, i1 false) #10
  %39 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 0
  %40 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 1
  %41 = bitcast i32** %40 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %41, align 8
  %42 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 3
  %43 = bitcast i32** %42 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %43, align 8
  %44 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 5
  %45 = bitcast i32** %44 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %45, align 8
  %46 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %46, align 8
  %47 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 1, i64 0
  %48 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 4
  %49 = bitcast i32* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 40, i1 false) #10
  store i32 56, i32* %48, align 8
  %50 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 2
  store i32 1, i32* %50, align 8
  store i32* %37, i32** %39, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %38) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 1) #10
  br label %689

51:                                               ; preds = %22
  %52 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 15
  %55 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %54, i64 0, i32 0
  store i32 %53, i32* %55, align 8
  %56 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 15, i32 4
  store i8 0, i8* %56, align 4
  %57 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %58 = zext i8 %57 to i32
  %59 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %60 = zext i16 %59 to i32
  %61 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 15, i32 2
  store i32 %60, i32* %61, align 8
  %62 = lshr i16 %59, 14
  %63 = trunc i16 %62 to i8
  %64 = and i8 %63, 1
  store i8 %64, i8* %56, align 8
  %65 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %66 = zext i16 %65 to i32
  %67 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 15, i32 3
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 15, i32 1
  store i32 %58, i32* %68, align 4
  %69 = icmp ult i16 %65, 7
  br i1 %69, label %70, label %86

70:                                               ; preds = %51
  %71 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %72 = bitcast %class.uiMsgStore* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %72) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 112, i1 false) #10
  %73 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 0
  %74 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 1
  %75 = bitcast i32** %74 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %75, align 8
  %76 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 3
  %77 = bitcast i32** %76 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %77, align 8
  %78 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 5
  %79 = bitcast i32** %78 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %79, align 8
  %80 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %80, align 8
  %81 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 1, i64 0
  %82 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 4
  %83 = bitcast i32* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 40, i1 false) #10
  store i32 26, i32* %82, align 8
  %84 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 2
  store i32 1, i32* %84, align 8
  store i32* %71, i32** %73, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %72) #10
  %85 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 1, i8* %85, align 8
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  br label %689

86:                                               ; preds = %51
  switch i8 %57, label %94 [
    i8 115, label %87
    i8 116, label %91
    i8 122, label %89
    i8 123, label %90
  ]

87:                                               ; preds = %86
  store i32 1, i32* %68, align 4
  %88 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  store i32 1, i32* %88, align 4
  br label %96

89:                                               ; preds = %86
  br label %91

90:                                               ; preds = %86
  br label %91

91:                                               ; preds = %86, %90, %89
  %92 = phi i32 [ 5, %90 ], [ 3, %89 ], [ 2, %86 ]
  store i32 %92, i32* %68, align 4
  %93 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  store i32 %92, i32* %93, align 4
  br label %100

94:                                               ; preds = %86
  %95 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  store i32 %58, i32* %95, align 4
  switch i8 %57, label %100 [
    i8 117, label %103
    i8 1, label %96
  ]

96:                                               ; preds = %87, %94
  %97 = load i32, i32* %61, align 8
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %91, %94, %96
  %101 = add nsw i32 %66, -7
  %102 = zext i32 %101 to i64
  br label %103

103:                                              ; preds = %96, %94, %100
  %104 = phi i64 [ %102, %100 ], [ 6, %94 ], [ 6, %96 ]
  %105 = call i64 @_ZN7RawRead4ReadEm(%class.RawRead* nonnull %5, i64 %104) #10
  %106 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %107 = load i64, i64* %106, align 8
  %108 = load i32, i32* %67, align 4
  %109 = zext i32 %108 to i64
  %110 = call i32 @_ZN7Archive14FullHeaderSizeEm(%class.Archive* %0, i64 %109) #10
  %111 = zext i32 %110 to i64
  %112 = add nsw i64 %107, %111
  %113 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  store i64 %112, i64* %113, align 8
  %114 = load i32, i32* %68, align 4
  switch i32 %114, label %640 [
    i32 1, label %115
    i32 2, label %161
    i32 3, label %161
    i32 5, label %502
    i32 117, label %536
    i32 120, label %548
    i32 119, label %566
  ]

115:                                              ; preds = %103
  %116 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17
  call void @_ZN10MainHeader5ResetEv(%struct.MainHeader* %116) #10
  %117 = bitcast %struct.MainHeader* %116 to i8*
  %118 = bitcast %struct.BaseBlock* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 4 %118, i64 20, i1 false)
  %119 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %120 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 1
  store i16 %119, i16* %120, align 4
  %121 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %122 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 2
  store i32 %121, i32* %122, align 8
  %123 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 0, i32 2
  %124 = load i32, i32* %123, align 8
  %125 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 35
  %126 = trunc i32 %124 to i8
  %127 = and i8 %126, 1
  store i8 %127, i8* %125, align 1
  %128 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 34
  %129 = lshr i32 %124, 3
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  store i8 %131, i8* %128, align 4
  %132 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 37
  %133 = lshr i32 %124, 2
  %134 = trunc i32 %133 to i8
  %135 = and i8 %134, 1
  store i8 %135, i8* %132, align 1
  %136 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 41
  %137 = lshr i32 %124, 6
  %138 = trunc i32 %137 to i8
  %139 = and i8 %138, 1
  store i8 %139, i8* %136, align 1
  %140 = lshr i8 %126, 7
  store i8 %140, i8* %12, align 4
  %141 = icmp eq i32 %121, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %115
  %143 = load i16, i16* %120, align 4
  %144 = icmp ne i16 %143, 0
  %145 = zext i1 %144 to i8
  br label %146

146:                                              ; preds = %115, %142
  %147 = phi i8 [ 1, %115 ], [ %145, %142 ]
  %148 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 38
  store i8 %147, i8* %148, align 8
  %149 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 3
  %150 = lshr i32 %124, 1
  %151 = trunc i32 %150 to i8
  %152 = and i8 %151, 1
  store i8 %152, i8* %149, align 4
  %153 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 39
  %154 = lshr i32 %124, 8
  %155 = trunc i32 %154 to i8
  %156 = and i8 %155, 1
  store i8 %156, i8* %153, align 1
  %157 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 40
  %158 = lshr i32 %124, 4
  %159 = trunc i32 %158 to i8
  %160 = and i8 %159, 1
  store i8 %160, i8* %157, align 2
  br label %649

161:                                              ; preds = %103, %103
  %162 = icmp eq i32 %114, 2
  %163 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20
  %164 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24
  %165 = select i1 %162, %struct.FileHeader* %163, %struct.FileHeader* %164
  call void @_ZN10FileHeader5ResetEm(%struct.FileHeader* %165, i64 0) #10
  %166 = bitcast %struct.FileHeader* %165 to i8*
  %167 = bitcast %struct.BaseBlock* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %166, i8* align 4 %167, i64 20, i1 false)
  %168 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 8
  %170 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 15
  %171 = trunc i32 %169 to i8
  %172 = and i8 %171, 1
  store i8 %172, i8* %170, align 8
  %173 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 16
  %174 = lshr i32 %169, 1
  %175 = trunc i32 %174 to i8
  %176 = and i8 %175, 1
  store i8 %176, i8* %173, align 1
  %177 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 18
  %178 = lshr i32 %169, 2
  %179 = trunc i32 %178 to i8
  %180 = and i8 %179, 1
  store i8 %180, i8* %177, align 1
  %181 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 20
  %182 = lshr i32 %169, 10
  %183 = trunc i32 %182 to i8
  %184 = and i8 %183, 1
  store i8 %184, i8* %181, align 8
  %185 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 28
  br i1 %162, label %186, label %190

186:                                              ; preds = %161
  %187 = lshr i32 %169, 4
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  store i8 %189, i8* %185, align 8
  br label %193

190:                                              ; preds = %161
  store i8 0, i8* %185, align 8
  %191 = and i32 %169, 16
  %192 = icmp ne i32 %191, 0
  br label %193

193:                                              ; preds = %186, %190
  %194 = phi i1 [ false, %186 ], [ %192, %190 ]
  %195 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 35
  %196 = zext i1 %194 to i8
  store i8 %196, i8* %195, align 2
  %197 = and i32 %169, 224
  %198 = icmp eq i32 %197, 224
  %199 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 29
  %200 = zext i1 %198 to i8
  store i8 %200, i8* %199, align 1
  br i1 %198, label %205, label %201

201:                                              ; preds = %193
  %202 = lshr i32 %169, 5
  %203 = and i32 %202, 7
  %204 = shl i32 65536, %203
  br label %205

205:                                              ; preds = %193, %201
  %206 = phi i32 [ %204, %201 ], [ 0, %193 ]
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 32
  store i64 %207, i64* %208, align 8
  %209 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 30
  %210 = lshr i32 %169, 3
  %211 = trunc i32 %210 to i8
  %212 = and i8 %211, 1
  store i8 %212, i8* %209, align 2
  %213 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 31
  %214 = lshr i32 %169, 11
  %215 = trunc i32 %214 to i8
  %216 = and i8 %215, 1
  store i8 %216, i8* %213, align 1
  %217 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %218 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 0, i32 1
  store i32 %217, i32* %218, align 4
  %219 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %220 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %221 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 1
  store i8 %220, i8* %221, align 8
  %222 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 13, i32 0
  store i32 2, i32* %222, align 8
  %223 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %224 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 13, i32 1, i32 0
  store i32 %223, i32* %224, align 4
  %225 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %226 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %227 = zext i8 %226 to i32
  %228 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 2
  store i32 %227, i32* %228, align 4
  %229 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %230 = add i8 %229, -48
  %231 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 3
  store i8 %230, i8* %231, align 8
  %232 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %233 = zext i16 %232 to i64
  %234 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %235 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 4, i32 0
  store i32 %234, i32* %235, align 4
  %236 = load i32, i32* %228, align 4
  %237 = icmp ugt i32 %236, 19
  %238 = and i32 %234, 16
  %239 = icmp eq i32 %238, 0
  %240 = or i1 %239, %237
  br i1 %240, label %242, label %241

241:                                              ; preds = %205
  store i8 1, i8* %199, align 1
  br label %242

242:                                              ; preds = %205, %241
  %243 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 19
  store i32 0, i32* %243, align 4
  %244 = load i8, i8* %177, align 1, !range !2
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %252, label %246

246:                                              ; preds = %242
  switch i32 %236, label %249 [
    i32 13, label %250
    i32 15, label %247
    i32 20, label %248
    i32 26, label %248
  ]

247:                                              ; preds = %246
  br label %250

248:                                              ; preds = %246, %246
  br label %250

249:                                              ; preds = %246
  br label %250

250:                                              ; preds = %246, %249, %248, %247
  %251 = phi i32 [ 2, %247 ], [ 3, %248 ], [ 4, %249 ], [ 1, %246 ]
  store i32 %251, i32* %243, align 4
  br label %252

252:                                              ; preds = %250, %242
  %253 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 36
  store i32 2, i32* %253, align 4
  %254 = load i8, i8* %221, align 8
  switch i8 %254, label %255 [
    i8 3, label %259
    i8 5, label %259
  ]

255:                                              ; preds = %252
  %256 = icmp ult i8 %254, 6
  br i1 %256, label %259, label %257

257:                                              ; preds = %255
  %258 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 37
  store i32 0, i32* %258, align 8
  br label %268

259:                                              ; preds = %255, %252, %252
  %260 = phi i32 [ 1, %252 ], [ 1, %252 ], [ 0, %255 ]
  store i32 %260, i32* %253, align 4
  %261 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 37
  store i32 0, i32* %261, align 8
  %262 = icmp eq i8 %254, 3
  %263 = and i32 %234, 61440
  %264 = icmp eq i32 %263, 40960
  %265 = and i1 %264, %262
  br i1 %265, label %266, label %268

266:                                              ; preds = %259
  store i32 1, i32* %261, align 8
  %267 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 38, i64 0
  store i32 0, i32* %267, align 4
  br label %268

268:                                              ; preds = %257, %266, %259
  %269 = icmp slt i32 %234, 0
  %270 = xor i1 %162, true
  %271 = and i1 %269, %270
  %272 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 33
  %273 = zext i1 %271 to i8
  store i8 %273, i8* %272, align 8
  %274 = load i32, i32* %168, align 8
  %275 = and i32 %274, 256
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 34
  %278 = lshr exact i32 %275, 8
  %279 = trunc i32 %278 to i8
  store i8 %279, i8* %277, align 1
  br i1 %276, label %284, label %280

280:                                              ; preds = %268
  %281 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %282 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %283 = and i32 %282, %219
  br label %284

284:                                              ; preds = %268, %280
  %285 = phi i32 [ %283, %280 ], [ %219, %268 ]
  %286 = phi i32 [ %281, %280 ], [ 0, %268 ]
  %287 = phi i32 [ %282, %280 ], [ 0, %268 ]
  %288 = icmp eq i32 %285, -1
  %289 = zext i1 %288 to i8
  %290 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 17
  store i8 %289, i8* %290, align 2
  %291 = zext i32 %286 to i64
  %292 = shl nuw i64 %291, 32
  %293 = load i32, i32* %218, align 4
  %294 = zext i32 %293 to i64
  %295 = or i64 %292, %294
  %296 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 10
  store i64 %295, i64* %296, align 8
  %297 = zext i32 %287 to i64
  %298 = shl nuw i64 %297, 32
  %299 = zext i32 %219 to i64
  %300 = or i64 %298, %299
  %301 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 11
  %302 = select i1 %288, i64 9223372034707292159, i64 %300
  store i64 %302, i64* %301, align 8
  %303 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %303) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %303, i8 -86, i64 8192, i1 false)
  %304 = icmp ult i64 %233, 8191
  %305 = select i1 %304, i64 %233, i64 8191
  %306 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %5, i8* nonnull %303, i64 %305) #10
  %307 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 %305
  store i8 0, i8* %307, align 1
  %308 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 5, i64 0
  br i1 %162, label %309, label %363

309:                                              ; preds = %284
  store i32 0, i32* %308, align 8
  %310 = load i32, i32* %168, align 8
  %311 = and i32 %310, 512
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %324, label %313

313:                                              ; preds = %309
  %314 = bitcast %class.EncodeFileName* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %314) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %314, i8 -86, i64 32, i1 false)
  call void @_ZN14EncodeFileNameC1Ev(%class.EncodeFileName* nonnull %7) #10
  %315 = call i64 @strlen(i8* nonnull %303) #11
  %316 = add i64 %315, 1
  %317 = icmp ugt i64 %305, %316
  br i1 %317, label %318, label %321

318:                                              ; preds = %313
  %319 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 %316
  %320 = sub i64 %305, %316
  call void @_ZN14EncodeFileName6DecodeEPcmPhmPwm(%class.EncodeFileName* nonnull %7, i8* nonnull %303, i64 %305, i8* %319, i64 %320, i32* %308, i64 2048) #10
  br label %321

321:                                              ; preds = %313, %318
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %314) #10
  %322 = load i32, i32* %308, align 8
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %309, %321
  call void @_Z13ArcCharToWidePKcPwm13ACTW_ENCODING(i8* nonnull %303, i32* %308, i64 2048, i32 1) #10
  br label %325

325:                                              ; preds = %324, %321
  %326 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  %327 = load %class.RAROptions*, %class.RAROptions** %326, align 8
  %328 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %327, i64 0, i32 56
  %329 = load i32, i32* %328, align 4
  %330 = icmp eq i32 %329, 1
  br i1 %330, label %331, label %336

331:                                              ; preds = %325
  %332 = call i32* @_Z8wcsupperPw(i32* %308) #10
  %333 = load %class.RAROptions*, %class.RAROptions** %326, align 8
  %334 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %333, i64 0, i32 56
  %335 = load i32, i32* %334, align 4
  br label %336

336:                                              ; preds = %331, %325
  %337 = phi i32 [ %335, %331 ], [ %329, %325 ]
  %338 = icmp eq i32 %337, 2
  br i1 %338, label %339, label %341

339:                                              ; preds = %336
  %340 = call i32* @_Z8wcslowerPw(i32* %308) #10
  br label %341

341:                                              ; preds = %336, %339
  %342 = load i32, i32* %253, align 4
  %343 = icmp eq i32 %342, 2
  br i1 %343, label %344, label %348

344:                                              ; preds = %341
  %345 = load i8, i8* %199, align 1, !range !2
  %346 = icmp eq i8 %345, 0
  %347 = select i1 %346, i32 32, i32 16
  store i32 %347, i32* %235, align 4
  br label %348

348:                                              ; preds = %344, %341
  %349 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  br label %350

350:                                              ; preds = %361, %348
  %351 = phi i32* [ %308, %348 ], [ %362, %361 ]
  %352 = load i32, i32* %351, align 4
  switch i32 %352, label %361 [
    i32 0, label %395
    i32 92, label %353
    i32 47, label %360
  ]

353:                                              ; preds = %350
  %354 = load i32, i32* %349, align 8
  %355 = icmp eq i32 %354, 3
  br i1 %355, label %356, label %360

356:                                              ; preds = %353
  %357 = load i32, i32* %253, align 4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %361

359:                                              ; preds = %356
  store i32 95, i32* %351, align 4
  br label %361

360:                                              ; preds = %353, %350
  store i32 47, i32* %351, align 4
  br label %361

361:                                              ; preds = %360, %359, %356, %350
  %362 = getelementptr inbounds i32, i32* %351, i64 1
  br label %350

363:                                              ; preds = %284
  %364 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* nonnull %303, i32* %308, i64 2048) #10
  %365 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 0, i32 0, i32 3
  %366 = load i32, i32* %365, align 4
  %367 = zext i16 %232 to i32
  %368 = sub i32 %366, %367
  %369 = load i32, i32* %168, align 8
  %370 = and i32 %369, 1024
  %371 = icmp eq i32 %370, 0
  %372 = select i1 %371, i32 -32, i32 -40
  %373 = add i32 %372, %368
  %374 = icmp sgt i32 %373, 0
  br i1 %374, label %375, label %390

375:                                              ; preds = %363
  %376 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 6
  %377 = sext i32 %373 to i64
  %378 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 6, i32 2
  %379 = load i64, i64* %378, align 8
  %380 = icmp ult i64 %379, %377
  %381 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 6, i32 1
  br i1 %380, label %382, label %385

382:                                              ; preds = %375
  %383 = load i64, i64* %381, align 8
  %384 = sub i64 %377, %383
  call void @_ZN5ArrayIhE3AddEm(%class.Array* %376, i64 %384) #10
  br label %386

385:                                              ; preds = %375
  store i64 %377, i64* %381, align 8
  br label %386

386:                                              ; preds = %382, %385
  %387 = getelementptr inbounds %class.Array, %class.Array* %376, i64 0, i32 0
  %388 = load i8*, i8** %387, align 8
  %389 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %5, i8* %388, i64 %377) #10
  br label %390

390:                                              ; preds = %386, %363
  %391 = call i32 @wcscmp(i32* %308, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.1, i64 0, i64 0)) #11
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %395

393:                                              ; preds = %390
  %394 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 36
  store i8 1, i8* %394, align 2
  br label %395

395:                                              ; preds = %350, %390, %393
  %396 = load i32, i32* %168, align 8
  %397 = and i32 %396, 1024
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %402, label %399

399:                                              ; preds = %395
  %400 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 21, i64 0
  %401 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %5, i8* %400, i64 8) #10
  br label %402

402:                                              ; preds = %395, %399
  %403 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 7
  call void @_ZN7RarTime6SetDosEj(%class.RarTime* %403, i32 %225) #10
  %404 = load i32, i32* %168, align 8
  %405 = and i32 %404, 4096
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %468, label %407

407:                                              ; preds = %402
  %408 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %409 = bitcast [4 x %class.RarTime*]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %409) #10
  %410 = getelementptr inbounds [4 x %class.RarTime*], [4 x %class.RarTime*]* %8, i64 0, i64 0
  %411 = getelementptr inbounds [4 x %class.RarTime*], [4 x %class.RarTime*]* %8, i64 0, i64 1
  %412 = getelementptr inbounds [4 x %class.RarTime*], [4 x %class.RarTime*]* %8, i64 0, i64 2
  %413 = getelementptr inbounds [4 x %class.RarTime*], [4 x %class.RarTime*]* %8, i64 0, i64 3
  %414 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 7
  store %class.RarTime* %414, %class.RarTime** %410, align 16
  %415 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 8
  store %class.RarTime* %415, %class.RarTime** %411, align 8
  %416 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 9
  store %class.RarTime* %416, %class.RarTime** %412, align 16
  store %class.RarTime* null, %class.RarTime** %413, align 8
  %417 = zext i16 %408 to i32
  %418 = bitcast %struct.RarLocalTime* %9 to i8*
  %419 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %9, i64 0, i32 5
  %420 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %9, i64 0, i32 6
  br label %422

421:                                              ; preds = %462
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %409) #10
  br label %468

422:                                              ; preds = %465, %407
  %423 = phi %class.RarTime* [ %414, %407 ], [ %467, %465 ]
  %424 = phi i64 [ 0, %407 ], [ %463, %465 ]
  %425 = trunc i64 %424 to i32
  %426 = shl i32 %425, 2
  %427 = sub i32 12, %426
  %428 = lshr i32 %417, %427
  %429 = and i32 %428, 8
  %430 = icmp eq i32 %429, 0
  %431 = icmp eq %class.RarTime* %423, null
  %432 = or i1 %430, %431
  br i1 %432, label %462, label %433

433:                                              ; preds = %422
  %434 = icmp eq i64 %424, 0
  br i1 %434, label %437, label %435

435:                                              ; preds = %433
  %436 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  call void @_ZN7RarTime6SetDosEj(%class.RarTime* nonnull %423, i32 %436) #10
  br label %437

437:                                              ; preds = %433, %435
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %418) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %418, i8 -86, i64 36, i1 false)
  call void @_ZN7RarTime8GetLocalEP12RarLocalTime(%class.RarTime* nonnull %423, %struct.RarLocalTime* nonnull %9) #10
  %438 = and i32 %428, 4
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %443, label %440

440:                                              ; preds = %437
  %441 = load i32, i32* %419, align 4
  %442 = add i32 %441, 1
  store i32 %442, i32* %419, align 4
  br label %443

443:                                              ; preds = %437, %440
  store i32 0, i32* %420, align 4
  %444 = and i32 %428, 3
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %448, label %446

446:                                              ; preds = %443
  %447 = xor i32 %444, 3
  br label %451

448:                                              ; preds = %451, %443
  %449 = phi i32 [ 0, %443 ], [ %459, %451 ]
  %450 = mul i32 %449, 100
  store i32 %450, i32* %420, align 4
  call void @_ZN7RarTime8SetLocalEP12RarLocalTime(%class.RarTime* %423, %struct.RarLocalTime* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %418) #10
  br label %462

451:                                              ; preds = %451, %446
  %452 = phi i32 [ 0, %446 ], [ %460, %451 ]
  %453 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %454 = zext i8 %453 to i32
  %455 = add nuw nsw i32 %447, %452
  %456 = shl i32 %455, 3
  %457 = shl i32 %454, %456
  %458 = load i32, i32* %420, align 4
  %459 = or i32 %457, %458
  store i32 %459, i32* %420, align 4
  %460 = add nuw nsw i32 %452, 1
  %461 = icmp eq i32 %460, %444
  br i1 %461, label %448, label %451

462:                                              ; preds = %422, %448
  %463 = add nuw nsw i64 %424, 1
  %464 = icmp eq i64 %463, 4
  br i1 %464, label %421, label %465

465:                                              ; preds = %462
  %466 = getelementptr inbounds [4 x %class.RarTime*], [4 x %class.RarTime*]* %8, i64 0, i64 %463
  %467 = load %class.RarTime*, %class.RarTime** %466, align 8
  br label %422

468:                                              ; preds = %402, %421
  %469 = load i64, i64* %113, align 8
  %470 = load i64, i64* %296, align 8
  %471 = or i64 %470, %469
  %472 = icmp slt i64 %471, 0
  %473 = sub nsw i64 9223372036854775807, %470
  %474 = icmp slt i64 %473, %469
  %475 = or i1 %472, %474
  %476 = add nsw i64 %470, %469
  %477 = select i1 %475, i64 0, i64 %476
  store i64 %477, i64* %113, align 8
  %478 = load i8, i8* %209, align 2, !range !2
  %479 = icmp ne i8 %478, 0
  %480 = call i32 @_ZN7RawRead8GetCRC15Eb(%class.RawRead* nonnull %5, i1 zeroext %479) #10
  %481 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %165, i64 0, i32 0, i32 0, i32 0
  %482 = load i32, i32* %481, align 8
  %483 = and i32 %480, 65535
  %484 = icmp eq i32 %482, %483
  br i1 %484, label %501, label %485

485:                                              ; preds = %468
  %486 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 1, i8* %486, align 8
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 1) #10
  %487 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %488 = bitcast %class.uiMsgStore* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %488) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 -86, i64 112, i1 false) #10
  %489 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 0
  %490 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 1
  %491 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 2
  %492 = bitcast i32** %491 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %492, align 8
  %493 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 4
  %494 = bitcast i32** %493 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %494, align 8
  %495 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 6
  %496 = bitcast i32** %495 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %496, align 8
  %497 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 1, i64 0
  %498 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 4
  %499 = bitcast i32* %497 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %499, i8 0, i64 40, i1 false) #10
  store i32 28, i32* %498, align 8
  %500 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 2
  store i32* %487, i32** %489, align 8
  store i32 2, i32* %500, align 8
  store i32* %308, i32** %490, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %488) #10
  br label %501

501:                                              ; preds = %468, %485
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %303) #10
  br label %649

502:                                              ; preds = %103
  %503 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21
  %504 = bitcast %struct.EndArcHeader* %503 to i8*
  %505 = bitcast %struct.BaseBlock* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %504, i8* align 4 %505, i64 20, i1 false)
  %506 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 0, i32 2
  %507 = load i32, i32* %506, align 8
  %508 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 3
  %509 = trunc i32 %507 to i8
  %510 = and i8 %509, 1
  store i8 %510, i8* %508, align 4
  %511 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 4
  %512 = lshr i32 %507, 1
  %513 = trunc i32 %512 to i8
  %514 = and i8 %513, 1
  store i8 %514, i8* %511, align 1
  %515 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 5
  %516 = lshr i32 %507, 2
  %517 = trunc i32 %516 to i8
  %518 = and i8 %517, 1
  store i8 %518, i8* %515, align 2
  %519 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 6
  %520 = lshr i32 %507, 3
  %521 = trunc i32 %520 to i8
  %522 = and i8 %521, 1
  store i8 %522, i8* %519, align 1
  %523 = icmp eq i8 %514, 0
  br i1 %523, label %528, label %524

524:                                              ; preds = %502
  %525 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %526 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 1
  store i32 %525, i32* %526, align 4
  %527 = load i8, i8* %519, align 1
  br label %528

528:                                              ; preds = %502, %524
  %529 = phi i8 [ %522, %502 ], [ %527, %524 ]
  %530 = icmp eq i8 %529, 0
  br i1 %530, label %649, label %531

531:                                              ; preds = %528
  %532 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %533 = zext i16 %532 to i32
  %534 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 2
  store i32 %533, i32* %534, align 8
  %535 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 50
  store i32 %533, i32* %535, align 4
  br label %649

536:                                              ; preds = %103
  %537 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25
  %538 = bitcast %struct.CommentHeader* %537 to i8*
  %539 = bitcast %struct.BaseBlock* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %538, i8* align 4 %539, i64 20, i1 false)
  %540 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %541 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 1
  store i16 %540, i16* %541, align 4
  %542 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %543 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 2
  store i8 %542, i8* %543, align 2
  %544 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %545 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 3
  store i8 %544, i8* %545, align 1
  %546 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %547 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 4
  store i16 %546, i16* %547, align 8
  br label %649

548:                                              ; preds = %103
  %549 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 26
  %550 = bitcast %struct.ProtectHeader* %549 to i8*
  %551 = bitcast %struct.BaseBlock* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %550, i8* align 4 %551, i64 20, i1 false)
  %552 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %553 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 26, i32 0, i32 1
  store i32 %552, i32* %553, align 4
  %554 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %555 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 26, i32 1
  store i8 %554, i8* %555, align 4
  %556 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %557 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 26, i32 2
  store i16 %556, i16* %557, align 2
  %558 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %559 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 26, i32 3
  store i32 %558, i32* %559, align 4
  %560 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 26, i32 4, i64 0
  %561 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %5, i8* %560, i64 8) #10
  %562 = load i32, i32* %553, align 4
  %563 = zext i32 %562 to i64
  %564 = load i64, i64* %113, align 8
  %565 = add nsw i64 %564, %563
  store i64 %565, i64* %113, align 8
  br label %649

566:                                              ; preds = %103
  %567 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 22
  %568 = bitcast %struct.SubBlockHeader* %567 to i8*
  %569 = bitcast %struct.BaseBlock* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %568, i8* align 4 %569, i64 20, i1 false)
  %570 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %571 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 22, i32 0, i32 1
  store i32 %570, i32* %571, align 4
  %572 = zext i32 %570 to i64
  %573 = load i64, i64* %113, align 8
  %574 = add nsw i64 %573, %572
  store i64 %574, i64* %113, align 8
  %575 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %576 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 22, i32 1
  store i16 %575, i16* %576, align 8
  %577 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %578 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 22, i32 2
  store i8 %577, i8* %578, align 2
  %579 = load i16, i16* %576, align 8
  switch i16 %579, label %649 [
    i16 257, label %580
    i16 260, label %608
    i16 261, label %619
  ]

580:                                              ; preds = %566
  %581 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 27
  %582 = bitcast %struct.UnixOwnersHeader* %581 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %582, i8* align 4 %568, i64 27, i1 false)
  %583 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %584 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 27, i32 1
  store i16 %583, i16* %584, align 4
  %585 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %586 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 27, i32 2
  store i16 %585, i16* %586, align 2
  %587 = load i16, i16* %584, align 4
  %588 = icmp ugt i16 %587, 255
  br i1 %588, label %589, label %590

589:                                              ; preds = %580
  store i16 255, i16* %584, align 4
  br label %590

590:                                              ; preds = %589, %580
  %591 = phi i16 [ 255, %589 ], [ %587, %580 ]
  %592 = icmp ugt i16 %585, 255
  br i1 %592, label %593, label %594

593:                                              ; preds = %590
  store i16 255, i16* %586, align 2
  br label %594

594:                                              ; preds = %593, %590
  %595 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 27, i32 3, i64 0
  %596 = zext i16 %591 to i64
  %597 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %5, i8* %595, i64 %596) #10
  %598 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 27, i32 4, i64 0
  %599 = load i16, i16* %586, align 2
  %600 = zext i16 %599 to i64
  %601 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %5, i8* %598, i64 %600) #10
  %602 = load i16, i16* %584, align 4
  %603 = zext i16 %602 to i64
  %604 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 27, i32 3, i64 %603
  store i8 0, i8* %604, align 1
  %605 = load i16, i16* %586, align 2
  %606 = zext i16 %605 to i64
  %607 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 27, i32 4, i64 %606
  store i8 0, i8* %607, align 1
  br label %649

608:                                              ; preds = %566
  %609 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 28
  %610 = bitcast %struct.EAHeader* %609 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %610, i8* align 4 %568, i64 27, i1 false)
  %611 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %612 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 28, i32 1
  store i32 %611, i32* %612, align 4
  %613 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %614 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 28, i32 2
  store i8 %613, i8* %614, align 4
  %615 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %616 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 28, i32 3
  store i8 %615, i8* %616, align 1
  %617 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %618 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 28, i32 4
  store i32 %617, i32* %618, align 4
  br label %649

619:                                              ; preds = %566
  %620 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 29
  %621 = bitcast %struct.StreamHeader* %620 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %621, i8* align 4 %568, i64 27, i1 false)
  %622 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %623 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 29, i32 2
  store i32 %622, i32* %623, align 4
  %624 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %625 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 29, i32 3
  store i8 %624, i8* %625, align 4
  %626 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %5) #10
  %627 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 29, i32 4
  store i8 %626, i8* %627, align 1
  %628 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %629 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 29, i32 6
  store i32 %628, i32* %629, align 4
  %630 = call zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead* nonnull %5) #10
  %631 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 29, i32 7
  %632 = icmp ult i16 %630, 259
  %633 = select i1 %632, i16 %630, i16 259
  store i16 %633, i16* %631, align 4
  %634 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 29, i32 8, i64 0
  %635 = zext i16 %633 to i64
  %636 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %5, i8* %634, i64 %635) #10
  %637 = load i16, i16* %631, align 4
  %638 = zext i16 %637 to i64
  %639 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 29, i32 8, i64 %638
  store i8 0, i8* %639, align 1
  br label %649

640:                                              ; preds = %103
  %641 = load i32, i32* %61, align 8
  %642 = trunc i32 %641 to i16
  %643 = icmp slt i16 %642, 0
  br i1 %643, label %644, label %649

644:                                              ; preds = %640
  %645 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %5) #10
  %646 = zext i32 %645 to i64
  %647 = load i64, i64* %113, align 8
  %648 = add nsw i64 %647, %646
  store i64 %648, i64* %113, align 8
  br label %649

649:                                              ; preds = %528, %640, %644, %594, %608, %619, %566, %531, %548, %536, %501, %146
  %650 = call i32 @_ZN7RawRead8GetCRC15Eb(%class.RawRead* nonnull %5, i1 zeroext false) #10
  %651 = load i32, i32* %55, align 8
  %652 = and i32 %650, 65535
  %653 = icmp eq i32 %651, %652
  br i1 %653, label %687, label %654

654:                                              ; preds = %649
  %655 = load i32, i32* %68, align 4
  switch i32 %655, label %685 [
    i32 121, label %687
    i32 118, label %687
    i32 5, label %656
  ]

656:                                              ; preds = %654
  %657 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 5
  %658 = load i8, i8* %657, align 2, !range !2
  %659 = icmp eq i8 %658, 0
  br i1 %659, label %685, label %660

660:                                              ; preds = %656
  %661 = bitcast %class.Archive* %0 to i64 (%class.Archive*)***
  %662 = load i64 (%class.Archive*)**, i64 (%class.Archive*)*** %661, align 8
  %663 = getelementptr inbounds i64 (%class.Archive*)*, i64 (%class.Archive*)** %662, i64 6
  %664 = load i64 (%class.Archive*)*, i64 (%class.Archive*)** %663, align 8
  %665 = call i64 %664(%class.Archive* %0) #10
  %666 = add nsw i64 %665, -7
  %667 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %668 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %667, align 8
  %669 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %668, i64 5
  %670 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %669, align 8
  call void %670(%class.Archive* %0, i64 %666, i32 0) #10
  %671 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* %11) #10
  %672 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* %11) #10
  %673 = or i8 %672, %671
  %674 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* %11) #10
  %675 = or i8 %674, %673
  %676 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* %11) #10
  %677 = or i8 %676, %675
  %678 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* %11) #10
  %679 = or i8 %678, %677
  %680 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* %11) #10
  %681 = or i8 %680, %679
  %682 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* %11) #10
  %683 = or i8 %682, %681
  %684 = icmp eq i8 %683, 0
  br i1 %684, label %687, label %685

685:                                              ; preds = %660, %654, %656
  %686 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 1, i8* %686, align 8
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  br label %687

687:                                              ; preds = %660, %685, %654, %654, %649
  %688 = load i64, i64* %24, align 8
  br label %689

689:                                              ; preds = %36, %32, %70, %687, %15
  %690 = phi i64 [ 0, %15 ], [ 0, %70 ], [ %688, %687 ], [ 0, %32 ], [ 0, %36 ]
  %691 = getelementptr inbounds %class.RawRead, %class.RawRead* %5, i64 0, i32 0, i32 0
  %692 = load i8*, i8** %691, align 8
  %693 = icmp eq i8* %692, null
  br i1 %693, label %704, label %694

694:                                              ; preds = %689
  %695 = getelementptr inbounds %class.RawRead, %class.RawRead* %5, i64 0, i32 0, i32 4
  %696 = load i8, i8* %695, align 8, !range !2
  %697 = icmp eq i8 %696, 0
  br i1 %697, label %702, label %698

698:                                              ; preds = %694
  %699 = getelementptr inbounds %class.RawRead, %class.RawRead* %5, i64 0, i32 0, i32 2
  %700 = load i64, i64* %699, align 8
  call void @_Z9cleandataPvm(i8* nonnull %692, i64 %700) #10
  %701 = load i8*, i8** %691, align 8
  br label %702

702:                                              ; preds = %698, %694
  %703 = phi i8* [ %692, %694 ], [ %701, %698 ]
  call void @free(i8* %703) #10
  br label %704

704:                                              ; preds = %689, %702
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #10
  ret i64 %690
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7Archive12ReadHeader50Ev(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.uiMsgStore, align 8
  %3 = alloca %class.uiMsgStore, align 8
  %4 = alloca %class.uiMsgStore, align 8
  %5 = alloca %class.uiMsgStore, align 8
  %6 = alloca %class.uiMsgStore, align 8
  %7 = alloca %class.uiMsgStore, align 8
  %8 = alloca %class.uiMsgStore, align 8
  %9 = alloca %class.uiMsgStore, align 8
  %10 = alloca %class.uiMsgStore, align 8
  %11 = alloca %class.RawRead, align 8
  %12 = alloca [20 x i32], align 16
  %13 = alloca [20 x i32], align 16
  %14 = alloca i32, align 4
  %15 = alloca %struct.sha256_context, align 8
  %16 = alloca [32 x i8], align 16
  %17 = alloca [8192 x i8], align 16
  %18 = bitcast %class.RawRead* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 72, i1 false)
  %19 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  call void @_ZN7RawReadC1EP4File(%class.RawRead* nonnull %11, %class.File* %19) #10
  %20 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 42
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %1
  %24 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 44
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, 8
  %29 = icmp sgt i64 %25, %28
  br i1 %29, label %558, label %30

30:                                               ; preds = %1, %23
  %31 = call i64 @_ZN7RawRead4ReadEm(%class.RawRead* nonnull %11, i64 7) #10
  %32 = icmp ult i64 %31, 7
  br i1 %32, label %33, label %57

33:                                               ; preds = %30
  %34 = call i64 @_ZN4File10FileLengthEv(%class.File* %19) #10
  %35 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %34
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %34
  br i1 %41, label %558, label %42

42:                                               ; preds = %38, %33
  %43 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %44 = bitcast %class.uiMsgStore* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 112, i1 false) #10
  %45 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 0
  %46 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 1
  %47 = bitcast i32** %46 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %47, align 8
  %48 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 3
  %49 = bitcast i32** %48 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %49, align 8
  %50 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 5
  %51 = bitcast i32** %50 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %51, align 8
  %52 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %52, align 8
  %53 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 1, i64 0
  %54 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 4
  %55 = bitcast i32* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 40, i1 false) #10
  store i32 56, i32* %54, align 8
  %56 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %10, i64 0, i32 2
  store i32 1, i32* %56, align 8
  store i32* %43, i32** %45, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %44) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 1) #10
  br label %558

57:                                               ; preds = %30
  %58 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 15
  %59 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 15, i32 4
  store i8 0, i8* %59, align 4
  %60 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %11) #10
  %61 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %58, i64 0, i32 0
  store i32 %60, i32* %61, align 8
  %62 = call i32 @_ZN7RawRead8GetVSizeEm(%class.RawRead* nonnull %11, i64 4) #10
  %63 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %64 = icmp eq i64 %63, 0
  %65 = icmp eq i32 %62, 0
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %83

67:                                               ; preds = %57
  %68 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %69 = bitcast %class.uiMsgStore* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %69) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 112, i1 false) #10
  %70 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 0
  %71 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 1
  %72 = bitcast i32** %71 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %72, align 8
  %73 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 3
  %74 = bitcast i32** %73 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %74, align 8
  %75 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 5
  %76 = bitcast i32** %75 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %76, align 8
  %77 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %77, align 8
  %78 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 1, i64 0
  %79 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 4
  %80 = bitcast i32* %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 40, i1 false) #10
  store i32 26, i32* %79, align 8
  %81 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %9, i64 0, i32 2
  store i32 1, i32* %81, align 8
  store i32* %68, i32** %70, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %69) #10
  %82 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 1, i8* %82, align 8
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  br label %558

83:                                               ; preds = %57
  %84 = trunc i64 %63 to i32
  %85 = zext i32 %62 to i64
  %86 = add nuw nsw i64 %85, 4294967293
  %87 = add i64 %86, %63
  %88 = trunc i64 %87 to i32
  %89 = add i32 %62, 4
  %90 = add i32 %89, %84
  %91 = icmp slt i32 %88, 0
  %92 = icmp ult i32 %90, 7
  %93 = or i1 %92, %91
  br i1 %93, label %94, label %110

94:                                               ; preds = %83
  %95 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %96 = bitcast %class.uiMsgStore* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %96) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 -86, i64 112, i1 false) #10
  %97 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 0
  %98 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 1
  %99 = bitcast i32** %98 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %99, align 8
  %100 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 3
  %101 = bitcast i32** %100 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %101, align 8
  %102 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 5
  %103 = bitcast i32** %102 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %103, align 8
  %104 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %104, align 8
  %105 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 1, i64 0
  %106 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 4
  %107 = bitcast i32* %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 40, i1 false) #10
  store i32 26, i32* %106, align 8
  %108 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 2
  store i32 1, i32* %108, align 8
  store i32* %95, i32** %97, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %96) #10
  %109 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 1, i8* %109, align 8
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  br label %558

110:                                              ; preds = %83
  %111 = shl i64 %87, 32
  %112 = ashr exact i64 %111, 32
  %113 = call i64 @_ZN7RawRead4ReadEm(%class.RawRead* nonnull %11, i64 %112) #10
  %114 = getelementptr inbounds %class.RawRead, %class.RawRead* %11, i64 0, i32 2
  %115 = load i64, i64* %114, align 8
  %116 = zext i32 %90 to i64
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %118, label %142

118:                                              ; preds = %110
  %119 = call i64 @_ZN4File10FileLengthEv(%class.File* %19) #10
  %120 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %121, %119
  br i1 %122, label %123, label %127

123:                                              ; preds = %118
  %124 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %125, %119
  br i1 %126, label %558, label %127

127:                                              ; preds = %123, %118
  %128 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %129 = bitcast %class.uiMsgStore* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %129) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 112, i1 false) #10
  %130 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 0
  %131 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 1
  %132 = bitcast i32** %131 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %132, align 8
  %133 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 3
  %134 = bitcast i32** %133 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %134, align 8
  %135 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 5
  %136 = bitcast i32** %135 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %136, align 8
  %137 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %137, align 8
  %138 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 1, i64 0
  %139 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 4
  %140 = bitcast i32* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 40, i1 false) #10
  store i32 56, i32* %139, align 8
  %141 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 2
  store i32 1, i32* %141, align 8
  store i32* %128, i32** %130, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %129) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 1) #10
  br label %558

142:                                              ; preds = %110
  %143 = call i32 @_ZN7RawRead8GetCRC50Ev(%class.RawRead* nonnull %11) #10
  %144 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %145 = trunc i64 %144 to i32
  %146 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 15, i32 1
  store i32 %145, i32* %146, align 4
  %147 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %148 = trunc i64 %147 to i32
  %149 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 15, i32 2
  store i32 %148, i32* %149, align 8
  %150 = lshr i32 %148, 2
  %151 = trunc i32 %150 to i8
  %152 = and i8 %151, 1
  store i8 %152, i8* %59, align 8
  %153 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 15, i32 3
  store i32 %90, i32* %153, align 4
  %154 = load i32, i32* %146, align 4
  %155 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  store i32 %154, i32* %155, align 4
  %156 = load i32, i32* %61, align 8
  %157 = icmp ne i32 %156, %143
  br i1 %157, label %158, label %175

158:                                              ; preds = %142
  %159 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %160 = bitcast %class.uiMsgStore* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %160) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 112, i1 false) #10
  %161 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 0
  %162 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 1
  %163 = bitcast i32** %162 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %163, align 8
  %164 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 3
  %165 = bitcast i32** %164 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %165, align 8
  %166 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 5
  %167 = bitcast i32** %166 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %167, align 8
  %168 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %168, align 8
  %169 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 1, i64 0
  %170 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 4
  %171 = bitcast i32* %169 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 40, i1 false) #10
  store i32 26, i32* %170, align 8
  %172 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 2
  store i32 1, i32* %172, align 8
  store i32* %159, i32** %161, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %160) #10
  %173 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 1, i8* %173, align 8
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  store i8 1, i8* %173, align 8
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  %174 = load i32, i32* %149, align 8
  br label %175

175:                                              ; preds = %158, %142
  %176 = phi i32 [ %174, %158 ], [ %148, %142 ]
  %177 = and i32 %176, 1
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %202, label %179

179:                                              ; preds = %175
  %180 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %181 = load i32, i32* %153, align 4
  %182 = zext i32 %181 to i64
  %183 = icmp ult i64 %180, %182
  br i1 %183, label %184, label %186

184:                                              ; preds = %179
  %185 = load i32, i32* %149, align 8
  br label %202

186:                                              ; preds = %179
  %187 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %188 = bitcast %class.uiMsgStore* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %188) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 -86, i64 112, i1 false) #10
  %189 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 0
  %190 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 1
  %191 = bitcast i32** %190 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %191, align 8
  %192 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 3
  %193 = bitcast i32** %192 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %193, align 8
  %194 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 5
  %195 = bitcast i32** %194 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %195, align 8
  %196 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %196, align 8
  %197 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 1, i64 0
  %198 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 4
  %199 = bitcast i32* %197 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %199, i8 0, i64 40, i1 false) #10
  store i32 26, i32* %198, align 8
  %200 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 2
  store i32 1, i32* %200, align 8
  store i32* %187, i32** %189, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %188) #10
  %201 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 1, i8* %201, align 8
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  br label %558

202:                                              ; preds = %184, %175
  %203 = phi i32 [ %185, %184 ], [ %176, %175 ]
  %204 = phi i64 [ %180, %184 ], [ 0, %175 ]
  %205 = and i32 %203, 2
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %209, label %207

207:                                              ; preds = %202
  %208 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  br label %209

209:                                              ; preds = %202, %207
  %210 = phi i64 [ %208, %207 ], [ 0, %202 ]
  %211 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %212 = load i64, i64* %211, align 8
  %213 = load i32, i32* %153, align 4
  %214 = zext i32 %213 to i64
  %215 = call i32 @_ZN7Archive14FullHeaderSizeEm(%class.Archive* %0, i64 %214) #10
  %216 = zext i32 %215 to i64
  %217 = add nsw i64 %212, %216
  %218 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  %219 = or i64 %217, %210
  %220 = icmp slt i64 %219, 0
  %221 = sub nsw i64 9223372036854775807, %210
  %222 = icmp slt i64 %221, %217
  %223 = or i1 %222, %220
  %224 = add nsw i64 %217, %210
  %225 = select i1 %223, i64 0, i64 %224
  store i64 %225, i64* %218, align 8
  %226 = load i32, i32* %146, align 4
  switch i32 %226, label %556 [
    i32 4, label %227
    i32 1, label %297
    i32 2, label %363
    i32 3, label %363
    i32 5, label %545
  ]

227:                                              ; preds = %209
  %228 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 18
  %229 = bitcast %struct.CryptHeader* %228 to i8*
  %230 = bitcast %struct.BaseBlock* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 4 %230, i64 20, i1 false)
  %231 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %232 = trunc i64 %231 to i32
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %252, label %234

234:                                              ; preds = %227
  %235 = bitcast [20 x i32]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %235) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %235, i8 -86, i64 80, i1 false)
  %236 = getelementptr inbounds [20 x i32], [20 x i32]* %12, i64 0, i64 0
  %237 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %236, i64 20, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.2, i64 0, i64 0), i32 %232) #10
  %238 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %239 = bitcast %class.uiMsgStore* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %239) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %239, i8 -86, i64 112, i1 false) #10
  %240 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 0
  %241 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 1
  %242 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 2
  %243 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 3
  %244 = bitcast i32** %243 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %244, align 8
  %245 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 5
  %246 = bitcast i32** %245 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %246, align 8
  %247 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %247, align 8
  %248 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 1, i64 0
  %249 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 4
  %250 = bitcast i32* %248 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %250, i8 0, i64 40, i1 false) #10
  store i32 34, i32* %249, align 8
  %251 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 2
  store i32* %238, i32** %240, align 8
  store i32* %238, i32** %241, align 8
  store i32 3, i32* %251, align 8
  store i32* %236, i32** %242, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %239) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %235) #10
  br label %558

252:                                              ; preds = %227
  %253 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %254 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 18, i32 1
  %255 = trunc i64 %253 to i8
  %256 = and i8 %255, 1
  store i8 %256, i8* %254, align 4
  %257 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* nonnull %11) #10
  %258 = zext i8 %257 to i32
  %259 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 18, i32 2
  store i32 %258, i32* %259, align 8
  %260 = icmp ugt i8 %257, 24
  br i1 %260, label %261, label %279

261:                                              ; preds = %252
  %262 = bitcast [20 x i32]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %262) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %262, i8 -86, i64 80, i1 false)
  %263 = getelementptr inbounds [20 x i32], [20 x i32]* %13, i64 0, i64 0
  %264 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %263, i64 20, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.3, i64 0, i64 0), i32 %258) #10
  %265 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %266 = bitcast %class.uiMsgStore* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %266) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %266, i8 -86, i64 112, i1 false) #10
  %267 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 0
  %268 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 1
  %269 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 2
  %270 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 3
  %271 = bitcast i32** %270 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %271, align 8
  %272 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 5
  %273 = bitcast i32** %272 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %273, align 8
  %274 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %274, align 8
  %275 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 1, i64 0
  %276 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 4
  %277 = bitcast i32* %275 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %277, i8 0, i64 40, i1 false) #10
  store i32 34, i32* %276, align 8
  %278 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 2
  store i32* %265, i32** %267, align 8
  store i32* %265, i32** %268, align 8
  store i32 3, i32* %278, align 8
  store i32* %263, i32** %269, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %266) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %262) #10
  br label %558

279:                                              ; preds = %252
  %280 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 18, i32 3, i64 0
  %281 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %11, i8* %280, i64 16) #10
  %282 = load i8, i8* %254, align 4, !range !2
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %296, label %284

284:                                              ; preds = %279
  %285 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 18, i32 4, i64 0
  %286 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %11, i8* %285, i64 8) #10
  %287 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %287) #10
  store i32 -1431655766, i32* %14, align 4
  %288 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %11, i8* nonnull %287, i64 4) #10
  %289 = bitcast %struct.sha256_context* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %289) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 -86, i64 104, i1 false)
  call void @_Z11sha256_initP14sha256_context(%struct.sha256_context* nonnull %15) #10
  call void @_Z14sha256_processP14sha256_contextPKvm(%struct.sha256_context* nonnull %15, i8* %285, i64 8) #10
  %290 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %290) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %290, i8 -86, i64 32, i1 false)
  call void @_Z11sha256_doneP14sha256_contextPh(%struct.sha256_context* nonnull %15, i8* nonnull %290) #10
  %291 = load i32, i32* %14, align 4
  %292 = bitcast [32 x i8]* %16 to i32*
  %293 = load i32, i32* %292, align 16
  %294 = icmp eq i32 %291, %293
  %295 = zext i1 %294 to i8
  store i8 %295, i8* %254, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %290) #10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %289) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %287) #10
  br label %296

296:                                              ; preds = %284, %279
  store i8 1, i8* %20, align 4
  br label %556

297:                                              ; preds = %209
  %298 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17
  call void @_ZN10MainHeader5ResetEv(%struct.MainHeader* %298) #10
  %299 = getelementptr inbounds %struct.MainHeader, %struct.MainHeader* %298, i64 0, i32 0
  %300 = bitcast %struct.MainHeader* %298 to i8*
  %301 = bitcast %struct.BaseBlock* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 4 %301, i64 20, i1 false)
  %302 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %303 = trunc i64 %302 to i32
  %304 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 35
  %305 = trunc i64 %302 to i8
  %306 = and i8 %305, 1
  store i8 %306, i8* %304, align 1
  %307 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 34
  %308 = lshr i32 %303, 2
  %309 = trunc i32 %308 to i8
  %310 = and i8 %309, 1
  store i8 %310, i8* %307, align 4
  %311 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 37
  %312 = lshr i32 %303, 4
  %313 = trunc i32 %312 to i8
  %314 = and i8 %313, 1
  store i8 %314, i8* %311, align 1
  %315 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 41
  %316 = lshr i32 %303, 3
  %317 = trunc i32 %316 to i8
  %318 = and i8 %317, 1
  store i8 %318, i8* %315, align 1
  %319 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 38
  store i8 0, i8* %319, align 8
  %320 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 40
  store i8 1, i8* %320, align 2
  %321 = and i32 %303, 2
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %327, label %323

323:                                              ; preds = %297
  %324 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %325 = trunc i64 %324 to i32
  %326 = load i8, i8* %304, align 1, !range !2
  br label %327

327:                                              ; preds = %297, %323
  %328 = phi i8 [ %326, %323 ], [ %306, %297 ]
  %329 = phi i32 [ %325, %323 ], [ 0, %297 ]
  %330 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 50
  store i32 %329, i32* %330, align 4
  %331 = icmp ne i8 %328, 0
  %332 = icmp eq i32 %329, 0
  %333 = and i1 %332, %331
  %334 = zext i1 %333 to i8
  %335 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 39
  store i8 %334, i8* %335, align 1
  %336 = icmp eq i64 %204, 0
  br i1 %336, label %338, label %337

337:                                              ; preds = %327
  call void @_ZN7Archive14ProcessExtra50EP7RawReadmP9BaseBlock(%class.Archive* %0, %class.RawRead* nonnull %11, i64 %204, %struct.BaseBlock* %299)
  br label %338

338:                                              ; preds = %327, %337
  %339 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 12
  %340 = load i8, i8* %339, align 8, !range !2
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %342, label %556

342:                                              ; preds = %338
  %343 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 5
  %344 = load i8, i8* %343, align 2, !range !2
  %345 = icmp eq i8 %344, 0
  br i1 %345, label %556, label %346

346:                                              ; preds = %342
  %347 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 6
  %348 = load i64, i64* %347, align 8
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %556, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  %352 = load %class.RAROptions*, %class.RAROptions** %351, align 8
  %353 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %352, i64 0, i32 9
  %354 = load i32, i32* %353, align 8
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %556, label %356

356:                                              ; preds = %350
  %357 = bitcast i64* %211 to <2 x i64>*
  %358 = load <2 x i64>, <2 x i64>* %357, align 8
  %359 = load i32, i32* %155, align 4
  %360 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 11
  call void @_ZN9QuickOpen4InitEP7Archiveb(%class.QuickOpen* %360, %class.Archive* %0, i1 zeroext false) #10
  %361 = load i64, i64* %347, align 8
  call void @_ZN9QuickOpen4LoadEm(%class.QuickOpen* %360, i64 %361) #10
  %362 = bitcast i64* %211 to <2 x i64>*
  store <2 x i64> %358, <2 x i64>* %362, align 8
  store i32 %359, i32* %155, align 4
  br label %556

363:                                              ; preds = %209, %209
  %364 = icmp eq i32 %226, 2
  %365 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20
  %366 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24
  %367 = select i1 %364, %struct.FileHeader* %365, %struct.FileHeader* %366
  call void @_ZN10FileHeader5ResetEm(%struct.FileHeader* %367, i64 0) #10
  %368 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 0, i32 0
  %369 = bitcast %struct.FileHeader* %367 to i8*
  %370 = bitcast %struct.BaseBlock* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %369, i8* align 4 %370, i64 20, i1 false)
  %371 = load i32, i32* %146, align 4
  %372 = icmp eq i32 %371, 2
  %373 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 34
  store i8 1, i8* %373, align 1
  %374 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 10
  store i64 %210, i64* %374, align 8
  %375 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %376 = trunc i64 %375 to i32
  %377 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 14
  store i32 %376, i32* %377, align 4
  %378 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %379 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 11
  store i64 %378, i64* %379, align 8
  %380 = load i32, i32* %377, align 4
  %381 = and i32 %380, 8
  %382 = icmp eq i32 %381, 0
  %383 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 17
  %384 = lshr exact i32 %381, 3
  %385 = trunc i32 %384 to i8
  store i8 %385, i8* %383, align 2
  br i1 %382, label %387, label %386

386:                                              ; preds = %363
  store i64 9223372034707292159, i64* %379, align 8
  br label %387

387:                                              ; preds = %363, %386
  %388 = phi i64 [ %378, %363 ], [ 9223372034707292159, %386 ]
  %389 = load i64, i64* %374, align 8
  %390 = icmp sgt i64 %389, %388
  %391 = select i1 %390, i64 %389, i64 %388
  %392 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 12
  store i64 %391, i64* %392, align 8
  %393 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %394 = trunc i64 %393 to i32
  %395 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 4, i32 0
  store i32 %394, i32* %395, align 4
  %396 = load i32, i32* %377, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %404, label %399

399:                                              ; preds = %387
  %400 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 7
  %401 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %11) #10
  %402 = zext i32 %401 to i64
  call void @_ZN7RarTime7SetUnixEl(%class.RarTime* %400, i64 %402) #10
  %403 = load i32, i32* %377, align 4
  br label %404

404:                                              ; preds = %387, %399
  %405 = phi i32 [ %396, %387 ], [ %403, %399 ]
  %406 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 13, i32 0
  store i32 0, i32* %406, align 8
  %407 = and i32 %405, 4
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %412, label %409

409:                                              ; preds = %404
  store i32 2, i32* %406, align 8
  %410 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* nonnull %11) #10
  %411 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 13, i32 1, i32 0
  store i32 %410, i32* %411, align 4
  br label %412

412:                                              ; preds = %404, %409
  %413 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 37
  store i32 0, i32* %413, align 8
  %414 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %415 = trunc i64 %414 to i32
  %416 = lshr i32 %415, 7
  %417 = trunc i32 %416 to i8
  %418 = and i8 %417, 7
  %419 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 3
  store i8 %418, i8* %419, align 8
  %420 = and i32 %415, 63
  %421 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 2
  %422 = icmp eq i32 %420, 0
  %423 = select i1 %422, i32 50, i32 9999
  store i32 %423, i32* %421, align 4
  %424 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %425 = trunc i64 %424 to i8
  %426 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 1
  store i8 %425, i8* %426, align 8
  %427 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %428 = load i32, i32* %149, align 8
  %429 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 33
  %430 = lshr i32 %428, 6
  %431 = trunc i32 %430 to i8
  %432 = and i8 %431, 1
  store i8 %432, i8* %429, align 8
  %433 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 36
  store i32 2, i32* %433, align 4
  %434 = load i8, i8* %426, align 8
  switch i8 %434, label %438 [
    i8 1, label %436
    i8 0, label %435
  ]

435:                                              ; preds = %412
  br label %436

436:                                              ; preds = %412, %435
  %437 = phi i32 [ 0, %435 ], [ 1, %412 ]
  store i32 %437, i32* %433, align 4
  br label %438

438:                                              ; preds = %436, %412
  %439 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 0, i32 0, i32 2
  %440 = load i32, i32* %439, align 8
  %441 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 15
  %442 = lshr i32 %440, 3
  %443 = trunc i32 %442 to i8
  %444 = and i8 %443, 1
  store i8 %444, i8* %441, align 8
  %445 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 16
  %446 = lshr i32 %440, 4
  %447 = trunc i32 %446 to i8
  %448 = and i8 %447, 1
  store i8 %448, i8* %445, align 1
  %449 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 35
  %450 = lshr i32 %440, 5
  %451 = trunc i32 %450 to i8
  %452 = and i8 %451, 1
  store i8 %452, i8* %449, align 2
  %453 = lshr i32 %415, 6
  %454 = trunc i32 %453 to i8
  %455 = and i8 %454, 1
  %456 = select i1 %372, i8 %455, i8 0
  %457 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 28
  store i8 %456, i8* %457, align 8
  %458 = load i32, i32* %377, align 4
  %459 = and i32 %458, 1
  %460 = icmp eq i32 %459, 0
  %461 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 29
  %462 = trunc i32 %459 to i8
  store i8 %462, i8* %461, align 1
  br i1 %460, label %463, label %467

463:                                              ; preds = %438
  %464 = lshr i64 %414, 10
  %465 = and i64 %464, 15
  %466 = shl i64 131072, %465
  br label %467

467:                                              ; preds = %438, %463
  %468 = phi i64 [ %466, %463 ], [ 0, %438 ]
  %469 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 32
  store i64 %468, i64* %469, align 8
  %470 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 18
  %471 = load i8, i8* %470, align 1, !range !2
  %472 = icmp eq i8 %471, 0
  %473 = select i1 %472, i32 0, i32 5
  %474 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 19
  store i32 %473, i32* %474, align 4
  %475 = getelementptr inbounds [8192 x i8], [8192 x i8]* %17, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %475) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %475, i8 -86, i64 8192, i1 false)
  %476 = icmp ult i64 %427, 8191
  %477 = select i1 %476, i64 %427, i64 8191
  %478 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* nonnull %11, i8* nonnull %475, i64 %477) #10
  %479 = getelementptr inbounds [8192 x i8], [8192 x i8]* %17, i64 0, i64 %477
  store i8 0, i8* %479, align 1
  %480 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %367, i64 0, i32 5, i64 0
  %481 = call zeroext i1 @_Z9UtfToWidePKcPwm(i8* nonnull %475, i32* %480, i64 2048) #10
  %482 = icmp eq i64 %204, 0
  br i1 %482, label %484, label %483

483:                                              ; preds = %467
  call void @_ZN7Archive14ProcessExtra50EP7RawReadmP9BaseBlock(%class.Archive* %0, %class.RawRead* nonnull %11, i64 %204, %struct.BaseBlock* %368)
  br label %484

484:                                              ; preds = %467, %483
  br i1 %372, label %485, label %523

485:                                              ; preds = %484
  %486 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  %487 = load %class.RAROptions*, %class.RAROptions** %486, align 8
  %488 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %487, i64 0, i32 56
  %489 = load i32, i32* %488, align 4
  %490 = icmp eq i32 %489, 1
  br i1 %490, label %491, label %496

491:                                              ; preds = %485
  %492 = call i32* @_Z8wcsupperPw(i32* %480) #10
  %493 = load %class.RAROptions*, %class.RAROptions** %486, align 8
  %494 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %493, i64 0, i32 56
  %495 = load i32, i32* %494, align 4
  br label %496

496:                                              ; preds = %491, %485
  %497 = phi i32 [ %495, %491 ], [ %489, %485 ]
  %498 = icmp eq i32 %497, 2
  br i1 %498, label %499, label %501

499:                                              ; preds = %496
  %500 = call i32* @_Z8wcslowerPw(i32* %480) #10
  br label %501

501:                                              ; preds = %496, %499
  %502 = load i32, i32* %433, align 4
  %503 = icmp eq i32 %502, 2
  br i1 %503, label %504, label %508

504:                                              ; preds = %501
  %505 = load i8, i8* %461, align 1, !range !2
  %506 = icmp eq i8 %505, 0
  %507 = select i1 %506, i32 32, i32 16
  store i32 %507, i32* %395, align 4
  br label %508

508:                                              ; preds = %504, %501
  %509 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  br label %510

510:                                              ; preds = %521, %508
  %511 = phi i32* [ %480, %508 ], [ %522, %521 ]
  %512 = load i32, i32* %511, align 4
  switch i32 %512, label %521 [
    i32 0, label %528
    i32 92, label %513
    i32 47, label %520
  ]

513:                                              ; preds = %510
  %514 = load i32, i32* %509, align 8
  %515 = icmp eq i32 %514, 3
  br i1 %515, label %516, label %520

516:                                              ; preds = %513
  %517 = load i32, i32* %433, align 4
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %519, label %521

519:                                              ; preds = %516
  store i32 95, i32* %511, align 4
  br label %521

520:                                              ; preds = %513, %510
  store i32 47, i32* %511, align 4
  br label %521

521:                                              ; preds = %520, %519, %516, %510
  %522 = getelementptr inbounds i32, i32* %511, i64 1
  br label %510

523:                                              ; preds = %484
  %524 = call i32 @wcscmp(i32* %480, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.1, i64 0, i64 0)) #11
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %526, label %528

526:                                              ; preds = %523
  %527 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 36
  store i8 1, i8* %527, align 2
  br label %528

528:                                              ; preds = %510, %526, %523
  br i1 %157, label %529, label %544

529:                                              ; preds = %528
  %530 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %531 = bitcast %class.uiMsgStore* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %531) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %531, i8 -86, i64 112, i1 false) #10
  %532 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 0
  %533 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 1
  %534 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 2
  %535 = bitcast i32** %534 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %535, align 8
  %536 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 4
  %537 = bitcast i32** %536 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %537, align 8
  %538 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 6
  %539 = bitcast i32** %538 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %539, align 8
  %540 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 1, i64 0
  %541 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 4
  %542 = bitcast i32* %540 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %542, i8 0, i64 40, i1 false) #10
  store i32 28, i32* %541, align 8
  %543 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 2
  store i32* %530, i32** %532, align 8
  store i32 2, i32* %543, align 8
  store i32* %480, i32** %533, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %531) #10
  br label %544

544:                                              ; preds = %529, %528
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %475) #10
  br label %556

545:                                              ; preds = %209
  %546 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21
  %547 = bitcast %struct.EndArcHeader* %546 to i8*
  %548 = bitcast %struct.BaseBlock* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %547, i8* align 4 %548, i64 20, i1 false)
  %549 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* nonnull %11) #10
  %550 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 3
  %551 = trunc i64 %549 to i8
  %552 = and i8 %551, 1
  store i8 %552, i8* %550, align 4
  %553 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 6
  store i8 0, i8* %553, align 1
  %554 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 4
  store i8 0, i8* %554, align 1
  %555 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21, i32 5
  store i8 0, i8* %555, align 2
  br label %556

556:                                              ; preds = %296, %356, %338, %342, %346, %350, %209, %545, %544
  %557 = load i64, i64* %114, align 8
  br label %558

558:                                              ; preds = %261, %234, %127, %123, %42, %38, %94, %186, %556, %67, %23
  %559 = phi i64 [ 0, %23 ], [ 0, %67 ], [ 0, %94 ], [ 0, %186 ], [ %557, %556 ], [ 0, %38 ], [ 0, %42 ], [ 0, %123 ], [ 0, %127 ], [ 0, %234 ], [ 0, %261 ]
  %560 = getelementptr inbounds %class.RawRead, %class.RawRead* %11, i64 0, i32 0, i32 0
  %561 = load i8*, i8** %560, align 8
  %562 = icmp eq i8* %561, null
  br i1 %562, label %573, label %563

563:                                              ; preds = %558
  %564 = getelementptr inbounds %class.RawRead, %class.RawRead* %11, i64 0, i32 0, i32 4
  %565 = load i8, i8* %564, align 8, !range !2
  %566 = icmp eq i8 %565, 0
  br i1 %566, label %571, label %567

567:                                              ; preds = %563
  %568 = getelementptr inbounds %class.RawRead, %class.RawRead* %11, i64 0, i32 0, i32 2
  %569 = load i64, i64* %568, align 8
  call void @_Z9cleandataPvm(i8* nonnull %561, i64 %569) #10
  %570 = load i8*, i8** %560, align 8
  br label %571

571:                                              ; preds = %567, %563
  %572 = phi i8* [ %561, %563 ], [ %570, %567 ]
  call void @free(i8* %572) #10
  br label %573

573:                                              ; preds = %558, %571
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #10
  ret i64 %559
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive15BrokenHeaderMsgEv(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.uiMsgStore, align 8
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %4 = bitcast %class.uiMsgStore* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 112, i1 false) #10
  %5 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 0
  %6 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 1
  %7 = bitcast i32** %6 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %7, align 8
  %8 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 3
  %9 = bitcast i32** %8 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %9, align 8
  %10 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 5
  %11 = bitcast i32** %10 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %11, align 8
  %12 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %12, align 8
  %13 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 1, i64 0
  %14 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 4
  %15 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 40, i1 false) #10
  store i32 26, i32* %14, align 8
  %16 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 2
  store i32 1, i32* %16, align 8
  store i32* %3, i32** %5, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %4) #10
  %17 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 1, i8* %17, align 8
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7Archive11SearchBlockE11HEADER_TYPE(%class.Archive*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  %4 = tail call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0)
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 5
  br label %8

8:                                                ; preds = %6, %22
  %9 = phi i64 [ %4, %6 ], [ %23, %22 ]
  %10 = phi i64 [ 0, %6 ], [ %15, %22 ]
  br i1 %7, label %14, label %11

11:                                               ; preds = %8
  %12 = load i32, i32* %3, align 4
  %13 = icmp eq i32 %12, 5
  br i1 %13, label %25, label %14

14:                                               ; preds = %11, %8
  %15 = add i64 %10, 1
  %16 = and i64 %15, 127
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @_Z4Waitv() #10
  br label %19

19:                                               ; preds = %18, %14
  %20 = load i32, i32* %3, align 4
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  tail call void @_ZN7Archive10SeekToNextEv(%class.Archive* %0) #10
  %23 = tail call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %8

25:                                               ; preds = %19, %11, %22, %2
  %26 = phi i64 [ 0, %2 ], [ 0, %22 ], [ 0, %11 ], [ %9, %19 ]
  ret i64 %26
}

declare void @_Z4Waitv() local_unnamed_addr #2

declare void @_ZN7Archive10SeekToNextEv(%class.Archive*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7Archive14SearchSubBlockEPKw(%class.Archive*, i32* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  %4 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 5, i64 0
  %5 = tail call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0)
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4
  %9 = icmp eq i32 %8, 5
  br i1 %9, label %31, label %13

10:                                               ; preds = %28
  %11 = load i32, i32* %3, align 4
  %12 = icmp eq i32 %11, 5
  br i1 %12, label %31, label %13

13:                                               ; preds = %7, %10
  %14 = phi i32 [ %11, %10 ], [ %8, %7 ]
  %15 = phi i64 [ %17, %10 ], [ 0, %7 ]
  %16 = phi i64 [ %29, %10 ], [ %5, %7 ]
  %17 = add i64 %15, 1
  %18 = and i64 %17, 127
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  tail call void @_Z4Waitv() #10
  %21 = load i32, i32* %3, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %14, %13 ]
  %24 = icmp eq i32 %23, 3
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = tail call i32 @wcscmp(i32* %4, i32* %1) #11
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25, %22
  tail call void @_ZN7Archive10SeekToNextEv(%class.Archive* %0) #10
  %29 = tail call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0)
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %10

31:                                               ; preds = %28, %10, %25, %7, %2
  %32 = phi i64 [ 0, %2 ], [ 0, %7 ], [ %16, %25 ], [ 0, %10 ], [ 0, %28 ]
  ret i64 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7Archive8SearchRREv(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 5
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %38, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 8
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %38, label %9

9:                                                ; preds = %5
  %10 = bitcast %class.Archive* %0 to i64 (%class.Archive*)***
  %11 = load i64 (%class.Archive*)**, i64 (%class.Archive*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%class.Archive*)*, i64 (%class.Archive*)** %11, i64 6
  %13 = load i64 (%class.Archive*)*, i64 (%class.Archive*)** %12, align 8
  %14 = tail call i64 %13(%class.Archive* %0) #10
  %15 = load i64, i64* %6, align 8
  %16 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %17 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %17, i64 5
  %19 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %18, align 8
  tail call void %19(%class.Archive* %0, i64 %15, i32 0) #10
  %20 = tail call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0)
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 3
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 5, i64 0
  %32 = tail call i32 @wcscmp(i32* %31, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str, i64 0, i64 0)) #11
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %67, label %34

34:                                               ; preds = %22, %9, %30, %26
  %35 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %16, align 8
  %36 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %35, i64 5
  %37 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %36, align 8
  tail call void %37(%class.Archive* %0, i64 %14, i32 0) #10
  br label %38

38:                                               ; preds = %34, %5, %1
  %39 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  %40 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 5, i64 0
  %41 = tail call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0) #10
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %67, label %43

43:                                               ; preds = %38
  %44 = load i32, i32* %39, align 4
  %45 = icmp eq i32 %44, 5
  br i1 %45, label %67, label %49

46:                                               ; preds = %64
  %47 = load i32, i32* %39, align 4
  %48 = icmp eq i32 %47, 5
  br i1 %48, label %67, label %49

49:                                               ; preds = %43, %46
  %50 = phi i32 [ %47, %46 ], [ %44, %43 ]
  %51 = phi i64 [ %53, %46 ], [ 0, %43 ]
  %52 = phi i64 [ %65, %46 ], [ %41, %43 ]
  %53 = add i64 %51, 1
  %54 = and i64 %53, 127
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  tail call void @_Z4Waitv() #10
  %57 = load i32, i32* %39, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 3
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  %62 = tail call i32 @wcscmp(i32* %40, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str, i64 0, i64 0)) #11
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %61, %58
  tail call void @_ZN7Archive10SeekToNextEv(%class.Archive* %0) #10
  %65 = tail call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0) #10
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %46

67:                                               ; preds = %46, %61, %64, %43, %38, %30
  %68 = phi i64 [ %20, %30 ], [ 0, %38 ], [ 0, %43 ], [ 0, %46 ], [ %52, %61 ], [ 0, %64 ]
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive14UnexpEndArcMsgEv(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.uiMsgStore, align 8
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %4 = tail call i64 @_ZN4File10FileLengthEv(%class.File* %3) #10
  %5 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, %4
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, %4
  br i1 %11, label %27, label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %14 = bitcast %class.uiMsgStore* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 112, i1 false) #10
  %15 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 0
  %16 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 1
  %17 = bitcast i32** %16 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %17, align 8
  %18 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 3
  %19 = bitcast i32** %18 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %19, align 8
  %20 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 5
  %21 = bitcast i32** %20 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %21, align 8
  %22 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %22, align 8
  %23 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 1, i64 0
  %24 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 4
  %25 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 40, i1 false) #10
  store i32 56, i32* %24, align 8
  %26 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 2
  store i32 1, i32* %26, align 8
  store i32* %13, i32** %15, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %14) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 1) #10
  br label %27

27:                                               ; preds = %8, %12
  ret void
}

declare i64 @_ZN4File10FileLengthEv(%class.File*) local_unnamed_addr #2

declare void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive12UnkEncVerMsgEPKwS1_(%class.Archive*, i32*, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.uiMsgStore, align 8
  %5 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %6 = bitcast %class.uiMsgStore* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 112, i1 false) #10
  %7 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 0
  %8 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 1
  %9 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 2
  %10 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 3
  %11 = bitcast i32** %10 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %11, align 8
  %12 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 5
  %13 = bitcast i32** %12 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %13, align 8
  %14 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %14, align 8
  %15 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 1, i64 0
  %16 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 4
  %17 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 40, i1 false) #10
  store i32 34, i32* %16, align 8
  %18 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 2
  store i32* %5, i32** %7, align 8
  store i32* %1, i32** %8, align 8
  store i32 3, i32* %18, align 8
  store i32* %2, i32** %9, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 1) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN7RawReadC1EP4File(%class.RawRead*, %class.File*) unnamed_addr #2

declare i64 @_ZN7RawRead4ReadEm(%class.RawRead*, i64) local_unnamed_addr #2

declare zeroext i16 @_ZN7RawRead4Get2Ev(%class.RawRead*) local_unnamed_addr #2

declare zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead*) local_unnamed_addr #2

declare i32 @_ZN7Archive14FullHeaderSizeEm(%class.Archive*, i64) local_unnamed_addr #2

declare void @_ZN10MainHeader5ResetEv(%struct.MainHeader*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZN7RawRead4Get4Ev(%class.RawRead*) local_unnamed_addr #2

declare void @_ZN10FileHeader5ResetEm(%struct.FileHeader*, i64) local_unnamed_addr #2

declare i64 @_ZN7RawRead4GetBEPvm(%class.RawRead*, i8*, i64) local_unnamed_addr #2

declare void @_ZN14EncodeFileNameC1Ev(%class.EncodeFileName*) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare void @_ZN14EncodeFileName6DecodeEPcmPhmPwm(%class.EncodeFileName*, i8*, i64, i8*, i64, i32*, i64) local_unnamed_addr #2

declare void @_Z13ArcCharToWidePKcPwm13ACTW_ENCODING(i8*, i32*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive15ConvertNameCaseEPw(%class.Archive* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  %4 = load %class.RAROptions*, %class.RAROptions** %3, align 8
  %5 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %4, i64 0, i32 56
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = tail call i32* @_Z8wcsupperPw(i32* %1) #10
  %10 = load %class.RAROptions*, %class.RAROptions** %3, align 8
  %11 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %10, i64 0, i32 56
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i32 [ %12, %8 ], [ %6, %2 ]
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = tail call i32* @_Z8wcslowerPw(i32* %1) #10
  br label %18

18:                                               ; preds = %16, %13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7Archive17ConvertFileHeaderEP10FileHeader(%class.Archive* nocapture readonly, %struct.FileHeader* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 36
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 29
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 4, i32 0
  %11 = select i1 %9, i32 32, i32 16
  store i32 %11, i32* %10, align 4
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %1, i64 0, i32 5, i64 0
  %14 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  br label %15

15:                                               ; preds = %27, %12
  %16 = phi i32* [ %13, %12 ], [ %28, %27 ]
  %17 = load i32, i32* %16, align 4
  switch i32 %17, label %27 [
    i32 0, label %18
    i32 92, label %19
    i32 47, label %26
  ]

18:                                               ; preds = %15
  ret void

19:                                               ; preds = %15
  %20 = load i32, i32* %14, align 8
  %21 = icmp eq i32 %20, 3
  br i1 %21, label %22, label %26

22:                                               ; preds = %19
  %23 = load i32, i32* %3, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  store i32 95, i32* %16, align 4
  br label %27

26:                                               ; preds = %15, %19
  store i32 47, i32* %16, align 4
  br label %27

27:                                               ; preds = %15, %22, %25, %26
  %28 = getelementptr inbounds i32, i32* %16, i64 1
  br label %15
}

declare zeroext i1 @_Z10CharToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #2

declare void @_ZN7RarTime6SetDosEj(%class.RarTime*, i32) local_unnamed_addr #2

declare void @_ZN7RarTime8GetLocalEP12RarLocalTime(%class.RarTime*, %struct.RarLocalTime*) local_unnamed_addr #2

declare void @_ZN7RarTime8SetLocalEP12RarLocalTime(%class.RarTime*, %struct.RarLocalTime*) local_unnamed_addr #2

declare i32 @_ZN7RawRead8GetCRC15Eb(%class.RawRead*, i1 zeroext) local_unnamed_addr #2

declare zeroext i8 @_ZN4File7GetByteEv(%class.File*) local_unnamed_addr #2

declare i32 @_ZN7RawRead8GetVSizeEm(%class.RawRead*, i64) local_unnamed_addr #2

declare i64 @_ZN7RawRead4GetVEv(%class.RawRead*) local_unnamed_addr #2

declare i32 @_ZN7RawRead8GetCRC50Ev(%class.RawRead*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @swprintf(i32*, i64, i32*, ...) local_unnamed_addr #5

declare void @_Z11sha256_initP14sha256_context(%struct.sha256_context*) local_unnamed_addr #2

declare void @_Z14sha256_processP14sha256_contextPKvm(%struct.sha256_context*, i8*, i64) local_unnamed_addr #2

declare void @_Z11sha256_doneP14sha256_contextPh(%struct.sha256_context*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive14ProcessExtra50EP7RawReadmP9BaseBlock(%class.Archive*, %class.RawRead*, i64, %struct.BaseBlock*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.uiMsgStore, align 8
  %6 = alloca %class.uiMsgStore, align 8
  %7 = alloca [20 x i32], align 16
  %8 = alloca [20 x i32], align 16
  %9 = alloca i32, align 4
  %10 = alloca %struct.sha256_context, align 8
  %11 = alloca [32 x i8], align 16
  %12 = alloca [20 x i32], align 16
  %13 = alloca [8192 x i8], align 16
  %14 = getelementptr inbounds %class.RawRead, %class.RawRead* %1, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %2
  %17 = getelementptr inbounds %class.RawRead, %class.RawRead* %1, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %349, label %20

20:                                               ; preds = %4
  store i64 %16, i64* %17, align 8
  %21 = icmp ugt i64 %2, 1
  br i1 %21, label %22, label %349

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 0, i32 1
  %24 = bitcast %struct.BaseBlock* %3 to %struct.MainHeader*
  %25 = getelementptr inbounds %struct.MainHeader, %struct.MainHeader* %24, i64 0, i32 5
  %26 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %27 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 1, i32 3
  %28 = bitcast i32* %27 to i64*
  %29 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 2, i32 2
  %30 = bitcast i32* %29 to i64*
  %31 = bitcast %struct.BaseBlock* %3 to %struct.FileHeader*
  %32 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 411, i32 3
  %33 = getelementptr inbounds i32, i32* %32, i64 4
  %34 = bitcast i32* %33 to i64*
  %35 = getelementptr inbounds i32, i32* %32, i64 2
  %36 = bitcast i32* %35 to i64*
  %37 = bitcast i32* %32 to %class.Array*
  %38 = bitcast i32* %32 to i8**
  %39 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %31, i64 0, i32 41
  %40 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %31, i64 0, i32 42
  %41 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 846, i32 2
  %42 = bitcast i32* %41 to [256 x i8]*
  %43 = bitcast i32* %41 to i8*
  %44 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 833, i32 3
  %45 = bitcast i32* %44 to i8*
  %46 = bitcast i32* %44 to [256 x i8]*
  %47 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 859, i32 1
  %48 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 859, i32 2
  %49 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %31, i64 0, i32 40
  %50 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 423, i32 3
  %51 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 833, i32 2
  %52 = bitcast i32* %51 to i8*
  %53 = getelementptr inbounds [8192 x i8], [8192 x i8]* %13, i64 0, i64 0
  %54 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 423, i32 4
  %55 = bitcast i8* %54 to i32*
  %56 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %31, i64 0, i32 31
  %57 = bitcast [20 x i32]* %12 to i8*
  %58 = getelementptr inbounds [20 x i32], [20 x i32]* %12, i64 0, i64 0
  %59 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 2, i32 0
  %60 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 413, i32 3
  %61 = bitcast i32* %60 to %class.RarTime*
  %62 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 414
  %63 = bitcast %struct.BaseBlock* %62 to %class.RarTime*
  %64 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 414, i32 2
  %65 = bitcast i32* %64 to %class.RarTime*
  %66 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 416, i32 0
  %67 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 416, i32 1
  %68 = bitcast i32* %67 to i8*
  %69 = bitcast [20 x i32]* %7 to i8*
  %70 = getelementptr inbounds [20 x i32], [20 x i32]* %7, i64 0, i64 0
  %71 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %72 = bitcast %class.uiMsgStore* %5 to i8*
  %73 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 0
  %74 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 1
  %75 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 2
  %76 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 3
  %77 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 5
  %78 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 7
  %79 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 1, i64 0
  %80 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 4
  %81 = bitcast i32* %79 to i8*
  %82 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 2
  %83 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %31, i64 0, i32 23
  %84 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %31, i64 0, i32 25
  %85 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 422, i32 1
  %86 = bitcast [20 x i32]* %8 to i8*
  %87 = getelementptr inbounds [20 x i32], [20 x i32]* %8, i64 0, i64 0
  %88 = bitcast %class.uiMsgStore* %6 to i8*
  %89 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 0
  %90 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 1
  %91 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 2
  %92 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 3
  %93 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 5
  %94 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 7
  %95 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 1, i64 0
  %96 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 4
  %97 = bitcast i32* %95 to i8*
  %98 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 2
  %99 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %31, i64 0, i32 21, i64 0
  %100 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %31, i64 0, i32 22, i64 0
  %101 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %31, i64 0, i32 24, i64 0
  %102 = bitcast i32* %9 to i8*
  %103 = bitcast %struct.sha256_context* %10 to i8*
  %104 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %105 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 418, i32 2
  %106 = bitcast i32* %105 to i8*
  %107 = getelementptr inbounds %struct.BaseBlock, %struct.BaseBlock* %3, i64 418, i32 1
  %108 = getelementptr inbounds %struct.FileHeader, %struct.FileHeader* %31, i64 0, i32 18
  %109 = bitcast [32 x i8]* %11 to i32*
  %110 = bitcast i32** %76 to <2 x i32*>*
  %111 = bitcast i32** %77 to <2 x i32*>*
  %112 = bitcast i32** %92 to <2 x i32*>*
  %113 = bitcast i32** %93 to <2 x i32*>*
  br label %114

114:                                              ; preds = %22, %345
  %115 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %116 = icmp slt i64 %115, 1
  br i1 %116, label %349, label %117

117:                                              ; preds = %114
  %118 = load i64, i64* %14, align 8
  %119 = load i64, i64* %17, align 8
  %120 = sub i64 %118, %119
  %121 = icmp eq i64 %120, 0
  %122 = icmp sgt i64 %115, %120
  %123 = or i1 %121, %122
  br i1 %123, label %349, label %124

124:                                              ; preds = %117
  %125 = add i64 %119, %115
  %126 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %127 = load i64, i64* %17, align 8
  %128 = sub i64 %125, %127
  %129 = icmp slt i64 %128, 0
  br i1 %129, label %349, label %130

130:                                              ; preds = %124
  %131 = load i32, i32* %23, align 4
  %132 = icmp eq i32 %131, 1
  %133 = icmp eq i64 %126, 1
  %134 = and i1 %133, %132
  br i1 %134, label %135, label %157

135:                                              ; preds = %130
  store i8 1, i8* %25, align 2
  %136 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %137 = trunc i64 %136 to i32
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %146, label %140

140:                                              ; preds = %135
  %141 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %140
  %144 = load i64, i64* %26, align 8
  %145 = add i64 %144, %141
  store i64 %145, i64* %28, align 8
  br label %146

146:                                              ; preds = %143, %140, %135
  %147 = and i32 %137, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %155, label %149

149:                                              ; preds = %146
  %150 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %149
  %153 = load i64, i64* %26, align 8
  %154 = add i64 %153, %150
  store i64 %154, i64* %30, align 8
  br label %155

155:                                              ; preds = %146, %149, %152
  %156 = load i32, i32* %23, align 4
  br label %157

157:                                              ; preds = %155, %130
  %158 = phi i32 [ %156, %155 ], [ %131, %130 ]
  %159 = and i32 %158, -2
  %160 = icmp eq i32 %159, 2
  br i1 %160, label %161, label %345

161:                                              ; preds = %157
  switch i64 %126, label %345 [
    i64 1, label %162
    i64 2, label %200
    i64 3, label %206
    i64 4, label %265
    i64 5, label %274
    i64 6, label %287
    i64 7, label %326
  ]

162:                                              ; preds = %161
  %163 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %164 = trunc i64 %163 to i32
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %162
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %69) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %69, i8 -86, i64 80, i1 false)
  %167 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %70, i64 20, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.4, i64 0, i64 0), i32 %164) #10
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %72) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 112, i1 false) #10
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %110, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %111, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %78, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 40, i1 false) #10
  store i32 34, i32* %80, align 8
  store i32* %71, i32** %73, align 8
  store i32* %59, i32** %74, align 8
  store i32 3, i32* %82, align 8
  store i32* %70, i32** %75, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %72) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %69) #10
  br label %345

168:                                              ; preds = %162
  %169 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %170 = trunc i64 %169 to i8
  %171 = and i8 %170, 1
  store i8 %171, i8* %83, align 1
  %172 = lshr i64 %169, 1
  %173 = trunc i64 %172 to i8
  %174 = and i8 %173, 1
  store i8 %174, i8* %84, align 2
  %175 = call zeroext i8 @_ZN7RawRead4Get1Ev(%class.RawRead* %1) #10
  %176 = zext i8 %175 to i32
  store i32 %176, i32* %85, align 4
  %177 = icmp ugt i8 %175, 24
  br i1 %177, label %178, label %180

178:                                              ; preds = %168
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %86) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %86, i8 -86, i64 80, i1 false)
  %179 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %87, i64 20, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.5, i64 0, i64 0), i32 %176) #10
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %88) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 112, i1 false) #10
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %112, align 8
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %113, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %94, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 40, i1 false) #10
  store i32 34, i32* %96, align 8
  store i32* %71, i32** %89, align 8
  store i32* %59, i32** %90, align 8
  store i32 3, i32* %98, align 8
  store i32* %87, i32** %91, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %88) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %86) #10
  br label %180

180:                                              ; preds = %178, %168
  %181 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* %1, i8* %99, i64 16) #10
  %182 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* %1, i8* %100, i64 16) #10
  %183 = load i8, i8* %83, align 1, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %199, label %185

185:                                              ; preds = %180
  %186 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* %1, i8* %101, i64 8) #10
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #10
  store i32 -1431655766, i32* %9, align 4
  %187 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* %1, i8* nonnull %102, i64 4) #10
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %103) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 104, i1 false)
  call void @_Z11sha256_initP14sha256_context(%struct.sha256_context* nonnull %10) #10
  call void @_Z14sha256_processP14sha256_contextPKvm(%struct.sha256_context* nonnull %10, i8* %101, i64 8) #10
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %104) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %104, i8 -86, i64 32, i1 false)
  call void @_Z11sha256_doneP14sha256_contextPh(%struct.sha256_context* nonnull %10, i8* nonnull %104) #10
  %188 = load i32, i32* %9, align 4
  %189 = load i32, i32* %109, align 16
  %190 = icmp eq i32 %188, %189
  %191 = zext i1 %190 to i8
  store i8 %191, i8* %83, align 1
  %192 = load i32, i32* %23, align 4
  %193 = icmp eq i32 %192, 3
  br i1 %193, label %194, label %198

194:                                              ; preds = %185
  %195 = call i32 @bcmp(i8* %101, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8)
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  store i8 0, i8* %83, align 1
  br label %198

198:                                              ; preds = %197, %194, %185
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %104) #10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %103) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #10
  br label %199

199:                                              ; preds = %180, %198
  store i8 1, i8* %106, align 8
  store i32 5, i32* %107, align 4
  store i8 1, i8* %108, align 1
  br label %345

200:                                              ; preds = %161
  %201 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %202 = trunc i64 %201 to i32
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %345

204:                                              ; preds = %200
  store i32 3, i32* %66, align 8
  %205 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* %1, i8* %68, i64 32) #10
  br label %345

206:                                              ; preds = %161
  %207 = icmp sgt i64 %128, 4
  br i1 %207, label %208, label %345

208:                                              ; preds = %206
  %209 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %210 = trunc i64 %209 to i32
  %211 = and i32 %210, 1
  %212 = icmp ne i32 %211, 0
  %213 = and i32 %210, 2
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %215, label %221

215:                                              ; preds = %208
  br i1 %212, label %216, label %219

216:                                              ; preds = %215
  %217 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* %1) #10
  %218 = zext i32 %217 to i64
  call void @_ZN7RarTime7SetUnixEl(%class.RarTime* %61, i64 %218) #10
  br label %221

219:                                              ; preds = %215
  %220 = call i64 @_ZN7RawRead4Get8Ev(%class.RawRead* %1) #10
  call void @_ZN7RarTime6SetWinEm(%class.RarTime* %61, i64 %220) #10
  br label %221

221:                                              ; preds = %216, %219, %208
  %222 = and i32 %210, 4
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %224, label %230

224:                                              ; preds = %221
  br i1 %212, label %225, label %228

225:                                              ; preds = %224
  %226 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* %1) #10
  %227 = zext i32 %226 to i64
  call void @_ZN7RarTime7SetUnixEl(%class.RarTime* %63, i64 %227) #10
  br label %230

228:                                              ; preds = %224
  %229 = call i64 @_ZN7RawRead4Get8Ev(%class.RawRead* %1) #10
  call void @_ZN7RarTime6SetWinEm(%class.RarTime* %63, i64 %229) #10
  br label %230

230:                                              ; preds = %225, %228, %221
  %231 = and i32 %210, 8
  %232 = icmp ne i32 %231, 0
  br i1 %232, label %233, label %239

233:                                              ; preds = %230
  br i1 %212, label %234, label %237

234:                                              ; preds = %233
  %235 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* %1) #10
  %236 = zext i32 %235 to i64
  call void @_ZN7RarTime7SetUnixEl(%class.RarTime* %65, i64 %236) #10
  br label %239

237:                                              ; preds = %233
  %238 = call i64 @_ZN7RawRead4Get8Ev(%class.RawRead* %1) #10
  call void @_ZN7RarTime6SetWinEm(%class.RarTime* %65, i64 %238) #10
  br label %345

239:                                              ; preds = %234, %230
  %240 = xor i1 %212, true
  %241 = and i32 %210, 16
  %242 = icmp eq i32 %241, 0
  %243 = or i1 %242, %240
  br i1 %243, label %345, label %244

244:                                              ; preds = %239
  br i1 %214, label %245, label %251

245:                                              ; preds = %244
  %246 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* %1) #10
  %247 = and i32 %246, 1073741823
  %248 = icmp ult i32 %247, 1000000000
  br i1 %248, label %249, label %251

249:                                              ; preds = %245
  %250 = zext i32 %247 to i64
  call void @_ZN7RarTime6AdjustEl(%class.RarTime* %61, i64 %250) #10
  br label %251

251:                                              ; preds = %249, %245, %244
  br i1 %223, label %252, label %258

252:                                              ; preds = %251
  %253 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* %1) #10
  %254 = and i32 %253, 1073741823
  %255 = icmp ult i32 %254, 1000000000
  br i1 %255, label %256, label %258

256:                                              ; preds = %252
  %257 = zext i32 %254 to i64
  call void @_ZN7RarTime6AdjustEl(%class.RarTime* %63, i64 %257) #10
  br label %258

258:                                              ; preds = %256, %252, %251
  br i1 %232, label %259, label %345

259:                                              ; preds = %258
  %260 = call i32 @_ZN7RawRead4Get4Ev(%class.RawRead* %1) #10
  %261 = and i32 %260, 1073741823
  %262 = icmp ult i32 %261, 1000000000
  br i1 %262, label %263, label %345

263:                                              ; preds = %259
  %264 = zext i32 %261 to i64
  call void @_ZN7RarTime6AdjustEl(%class.RarTime* %65, i64 %264) #10
  br label %345

265:                                              ; preds = %161
  %266 = icmp sgt i64 %128, 0
  br i1 %266, label %267, label %345

267:                                              ; preds = %265
  %268 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %269 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %270 = trunc i64 %269 to i32
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %345, label %272

272:                                              ; preds = %267
  store i8 1, i8* %56, align 1
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %57) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %57, i8 -86, i64 80, i1 false)
  %273 = call i32 (i32*, i64, i32*, ...) @swprintf(i32* nonnull %58, i64 20, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str.7, i64 0, i64 0), i32 %270) #10
  call void @_Z8wcsncatzPwPKwm(i32* %59, i32* nonnull %58, i64 2048) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %57) #10
  br label %345

274:                                              ; preds = %161
  %275 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %276 = trunc i64 %275 to i32
  store i32 %276, i32* %50, align 8
  %277 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %278 = trunc i64 %277 to i8
  %279 = and i8 %278, 1
  store i8 %279, i8* %52, align 4
  %280 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %53) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 -86, i64 8192, i1 false)
  store i8 0, i8* %53, align 16
  %281 = icmp ult i64 %280, 8191
  br i1 %281, label %282, label %285

282:                                              ; preds = %274
  %283 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* %1, i8* nonnull %53, i64 %280) #10
  %284 = getelementptr inbounds [8192 x i8], [8192 x i8]* %13, i64 0, i64 %280
  store i8 0, i8* %284, align 1
  br label %285

285:                                              ; preds = %282, %274
  %286 = call zeroext i1 @_Z9UtfToWidePKcPwm(i8* nonnull %53, i32* %55, i64 2048) #10
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %53) #10
  br label %345

287:                                              ; preds = %161
  %288 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %289 = trunc i64 %288 to i32
  %290 = lshr i32 %289, 2
  %291 = trunc i32 %290 to i8
  %292 = and i8 %291, 1
  store i8 %292, i8* %39, align 2
  %293 = lshr i32 %289, 3
  %294 = trunc i32 %293 to i8
  %295 = and i8 %294, 1
  store i8 %295, i8* %40, align 1
  store i8 0, i8* %43, align 8
  store i8 0, i8* %45, align 8
  %296 = and i32 %289, 1
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %304, label %298

298:                                              ; preds = %287
  %299 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %300 = icmp ult i64 %299, 255
  %301 = select i1 %300, i64 %299, i64 255
  %302 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* %1, i8* %45, i64 %301) #10
  %303 = getelementptr inbounds [256 x i8], [256 x i8]* %46, i64 0, i64 %301
  store i8 0, i8* %303, align 1
  br label %304

304:                                              ; preds = %287, %298
  %305 = and i32 %289, 2
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %313, label %307

307:                                              ; preds = %304
  %308 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %309 = icmp ult i64 %308, 255
  %310 = select i1 %309, i64 %308, i64 255
  %311 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* %1, i8* %43, i64 %310) #10
  %312 = getelementptr inbounds [256 x i8], [256 x i8]* %42, i64 0, i64 %310
  store i8 0, i8* %312, align 1
  br label %313

313:                                              ; preds = %304, %307
  %314 = load i8, i8* %39, align 2, !range !2
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %319, label %316

316:                                              ; preds = %313
  %317 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %318 = trunc i64 %317 to i32
  store i32 %318, i32* %47, align 8
  br label %319

319:                                              ; preds = %313, %316
  %320 = load i8, i8* %40, align 1, !range !2
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %325, label %322

322:                                              ; preds = %319
  %323 = call i64 @_ZN7RawRead4GetVEv(%class.RawRead* %1) #10
  %324 = trunc i64 %323 to i32
  store i32 %324, i32* %48, align 4
  br label %325

325:                                              ; preds = %319, %322
  store i8 1, i8* %49, align 1
  br label %345

326:                                              ; preds = %161
  %327 = icmp eq i32 %158, 3
  br i1 %327, label %328, label %334

328:                                              ; preds = %326
  %329 = load i64, i64* %14, align 8
  %330 = sub i64 %329, %125
  %331 = icmp eq i64 %330, 1
  %332 = zext i1 %331 to i64
  %333 = add nuw nsw i64 %128, %332
  br label %334

334:                                              ; preds = %328, %326
  %335 = phi i64 [ %128, %326 ], [ %333, %328 ]
  %336 = load i64, i64* %34, align 8
  %337 = icmp ult i64 %336, %335
  br i1 %337, label %338, label %341

338:                                              ; preds = %334
  %339 = load i64, i64* %36, align 8
  %340 = sub i64 %335, %339
  call void @_ZN5ArrayIhE3AddEm(%class.Array* %37, i64 %340) #10
  br label %342

341:                                              ; preds = %334
  store i64 %335, i64* %36, align 8
  br label %342

342:                                              ; preds = %338, %341
  %343 = load i8*, i8** %38, align 8
  %344 = call i64 @_ZN7RawRead4GetBEPvm(%class.RawRead* %1, i8* %343, i64 %335) #10
  br label %345

345:                                              ; preds = %272, %267, %239, %263, %259, %258, %200, %204, %166, %199, %265, %206, %161, %342, %325, %285, %157, %237
  store i64 %125, i64* %17, align 8
  %346 = load i64, i64* %14, align 8
  %347 = sub i64 %346, %125
  %348 = icmp ugt i64 %347, 1
  br i1 %348, label %114, label %349

349:                                              ; preds = %345, %117, %114, %124, %20, %4
  ret void
}

declare void @_ZN9QuickOpen4InitEP7Archiveb(%class.QuickOpen*, %class.Archive*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN9QuickOpen4LoadEm(%class.QuickOpen*, i64) local_unnamed_addr #2

declare void @_ZN7RarTime7SetUnixEl(%class.RarTime*, i64) local_unnamed_addr #2

declare zeroext i1 @_Z9UtfToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive18RequestArcPasswordEv(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.uiMsgStore, align 16
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  %4 = load %class.RAROptions*, %class.RAROptions** %3, align 8
  %5 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %4, i64 0, i32 19, i32 1
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %33

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %4, i64 0, i32 19
  %10 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %11 = tail call zeroext i1 @_Z13uiGetPassword15UIPASSWORD_TYPEPKwP11SecPassword(i32 2, i32* %10, %class.SecPassword* %9) #10
  br i1 %11, label %30, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %14 = bitcast %class.Archive* %0 to i1 (%class.File*)***
  %15 = load i1 (%class.File*)**, i1 (%class.File*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.File*)*, i1 (%class.File*)** %15, i64 3
  %17 = load i1 (%class.File*)*, i1 (%class.File*)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.File* %13) #10
  %19 = bitcast %class.uiMsgStore* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %19) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 112, i1 false) #10
  %20 = bitcast %class.uiMsgStore* %2 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %20, align 16
  %21 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 2
  %22 = bitcast i32** %21 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %22, align 16
  %23 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 4
  %24 = bitcast i32** %23 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %24, align 16
  %25 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 0, i64 6
  %26 = bitcast i32** %25 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %26, align 16
  %27 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 1, i64 0
  %28 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %2, i64 0, i32 4
  %29 = bitcast i32* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %29, i8 0, i64 40, i1 false) #10
  store i32 2, i32* %28, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %19) #10
  call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 255) #10
  br label %30

30:                                               ; preds = %12, %8
  %31 = load %class.RAROptions*, %class.RAROptions** %3, align 8
  %32 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %31, i64 0, i32 21
  store i8 1, i8* %32, align 1
  br label %33

33:                                               ; preds = %1, %30
  ret void
}

declare zeroext i1 @_Z13uiGetPassword15UIPASSWORD_TYPEPKwP11SecPassword(i32, i32*, %class.SecPassword*) local_unnamed_addr #2

declare void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler*, i32) local_unnamed_addr #2

declare void @_ZN7RarTime6SetWinEm(%class.RarTime*, i64) local_unnamed_addr #2

declare i64 @_ZN7RawRead4Get8Ev(%class.RawRead*) local_unnamed_addr #2

declare void @_ZN7RarTime6AdjustEl(%class.RarTime*, i64) local_unnamed_addr #2

declare void @_Z8wcsncatzPwPKwm(i32*, i32*, i64) local_unnamed_addr #2

declare void @_Z8IntToExtPKcPcm(i8*, i8*, i64) local_unnamed_addr #2

declare i32* @_Z8wcsupperPw(i32*) local_unnamed_addr #2

declare i32* @_Z8wcslowerPw(i32*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7Archive8IsArcDirEv(%class.Archive* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 29
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive17ConvertAttributesEv(%class.Archive* nocapture) local_unnamed_addr #0 align 2 {
  %2 = load i32, i32* @_ZZN7Archive17ConvertAttributesEvE4mask, align 4
  %3 = icmp eq i32 %2, -1
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = tail call i32 @umask(i32 18) #10
  store i32 %5, i32* @_ZZN7Archive17ConvertAttributesEvE4mask, align 4
  %6 = tail call i32 @umask(i32 %5) #10
  br label %7

7:                                                ; preds = %4, %1
  %8 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 36
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %28 [
    i32 0, label %10
    i32 1, label %40
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 4, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %10
  %16 = load i32, i32* @_ZZN7Archive17ConvertAttributesEvE4mask, align 4
  %17 = and i32 %16, 511
  %18 = xor i32 %17, 511
  store i32 %18, i32* %11, align 4
  br label %40

19:                                               ; preds = %10
  %20 = and i32 %12, 1
  %21 = icmp eq i32 %20, 0
  %22 = load i32, i32* @_ZZN7Archive17ConvertAttributesEvE4mask, align 4
  %23 = xor i32 %22, -1
  br i1 %21, label %26, label %24

24:                                               ; preds = %19
  %25 = and i32 %23, 292
  store i32 %25, i32* %11, align 4
  br label %40

26:                                               ; preds = %19
  %27 = and i32 %23, 438
  store i32 %27, i32* %11, align 4
  br label %40

28:                                               ; preds = %7
  %29 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 29
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %30, 0
  %32 = load i32, i32* @_ZZN7Archive17ConvertAttributesEvE4mask, align 4
  %33 = xor i32 %32, -1
  br i1 %31, label %37, label %34

34:                                               ; preds = %28
  %35 = and i32 %33, 16895
  %36 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 4, i32 0
  store i32 %35, i32* %36, align 4
  br label %40

37:                                               ; preds = %28
  %38 = and i32 %33, 33206
  %39 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 4, i32 0
  store i32 %38, i32* %39, align 4
  br label %40

40:                                               ; preds = %34, %37, %15, %26, %24, %7
  ret void
}

; Function Attrs: nounwind
declare i32 @umask(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7Archive11GetStartPosEv(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 44
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = add i64 %3, %6
  %8 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  br label %22

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 18, i32 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = tail call i32 @_ZN7Archive14FullHeaderSizeEm(%class.Archive* %0, i64 %19) #10
  %21 = add i32 %20, %16
  br label %22

22:                                               ; preds = %14, %11
  %23 = phi i32 [ %13, %11 ], [ %21, %14 ]
  %24 = zext i32 %23 to i64
  %25 = add nsw i64 %7, %24
  ret i64 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7Archive11ReadSubDataEP5ArrayIhEP4Fileb(%class.Archive*, %class.Array*, %class.File*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.uiMsgStore, align 8
  %6 = alloca %class.uiMsgStore, align 8
  %7 = alloca %class.uiMsgStore, align 8
  %8 = alloca %class.uiMsgStore, align 8
  %9 = alloca %class.Unpack, align 8
  %10 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %15 = bitcast %class.uiMsgStore* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %15) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 112, i1 false) #10
  %16 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 0
  %17 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 1
  %18 = bitcast i32** %17 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %18, align 8
  %19 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 3
  %20 = bitcast i32** %19 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %20, align 8
  %21 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 5
  %22 = bitcast i32** %21 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %22, align 8
  %23 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %23, align 8
  %24 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 1, i64 0
  %25 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 4
  %26 = bitcast i32* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 40, i1 false) #10
  store i32 29, i32* %25, align 8
  %27 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %8, i64 0, i32 2
  store i32 1, i32* %27, align 8
  store i32* %14, i32** %16, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %15) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  br label %190

28:                                               ; preds = %4
  %29 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24
  %30 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 3
  %31 = load i8, i8* %30, align 8
  %32 = icmp ugt i8 %31, 5
  br i1 %32, label %41, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 3
  %39 = select i1 %38, i32 50, i32 29
  %40 = icmp ugt i32 %35, %39
  br i1 %40, label %41, label %56

41:                                               ; preds = %33, %28
  %42 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %43 = bitcast %class.uiMsgStore* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %43) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 112, i1 false) #10
  %44 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 0
  %45 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 1
  %46 = bitcast i32** %45 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %46, align 8
  %47 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 3
  %48 = bitcast i32** %47 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %48, align 8
  %49 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 5
  %50 = bitcast i32** %49 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %50, align 8
  %51 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %51, align 8
  %52 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 1, i64 0
  %53 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 4
  %54 = bitcast i32* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 40, i1 false) #10
  store i32 30, i32* %53, align 8
  %55 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %7, i64 0, i32 2
  store i32 1, i32* %55, align 8
  store i32* %42, i32** %44, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %43) #10
  br label %190

56:                                               ; preds = %33
  %57 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 10
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 16
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %190, label %64

64:                                               ; preds = %60, %56
  %65 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2
  tail call void @_ZN11ComprDataIO4InitEv(%class.ComprDataIO* %65) #10
  %66 = bitcast %class.Unpack* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 59768, i8* nonnull %66) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 59768, i1 false)
  call void @_ZN6UnpackC1EP11ComprDataIO(%class.Unpack* nonnull %9, %class.ComprDataIO* %65) #10
  %67 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 32
  %68 = load i64, i64* %67, align 8
  call void @_ZN6Unpack4InitEmb(%class.Unpack* nonnull %9, i64 %68, i1 zeroext false) #10
  %69 = icmp eq %class.File* %2, null
  br i1 %69, label %70, label %107

70:                                               ; preds = %64
  %71 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 11
  %72 = load i64, i64* %71, align 8
  %73 = icmp sgt i64 %72, 16777216
  br i1 %73, label %74, label %89

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %76 = bitcast %class.uiMsgStore* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %76) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 112, i1 false) #10
  %77 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 0
  %78 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 1
  %79 = bitcast i32** %78 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %79, align 8
  %80 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 3
  %81 = bitcast i32** %80 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %81, align 8
  %82 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 5
  %83 = bitcast i32** %82 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %83, align 8
  %84 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32** %84, align 8
  %85 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 1, i64 0
  %86 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 4
  %87 = bitcast i32* %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 40, i1 false) #10
  store i32 30, i32* %86, align 8
  %88 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %6, i64 0, i32 2
  store i32 1, i32* %88, align 8
  store i32* %75, i32** %77, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %76) #10
  br label %188

89:                                               ; preds = %70
  %90 = icmp eq %class.Array* %1, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %89
  %92 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2, i32 12
  store i8 1, i8* %92, align 1
  br label %107

93:                                               ; preds = %89
  %94 = getelementptr inbounds %class.Array, %class.Array* %1, i64 0, i32 2
  %95 = load i64, i64* %94, align 8
  %96 = icmp ult i64 %95, %72
  %97 = getelementptr inbounds %class.Array, %class.Array* %1, i64 0, i32 1
  br i1 %96, label %98, label %101

98:                                               ; preds = %93
  %99 = load i64, i64* %97, align 8
  %100 = sub i64 %72, %99
  call void @_ZN5ArrayIhE3AddEm(%class.Array* nonnull %1, i64 %100) #10
  br label %102

101:                                              ; preds = %93
  store i64 %72, i64* %97, align 8
  br label %102

102:                                              ; preds = %98, %101
  %103 = getelementptr inbounds %class.Array, %class.Array* %1, i64 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = load i64, i64* %71, align 8
  %106 = trunc i64 %105 to i32
  call void @_ZN11ComprDataIO17SetUnpackToMemoryEPhj(%class.ComprDataIO* %65, i8* %104, i32 %106) #10
  br label %107

107:                                              ; preds = %91, %102, %64
  %108 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 18
  %109 = load i8, i8* %108, align 1, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %131, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  %113 = load %class.RAROptions*, %class.RAROptions** %112, align 8
  %114 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %113, i64 0, i32 19, i32 1
  %115 = load i8, i8* %114, align 4, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %188, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %113, i64 0, i32 19
  %119 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 19
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 20
  %122 = load i8, i8* %121, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  %124 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 21, i64 0
  %125 = select i1 %123, i8* null, i8* %124
  %126 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 22, i64 0
  %127 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 27
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 26, i64 0
  %130 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 24, i64 0
  call void @_ZN11ComprDataIO13SetEncryptionEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_(%class.ComprDataIO* %65, i1 zeroext false, i32 %120, %class.SecPassword* %118, i8* %125, i8* %126, i32 %128, i8* %129, i8* %130) #10
  br label %131

131:                                              ; preds = %107, %117
  %132 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2, i32 38
  %133 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 13
  %134 = getelementptr inbounds %struct.HashValue, %struct.HashValue* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 8
  call void @_ZN8DataHash4InitE9HASH_TYPEj(%class.DataHash* %132, i32 %135, i32 1) #10
  %136 = load i64, i64* %57, align 8
  %137 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2, i32 10
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2, i32 11
  store i8 0, i8* %138, align 8
  %139 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  call void @_ZN11ComprDataIO8SetFilesEP4FileS1_(%class.ComprDataIO* %65, %class.File* %139, %class.File* %2) #10
  %140 = zext i1 %3 to i8
  %141 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2, i32 12
  store i8 %140, i8* %141, align 1
  %142 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 16
  %143 = load i8, i8* %142, align 1, !range !2
  %144 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2, i32 26
  store i8 %143, i8* %144, align 1
  %145 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2, i32 19
  store %struct.FileHeader* %29, %struct.FileHeader** %145, align 8
  %146 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2, i32 20
  store i64* null, i64** %146, align 8
  %147 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 11
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %class.Unpack, %class.Unpack* %9, i64 0, i32 23
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %class.Unpack, %class.Unpack* %9, i64 0, i32 28
  store i8 0, i8* %150, align 8
  %151 = load i8, i8* %30, align 8
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %131
  call void @_ZN10CmdExtract11UnstoreFileER11ComprDataIOl(%class.ComprDataIO* dereferenceable(312) %65, i64 %148) #10
  br label %156

154:                                              ; preds = %131
  %155 = load i32, i32* %34, align 4
  call void @_ZN6Unpack8DoUnpackEjb(%class.Unpack* nonnull %9, i32 %155, i1 zeroext false) #10
  br label %156

156:                                              ; preds = %154, %153
  %157 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 25
  %158 = load i8, i8* %157, align 2, !range !2
  %159 = icmp eq i8 %158, 0
  %160 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 26, i64 0
  %161 = select i1 %159, i8* null, i8* %160
  %162 = call zeroext i1 @_ZN8DataHash3CmpEP9HashValuePh(%class.DataHash* %132, %struct.HashValue* %133, i8* %161) #10
  br i1 %162, label %188, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %165 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 5, i64 0
  %166 = bitcast %class.uiMsgStore* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %166) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 112, i1 false) #10
  %167 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 0
  %168 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 1
  %169 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 2
  %170 = bitcast i32** %169 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %170, align 8
  %171 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 4
  %172 = bitcast i32** %171 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %172, align 8
  %173 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 6
  %174 = bitcast i32** %173 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.8, i64 0, i64 0)>, <2 x i32*>* %174, align 8
  %175 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 1, i64 0
  %176 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 4
  %177 = bitcast i32* %175 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 40, i1 false) #10
  store i32 31, i32* %176, align 8
  %178 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 2
  store i32* %164, i32** %167, align 8
  store i32 2, i32* %178, align 8
  store i32* %165, i32** %168, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %166) #10
  call void @_ZN12ErrorHandler12SetErrorCodeE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 3) #10
  %179 = icmp eq %class.Array* %1, null
  br i1 %179, label %188, label %180

180:                                              ; preds = %163
  %181 = getelementptr inbounds %class.Array, %class.Array* %1, i64 0, i32 0
  %182 = load i8*, i8** %181, align 8
  %183 = icmp eq i8* %182, null
  br i1 %183, label %185, label %184

184:                                              ; preds = %180
  call void @free(i8* nonnull %182) #10
  store i8* null, i8** %181, align 8
  br label %185

185:                                              ; preds = %180, %184
  %186 = getelementptr inbounds %class.Array, %class.Array* %1, i64 0, i32 1
  %187 = bitcast i64* %186 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 16, i1 false) #10
  br label %188

188:                                              ; preds = %111, %156, %185, %163, %74
  %189 = phi i1 [ false, %74 ], [ false, %111 ], [ false, %163 ], [ false, %185 ], [ true, %156 ]
  call void @_ZN6UnpackD1Ev(%class.Unpack* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 59768, i8* nonnull %66) #10
  br label %190

190:                                              ; preds = %60, %188, %41, %13
  %191 = phi i1 [ false, %13 ], [ false, %41 ], [ %189, %188 ], [ true, %60 ]
  ret i1 %191
}

declare void @_ZN11ComprDataIO4InitEv(%class.ComprDataIO*) local_unnamed_addr #2

declare void @_ZN6UnpackC1EP11ComprDataIO(%class.Unpack*, %class.ComprDataIO*) unnamed_addr #2

declare void @_ZN6Unpack4InitEmb(%class.Unpack*, i64, i1 zeroext) local_unnamed_addr #2

declare void @_ZN11ComprDataIO17SetUnpackToMemoryEPhj(%class.ComprDataIO*, i8*, i32) local_unnamed_addr #2

declare void @_ZN11ComprDataIO13SetEncryptionEb12CRYPT_METHODP11SecPasswordPKhS4_jPhS5_(%class.ComprDataIO*, i1 zeroext, i32, %class.SecPassword*, i8*, i8*, i32, i8*, i8*) local_unnamed_addr #2

declare void @_ZN8DataHash4InitE9HASH_TYPEj(%class.DataHash*, i32, i32) local_unnamed_addr #2

declare void @_ZN11ComprDataIO8SetFilesEP4FileS1_(%class.ComprDataIO*, %class.File*, %class.File*) local_unnamed_addr #2

declare void @_ZN10CmdExtract11UnstoreFileER11ComprDataIOl(%class.ComprDataIO* dereferenceable(312), i64) local_unnamed_addr #2

declare void @_ZN6Unpack8DoUnpackEjb(%class.Unpack*, i32, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN8DataHash3CmpEP9HashValuePh(%class.DataHash*, %struct.HashValue*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6UnpackD1Ev(%class.Unpack*) unnamed_addr #5

; Function Attrs: nounwind readonly
declare i32 @wcscmp(i32*, i32*) local_unnamed_addr #7

declare void @_Z9cleandataPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIhE3AddEm(%class.Array*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %49

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str.9, i64 0, i64 0), i64 %11) #10
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #10
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %18
  %30 = tail call noalias i8* @malloc(i64 %25) #10
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #10
  br label %33

33:                                               ; preds = %32, %29
  %34 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = load i64, i64* %6, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* nonnull align 1 %35, i64 %38, i1 false)
  tail call void @_Z9cleandataPvm(i8* nonnull %35, i64 %38) #10
  %39 = load i8*, i8** %34, align 8
  tail call void @free(i8* %39) #10
  br label %46

40:                                               ; preds = %18
  %41 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = tail call i8* @realloc(i8* %42, i64 %25) #10
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #10
  br label %46

46:                                               ; preds = %33, %40, %45, %37
  %47 = phi i8* [ %30, %37 ], [ %30, %33 ], [ null, %45 ], [ %43, %40 ]
  %48 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  store i8* %47, i8** %48, align 8
  store i64 %25, i64* %6, align 8
  br label %49

49:                                               ; preds = %46, %2
  ret void
}

declare void @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler*, i32*, ...) local_unnamed_addr #2

declare void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
