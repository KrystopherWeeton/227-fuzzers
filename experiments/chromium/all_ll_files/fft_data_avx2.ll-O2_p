; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/fft_data_avx2.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/fft_data_avx2.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.webrtc::FftData" = type { %"struct.std::__1::array", %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [65 x float] }

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZNK6webrtc7FftData12SpectrumAVX2EN3rtc9ArrayViewIfLln4711EEE(%"struct.webrtc::FftData"* nocapture readonly, float*, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.webrtc::FftData"* %0 to <8 x float>*
  %5 = load <8 x float>, <8 x float>* %4, align 1
  %6 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 0
  %7 = bitcast float* %6 to <8 x float>*
  %8 = load <8 x float>, <8 x float>* %7, align 1
  %9 = fmul <8 x float> %8, %8
  %10 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %5, <8 x float> %5, <8 x float> %9) #2
  %11 = bitcast float* %1 to <8 x float>*
  store <8 x float> %10, <8 x float>* %11, align 1
  %12 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 8
  %13 = bitcast float* %12 to <8 x float>*
  %14 = load <8 x float>, <8 x float>* %13, align 1
  %15 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 8
  %16 = bitcast float* %15 to <8 x float>*
  %17 = load <8 x float>, <8 x float>* %16, align 1
  %18 = fmul <8 x float> %17, %17
  %19 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %14, <8 x float> %14, <8 x float> %18) #2
  %20 = getelementptr inbounds float, float* %1, i64 8
  %21 = bitcast float* %20 to <8 x float>*
  store <8 x float> %19, <8 x float>* %21, align 1
  %22 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 16
  %23 = bitcast float* %22 to <8 x float>*
  %24 = load <8 x float>, <8 x float>* %23, align 1
  %25 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 16
  %26 = bitcast float* %25 to <8 x float>*
  %27 = load <8 x float>, <8 x float>* %26, align 1
  %28 = fmul <8 x float> %27, %27
  %29 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %24, <8 x float> %24, <8 x float> %28) #2
  %30 = getelementptr inbounds float, float* %1, i64 16
  %31 = bitcast float* %30 to <8 x float>*
  store <8 x float> %29, <8 x float>* %31, align 1
  %32 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 24
  %33 = bitcast float* %32 to <8 x float>*
  %34 = load <8 x float>, <8 x float>* %33, align 1
  %35 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 24
  %36 = bitcast float* %35 to <8 x float>*
  %37 = load <8 x float>, <8 x float>* %36, align 1
  %38 = fmul <8 x float> %37, %37
  %39 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %34, <8 x float> %34, <8 x float> %38) #2
  %40 = getelementptr inbounds float, float* %1, i64 24
  %41 = bitcast float* %40 to <8 x float>*
  store <8 x float> %39, <8 x float>* %41, align 1
  %42 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 32
  %43 = bitcast float* %42 to <8 x float>*
  %44 = load <8 x float>, <8 x float>* %43, align 1
  %45 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 32
  %46 = bitcast float* %45 to <8 x float>*
  %47 = load <8 x float>, <8 x float>* %46, align 1
  %48 = fmul <8 x float> %47, %47
  %49 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %44, <8 x float> %44, <8 x float> %48) #2
  %50 = getelementptr inbounds float, float* %1, i64 32
  %51 = bitcast float* %50 to <8 x float>*
  store <8 x float> %49, <8 x float>* %51, align 1
  %52 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 40
  %53 = bitcast float* %52 to <8 x float>*
  %54 = load <8 x float>, <8 x float>* %53, align 1
  %55 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 40
  %56 = bitcast float* %55 to <8 x float>*
  %57 = load <8 x float>, <8 x float>* %56, align 1
  %58 = fmul <8 x float> %57, %57
  %59 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %54, <8 x float> %54, <8 x float> %58) #2
  %60 = getelementptr inbounds float, float* %1, i64 40
  %61 = bitcast float* %60 to <8 x float>*
  store <8 x float> %59, <8 x float>* %61, align 1
  %62 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 48
  %63 = bitcast float* %62 to <8 x float>*
  %64 = load <8 x float>, <8 x float>* %63, align 1
  %65 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 48
  %66 = bitcast float* %65 to <8 x float>*
  %67 = load <8 x float>, <8 x float>* %66, align 1
  %68 = fmul <8 x float> %67, %67
  %69 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %64, <8 x float> %64, <8 x float> %68) #2
  %70 = getelementptr inbounds float, float* %1, i64 48
  %71 = bitcast float* %70 to <8 x float>*
  store <8 x float> %69, <8 x float>* %71, align 1
  %72 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 56
  %73 = bitcast float* %72 to <8 x float>*
  %74 = load <8 x float>, <8 x float>* %73, align 1
  %75 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 56
  %76 = bitcast float* %75 to <8 x float>*
  %77 = load <8 x float>, <8 x float>* %76, align 1
  %78 = fmul <8 x float> %77, %77
  %79 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %74, <8 x float> %74, <8 x float> %78) #2
  %80 = getelementptr inbounds float, float* %1, i64 56
  %81 = bitcast float* %80 to <8 x float>*
  store <8 x float> %79, <8 x float>* %81, align 1
  %82 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 64
  %83 = load float, float* %82, align 4
  %84 = fmul float %83, %83
  %85 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 64
  %86 = load float, float* %85, align 4
  %87 = fmul float %86, %86
  %88 = fadd float %84, %87
  %89 = getelementptr inbounds float, float* %1, i64 64
  store float %88, float* %89, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #1

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+avx,+avx2,+cx8,+fma,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
