; ModuleID = '../../third_party/blink/renderer/platform/heap/impl/heap_compact.cc'
source_filename = "../../third_party/blink/renderer/platform/heap/impl/heap_compact.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.157", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type { %"class.blink::ThreadHeap"*, %"class.WTF::HashMap", %"class.std::__1::map", %"class.WTF::HashSet" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i8*, i8** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { i64 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.181" }
%"class.WTF::HashTable.181" = type <{ i8**, i32, i32, i32, [4 x i8] }>
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.154", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type opaque
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type { %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event", i64, i64, i64, i64, i8, i8, %"class.base::TimeDelta", %"class.WTF::Vector" }
%"struct.blink::ThreadHeapStatsCollector::Event" = type <{ i64, i64, i64, i64, i8, [7 x i8], [31 x %"class.base::TimeDelta"], [3 x i32], i32, i32, [4 x i8], i64, i64, i64, double, %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { %"class.blink::ThreadHeapStatsObserver"**, i32, i32 }
%"class.blink::ThreadHeapStatsObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, i64, [256 x i8**] }
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { i64 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.134", %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.148", [4 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136", %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { float }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::HeapCompact"* }
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.166" }
%"class.WTF::Vector.166" = type { %"class.WTF::VectorBuffer.167" }
%"class.WTF::VectorBuffer.167" = type { %"class.WTF::VectorBufferBase.168" }
%"class.WTF::VectorBufferBase.168" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.189", %"class.blink::FreeList", %"class.WTF::Vector.194" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.194" = type { %"class.WTF::VectorBuffer.195" }
%"class.WTF::VectorBuffer.195" = type { %"class.WTF::VectorBufferBase.196" }
%"class.WTF::VectorBufferBase.196" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.201" }
%"struct.std::__1::pair.201" = type { i8**, i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN5blink8WorklistIPKPKvLi256ELi4EE5ClearEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKPKvEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEES2_E_8__invokeESK_S2_ = comdat any

$_ZZN7logging15CheckOpValueStrIPPKvEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEES2_E_8__invokeESJ_S2_ = comdat any

$_ZZN7logging15CheckOpValueStrIPhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKPN5blink8BasePageERSE_EENS_18HashTableAddResultIS8_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE8RehashToEPS1_jS9_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKS2_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS2_RS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

$_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN5blink8WorklistIPKPKvLi256ELi4EE3PopEiPS4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

@.str = private unnamed_addr constant [68 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_compact.cc\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"slot_page\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"header\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"value_page\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"value_header\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"value_header->IsMarked()\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"const_slot == fixup_it->value\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"interior_fixups_.end() == interior_it\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"reinterpret_cast<Address>(interior_it->first) >= from\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"!force_for_next_gc_\00", align 1
@_ZN5blink8features20kBlinkHeapCompactionE = external global %"struct.base::Feature", align 8
@.str.11 = private unnamed_addr constant [90 x i8] c"force_for_next_gc_ || base::FeatureList::IsEnabled(blink::features::kBlinkHeapCompaction)\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"!do_compact_\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"!fixups_\00", align 1
@.str.14 = private unnamed_addr constant [66 x i8] c"heap_->LookupPageForAddress(reinterpret_cast<ConstAddress>(slot))\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.16 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPvEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = void *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKvPS3_EEEEPKcv = private unnamed_addr constant [94 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const void *, const void **>]\00", align 1

@_ZN5blink11HeapCompactC1EPNS_10ThreadHeapE = hidden unnamed_addr alias void (%"class.blink::HeapCompact"*, %"class.blink::ThreadHeap"*), void (%"class.blink::HeapCompact"*, %"class.blink::ThreadHeap"*)* @_ZN5blink11HeapCompactC2EPNS_10ThreadHeapE
@_ZN5blink11HeapCompactD1Ev = hidden unnamed_addr alias void (%"class.blink::HeapCompact"*), void (%"class.blink::HeapCompact"*)* @_ZN5blink11HeapCompactD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact19MovableObjectFixups17AddCompactingPageEPNS_8BasePageE(%"class.blink::HeapCompact::MovableObjectFixups"*, %"class.blink::BasePage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BasePage"*, align 8
  store %"class.blink::BasePage"* %1, %"class.blink::BasePage"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 3, i32 0
  %5 = call { i8**, i8 } @_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKPN5blink8BasePageERSE_EENS_18HashTableAddResultIS8_S1_EEOT0_OT1_(%"class.WTF::HashTable.181"* %4, %"class.blink::BasePage"** nonnull dereferenceable(8) %3, %"class.blink::BasePage"** nonnull dereferenceable(8) %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact19MovableObjectFixups11AddOrFilterEPKPKv(%"class.blink::HeapCompact::MovableObjectFixups"*, i8**) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca i8**, align 8
  %15 = alloca %"class.logging::CheckError", align 8
  store i8** %1, i8*** %4, align 8
  %16 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = load i8*, i8** %1, align 8
  store i8* %17, i8** %5, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = bitcast i8** %1 to i8*
  br label %26

21:                                               ; preds = %2
  %22 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 99, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #13
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %24 = bitcast i8*** %4 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %19, %21
  %27 = phi i8* [ %20, %19 ], [ %25, %21 ]
  %28 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 0
  %29 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %28, align 8
  %30 = call %"class.blink::BasePage"* @_ZN5blink10ThreadHeap20LookupPageForAddressEPKh(%"class.blink::ThreadHeap"* %29, i8* %27) #13
  %31 = icmp eq %"class.blink::BasePage"* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %26
  %33 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 110, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #13
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %35

35:                                               ; preds = %26, %32
  %36 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %30, i64 0, i32 7
  %37 = load i8, i8* %36, align 2
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %39, label %42

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %30, i64 1, i32 2
  %41 = bitcast %"class.blink::BaseArena"** %40 to %"class.blink::HeapObjectHeader"*
  br label %81

42:                                               ; preds = %35
  %43 = bitcast %"class.blink::BasePage"* %30 to %"class.blink::NormalPage"*
  %44 = bitcast i8*** %4 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %30, i64 6, i32 2
  %47 = bitcast %"class.blink::BaseArena"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %45, %48
  %50 = lshr i64 %49, 3
  %51 = lshr i64 %49, 6
  %52 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %43, i64 0, i32 2, i32 0, i32 1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = trunc i64 %50 to i32
  %55 = and i32 %54, 7
  %56 = shl i32 2, %55
  %57 = trunc i32 %56 to i8
  %58 = add i8 %57, -1
  %59 = and i8 %58, %53
  %60 = icmp eq i8 %59, 0
  %61 = inttoptr i64 %48 to i8*
  br i1 %60, label %62, label %68

62:                                               ; preds = %42, %62
  %63 = phi i64 [ %64, %62 ], [ %51, %42 ]
  %64 = add i64 %63, -1
  %65 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %43, i64 0, i32 2, i32 0, i32 1, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %62, label %68

68:                                               ; preds = %62, %42
  %69 = phi i64 [ %51, %42 ], [ %64, %62 ]
  %70 = phi i8 [ %59, %42 ], [ %66, %62 ]
  %71 = zext i8 %70 to i32
  %72 = call i32 @llvm.ctlz.i32(i32 %71, i1 true) #13, !range !2
  %73 = add nsw i32 %72, -24
  %74 = shl i64 %69, 3
  %75 = or i64 %74, 7
  %76 = sext i32 %73 to i64
  %77 = sub i64 %75, %76
  %78 = shl i64 %77, 3
  %79 = getelementptr inbounds i8, i8* %61, i64 %78
  %80 = bitcast i8* %79 to %"class.blink::HeapObjectHeader"*
  br label %81

81:                                               ; preds = %68, %39
  %82 = phi %"class.blink::HeapObjectHeader"* [ %41, %39 ], [ %80, %68 ]
  %83 = icmp eq %"class.blink::HeapObjectHeader"* %82, null
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 116, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #13
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #13
  br label %87

87:                                               ; preds = %81, %84
  %88 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %82, i64 0, i32 2
  %89 = load i16, i16* %88, align 2
  %90 = and i16 %89, 1
  %91 = icmp eq i16 %90, 0
  br i1 %91, label %368, label %92

92:                                               ; preds = %87
  %93 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %28, align 8
  %94 = load i8*, i8** %5, align 8
  %95 = call %"class.blink::BasePage"* @_ZN5blink10ThreadHeap20LookupPageForAddressEPKh(%"class.blink::ThreadHeap"* %93, i8* %94) #13
  %96 = icmp eq %"class.blink::BasePage"* %95, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %92
  %98 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 124, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0)) #13
  %99 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #13
  br label %100

100:                                              ; preds = %92, %97
  %101 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %95, i64 0, i32 7
  %102 = load i8, i8* %101, align 2
  %103 = icmp eq i8 %102, 1
  br i1 %103, label %368, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %95, i64 0, i32 2
  %106 = load %"class.blink::BaseArena"*, %"class.blink::BaseArena"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::BaseArena", %"class.blink::BaseArena"* %106, i64 0, i32 6
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, -2
  %110 = icmp eq i32 %109, 4
  br i1 %110, label %111, label %368

111:                                              ; preds = %104
  %112 = bitcast %"class.blink::BasePage"* %95 to %"class.blink::NormalPage"*
  %113 = bitcast i8** %5 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.blink::BasePage", %"class.blink::BasePage"* %95, i64 6, i32 2
  %116 = bitcast %"class.blink::BaseArena"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = sub i64 %114, %117
  %119 = lshr i64 %118, 3
  %120 = lshr i64 %118, 6
  %121 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %112, i64 0, i32 2, i32 0, i32 1, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = trunc i64 %119 to i32
  %124 = and i32 %123, 7
  %125 = shl i32 2, %124
  %126 = trunc i32 %125 to i8
  %127 = add i8 %126, -1
  %128 = and i8 %127, %122
  %129 = icmp eq i8 %128, 0
  %130 = inttoptr i64 %117 to i8*
  br i1 %129, label %131, label %137

131:                                              ; preds = %111, %131
  %132 = phi i64 [ %133, %131 ], [ %120, %111 ]
  %133 = add i64 %132, -1
  %134 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %112, i64 0, i32 2, i32 0, i32 1, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %131, label %137

137:                                              ; preds = %131, %111
  %138 = phi i64 [ %120, %111 ], [ %133, %131 ]
  %139 = phi i8 [ %128, %111 ], [ %135, %131 ]
  %140 = zext i8 %139 to i32
  %141 = call i32 @llvm.ctlz.i32(i32 %140, i1 true) #13, !range !2
  %142 = add nsw i32 %141, -24
  %143 = shl i64 %138, 3
  %144 = or i64 %143, 7
  %145 = sext i32 %142 to i64
  %146 = sub i64 %144, %145
  %147 = shl i64 %146, 3
  %148 = getelementptr inbounds i8, i8* %130, i64 %147
  %149 = icmp eq i8* %148, null
  br i1 %149, label %150, label %153

150:                                              ; preds = %137
  %151 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 141, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #13
  %152 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #13
  br label %153

153:                                              ; preds = %137, %150
  %154 = getelementptr inbounds i8, i8* %148, i64 6
  %155 = bitcast i8* %154 to i16*
  %156 = load i16, i16* %155, align 2
  %157 = and i16 %156, 1
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %153
  %160 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0)) #13
  %161 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #13
  br label %162

162:                                              ; preds = %153, %159
  %163 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 1
  %164 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %163, i64 0, i32 0
  %165 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKS2_(%"class.WTF::HashTable"* %164, i8** nonnull dereferenceable(8) %5) #13
  %166 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %165, 0
  %167 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %163, i64 0, i32 0, i32 0
  %168 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 1, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %168, i64 %171
  %173 = icmp eq %"struct.WTF::KeyValuePair"* %166, %172
  br i1 %173, label %195, label %174, !prof !3

174:                                              ; preds = %162
  %175 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #13
  %176 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %176, align 8
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %166, i64 0, i32 1
  %178 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178)
  %179 = load i8**, i8*** %4, align 8
  %180 = load i8**, i8*** %177, align 8
  %181 = icmp eq i8** %179, %180
  br i1 %181, label %182, label %183

182:                                              ; preds = %174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178)
  store i8* null, i8** %176, align 8
  br label %194

183:                                              ; preds = %174
  %184 = bitcast i8*** %4 to i8*
  %185 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %184, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKPKvEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEES2_E_8__invokeESK_S2_) #13
  %186 = bitcast i8*** %177 to i8*
  %187 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %186, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPPKvEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEES2_E_8__invokeESJ_S2_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i8* %185, i8* %187) #13
  %188 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %189 = load i8*, i8** %188, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178)
  store i8* %189, i8** %176, align 8
  %190 = icmp eq i8* %189, null
  br i1 %190, label %194, label %191

191:                                              ; preds = %183
  %192 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 149, %"class.logging::CheckOpResult"* nonnull %12) #13
  %193 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #13
  br label %194

194:                                              ; preds = %182, %183, %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #13
  br label %368

195:                                              ; preds = %162
  %196 = bitcast i8*** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #13
  %197 = bitcast i8*** %4 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast i8*** %14 to i64*
  store i64 %198, i64* %199, align 8
  %200 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS2_RS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %164, i8** nonnull dereferenceable(8) %5, i8*** nonnull dereferenceable(8) %14) #13
  %201 = ptrtoint %"class.blink::BasePage"* %30 to i64
  %202 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 3, i32 0, i32 0
  %203 = load i8**, i8*** %202, align 8
  %204 = icmp eq i8** %203, null
  br i1 %204, label %367, label %205

205:                                              ; preds = %195
  %206 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 3, i32 0, i32 1
  %207 = load i32, i32* %206, align 8
  %208 = add i32 %207, -1
  %209 = zext i32 %208 to i64
  %210 = shl i64 %201, 32
  %211 = xor i64 %210, -1
  %212 = add i64 %211, %201
  %213 = lshr i64 %212, 22
  %214 = xor i64 %213, %212
  %215 = shl i64 %214, 13
  %216 = xor i64 %215, -1
  %217 = add i64 %214, %216
  %218 = lshr i64 %217, 8
  %219 = xor i64 %218, %217
  %220 = mul i64 %219, 9
  %221 = lshr i64 %220, 15
  %222 = xor i64 %221, %220
  %223 = shl i64 %222, 27
  %224 = xor i64 %223, -1
  %225 = add i64 %222, %224
  %226 = lshr i64 %225, 31
  %227 = xor i64 %226, %225
  %228 = trunc i64 %227 to i32
  %229 = and i32 %208, %228
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds i8*, i8** %203, i64 %230
  %232 = load i8*, i8** %231, align 8
  %233 = bitcast %"class.blink::BasePage"* %30 to i8*
  %234 = icmp eq i8* %232, %233
  br i1 %234, label %264, label %235

235:                                              ; preds = %205
  %236 = xor i32 %228, -1
  %237 = lshr i32 %228, 23
  %238 = add i32 %237, %236
  %239 = shl i32 %238, 12
  %240 = xor i32 %239, %238
  %241 = lshr i32 %240, 7
  %242 = xor i32 %241, %240
  %243 = shl i32 %242, 2
  %244 = xor i32 %243, %242
  %245 = lshr i32 %244, 20
  %246 = xor i32 %245, %244
  %247 = or i32 %246, 1
  %248 = zext i32 %247 to i64
  br label %249

249:                                              ; preds = %254, %235
  %250 = phi i8* [ %232, %235 ], [ %260, %254 ]
  %251 = phi i64 [ %230, %235 ], [ %258, %254 ]
  %252 = phi i64 [ 0, %235 ], [ %256, %254 ]
  %253 = icmp eq i8* %250, null
  br i1 %253, label %367, label %254

254:                                              ; preds = %249
  %255 = icmp eq i64 %252, 0
  %256 = select i1 %255, i64 %248, i64 %252
  %257 = add i64 %256, %251
  %258 = and i64 %257, %209
  %259 = getelementptr inbounds i8*, i8** %203, i64 %258
  %260 = load i8*, i8** %259, align 8
  %261 = icmp eq i8* %260, %233
  br i1 %261, label %262, label %249

262:                                              ; preds = %254
  %263 = getelementptr inbounds i8*, i8** %203, i64 %258
  br label %264

264:                                              ; preds = %262, %205
  %265 = phi i8** [ %231, %205 ], [ %263, %262 ]
  %266 = icmp eq i8** %265, null
  br i1 %266, label %367, label %267, !prof !3

267:                                              ; preds = %264
  %268 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 2
  %269 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %270 = bitcast %"class.std::__1::__tree_end_node"* %269 to %"class.std::__1::__tree_node"**
  %271 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %270, align 8
  %272 = icmp eq %"class.std::__1::__tree_node"* %271, null
  br i1 %272, label %332, label %273

273:                                              ; preds = %267
  %274 = load i8**, i8*** %14, align 8
  br label %275

275:                                              ; preds = %275, %273
  %276 = phi %"class.std::__1::__tree_end_node"* [ %269, %273 ], [ %286, %275 ]
  %277 = phi %"class.std::__1::__tree_node"* [ %271, %273 ], [ %287, %275 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %277, i64 0, i32 1, i32 0, i32 0
  %279 = load i8**, i8*** %278, align 8
  %280 = icmp ult i8** %279, %274
  %281 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %277, i64 0, i32 0, i32 1
  %282 = bitcast %"class.std::__1::__tree_node_base"** %281 to %"class.std::__1::__tree_node"**
  %283 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %277, i64 0, i32 0, i32 0
  %284 = bitcast %"class.std::__1::__tree_node"* %277 to %"class.std::__1::__tree_node"**
  %285 = select i1 %280, %"class.std::__1::__tree_node"** %282, %"class.std::__1::__tree_node"** %284
  %286 = select i1 %280, %"class.std::__1::__tree_end_node"* %276, %"class.std::__1::__tree_end_node"* %283
  %287 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %285, align 8
  %288 = icmp eq %"class.std::__1::__tree_node"* %287, null
  br i1 %288, label %289, label %275

289:                                              ; preds = %275
  %290 = icmp eq %"class.std::__1::__tree_end_node"* %286, %269
  br i1 %290, label %300, label %291

291:                                              ; preds = %289
  %292 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %286, i64 4
  %293 = bitcast %"class.std::__1::__tree_end_node"* %292 to i8***
  %294 = load i8**, i8*** %293, align 8
  %295 = icmp ult i8** %274, %294
  br i1 %295, label %300, label %296

296:                                              ; preds = %291
  %297 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %297) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 162, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0)) #13
  %298 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #13
  %299 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %270, align 8
  br label %300

300:                                              ; preds = %291, %289, %296
  %301 = phi %"class.std::__1::__tree_node"* [ %271, %291 ], [ %271, %289 ], [ %299, %296 ]
  %302 = icmp eq %"class.std::__1::__tree_node"* %301, null
  br i1 %302, label %332, label %303

303:                                              ; preds = %300
  %304 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %305 = load i8**, i8*** %14, align 8
  br label %306

306:                                              ; preds = %328, %303
  %307 = phi %"class.std::__1::__tree_node"* [ %331, %328 ], [ %301, %303 ]
  %308 = phi %"class.std::__1::__tree_node_base"** [ %330, %328 ], [ %304, %303 ]
  %309 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 1, i32 0, i32 0
  %310 = load i8**, i8*** %309, align 8
  %311 = icmp ult i8** %305, %310
  br i1 %311, label %312, label %318

312:                                              ; preds = %306
  %313 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 0, i32 0, i32 0
  %314 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %313, align 8
  %315 = icmp eq %"class.std::__1::__tree_node_base"* %314, null
  br i1 %315, label %316, label %328

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 0, i32 0
  br label %334

318:                                              ; preds = %306
  %319 = icmp ult i8** %310, %305
  br i1 %319, label %320, label %326

320:                                              ; preds = %318
  %321 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 0, i32 1
  %322 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %321, align 8
  %323 = icmp eq %"class.std::__1::__tree_node_base"* %322, null
  br i1 %323, label %324, label %328

324:                                              ; preds = %320
  %325 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 0, i32 0
  br label %334

326:                                              ; preds = %318
  %327 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %307, i64 0, i32 0, i32 0
  br label %334

328:                                              ; preds = %320, %312
  %329 = phi %"class.std::__1::__tree_node_base"* [ %314, %312 ], [ %322, %320 ]
  %330 = phi %"class.std::__1::__tree_node_base"** [ %313, %312 ], [ %321, %320 ]
  %331 = bitcast %"class.std::__1::__tree_node_base"* %329 to %"class.std::__1::__tree_node"*
  br label %306

332:                                              ; preds = %267, %300
  %333 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %269, i64 0, i32 0
  br label %334

334:                                              ; preds = %332, %326, %324, %316
  %335 = phi %"class.std::__1::__tree_end_node"* [ %269, %332 ], [ %317, %316 ], [ %325, %324 ], [ %327, %326 ]
  %336 = phi %"class.std::__1::__tree_node_base"** [ %333, %332 ], [ %313, %316 ], [ %321, %324 ], [ %308, %326 ]
  %337 = bitcast %"class.std::__1::__tree_node_base"** %336 to %"class.std::__1::__tree_node"**
  %338 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %337, align 8
  %339 = icmp eq %"class.std::__1::__tree_node"* %338, null
  br i1 %339, label %340, label %367

340:                                              ; preds = %334
  %341 = call i8* @_Znwm(i64 48) #14, !noalias !4
  %342 = getelementptr inbounds i8, i8* %341, i64 32
  %343 = load i64, i64* %199, align 8, !noalias !4
  %344 = bitcast i8* %342 to i64*
  store i64 %343, i64* %344, align 8, !noalias !4
  %345 = getelementptr inbounds i8, i8* %341, i64 40
  %346 = bitcast i8* %345 to i8**
  store i8* null, i8** %346, align 8, !noalias !4
  %347 = bitcast i8* %341 to %"class.std::__1::__tree_node_base"*
  %348 = getelementptr inbounds i8, i8* %341, i64 16
  %349 = bitcast i8* %348 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %341, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %335, %"class.std::__1::__tree_end_node"** %349, align 8
  %350 = bitcast %"class.std::__1::__tree_node_base"** %336 to i8**
  store i8* %341, i8** %350, align 8
  %351 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %268, i64 0, i32 0, i32 0
  %352 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %351, align 8
  %353 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %352, i64 0, i32 0
  %354 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %353, align 8
  %355 = icmp eq %"class.std::__1::__tree_node_base"* %354, null
  br i1 %355, label %360, label %356

356:                                              ; preds = %340
  %357 = ptrtoint %"class.std::__1::__tree_node_base"* %354 to i64
  %358 = bitcast %"class.std::__1::map"* %268 to i64*
  store i64 %357, i64* %358, align 8
  %359 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %336, align 8
  br label %360

360:                                              ; preds = %356, %340
  %361 = phi %"class.std::__1::__tree_node_base"* [ %347, %340 ], [ %359, %356 ]
  %362 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %363 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %362, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %363, %"class.std::__1::__tree_node_base"* %361) #13
  %364 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %365 = load i64, i64* %364, align 8
  %366 = add i64 %365, 1
  store i64 %366, i64* %364, align 8
  br label %367

367:                                              ; preds = %249, %360, %334, %264, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #13
  br label %368

368:                                              ; preds = %87, %194, %367, %104, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::BasePage"* @_ZN5blink10ThreadHeap20LookupPageForAddressEPKh(%"class.blink::ThreadHeap"*, i8*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact19MovableObjectFixups8RelocateEPhS2_(%"class.blink::HeapCompact::MovableObjectFixups"*, i8*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load i16, i16* %6, align 2
  %8 = lshr i16 %7, 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %18, !prof !7

10:                                               ; preds = %3
  %11 = getelementptr inbounds i8, i8* %2, i64 -8
  %12 = ptrtoint i8* %11 to i64
  %13 = and i64 %12, -131072
  %14 = inttoptr i64 %13 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 4144
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 16
  br label %21

18:                                               ; preds = %3
  %19 = zext i16 %8 to i64
  %20 = shl nuw nsw i64 %19, 3
  br label %21

21:                                               ; preds = %10, %18
  %22 = phi i64 [ %17, %10 ], [ %20, %18 ]
  %23 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = add i64 %22, -8
  tail call void @_ZN5blink11HeapCompact19MovableObjectFixups22RelocateInteriorFixupsEPhS2_m(%"class.blink::HeapCompact::MovableObjectFixups"* %0, i8* %1, i8* %2, i64 %27)
  br label %28

28:                                               ; preds = %26, %21
  %29 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 1
  %30 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  store i8* %1, i8** %4, align 8
  %31 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %29, i64 0, i32 0
  %32 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKS2_(%"class.WTF::HashTable"* %31, i8** nonnull dereferenceable(8) %4) #13
  %33 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %32, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  %34 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %29, i64 0, i32 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 1, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %38
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %33, %39
  br i1 %40, label %87, label %41

41:                                               ; preds = %28
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 1
  %43 = bitcast i8*** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node"**
  %47 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node"* %47, null
  br i1 %48, label %81, label %49

49:                                               ; preds = %41
  %50 = inttoptr i64 %44 to i8**
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi %"class.std::__1::__tree_end_node"* [ %45, %49 ], [ %62, %51 ]
  %53 = phi %"class.std::__1::__tree_node"* [ %47, %49 ], [ %63, %51 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 1, i32 0, i32 0
  %55 = load i8**, i8*** %54, align 8
  %56 = icmp ult i8** %55, %50
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::__tree_node_base"** %57 to %"class.std::__1::__tree_node"**
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::__tree_node"* %53 to %"class.std::__1::__tree_node"**
  %61 = select i1 %56, %"class.std::__1::__tree_node"** %58, %"class.std::__1::__tree_node"** %60
  %62 = select i1 %56, %"class.std::__1::__tree_end_node"* %52, %"class.std::__1::__tree_end_node"* %59
  %63 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %64 = icmp eq %"class.std::__1::__tree_node"* %63, null
  br i1 %64, label %65, label %51

65:                                               ; preds = %51
  %66 = icmp eq %"class.std::__1::__tree_end_node"* %62, %45
  br i1 %66, label %81, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 4
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to i8***
  %70 = load i8**, i8*** %69, align 8
  %71 = icmp ugt i8** %70, %50
  br i1 %71, label %81, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 5
  %74 = bitcast %"class.std::__1::__tree_end_node"* %73 to i8***
  %75 = load i8**, i8*** %74, align 8
  %76 = icmp eq i8** %75, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %72
  %78 = bitcast %"class.std::__1::__tree_end_node"* %73 to i8**
  store i8* %2, i8** %78, align 8
  br label %81

79:                                               ; preds = %72
  %80 = ptrtoint i8** %75 to i64
  br label %81

81:                                               ; preds = %67, %65, %41, %77, %79
  %82 = phi i64 [ %44, %77 ], [ %80, %79 ], [ %44, %41 ], [ %44, %65 ], [ %44, %67 ]
  %83 = inttoptr i64 %82 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = icmp eq i8* %84, %1
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %81
  store i8* %2, i8** %83, align 8
  br label %87

87:                                               ; preds = %86, %81, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact19MovableObjectFixups22RelocateInteriorFixupsEPhS2_m(%"class.blink::HeapCompact::MovableObjectFixups"*, i8*, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca i8*, align 8
  %9 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %6, align 8
  %10 = bitcast i8** %6 to i64*
  %11 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node"* %13, null
  %15 = bitcast i8* %1 to i8**
  br i1 %14, label %119, label %16

16:                                               ; preds = %4, %16
  %17 = phi %"class.std::__1::__tree_end_node"* [ %27, %16 ], [ %11, %4 ]
  %18 = phi %"class.std::__1::__tree_node"* [ %28, %16 ], [ %13, %4 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = load i8**, i8*** %19, align 8
  %21 = icmp ult i8** %20, %15
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::__tree_node_base"** %22 to %"class.std::__1::__tree_node"**
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_node"* %18 to %"class.std::__1::__tree_node"**
  %26 = select i1 %21, %"class.std::__1::__tree_node"** %23, %"class.std::__1::__tree_node"** %25
  %27 = select i1 %21, %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"* %24
  %28 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  %29 = icmp eq %"class.std::__1::__tree_node"* %28, null
  br i1 %29, label %30, label %16

30:                                               ; preds = %16
  %31 = icmp eq %"class.std::__1::__tree_end_node"* %27, %11
  br i1 %31, label %119, label %32

32:                                               ; preds = %30
  %33 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 4
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast i8** %8 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  %41 = inttoptr i64 %38 to i8*
  %42 = icmp ult i8* %41, %1
  br i1 %42, label %44, label %43

43:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  store i8* null, i8** %34, align 8
  br label %54

44:                                               ; preds = %32
  %45 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %35, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #13
  %46 = bitcast i8** %6 to i8*
  %47 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %46, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0), i8* %45, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  store i8* %49, i8** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  %50 = icmp eq i8* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %44
  %52 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 247, %"class.logging::CheckOpResult"* nonnull %7) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  br label %54

54:                                               ; preds = %51, %43
  %55 = phi i8* [ %35, %43 ], [ %52, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %56

56:                                               ; preds = %54, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %57 = load i64, i64* %10, align 8
  %58 = load i64, i64* %37, align 8
  %59 = sub i64 %58, %57
  %60 = icmp ult i64 %59, %3
  %61 = inttoptr i64 %57 to i8*
  br i1 %60, label %62, label %119

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %61, i64 %3
  br label %64

64:                                               ; preds = %62, %113
  %65 = phi i64 [ %117, %113 ], [ %59, %62 ]
  %66 = phi %"class.std::__1::__tree_end_node"* [ %111, %113 ], [ %27, %62 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 5
  %68 = bitcast %"class.std::__1::__tree_end_node"* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %82

71:                                               ; preds = %64
  %72 = getelementptr inbounds i8, i8* %2, i64 %65
  store i8* %72, i8** %68, align 8
  %73 = bitcast i8* %72 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = icmp ugt i8* %74, %61
  %76 = icmp ult i8* %74, %63
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %82

78:                                               ; preds = %71
  %79 = ptrtoint i8* %74 to i64
  %80 = sub i64 %79, %57
  %81 = getelementptr inbounds i8, i8* %2, i64 %80
  store i8* %81, i8** %73, align 8
  br label %82

82:                                               ; preds = %71, %78, %64
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 1, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %94

86:                                               ; preds = %82
  %87 = bitcast %"class.std::__1::__tree_end_node"* %66 to %"class.std::__1::__tree_node_base"*
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 2
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_end_node"**
  %90 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, %87
  br i1 %93, label %110, label %101

94:                                               ; preds = %82, %94
  %95 = phi %"class.std::__1::__tree_node_base"* [ %97, %94 ], [ %84, %82 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %94

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 0
  br label %110

101:                                              ; preds = %86, %101
  %102 = phi %"class.std::__1::__tree_end_node"** [ %105, %101 ], [ %89, %86 ]
  %103 = bitcast %"class.std::__1::__tree_end_node"** %102 to %"class.std::__1::__tree_node_base"**
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %104, i64 0, i32 2
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, %104
  br i1 %109, label %110, label %101

110:                                              ; preds = %101, %86, %99
  %111 = phi %"class.std::__1::__tree_end_node"* [ %100, %99 ], [ %90, %86 ], [ %106, %101 ]
  %112 = icmp eq %"class.std::__1::__tree_end_node"* %111, %11
  br i1 %112, label %119, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %111, i64 4
  %115 = bitcast %"class.std::__1::__tree_end_node"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %116, %57
  %118 = icmp ult i64 %117, %3
  br i1 %118, label %64, label %119

119:                                              ; preds = %113, %110, %56, %4, %30
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink11HeapCompact19MovableObjectFixups17VerifyUpdatedSlotEPPKv(%"class.blink::HeapCompact::MovableObjectFixups"* nocapture, i8** nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink11HeapCompactC2EPNS_10ThreadHeapE(%"class.blink::HeapCompact"* nocapture, %"class.blink::ThreadHeap"*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 0
  store %"class.blink::ThreadHeap"* %1, %"class.blink::ThreadHeap"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.157"* %4 to i64*
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 8
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 9
  store i8 0, i8* %9, align 8
  %10 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompactD2Ev(%"class.blink::HeapCompact"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HeapCompact::MovableObjectFixups"*, %"class.blink::HeapCompact::MovableObjectFixups"** %2, align 8
  store %"class.blink::HeapCompact::MovableObjectFixups"* null, %"class.blink::HeapCompact::MovableObjectFixups"** %2, align 8
  %4 = icmp eq %"class.blink::HeapCompact::MovableObjectFixups"* %3, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %3, i64 0, i32 3, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = icmp eq i8** %7, null
  br i1 %8, label %11, label %9, !prof !3

9:                                                ; preds = %5
  %10 = bitcast i8** %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #13
  store i8** null, i8*** %6, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %3, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %12, %"class.std::__1::__tree_node"* %15) #13
  %16 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %3, i64 0, i32 1, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair"* %17, null
  br i1 %18, label %21, label %19, !prof !3

19:                                               ; preds = %11
  %20 = bitcast %"struct.WTF::KeyValuePair"* %17 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #13
  br label %21

21:                                               ; preds = %19, %11
  %22 = bitcast %"class.blink::HeapCompact::MovableObjectFixups"* %3 to i8*
  tail call void @free(i8* %22) #13
  br label %23

23:                                               ; preds = %1, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.blink::HeapCompact::MovableObjectFixups"* @_ZN5blink11HeapCompact6FixupsEv(%"class.blink::HeapCompact"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HeapCompact::MovableObjectFixups"*, %"class.blink::HeapCompact::MovableObjectFixups"** %3, align 8
  %5 = icmp eq %"class.blink::HeapCompact::MovableObjectFixups"* %4, null
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = tail call noalias i8* @malloc(i64 80) #13
  %8 = bitcast %"class.blink::HeapCompact"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8* %7 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %7, i64 40
  %13 = getelementptr inbounds i8, i8* %7, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #13
  %14 = bitcast i8* %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #13
  %16 = ptrtoint i8* %7 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.157"* %2 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast i8* %7 to %"class.blink::HeapCompact::MovableObjectFixups"*
  br label %19

19:                                               ; preds = %1, %6
  %20 = phi %"class.blink::HeapCompact::MovableObjectFixups"* [ %4, %1 ], [ %18, %6 ]
  ret %"class.blink::HeapCompact::MovableObjectFixups"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11HeapCompact13ShouldCompactENS_7BlinkGC10StackStateENS1_11MarkingTypeENS1_8GCReasonE(%"class.blink::HeapCompact"* nocapture, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp eq i32 %2, 0
  %7 = icmp eq i32 %1, 1
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 9
  %11 = load i8, i8* %10, align 8, !range !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %54, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 323, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0)) #13
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br label %54

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 6
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 0
  %19 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %19, i64 0, i32 19, i64 4
  %21 = bitcast %"class.blink::BaseArena"** %20 to %"class.blink::NormalPageArena"**
  %22 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %21, align 8
  %23 = tail call i64 @_ZN5blink15NormalPageArena9ArenaSizeEv(%"class.blink::NormalPageArena"* %22) #13
  %24 = tail call i64 @_ZN5blink15NormalPageArena12FreeListSizeEv(%"class.blink::NormalPageArena"* %22) #13
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %16
  %27 = load i32, i32* %17, align 8
  %28 = or i32 %27, 16
  store i32 %28, i32* %17, align 8
  br label %29

29:                                               ; preds = %26, %16
  %30 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %18, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %30, i64 0, i32 19, i64 5
  %32 = bitcast %"class.blink::BaseArena"** %31 to %"class.blink::NormalPageArena"**
  %33 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %32, align 8
  %34 = tail call i64 @_ZN5blink15NormalPageArena9ArenaSizeEv(%"class.blink::NormalPageArena"* %33) #13
  %35 = tail call i64 @_ZN5blink15NormalPageArena12FreeListSizeEv(%"class.blink::NormalPageArena"* %33) #13
  %36 = add i64 %35, %24
  %37 = icmp eq i64 %34, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %29
  %39 = load i32, i32* %17, align 8
  %40 = or i32 %39, 32
  store i32 %40, i32* %17, align 8
  br label %41

41:                                               ; preds = %29, %38
  %42 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 5
  store i64 %36, i64* %42, align 8
  %43 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 9
  %44 = load i8, i8* %43, align 8, !range !8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features20kBlinkHeapCompactionE) #13
  %48 = add i32 %3, -11
  %49 = icmp ult i32 %48, 2
  %50 = and i1 %49, %47
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = load i64, i64* %42, align 8
  %53 = icmp ugt i64 %52, 524288
  br label %54

54:                                               ; preds = %13, %9, %46, %41, %51
  %55 = phi i1 [ %53, %51 ], [ true, %41 ], [ false, %46 ], [ false, %9 ], [ false, %13 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact19UpdateHeapResidencyEv(%"class.blink::HeapCompact"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 6
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 0
  %4 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %4, i64 0, i32 19, i64 4
  %6 = bitcast %"class.blink::BaseArena"** %5 to %"class.blink::NormalPageArena"**
  %7 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %6, align 8
  %8 = tail call i64 @_ZN5blink15NormalPageArena9ArenaSizeEv(%"class.blink::NormalPageArena"* %7) #13
  %9 = tail call i64 @_ZN5blink15NormalPageArena12FreeListSizeEv(%"class.blink::NormalPageArena"* %7) #13
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = load i32, i32* %2, align 8
  %13 = or i32 %12, 16
  store i32 %13, i32* %2, align 8
  br label %14

14:                                               ; preds = %1, %11
  %15 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %3, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %15, i64 0, i32 19, i64 5
  %17 = bitcast %"class.blink::BaseArena"** %16 to %"class.blink::NormalPageArena"**
  %18 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %17, align 8
  %19 = tail call i64 @_ZN5blink15NormalPageArena9ArenaSizeEv(%"class.blink::NormalPageArena"* %18) #13
  %20 = tail call i64 @_ZN5blink15NormalPageArena12FreeListSizeEv(%"class.blink::NormalPageArena"* %18) #13
  %21 = add i64 %20, %9
  %22 = icmp eq i64 %19, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %14
  %24 = load i32, i32* %2, align 8
  %25 = or i32 %24, 32
  store i32 %25, i32* %2, align 8
  br label %26

26:                                               ; preds = %23, %14
  %27 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 5
  store i64 %21, i64* %27, align 8
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact10InitializeEPNS_11ThreadStateE(%"class.blink::HeapCompact"* nocapture, %"class.blink::ThreadState"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features20kBlinkHeapCompactionE) #13
  br i1 %10, label %14, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 349, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.11, i64 0, i64 0)) #13
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  br label %14

14:                                               ; preds = %9, %2, %11
  %15 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 350, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0)) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %21

21:                                               ; preds = %14, %18
  %22 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.blink::HeapCompact::MovableObjectFixups"*, %"class.blink::HeapCompact::MovableObjectFixups"** %22, align 8
  %24 = icmp eq %"class.blink::HeapCompact::MovableObjectFixups"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 351, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)) #13
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %28

28:                                               ; preds = %21, %25
  store i8 1, i8* %15, align 8
  %29 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 4
  store i64 0, i64* %29, align 8
  store i8 0, i8* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink11HeapCompact27ShouldRegisterMovingAddressEv(%"class.blink::HeapCompact"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !8
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare i64 @_ZN5blink15NormalPageArena9ArenaSizeEv(%"class.blink::NormalPageArena"*) local_unnamed_addr #2

declare i64 @_ZN5blink15NormalPageArena12FreeListSizeEv(%"class.blink::NormalPageArena"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact23FinishedArenaCompactionEPNS_15NormalPageArenaEmm(%"class.blink::HeapCompact"* nocapture readonly, %"class.blink::NormalPageArena"* nocapture readnone, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 0
  %10 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %11, align 8
  tail call void @_ZN5blink24ThreadHeapStatsCollector28IncreaseCompactionFreedPagesEm(%"class.blink::ThreadHeapStatsCollector"* %12, i64 %2) #13
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %9, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsCollector"** %14, align 8
  tail call void @_ZN5blink24ThreadHeapStatsCollector27IncreaseCompactionFreedSizeEm(%"class.blink::ThreadHeapStatsCollector"* %15, i64 %3) #13
  br label %16

16:                                               ; preds = %4, %8
  ret void
}

declare void @_ZN5blink24ThreadHeapStatsCollector28IncreaseCompactionFreedPagesEm(%"class.blink::ThreadHeapStatsCollector"*, i64) local_unnamed_addr #2

declare void @_ZN5blink24ThreadHeapStatsCollector27IncreaseCompactionFreedSizeEm(%"class.blink::ThreadHeapStatsCollector"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact8RelocateEPhS1_(%"class.blink::HeapCompact"* nocapture, i8*, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::HeapCompact::MovableObjectFixups"*, %"class.blink::HeapCompact::MovableObjectFixups"** %5, align 8
  %7 = icmp eq %"class.blink::HeapCompact::MovableObjectFixups"* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = tail call noalias i8* @malloc(i64 80) #13
  %10 = bitcast %"class.blink::HeapCompact"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %9 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #13
  %14 = getelementptr inbounds i8, i8* %9, i64 40
  %15 = getelementptr inbounds i8, i8* %9, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #13
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #13
  %18 = ptrtoint i8* %9 to i64
  %19 = bitcast %"class.std::__1::unique_ptr.157"* %4 to i64*
  store i64 %18, i64* %19, align 8
  %20 = bitcast i8* %9 to %"class.blink::HeapCompact::MovableObjectFixups"*
  br label %21

21:                                               ; preds = %3, %8
  %22 = phi %"class.blink::HeapCompact::MovableObjectFixups"* [ %6, %3 ], [ %20, %8 ]
  tail call void @_ZN5blink11HeapCompact19MovableObjectFixups8RelocateEPhS2_(%"class.blink::HeapCompact::MovableObjectFixups"* %22, i8* %1, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact18FilterNonLiveSlotsEv(%"class.blink::HeapCompact"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i8**, align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %54, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 8
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 0
  %10 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %10, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Worklist.101"*, %"class.blink::Worklist.101"** %11, align 8
  %13 = bitcast i8*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  store i8** inttoptr (i64 -6148914691236517206 to i8**), i8*** %2, align 8
  %14 = call zeroext i1 @_ZN5blink8WorklistIPKPKvLi256ELi4EE3PopEiPS4_(%"class.blink::Worklist.101"* %12, i32 0, i8*** nonnull %2) #13
  br i1 %14, label %15, label %53

15:                                               ; preds = %7
  %16 = bitcast i8*** %2 to i8**
  %17 = bitcast %"class.logging::CheckError"* %3 to i8*
  %18 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.blink::HeapCompact"* %0 to i64*
  %21 = bitcast %"class.std::__1::unique_ptr.157"* %18 to i64*
  br label %22

22:                                               ; preds = %15, %51
  %23 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %9, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = call %"class.blink::BasePage"* @_ZN5blink10ThreadHeap20LookupPageForAddressEPKh(%"class.blink::ThreadHeap"* %23, i8* %24) #13
  %26 = icmp eq %"class.blink::BasePage"* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i32 420, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0)) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %29

29:                                               ; preds = %22, %27
  %30 = load i8**, i8*** %2, align 8
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %51, label %33

33:                                               ; preds = %29
  %34 = load %"class.blink::HeapCompact::MovableObjectFixups"*, %"class.blink::HeapCompact::MovableObjectFixups"** %19, align 8
  %35 = icmp eq %"class.blink::HeapCompact::MovableObjectFixups"* %34, null
  br i1 %35, label %36, label %47

36:                                               ; preds = %33
  %37 = call noalias i8* @malloc(i64 80) #13
  %38 = load i64, i64* %20, align 8
  %39 = bitcast i8* %37 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %37, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 20, i1 false) #13
  %41 = getelementptr inbounds i8, i8* %37, i64 40
  %42 = getelementptr inbounds i8, i8* %37, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #13
  %43 = bitcast i8* %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %37, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 20, i1 false) #13
  %45 = ptrtoint i8* %37 to i64
  store i64 %45, i64* %21, align 8
  %46 = bitcast i8* %37 to %"class.blink::HeapCompact::MovableObjectFixups"*
  br label %47

47:                                               ; preds = %33, %36
  %48 = phi %"class.blink::HeapCompact::MovableObjectFixups"* [ %34, %33 ], [ %46, %36 ]
  call void @_ZN5blink11HeapCompact19MovableObjectFixups11AddOrFilterEPKPKv(%"class.blink::HeapCompact::MovableObjectFixups"* %48, i8** %30)
  %49 = load i64, i64* %8, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %8, align 8
  br label %51

51:                                               ; preds = %29, %47
  %52 = call zeroext i1 @_ZN5blink8WorklistIPKPKvLi256ELi4EE3PopEiPS4_(%"class.blink::Worklist.101"* %12, i32 0, i8*** nonnull %2) #13
  br i1 %52, label %22, label %53

53:                                               ; preds = %51, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  br label %54

54:                                               ; preds = %1, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact6FinishEv(%"class.blink::HeapCompact"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 8
  %6 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::HeapCompact::MovableObjectFixups"*, %"class.blink::HeapCompact::MovableObjectFixups"** %6, align 8
  store %"class.blink::HeapCompact::MovableObjectFixups"* null, %"class.blink::HeapCompact::MovableObjectFixups"** %6, align 8
  %8 = icmp eq %"class.blink::HeapCompact::MovableObjectFixups"* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %7, i64 0, i32 3, i32 0, i32 0
  %11 = load i8**, i8*** %10, align 8
  %12 = icmp eq i8** %11, null
  br i1 %12, label %15, label %13, !prof !3

13:                                               ; preds = %9
  %14 = bitcast i8** %11 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #13
  store i8** null, i8*** %10, align 8
  br label %15

15:                                               ; preds = %13, %9
  %16 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %7, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %7, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #13
  %20 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %7, i64 0, i32 1, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = bitcast %"struct.WTF::KeyValuePair"* %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #13
  br label %25

25:                                               ; preds = %23, %15
  %26 = bitcast %"class.blink::HeapCompact::MovableObjectFixups"* %7 to i8*
  tail call void @free(i8* %26) #13
  br label %27

27:                                               ; preds = %25, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact6CancelEv(%"class.blink::HeapCompact"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 8
  store i64 0, i64* %6, align 8
  store i8 0, i8* %2, align 8
  %7 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 0
  %8 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %8, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Worklist.101"*, %"class.blink::Worklist.101"** %9, align 8
  tail call void @_ZN5blink8WorklistIPKPKvLi256ELi4EE5ClearEv(%"class.blink::Worklist.101"* %10)
  %11 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.blink::HeapCompact::MovableObjectFixups"*, %"class.blink::HeapCompact::MovableObjectFixups"** %11, align 8
  store %"class.blink::HeapCompact::MovableObjectFixups"* null, %"class.blink::HeapCompact::MovableObjectFixups"** %11, align 8
  %13 = icmp eq %"class.blink::HeapCompact::MovableObjectFixups"* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %12, i64 0, i32 3, i32 0, i32 0
  %16 = load i8**, i8*** %15, align 8
  %17 = icmp eq i8** %16, null
  br i1 %17, label %20, label %18, !prof !3

18:                                               ; preds = %14
  %19 = bitcast i8** %16 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #13
  store i8** null, i8*** %15, align 8
  br label %20

20:                                               ; preds = %18, %14
  %21 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %12, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %12, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %21, %"class.std::__1::__tree_node"* %24) #13
  %25 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %12, i64 0, i32 1, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %30, label %28, !prof !3

28:                                               ; preds = %20
  %29 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %29) #13
  br label %30

30:                                               ; preds = %28, %20
  %31 = bitcast %"class.blink::HeapCompact::MovableObjectFixups"* %12 to i8*
  tail call void @free(i8* %31) #13
  br label %32

32:                                               ; preds = %30, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8WorklistIPKPKvLi256ELi4EE5ClearEv(%"class.blink::Worklist.101"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 0, i64 0, i32 1
  %3 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %3, i64 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 0, i64 0, i32 0
  %6 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %6, i64 0, i32 1
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 0, i64 1, i32 1
  %9 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %9, i64 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 0, i64 1, i32 0
  %12 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %12, i64 0, i32 1
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 0, i64 2, i32 1
  %15 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %15, i64 0, i32 1
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 0, i64 2, i32 0
  %18 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %18, i64 0, i32 1
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 0, i64 3, i32 1
  %21 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %21, i64 0, i32 1
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 0, i64 3, i32 0
  %24 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %24, i64 0, i32 1
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool", %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %27) #13
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30, !prof !3

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool", %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool"* %26, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %31) #13
  br label %32

32:                                               ; preds = %30, %1
  %33 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 1, i32 1
  %35 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %34, align 8
  %36 = icmp eq %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %32, %37
  %38 = phi %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* [ %41, %37 ], [ %35, %32 ]
  %39 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %38 to i8*
  %40 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %38, i64 0, i32 0
  %41 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %40, align 8
  tail call void @free(i8* %39) #13
  %42 = icmp eq %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %41, null
  br i1 %42, label %43, label %37

43:                                               ; preds = %37, %32
  %44 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %34 to i64*
  store atomic volatile i64 0, i64* %44 monotonic, align 8
  %45 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %27) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11HeapCompact17AddCompactingPageEPNS_8BasePageE(%"class.blink::HeapCompact"* nocapture, %"class.blink::BasePage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BasePage"*, align 8
  %4 = getelementptr inbounds %"class.blink::HeapCompact", %"class.blink::HeapCompact"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::HeapCompact::MovableObjectFixups"*, %"class.blink::HeapCompact::MovableObjectFixups"** %5, align 8
  %7 = icmp eq %"class.blink::HeapCompact::MovableObjectFixups"* %6, null
  br i1 %7, label %8, label %21

8:                                                ; preds = %2
  %9 = tail call noalias i8* @malloc(i64 80) #13
  %10 = bitcast %"class.blink::HeapCompact"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %9 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #13
  %14 = getelementptr inbounds i8, i8* %9, i64 40
  %15 = getelementptr inbounds i8, i8* %9, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #13
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #13
  %18 = ptrtoint i8* %9 to i64
  %19 = bitcast %"class.std::__1::unique_ptr.157"* %4 to i64*
  store i64 %18, i64* %19, align 8
  %20 = bitcast i8* %9 to %"class.blink::HeapCompact::MovableObjectFixups"*
  br label %21

21:                                               ; preds = %2, %8
  %22 = phi %"class.blink::HeapCompact::MovableObjectFixups"* [ %6, %2 ], [ %20, %8 ]
  %23 = bitcast %"class.blink::BasePage"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  store %"class.blink::BasePage"* %1, %"class.blink::BasePage"** %3, align 8
  %24 = getelementptr inbounds %"class.blink::HeapCompact::MovableObjectFixups", %"class.blink::HeapCompact::MovableObjectFixups"* %22, i64 0, i32 3, i32 0
  %25 = call { i8**, i8 } @_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKPN5blink8BasePageERSE_EENS_18HashTableAddResultIS8_S1_EEOT0_OT1_(%"class.WTF::HashTable.181"* %24, %"class.blink::BasePage"** nonnull dereferenceable(8) %3, %"class.blink::BasePage"** nonnull dereferenceable(8) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  ret void
}

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKPKvEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEES2_E_8__invokeESK_S2_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPPKvEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEES2_E_8__invokeESJ_S2_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #7 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #13
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8**, i8 } @_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKPN5blink8BasePageERSE_EENS_18HashTableAddResultIS8_S1_EEOT0_OT1_(%"class.WTF::HashTable.181"*, %"class.blink::BasePage"** dereferenceable(8), %"class.blink::BasePage"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 0
  %5 = load i8**, i8*** %4, align 8
  %6 = icmp eq i8** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i8** @_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.181"* %0, i8** null)
  %9 = load i8**, i8*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i8** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::BasePage"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8*, i8** %11, i64 %38
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  %42 = inttoptr i64 %17 to i8*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi i8* [ %40, %43 ], [ %72, %64 ]
  %59 = phi i8** [ %39, %43 ], [ %71, %64 ]
  %60 = phi i8** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq i8* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq i8* %58, inttoptr (i64 -1 to i8*)
  %66 = select i1 %65, i8** %59, i8** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds i8*, i8** %11, i64 %70
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq i8** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi i8** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast i8** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast i8** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi i8** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::BasePage"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call i8** @_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.181"* %0, i8** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi i8** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { i8**, i8 } undef, i8** %105, 0
  %107 = insertvalue { i8**, i8 } %106, i8 %104, 1
  ret { i8**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8** @_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.181"*, i8**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPvEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to i8**
  %37 = call i8** @_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE8RehashToEPS1_jS9_(%"class.WTF::HashTable.181"* %0, i8** %36, i32 %32, i8** %1) #13
  ret i8** %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8** @_ZN3WTF9HashTableIPvS1_NS_17IdentityExtractorENS_7PtrHashIvEENS_10HashTraitsIS1_EES6_NS_18PartitionAllocatorEE8RehashToEPS1_jS9_(%"class.WTF::HashTable.181"*, i8**, i32, i8**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.181"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i8**, i8*** %9, align 8
  %17 = ptrtoint i8** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.181"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi i8** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #13
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.181", %"class.WTF::HashTable.181"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i8** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi i8** [ %16, %13 ], [ %122, %119 ]
  %35 = phi i8** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8*, i8** %34, i64 %37
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8*, i8** %1, i64 %62
  %64 = ptrtoint i8** %63 to i64
  %65 = load i8*, i8** %63, align 8
  %66 = icmp eq i8* %65, null
  %67 = inttoptr i64 %40 to i8*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint i8** %105 to i64
  %84 = inttoptr i64 %100 to i8**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi i8** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq i8** %87, null
  %89 = ptrtoint i8** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi i8* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq i8* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq i8* %93, inttoptr (i64 -1 to i8*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds i8*, i8** %1, i64 %104
  %106 = ptrtoint i8** %105 to i64
  %107 = load i8*, i8** %105, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to i8**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load i8**, i8*** %9, align 8
  %114 = getelementptr inbounds i8*, i8** %113, i64 %37
  %115 = icmp eq i8** %114, %3
  %116 = select i1 %115, i8** %111, i8** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint i8** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi i8** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi i8** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE4findERKS2_(%"class.WTF::HashTable"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast i8** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = inttoptr i64 %12 to i8*
  %38 = icmp eq i8* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi i8* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq i8* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = icmp eq i8* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79, %"struct.WTF::KeyValuePair"* %78, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERS2_RS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, i8** dereferenceable(8), i8*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast i8** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  %43 = inttoptr i64 %17 to i8*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi i8* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq i8* %59, %43
  br i1 %64, label %106, label %65

65:                                               ; preds = %58
  %66 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #13
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 1
  %92 = bitcast i8*** %2 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast i8*** %91 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 4
  %98 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, %97
  %101 = shl i32 %100, 1
  %102 = load i32, i32* %12, align 8
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %87
  %105 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %89)
  br label %106

106:                                              ; preds = %58, %87, %104
  %107 = phi i8 [ 1, %87 ], [ 1, %104 ], [ 0, %58 ]
  %108 = phi %"struct.WTF::KeyValuePair"* [ %89, %87 ], [ %105, %104 ], [ %60, %58 ]
  %109 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %108, 0
  %110 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %109, i8 %107, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKvPS3_EEEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #13
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable"* nonnull %5, i8** dereferenceable(8) %53) #13
  %55 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #13
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair"* %55, %"struct.WTF::KeyValuePair"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKvNS_12KeyValuePairIS2_PS2_EENS_24KeyValuePairKeyExtractorENS_7PtrHashIS1_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSA_IS4_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast i8** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  %37 = inttoptr i64 %10 to i8*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi i8* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq i8* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink8WorklistIPKPKvLi256ELi4EE3PopEiPS4_(%"class.blink::Worklist.101"*, i32, i8***) local_unnamed_addr #0 comdat align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 0, i64 %4, i32 1
  %6 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %6, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = ptrtoint %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %6 to i64
  br i1 %9, label %17, label %11

11:                                               ; preds = %3
  %12 = add i64 %8, -1
  store i64 %12, i64* %7, align 8
  %13 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %6, i64 0, i32 2, i64 %12
  %14 = bitcast i8*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8*** %2 to i64*
  store i64 %15, i64* %16, align 8
  br label %68

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 0, i64 %4, i32 0
  %19 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %19, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = ptrtoint %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %19 to i64
  %25 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %5 to i64*
  %26 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %18 to i64*
  store i64 %24, i64* %25, align 8
  store i64 %10, i64* %26, align 8
  br label %57

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %68, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool", %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool"* %28, i64 0, i32 0, i32 0, i32 0
  %35 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %34) #13
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37, !prof !3

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool", %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool"* %28, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %38) #13
  br label %39

39:                                               ; preds = %37, %33
  %40 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %29, align 8
  %41 = icmp eq %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %39
  %43 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %34) #13
  br label %68

44:                                               ; preds = %39
  %45 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %40 to i64*
  %46 = ptrtoint %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %40 to i64
  %47 = getelementptr inbounds %"class.blink::Worklist.101", %"class.blink::Worklist.101"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i64* %47, i64 1 monotonic
  %49 = load i64, i64* %45, align 8
  store atomic volatile i64 %49, i64* %30 monotonic, align 8
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %34) #13
  %51 = load %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %5, align 8
  %52 = icmp eq %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %44
  %54 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %51 to i8*
  tail call void @free(i8* %54) #13
  br label %55

55:                                               ; preds = %44, %53
  %56 = bitcast %"class.blink::Worklist<const void *const *, 256, 4>::Segment"** %5 to i64*
  store i64 %46, i64* %56, align 8
  br label %57

57:                                               ; preds = %55, %23
  %58 = phi %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* [ %40, %55 ], [ %19, %23 ]
  %59 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %58, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = add i64 %60, -1
  store i64 %63, i64* %59, align 8
  %64 = getelementptr inbounds %"class.blink::Worklist<const void *const *, 256, 4>::Segment", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"* %58, i64 0, i32 2, i64 %63
  %65 = bitcast i8*** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast i8*** %2 to i64*
  store i64 %66, i64* %67, align 8
  br label %68

68:                                               ; preds = %42, %27, %62, %57, %11
  %69 = phi i1 [ true, %11 ], [ true, %57 ], [ true, %62 ], [ false, %27 ], [ false, %42 ]
  ret i1 %69
}

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 24, i32 33}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRS4_DnEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISJ_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRS4_DnEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISJ_EEEEEEDpOT_"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{i8 0, i8 2}
