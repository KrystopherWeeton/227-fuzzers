; ModuleID = '../../third_party/blink/renderer/core/page/scrolling/viewport_scroll_callback.cc'
source_filename = "../../third_party/blink/renderer/core/page/scrolling/viewport_scroll_callback.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.165", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.206", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.145", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i64 }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::Worklist.111"* }
%"class.blink::Worklist.111" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::Worklist.118"* }
%"class.blink::Worklist.118" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.65" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.125", %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.139", [4 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127", %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { i64 }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { float }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.148", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.157" }
%"class.WTF::Vector.157" = type { %"class.WTF::VectorBuffer.158" }
%"class.WTF::VectorBuffer.158" = type { %"class.WTF::VectorBufferBase.159" }
%"class.WTF::VectorBufferBase.159" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.173" }
%"class.WTF::VectorBuffer.173" = type { %"class.WTF::VectorBufferBase.174" }
%"class.WTF::VectorBufferBase.174" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.97"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.104"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.210" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.205 }
%class.scoped_refptr.205 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.206" = type { %"struct.std::__1::__atomic_base.207" }
%"struct.std::__1::__atomic_base.207" = type { %"struct.std::__1::__cxx_atomic_impl.208" }
%"struct.std::__1::__cxx_atomic_impl.208" = type { %"struct.std::__1::__cxx_atomic_base_impl.209" }
%"struct.std::__1::__cxx_atomic_base_impl.209" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::ViewportScrollCallback" = type { %"class.blink::ScrollStateCallback.base", %"class.blink::WeakMember", %"class.blink::WeakMember.3", %"class.blink::WeakMember.11" }
%"class.blink::ScrollStateCallback.base" = type <{ i32 (...)**, i32 }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::BrowserControls"* }
%"class.blink::WeakMember.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::OverscrollController"* }
%"class.blink::WeakMember.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::BrowserControls" = type <{ %"class.blink::Member", %"struct.cc::BrowserControlsParams", float, float, float, float, float, i32, [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.blink::OverscrollController" = type { %"class.blink::WeakMember.7", %"class.blink::WeakMember.9", %"class.gfx::Vector2dF" }
%"class.blink::WeakMember.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::WeakMember.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::RootFrameViewport" = type <{ %"class.blink::ScrollableArea", %"class.blink::Member.26", %"class.blink::Member.26", %"class.absl::optional", i8, [7 x i8] }>
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.15", %"class.blink::Member.17", %"class.blink::Member.19", %"class.blink::Member.21", %"class.WTF::Vector", i16, %class.scoped_refptr.24 }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.24 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ScrollableArea"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.29" }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::ScrollState" = type { %"class.blink::ScriptWrappable", %"class.std::__1::unique_ptr.217", %"class.WTF::Deque.223", %"class.blink::Member.228" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.blink::ScrollStateData"* }
%"struct.blink::ScrollStateData" = type { %"class.cc::ScrollStateData" }
%"class.cc::ScrollStateData" = type { double, double, double, double, i32, i32, double, double, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.WTF::Deque.223" = type { %"class.WTF::Deque<int, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<int, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { i32*, i32, i32 }
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.228", %"class.blink::Member.230", %"class.blink::Member.228", %"class.blink::Member.228", %"class.blink::Member.232" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.236", %"class.blink::Member.238", %"class.blink::Member.230", %"class.blink::Member.240", %"class.blink::Member.240", %"class.blink::Member.276", %"class.blink::Member.278", %"class.blink::Member.280", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.285", %"class.blink::HeapVector.287" }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.228", %"class.blink::Member.228" }
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.247" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.28 }
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.251", i32, %"class.blink::HeapVector" }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.254" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.258", %"class.blink::Member.260", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.258" = type { %"class.WTF::SingleThreadedBitField.259" }
%"class.WTF::SingleThreadedBitField.259" = type { i32 }
%"class.blink::Member.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.262 }
%class.scoped_refptr.262 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.263", %"class.WTF::AtomicString", %"class.WTF::Vector.265" }
%"class.WTF::RefCounted.263" = type { %"class.base::RefCounted.264" }
%"class.base::RefCounted.264" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.265" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267", [32 x i8] }
%"class.WTF::VectorBufferBase.267" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.272" }
%"class.WTF::Vector.272" = type { %"class.WTF::VectorBuffer.273" }
%"class.WTF::VectorBuffer.273" = type { %"class.WTF::VectorBufferBase.274" }
%"class.WTF::VectorBufferBase.274" = type { %"class.blink::Member.251"*, i32, i32 }
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.278" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.280" = type { %"class.blink::MemberBase.281" }
%"class.blink::MemberBase.281" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.282" }
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::HeapHashMap.284"* }
%"class.blink::HeapHashMap.284" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.287" = type { %"class.WTF::Vector.290" }
%"class.WTF::Vector.290" = type { %"class.WTF::VectorBuffer.291" }
%"class.WTF::VectorBuffer.291" = type { %"class.WTF::VectorBufferBase.292" }
%"class.WTF::VectorBufferBase.292" = type { %"class.blink::Member.293"*, i32, i32 }
%"class.blink::Member.293" = type opaque
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::ScrollResult" = type { i8, i8, float, float }
%"class.blink::FloatPoint" = type { float, float }

$_ZN5blink7Visitor14HandleWeakCellINS_15BrowserControlsEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_15BrowserControlsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_20OverscrollControllerEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_20OverscrollControllerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_17RootFrameViewportEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_17RootFrameViewportEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink22ViewportScrollCallbackE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ViewportScrollCallback"*)* @_ZN5blink22ViewportScrollCallbackD2Ev to i8*), i8* bitcast (void (%"class.blink::ViewportScrollCallback"*)* @_ZN5blink22ViewportScrollCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::ViewportScrollCallback"*, %"class.blink::Visitor"*)* @_ZNK5blink22ViewportScrollCallback5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ViewportScrollCallback"*, %"class.blink::ScrollState"*)* @_ZN5blink22ViewportScrollCallback6InvokeEPNS_11ScrollStateE to i8*)] }, align 8
@__const._ZN5blink22ViewportScrollCallback6InvokeEPNS_11ScrollStateE.result = private unnamed_addr constant { i8, i8, [2 x i8], float, float } { i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1

@_ZN5blink22ViewportScrollCallbackC1EPNS_15BrowserControlsEPNS_20OverscrollControllerERNS_17RootFrameViewportE = hidden unnamed_addr alias void (%"class.blink::ViewportScrollCallback"*, %"class.blink::BrowserControls"*, %"class.blink::OverscrollController"*, %"class.blink::RootFrameViewport"*), void (%"class.blink::ViewportScrollCallback"*, %"class.blink::BrowserControls"*, %"class.blink::OverscrollController"*, %"class.blink::RootFrameViewport"*)* @_ZN5blink22ViewportScrollCallbackC2EPNS_15BrowserControlsEPNS_20OverscrollControllerERNS_17RootFrameViewportE
@_ZN5blink22ViewportScrollCallbackD1Ev = hidden unnamed_addr alias void (%"class.blink::ViewportScrollCallback"*), void (%"class.blink::ViewportScrollCallback"*)* @_ZN5blink22ViewportScrollCallbackD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink22ViewportScrollCallbackC2EPNS_15BrowserControlsEPNS_20OverscrollControllerERNS_17RootFrameViewportE(%"class.blink::ViewportScrollCallback"* nocapture, %"class.blink::BrowserControls"*, %"class.blink::OverscrollController"*, %"class.blink::RootFrameViewport"* dereferenceable(160)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink22ViewportScrollCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::BrowserControls"* %1, %"class.blink::BrowserControls"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::OverscrollController"* %2, %"class.blink::OverscrollController"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::RootFrameViewport"* %3, %"class.blink::RootFrameViewport"** %9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink22ViewportScrollCallbackD2Ev(%"class.blink::ViewportScrollCallback"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink22ViewportScrollCallbackD0Ev(%"class.blink::ViewportScrollCallback"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22ViewportScrollCallback5TraceEPNS_7VisitorE(%"class.blink::ViewportScrollCallback"*, %"class.blink::Visitor"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WeakMember"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::WeakMember"* %3 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %11, i64 6
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %9, i8* %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15BrowserControlsEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_15BrowserControlsEEEvRKNS_14LivenessBrokerEPKv) #7
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 2
  %16 = bitcast %"class.blink::WeakMember.3"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::WeakMember.3"* %15 to i8*
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %23, i64 6
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* %21, i8* %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20OverscrollControllerEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_20OverscrollControllerEEEvRKNS_14LivenessBrokerEPKv) #7
  br label %26

26:                                               ; preds = %14, %19
  %27 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 3
  %28 = bitcast %"class.blink::WeakMember.11"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %29 to i8*
  %33 = bitcast %"class.blink::WeakMember.11"* %27 to i8*
  %34 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %35, i64 6
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8* nonnull %32, i8* %33, i8* %32, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17RootFrameViewportEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_17RootFrameViewportEEEvRKNS_14LivenessBrokerEPKv) #7
  br label %38

38:                                               ; preds = %26, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22ViewportScrollCallback27ShouldScrollBrowserControlsERKNS_9FloatSizeEN2ui17ScrollGranularityE(%"class.blink::ViewportScrollCallback"* nocapture readonly, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8), i8 zeroext) local_unnamed_addr #3 align 2 {
  %4 = icmp ugt i8 %2, 1
  br i1 %4, label %20, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %6, align 8
  %8 = icmp eq %"class.blink::RootFrameViewport"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = tail call <2 x float> @_ZNK5blink17RootFrameViewport19MaximumScrollOffsetEv(%"class.blink::RootFrameViewport"* nonnull %7) #7
  %11 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %6, align 8
  %12 = tail call <2 x float> @_ZNK5blink17RootFrameViewport15GetScrollOffsetEv(%"class.blink::RootFrameViewport"* %11) #7
  %13 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fcmp olt float %14, 0.000000e+00
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  %17 = extractelement <2 x float> %12, i32 1
  %18 = extractelement <2 x float> %10, i32 1
  %19 = fcmp olt float %17, %18
  br label %20

20:                                               ; preds = %5, %9, %16, %3
  %21 = phi i1 [ false, %3 ], [ false, %5 ], [ true, %9 ], [ %19, %16 ]
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare <2 x float> @_ZNK5blink17RootFrameViewport19MaximumScrollOffsetEv(%"class.blink::RootFrameViewport"*) unnamed_addr #5

declare <2 x float> @_ZNK5blink17RootFrameViewport15GetScrollOffsetEv(%"class.blink::RootFrameViewport"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22ViewportScrollCallback21ScrollBrowserControlsERNS_11ScrollStateE(%"class.blink::ViewportScrollCallback"* nocapture readonly, %"class.blink::ScrollState"* dereferenceable(56)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::BrowserControls"*, %"class.blink::BrowserControls"** %3, align 8
  %5 = icmp eq %"class.blink::BrowserControls"* %4, null
  br i1 %5, label %54, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ScrollState", %"class.blink::ScrollState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::ScrollStateData"*, %"struct.blink::ScrollStateData"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %8, i64 0, i32 0, i32 8
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  tail call void @_ZN5blink15BrowserControls11ScrollBeginEv(%"class.blink::BrowserControls"* nonnull %4) #7
  %13 = load %"struct.blink::ScrollStateData"*, %"struct.blink::ScrollStateData"** %7, align 8
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi %"struct.blink::ScrollStateData"* [ %8, %6 ], [ %13, %12 ]
  %16 = bitcast %"struct.blink::ScrollStateData"* %15 to <2 x double>*
  %17 = load <2 x double>, <2 x double>* %16, align 8
  %18 = fptrunc <2 x double> %17 to <2 x float>
  %19 = extractelement <2 x float> %18, i32 0
  %20 = extractelement <2 x float> %18, i32 1
  %21 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %15, i64 0, i32 0, i32 15
  %22 = load i8, i8* %21, align 1
  %23 = icmp ugt i8 %22, 1
  br i1 %23, label %54, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %25, align 8
  %27 = icmp eq %"class.blink::RootFrameViewport"* %26, null
  br i1 %27, label %54, label %28

28:                                               ; preds = %24
  %29 = tail call <2 x float> @_ZNK5blink17RootFrameViewport19MaximumScrollOffsetEv(%"class.blink::RootFrameViewport"* nonnull %26) #7
  %30 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %25, align 8
  %31 = tail call <2 x float> @_ZNK5blink17RootFrameViewport15GetScrollOffsetEv(%"class.blink::RootFrameViewport"* %30) #7
  %32 = fcmp olt float %20, 0.000000e+00
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = extractelement <2 x float> %31, i32 1
  %35 = extractelement <2 x float> %29, i32 1
  %36 = fcmp olt float %34, %35
  br i1 %36, label %37, label %54

37:                                               ; preds = %28, %33
  %38 = load %"class.blink::BrowserControls"*, %"class.blink::BrowserControls"** %3, align 8
  %39 = tail call <2 x float> @_ZN5blink15BrowserControls8ScrollByENS_9FloatSizeE(%"class.blink::BrowserControls"* %38, <2 x float> %18) #7
  %40 = extractelement <2 x float> %39, i32 0
  %41 = fsub float %19, %40
  %42 = extractelement <2 x float> %39, i32 1
  %43 = fsub float %20, %42
  %44 = fpext float %41 to double
  %45 = fpext float %43 to double
  tail call void @_ZN5blink11ScrollState18ConsumeDeltaNativeEdd(%"class.blink::ScrollState"* %1, double %44, double %45) #7
  %46 = fcmp ogt float %41, 0xBE80000000000000
  %47 = fcmp olt float %41, 0x3E80000000000000
  %48 = and i1 %46, %47
  %49 = fcmp ogt float %43, 0xBE80000000000000
  %50 = and i1 %49, %48
  %51 = fcmp olt float %43, 0x3E80000000000000
  %52 = and i1 %51, %50
  %53 = xor i1 %52, true
  br label %54

54:                                               ; preds = %2, %24, %14, %33, %37
  %55 = phi i1 [ %53, %37 ], [ false, %2 ], [ false, %33 ], [ false, %14 ], [ false, %24 ]
  ret i1 %55
}

declare void @_ZN5blink15BrowserControls11ScrollBeginEv(%"class.blink::BrowserControls"*) local_unnamed_addr #5

declare <2 x float> @_ZN5blink15BrowserControls8ScrollByENS_9FloatSizeE(%"class.blink::BrowserControls"*, <2 x float>) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN5blink11ScrollState18ConsumeDeltaNativeEdd(%"class.blink::ScrollState"*, double, double) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ViewportScrollCallback6InvokeEPNS_11ScrollStateE(%"class.blink::ViewportScrollCallback"* nocapture readonly, %"class.blink::ScrollState"*) unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::FloatSize", align 4
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"struct.blink::ScrollResult", align 8
  %6 = alloca %"class.blink::FloatPoint", align 4
  %7 = alloca %"class.blink::FloatSize", align 4
  %8 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %8, align 8
  %10 = icmp eq %"class.blink::RootFrameViewport"* %9, null
  br i1 %10, label %125, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::BrowserControls"*, %"class.blink::BrowserControls"** %12, align 8
  %14 = icmp eq %"class.blink::BrowserControls"* %13, null
  br i1 %14, label %63, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::ScrollState", %"class.blink::ScrollState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::ScrollStateData"*, %"struct.blink::ScrollStateData"** %16, align 8
  %18 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %17, i64 0, i32 0, i32 8
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  tail call void @_ZN5blink15BrowserControls11ScrollBeginEv(%"class.blink::BrowserControls"* nonnull %13) #7
  %22 = load %"struct.blink::ScrollStateData"*, %"struct.blink::ScrollStateData"** %16, align 8
  br label %23

23:                                               ; preds = %21, %15
  %24 = phi %"struct.blink::ScrollStateData"* [ %17, %15 ], [ %22, %21 ]
  %25 = bitcast %"struct.blink::ScrollStateData"* %24 to <2 x double>*
  %26 = load <2 x double>, <2 x double>* %25, align 8
  %27 = fptrunc <2 x double> %26 to <2 x float>
  %28 = extractelement <2 x float> %27, i32 0
  %29 = extractelement <2 x float> %27, i32 1
  %30 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %24, i64 0, i32 0, i32 15
  %31 = load i8, i8* %30, align 1
  %32 = icmp ugt i8 %31, 1
  br i1 %32, label %63, label %33

33:                                               ; preds = %23
  %34 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %8, align 8
  %35 = icmp eq %"class.blink::RootFrameViewport"* %34, null
  br i1 %35, label %63, label %36

36:                                               ; preds = %33
  %37 = tail call <2 x float> @_ZNK5blink17RootFrameViewport19MaximumScrollOffsetEv(%"class.blink::RootFrameViewport"* nonnull %34) #7
  %38 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %8, align 8
  %39 = tail call <2 x float> @_ZNK5blink17RootFrameViewport15GetScrollOffsetEv(%"class.blink::RootFrameViewport"* %38) #7
  %40 = fcmp olt float %29, 0.000000e+00
  br i1 %40, label %45, label %41

41:                                               ; preds = %36
  %42 = extractelement <2 x float> %39, i32 1
  %43 = extractelement <2 x float> %37, i32 1
  %44 = fcmp olt float %42, %43
  br i1 %44, label %45, label %63

45:                                               ; preds = %41, %36
  %46 = load %"class.blink::BrowserControls"*, %"class.blink::BrowserControls"** %12, align 8
  %47 = tail call <2 x float> @_ZN5blink15BrowserControls8ScrollByENS_9FloatSizeE(%"class.blink::BrowserControls"* %46, <2 x float> %27) #7
  %48 = extractelement <2 x float> %47, i32 0
  %49 = fsub float %28, %48
  %50 = extractelement <2 x float> %47, i32 1
  %51 = fsub float %29, %50
  %52 = fpext float %49 to double
  %53 = fpext float %51 to double
  tail call void @_ZN5blink11ScrollState18ConsumeDeltaNativeEdd(%"class.blink::ScrollState"* %1, double %52, double %53) #7
  %54 = fcmp ogt float %49, 0xBE80000000000000
  %55 = fcmp olt float %49, 0x3E80000000000000
  %56 = and i1 %54, %55
  %57 = fcmp ogt float %51, 0xBE80000000000000
  %58 = and i1 %57, %56
  %59 = fcmp olt float %51, 0x3E80000000000000
  %60 = and i1 %59, %58
  %61 = xor i1 %60, true
  %62 = zext i1 %61 to i8
  br label %63

63:                                               ; preds = %11, %23, %33, %41, %45
  %64 = phi i8 [ %62, %45 ], [ 0, %11 ], [ 0, %41 ], [ 0, %23 ], [ 0, %33 ]
  %65 = getelementptr inbounds %"struct.blink::ScrollResult", %"struct.blink::ScrollResult"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %65) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 4 getelementptr inbounds ({ i8, i8, [2 x i8], float, float }, { i8, i8, [2 x i8], float, float }* @__const._ZN5blink22ViewportScrollCallback6InvokeEPNS_11ScrollStateE.result, i64 0, i32 0), i64 12, i1 false)
  %66 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %67 = bitcast %"class.blink::FloatSize"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #7
  %68 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %68, align 4
  %69 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %69, align 4
  %70 = getelementptr inbounds %"class.blink::ScrollState", %"class.blink::ScrollState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.blink::ScrollStateData"*, %"struct.blink::ScrollStateData"** %70, align 8
  %72 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %71, i64 0, i32 0, i32 0
  %73 = load double, double* %72, align 8
  %74 = fptrunc double %73 to float
  %75 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %71, i64 0, i32 0, i32 1
  %76 = load double, double* %75, align 8
  %77 = fptrunc double %76 to float
  store float %74, float* %68, align 4
  store float %77, float* %69, align 4
  %78 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %71, i64 0, i32 0, i32 15
  %79 = load i8, i8* %78, align 1
  %80 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %8, align 8
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %82 = call { i64, float } @_ZN5blink17RootFrameViewport10UserScrollEN2ui17ScrollGranularityERKNS_9FloatSizeEN4base12OnceCallbackIFvvEEE(%"class.blink::RootFrameViewport"* %80, i8 zeroext %79, %"class.blink::FloatSize"* nonnull dereferenceable(8) %3, %"class.base::OnceCallback"* nonnull %4) #7
  %83 = extractvalue { i64, float } %82, 0
  %84 = lshr i64 %83, 32
  %85 = trunc i64 %84 to i32
  %86 = extractvalue { i64, float } %82, 1
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %87) #7
  %88 = load float, float* %68, align 4
  %89 = bitcast i32 %85 to float
  %90 = fsub float %88, %89
  %91 = fpext float %90 to double
  %92 = load float, float* %69, align 4
  %93 = fsub float %92, %86
  %94 = fpext float %93 to double
  call void @_ZN5blink11ScrollState18ConsumeDeltaNativeEdd(%"class.blink::ScrollState"* %1, double %91, double %94) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  %95 = bitcast %"struct.blink::ScrollResult"* %5 to i64*
  store i64 %83, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.blink::ScrollResult", %"struct.blink::ScrollResult"* %5, i64 0, i32 3
  store float %86, float* %96, align 8
  %97 = getelementptr inbounds %"struct.blink::ScrollResult", %"struct.blink::ScrollResult"* %5, i64 0, i32 1
  %98 = lshr i64 %83, 8
  %99 = trunc i64 %98 to i8
  %100 = or i8 %64, %99
  store i8 %100, i8* %97, align 1
  %101 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 2, i32 0, i32 0
  %102 = load %"class.blink::OverscrollController"*, %"class.blink::OverscrollController"** %101, align 8
  %103 = icmp eq %"class.blink::OverscrollController"* %102, null
  br i1 %103, label %124, label %104

104:                                              ; preds = %63
  %105 = bitcast %"class.blink::FloatPoint"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #7
  %106 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %6, i64 0, i32 0
  %107 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %6, i64 0, i32 1
  %108 = load %"struct.blink::ScrollStateData"*, %"struct.blink::ScrollStateData"** %70, align 8
  %109 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %108, i64 0, i32 0, i32 4
  %110 = load i32, i32* %109, align 8
  %111 = sitofp i32 %110 to float
  %112 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %108, i64 0, i32 0, i32 5
  %113 = load i32, i32* %112, align 4
  %114 = sitofp i32 %113 to float
  store float %111, float* %106, align 4
  store float %114, float* %107, align 4
  %115 = bitcast %"class.blink::FloatSize"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #7
  %116 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %7, i64 0, i32 0
  %117 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %7, i64 0, i32 1
  %118 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %108, i64 0, i32 0, i32 6
  %119 = load double, double* %118, align 8
  %120 = fptrunc double %119 to float
  %121 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %108, i64 0, i32 0, i32 7
  %122 = load double, double* %121, align 8
  %123 = fptrunc double %122 to float
  store float %120, float* %116, align 4
  store float %123, float* %117, align 4
  call void @_ZN5blink20OverscrollController16HandleOverscrollERKNS_12ScrollResultERKNS_10FloatPointERKNS_9FloatSizeE(%"class.blink::OverscrollController"* nonnull %102, %"struct.blink::ScrollResult"* nonnull dereferenceable(12) %5, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %6, %"class.blink::FloatSize"* nonnull dereferenceable(8) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #7
  br label %124

124:                                              ; preds = %63, %104
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %65) #7
  br label %125

125:                                              ; preds = %2, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, float } @_ZN5blink22ViewportScrollCallback19PerformNativeScrollERNS_11ScrollStateE(%"class.blink::ViewportScrollCallback"* nocapture readonly, %"class.blink::ScrollState"* dereferenceable(56)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::FloatSize", align 4
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.blink::FloatSize"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  %7 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  %8 = getelementptr inbounds %"class.blink::ScrollState", %"class.blink::ScrollState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"struct.blink::ScrollStateData"*, %"struct.blink::ScrollStateData"** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %9, i64 0, i32 0, i32 0
  %11 = load double, double* %10, align 8
  %12 = fptrunc double %11 to float
  %13 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %9, i64 0, i32 0, i32 1
  %14 = load double, double* %13, align 8
  %15 = fptrunc double %14 to float
  store float %12, float* %6, align 4
  store float %15, float* %7, align 4
  %16 = getelementptr inbounds %"struct.blink::ScrollStateData", %"struct.blink::ScrollStateData"* %9, i64 0, i32 0, i32 15
  %17 = load i8, i8* %16, align 1
  %18 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %18, align 8
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %21 = call { i64, float } @_ZN5blink17RootFrameViewport10UserScrollEN2ui17ScrollGranularityERKNS_9FloatSizeEN4base12OnceCallbackIFvvEEE(%"class.blink::RootFrameViewport"* %19, i8 zeroext %17, %"class.blink::FloatSize"* nonnull dereferenceable(8) %3, %"class.base::OnceCallback"* nonnull %4) #7
  %22 = extractvalue { i64, float } %21, 0
  %23 = lshr i64 %22, 32
  %24 = trunc i64 %23 to i32
  %25 = extractvalue { i64, float } %21, 1
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #7
  %27 = load float, float* %6, align 4
  %28 = bitcast i32 %24 to float
  %29 = fsub float %27, %28
  %30 = fpext float %29 to double
  %31 = load float, float* %7, align 4
  %32 = fsub float %31, %25
  %33 = fpext float %32 to double
  call void @_ZN5blink11ScrollState18ConsumeDeltaNativeEdd(%"class.blink::ScrollState"* %1, double %30, double %33) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret { i64, float } %21
}

declare void @_ZN5blink20OverscrollController16HandleOverscrollERKNS_12ScrollResultERKNS_10FloatPointERKNS_9FloatSizeE(%"class.blink::OverscrollController"*, %"struct.blink::ScrollResult"* dereferenceable(12), %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ViewportScrollCallback11SetScrollerEPNS_14ScrollableAreaE(%"class.blink::ViewportScrollCallback"* nocapture readonly, %"class.blink::ScrollableArea"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ViewportScrollCallback", %"class.blink::ViewportScrollCallback"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %3, align 8
  tail call void @_ZN5blink17RootFrameViewport17SetLayoutViewportERNS_14ScrollableAreaE(%"class.blink::RootFrameViewport"* %4, %"class.blink::ScrollableArea"* dereferenceable(80) %1) #7
  ret void
}

declare void @_ZN5blink17RootFrameViewport17SetLayoutViewportERNS_14ScrollableAreaE(%"class.blink::RootFrameViewport"*, %"class.blink::ScrollableArea"* dereferenceable(80)) local_unnamed_addr #5

declare { i64, float } @_ZN5blink17RootFrameViewport10UserScrollEN2ui17ScrollGranularityERKNS_9FloatSizeEN4base12OnceCallbackIFvvEEE(%"class.blink::RootFrameViewport"*, i8 zeroext, %"class.blink::FloatSize"* dereferenceable(8), %"class.base::OnceCallback"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_15BrowserControlsEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BrowserControls"**
  %4 = load %"class.blink::BrowserControls"*, %"class.blink::BrowserControls"** %3, align 8
  %5 = ptrtoint %"class.blink::BrowserControls"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #7
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #7
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::BrowserControls", %"class.blink::BrowserControls"* %4, i64 -1, i32 7
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15BrowserControlsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BrowserControls"*
  tail call void @_ZNK5blink15BrowserControls5TraceEPNS_7VisitorE(%"class.blink::BrowserControls"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink15BrowserControls5TraceEPNS_7VisitorE(%"class.blink::BrowserControls"*, %"class.blink::Visitor"*) local_unnamed_addr #5

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #5

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #5

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_20OverscrollControllerEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::OverscrollController"**
  %4 = load %"class.blink::OverscrollController"*, %"class.blink::OverscrollController"** %3, align 8
  %5 = ptrtoint %"class.blink::OverscrollController"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #7
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #7
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::OverscrollController", %"class.blink::OverscrollController"* %4, i64 -1, i32 2
  %20 = bitcast %"class.gfx::Vector2dF"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20OverscrollControllerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::OverscrollController"*
  tail call void @_ZNK5blink20OverscrollController5TraceEPNS_7VisitorE(%"class.blink::OverscrollController"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink20OverscrollController5TraceEPNS_7VisitorE(%"class.blink::OverscrollController"*, %"class.blink::Visitor"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_17RootFrameViewportEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RootFrameViewport"**
  %4 = load %"class.blink::RootFrameViewport"*, %"class.blink::RootFrameViewport"** %3, align 8
  %5 = ptrtoint %"class.blink::RootFrameViewport"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #7
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #7
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::RootFrameViewport", %"class.blink::RootFrameViewport"* %4, i64 -1, i32 4
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17RootFrameViewportEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RootFrameViewport"*
  tail call void @_ZNK5blink17RootFrameViewport5TraceEPNS_7VisitorE(%"class.blink::RootFrameViewport"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink17RootFrameViewport5TraceEPNS_7VisitorE(%"class.blink::RootFrameViewport"*, %"class.blink::Visitor"*) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
