; ModuleID = '../../extensions/common/permissions/socket_permission_entry.cc'
source_filename = "../../extensions/common/permissions/socket_permission_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::SocketPermissionEntry" = type { %"struct.content::SocketPermissionRequest", i8, [7 x i8] }
%"struct.content::SocketPermissionRequest" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__tuple_less.17" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.1", %"class.std::__1::__tuple_leaf.2", %"class.std::__1::__tuple_leaf.3" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::__tuple_leaf.1" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__tuple_leaf.2" = type { i8* }
%"class.std::__1::__tuple_leaf.3" = type { i16* }
%"struct.url::Component" = type { i32, i32 }
%"class.url::RawCanonOutputT" = type { %"class.url::CanonOutputT", [128 x i8] }
%"class.url::CanonOutputT" = type { i32 (...)**, i8*, i32, i32 }
%"struct.url::CanonHostInfo" = type { i32, i32, %"struct.url::Component", [16 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.11" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::BasicStringPiece"* }

$_ZN3url15RawCanonOutputTIcLi128EED2Ev = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN7content23SocketPermissionRequest13OperationTypeERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKbRKtEEESL_EEbRKT_RKT0_ = comdat any

$_ZN3url15RawCanonOutputTIcLi128EED0Ev = comdat any

$_ZN3url15RawCanonOutputTIcLi128EE6ResizeEi = comdat any

$_ZTVN3url15RawCanonOutputTIcLi128EEE = comdat any

@_ZN12_GLOBAL__N_19kWildcardE = internal constant [2 x i8] c"*\00", align 1
@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZTVN3url15RawCanonOutputTIcLi128EEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi128EED2Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi128EED0Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*, i32)* @_ZN3url15RawCanonOutputTIcLi128EE6ResizeEi to i8*)] }, comdat, align 8

@_ZN10extensions21SocketPermissionEntryC1Ev = hidden unnamed_addr alias void (%"class.extensions::SocketPermissionEntry"*), void (%"class.extensions::SocketPermissionEntry"*)* @_ZN10extensions21SocketPermissionEntryC2Ev
@_ZN10extensions21SocketPermissionEntryD1Ev = hidden unnamed_addr alias void (%"class.extensions::SocketPermissionEntry"*), void (%"class.extensions::SocketPermissionEntry"*)* @_ZN10extensions21SocketPermissionEntryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions21SocketPermissionEntryC2Ev(%"class.extensions::SocketPermissionEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 3
  %5 = bitcast i8** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false)
  store i16 -1, i16* %4, align 8
  %6 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions21SocketPermissionEntryD2Ev(%"class.extensions::SocketPermissionEntry"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions21SocketPermissionEntryltERKS0_(%"class.extensions::SocketPermissionEntry"*, %"class.extensions::SocketPermissionEntry"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less.17", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 3
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %11, align 8, !alias.scope !2
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"** %12, align 8, !alias.scope !2
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 2, i32 0
  store i8* %9, i8** %13, align 8, !alias.scope !2
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 3, i32 0
  store i16* %10, i16** %14, align 8, !alias.scope !2
  %15 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 1
  %19 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 3
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %16, i32** %20, align 8, !alias.scope !5
  %21 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"** %21, align 8, !alias.scope !5
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  store i8* %18, i8** %22, align 8, !alias.scope !5
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 3, i32 0
  store i16* %19, i16** %23, align 8, !alias.scope !5
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %16, align 4
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %2
  %28 = icmp slt i32 %25, %24
  br i1 %28, label %32, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"struct.std::__1::__tuple_less.17", %"struct.std::__1::__tuple_less.17"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #10
  %31 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN7content23SocketPermissionRequest13OperationTypeERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKbRKtEEESL_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.17"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(32) %4, %"class.std::__1::tuple"* nonnull dereferenceable(32) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #10
  br label %32

32:                                               ; preds = %2, %27, %29
  %33 = phi i1 [ %31, %29 ], [ true, %2 ], [ false, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret i1 %33
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions21SocketPermissionEntryeqERKS0_(%"class.extensions::SocketPermissionEntry"* nocapture readonly, %"class.extensions::SocketPermissionEntry"* nocapture readonly dereferenceable(48)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %72

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp eq i64 %18, %26
  br i1 %27, label %28, label %72

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %32 = select i1 %14, i8* %30, i8* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %36 = select i1 %22, i8* %34, i8* %35
  %37 = icmp eq i64 %18, 0
  br i1 %14, label %44, label %38

38:                                               ; preds = %28
  br i1 %37, label %60, label %39

39:                                               ; preds = %38
  %40 = ptrtoint i8* %30 to i64
  %41 = trunc i64 %40 to i8
  %42 = load i8, i8* %36, align 1
  %43 = icmp eq i8 %42, %41
  br i1 %43, label %45, label %72

44:                                               ; preds = %28
  br i1 %37, label %60, label %57

45:                                               ; preds = %39, %52
  %46 = phi i64 [ %49, %52 ], [ %17, %39 ]
  %47 = phi i8* [ %50, %52 ], [ %31, %39 ]
  %48 = phi i8* [ %53, %52 ], [ %36, %39 ]
  %49 = add i64 %46, -1
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds i8, i8* %48, i64 1
  %54 = load i8, i8* %50, align 1
  %55 = load i8, i8* %53, align 1
  %56 = icmp eq i8 %54, %55
  br i1 %56, label %45, label %72

57:                                               ; preds = %44
  %58 = tail call i32 @bcmp(i8* %32, i8* %36, i64 %18) #10
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %45, %38, %44, %57
  %61 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 1
  %62 = load i8, i8* %61, align 8, !range !8
  %63 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 1
  %64 = load i8, i8* %63, align 8, !range !8
  %65 = icmp eq i8 %62, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 3
  %68 = load i16, i16* %67, align 8
  %69 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 3
  %70 = load i16, i16* %69, align 8
  %71 = icmp eq i16 %68, %70
  br label %72

72:                                               ; preds = %52, %39, %8, %66, %60, %57, %2
  %73 = phi i1 [ false, %60 ], [ false, %57 ], [ false, %2 ], [ %71, %66 ], [ false, %8 ], [ false, %39 ], [ false, %52 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions21SocketPermissionEntry5CheckERKN7content23SocketPermissionRequestE(%"class.extensions::SocketPermissionEntry"*, %"struct.content::SocketPermissionRequest"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.url::Component", align 4
  %5 = alloca %"class.url::RawCanonOutputT", align 8
  %6 = alloca %"struct.url::CanonHostInfo", align 16
  %7 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"struct.content::SocketPermissionRequest", %"struct.content::SocketPermissionRequest"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %177

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.content::SocketPermissionRequest", %"struct.content::SocketPermissionRequest"* %1, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  %20 = load i8, i8* %18, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %25 = select i1 %21, i8* %23, i8* %24
  %26 = getelementptr inbounds %"struct.content::SocketPermissionRequest", %"struct.content::SocketPermissionRequest"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %20 to i64
  %29 = select i1 %21, i64 %27, i64 %28
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i8* %25, i64 %29) #10
  %30 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 2
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = load i64, i64* %15, align 8
  %44 = zext i8 %41 to i64
  %45 = select i1 %42, i64 %43, i64 %44
  %46 = icmp eq i64 %38, %45
  br i1 %46, label %47, label %77

47:                                               ; preds = %12
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %51 = select i1 %34, i8* %49, i8* %50
  %52 = load i8*, i8** %14, align 8
  %53 = select i1 %42, i8* %52, i8* %13
  %54 = icmp eq i64 %38, 0
  br i1 %34, label %61, label %55

55:                                               ; preds = %47
  br i1 %54, label %162, label %56

56:                                               ; preds = %55
  %57 = ptrtoint i8* %49 to i64
  %58 = trunc i64 %57 to i8
  %59 = load i8, i8* %53, align 1
  %60 = icmp eq i8 %59, %58
  br i1 %60, label %62, label %77

61:                                               ; preds = %47
  br i1 %54, label %162, label %74

62:                                               ; preds = %56, %69
  %63 = phi i64 [ %66, %69 ], [ %37, %56 ]
  %64 = phi i8* [ %67, %69 ], [ %50, %56 ]
  %65 = phi i8* [ %70, %69 ], [ %53, %56 ]
  %66 = add i64 %63, -1
  %67 = getelementptr inbounds i8, i8* %64, i64 1
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %162, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds i8, i8* %65, i64 1
  %71 = load i8, i8* %67, align 1
  %72 = load i8, i8* %70, align 1
  %73 = icmp eq i8 %71, %72
  br i1 %73, label %62, label %77

74:                                               ; preds = %61
  %75 = call i32 @bcmp(i8* %51, i8* %53, i64 %38) #10
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %162, label %77

77:                                               ; preds = %69, %56, %74, %12
  %78 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 1
  %79 = load i8, i8* %78, align 8, !range !8
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %170, label %81

81:                                               ; preds = %77
  %82 = icmp eq i64 %38, 0
  br i1 %82, label %162, label %83

83:                                               ; preds = %81
  %84 = bitcast %"struct.url::Component"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #10
  %85 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  %87 = trunc i64 %45 to i32
  store i32 0, i32* %85, align 4
  store i32 %87, i32* %86, align 4
  %88 = bitcast %"class.url::RawCanonOutputT"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %88) #10
  %89 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 128, i1 false)
  %90 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 1
  %92 = bitcast i8** %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi128EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %93 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 1, i64 0
  store i8* %93, i8** %91, align 8
  %94 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0, i32 2
  store i32 128, i32* %94, align 8
  %95 = bitcast %"struct.url::CanonHostInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #10
  %96 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %6, i64 0, i32 0
  %97 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %6, i64 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %97, i8 -86, i64 16, i1 false)
  %98 = bitcast %"struct.url::CanonHostInfo"* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %98, align 16
  %99 = load i8*, i8** %14, align 8
  %100 = select i1 %42, i8* %99, i8* %13
  %101 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %5, i64 0, i32 0
  call void @_ZN3url21CanonicalizeIPAddressEPKcRKNS_9ComponentEPNS_12CanonOutputTIcEEPNS_13CanonHostInfoE(i8* %100, %"struct.url::Component"* nonnull dereferenceable(8) %4, %"class.url::CanonOutputT"* nonnull %101, %"struct.url::CanonHostInfo"* nonnull %6) #10
  %102 = load i32, i32* %96, align 16
  %103 = or i32 %102, 1
  %104 = icmp eq i32 %103, 3
  br i1 %104, label %153, label %105

105:                                              ; preds = %83
  %106 = load i8, i8* %40, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i64, i64* %15, align 8
  %109 = zext i8 %106 to i64
  %110 = select i1 %107, i64 %108, i64 %109
  %111 = load i8, i8* %32, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %105
  %114 = load i64, i64* %35, align 8
  br label %117

115:                                              ; preds = %105
  %116 = zext i8 %111 to i64
  br label %117

117:                                              ; preds = %113, %115
  %118 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %119 = sub i64 %110, %118
  %120 = trunc i64 %119 to i32
  %121 = icmp slt i32 %120, 2
  br i1 %121, label %153, label %122

122:                                              ; preds = %117
  %123 = shl i64 %119, 32
  %124 = ashr exact i64 %123, 32
  br i1 %112, label %125, label %128

125:                                              ; preds = %122
  %126 = load i64, i64* %35, align 8
  %127 = zext i8 %111 to i64
  br label %131

128:                                              ; preds = %122
  %129 = zext i8 %111 to i64
  %130 = load i64, i64* %35, align 8
  br label %131

131:                                              ; preds = %125, %128
  %132 = phi i64 [ %127, %125 ], [ %129, %128 ]
  %133 = phi i64 [ %126, %125 ], [ %130, %128 ]
  %134 = phi i64 [ %126, %125 ], [ %129, %128 ]
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %138 = select i1 %112, i8* %136, i8* %137
  %139 = select i1 %112, i64 %133, i64 %132
  %140 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 %124, i64 %134, i8* %138, i64 %139) #10
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %153

142:                                              ; preds = %131
  %143 = add i64 %123, -4294967296
  %144 = ashr exact i64 %143, 32
  %145 = load i8, i8* %40, align 1
  %146 = icmp slt i8 %145, 0
  %147 = load i8*, i8** %14, align 8
  %148 = select i1 %146, i8* %147, i8* %13
  %149 = getelementptr inbounds i8, i8* %148, i64 %144
  %150 = load i8, i8* %149, align 1
  %151 = icmp ne i8 %150, 46
  %152 = zext i1 %151 to i32
  br label %153

153:                                              ; preds = %117, %131, %142, %83
  %154 = phi i32 [ 1, %83 ], [ 1, %117 ], [ 1, %131 ], [ %152, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi128EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %155 = load i8*, i8** %91, align 8
  %156 = icmp eq i8* %155, %93
  %157 = icmp eq i8* %155, null
  %158 = or i1 %156, %157
  br i1 %158, label %160, label %159

159:                                              ; preds = %153
  call void @_ZdaPv(i8* nonnull %155) #9
  br label %160

160:                                              ; preds = %153, %159
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %88) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  %161 = icmp eq i32 %154, 0
  br i1 %161, label %162, label %170

162:                                              ; preds = %62, %74, %55, %61, %81, %160
  %163 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 3
  %164 = load i16, i16* %163, align 8
  %165 = getelementptr inbounds %"struct.content::SocketPermissionRequest", %"struct.content::SocketPermissionRequest"* %1, i64 0, i32 3
  %166 = load i16, i16* %165, align 8
  %167 = icmp eq i16 %164, %166
  %168 = icmp eq i16 %164, 0
  %169 = or i1 %168, %167
  br label %170

170:                                              ; preds = %162, %77, %160
  %171 = phi i1 [ false, %160 ], [ false, %77 ], [ %169, %162 ]
  %172 = load i8, i8* %40, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %175) #9
  br label %176

176:                                              ; preds = %170, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  br label %177

177:                                              ; preds = %2, %176
  %178 = phi i1 [ %171, %176 ], [ false, %2 ]
  ret i1 %178
}

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3url21CanonicalizeIPAddressEPKcRKNS_9ComponentEPNS_12CanonOutputTIcEEPNS_13CanonHostInfoE(i8*, %"struct.url::Component"* dereferenceable(8), %"class.url::CanonOutputT"*, %"struct.url::CanonHostInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi128EED2Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi128EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #9
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK10extensions21SocketPermissionEntry11GetHostTypeEv(%"class.extensions::SocketPermissionEntry"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 1
  %17 = load i8, i8* %16, align 8, !range !8
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, i32 2, i32 1
  br label %20

20:                                               ; preds = %12, %15
  %21 = phi i32 [ %19, %15 ], [ 0, %12 ]
  ret i32 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions21SocketPermissionEntry18IsAddressBoundTypeEv(%"class.extensions::SocketPermissionEntry"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 4
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions21SocketPermissionEntry16ParseHostPatternEN7content23SocketPermissionRequest13OperationTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPS0_(i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.extensions::SocketPermissionEntry"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i8, i8* %10, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  %22 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  store i8 1, i8* %24, align 1
  store i8 58, i8* %22, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 1
  store i8 0, i8* %25, align 1
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %4, i8* %17, i64 %21, i8* nonnull %22, i64 1, i32 0, i32 0) #10
  %26 = load i8, i8* %24, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %32 = call zeroext i1 @_ZN10extensions21SocketPermissionEntry16ParseHostPatternEN7content23SocketPermissionRequest13OperationTypeERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEPS0_(i32 %0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4, %"class.extensions::SocketPermissionEntry"* %2)
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %34 = icmp eq %"class.std::__1::basic_string"* %33, null
  br i1 %34, label %56, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %37, %33
  br i1 %38, label %54, label %39

39:                                               ; preds = %35, %49
  %40 = phi %"class.std::__1::basic_string"* [ %41, %49 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 -1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %46, %39
  %50 = icmp eq %"class.std::__1::basic_string"* %41, %33
  br i1 %50, label %51, label %39

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::vector"* %4 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %35
  %55 = phi i8* [ %53, %51 ], [ %36, %35 ]
  store %"class.std::__1::basic_string"* %33, %"class.std::__1::basic_string"** %8, align 8
  call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %31, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret i1 %32
}

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions21SocketPermissionEntry16ParseHostPatternEN7content23SocketPermissionRequest13OperationTypeERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEEPS0_(i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.extensions::SocketPermissionEntry"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.extensions::SocketPermissionEntry", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector.9", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca i32, align 4
  %10 = bitcast %"class.extensions::SocketPermissionEntry"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  %11 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %4, i64 0, i32 0, i32 3
  %14 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  store i16 -1, i16* %13, align 8
  %15 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %4, i64 0, i32 1
  store i8 0, i8* %15, align 8
  %16 = icmp eq i32 %0, 0
  br i1 %16, label %356, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = sdiv exact i64 %23, 24
  %25 = icmp ugt i64 %24, 2
  %26 = inttoptr i64 %22 to %"class.std::__1::basic_string"*
  br i1 %25, label %356, label %27

27:                                               ; preds = %17
  store i32 %0, i32* %11, align 8
  store i16 0, i16* %13, align 8
  store i8 1, i8* %15, align 8
  %28 = icmp eq i64 %23, 0
  br i1 %28, label %29, label %52

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 0
  store i32 %0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %4, i64 0, i32 0, i32 2
  %33 = icmp eq %"class.extensions::SocketPermissionEntry"* %4, %2
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #10
  br label %47

42:                                               ; preds = %34
  %43 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %44 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %31, i8* %43, i64 0) #10
  %45 = load i16, i16* %13, align 8
  %46 = load i8, i8* %15, align 8, !range !8
  br label %47

47:                                               ; preds = %29, %39, %42
  %48 = phi i8 [ 1, %29 ], [ 1, %39 ], [ %46, %42 ]
  %49 = phi i16 [ 0, %29 ], [ 0, %39 ], [ %45, %42 ]
  %50 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 3
  store i16 %49, i16* %50, align 8
  %51 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 1
  store i8 %48, i8* %51, align 8
  br label %356

52:                                               ; preds = %27
  %53 = add i32 %0, -1
  %54 = icmp ult i32 %53, 4
  br i1 %54, label %55, label %356

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %4, i64 0, i32 0, i32 2
  %58 = icmp eq %"class.std::__1::basic_string"* %57, %26
  %59 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %58, label %74, label %60

60:                                               ; preds = %55
  %61 = inttoptr i64 %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  %67 = inttoptr i64 %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #10
  br label %74

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %57, i8* %70, i64 %72) #10
  br label %74

74:                                               ; preds = %55, %65, %68
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %4, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %188, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  %87 = select i1 %77, i8* %85, i8* %86
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i32
  %90 = call zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext %89) #10
  br i1 %90, label %356, label %91

91:                                               ; preds = %83
  %92 = load i8, i8* %75, align 1
  %93 = icmp slt i8 %92, 0
  %94 = load i8*, i8** %84, align 8
  %95 = load i64, i64* %78, align 8
  %96 = zext i8 %92 to i64
  %97 = select i1 %93, i8* %94, i8* %86
  %98 = select i1 %93, i64 %95, i64 %96
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = getelementptr inbounds i8, i8* %99, i64 -1
  %101 = load i8, i8* %100, align 1
  %102 = sext i8 %101 to i32
  %103 = call zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext %102) #10
  br i1 %103, label %356, label %104

104:                                              ; preds = %91
  %105 = load i8, i8* %75, align 1
  %106 = load i64, i64* %78, align 8
  %107 = zext i8 %105 to i64
  %108 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #10
  %109 = icmp slt i8 %105, 0
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = select i1 %109, i8* %111, i8* %86
  %113 = select i1 %109, i64 %106, i64 %107
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i8* %112, i64 %113) #10
  %114 = load i8, i8* %75, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %104
  %117 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %117) #9
  br label %118

118:                                              ; preds = %116, %104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 8 %108, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #10
  %119 = bitcast %"class.std::__1::vector.9"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #10
  %120 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 1
  %122 = bitcast %"class.std::__1::vector.9"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 24, i1 false)
  %123 = load i8, i8* %75, align 1
  %124 = load i8*, i8** %110, align 8
  %125 = load i64, i64* %78, align 8
  %126 = zext i8 %123 to i64
  %127 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #10
  %128 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  store i8 1, i8* %129, align 1
  store i8 46, i8* %127, align 8
  %130 = getelementptr inbounds i8, i8* %127, i64 1
  %131 = icmp slt i8 %123, 0
  %132 = select i1 %131, i8* %124, i8* %86
  %133 = select i1 %131, i64 %125, i64 %126
  store i8 0, i8* %130, align 1
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.9"* nonnull sret %6, i8* %132, i64 %133, i8* nonnull %127, i64 1, i32 1, i32 0) #10
  %134 = load i8, i8* %129, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %118
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %138) #9
  br label %139

139:                                              ; preds = %118, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #10
  %140 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %120, align 8
  %141 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %140, i64 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = ptrtoint %"class.base::BasicStringPiece"* %140 to i64
  switch i64 %142, label %166 [
    i64 1, label %144
    i64 0, label %149
  ]

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %140, i64 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 42
  br i1 %148, label %149, label %166

149:                                              ; preds = %139, %144
  %150 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %140, i64 1
  %151 = ptrtoint %"class.base::BasicStringPiece"* %150 to i64
  %152 = bitcast %"class.base::BasicStringPiece"** %121 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %153, %151
  %155 = ashr exact i64 %154, 4
  %156 = icmp eq i64 %154, 0
  br i1 %156, label %162, label %157

157:                                              ; preds = %149
  %158 = bitcast %"class.base::BasicStringPiece"* %140 to i8*
  %159 = bitcast %"class.base::BasicStringPiece"* %150 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 %154, i1 false) #10
  %160 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %161 = load i64, i64* %160, align 8
  br label %162

162:                                              ; preds = %149, %157
  %163 = phi i64 [ %161, %157 ], [ %143, %149 ]
  %164 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %140, i64 %155
  store %"class.base::BasicStringPiece"* %164, %"class.base::BasicStringPiece"** %121, align 8
  %165 = ptrtoint %"class.base::BasicStringPiece"* %164 to i64
  br label %169

166:                                              ; preds = %139, %144
  store i8 0, i8* %15, align 8
  %167 = bitcast %"class.base::BasicStringPiece"** %121 to i64*
  %168 = load i64, i64* %167, align 8
  br label %169

169:                                              ; preds = %166, %162
  %170 = phi i64* [ %167, %166 ], [ %152, %162 ]
  %171 = phi i64 [ %168, %166 ], [ %165, %162 ]
  %172 = phi i64 [ %143, %166 ], [ %163, %162 ]
  %173 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #10
  %174 = sub i64 %171, %172
  %175 = ashr exact i64 %174, 4
  %176 = inttoptr i64 %172 to %"class.base::BasicStringPiece"*
  call void @_ZN4base10JoinStringENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEES5_(%"class.std::__1::basic_string"* nonnull sret %8, i64 %175, %"class.base::BasicStringPiece"* %176, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #10
  %177 = load i8, i8* %75, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %169
  %180 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %180) #9
  br label %181

181:                                              ; preds = %179, %169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* nonnull align 8 %173, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #10
  %182 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %120, align 8
  %183 = icmp eq %"class.base::BasicStringPiece"* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %181
  %185 = ptrtoint %"class.base::BasicStringPiece"* %182 to i64
  store i64 %185, i64* %170, align 8
  %186 = bitcast %"class.base::BasicStringPiece"* %182 to i8*
  call void @_ZdlPv(i8* %186) #9
  br label %187

187:                                              ; preds = %181, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #10
  br label %188

188:                                              ; preds = %187, %74
  %189 = load i64, i64* %19, align 8
  %190 = load i64, i64* %21, align 8
  %191 = sub i64 %189, %190
  %192 = icmp eq i64 %191, 24
  %193 = inttoptr i64 %190 to %"class.std::__1::basic_string"*
  br i1 %192, label %226, label %194

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %193, i64 1
  %196 = bitcast %"class.std::__1::basic_string"* %195 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %193, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  br label %205

203:                                              ; preds = %194
  %204 = zext i8 %198 to i64
  br label %205

205:                                              ; preds = %200, %203
  %206 = phi i64 [ %202, %200 ], [ %204, %203 ]
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %226, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %193, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %210 = load i64, i64* %209, align 8
  %211 = zext i8 %198 to i64
  %212 = select i1 %199, i64 %210, i64 %211
  %213 = icmp eq i64 %212, 1
  br i1 %213, label %214, label %261

214:                                              ; preds = %208
  %215 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %195, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN12_GLOBAL__N_19kWildcardE, i64 0, i64 0), i64 1) #10
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %226, label %217

217:                                              ; preds = %214
  %218 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %56, align 8
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %218, i64 1
  %220 = bitcast %"class.std::__1::basic_string"* %219 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = load i8, i8* %221, align 1
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %218, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %224 = load i64, i64* %223, align 8
  %225 = zext i8 %222 to i64
  br label %261

226:                                              ; preds = %214, %205, %188
  %227 = load i32, i32* %11, align 8
  %228 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 0
  store i32 %227, i32* %228, align 8
  %229 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 2
  %230 = icmp eq %"class.extensions::SocketPermissionEntry"* %4, %2
  br i1 %230, label %256, label %231

231:                                              ; preds = %226
  %232 = bitcast %"class.std::__1::basic_string"* %229 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %234, 0
  %236 = load i8, i8* %75, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %235, label %247, label %238

238:                                              ; preds = %231
  br i1 %237, label %242, label %239

239:                                              ; preds = %238
  %240 = bitcast %"class.std::__1::basic_string"* %229 to i8*
  %241 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %241, i64 24, i1 false) #10
  br label %256

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = load i64, i64* %78, align 8
  %246 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %229, i8* %244, i64 %245) #10
  br label %256

247:                                              ; preds = %231
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8
  %250 = load i64, i64* %78, align 8
  %251 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  %252 = zext i8 %236 to i64
  %253 = select i1 %237, i8* %249, i8* %251
  %254 = select i1 %237, i64 %250, i64 %252
  %255 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %229, i8* %253, i64 %254) #10
  br label %256

256:                                              ; preds = %226, %239, %242, %247
  %257 = load i16, i16* %13, align 8
  %258 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 3
  store i16 %257, i16* %258, align 8
  %259 = load i8, i8* %15, align 8, !range !8
  %260 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 1
  store i8 %259, i8* %260, align 8
  br label %356

261:                                              ; preds = %217, %208
  %262 = phi i64 [ %225, %217 ], [ %211, %208 ]
  %263 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %220, %217 ], [ %196, %208 ]
  %264 = phi i64 [ %224, %217 ], [ %210, %208 ]
  %265 = phi i8 [ %222, %217 ], [ %198, %208 ]
  %266 = phi %"class.std::__1::basic_string"* [ %218, %217 ], [ %193, %208 ]
  %267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %266, i64 1
  %268 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %263, i64 0, i32 1, i32 0
  %269 = icmp slt i8 %265, 0
  %270 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %266, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %271 = select i1 %269, i64 %264, i64 %262
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %296, label %273

273:                                              ; preds = %261
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %267, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load i8*, i8** %274, align 8
  %276 = bitcast %"class.std::__1::basic_string"* %267 to i8*
  %277 = select i1 %269, i8* %275, i8* %276
  %278 = load i8, i8* %277, align 1
  %279 = sext i8 %278 to i32
  %280 = call zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext %279) #10
  br i1 %280, label %356, label %281

281:                                              ; preds = %273
  %282 = load i8, i8* %268, align 1
  %283 = icmp slt i8 %282, 0
  %284 = load i8*, i8** %274, align 8
  %285 = load i64, i64* %270, align 8
  %286 = zext i8 %282 to i64
  %287 = select i1 %283, i8* %284, i8* %276
  %288 = select i1 %283, i64 %285, i64 %286
  %289 = getelementptr inbounds i8, i8* %287, i64 %288
  %290 = getelementptr inbounds i8, i8* %289, i64 -1
  %291 = load i8, i8* %290, align 1
  %292 = sext i8 %291 to i32
  %293 = call zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext %292) #10
  br i1 %293, label %356, label %294

294:                                              ; preds = %281
  %295 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %56, align 8
  br label %296

296:                                              ; preds = %294, %261
  %297 = phi %"class.std::__1::basic_string"* [ %295, %294 ], [ %266, %261 ]
  %298 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %298) #10
  store i32 -1431655766, i32* %9, align 4
  %299 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %297, i64 1
  %300 = bitcast %"class.std::__1::basic_string"* %299 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %300, i64 0, i32 1, i32 0
  %302 = load i8, i8* %301, align 1
  %303 = icmp slt i8 %302, 0
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %299, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load i8*, i8** %304, align 8
  %306 = bitcast %"class.std::__1::basic_string"* %299 to i8*
  %307 = select i1 %303, i8* %305, i8* %306
  %308 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %297, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %309 = load i64, i64* %308, align 8
  %310 = zext i8 %302 to i64
  %311 = select i1 %303, i64 %309, i64 %310
  %312 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %307, i64 %311, i32* nonnull %9) #10
  %313 = xor i1 %312, true
  %314 = load i32, i32* %9, align 4
  %315 = add i32 %314, -1
  %316 = icmp ugt i32 %315, 65534
  %317 = or i1 %316, %313
  br i1 %317, label %354, label %318

318:                                              ; preds = %296
  %319 = trunc i32 %314 to i16
  store i16 %319, i16* %13, align 8
  %320 = load i32, i32* %11, align 8
  %321 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 0
  store i32 %320, i32* %321, align 8
  %322 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 2
  %323 = icmp eq %"class.extensions::SocketPermissionEntry"* %4, %2
  br i1 %323, label %349, label %324

324:                                              ; preds = %318
  %325 = bitcast %"class.std::__1::basic_string"* %322 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %326 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %325, i64 0, i32 1, i32 0
  %327 = load i8, i8* %326, align 1
  %328 = icmp slt i8 %327, 0
  %329 = load i8, i8* %75, align 1
  %330 = icmp slt i8 %329, 0
  br i1 %328, label %340, label %331

331:                                              ; preds = %324
  br i1 %330, label %335, label %332

332:                                              ; preds = %331
  %333 = bitcast %"class.std::__1::basic_string"* %322 to i8*
  %334 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %333, i8* align 8 %334, i64 24, i1 false) #10
  br label %349

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = load i64, i64* %78, align 8
  %339 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %322, i8* %337, i64 %338) #10
  br label %349

340:                                              ; preds = %324
  %341 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load i8*, i8** %341, align 8
  %343 = load i64, i64* %78, align 8
  %344 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  %345 = zext i8 %329 to i64
  %346 = select i1 %330, i8* %342, i8* %344
  %347 = select i1 %330, i64 %343, i64 %345
  %348 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %322, i8* %346, i64 %347) #10
  br label %349

349:                                              ; preds = %318, %332, %335, %340
  %350 = load i16, i16* %13, align 8
  %351 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 0, i32 3
  store i16 %350, i16* %351, align 8
  %352 = load i8, i8* %15, align 8, !range !8
  %353 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %2, i64 0, i32 1
  store i8 %352, i8* %353, align 8
  br label %354

354:                                              ; preds = %296, %349
  %355 = phi i1 [ true, %349 ], [ false, %296 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %298) #10
  br label %356

356:                                              ; preds = %273, %83, %281, %91, %52, %17, %3, %354, %256, %47
  %357 = phi i1 [ true, %47 ], [ true, %256 ], [ %355, %354 ], [ false, %3 ], [ false, %17 ], [ false, %52 ], [ false, %91 ], [ false, %281 ], [ false, %83 ], [ false, %273 ]
  %358 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %4, i64 0, i32 0, i32 2
  %359 = bitcast %"class.std::__1::basic_string"* %358 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %360 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %359, i64 0, i32 1, i32 0
  %361 = load i8, i8* %360, align 1
  %362 = icmp slt i8 %361, 0
  br i1 %362, label %363, label %366

363:                                              ; preds = %356
  %364 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %358, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = load i8*, i8** %364, align 8
  call void @_ZdlPv(i8* %365) #9
  br label %366

366:                                              ; preds = %356, %363
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret i1 %357
}

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.9"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base10JoinStringENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEES5_(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*, i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions21SocketPermissionEntry22GetHostPatternAsStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.extensions::SocketPermissionEntry"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = icmp ult i32 %7, 4
  br i1 %8, label %9, label %78

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %31, label %13

13:                                               ; preds = %9
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN12_GLOBAL__N_19kWildcardE, i64 0, i64 0)) #10
  %15 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 2
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %25

23:                                               ; preds = %13
  %24 = zext i8 %18 to i64
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i64 [ %22, %20 ], [ %24, %23 ]
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %50, label %28

28:                                               ; preds = %25
  %29 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext 46) #10
  %30 = load i8, i8* %17, align 1
  br label %36

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 2
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  br label %36

36:                                               ; preds = %31, %28
  %37 = phi i8 [ %35, %31 ], [ %30, %28 ]
  %38 = phi %"class.std::__1::basic_string"* [ %32, %31 ], [ %15, %28 ]
  %39 = phi %"class.std::__1::basic_string"* [ %0, %31 ], [ %29, %28 ]
  %40 = icmp slt i8 %37, 0
  %41 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %46 = zext i8 %37 to i64
  %47 = select i1 %40, i8* %42, i8* %45
  %48 = select i1 %40, i64 %44, i64 %46
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %39, i8* %47, i64 %48) #10
  br label %50

50:                                               ; preds = %36, %25
  %51 = getelementptr inbounds %"class.extensions::SocketPermissionEntry", %"class.extensions::SocketPermissionEntry"* %1, i64 0, i32 0, i32 3
  %52 = load i16, i16* %51, align 8
  %53 = icmp eq i16 %52, 0
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"* %0, i64 1, i8 signext 58) #10
  br i1 %53, label %55, label %57

55:                                               ; preds = %50
  %56 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZN12_GLOBAL__N_19kWildcardE, i64 0, i64 0)) #10
  br label %78

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #10
  %59 = load i16, i16* %51, align 8
  %60 = zext i16 %59 to i32
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %3, i32 %60) #10
  %61 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %63 to i64
  %70 = select i1 %64, i8* %66, i8* %58
  %71 = select i1 %64, i64 %68, i64 %69
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %54, i8* %70, i64 %71) #10
  %73 = load i8, i8* %62, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %57
  %76 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %76) #9
  br label %77

77:                                               ; preds = %57, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #10
  br label %78

78:                                               ; preds = %2, %77, %55
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #3

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN7content23SocketPermissionRequest13OperationTypeERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKbRKtEEESL_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.17"*, %"class.std::__1::tuple"* dereferenceable(32), %"class.std::__1::tuple"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = icmp ult i64 %15, %23
  %25 = select i1 %24, i64 %15, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %31 = select i1 %19, i8* %29, i8* %30
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %35 = select i1 %11, i8* %33, i8* %34
  %36 = tail call i32 @memcmp(i8* %31, i8* %35, i64 %25) #10
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27, %3
  %39 = icmp ult i64 %23, %15
  br i1 %39, label %78, label %42

40:                                               ; preds = %27
  %41 = icmp slt i32 %36, 0
  br i1 %41, label %78, label %52

42:                                               ; preds = %38
  br i1 %26, label %57, label %43

43:                                               ; preds = %42
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %49 = select i1 %11, i8* %45, i8* %48
  %50 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %51 = select i1 %19, i8* %47, i8* %50
  br label %52

52:                                               ; preds = %43, %40
  %53 = phi i8* [ %51, %43 ], [ %31, %40 ]
  %54 = phi i8* [ %49, %43 ], [ %35, %40 ]
  %55 = tail call i32 @memcmp(i8* %54, i8* %53, i64 %25) #10
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %52, %42
  br i1 %24, label %78, label %60

58:                                               ; preds = %52
  %59 = icmp slt i32 %55, 0
  br i1 %59, label %78, label %60

60:                                               ; preds = %57, %58
  %61 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = load i8, i8* %62, align 1, !range !8
  %64 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 2, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = load i8, i8* %65, align 1, !range !8
  %67 = icmp ult i8 %63, %66
  br i1 %67, label %78, label %68

68:                                               ; preds = %60
  %69 = icmp ult i8 %66, %63
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 3, i32 0
  %72 = load i16*, i16** %71, align 8
  %73 = load i16, i16* %72, align 2
  %74 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 3, i32 0
  %75 = load i16*, i16** %74, align 8
  %76 = load i16, i16* %75, align 2
  %77 = icmp ult i16 %73, %76
  br label %78

78:                                               ; preds = %57, %38, %70, %68, %60, %58, %40
  %79 = phi i1 [ true, %40 ], [ false, %58 ], [ %77, %70 ], [ true, %60 ], [ false, %68 ], [ true, %38 ], [ false, %57 ]
  ret i1 %79
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

declare zeroext i1 @_ZN4base19IsUnicodeWhitespaceEw(i32 signext) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi128EED0Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi128EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #9
  br label %10

10:                                               ; preds = %1, %9
  %11 = bitcast %"class.url::RawCanonOutputT"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi128EE6ResizeEi(%"class.url::RawCanonOutputT"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = tail call i8* @_Znam(i64 %3) #9
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %1
  %10 = select i1 %9, i32 %8, i32 %1
  %11 = sext i32 %10 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %6, i64 %11, i1 false)
  %12 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %13 = icmp eq i8* %6, %12
  %14 = icmp eq i8* %6, null
  %15 = or i1 %13, %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %6) #9
  br label %17

17:                                               ; preds = %2, %16
  store i8* %4, i8** %5, align 8
  %18 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %18, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__13tieIJKN7content23SocketPermissionRequest13OperationTypeEKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKbKtEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__13tieIJKN7content23SocketPermissionRequest13OperationTypeEKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKbKtEEENS_5tupleIJDpRT_EEESH_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__13tieIJKN7content23SocketPermissionRequest13OperationTypeEKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKbKtEEENS_5tupleIJDpRT_EEESH_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__13tieIJKN7content23SocketPermissionRequest13OperationTypeEKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEKbKtEEENS_5tupleIJDpRT_EEESH_"}
!8 = !{i8 0, i8 2}
