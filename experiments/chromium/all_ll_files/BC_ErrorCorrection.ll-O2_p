; ModuleID = '../../third_party/pdfium/fxbarcode/datamatrix/BC_ErrorCorrection.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/datamatrix/BC_ErrorCorrection.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CBC_SymbolInfo = type { i32 (...)**, %"struct.CBC_SymbolInfo::Data"* }
%"struct.CBC_SymbolInfo::Data" = type { i16, i16, i16, i8, i8, i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { i16*, i16*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i16* }

@_ZN12_GLOBAL__N_17FACTORSE = internal unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN12_GLOBAL__N_19FACTORS_0E, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN12_GLOBAL__N_19FACTORS_1E, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN12_GLOBAL__N_19FACTORS_2E, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN12_GLOBAL__N_19FACTORS_3E, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_19FACTORS_4E, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN12_GLOBAL__N_19FACTORS_5E, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZN12_GLOBAL__N_19FACTORS_6E, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN12_GLOBAL__N_19FACTORS_7E, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN12_GLOBAL__N_19FACTORS_8E, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZN12_GLOBAL__N_19FACTORS_9E, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZN12_GLOBAL__N_110FACTORS_10E, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZN12_GLOBAL__N_110FACTORS_11E, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZN12_GLOBAL__N_110FACTORS_12E, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @_ZN12_GLOBAL__N_110FACTORS_13E, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @_ZN12_GLOBAL__N_110FACTORS_14E, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @_ZN12_GLOBAL__N_110FACTORS_15E, i32 0, i32 0)], align 16
@_ZN12_GLOBAL__N_14ALOGE = internal unnamed_addr constant [256 x i8] c"\01\02\04\08\10 @\80-Z\B4E\8A9r\E4\E5\E7\E3\EB\FB\DB\9B\1B6l\D8\9D\17.\5C\B8]\BAY\B2I\92\09\12$H\90\0D\1A4h\D0\8D7n\DC\95\07\0E\1C8p\E0\ED\F7\C3\AB{\F6\C1\AFs\E6\E1\EF\F3\CB\BB[\B6A\82)R\A4e\CA\B9_\BEQ\A2i\D2\89?~\FC\D5\87#F\8C5j\D4\85'N\9C\15*T\A8}\FA\D9\9F\13&L\98\1D:t\E8\FD\D7\83+V\ACu\EA\F9\DF\93\0B\16,X\B0M\9A\192d\C8\BDW\AEq\E2\E9\FF\D3\8B;v\EC\F5\C7\A3k\D6\81/^\BCU\AAy\F2\C9\BFS\A6a\C2\A9\7F\FE\D1\8F3f\CC\B5G\8E1b\C4\A5g\CE\B1O\9E\11\22D\88=z\F4\C5\A7c\C6\A1o\DE\91\0F\1E<x\F0\CD\B7C\86!B\84%J\94\05\0A\14(P\A0m\DA\99\1F>|\F8\DD\97\03\06\0C\180`\C0\ADw\EE\F1\CF\B3K\96\00", align 16
@_ZN12_GLOBAL__N_13LOGE = internal unnamed_addr constant [256 x i8] c"\00\00\01\F0\02\E1\F15\03&\E2\85\F2+6\D2\04\C3'r\E3j\86\1C\F3\8C,\177v\D3\EA\05\DB\C4`(\DEsg\E4Nk}\87\08\1D\A2\F4\BA\8D\B4-c\1818\0Dw\99\D4\C7\EB[\06L\DC\D9\C5\0Ba\B8)$\DF\FDt\8Ah\C1\E5VO\ABl\A5~\91\88\22\09J\1E \A3T\F5\AD\BB\CC\8EQ\B5\BE.Xd\9F\19\E72\CF9\93\0ECx\80\9A\F8\D5\A7\C8?\ECn\5C\B0\07\A1M|\DDf\DA_\C6Z\0C\98b0\B9\B3*\D1%\84\E04\FE\EFu\E9\8B\16i\1B\C2q\E6\CEW\9EP\BD\AC\CBm\AF\A6>\7F\F7\92B\89\C0#\FC\0A\B7K\D8\1FS!I\A4\90U\AA\F6A\AE=\BC\CA\CD\9D\8F\A9RH\B6\D7\BF\FB/\B2Y\97e^\A0{\1Ap\E8\153\EE\D0\83:E\94\12\0F\10D\11y\95\81\13\9B;\F9F\D6\FA\A8G\C9\9C@<\ED\82o\14]z\B1\96", align 16
@_ZN12_GLOBAL__N_19FACTORS_0E = internal constant [5 x i8] c"\E40\0Fo>", align 1
@_ZN12_GLOBAL__N_19FACTORS_1E = internal constant [7 x i8] c"\17D\90\86\F0\5C\FE", align 1
@_ZN12_GLOBAL__N_19FACTORS_2E = internal constant [10 x i8] c"\1C\18\B9\A6\DF\F8t\FFn=", align 1
@_ZN12_GLOBAL__N_19FACTORS_3E = internal constant [11 x i8] c"\AF\8A\CD\0C\C2\A8'\F5<ax", align 1
@_ZN12_GLOBAL__N_19FACTORS_4E = internal constant [12 x i8] c")\99\9E[=*\8E\D5a\B2d\F2", align 1
@_ZN12_GLOBAL__N_19FACTORS_5E = internal constant [14 x i8] c"\9Ca\C0\FC_\09\9Dw\8A-\12\BAS\B9", align 1
@_ZN12_GLOBAL__N_19FACTORS_6E = internal constant [18 x i8] c"S\C3d'\BCKB=\F1\D5m\81^\FE\E10Z\BC", align 16
@_ZN12_GLOBAL__N_19FACTORS_7E = internal constant [20 x i8] c"\0F\C3\F4\09\E9G\A8\02\BC\A0\99\91\FDOlR\1B\AE\BA\AC", align 16
@_ZN12_GLOBAL__N_19FACTORS_8E = internal constant [24 x i8] c"4\BEX\CDm'\B0\15\9B\C5\FB\DF\9B\15\05\AC\FE|\0C\B5\B8`2\C1", align 16
@_ZN12_GLOBAL__N_19FACTORS_9E = internal constant [28 x i8] c"\D3\E7+aG`g\AE%\97\AA5K\22\F9y\11\8An\D5\8D\88x\97\E9\A8]\FF", align 16
@_ZN12_GLOBAL__N_110FACTORS_10E = internal constant [36 x i8] c"\F5\7F\F2\DA\82\FA\A2\B5fxT\B3\DC\FBP\B6\E5\12\02\04D!e\89_ws,\AF\B8;\19\E1bQp", align 16
@_ZN12_GLOBAL__N_110FACTORS_11E = internal constant [42 x i8] c"M\C1\89\1F\13&\16\99\F7iz\02\F5\85\F2\08\AF_d\09\A7i\D6o9y\15\01\FD96e\F8\CAE2\96\B1\E2\05\09\05", align 16
@_ZN12_GLOBAL__N_110FACTORS_12E = internal constant [48 x i8] c"\F5\84\AC\DF` u\16\EE\85\EE\E7\CD\BC\EDW\BFj\10\93v\17%Z\AA\CD\83XxdB\8A\BA\F0R,\B0W\BB\93\A0\AFE\D5\5C\FD\E1\13", align 16
@_ZN12_GLOBAL__N_110FACTORS_13E = internal constant [56 x i8] c"\AF\09\DF\EE\0C\11\DC\D0d\1D\AF\AA\E6\C0\D7\EB\96\9F$\DF&\C8\846\E4\92\DA\EAu\CB\1D\E8\90\EE\16\96\C9u>\CF\A4\0D\89\F5\7FC\F7\1C\9B+\CBk\E95\8F.", align 16
@_ZN12_GLOBAL__N_110FACTORS_14E = internal constant [62 x i8] c"\F2]\A92\90\D2'v\CA\BC\C9\BD\8Fl\C4%\B9p\86\E6\F5?\C5\BE\FAj\B9\DD\AF@rG\A1,\93\06\1B\DA3?W\0A(\82\BC\11\A3\1F\B0\AA\04k\E8\07^\A6\E0|V/\0B\CC", align 16
@_ZN12_GLOBAL__N_110FACTORS_15E = internal constant [68 x i8] c"\DC\E4\ADY\FB\95\9F8Y!\93\F4\9A$I\7F\D5\88\F8\B4\EA\C5\9E\B1Dz]\D5\0F\A0\E3\ECB\8B\99\B9\CA\A7\B3\19\DC\E8`\D2\E7\88\DF\EF\B5\F1;4\AC\191\E8\D3\BD@6l\99\84?`gR\BA", align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19CBC_ErrorCorrection12EncodeECC200ERKN5fxcrt10WideStringEPK14CBC_SymbolInfo(%"class.fxcrt::WideString"* noalias sret, %"class.fxcrt::WideString"* dereferenceable(8), %class.CBC_SymbolInfo*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.fxcrt::WideString", align 8
  %9 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %9, align 8
  %11 = icmp eq %"class.fxcrt::StringDataTemplate"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %10, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %15

15:                                               ; preds = %3, %12
  %16 = phi i64 [ %14, %12 ], [ 0, %3 ]
  %17 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %2, i64 0, i32 1
  %18 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %17, align 8
  %19 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %18, i64 0, i32 0
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i64
  %22 = icmp eq i64 %16, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %15
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #7
  br label %326

24:                                               ; preds = %15
  %25 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  %26 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %26, align 8
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* nonnull %4, %"class.fxcrt::WideString"* dereferenceable(8) %1) #7
  %27 = bitcast %class.CBC_SymbolInfo* %2 to i64 (%class.CBC_SymbolInfo*)***
  %28 = load i64 (%class.CBC_SymbolInfo*)**, i64 (%class.CBC_SymbolInfo*)*** %27, align 8
  %29 = getelementptr inbounds i64 (%class.CBC_SymbolInfo*)*, i64 (%class.CBC_SymbolInfo*)** %28, i64 2
  %30 = load i64 (%class.CBC_SymbolInfo*)*, i64 (%class.CBC_SymbolInfo*)** %29, align 8
  %31 = call i64 %30(%class.CBC_SymbolInfo* %2) #7
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %49

33:                                               ; preds = %24
  %34 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  %35 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %35, align 8
  %36 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %17, align 8
  %37 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %36, i64 0, i32 1
  %38 = load i16, i16* %37, align 2
  %39 = sext i16 %38 to i64
  call fastcc void @_ZN12_GLOBAL__N_114CreateECCBlockERKN5fxcrt10WideStringEm(%"class.fxcrt::WideString"* nonnull sret %5, %"class.fxcrt::WideString"* dereferenceable(8) %1, i64 %39)
  %40 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %35, align 8
  %41 = icmp eq %"class.fxcrt::StringDataTemplate"* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %40, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %33, %42
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #7
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  br label %325

47:                                               ; preds = %42
  %48 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* nonnull %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #7
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  br label %324

49:                                               ; preds = %24
  %50 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #7
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #7
  %54 = icmp eq i64 %31, 0
  br i1 %54, label %159, label %55

55:                                               ; preds = %49
  %56 = icmp ugt i64 %31, 2305843009213693951
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %58) #8
  unreachable

59:                                               ; preds = %55
  %60 = shl i64 %31, 3
  %61 = call i8* @_Znwm(i64 %60) #9
  %62 = bitcast i8* %61 to i64*
  %63 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %61, i8** %63, align 8
  %64 = getelementptr inbounds i64, i64* %62, i64 %31
  store i64* %64, i64** %53, align 8
  %65 = bitcast i64** %52 to i64*
  %66 = ptrtoint i8* %61 to i64
  %67 = add nsw i64 %31, -1
  %68 = getelementptr i64, i64* %62, i64 %67
  %69 = ptrtoint i64* %68 to i64
  %70 = sub i64 8, %66
  %71 = add i64 %70, %69
  %72 = and i64 %71, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 %72, i1 false) #7
  %73 = ptrtoint i64* %64 to i64
  store i64 %73, i64* %65, align 8
  %74 = shl i64 %31, 3
  %75 = call i8* @_Znwm(i64 %74) #9
  %76 = bitcast i8* %75 to i64*
  %77 = getelementptr inbounds i64, i64* %76, i64 %31
  %78 = ptrtoint i8* %75 to i64
  %79 = add nsw i64 %31, -1
  %80 = getelementptr i64, i64* %76, i64 %79
  %81 = ptrtoint i64* %80 to i64
  %82 = sub i64 8, %78
  %83 = add i64 %82, %81
  %84 = and i64 %83, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 %84, i1 false) #7
  %85 = shl i64 %31, 3
  %86 = call i8* @_Znwm(i64 %85) #9
  %87 = bitcast i8* %86 to i64*
  %88 = ptrtoint i8* %86 to i64
  %89 = add nsw i64 %31, -1
  %90 = getelementptr i64, i64* %87, i64 %89
  %91 = ptrtoint i64* %90 to i64
  %92 = sub i64 8, %88
  %93 = add i64 %92, %91
  %94 = and i64 %93, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 %94, i1 false) #7
  br label %177

95:                                               ; preds = %193
  %96 = ptrtoint i8* %75 to i64
  %97 = icmp eq i64* %77, %76
  br i1 %97, label %159, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds i8, i8* %75, i64 8
  %100 = bitcast i8* %99 to i64*
  %101 = icmp eq i64* %77, %100
  br i1 %101, label %159, label %102

102:                                              ; preds = %98
  %103 = shl nsw i64 %31, 3
  %104 = add i64 %103, -16
  %105 = lshr exact i64 %104, 3
  %106 = add nuw nsw i64 %105, 1
  %107 = and i64 %106, 3
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %122, label %109

109:                                              ; preds = %102, %109
  %110 = phi i64* [ %119, %109 ], [ %100, %102 ]
  %111 = phi i64 [ %118, %109 ], [ %96, %102 ]
  %112 = phi i64 [ %120, %109 ], [ %107, %102 ]
  %113 = ptrtoint i64* %110 to i64
  %114 = inttoptr i64 %111 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = load i64, i64* %110, align 8
  %117 = icmp ult i64 %115, %116
  %118 = select i1 %117, i64 %113, i64 %111
  %119 = getelementptr inbounds i64, i64* %110, i64 1
  %120 = add i64 %112, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %109, !llvm.loop !2

122:                                              ; preds = %109, %102
  %123 = phi i64 [ undef, %102 ], [ %118, %109 ]
  %124 = phi i64* [ %100, %102 ], [ %119, %109 ]
  %125 = phi i64 [ %96, %102 ], [ %118, %109 ]
  %126 = icmp ult i64 %104, 24
  br i1 %126, label %159, label %127

127:                                              ; preds = %122, %127
  %128 = phi i64* [ %157, %127 ], [ %124, %122 ]
  %129 = phi i64 [ %156, %127 ], [ %125, %122 ]
  %130 = ptrtoint i64* %128 to i64
  %131 = inttoptr i64 %129 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = load i64, i64* %128, align 8
  %134 = icmp ult i64 %132, %133
  %135 = select i1 %134, i64 %130, i64 %129
  %136 = getelementptr inbounds i64, i64* %128, i64 1
  %137 = ptrtoint i64* %136 to i64
  %138 = inttoptr i64 %135 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = load i64, i64* %136, align 8
  %141 = icmp ult i64 %139, %140
  %142 = select i1 %141, i64 %137, i64 %135
  %143 = getelementptr inbounds i64, i64* %128, i64 2
  %144 = ptrtoint i64* %143 to i64
  %145 = inttoptr i64 %142 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = load i64, i64* %143, align 8
  %148 = icmp ult i64 %146, %147
  %149 = select i1 %148, i64 %144, i64 %142
  %150 = getelementptr inbounds i64, i64* %128, i64 3
  %151 = ptrtoint i64* %150 to i64
  %152 = inttoptr i64 %149 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = load i64, i64* %150, align 8
  %155 = icmp ult i64 %153, %154
  %156 = select i1 %155, i64 %151, i64 %149
  %157 = getelementptr inbounds i64, i64* %128, i64 4
  %158 = icmp eq i64* %157, %77
  br i1 %158, label %159, label %127

159:                                              ; preds = %122, %127, %49, %95, %98
  %160 = phi i64* [ %76, %95 ], [ %76, %98 ], [ null, %49 ], [ %76, %127 ], [ %76, %122 ]
  %161 = phi i8* [ %75, %95 ], [ %75, %98 ], [ null, %49 ], [ %75, %127 ], [ %75, %122 ]
  %162 = phi i8* [ %86, %95 ], [ %86, %98 ], [ null, %49 ], [ %86, %127 ], [ %86, %122 ]
  %163 = phi i64* [ %87, %95 ], [ %87, %98 ], [ null, %49 ], [ %87, %127 ], [ %87, %122 ]
  %164 = phi i64 [ %96, %95 ], [ %96, %98 ], [ 0, %49 ], [ %123, %122 ], [ %156, %127 ]
  %165 = inttoptr i64 %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = mul i64 %166, %31
  %168 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %26, align 8
  %169 = icmp eq %"class.fxcrt::StringDataTemplate"* %168, null
  br i1 %169, label %173, label %170

170:                                              ; preds = %159
  %171 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %168, i64 0, i32 1
  %172 = load i64, i64* %171, align 8
  br label %173

173:                                              ; preds = %159, %170
  %174 = phi i64 [ %172, %170 ], [ 0, %159 ]
  %175 = add i64 %174, %167
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %4, i64 %175) #7
  %176 = icmp eq i64 %167, 0
  br i1 %176, label %198, label %204

177:                                              ; preds = %193, %59
  %178 = phi i64 [ 0, %59 ], [ %196, %193 ]
  %179 = call i64 @_ZNK14CBC_SymbolInfo32GetDataLengthForInterleavedBlockEv(%class.CBC_SymbolInfo* %2) #7
  %180 = load i64*, i64** %51, align 8
  %181 = getelementptr inbounds i64, i64* %180, i64 %178
  store i64 %179, i64* %181, align 8
  %182 = call i64 @_ZNK14CBC_SymbolInfo33GetErrorLengthForInterleavedBlockEv(%class.CBC_SymbolInfo* %2) #7
  %183 = getelementptr inbounds i64, i64* %76, i64 %178
  store i64 %182, i64* %183, align 8
  %184 = icmp eq i64 %178, 0
  br i1 %184, label %193, label %185

185:                                              ; preds = %177
  %186 = add i64 %178, -1
  %187 = getelementptr inbounds i64, i64* %87, i64 %186
  %188 = load i64, i64* %187, align 8
  %189 = load i64*, i64** %51, align 8
  %190 = getelementptr inbounds i64, i64* %189, i64 %178
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, %188
  br label %193

193:                                              ; preds = %177, %185
  %194 = phi i64 [ %192, %185 ], [ 0, %177 ]
  %195 = getelementptr inbounds i64, i64* %87, i64 %178
  store i64 %194, i64* %195, align 8
  %196 = add nuw i64 %178, 1
  %197 = icmp eq i64 %196, %31
  br i1 %197, label %95, label %177

198:                                              ; preds = %211, %173
  br i1 %54, label %308, label %199

199:                                              ; preds = %198
  %200 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  %201 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = bitcast %"class.fxcrt::WideString"* %8 to i8*
  %203 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %216

204:                                              ; preds = %173, %211
  %205 = phi i64 [ %214, %211 ], [ 0, %173 ]
  %206 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %26, align 8
  %207 = icmp eq %"class.fxcrt::StringDataTemplate"* %206, null
  br i1 %207, label %211, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %206, i64 0, i32 1
  %210 = load i64, i64* %209, align 8
  br label %211

211:                                              ; preds = %204, %208
  %212 = phi i64 [ %210, %208 ], [ 0, %204 ]
  %213 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* nonnull %4, i64 %212, i32 signext 0) #7
  %214 = add nuw i64 %205, 1
  %215 = icmp eq i64 %214, %167
  br i1 %215, label %198, label %204

216:                                              ; preds = %305, %199
  %217 = phi i64 [ 0, %199 ], [ %306, %305 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #7
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %201, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %7) #7
  %218 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %17, align 8
  %219 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %218, i64 0, i32 0
  %220 = load i16, i16* %219, align 2
  %221 = sext i16 %220 to i64
  %222 = icmp ult i64 %217, %221
  br i1 %222, label %223, label %231

223:                                              ; preds = %216
  %224 = udiv i64 %217, %31
  %225 = add nsw i64 %221, 1
  %226 = sub i64 %225, %224
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %7, i64 %226) #7
  %227 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %17, align 8
  %228 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %227, i64 0, i32 0
  %229 = load i16, i16* %228, align 2
  %230 = sext i16 %229 to i64
  br label %231

231:                                              ; preds = %223, %216
  %232 = phi i64 [ %230, %223 ], [ %221, %216 ]
  %233 = icmp ult i64 %217, %232
  br i1 %233, label %253, label %234

234:                                              ; preds = %270, %231
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #7
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %203, align 8
  %235 = getelementptr inbounds i64, i64* %160, i64 %217
  %236 = load i64, i64* %235, align 8
  call fastcc void @_ZN12_GLOBAL__N_114CreateECCBlockERKN5fxcrt10WideStringEm(%"class.fxcrt::WideString"* nonnull sret %8, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %7, i64 %236)
  %237 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %203, align 8
  %238 = icmp eq %"class.fxcrt::StringDataTemplate"* %237, null
  br i1 %238, label %279, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %237, i64 0, i32 1
  %241 = load i64, i64* %240, align 8
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %279, label %243

243:                                              ; preds = %239
  %244 = load i64, i64* %235, align 8
  %245 = mul i64 %244, %31
  %246 = icmp ult i64 %217, %245
  br i1 %246, label %247, label %305

247:                                              ; preds = %243
  %248 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %17, align 8
  %249 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %248, i64 0, i32 0
  %250 = load i16, i16* %249, align 2
  %251 = sext i16 %250 to i64
  %252 = add i64 %217, %251
  br label %280

253:                                              ; preds = %231, %270
  %254 = phi i64 [ %273, %270 ], [ %217, %231 ]
  %255 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %9, align 8
  %256 = icmp eq %"class.fxcrt::StringDataTemplate"* %255, null
  br i1 %256, label %261, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %255, i64 0, i32 1
  %259 = load i64, i64* %258, align 8
  %260 = icmp ugt i64 %259, %254
  br i1 %260, label %262, label %261, !prof !4

261:                                              ; preds = %257, %253
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !5
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !6
  unreachable

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %255, i64 0, i32 3, i64 %254
  %264 = load i32, i32* %263, align 4
  %265 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %201, align 8
  %266 = icmp eq %"class.fxcrt::StringDataTemplate"* %265, null
  br i1 %266, label %270, label %267

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %265, i64 0, i32 1
  %269 = load i64, i64* %268, align 8
  br label %270

270:                                              ; preds = %262, %267
  %271 = phi i64 [ %269, %267 ], [ 0, %262 ]
  %272 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* nonnull %7, i64 %271, i32 signext %264) #7
  %273 = add i64 %254, %31
  %274 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %17, align 8
  %275 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %274, i64 0, i32 0
  %276 = load i16, i16* %275, align 2
  %277 = sext i16 %276 to i64
  %278 = icmp ult i64 %273, %277
  br i1 %278, label %253, label %234

279:                                              ; preds = %234, %239
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #7
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #7
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #7
  br label %308

280:                                              ; preds = %247, %296
  %281 = phi i64 [ %252, %247 ], [ %303, %296 ]
  %282 = phi i64 [ 0, %247 ], [ %297, %296 ]
  %283 = phi i64 [ %217, %247 ], [ %292, %296 ]
  %284 = phi %"class.fxcrt::StringDataTemplate"* [ %237, %247 ], [ %298, %296 ]
  %285 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %284, i64 0, i32 1
  %286 = load i64, i64* %285, align 8
  %287 = icmp ugt i64 %286, %282
  br i1 %287, label %289, label %288, !prof !4

288:                                              ; preds = %296, %280
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !5
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !6
  unreachable

289:                                              ; preds = %280
  %290 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %284, i64 0, i32 3, i64 %282
  %291 = load i32, i32* %290, align 4
  call void @_ZN5fxcrt10WideString5SetAtEmw(%"class.fxcrt::WideString"* nonnull %4, i64 %281, i32 signext %291) #7
  %292 = add i64 %283, %31
  %293 = load i64, i64* %235, align 8
  %294 = mul i64 %293, %31
  %295 = icmp ult i64 %292, %294
  br i1 %295, label %296, label %305

296:                                              ; preds = %289
  %297 = add nuw i64 %282, 1
  %298 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %203, align 8
  %299 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %17, align 8
  %300 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %299, i64 0, i32 0
  %301 = load i16, i16* %300, align 2
  %302 = sext i16 %301 to i64
  %303 = add i64 %292, %302
  %304 = icmp eq %"class.fxcrt::StringDataTemplate"* %298, null
  br i1 %304, label %288, label %280

305:                                              ; preds = %289, %243
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #7
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #7
  %306 = add nuw i64 %217, 1
  %307 = icmp eq i64 %306, %31
  br i1 %307, label %308, label %216

308:                                              ; preds = %305, %198, %279
  %309 = phi i32 [ 1, %279 ], [ 0, %198 ], [ 0, %305 ]
  %310 = icmp eq i64* %163, null
  br i1 %310, label %312, label %311

311:                                              ; preds = %308
  call void @_ZdlPv(i8* %162) #9
  br label %312

312:                                              ; preds = %308, %311
  %313 = icmp eq i64* %160, null
  br i1 %313, label %315, label %314

314:                                              ; preds = %312
  call void @_ZdlPv(i8* %161) #9
  br label %315

315:                                              ; preds = %312, %314
  %316 = load i64*, i64** %51, align 8
  %317 = icmp eq i64* %316, null
  br i1 %317, label %322, label %318

318:                                              ; preds = %315
  %319 = ptrtoint i64* %316 to i64
  %320 = bitcast i64** %52 to i64*
  store i64 %319, i64* %320, align 8
  %321 = bitcast i64* %316 to i8*
  call void @_ZdlPv(i8* %321) #9
  br label %322

322:                                              ; preds = %315, %318
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #7
  %323 = icmp eq i32 %309, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %47, %322
  call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #7
  br label %325

325:                                              ; preds = %46, %322, %324
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7
  br label %326

326:                                              ; preds = %325, %23
  ret void
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_114CreateECCBlockERKN5fxcrt10WideStringEm(%"class.fxcrt::WideString"* noalias sret, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8), i64) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.4", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %6, align 8
  %8 = icmp eq %"class.fxcrt::StringDataTemplate"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %7, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi i64 [ %11, %9 ], [ 0, %3 ]
  switch i64 %2, label %165 [
    i64 5, label %29
    i64 7, label %14
    i64 10, label %15
    i64 11, label %16
    i64 12, label %17
    i64 14, label %18
    i64 18, label %19
    i64 20, label %20
    i64 24, label %21
    i64 28, label %22
    i64 36, label %23
    i64 42, label %24
    i64 48, label %25
    i64 56, label %26
    i64 62, label %27
    i64 68, label %28
  ]

14:                                               ; preds = %12
  br label %29

15:                                               ; preds = %12
  br label %29

16:                                               ; preds = %12
  br label %29

17:                                               ; preds = %12
  br label %29

18:                                               ; preds = %12
  br label %29

19:                                               ; preds = %12
  br label %29

20:                                               ; preds = %12
  br label %29

21:                                               ; preds = %12
  br label %29

22:                                               ; preds = %12
  br label %29

23:                                               ; preds = %12
  br label %29

24:                                               ; preds = %12
  br label %29

25:                                               ; preds = %12
  br label %29

26:                                               ; preds = %12
  br label %29

27:                                               ; preds = %12
  br label %29

28:                                               ; preds = %12
  br label %29

29:                                               ; preds = %12, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14
  %30 = phi i64 [ 0, %12 ], [ 1, %14 ], [ 2, %15 ], [ 3, %16 ], [ 4, %17 ], [ 5, %18 ], [ 6, %19 ], [ 7, %20 ], [ 8, %21 ], [ 9, %22 ], [ 10, %23 ], [ 11, %24 ], [ 12, %25 ], [ 13, %26 ], [ 14, %27 ], [ 15, %28 ]
  %31 = bitcast %"class.std::__1::vector.4"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %2, i64 2) #7
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.std::__1::vector.4"* %4 to i8**
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds i16, i16* %36, i64 %2
  store i16* %38, i16** %34, align 8
  %39 = bitcast i16** %33 to i64*
  %40 = ptrtoint i8* %35 to i64
  %41 = add nsw i64 %2, -1
  %42 = getelementptr i16, i16* %36, i64 %41
  %43 = ptrtoint i16* %42 to i64
  %44 = sub i64 2, %40
  %45 = add i64 %44, %43
  %46 = and i64 %45, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %35, i8 0, i64 %46, i1 false) #7
  %47 = ptrtoint i16* %38 to i64
  store i64 %47, i64* %39, align 8
  %48 = icmp eq i64 %13, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %29
  %50 = add nsw i64 %2, -1
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %51, 0
  %53 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZN12_GLOBAL__N_17FACTORSE, i64 0, i64 %30
  %54 = shl i64 %50, 32
  %55 = ashr exact i64 %54, 32
  %56 = load i16*, i16** %32, align 8
  br label %61

57:                                               ; preds = %135, %29
  %58 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #7
  %59 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %59, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %5) #7
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %5, i64 %2) #7
  %60 = load i16*, i16** %32, align 8
  br label %147

61:                                               ; preds = %135, %49
  %62 = phi i16* [ %36, %49 ], [ %56, %135 ]
  %63 = phi i64 [ 0, %49 ], [ %137, %135 ]
  %64 = getelementptr inbounds i16, i16* %62, i64 %50
  %65 = load i16, i16* %64, align 2
  %66 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %6, align 8
  %67 = icmp eq %"class.fxcrt::StringDataTemplate"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %66, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp ugt i64 %70, %63
  br i1 %71, label %73, label %72, !prof !4

72:                                               ; preds = %68, %61
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !srcloc !6
  unreachable

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %66, i64 0, i32 3, i64 %63
  %75 = load i32, i32* %74, align 4
  %76 = trunc i32 %75 to i16
  %77 = xor i16 %65, %76
  %78 = icmp eq i16 %77, 0
  br i1 %52, label %79, label %82

79:                                               ; preds = %73
  %80 = zext i16 %77 to i64
  %81 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_13LOGE, i64 0, i64 %80
  br label %83

82:                                               ; preds = %111, %73
  br i1 %78, label %135, label %116

83:                                               ; preds = %79, %111
  %84 = phi i64 [ %55, %79 ], [ %113, %111 ]
  br i1 %78, label %107, label %85

85:                                               ; preds = %83
  %86 = load i8*, i8** %53, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 %84
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %107, label %90

90:                                               ; preds = %85
  %91 = add nsw i64 %84, -1
  %92 = getelementptr inbounds i16, i16* %56, i64 %91
  %93 = load i16, i16* %92, align 2
  %94 = load i8, i8* %81, align 1
  %95 = zext i8 %94 to i16
  %96 = zext i8 %88 to i64
  %97 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_13LOGE, i64 0, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = add nuw nsw i16 %99, %95
  %101 = urem i16 %100, 255
  %102 = zext i16 %101 to i64
  %103 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_14ALOGE, i64 0, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i16
  %106 = xor i16 %93, %105
  br label %111

107:                                              ; preds = %85, %83
  %108 = add nsw i64 %84, -1
  %109 = getelementptr inbounds i16, i16* %56, i64 %108
  %110 = load i16, i16* %109, align 2
  br label %111

111:                                              ; preds = %90, %107
  %112 = phi i16 [ %106, %90 ], [ %110, %107 ]
  %113 = phi i64 [ %91, %90 ], [ %108, %107 ]
  %114 = getelementptr inbounds i16, i16* %56, i64 %84
  store i16 %112, i16* %114, align 2
  %115 = icmp sgt i64 %113, 0
  br i1 %115, label %83, label %82

116:                                              ; preds = %82
  %117 = load i8*, i8** %53, align 8
  %118 = load i8, i8* %117, align 1
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %135, label %120

120:                                              ; preds = %116
  %121 = zext i16 %77 to i64
  %122 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_13LOGE, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i16
  %125 = zext i8 %118 to i64
  %126 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_13LOGE, i64 0, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i16
  %129 = add nuw nsw i16 %128, %124
  %130 = urem i16 %129, 255
  %131 = zext i16 %130 to i64
  %132 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_14ALOGE, i64 0, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i16
  br label %135

135:                                              ; preds = %82, %116, %120
  %136 = phi i16 [ %134, %120 ], [ 0, %116 ], [ 0, %82 ]
  store i16 %136, i16* %56, align 2
  %137 = add nuw i64 %63, 1
  %138 = icmp eq i64 %137, %13
  br i1 %138, label %57, label %61

139:                                              ; preds = %159
  call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* %0, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #7
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #7
  %140 = load i16*, i16** %32, align 8
  %141 = icmp eq i16* %140, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %139
  %143 = ptrtoint i16* %140 to i64
  %144 = bitcast i16** %33 to i64*
  store i64 %143, i64* %144, align 8
  %145 = bitcast i16* %140 to i8*
  call void @_Z7FX_FreePv(i8* nonnull %145) #7
  br label %146

146:                                              ; preds = %139, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  br label %164

147:                                              ; preds = %159, %57
  %148 = phi i64 [ %162, %159 ], [ 0, %57 ]
  %149 = xor i64 %148, -1
  %150 = add i64 %149, %2
  %151 = getelementptr inbounds i16, i16* %60, i64 %150
  %152 = load i16, i16* %151, align 2
  %153 = zext i16 %152 to i32
  %154 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %59, align 8
  %155 = icmp eq %"class.fxcrt::StringDataTemplate"* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %147
  %157 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %154, i64 0, i32 1
  %158 = load i64, i64* %157, align 8
  br label %159

159:                                              ; preds = %147, %156
  %160 = phi i64 [ %158, %156 ], [ 0, %147 ]
  %161 = call i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"* nonnull %5, i64 %160, i32 signext %153) #7
  %162 = add nuw i64 %148, 1
  %163 = icmp eq i64 %162, %2
  br i1 %163, label %139, label %147

164:                                              ; preds = %146, %165
  ret void

165:                                              ; preds = %12
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #7
  br label %164
}

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZNK14CBC_SymbolInfo32GetDataLengthForInterleavedBlockEv(%class.CBC_SymbolInfo*) local_unnamed_addr #1

declare i64 @_ZNK14CBC_SymbolInfo33GetErrorLengthForInterleavedBlockEv(%class.CBC_SymbolInfo*) local_unnamed_addr #1

declare void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"*, i64) local_unnamed_addr #1

declare void @_ZN5fxcrt10WideString5SetAtEmw(%"class.fxcrt::WideString"*, i64, i32 signext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #1

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

declare i64 @_ZN5fxcrt10WideString6InsertEmw(%"class.fxcrt::WideString"*, i64, i32 signext) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i32 -2143839158}
!6 = !{i32 -2143839137}
