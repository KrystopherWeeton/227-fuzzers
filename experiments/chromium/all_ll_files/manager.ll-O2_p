; ModuleID = '../../third_party/dawn/third_party/tint/src/transform/manager.cc'
source_filename = "../../third_party/dawn/third_party/tint/src/transform/manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.tint::transform::Output" = type { %"class.tint::Program", %"class.tint::transform::DataMap" }
%"class.tint::Program" = type <{ %"class.tint::ProgramID", [4 x i8], %"class.tint::sem::Manager", %"class.tint::BlockAllocator.31", %"class.tint::BlockAllocator.40", %"class.tint::ast::Module"*, %"class.tint::sem::Info", %"class.tint::SymbolTable", %"class.tint::diag::List", i8, i8, [6 x i8] }>
%"class.tint::ProgramID" = type { i32 }
%"class.tint::sem::Manager" = type { %"class.std::__1::unordered_map", %"class.tint::BlockAllocator" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.20", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { float }
%"class.tint::BlockAllocator" = type { %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.std::__1::unique_ptr.25"*, %"class.std::__1::unique_ptr.25"*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::unique_ptr.25" = type opaque
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::unique_ptr.25"* }
%"class.tint::BlockAllocator.31" = type { %"class.std::__1::vector.32" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::unique_ptr.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::unique_ptr.34"* }
%"class.tint::BlockAllocator.40" = type { %"class.std::__1::vector.41" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.std::__1::unique_ptr.43"*, %"class.std::__1::unique_ptr.43"*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::unique_ptr.43" = type opaque
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::unique_ptr.43"* }
%"class.tint::ast::Module" = type opaque
%"class.tint::sem::Info" = type { %"class.std::__1::unordered_map.49" }
%"class.std::__1::unordered_map.49" = type { %"class.std::__1::__hash_table.50" }
%"class.std::__1::__hash_table.50" = type <{ %"class.std::__1::unique_ptr.51", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.71", [4 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53", %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base.54"** }
%"struct.std::__1::__hash_node_base.54" = type { %"struct.std::__1::__hash_node_base.54"* }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::__bucket_list_deallocator.56" }
%"class.std::__1::__bucket_list_deallocator.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base.54" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.tint::SymbolTable" = type { i32, [4 x i8], %"class.std::__1::unordered_map.77", %"class.std::__1::unordered_map.103", %"class.tint::ProgramID", [4 x i8] }
%"class.std::__1::unordered_map.77" = type { %"class.std::__1::__hash_table.78" }
%"class.std::__1::__hash_table.78" = type <{ %"class.std::__1::unique_ptr.79", %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.97", [4 x i8] }>
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81", %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::__hash_node_base.82"** }
%"struct.std::__1::__hash_node_base.82" = type { %"struct.std::__1::__hash_node_base.82"* }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::__bucket_list_deallocator.84" }
%"class.std::__1::__bucket_list_deallocator.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::__hash_node_base.82" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::unordered_map.103" = type { %"class.std::__1::__hash_table.104" }
%"class.std::__1::__hash_table.104" = type <{ %"class.std::__1::unique_ptr.105", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.123", [4 x i8] }>
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107", %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base.108"** }
%"struct.std::__1::__hash_node_base.108" = type { %"struct.std::__1::__hash_node_base.108"* }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::__bucket_list_deallocator.110" }
%"class.std::__1::__bucket_list_deallocator.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.108" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.tint::diag::List" = type { %"class.std::__1::vector.127", i64 }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"class.tint::diag::Diagnostic"*, %"class.tint::diag::Diagnostic"*, %"class.std::__1::__compressed_pair.141" }
%"class.tint::diag::Diagnostic" = type { i32, %"class.tint::Source", %"class.std::__1::basic_string", i8* }
%"class.tint::Source" = type { %"class.tint::Source::Range", %"class.std::__1::basic_string", %"class.tint::Source::FileContent"* }
%"class.tint::Source::Range" = type { %"class.tint::Source::Location", %"class.tint::Source::Location" }
%"class.tint::Source::Location" = type { i64, i64 }
%"class.tint::Source::FileContent" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.134" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.tint::diag::Diagnostic"* }
%"class.tint::transform::DataMap" = type { %"class.std::__1::unordered_map.146" }
%"class.std::__1::unordered_map.146" = type { %"class.std::__1::__hash_table.147" }
%"class.std::__1::__hash_table.147" = type <{ %"class.std::__1::unique_ptr.148", %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.168", [4 x i8] }>
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150", %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.std::__1::__hash_node_base.151"** }
%"struct.std::__1::__hash_node_base.151" = type { %"struct.std::__1::__hash_node_base.151"* }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.std::__1::__bucket_list_deallocator.153" }
%"class.std::__1::__bucket_list_deallocator.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base.151" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.tint::transform::Manager" = type { %"class.tint::transform::Transform", %"class.std::__1::vector" }
%"class.tint::transform::Transform" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.tint::transform::Transform"* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.tint::transform::Data" = type { %"class.tint::Castable" }
%"class.tint::Castable" = type { %"class.tint::CastableBase" }
%"class.tint::CastableBase" = type { i32 (...)** }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.151", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.tint::TypeInfo"*, %"class.std::__1::unique_ptr.174" }
%"struct.tint::TypeInfo" = type { %"struct.tint::TypeInfo"*, i8* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.tint::transform::Data"* }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE25__emplace_unique_key_argsIS5_JRKS5_SB_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE8__rehashEm = comdat any

@_ZTVN4tint9transform7ManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tint::transform::Manager"*)* @_ZN4tint9transform7ManagerD2Ev to i8*), i8* bitcast (void (%"class.tint::transform::Manager"*)* @_ZN4tint9transform7ManagerD0Ev to i8*), i8* bitcast (void (%"class.tint::transform::Output"*, %"class.tint::transform::Manager"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"*)* @_ZN4tint9transform7Manager3RunEPKNS_7ProgramERKNS0_7DataMapE to i8*)] }, align 8
@__const._ZN4tint9transform7Manager3RunEPKNS_7ProgramERKNS0_7DataMapE.res = private unnamed_addr constant %"class.tint::transform::Output" { %"class.tint::Program" <{ %"class.tint::ProgramID" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %"class.tint::sem::Manager" { %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.4" { %"class.std::__1::__compressed_pair.5" { %"struct.std::__1::__compressed_pair_elem.6" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.7" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.8" { %"struct.std::__1::__compressed_pair_elem.9" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.13" { %"struct.std::__1::__compressed_pair_elem.14" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.18" { %"struct.std::__1::__compressed_pair_elem.9" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.tint::BlockAllocator" { %"class.std::__1::vector.23" { %"class.std::__1::__vector_base.24" { %"class.std::__1::unique_ptr.25"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.25"*), %"class.std::__1::unique_ptr.25"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.25"*), %"class.std::__1::__compressed_pair.26" { %"struct.std::__1::__compressed_pair_elem.27" { %"class.std::__1::unique_ptr.25"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.25"*) } } } } } }, %"class.tint::BlockAllocator.31" { %"class.std::__1::vector.32" { %"class.std::__1::__vector_base.33" { %"class.std::__1::unique_ptr.34"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.34"*), %"class.std::__1::unique_ptr.34"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.34"*), %"class.std::__1::__compressed_pair.35" { %"struct.std::__1::__compressed_pair_elem.36" { %"class.std::__1::unique_ptr.34"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.34"*) } } } } }, %"class.tint::BlockAllocator.40" { %"class.std::__1::vector.41" { %"class.std::__1::__vector_base.42" { %"class.std::__1::unique_ptr.43"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.43"*), %"class.std::__1::unique_ptr.43"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.43"*), %"class.std::__1::__compressed_pair.44" { %"struct.std::__1::__compressed_pair_elem.45" { %"class.std::__1::unique_ptr.43"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.43"*) } } } } }, %"class.tint::ast::Module"* inttoptr (i64 -6148914691236517206 to %"class.tint::ast::Module"*), %"class.tint::sem::Info" { %"class.std::__1::unordered_map.49" { %"class.std::__1::__hash_table.50" <{ %"class.std::__1::unique_ptr.51" { %"class.std::__1::__compressed_pair.52" { %"struct.std::__1::__compressed_pair_elem.53" { %"struct.std::__1::__hash_node_base.54"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.54"**) }, %"struct.std::__1::__compressed_pair_elem.55" { %"class.std::__1::__bucket_list_deallocator.56" { %"class.std::__1::__compressed_pair.57" { %"struct.std::__1::__compressed_pair_elem.9" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.61" { %"struct.std::__1::__compressed_pair_elem.62" { %"struct.std::__1::__hash_node_base.54" { %"struct.std::__1::__hash_node_base.54"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.54"*) } } }, %"class.std::__1::__compressed_pair.66" { %"struct.std::__1::__compressed_pair_elem.9" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.71" { %"struct.std::__1::__compressed_pair_elem.21" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.tint::SymbolTable" { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unordered_map.77" { %"class.std::__1::__hash_table.78" <{ %"class.std::__1::unique_ptr.79" { %"class.std::__1::__compressed_pair.80" { %"struct.std::__1::__compressed_pair_elem.81" { %"struct.std::__1::__hash_node_base.82"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.82"**) }, %"struct.std::__1::__compressed_pair_elem.83" { %"class.std::__1::__bucket_list_deallocator.84" { %"class.std::__1::__compressed_pair.85" { %"struct.std::__1::__compressed_pair_elem.9" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.89" { %"struct.std::__1::__compressed_pair_elem.90" { %"struct.std::__1::__hash_node_base.82" { %"struct.std::__1::__hash_node_base.82"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.82"*) } } }, %"class.std::__1::__compressed_pair.94" { %"struct.std::__1::__compressed_pair_elem.9" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.97" { %"struct.std::__1::__compressed_pair_elem.21" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.103" { %"class.std::__1::__hash_table.104" <{ %"class.std::__1::unique_ptr.105" { %"class.std::__1::__compressed_pair.106" { %"struct.std::__1::__compressed_pair_elem.107" { %"struct.std::__1::__hash_node_base.108"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.108"**) }, %"struct.std::__1::__compressed_pair_elem.109" { %"class.std::__1::__bucket_list_deallocator.110" { %"class.std::__1::__compressed_pair.111" { %"struct.std::__1::__compressed_pair_elem.9" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.115" { %"struct.std::__1::__compressed_pair_elem.116" { %"struct.std::__1::__hash_node_base.108" { %"struct.std::__1::__hash_node_base.108"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.108"*) } } }, %"class.std::__1::__compressed_pair.120" { %"struct.std::__1::__compressed_pair_elem.9" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.123" { %"struct.std::__1::__compressed_pair_elem.21" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.tint::ProgramID" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, %"class.tint::diag::List" { %"class.std::__1::vector.127" { %"class.std::__1::__vector_base.128" { %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*), %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*), %"class.std::__1::__compressed_pair.141" { %"struct.std::__1::__compressed_pair_elem.142" { %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*) } } } }, i64 -6148914691236517206 }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, %"class.tint::transform::DataMap" { %"class.std::__1::unordered_map.146" { %"class.std::__1::__hash_table.147" <{ %"class.std::__1::unique_ptr.148" { %"class.std::__1::__compressed_pair.149" { %"struct.std::__1::__compressed_pair_elem.150" { %"struct.std::__1::__hash_node_base.151"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.151"**) }, %"struct.std::__1::__compressed_pair_elem.152" { %"class.std::__1::__bucket_list_deallocator.153" { %"class.std::__1::__compressed_pair.154" { %"struct.std::__1::__compressed_pair_elem.9" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.158" { %"struct.std::__1::__compressed_pair_elem.159" { %"struct.std::__1::__hash_node_base.151" { %"struct.std::__1::__hash_node_base.151"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.151"*) } } }, %"class.std::__1::__compressed_pair.163" { %"struct.std::__1::__compressed_pair_elem.9" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.168" { %"struct.std::__1::__compressed_pair_elem.21" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } } }, align 8

@_ZN4tint9transform7ManagerC1Ev = hidden unnamed_addr alias void (%"class.tint::transform::Manager"*), void (%"class.tint::transform::Manager"*)* @_ZN4tint9transform7ManagerC2Ev
@_ZN4tint9transform7ManagerD1Ev = hidden unnamed_addr alias void (%"class.tint::transform::Manager"*), void (%"class.tint::transform::Manager"*)* @_ZN4tint9transform7ManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7ManagerC2Ev(%"class.tint::transform::Manager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 0
  tail call void @_ZN4tint9transform9TransformC2Ev(%"class.tint::transform::Transform"* %2) #8
  %3 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint9transform7ManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #8
  ret void
}

declare void @_ZN4tint9transform9TransformC2Ev(%"class.tint::transform::Transform"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7ManagerD2Ev(%"class.tint::transform::Manager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint9transform7ManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.tint::transform::Transform"*, %"class.tint::transform::Transform"** %15, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %15, align 8
  %17 = icmp eq %"class.tint::transform::Transform"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.tint::transform::Transform"* %16 to void (%"class.tint::transform::Transform"*)***
  %20 = load void (%"class.tint::transform::Transform"*)**, void (%"class.tint::transform::Transform"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.tint::transform::Transform"*)*, void (%"class.tint::transform::Transform"*)** %20, i64 1
  %22 = load void (%"class.tint::transform::Transform"*)*, void (%"class.tint::transform::Transform"*)** %21, align 8
  tail call void %22(%"class.tint::transform::Transform"* nonnull %16) #8
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 0
  tail call void @_ZN4tint9transform9TransformD2Ev(%"class.tint::transform::Transform"* %31) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4tint9transform9TransformD2Ev(%"class.tint::transform::Transform"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7ManagerD0Ev(%"class.tint::transform::Manager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint9transform7ManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.tint::transform::Transform"*, %"class.tint::transform::Transform"** %15, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %15, align 8
  %17 = icmp eq %"class.tint::transform::Transform"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.tint::transform::Transform"* %16 to void (%"class.tint::transform::Transform"*)***
  %20 = load void (%"class.tint::transform::Transform"*)**, void (%"class.tint::transform::Transform"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.tint::transform::Transform"*)*, void (%"class.tint::transform::Transform"*)** %20, i64 1
  %22 = load void (%"class.tint::transform::Transform"*)*, void (%"class.tint::transform::Transform"*)** %21, align 8
  tail call void %22(%"class.tint::transform::Transform"* nonnull %16) #8
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %0, i64 0, i32 0
  tail call void @_ZN4tint9transform9TransformD2Ev(%"class.tint::transform::Transform"* %31) #8
  %32 = bitcast %"class.tint::transform::Manager"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint9transform7Manager3RunEPKNS_7ProgramERKNS0_7DataMapE(%"class.tint::transform::Output"* noalias sret, %"class.tint::transform::Manager"* nocapture readonly, %"class.tint::Program"*, %"class.tint::transform::DataMap"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.tint::transform::Output", align 8
  %6 = alloca %"class.tint::Program", align 8
  %7 = bitcast %"class.tint::transform::Output"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 bitcast (%"class.tint::transform::Output"* @__const._ZN4tint9transform7Manager3RunEPKNS_7ProgramERKNS0_7DataMapE.res to i8*), i64 344, i1 false)
  tail call void @_ZN4tint9transform6OutputC1Ev(%"class.tint::transform::Output"* %0) #8
  %8 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr"* %9, %11
  br i1 %12, label %111, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.tint::transform::Output"* %5 to i8*
  %15 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %5, i64 0, i32 1
  %18 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %5, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.std::__1::__hash_node_base.151"** %18 to i64*
  %20 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %5, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.tint::transform::DataMap", %"class.tint::transform::DataMap"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %105, %13
  %25 = phi %"class.tint::Program"* [ %2, %13 ], [ %16, %105 ]
  %26 = phi %"class.std::__1::unique_ptr"* [ %9, %13 ], [ %107, %105 ]
  call void @llvm.lifetime.start.p0i8(i64 344, i8* nonnull %14) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast (%"class.tint::transform::Output"* @__const._ZN4tint9transform7Manager3RunEPKNS_7ProgramERKNS0_7DataMapE.res to i8*), i64 344, i1 false)
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.tint::transform::Transform"*, %"class.tint::transform::Transform"** %27, align 8
  %29 = bitcast %"class.tint::transform::Transform"* %28 to void (%"class.tint::transform::Output"*, %"class.tint::transform::Transform"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"*)***
  %30 = load void (%"class.tint::transform::Output"*, %"class.tint::transform::Transform"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"*)**, void (%"class.tint::transform::Output"*, %"class.tint::transform::Transform"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.tint::transform::Output"*, %"class.tint::transform::Transform"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"*)*, void (%"class.tint::transform::Output"*, %"class.tint::transform::Transform"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"*)** %30, i64 2
  %32 = load void (%"class.tint::transform::Output"*, %"class.tint::transform::Transform"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"*)*, void (%"class.tint::transform::Output"*, %"class.tint::transform::Transform"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"*)** %31, align 8
  call void %32(%"class.tint::transform::Output"* nonnull sret %5, %"class.tint::transform::Transform"* %28, %"class.tint::Program"* %25, %"class.tint::transform::DataMap"* dereferenceable(40) %3) #8
  %33 = call dereferenceable(304) %"class.tint::Program"* @_ZN4tint7ProgramaSEOS0_(%"class.tint::Program"* %16, %"class.tint::Program"* nonnull dereferenceable(304) %15) #8
  %34 = load i64, i64* %19, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %96

36:                                               ; preds = %96, %24
  %37 = load i64, i64* %21, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %105, label %39

39:                                               ; preds = %36
  %40 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %18, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.151"* %40, null
  br i1 %41, label %58, label %42

42:                                               ; preds = %39, %55
  %43 = phi %"struct.std::__1::__hash_node_base.151"* [ %45, %55 ], [ %40, %39 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %43, i64 3
  %47 = bitcast %"struct.std::__1::__hash_node_base.151"* %46 to %"class.tint::transform::Data"**
  %48 = load %"class.tint::transform::Data"*, %"class.tint::transform::Data"** %47, align 8
  store %"class.tint::transform::Data"* null, %"class.tint::transform::Data"** %47, align 8
  %49 = icmp eq %"class.tint::transform::Data"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %42
  %51 = bitcast %"class.tint::transform::Data"* %48 to void (%"class.tint::transform::Data"*)***
  %52 = load void (%"class.tint::transform::Data"*)**, void (%"class.tint::transform::Data"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.tint::transform::Data"*)*, void (%"class.tint::transform::Data"*)** %52, i64 1
  %54 = load void (%"class.tint::transform::Data"*)*, void (%"class.tint::transform::Data"*)** %53, align 8
  call void %54(%"class.tint::transform::Data"* nonnull %48) #8
  br label %55

55:                                               ; preds = %50, %42
  %56 = bitcast %"struct.std::__1::__hash_node_base.151"* %43 to i8*
  call void @_ZdlPv(i8* %56) #9
  %57 = icmp eq %"struct.std::__1::__hash_node_base.151"* %45, null
  br i1 %57, label %58, label %42

58:                                               ; preds = %55, %39
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %18, align 8
  %59 = load i64, i64* %22, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %78, label %61

61:                                               ; preds = %58
  %62 = add i64 %59, -1
  %63 = and i64 %59, 3
  %64 = icmp ult i64 %62, 3
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = sub i64 %59, %63
  br label %79

67:                                               ; preds = %79, %61
  %68 = phi i64 [ 0, %61 ], [ %93, %79 ]
  %69 = icmp eq i64 %63, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %67, %70
  %71 = phi i64 [ %75, %70 ], [ %68, %67 ]
  %72 = phi i64 [ %76, %70 ], [ %63, %67 ]
  %73 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %23, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %73, i64 %71
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %74, align 8
  %75 = add nuw i64 %71, 1
  %76 = add i64 %72, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %70, !llvm.loop !2

78:                                               ; preds = %67, %70, %58
  store i64 0, i64* %21, align 8
  br label %105

79:                                               ; preds = %79, %65
  %80 = phi i64 [ 0, %65 ], [ %93, %79 ]
  %81 = phi i64 [ %66, %65 ], [ %94, %79 ]
  %82 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %23, align 8
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %82, i64 %80
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %83, align 8
  %84 = or i64 %80, 1
  %85 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %23, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %85, i64 %84
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %86, align 8
  %87 = or i64 %80, 2
  %88 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %23, align 8
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %88, i64 %87
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %89, align 8
  %90 = or i64 %80, 3
  %91 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %23, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %91, i64 %90
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %92, align 8
  %93 = add nuw i64 %80, 4
  %94 = add i64 %81, -4
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %67, label %79

96:                                               ; preds = %24, %96
  %97 = phi i64 [ %103, %96 ], [ %34, %24 ]
  %98 = inttoptr i64 %97 to %"struct.std::__1::__hash_node"*
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %98, i64 0, i32 2, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %98, i64 0, i32 2, i32 0, i32 1
  %101 = call { %"struct.std::__1::__hash_node_base.151"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE25__emplace_unique_key_argsIS5_JRKS5_SB_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.147"* %20, %"struct.tint::TypeInfo"** dereferenceable(8) %99, %"struct.tint::TypeInfo"** dereferenceable(8) %99, %"class.std::__1::unique_ptr.174"* dereferenceable(8) %100) #8
  %102 = inttoptr i64 %97 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %36, label %96

105:                                              ; preds = %36, %78
  %106 = call zeroext i1 @_ZNK4tint7Program7IsValidEv(%"class.tint::Program"* %16) #8
  call void @_ZN4tint9transform7DataMapD1Ev(%"class.tint::transform::DataMap"* %17) #8
  call void @_ZN4tint7ProgramD1Ev(%"class.tint::Program"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 344, i8* nonnull %14) #8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %108 = xor i1 %106, true
  %109 = icmp eq %"class.std::__1::unique_ptr"* %107, %11
  %110 = or i1 %109, %108
  br i1 %110, label %115, label %24

111:                                              ; preds = %4
  %112 = bitcast %"class.tint::Program"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %112) #8
  call void @_ZNK4tint7Program5CloneEv(%"class.tint::Program"* nonnull sret %6, %"class.tint::Program"* %2) #8
  %113 = getelementptr inbounds %"class.tint::transform::Output", %"class.tint::transform::Output"* %0, i64 0, i32 0
  %114 = call dereferenceable(304) %"class.tint::Program"* @_ZN4tint7ProgramaSEOS0_(%"class.tint::Program"* %113, %"class.tint::Program"* nonnull dereferenceable(304) %6) #8
  call void @_ZN4tint7ProgramD1Ev(%"class.tint::Program"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %112) #8
  br label %115

115:                                              ; preds = %105, %111
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN4tint9transform6OutputC1Ev(%"class.tint::transform::Output"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dereferenceable(304) %"class.tint::Program"* @_ZN4tint7ProgramaSEOS0_(%"class.tint::Program"*, %"class.tint::Program"* dereferenceable(304)) local_unnamed_addr #1

declare zeroext i1 @_ZNK4tint7Program7IsValidEv(%"class.tint::Program"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNK4tint7Program5CloneEv(%"class.tint::Program"* sret, %"class.tint::Program"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4tint7ProgramD1Ev(%"class.tint::Program"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.151"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE25__emplace_unique_key_argsIS5_JRKS5_SB_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.147"*, %"struct.tint::TypeInfo"** dereferenceable(8), %"struct.tint::TypeInfo"** dereferenceable(8), %"class.std::__1::unique_ptr.174"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"struct.tint::TypeInfo"** %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 32
  %8 = shl i64 %6, 3
  %9 = and i64 %8, 4294967288
  %10 = add nuw nsw i64 %9, 8
  %11 = xor i64 %10, %7
  %12 = mul i64 %11, -7070675565921424023
  %13 = lshr i64 %12, 47
  %14 = xor i64 %12, %7
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %6 to %"struct.tint::TypeInfo"*
  br i1 %22, label %68, label %24

24:                                               ; preds = %4
  %25 = tail call i64 @llvm.ctpop.i64(i64 %21) #8, !range !4
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %21, -1
  %29 = and i64 %19, %28
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %19, %21
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %19, %21
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %19, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.151"* %39, null
  br i1 %40, label %68, label %41

41:                                               ; preds = %34
  %42 = add i64 %21, -1
  br label %43

43:                                               ; preds = %41, %63
  %44 = phi %"struct.std::__1::__hash_node_base.151"* [ %46, %63 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.151"* %46, null
  br i1 %47, label %68, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.151"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %19
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %42
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %21
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %21
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %63, label %68

63:                                               ; preds = %48, %60
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %46, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.151"* %64 to %"struct.tint::TypeInfo"**
  %66 = load %"struct.tint::TypeInfo"*, %"struct.tint::TypeInfo"** %65, align 8
  %67 = icmp eq %"struct.tint::TypeInfo"* %66, %23
  br i1 %67, label %161, label %43

68:                                               ; preds = %43, %60, %34, %4
  %69 = phi i64 [ %35, %34 ], [ -6148914691236517206, %4 ], [ %35, %60 ], [ %35, %43 ]
  %70 = tail call i8* @_Znwm(i64 32) #9, !noalias !5
  %71 = getelementptr inbounds i8, i8* %70, i64 16
  %72 = bitcast %"struct.tint::TypeInfo"** %2 to i64*
  %73 = load i64, i64* %72, align 8, !noalias !5
  %74 = bitcast i8* %71 to i64*
  store i64 %73, i64* %74, align 8, !noalias !5
  %75 = getelementptr inbounds i8, i8* %70, i64 24
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.174"* %3, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.std::__1::unique_ptr.174"* %3 to i64*
  %78 = load i64, i64* %77, align 8, !noalias !5
  store %"class.tint::transform::Data"* null, %"class.tint::transform::Data"** %76, align 8, !noalias !5
  %79 = bitcast i8* %75 to i64*
  store i64 %78, i64* %79, align 8, !noalias !5
  %80 = getelementptr inbounds i8, i8* %70, i64 8
  %81 = bitcast i8* %80 to i64*
  store i64 %19, i64* %81, align 8, !noalias !5
  %82 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base.151"**
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %82, align 8, !noalias !5
  %83 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  %86 = uitofp i64 %85 to float
  %87 = uitofp i64 %21 to float
  %88 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 3, i32 0, i32 0
  %89 = load float, float* %88, align 4
  %90 = fmul float %89, %87
  %91 = fcmp olt float %90, %86
  %92 = or i1 %22, %91
  br i1 %92, label %93, label %116

93:                                               ; preds = %68
  %94 = shl i64 %21, 1
  %95 = icmp ult i64 %21, 3
  %96 = tail call i64 @llvm.ctpop.i64(i64 %21) #8, !range !4
  %97 = icmp ugt i64 %96, 1
  %98 = or i1 %95, %97
  %99 = zext i1 %98 to i64
  %100 = or i64 %94, %99
  %101 = fdiv float %86, %89
  %102 = tail call float @llvm.ceil.f32(float %101) #8
  %103 = fptoui float %102 to i64
  %104 = icmp ult i64 %100, %103
  %105 = select i1 %104, i64 %103, i64 %100
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE6rehashEm(%"class.std::__1::__hash_table.147"* %0, i64 %105)
  %106 = load i64, i64* %20, align 8
  %107 = tail call i64 @llvm.ctpop.i64(i64 %106) #8, !range !4
  %108 = icmp ugt i64 %107, 1
  br i1 %108, label %112, label %109

109:                                              ; preds = %93
  %110 = add i64 %106, -1
  %111 = and i64 %110, %19
  br label %116

112:                                              ; preds = %93
  %113 = icmp ult i64 %19, %106
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = urem i64 %19, %106
  br label %116

116:                                              ; preds = %114, %112, %109, %68
  %117 = phi i64 [ %21, %68 ], [ %106, %109 ], [ %106, %112 ], [ %106, %114 ]
  %118 = phi i64 [ %69, %68 ], [ %111, %109 ], [ %19, %112 ], [ %115, %114 ]
  %119 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %120, i64 %118
  %122 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %121, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.151"* %122, null
  br i1 %123, label %124, label %150

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 1, i32 0, i32 0
  %126 = bitcast %"struct.std::__1::__hash_node_base.151"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast i8* %70 to i64*
  store i64 %127, i64* %128, align 8
  %129 = bitcast %"struct.std::__1::__hash_node_base.151"* %125 to i8**
  store i8* %70, i8** %129, align 8
  store %"struct.std::__1::__hash_node_base.151"* %125, %"struct.std::__1::__hash_node_base.151"** %121, align 8
  %130 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %82, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.151"* %130, null
  br i1 %131, label %157, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %130, i64 1
  %134 = bitcast %"struct.std::__1::__hash_node_base.151"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = tail call i64 @llvm.ctpop.i64(i64 %117) #8, !range !4
  %137 = icmp ugt i64 %136, 1
  br i1 %137, label %141, label %138

138:                                              ; preds = %132
  %139 = add i64 %117, -1
  %140 = and i64 %135, %139
  br label %145

141:                                              ; preds = %132
  %142 = icmp ult i64 %135, %117
  br i1 %142, label %145, label %143

143:                                              ; preds = %141
  %144 = urem i64 %135, %117
  br label %145

145:                                              ; preds = %138, %141, %143
  %146 = phi i64 [ %140, %138 ], [ %144, %143 ], [ %135, %141 ]
  %147 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %119, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %147, i64 %146
  %149 = bitcast %"struct.std::__1::__hash_node_base.151"** %148 to i8**
  br label %155

150:                                              ; preds = %116
  %151 = bitcast %"struct.std::__1::__hash_node_base.151"* %122 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast i8* %70 to i64*
  store i64 %152, i64* %153, align 8
  %154 = bitcast %"struct.std::__1::__hash_node_base.151"* %122 to i8**
  br label %155

155:                                              ; preds = %145, %150
  %156 = phi i8** [ %154, %150 ], [ %149, %145 ]
  store i8* %70, i8** %156, align 8
  br label %157

157:                                              ; preds = %155, %124
  %158 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base.151"*
  %159 = load i64, i64* %83, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %83, align 8
  br label %161

161:                                              ; preds = %63, %157
  %162 = phi i8 [ 1, %157 ], [ 0, %63 ]
  %163 = phi %"struct.std::__1::__hash_node_base.151"* [ %158, %157 ], [ %46, %63 ]
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.151"*, i8 } undef, %"struct.std::__1::__hash_node_base.151"* %163, 0
  %165 = insertvalue { %"struct.std::__1::__hash_node_base.151"*, i8 } %164, i8 %162, 1
  ret { %"struct.std::__1::__hash_node_base.151"*, i8 } %165
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE6rehashEm(%"class.std::__1::__hash_table.147"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #8
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE8__rehashEm(%"class.std::__1::__hash_table.147"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #8, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #8
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #8, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #8
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE8__rehashEm(%"class.std::__1::__hash_table.147"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE8__rehashEm(%"class.std::__1::__hash_table.147"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #10
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #9
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.147"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.151"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.151"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.153", %"class.std::__1::__bucket_list_deallocator.153"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !8

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.151"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.151"* null, %"struct.std::__1::__hash_node_base.151"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.151"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #8, !range !4
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.151"* %36, %"struct.std::__1::__hash_node_base.151"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.151"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.151"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.151"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.151"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.151"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.151"* %101 to %"struct.tint::TypeInfo"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.151"* %82, %"struct.std::__1::__hash_node_base.151"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.151"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.151"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.151"* %110 to %"struct.tint::TypeInfo"**
  %112 = load %"struct.tint::TypeInfo"*, %"struct.tint::TypeInfo"** %102, align 8
  %113 = load %"struct.tint::TypeInfo"*, %"struct.tint::TypeInfo"** %111, align 8
  %114 = icmp eq %"struct.tint::TypeInfo"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.151"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.151"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.151"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.151"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.151"* %80, %"struct.std::__1::__hash_node_base.151"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.151"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.151", %"struct.std::__1::__hash_node_base.151"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.151"*, %"struct.std::__1::__hash_node_base.151"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.151"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.147", %"class.std::__1::__hash_table.147"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.151"**, %"struct.std::__1::__hash_node_base.151"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.151"** null, %"struct.std::__1::__hash_node_base.151"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.151"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.151"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #9
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.153", %"class.std::__1::__bucket_list_deallocator.153"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind
declare void @_ZN4tint9transform7DataMapD1Ev(%"class.tint::transform::DataMap"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i64 0, i64 65}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE21__construct_node_hashIRKS5_JSB_EEENS6_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINSL_IST_EEEEEEmOT_DpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKN4tint8TypeInfoENS_10unique_ptrINS2_9transform4DataENS_14default_deleteIS8_EEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS_9allocatorISC_EEE21__construct_node_hashIRKS5_JSB_EEENS6_INS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINSL_IST_EEEEEEmOT_DpOT0_"}
!8 = distinct !{!8, !3}
