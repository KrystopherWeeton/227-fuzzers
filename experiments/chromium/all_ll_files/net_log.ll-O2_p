; ModuleID = '../../net/log/net_log.cc'
source_filename = "../../net/log/net_log.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [104 x i8] }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.3" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.8" }
%"union.absl::variant_internal::DestructibleUnionImpl.8" = type { %"union.absl::variant_internal::DestructibleUnionImpl.9" }
%"union.absl::variant_internal::DestructibleUnionImpl.9" = type { %"union.absl::variant_internal::DestructibleUnionImpl.10" }
%"union.absl::variant_internal::DestructibleUnionImpl.10" = type { %"union.absl::variant_internal::DestructibleUnionImpl.11" }
%"union.absl::variant_internal::DestructibleUnionImpl.11" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::NetLogEntry" = type { i32, %"struct.net::NetLogSource", i32, %"class.base::TimeTicks", %"class.base::Value" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.50" }
%"class.base::time_internal::TimeBase.50" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.net::NetLog::GetParamsInterface" = type { i32 (...)** }

@_ZTVN3net6NetLog18ThreadSafeObserverE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.net::NetLog::ThreadSafeObserver"*)* @_ZN3net6NetLog18ThreadSafeObserverD2Ev to i8*), i8* bitcast (void (%"class.net::NetLog::ThreadSafeObserver"*)* @_ZN3net6NetLog18ThreadSafeObserverD0Ev to i8*)] }, align 8
@_ZTVN3net6NetLog29ThreadSafeCaptureModeObserverE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*)* @_ZN3net6NetLog29ThreadSafeCaptureModeObserverD2Ev to i8*), i8* bitcast (void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*)* @_ZN3net6NetLog29ThreadSafeCaptureModeObserverD0Ev to i8*)] }, align 8
@_ZZN3net6NetLog3GetEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN3net6NetLog3GetEvE8instance = internal global i64 0, align 8
@_ZTVN3net6NetLogE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::NetLog"*)* @_ZN3net6NetLogD2Ev to i8*), i8* bitcast (void (%"class.net::NetLog"*)* @_ZN3net6NetLogD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c"CANCELLED\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"REQUEST_ALIVE\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"HOST_RESOLVER_IMPL_REQUEST\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"HOST_RESOLVER_IMPL_IPV6_REACHABILITY_CHECK\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"HOST_RESOLVER_IMPL_CACHE_HIT\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"HOST_RESOLVER_IMPL_HOSTS_HIT\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"HOST_RESOLVER_IMPL_CREATE_JOB\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"HOST_RESOLVER_IMPL_JOB\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"HOST_RESOLVER_IMPL_JOB_EVICTED\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"HOST_RESOLVER_IMPL_JOB_STARTED\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"HOST_RESOLVER_IMPL_ATTEMPT_STARTED\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"HOST_RESOLVER_IMPL_ATTEMPT_FINISHED\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"HOST_RESOLVER_IMPL_JOB_ATTACH\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"HOST_RESOLVER_IMPL_JOB_REQUEST_ATTACH\00", align 1
@.str.15 = private unnamed_addr constant [38 x i8] c"HOST_RESOLVER_IMPL_JOB_REQUEST_DETACH\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"HOST_RESOLVER_IMPL_PROC_TASK\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"HOST_RESOLVER_IMPL_DNS_TASK\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"PAC_FILE_DECIDER\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"PAC_FILE_DECIDER_WAIT\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"PAC_FILE_DECIDER_FETCH_PAC_SCRIPT\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"PAC_FILE_DECIDER_HAS_NO_FETCHER\00", align 1
@.str.22 = private unnamed_addr constant [49 x i8] c"PAC_FILE_DECIDER_FALLING_BACK_TO_NEXT_PAC_SOURCE\00", align 1
@.str.23 = private unnamed_addr constant [25 x i8] c"PROXY_RESOLUTION_SERVICE\00", align 1
@.str.24 = private unnamed_addr constant [46 x i8] c"PROXY_RESOLUTION_SERVICE_WAITING_FOR_INIT_PAC\00", align 1
@.str.25 = private unnamed_addr constant [45 x i8] c"PROXY_RESOLUTION_SERVICE_RESOLVED_PROXY_LIST\00", align 1
@.str.26 = private unnamed_addr constant [51 x i8] c"PROXY_RESOLUTION_SERVICE_DEPRIORITIZED_BAD_PROXIES\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"PROXY_CONFIG_CHANGED\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"BAD_PROXY_LIST_REPORTED\00", align 1
@.str.29 = private unnamed_addr constant [20 x i8] c"PROXY_LIST_FALLBACK\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c"PAC_JAVASCRIPT_ERROR\00", align 1
@.str.31 = private unnamed_addr constant [21 x i8] c"PAC_JAVASCRIPT_ALERT\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"WAITING_FOR_PROXY_RESOLVER_THREAD\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"SUBMITTED_TO_RESOLVER_THREAD\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"SOCKET_ALIVE\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"TCP_CONNECT\00", align 1
@.str.36 = private unnamed_addr constant [20 x i8] c"TCP_CONNECT_ATTEMPT\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"TCP_ACCEPT\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"SOCKET_IN_USE\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"SOCKS_CONNECT\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"SOCKS5_CONNECT\00", align 1
@.str.41 = private unnamed_addr constant [23 x i8] c"SOCKS_HOSTNAME_TOO_BIG\00", align 1
@.str.42 = private unnamed_addr constant [42 x i8] c"SOCKS_UNEXPECTEDLY_CLOSED_DURING_GREETING\00", align 1
@.str.43 = private unnamed_addr constant [43 x i8] c"SOCKS_UNEXPECTEDLY_CLOSED_DURING_HANDSHAKE\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"SOCKS_UNEXPECTED_VERSION\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"SOCKS_SERVER_ERROR\00", align 1
@.str.46 = private unnamed_addr constant [22 x i8] c"SOCKS_UNEXPECTED_AUTH\00", align 1
@.str.47 = private unnamed_addr constant [27 x i8] c"SOCKS_UNKNOWN_ADDRESS_TYPE\00", align 1
@.str.48 = private unnamed_addr constant [12 x i8] c"SSL_CONNECT\00", align 1
@.str.49 = private unnamed_addr constant [21 x i8] c"SSL_SERVER_HANDSHAKE\00", align 1
@.str.50 = private unnamed_addr constant [26 x i8] c"SSL_CLIENT_CERT_REQUESTED\00", align 1
@.str.51 = private unnamed_addr constant [19 x i8] c"SSL_PRIVATE_KEY_OP\00", align 1
@.str.52 = private unnamed_addr constant [25 x i8] c"SSL_CLIENT_CERT_PROVIDED\00", align 1
@.str.53 = private unnamed_addr constant [20 x i8] c"SSL_HANDSHAKE_ERROR\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"SSL_READ_ERROR\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"SSL_WRITE_ERROR\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"SSL_VERIFICATION_MERGED\00", align 1
@.str.57 = private unnamed_addr constant [19 x i8] c"SSL_ALERT_RECEIVED\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"SSL_ALERT_SENT\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"SSL_CONFIRM_HANDSHAKE\00", align 1
@.str.60 = private unnamed_addr constant [31 x i8] c"SSL_HANDSHAKE_MESSAGE_RECEIVED\00", align 1
@.str.61 = private unnamed_addr constant [27 x i8] c"SSL_HANDSHAKE_MESSAGE_SENT\00", align 1
@.str.62 = private unnamed_addr constant [18 x i8] c"SOCKET_BYTES_SENT\00", align 1
@.str.63 = private unnamed_addr constant [22 x i8] c"SSL_SOCKET_BYTES_SENT\00", align 1
@.str.64 = private unnamed_addr constant [22 x i8] c"SOCKET_BYTES_RECEIVED\00", align 1
@.str.65 = private unnamed_addr constant [26 x i8] c"SSL_SOCKET_BYTES_RECEIVED\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"SOCKET_READ_ERROR\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"SOCKET_WRITE_ERROR\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"SOCKET_CLOSED\00", align 1
@.str.69 = private unnamed_addr constant [26 x i8] c"SSL_CERTIFICATES_RECEIVED\00", align 1
@.str.70 = private unnamed_addr constant [39 x i8] c"SIGNED_CERTIFICATE_TIMESTAMPS_RECEIVED\00", align 1
@.str.71 = private unnamed_addr constant [38 x i8] c"SIGNED_CERTIFICATE_TIMESTAMPS_CHECKED\00", align 1
@.str.72 = private unnamed_addr constant [27 x i8] c"CERT_CT_COMPLIANCE_CHECKED\00", align 1
@.str.73 = private unnamed_addr constant [30 x i8] c"EV_CERT_CT_COMPLIANCE_CHECKED\00", align 1
@.str.74 = private unnamed_addr constant [21 x i8] c"CT_LOG_ENTRY_AUDITED\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"UDP_CONNECT\00", align 1
@.str.76 = private unnamed_addr constant [18 x i8] c"UDP_LOCAL_ADDRESS\00", align 1
@.str.77 = private unnamed_addr constant [19 x i8] c"UDP_BYTES_RECEIVED\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"UDP_BYTES_SENT\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"UDP_RECEIVE_ERROR\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c"UDP_SEND_ERROR\00", align 1
@.str.81 = private unnamed_addr constant [12 x i8] c"CONNECT_JOB\00", align 1
@.str.82 = private unnamed_addr constant [23 x i8] c"CONNECT_JOB_SET_SOCKET\00", align 1
@.str.83 = private unnamed_addr constant [22 x i8] c"CONNECT_JOB_TIMED_OUT\00", align 1
@.str.84 = private unnamed_addr constant [30 x i8] c"TRANSPORT_CONNECT_JOB_CONNECT\00", align 1
@.str.85 = private unnamed_addr constant [24 x i8] c"SSL_CONNECT_JOB_CONNECT\00", align 1
@.str.86 = private unnamed_addr constant [26 x i8] c"SOCKS_CONNECT_JOB_CONNECT\00", align 1
@.str.87 = private unnamed_addr constant [31 x i8] c"HTTP_PROXY_CONNECT_JOB_CONNECT\00", align 1
@.str.88 = private unnamed_addr constant [41 x i8] c"WEB_SOCKET_TRANSPORT_CONNECT_JOB_CONNECT\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"SOCKET_POOL\00", align 1
@.str.90 = private unnamed_addr constant [32 x i8] c"SOCKET_POOL_STALLED_MAX_SOCKETS\00", align 1
@.str.91 = private unnamed_addr constant [42 x i8] c"SOCKET_POOL_STALLED_MAX_SOCKETS_PER_GROUP\00", align 1
@.str.92 = private unnamed_addr constant [38 x i8] c"SOCKET_POOL_REUSED_AN_EXISTING_SOCKET\00", align 1
@.str.93 = private unnamed_addr constant [40 x i8] c"TCP_CLIENT_SOCKET_POOL_REQUESTED_SOCKET\00", align 1
@.str.94 = private unnamed_addr constant [41 x i8] c"TCP_CLIENT_SOCKET_POOL_REQUESTED_SOCKETS\00", align 1
@.str.95 = private unnamed_addr constant [32 x i8] c"SOCKET_POOL_CONNECT_JOB_CREATED\00", align 1
@.str.96 = private unnamed_addr constant [33 x i8] c"SOCKET_POOL_BOUND_TO_CONNECT_JOB\00", align 1
@.str.97 = private unnamed_addr constant [28 x i8] c"SOCKET_POOL_BOUND_TO_SOCKET\00", align 1
@.str.98 = private unnamed_addr constant [33 x i8] c"SOCKET_POOL_CONNECTING_N_SOCKETS\00", align 1
@.str.99 = private unnamed_addr constant [27 x i8] c"SOCKET_POOL_CLOSING_SOCKET\00", align 1
@.str.100 = private unnamed_addr constant [22 x i8] c"URL_REQUEST_START_JOB\00", align 1
@.str.101 = private unnamed_addr constant [23 x i8] c"URL_REQUEST_REDIRECTED\00", align 1
@.str.102 = private unnamed_addr constant [42 x i8] c"NETWORK_DELEGATE_BEFORE_START_TRANSACTION\00", align 1
@.str.103 = private unnamed_addr constant [36 x i8] c"NETWORK_DELEGATE_BEFORE_URL_REQUEST\00", align 1
@.str.104 = private unnamed_addr constant [34 x i8] c"NETWORK_DELEGATE_HEADERS_RECEIVED\00", align 1
@.str.105 = private unnamed_addr constant [43 x i8] c"URL_REQUEST_DELEGATE_CERTIFICATE_REQUESTED\00", align 1
@.str.106 = private unnamed_addr constant [39 x i8] c"URL_REQUEST_DELEGATE_RECEIVED_REDIRECT\00", align 1
@.str.107 = private unnamed_addr constant [38 x i8] c"URL_REQUEST_DELEGATE_RESPONSE_STARTED\00", align 1
@.str.108 = private unnamed_addr constant [43 x i8] c"URL_REQUEST_DELEGATE_SSL_CERTIFICATE_ERROR\00", align 1
@.str.109 = private unnamed_addr constant [14 x i8] c"DELEGATE_INFO\00", align 1
@.str.110 = private unnamed_addr constant [27 x i8] c"URL_REQUEST_JOB_BYTES_READ\00", align 1
@.str.111 = private unnamed_addr constant [36 x i8] c"URL_REQUEST_JOB_FILTERED_BYTES_READ\00", align 1
@.str.112 = private unnamed_addr constant [25 x i8] c"URL_REQUEST_SET_PRIORITY\00", align 1
@.str.113 = private unnamed_addr constant [25 x i8] c"URL_REQUEST_REDIRECT_JOB\00", align 1
@.str.114 = private unnamed_addr constant [42 x i8] c"URL_REQUEST_FAKE_RESPONSE_HEADERS_CREATED\00", align 1
@.str.115 = private unnamed_addr constant [24 x i8] c"URL_REQUEST_FILTERS_SET\00", align 1
@.str.116 = private unnamed_addr constant [23 x i8] c"HTTP_CACHE_GET_BACKEND\00", align 1
@.str.117 = private unnamed_addr constant [32 x i8] c"HTTP_CACHE_OPEN_OR_CREATE_ENTRY\00", align 1
@.str.118 = private unnamed_addr constant [22 x i8] c"HTTP_CACHE_OPEN_ENTRY\00", align 1
@.str.119 = private unnamed_addr constant [24 x i8] c"HTTP_CACHE_CREATE_ENTRY\00", align 1
@.str.120 = private unnamed_addr constant [24 x i8] c"HTTP_CACHE_ADD_TO_ENTRY\00", align 1
@.str.121 = private unnamed_addr constant [22 x i8] c"HTTP_CACHE_DOOM_ENTRY\00", align 1
@.str.122 = private unnamed_addr constant [21 x i8] c"HTTP_CACHE_READ_INFO\00", align 1
@.str.123 = private unnamed_addr constant [22 x i8] c"HTTP_CACHE_WRITE_INFO\00", align 1
@.str.124 = private unnamed_addr constant [21 x i8] c"HTTP_CACHE_READ_DATA\00", align 1
@.str.125 = private unnamed_addr constant [22 x i8] c"HTTP_CACHE_WRITE_DATA\00", align 1
@.str.126 = private unnamed_addr constant [34 x i8] c"HTTP_CACHE_CALLER_REQUEST_HEADERS\00", align 1
@.str.127 = private unnamed_addr constant [35 x i8] c"HTTP_CACHE_RESTART_PARTIAL_REQUEST\00", align 1
@.str.128 = private unnamed_addr constant [35 x i8] c"HTTP_CACHE_RE_SEND_PARTIAL_REQUEST\00", align 1
@.str.129 = private unnamed_addr constant [22 x i8] c"DISK_CACHE_ENTRY_IMPL\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"DISK_CACHE_MEM_ENTRY_IMPL\00", align 1
@.str.131 = private unnamed_addr constant [16 x i8] c"ENTRY_READ_DATA\00", align 1
@.str.132 = private unnamed_addr constant [17 x i8] c"ENTRY_WRITE_DATA\00", align 1
@.str.133 = private unnamed_addr constant [12 x i8] c"SPARSE_READ\00", align 1
@.str.134 = private unnamed_addr constant [13 x i8] c"SPARSE_WRITE\00", align 1
@.str.135 = private unnamed_addr constant [23 x i8] c"SPARSE_READ_CHILD_DATA\00", align 1
@.str.136 = private unnamed_addr constant [24 x i8] c"SPARSE_WRITE_CHILD_DATA\00", align 1
@.str.137 = private unnamed_addr constant [17 x i8] c"SPARSE_GET_RANGE\00", align 1
@.str.138 = private unnamed_addr constant [23 x i8] c"SPARSE_DELETE_CHILDREN\00", align 1
@.str.139 = private unnamed_addr constant [12 x i8] c"ENTRY_CLOSE\00", align 1
@.str.140 = private unnamed_addr constant [11 x i8] c"ENTRY_DOOM\00", align 1
@.str.141 = private unnamed_addr constant [20 x i8] c"HTTP_STREAM_REQUEST\00", align 1
@.str.142 = private unnamed_addr constant [16 x i8] c"HTTP_STREAM_JOB\00", align 1
@.str.143 = private unnamed_addr constant [24 x i8] c"HTTP_STREAM_JOB_WAITING\00", align 1
@.str.144 = private unnamed_addr constant [32 x i8] c"HTTP_STREAM_REQUEST_STARTED_JOB\00", align 1
@.str.145 = private unnamed_addr constant [26 x i8] c"HTTP_STREAM_JOB_THROTTLED\00", align 1
@.str.146 = private unnamed_addr constant [39 x i8] c"HTTP_STREAM_JOB_RESUME_INIT_CONNECTION\00", align 1
@.str.147 = private unnamed_addr constant [32 x i8] c"HTTP_STREAM_JOB_INIT_CONNECTION\00", align 1
@.str.148 = private unnamed_addr constant [33 x i8] c"HTTP_STREAM_REQUEST_BOUND_TO_JOB\00", align 1
@.str.149 = private unnamed_addr constant [49 x i8] c"HTTP_STREAM_JOB_BOUND_TO_QUIC_STREAM_FACTORY_JOB\00", align 1
@.str.150 = private unnamed_addr constant [33 x i8] c"HTTP_STREAM_JOB_BOUND_TO_REQUEST\00", align 1
@.str.151 = private unnamed_addr constant [26 x i8] c"HTTP_STREAM_REQUEST_PROTO\00", align 1
@.str.152 = private unnamed_addr constant [25 x i8] c"HTTP_STREAM_JOB_ORPHANED\00", align 1
@.str.153 = private unnamed_addr constant [24 x i8] c"HTTP_STREAM_JOB_DELAYED\00", align 1
@.str.154 = private unnamed_addr constant [24 x i8] c"HTTP_STREAM_JOB_RESUMED\00", align 1
@.str.155 = private unnamed_addr constant [27 x i8] c"HTTP_STREAM_JOB_CONTROLLER\00", align 1
@.str.156 = private unnamed_addr constant [33 x i8] c"HTTP_STREAM_JOB_CONTROLLER_BOUND\00", align 1
@.str.157 = private unnamed_addr constant [49 x i8] c"HTTP_STREAM_JOB_CONTROLLER_PROXY_SERVER_RESOLVED\00", align 1
@.str.158 = private unnamed_addr constant [41 x i8] c"HTTP_STREAM_JOB_CONTROLLER_ALT_SVC_FOUND\00", align 1
@.str.159 = private unnamed_addr constant [37 x i8] c"HTTP_TRANSACTION_TUNNEL_SEND_REQUEST\00", align 1
@.str.160 = private unnamed_addr constant [37 x i8] c"HTTP_TRANSACTION_SEND_TUNNEL_HEADERS\00", align 1
@.str.161 = private unnamed_addr constant [37 x i8] c"HTTP_TRANSACTION_TUNNEL_READ_HEADERS\00", align 1
@.str.162 = private unnamed_addr constant [46 x i8] c"HTTP_TRANSACTION_READ_TUNNEL_RESPONSE_HEADERS\00", align 1
@.str.163 = private unnamed_addr constant [30 x i8] c"HTTP_TRANSACTION_SEND_REQUEST\00", align 1
@.str.164 = private unnamed_addr constant [38 x i8] c"HTTP_TRANSACTION_SEND_REQUEST_HEADERS\00", align 1
@.str.165 = private unnamed_addr constant [35 x i8] c"HTTP_TRANSACTION_SEND_REQUEST_BODY\00", align 1
@.str.166 = private unnamed_addr constant [44 x i8] c"HTTP_TRANSACTION_HTTP2_SEND_REQUEST_HEADERS\00", align 1
@.str.167 = private unnamed_addr constant [43 x i8] c"HTTP_TRANSACTION_QUIC_SEND_REQUEST_HEADERS\00", align 1
@.str.168 = private unnamed_addr constant [30 x i8] c"HTTP_TRANSACTION_READ_HEADERS\00", align 1
@.str.169 = private unnamed_addr constant [39 x i8] c"HTTP_TRANSACTION_READ_RESPONSE_HEADERS\00", align 1
@.str.170 = private unnamed_addr constant [51 x i8] c"HTTP_TRANSACTION_READ_EARLY_HINTS_RESPONSE_HEADERS\00", align 1
@.str.171 = private unnamed_addr constant [27 x i8] c"HTTP_TRANSACTION_READ_BODY\00", align 1
@.str.172 = private unnamed_addr constant [45 x i8] c"HTTP_TRANSACTION_DRAIN_BODY_FOR_AUTH_RESTART\00", align 1
@.str.173 = private unnamed_addr constant [37 x i8] c"HTTP_TRANSACTION_RESTART_AFTER_ERROR\00", align 1
@.str.174 = private unnamed_addr constant [45 x i8] c"HTTP_TRANSACTION_RESTART_MISDIRECTED_REQUEST\00", align 1
@.str.175 = private unnamed_addr constant [27 x i8] c"BIDIRECTIONAL_STREAM_ALIVE\00", align 1
@.str.176 = private unnamed_addr constant [31 x i8] c"BIDIRECTIONAL_STREAM_READ_DATA\00", align 1
@.str.177 = private unnamed_addr constant [32 x i8] c"BIDIRECTIONAL_STREAM_SENDV_DATA\00", align 1
@.str.178 = private unnamed_addr constant [42 x i8] c"BIDIRECTIONAL_STREAM_BYTES_SENT_COALESCED\00", align 1
@.str.179 = private unnamed_addr constant [32 x i8] c"BIDIRECTIONAL_STREAM_BYTES_SENT\00", align 1
@.str.180 = private unnamed_addr constant [36 x i8] c"BIDIRECTIONAL_STREAM_BYTES_RECEIVED\00", align 1
@.str.181 = private unnamed_addr constant [34 x i8] c"BIDIRECTIONAL_STREAM_RECV_HEADERS\00", align 1
@.str.182 = private unnamed_addr constant [35 x i8] c"BIDIRECTIONAL_STREAM_RECV_TRAILERS\00", align 1
@.str.183 = private unnamed_addr constant [27 x i8] c"BIDIRECTIONAL_STREAM_READY\00", align 1
@.str.184 = private unnamed_addr constant [28 x i8] c"BIDIRECTIONAL_STREAM_FAILED\00", align 1
@.str.185 = private unnamed_addr constant [43 x i8] c"BIDIRECTIONAL_STREAM_BOUND_TO_QUIC_SESSION\00", align 1
@.str.186 = private unnamed_addr constant [31 x i8] c"SERVER_PUSH_LOOKUP_TRANSACTION\00", align 1
@.str.187 = private unnamed_addr constant [14 x i8] c"HTTP2_SESSION\00", align 1
@.str.188 = private unnamed_addr constant [26 x i8] c"HTTP2_SESSION_INITIALIZED\00", align 1
@.str.189 = private unnamed_addr constant [27 x i8] c"HTTP2_SESSION_SEND_HEADERS\00", align 1
@.str.190 = private unnamed_addr constant [27 x i8] c"HTTP2_SESSION_RECV_HEADERS\00", align 1
@.str.191 = private unnamed_addr constant [28 x i8] c"HTTP2_SESSION_SEND_SETTINGS\00", align 1
@.str.192 = private unnamed_addr constant [32 x i8] c"HTTP2_SESSION_SEND_SETTINGS_ACK\00", align 1
@.str.193 = private unnamed_addr constant [28 x i8] c"HTTP2_SESSION_RECV_SETTINGS\00", align 1
@.str.194 = private unnamed_addr constant [27 x i8] c"HTTP2_SESSION_RECV_SETTING\00", align 1
@.str.195 = private unnamed_addr constant [32 x i8] c"HTTP2_SESSION_RECV_SETTINGS_ACK\00", align 1
@.str.196 = private unnamed_addr constant [30 x i8] c"HTTP2_SESSION_RECV_RST_STREAM\00", align 1
@.str.197 = private unnamed_addr constant [30 x i8] c"HTTP2_SESSION_SEND_RST_STREAM\00", align 1
@.str.198 = private unnamed_addr constant [19 x i8] c"HTTP2_SESSION_PING\00", align 1
@.str.199 = private unnamed_addr constant [26 x i8] c"HTTP2_SESSION_RECV_GOAWAY\00", align 1
@.str.200 = private unnamed_addr constant [33 x i8] c"HTTP2_SESSION_RECV_WINDOW_UPDATE\00", align 1
@.str.201 = private unnamed_addr constant [33 x i8] c"HTTP2_SESSION_SEND_WINDOW_UPDATE\00", align 1
@.str.202 = private unnamed_addr constant [33 x i8] c"HTTP2_SESSION_UPDATE_SEND_WINDOW\00", align 1
@.str.203 = private unnamed_addr constant [33 x i8] c"HTTP2_SESSION_UPDATE_RECV_WINDOW\00", align 1
@.str.204 = private unnamed_addr constant [34 x i8] c"HTTP2_SESSION_RECV_INVALID_HEADER\00", align 1
@.str.205 = private unnamed_addr constant [24 x i8] c"HTTP2_SESSION_SEND_DATA\00", align 1
@.str.206 = private unnamed_addr constant [24 x i8] c"HTTP2_SESSION_RECV_DATA\00", align 1
@.str.207 = private unnamed_addr constant [32 x i8] c"HTTP2_SESSION_RECV_PUSH_PROMISE\00", align 1
@.str.208 = private unnamed_addr constant [52 x i8] c"HTTP2_SESSION_STREAM_STALLED_BY_SESSION_SEND_WINDOW\00", align 1
@.str.209 = private unnamed_addr constant [51 x i8] c"HTTP2_SESSION_STREAM_STALLED_BY_STREAM_SEND_WINDOW\00", align 1
@.str.210 = private unnamed_addr constant [20 x i8] c"HTTP2_SESSION_CLOSE\00", align 1
@.str.211 = private unnamed_addr constant [34 x i8] c"HTTP2_SESSION_STALLED_MAX_STREAMS\00", align 1
@.str.212 = private unnamed_addr constant [47 x i8] c"HTTP2_SESSION_INITIAL_WINDOW_SIZE_OUT_OF_RANGE\00", align 1
@.str.213 = private unnamed_addr constant [46 x i8] c"HTTP2_SESSION_UPDATE_STREAMS_SEND_WINDOW_SIZE\00", align 1
@.str.214 = private unnamed_addr constant [33 x i8] c"HTTP2_SESSION_SEND_GREASED_FRAME\00", align 1
@.str.215 = private unnamed_addr constant [42 x i8] c"HTTP2_SESSION_POOL_FOUND_EXISTING_SESSION\00", align 1
@.str.216 = private unnamed_addr constant [55 x i8] c"HTTP2_SESSION_POOL_FOUND_EXISTING_SESSION_FROM_IP_POOL\00", align 1
@.str.217 = private unnamed_addr constant [39 x i8] c"HTTP2_SESSION_POOL_CREATED_NEW_SESSION\00", align 1
@.str.218 = private unnamed_addr constant [48 x i8] c"HTTP2_SESSION_POOL_IMPORTED_SESSION_FROM_SOCKET\00", align 1
@.str.219 = private unnamed_addr constant [34 x i8] c"HTTP2_SESSION_POOL_REMOVE_SESSION\00", align 1
@.str.220 = private unnamed_addr constant [13 x i8] c"HTTP2_STREAM\00", align 1
@.str.221 = private unnamed_addr constant [33 x i8] c"HTTP2_STREAM_ADOPTED_PUSH_STREAM\00", align 1
@.str.222 = private unnamed_addr constant [36 x i8] c"HTTP2_STREAM_FLOW_CONTROL_UNSTALLED\00", align 1
@.str.223 = private unnamed_addr constant [32 x i8] c"HTTP2_STREAM_UPDATE_SEND_WINDOW\00", align 1
@.str.224 = private unnamed_addr constant [32 x i8] c"HTTP2_STREAM_UPDATE_RECV_WINDOW\00", align 1
@.str.225 = private unnamed_addr constant [19 x i8] c"HTTP2_STREAM_ERROR\00", align 1
@.str.226 = private unnamed_addr constant [27 x i8] c"HTTP2_STREAM_SEND_PRIORITY\00", align 1
@.str.227 = private unnamed_addr constant [27 x i8] c"HTTP2_PROXY_CLIENT_SESSION\00", align 1
@.str.228 = private unnamed_addr constant [24 x i8] c"QUIC_STREAM_FACTORY_JOB\00", align 1
@.str.229 = private unnamed_addr constant [49 x i8] c"QUIC_STREAM_FACTORY_JOB_BOUND_TO_HTTP_STREAM_JOB\00", align 1
@.str.230 = private unnamed_addr constant [32 x i8] c"QUIC_STREAM_FACTORY_JOB_CONNECT\00", align 1
@.str.231 = private unnamed_addr constant [51 x i8] c"QUIC_STREAM_FACTORY_JOB_RETRY_ON_ALTERNATE_NETWORK\00", align 1
@.str.232 = private unnamed_addr constant [55 x i8] c"QUIC_STREAM_FACTORY_JOB_STALE_HOST_TRIED_ON_CONNECTION\00", align 1
@.str.233 = private unnamed_addr constant [58 x i8] c"QUIC_STREAM_FACTORY_JOB_STALE_HOST_NOT_USED_ON_CONNECTION\00", align 1
@.str.234 = private unnamed_addr constant [55 x i8] c"QUIC_STREAM_FACTORY_JOB_STALE_HOST_RESOLUTION_NO_MATCH\00", align 1
@.str.235 = private unnamed_addr constant [54 x i8] c"QUIC_STREAM_FACTORY_JOB_STALE_HOST_RESOLUTION_MATCHED\00", align 1
@.str.236 = private unnamed_addr constant [13 x i8] c"QUIC_SESSION\00", align 1
@.str.237 = private unnamed_addr constant [28 x i8] c"QUIC_SESSION_CLOSE_ON_ERROR\00", align 1
@.str.238 = private unnamed_addr constant [39 x i8] c"QUIC_SESSION_CERTIFICATE_VERIFY_FAILED\00", align 1
@.str.239 = private unnamed_addr constant [34 x i8] c"QUIC_SESSION_CERTIFICATE_VERIFIED\00", align 1
@.str.240 = private unnamed_addr constant [29 x i8] c"QUIC_SESSION_PACKET_RECEIVED\00", align 1
@.str.241 = private unnamed_addr constant [25 x i8] c"QUIC_SESSION_PACKET_SENT\00", align 1
@.str.242 = private unnamed_addr constant [34 x i8] c"QUIC_SESSION_PACKET_RETRANSMITTED\00", align 1
@.str.243 = private unnamed_addr constant [25 x i8] c"QUIC_SESSION_PACKET_LOST\00", align 1
@.str.244 = private unnamed_addr constant [39 x i8] c"QUIC_SESSION_DUPLICATE_PACKET_RECEIVED\00", align 1
@.str.245 = private unnamed_addr constant [52 x i8] c"QUIC_SESSION_UNAUTHENTICATED_PACKET_HEADER_RECEIVED\00", align 1
@.str.246 = private unnamed_addr constant [34 x i8] c"QUIC_SESSION_PACKET_AUTHENTICATED\00", align 1
@.str.247 = private unnamed_addr constant [35 x i8] c"QUIC_SESSION_STREAM_FRAME_RECEIVED\00", align 1
@.str.248 = private unnamed_addr constant [31 x i8] c"QUIC_SESSION_STREAM_FRAME_SENT\00", align 1
@.str.249 = private unnamed_addr constant [36 x i8] c"QUIC_SESSION_STREAM_FRAME_COALESCED\00", align 1
@.str.250 = private unnamed_addr constant [32 x i8] c"QUIC_SESSION_ACK_FRAME_RECEIVED\00", align 1
@.str.251 = private unnamed_addr constant [28 x i8] c"QUIC_SESSION_ACK_FRAME_SENT\00", align 1
@.str.252 = private unnamed_addr constant [42 x i8] c"QUIC_SESSION_WINDOW_UPDATE_FRAME_RECEIVED\00", align 1
@.str.253 = private unnamed_addr constant [38 x i8] c"QUIC_SESSION_WINDOW_UPDATE_FRAME_SENT\00", align 1
@.str.254 = private unnamed_addr constant [36 x i8] c"QUIC_SESSION_BLOCKED_FRAME_RECEIVED\00", align 1
@.str.255 = private unnamed_addr constant [32 x i8] c"QUIC_SESSION_BLOCKED_FRAME_SENT\00", align 1
@.str.256 = private unnamed_addr constant [35 x i8] c"QUIC_SESSION_GOAWAY_FRAME_RECEIVED\00", align 1
@.str.257 = private unnamed_addr constant [31 x i8] c"QUIC_SESSION_GOAWAY_FRAME_SENT\00", align 1
@.str.258 = private unnamed_addr constant [45 x i8] c"QUIC_SESSION_CLIENT_GOAWAY_ON_PATH_DEGRADING\00", align 1
@.str.259 = private unnamed_addr constant [33 x i8] c"QUIC_SESSION_PING_FRAME_RECEIVED\00", align 1
@.str.260 = private unnamed_addr constant [29 x i8] c"QUIC_SESSION_PING_FRAME_SENT\00", align 1
@.str.261 = private unnamed_addr constant [38 x i8] c"QUIC_SESSION_MTU_DISCOVERY_FRAME_SENT\00", align 1
@.str.262 = private unnamed_addr constant [41 x i8] c"QUIC_SESSION_STOP_WAITING_FRAME_RECEIVED\00", align 1
@.str.263 = private unnamed_addr constant [37 x i8] c"QUIC_SESSION_STOP_WAITING_FRAME_SENT\00", align 1
@.str.264 = private unnamed_addr constant [39 x i8] c"QUIC_SESSION_RST_STREAM_FRAME_RECEIVED\00", align 1
@.str.265 = private unnamed_addr constant [35 x i8] c"QUIC_SESSION_RST_STREAM_FRAME_SENT\00", align 1
@.str.266 = private unnamed_addr constant [45 x i8] c"QUIC_SESSION_CONNECTION_CLOSE_FRAME_RECEIVED\00", align 1
@.str.267 = private unnamed_addr constant [41 x i8] c"QUIC_SESSION_CONNECTION_CLOSE_FRAME_SENT\00", align 1
@.str.268 = private unnamed_addr constant [42 x i8] c"QUIC_SESSION_PUBLIC_RESET_PACKET_RECEIVED\00", align 1
@.str.269 = private unnamed_addr constant [49 x i8] c"QUIC_SESSION_VERSION_NEGOTIATION_PACKET_RECEIVED\00", align 1
@.str.270 = private unnamed_addr constant [32 x i8] c"QUIC_SESSION_VERSION_NEGOTIATED\00", align 1
@.str.271 = private unnamed_addr constant [35 x i8] c"QUIC_SESSION_PACKET_HEADER_REVIVED\00", align 1
@.str.272 = private unnamed_addr constant [47 x i8] c"QUIC_SESSION_CRYPTO_HANDSHAKE_MESSAGE_RECEIVED\00", align 1
@.str.273 = private unnamed_addr constant [43 x i8] c"QUIC_SESSION_CRYPTO_HANDSHAKE_MESSAGE_SENT\00", align 1
@.str.274 = private unnamed_addr constant [43 x i8] c"QUIC_SESSION_TRANSPORT_PARAMETERS_RECEIVED\00", align 1
@.str.275 = private unnamed_addr constant [39 x i8] c"QUIC_SESSION_TRANSPORT_PARAMETERS_SENT\00", align 1
@.str.276 = private unnamed_addr constant [42 x i8] c"QUIC_SESSION_TRANSPORT_PARAMETERS_RESUMED\00", align 1
@.str.277 = private unnamed_addr constant [31 x i8] c"QUIC_SESSION_ZERO_RTT_REJECTED\00", align 1
@.str.278 = private unnamed_addr constant [35 x i8] c"QUIC_SESSION_PUSH_PROMISE_RECEIVED\00", align 1
@.str.279 = private unnamed_addr constant [20 x i8] c"QUIC_SESSION_CLOSED\00", align 1
@.str.280 = private unnamed_addr constant [43 x i8] c"QUIC_SESSION_CONNECTIVITY_PROBING_FINISHED\00", align 1
@.str.281 = private unnamed_addr constant [39 x i8] c"QUIC_SESSION_PATH_CHALLENGE_FRAME_SENT\00", align 1
@.str.282 = private unnamed_addr constant [43 x i8] c"QUIC_SESSION_PATH_CHALLENGE_FRAME_RECEIVED\00", align 1
@.str.283 = private unnamed_addr constant [38 x i8] c"QUIC_SESSION_PATH_RESPONSE_FRAME_SENT\00", align 1
@.str.284 = private unnamed_addr constant [42 x i8] c"QUIC_SESSION_PATH_RESPONSE_FRAME_RECEIVED\00", align 1
@.str.285 = private unnamed_addr constant [31 x i8] c"QUIC_SESSION_CRYPTO_FRAME_SENT\00", align 1
@.str.286 = private unnamed_addr constant [35 x i8] c"QUIC_SESSION_CRYPTO_FRAME_RECEIVED\00", align 1
@.str.287 = private unnamed_addr constant [37 x i8] c"QUIC_SESSION_STOP_SENDING_FRAME_SENT\00", align 1
@.str.288 = private unnamed_addr constant [41 x i8] c"QUIC_SESSION_STOP_SENDING_FRAME_RECEIVED\00", align 1
@.str.289 = private unnamed_addr constant [40 x i8] c"QUIC_SESSION_STREAMS_BLOCKED_FRAME_SENT\00", align 1
@.str.290 = private unnamed_addr constant [44 x i8] c"QUIC_SESSION_STREAMS_BLOCKED_FRAME_RECEIVED\00", align 1
@.str.291 = private unnamed_addr constant [36 x i8] c"QUIC_SESSION_MAX_STREAMS_FRAME_SENT\00", align 1
@.str.292 = private unnamed_addr constant [40 x i8] c"QUIC_SESSION_MAX_STREAMS_FRAME_RECEIVED\00", align 1
@.str.293 = private unnamed_addr constant [32 x i8] c"QUIC_SESSION_PADDING_FRAME_SENT\00", align 1
@.str.294 = private unnamed_addr constant [36 x i8] c"QUIC_SESSION_PADDING_FRAME_RECEIVED\00", align 1
@.str.295 = private unnamed_addr constant [42 x i8] c"QUIC_SESSION_NEW_CONNECTION_ID_FRAME_SENT\00", align 1
@.str.296 = private unnamed_addr constant [46 x i8] c"QUIC_SESSION_NEW_CONNECTION_ID_FRAME_RECEIVED\00", align 1
@.str.297 = private unnamed_addr constant [34 x i8] c"QUIC_SESSION_NEW_TOKEN_FRAME_SENT\00", align 1
@.str.298 = private unnamed_addr constant [38 x i8] c"QUIC_SESSION_NEW_TOKEN_FRAME_RECEIVED\00", align 1
@.str.299 = private unnamed_addr constant [45 x i8] c"QUIC_SESSION_RETIRE_CONNECTION_ID_FRAME_SENT\00", align 1
@.str.300 = private unnamed_addr constant [49 x i8] c"QUIC_SESSION_RETIRE_CONNECTION_ID_FRAME_RECEIVED\00", align 1
@.str.301 = private unnamed_addr constant [32 x i8] c"QUIC_SESSION_MESSAGE_FRAME_SENT\00", align 1
@.str.302 = private unnamed_addr constant [36 x i8] c"QUIC_SESSION_MESSAGE_FRAME_RECEIVED\00", align 1
@.str.303 = private unnamed_addr constant [43 x i8] c"QUIC_SESSION_HANDSHAKE_DONE_FRAME_RECEIVED\00", align 1
@.str.304 = private unnamed_addr constant [35 x i8] c"QUIC_SESSION_COALESCED_PACKET_SENT\00", align 1
@.str.305 = private unnamed_addr constant [43 x i8] c"QUIC_SESSION_BUFFERED_UNDECRYPTABLE_PACKET\00", align 1
@.str.306 = private unnamed_addr constant [42 x i8] c"QUIC_SESSION_DROPPED_UNDECRYPTABLE_PACKET\00", align 1
@.str.307 = private unnamed_addr constant [56 x i8] c"QUIC_SESSION_ATTEMPTING_TO_PROCESS_UNDECRYPTABLE_PACKET\00", align 1
@.str.308 = private unnamed_addr constant [24 x i8] c"QUIC_SESSION_KEY_UPDATE\00", align 1
@.str.309 = private unnamed_addr constant [41 x i8] c"QUIC_HTTP_STREAM_PUSH_PROMISE_RENDEZVOUS\00", align 1
@.str.310 = private unnamed_addr constant [37 x i8] c"QUIC_HTTP_STREAM_ADOPTED_PUSH_STREAM\00", align 1
@.str.311 = private unnamed_addr constant [42 x i8] c"HTTP_STREAM_REQUEST_BOUND_TO_QUIC_SESSION\00", align 1
@.str.312 = private unnamed_addr constant [49 x i8] c"QUIC_CHROMIUM_CLIENT_STREAM_SEND_REQUEST_HEADERS\00", align 1
@.str.313 = private unnamed_addr constant [62 x i8] c"QUIC_CHROMIUM_CLIENT_STREAM_READ_EARLY_HINTS_RESPONSE_HEADERS\00", align 1
@.str.314 = private unnamed_addr constant [50 x i8] c"QUIC_CHROMIUM_CLIENT_STREAM_READ_RESPONSE_HEADERS\00", align 1
@.str.315 = private unnamed_addr constant [51 x i8] c"QUIC_CHROMIUM_CLIENT_STREAM_READ_RESPONSE_TRAILERS\00", align 1
@.str.316 = private unnamed_addr constant [31 x i8] c"QUIC_CONNECTION_MIGRATION_MODE\00", align 1
@.str.317 = private unnamed_addr constant [36 x i8] c"QUIC_CONNECTION_MIGRATION_TRIGGERED\00", align 1
@.str.318 = private unnamed_addr constant [34 x i8] c"QUIC_CONNECTION_MIGRATION_FAILURE\00", align 1
@.str.319 = private unnamed_addr constant [48 x i8] c"QUIC_CONNECTION_MIGRATION_PLATFORM_NOTIFICATION\00", align 1
@.str.320 = private unnamed_addr constant [34 x i8] c"QUIC_CONNECTION_MIGRATION_SUCCESS\00", align 1
@.str.321 = private unnamed_addr constant [47 x i8] c"QUIC_CONNECTION_MIGRATION_ON_NETWORK_CONNECTED\00", align 1
@.str.322 = private unnamed_addr constant [50 x i8] c"QUIC_CONNECTION_MIGRATION_ON_NETWORK_MADE_DEFAULT\00", align 1
@.str.323 = private unnamed_addr constant [50 x i8] c"QUIC_CONNECTION_MIGRATION_ON_NETWORK_DISCONNECTED\00", align 1
@.str.324 = private unnamed_addr constant [41 x i8] c"QUIC_CONNECTION_MIGRATION_ON_WRITE_ERROR\00", align 1
@.str.325 = private unnamed_addr constant [44 x i8] c"QUIC_CONNECTION_MIGRATION_ON_PATH_DEGRADING\00", align 1
@.str.326 = private unnamed_addr constant [42 x i8] c"QUIC_CONNECTION_MIGRATION_ON_MIGRATE_BACK\00", align 1
@.str.327 = private unnamed_addr constant [48 x i8] c"QUIC_CONNECTION_MIGRATION_FAILURE_AFTER_PROBING\00", align 1
@.str.328 = private unnamed_addr constant [48 x i8] c"QUIC_CONNECTION_MIGRATION_SUCCESS_AFTER_PROBING\00", align 1
@.str.329 = private unnamed_addr constant [48 x i8] c"QUIC_CONNECTIVITY_PROBING_MANAGER_START_PROBING\00", align 1
@.str.330 = private unnamed_addr constant [49 x i8] c"QUIC_CONNECTIVITY_PROBING_MANAGER_CANCEL_PROBING\00", align 1
@.str.331 = private unnamed_addr constant [45 x i8] c"QUIC_CONNECTIVITY_PROBING_MANAGER_PROBE_SENT\00", align 1
@.str.332 = private unnamed_addr constant [49 x i8] c"QUIC_CONNECTIVITY_PROBING_MANAGER_PROBE_RECEIVED\00", align 1
@.str.333 = private unnamed_addr constant [59 x i8] c"QUIC_CONNECTIVITY_PROBING_MANAGER_STATELESS_RESET_RECEIVED\00", align 1
@.str.334 = private unnamed_addr constant [30 x i8] c"QUIC_PORT_MIGRATION_TRIGGERED\00", align 1
@.str.335 = private unnamed_addr constant [28 x i8] c"QUIC_PORT_MIGRATION_FAILURE\00", align 1
@.str.336 = private unnamed_addr constant [28 x i8] c"QUIC_PORT_MIGRATION_SUCCESS\00", align 1
@.str.337 = private unnamed_addr constant [16 x i8] c"QUIC_READ_ERROR\00", align 1
@.str.338 = private unnamed_addr constant [32 x i8] c"HTTP_STREAM_PARSER_READ_HEADERS\00", align 1
@.str.339 = private unnamed_addr constant [19 x i8] c"SOCKS5_GREET_WRITE\00", align 1
@.str.340 = private unnamed_addr constant [18 x i8] c"SOCKS5_GREET_READ\00", align 1
@.str.341 = private unnamed_addr constant [23 x i8] c"SOCKS5_HANDSHAKE_WRITE\00", align 1
@.str.342 = private unnamed_addr constant [22 x i8] c"SOCKS5_HANDSHAKE_READ\00", align 1
@.str.343 = private unnamed_addr constant [16 x i8] c"AUTH_CONTROLLER\00", align 1
@.str.344 = private unnamed_addr constant [25 x i8] c"AUTH_BOUND_TO_CONTROLLER\00", align 1
@.str.345 = private unnamed_addr constant [27 x i8] c"AUTH_HANDLER_CREATE_RESULT\00", align 1
@.str.346 = private unnamed_addr constant [18 x i8] c"AUTH_HANDLER_INIT\00", align 1
@.str.347 = private unnamed_addr constant [20 x i8] c"AUTH_GENERATE_TOKEN\00", align 1
@.str.348 = private unnamed_addr constant [22 x i8] c"AUTH_HANDLE_CHALLENGE\00", align 1
@.str.349 = private unnamed_addr constant [18 x i8] c"AUTH_LIBRARY_LOAD\00", align 1
@.str.350 = private unnamed_addr constant [25 x i8] c"AUTH_LIBRARY_BIND_FAILED\00", align 1
@.str.351 = private unnamed_addr constant [25 x i8] c"AUTH_LIBRARY_IMPORT_NAME\00", align 1
@.str.352 = private unnamed_addr constant [27 x i8] c"AUTH_LIBRARY_ACQUIRE_CREDS\00", align 1
@.str.353 = private unnamed_addr constant [26 x i8] c"AUTH_LIBRARY_INIT_SEC_CTX\00", align 1
@.str.354 = private unnamed_addr constant [22 x i8] c"AUTH_CHANNEL_BINDINGS\00", align 1
@.str.355 = private unnamed_addr constant [36 x i8] c"APPCACHE_DELIVERING_CACHED_RESPONSE\00", align 1
@.str.356 = private unnamed_addr constant [38 x i8] c"APPCACHE_DELIVERING_FALLBACK_RESPONSE\00", align 1
@.str.357 = private unnamed_addr constant [35 x i8] c"APPCACHE_DELIVERING_ERROR_RESPONSE\00", align 1
@.str.358 = private unnamed_addr constant [40 x i8] c"APPCACHE_DELIVERING_EXECUTABLE_RESPONSE\00", align 1
@.str.359 = private unnamed_addr constant [29 x i8] c"NETWORK_IP_ADDRESSES_CHANGED\00", align 1
@.str.360 = private unnamed_addr constant [29 x i8] c"NETWORK_CONNECTIVITY_CHANGED\00", align 1
@.str.361 = private unnamed_addr constant [16 x i8] c"NETWORK_CHANGED\00", align 1
@.str.362 = private unnamed_addr constant [19 x i8] c"DNS_CONFIG_CHANGED\00", align 1
@.str.363 = private unnamed_addr constant [27 x i8] c"SPECIFIC_NETWORK_CONNECTED\00", align 1
@.str.364 = private unnamed_addr constant [30 x i8] c"SPECIFIC_NETWORK_DISCONNECTED\00", align 1
@.str.365 = private unnamed_addr constant [36 x i8] c"SPECIFIC_NETWORK_SOON_TO_DISCONNECT\00", align 1
@.str.366 = private unnamed_addr constant [30 x i8] c"SPECIFIC_NETWORK_MADE_DEFAULT\00", align 1
@.str.367 = private unnamed_addr constant [29 x i8] c"THROTTLING_DISABLED_FOR_HOST\00", align 1
@.str.368 = private unnamed_addr constant [28 x i8] c"THROTTLING_REJECTED_REQUEST\00", align 1
@.str.369 = private unnamed_addr constant [16 x i8] c"DNS_TRANSACTION\00", align 1
@.str.370 = private unnamed_addr constant [22 x i8] c"DNS_TRANSACTION_QUERY\00", align 1
@.str.371 = private unnamed_addr constant [24 x i8] c"DNS_TRANSACTION_ATTEMPT\00", align 1
@.str.372 = private unnamed_addr constant [28 x i8] c"DNS_TRANSACTION_TCP_ATTEMPT\00", align 1
@.str.373 = private unnamed_addr constant [25 x i8] c"DNS_TRANSACTION_RESPONSE\00", align 1
@.str.374 = private unnamed_addr constant [22 x i8] c"CERT_VERIFIER_REQUEST\00", align 1
@.str.375 = private unnamed_addr constant [18 x i8] c"CERT_VERIFIER_JOB\00", align 1
@.str.376 = private unnamed_addr constant [35 x i8] c"CERT_VERIFIER_REQUEST_BOUND_TO_JOB\00", align 1
@.str.377 = private unnamed_addr constant [19 x i8] c"CERT_VERIFIER_TASK\00", align 1
@.str.378 = private unnamed_addr constant [25 x i8] c"CERT_VERIFIER_TASK_BOUND\00", align 1
@.str.379 = private unnamed_addr constant [17 x i8] c"CERT_VERIFY_PROC\00", align 1
@.str.380 = private unnamed_addr constant [29 x i8] c"CERT_VERIFY_PROC_TARGET_CERT\00", align 1
@.str.381 = private unnamed_addr constant [28 x i8] c"CERT_VERIFY_PROC_INPUT_CERT\00", align 1
@.str.382 = private unnamed_addr constant [41 x i8] c"CERT_VERIFY_PROC_ADDITIONAL_TRUST_ANCHOR\00", align 1
@.str.383 = private unnamed_addr constant [36 x i8] c"CERT_VERIFY_PROC_PATH_BUILD_ATTEMPT\00", align 1
@.str.384 = private unnamed_addr constant [28 x i8] c"CERT_VERIFY_PROC_PATH_BUILT\00", align 1
@.str.385 = private unnamed_addr constant [24 x i8] c"TRIAL_CERT_VERIFIER_JOB\00", align 1
@.str.386 = private unnamed_addr constant [43 x i8] c"TRIAL_CERT_VERIFIER_JOB_COMPARISON_STARTED\00", align 1
@.str.387 = private unnamed_addr constant [17 x i8] c"FTP_COMMAND_SENT\00", align 1
@.str.388 = private unnamed_addr constant [23 x i8] c"FTP_CONTROL_CONNECTION\00", align 1
@.str.389 = private unnamed_addr constant [20 x i8] c"FTP_DATA_CONNECTION\00", align 1
@.str.390 = private unnamed_addr constant [21 x i8] c"FTP_CONTROL_RESPONSE\00", align 1
@.str.391 = private unnamed_addr constant [19 x i8] c"SIMPLE_CACHE_ENTRY\00", align 1
@.str.392 = private unnamed_addr constant [27 x i8] c"SIMPLE_CACHE_ENTRY_SET_KEY\00", align 1
@.str.393 = private unnamed_addr constant [29 x i8] c"SIMPLE_CACHE_ENTRY_OPEN_CALL\00", align 1
@.str.394 = private unnamed_addr constant [30 x i8] c"SIMPLE_CACHE_ENTRY_OPEN_BEGIN\00", align 1
@.str.395 = private unnamed_addr constant [28 x i8] c"SIMPLE_CACHE_ENTRY_OPEN_END\00", align 1
@.str.396 = private unnamed_addr constant [31 x i8] c"SIMPLE_CACHE_ENTRY_CREATE_CALL\00", align 1
@.str.397 = private unnamed_addr constant [37 x i8] c"SIMPLE_CACHE_ENTRY_CREATE_OPTIMISTIC\00", align 1
@.str.398 = private unnamed_addr constant [32 x i8] c"SIMPLE_CACHE_ENTRY_CREATE_BEGIN\00", align 1
@.str.399 = private unnamed_addr constant [30 x i8] c"SIMPLE_CACHE_ENTRY_CREATE_END\00", align 1
@.str.400 = private unnamed_addr constant [39 x i8] c"SIMPLE_CACHE_ENTRY_OPEN_OR_CREATE_CALL\00", align 1
@.str.401 = private unnamed_addr constant [40 x i8] c"SIMPLE_CACHE_ENTRY_OPEN_OR_CREATE_BEGIN\00", align 1
@.str.402 = private unnamed_addr constant [38 x i8] c"SIMPLE_CACHE_ENTRY_OPEN_OR_CREATE_END\00", align 1
@.str.403 = private unnamed_addr constant [29 x i8] c"SIMPLE_CACHE_ENTRY_READ_CALL\00", align 1
@.str.404 = private unnamed_addr constant [30 x i8] c"SIMPLE_CACHE_ENTRY_READ_BEGIN\00", align 1
@.str.405 = private unnamed_addr constant [28 x i8] c"SIMPLE_CACHE_ENTRY_READ_END\00", align 1
@.str.406 = private unnamed_addr constant [34 x i8] c"SIMPLE_CACHE_ENTRY_CHECKSUM_BEGIN\00", align 1
@.str.407 = private unnamed_addr constant [32 x i8] c"SIMPLE_CACHE_ENTRY_CHECKSUM_END\00", align 1
@.str.408 = private unnamed_addr constant [30 x i8] c"SIMPLE_CACHE_ENTRY_WRITE_CALL\00", align 1
@.str.409 = private unnamed_addr constant [36 x i8] c"SIMPLE_CACHE_ENTRY_WRITE_OPTIMISTIC\00", align 1
@.str.410 = private unnamed_addr constant [31 x i8] c"SIMPLE_CACHE_ENTRY_WRITE_BEGIN\00", align 1
@.str.411 = private unnamed_addr constant [29 x i8] c"SIMPLE_CACHE_ENTRY_WRITE_END\00", align 1
@.str.412 = private unnamed_addr constant [36 x i8] c"SIMPLE_CACHE_ENTRY_READ_SPARSE_CALL\00", align 1
@.str.413 = private unnamed_addr constant [37 x i8] c"SIMPLE_CACHE_ENTRY_READ_SPARSE_BEGIN\00", align 1
@.str.414 = private unnamed_addr constant [35 x i8] c"SIMPLE_CACHE_ENTRY_READ_SPARSE_END\00", align 1
@.str.415 = private unnamed_addr constant [37 x i8] c"SIMPLE_CACHE_ENTRY_WRITE_SPARSE_CALL\00", align 1
@.str.416 = private unnamed_addr constant [38 x i8] c"SIMPLE_CACHE_ENTRY_WRITE_SPARSE_BEGIN\00", align 1
@.str.417 = private unnamed_addr constant [36 x i8] c"SIMPLE_CACHE_ENTRY_WRITE_SPARSE_END\00", align 1
@.str.418 = private unnamed_addr constant [29 x i8] c"SIMPLE_CACHE_ENTRY_DOOM_CALL\00", align 1
@.str.419 = private unnamed_addr constant [30 x i8] c"SIMPLE_CACHE_ENTRY_DOOM_BEGIN\00", align 1
@.str.420 = private unnamed_addr constant [28 x i8] c"SIMPLE_CACHE_ENTRY_DOOM_END\00", align 1
@.str.421 = private unnamed_addr constant [30 x i8] c"SIMPLE_CACHE_ENTRY_CLOSE_CALL\00", align 1
@.str.422 = private unnamed_addr constant [31 x i8] c"SIMPLE_CACHE_ENTRY_CLOSE_BEGIN\00", align 1
@.str.423 = private unnamed_addr constant [29 x i8] c"SIMPLE_CACHE_ENTRY_CLOSE_END\00", align 1
@.str.424 = private unnamed_addr constant [24 x i8] c"UPLOAD_DATA_STREAM_INIT\00", align 1
@.str.425 = private unnamed_addr constant [24 x i8] c"UPLOAD_DATA_STREAM_READ\00", align 1
@.str.426 = private unnamed_addr constant [35 x i8] c"RESOURCE_SCHEDULER_REQUEST_STARTED\00", align 1
@.str.427 = private unnamed_addr constant [24 x i8] c"NETWORK_QUALITY_CHANGED\00", align 1
@.str.428 = private unnamed_addr constant [38 x i8] c"HTTP_SERVER_PROPERTIES_INITIALIZATION\00", align 1
@.str.429 = private unnamed_addr constant [36 x i8] c"HTTP_SERVER_PROPERTIES_UPDATE_CACHE\00", align 1
@.str.430 = private unnamed_addr constant [36 x i8] c"HTTP_SERVER_PROPERTIES_UPDATE_PREFS\00", align 1
@.str.431 = private unnamed_addr constant [21 x i8] c"HOST_CACHE_PREF_READ\00", align 1
@.str.432 = private unnamed_addr constant [22 x i8] c"HOST_CACHE_PREF_WRITE\00", align 1
@.str.433 = private unnamed_addr constant [35 x i8] c"HOST_CACHE_PERSISTENCE_START_TIMER\00", align 1
@.str.434 = private unnamed_addr constant [20 x i8] c"WPAD_DHCP_WIN_FETCH\00", align 1
@.str.435 = private unnamed_addr constant [27 x i8] c"WPAD_DHCP_WIN_GET_ADAPTERS\00", align 1
@.str.436 = private unnamed_addr constant [30 x i8] c"WPAD_DHCP_WIN_ON_FETCHER_DONE\00", align 1
@.str.437 = private unnamed_addr constant [31 x i8] c"WPAD_DHCP_WIN_START_WAIT_TIMER\00", align 1
@.str.438 = private unnamed_addr constant [28 x i8] c"WPAD_DHCP_WIN_ON_WAIT_TIMER\00", align 1
@.str.439 = private unnamed_addr constant [19 x i8] c"COOKIE_STORE_ALIVE\00", align 1
@.str.440 = private unnamed_addr constant [26 x i8] c"COOKIE_STORE_COOKIE_ADDED\00", align 1
@.str.441 = private unnamed_addr constant [28 x i8] c"COOKIE_STORE_COOKIE_DELETED\00", align 1
@.str.442 = private unnamed_addr constant [36 x i8] c"COOKIE_STORE_COOKIE_REJECTED_SECURE\00", align 1
@.str.443 = private unnamed_addr constant [38 x i8] c"COOKIE_STORE_COOKIE_REJECTED_HTTPONLY\00", align 1
@.str.444 = private unnamed_addr constant [45 x i8] c"COOKIE_STORE_COOKIE_PRESERVED_SKIPPED_SECURE\00", align 1
@.str.445 = private unnamed_addr constant [33 x i8] c"COOKIE_STORE_SESSION_PERSISTENCE\00", align 1
@.str.446 = private unnamed_addr constant [40 x i8] c"COOKIE_PERSISTENT_STORE_ORIGIN_FILTERED\00", align 1
@.str.447 = private unnamed_addr constant [29 x i8] c"COOKIE_PERSISTENT_STORE_LOAD\00", align 1
@.str.448 = private unnamed_addr constant [41 x i8] c"COOKIE_PERSISTENT_STORE_KEY_LOAD_STARTED\00", align 1
@.str.449 = private unnamed_addr constant [43 x i8] c"COOKIE_PERSISTENT_STORE_KEY_LOAD_COMPLETED\00", align 1
@.str.450 = private unnamed_addr constant [31 x i8] c"COOKIE_PERSISTENT_STORE_CLOSED\00", align 1
@.str.451 = private unnamed_addr constant [39 x i8] c"COOKIE_GET_BLOCKED_BY_NETWORK_DELEGATE\00", align 1
@.str.452 = private unnamed_addr constant [39 x i8] c"COOKIE_SET_BLOCKED_BY_NETWORK_DELEGATE\00", align 1
@.str.453 = private unnamed_addr constant [24 x i8] c"COOKIE_INCLUSION_STATUS\00", align 1
@.str.454 = private unnamed_addr constant [35 x i8] c"HTTP3_LOCAL_CONTROL_STREAM_CREATED\00", align 1
@.str.455 = private unnamed_addr constant [41 x i8] c"HTTP3_LOCAL_QPACK_ENCODER_STREAM_CREATED\00", align 1
@.str.456 = private unnamed_addr constant [41 x i8] c"HTTP3_LOCAL_QPACK_DECODER_STREAM_CREATED\00", align 1
@.str.457 = private unnamed_addr constant [34 x i8] c"HTTP3_PEER_CONTROL_STREAM_CREATED\00", align 1
@.str.458 = private unnamed_addr constant [40 x i8] c"HTTP3_PEER_QPACK_ENCODER_STREAM_CREATED\00", align 1
@.str.459 = private unnamed_addr constant [40 x i8] c"HTTP3_PEER_QPACK_DECODER_STREAM_CREATED\00", align 1
@.str.460 = private unnamed_addr constant [27 x i8] c"HTTP3_CANCEL_PUSH_RECEIVED\00", align 1
@.str.461 = private unnamed_addr constant [24 x i8] c"HTTP3_SETTINGS_RECEIVED\00", align 1
@.str.462 = private unnamed_addr constant [22 x i8] c"HTTP3_GOAWAY_RECEIVED\00", align 1
@.str.463 = private unnamed_addr constant [27 x i8] c"HTTP3_MAX_PUSH_ID_RECEIVED\00", align 1
@.str.464 = private unnamed_addr constant [31 x i8] c"HTTP3_PRIORITY_UPDATE_RECEIVED\00", align 1
@.str.465 = private unnamed_addr constant [26 x i8] c"HTTP3_DATA_FRAME_RECEIVED\00", align 1
@.str.466 = private unnamed_addr constant [23 x i8] c"HTTP3_HEADERS_RECEIVED\00", align 1
@.str.467 = private unnamed_addr constant [22 x i8] c"HTTP3_HEADERS_DECODED\00", align 1
@.str.468 = private unnamed_addr constant [28 x i8] c"HTTP3_PUSH_PROMISE_RECEIVED\00", align 1
@.str.469 = private unnamed_addr constant [27 x i8] c"HTTP3_PUSH_PROMISE_DECODED\00", align 1
@.str.470 = private unnamed_addr constant [29 x i8] c"HTTP3_UNKNOWN_FRAME_RECEIVED\00", align 1
@.str.471 = private unnamed_addr constant [20 x i8] c"HTTP3_SETTINGS_SENT\00", align 1
@.str.472 = private unnamed_addr constant [23 x i8] c"HTTP3_SETTINGS_RESUMED\00", align 1
@.str.473 = private unnamed_addr constant [18 x i8] c"HTTP3_GOAWAY_SENT\00", align 1
@.str.474 = private unnamed_addr constant [23 x i8] c"HTTP3_MAX_PUSH_ID_SENT\00", align 1
@.str.475 = private unnamed_addr constant [27 x i8] c"HTTP3_PRIORITY_UPDATE_SENT\00", align 1
@.str.476 = private unnamed_addr constant [16 x i8] c"HTTP3_DATA_SENT\00", align 1
@.str.477 = private unnamed_addr constant [19 x i8] c"HTTP3_HEADERS_SENT\00", align 1
@.str.478 = private unnamed_addr constant [24 x i8] c"HTTP3_PUSH_PROMISE_SENT\00", align 1
@.str.479 = private unnamed_addr constant [32 x i8] c"TRUST_TOKEN_OPERATION_REQUESTED\00", align 1
@.str.480 = private unnamed_addr constant [37 x i8] c"TRUST_TOKEN_OPERATION_BEGIN_ISSUANCE\00", align 1
@.str.481 = private unnamed_addr constant [40 x i8] c"TRUST_TOKEN_OPERATION_FINALIZE_ISSUANCE\00", align 1
@.str.482 = private unnamed_addr constant [39 x i8] c"TRUST_TOKEN_OPERATION_BEGIN_REDEMPTION\00", align 1
@.str.483 = private unnamed_addr constant [42 x i8] c"TRUST_TOKEN_OPERATION_FINALIZE_REDEMPTION\00", align 1
@.str.484 = private unnamed_addr constant [36 x i8] c"TRUST_TOKEN_OPERATION_BEGIN_SIGNING\00", align 1
@.str.485 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.486 = private unnamed_addr constant [12 x i8] c"URL_REQUEST\00", align 1
@.str.487 = private unnamed_addr constant [23 x i8] c"HTTP_PROXY_CONNECT_JOB\00", align 1
@.str.488 = private unnamed_addr constant [18 x i8] c"SOCKS_CONNECT_JOB\00", align 1
@.str.489 = private unnamed_addr constant [16 x i8] c"SSL_CONNECT_JOB\00", align 1
@.str.490 = private unnamed_addr constant [22 x i8] c"TRANSPORT_CONNECT_JOB\00", align 1
@.str.491 = private unnamed_addr constant [33 x i8] c"WEB_SOCKET_TRANSPORT_CONNECT_JOB\00", align 1
@.str.492 = private unnamed_addr constant [7 x i8] c"SOCKET\00", align 1
@.str.493 = private unnamed_addr constant [26 x i8] c"QUIC_CONNECTION_MIGRATION\00", align 1
@.str.494 = private unnamed_addr constant [17 x i8] c"DISK_CACHE_ENTRY\00", align 1
@.str.495 = private unnamed_addr constant [19 x i8] c"MEMORY_CACHE_ENTRY\00", align 1
@.str.496 = private unnamed_addr constant [31 x i8] c"EXPONENTIAL_BACKOFF_THROTTLING\00", align 1
@.str.497 = private unnamed_addr constant [11 x i8] c"UDP_SOCKET\00", align 1
@.str.498 = private unnamed_addr constant [20 x i8] c"PROXY_CLIENT_SOCKET\00", align 1
@.str.499 = private unnamed_addr constant [21 x i8] c"BIDIRECTIONAL_STREAM\00", align 1
@.str.500 = private unnamed_addr constant [26 x i8] c"NETWORK_QUALITY_ESTIMATOR\00", align 1
@.str.501 = private unnamed_addr constant [22 x i8] c"CT_TREE_STATE_TRACKER\00", align 1
@.str.502 = private unnamed_addr constant [23 x i8] c"HTTP_SERVER_PROPERTIES\00", align 1
@.str.503 = private unnamed_addr constant [31 x i8] c"HOST_CACHE_PERSISTENCE_MANAGER\00", align 1
@.str.504 = private unnamed_addr constant [13 x i8] c"COOKIE_STORE\00", align 1
@.str.505 = private unnamed_addr constant [21 x i8] c"HTTP_AUTH_CONTROLLER\00", align 1
@.str.506 = private unnamed_addr constant [14 x i8] c"HTTP3_SESSION\00", align 1
@.str.507 = private unnamed_addr constant [22 x i8] c"QUIC_TRANSPORT_CLIENT\00", align 1
@.str.508 = private unnamed_addr constant [12 x i8] c"PHASE_BEGIN\00", align 1
@.str.509 = private unnamed_addr constant [10 x i8] c"PHASE_END\00", align 1
@.str.510 = private unnamed_addr constant [11 x i8] c"PHASE_NONE\00", align 1
@.str.511 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.512 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.513 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.514 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@switch.table._ZN3net6NetLog17EventTypeToStringENS_15NetLogEventTypeE = private unnamed_addr constant [485 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.151, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.166, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.167, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.173, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.177, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.178, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.180, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.181, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.184, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.185, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.186, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.187, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.188, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.190, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.191, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.192, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.193, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.194, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.195, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.196, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.197, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.198, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.199, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.200, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.202, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.203, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.205, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.206, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.207, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.208, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.209, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.210, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.211, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.212, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.213, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.214, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.215, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.217, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.218, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.219, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.220, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.221, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.223, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.224, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.225, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.228, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.229, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.230, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.231, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.232, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.233, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.235, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.236, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.237, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.238, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.239, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.240, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.241, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.243, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.244, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.245, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.246, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.247, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.248, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.249, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.250, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.251, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.252, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.253, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.254, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.256, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.257, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.258, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.259, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.260, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.261, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.262, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.263, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.264, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.265, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.266, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.267, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.268, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.269, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.270, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.271, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.272, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.273, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.274, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.275, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.276, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.277, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.278, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.279, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.280, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.281, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.282, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.283, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.284, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.285, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.286, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.287, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.288, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.289, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.290, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.291, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.292, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.293, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.294, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.295, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.296, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.297, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.298, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.299, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.300, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.301, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.302, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.303, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.304, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.305, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.306, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.307, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.308, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.309, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.310, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.311, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.312, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.313, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.314, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.315, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.316, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.317, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.318, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.319, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.320, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.321, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.322, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.323, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.324, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.325, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.326, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.327, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.328, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.329, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.330, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.331, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.332, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.333, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.334, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.335, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.336, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.337, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.338, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.339, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.340, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.341, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.342, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.343, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.344, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.345, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.346, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.347, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.348, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.349, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.350, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.351, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.352, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.353, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.354, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.355, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.356, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.357, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.358, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.359, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.360, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.361, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.362, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.363, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.364, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.365, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.366, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.367, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.368, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.369, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.370, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.371, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.372, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.373, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.374, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.375, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.376, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.377, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.378, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.379, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.381, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.382, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.383, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.384, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.385, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.386, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.387, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.388, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.389, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.390, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.391, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.392, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.393, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.394, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.395, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.396, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.397, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.399, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.400, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.401, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.402, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.403, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.404, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.405, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.406, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.407, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.408, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.409, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.410, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.411, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.412, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.413, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.414, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.415, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.417, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.418, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.419, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.420, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.421, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.422, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.423, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.424, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.425, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.426, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.427, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.428, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.429, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.430, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.431, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.432, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.433, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.434, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.435, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.436, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.437, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.438, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.439, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.440, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.441, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.442, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.443, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.444, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.445, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.446, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.447, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.448, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.449, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.450, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.451, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.452, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.453, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.454, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.455, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.456, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.457, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.458, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.459, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.460, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.461, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.462, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.463, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.464, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.465, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.466, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.467, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.468, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.469, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.470, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.471, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.472, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.473, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.474, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.475, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.476, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.477, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.478, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.479, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.480, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.481, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.482, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.483, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.484, i64 0, i64 0)], align 8
@switch.table._ZN3net6NetLog21GetSourceTypesAsValueEv = private unnamed_addr constant [34 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.485, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.486, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.487, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.488, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.489, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.490, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.491, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.492, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.187, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.493, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.236, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.494, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.495, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.496, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.497, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.375, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.377, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.498, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.499, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.500, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.501, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.186, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.228, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.502, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.503, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.385, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.504, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.505, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.506, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.507, i64 0, i64 0)], align 8
@switch.table._ZN3net6NetLog18EventPhaseToStringENS_16NetLogEventPhaseE = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.510, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.508, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.509, i64 0, i64 0)], align 8

@_ZN3net6NetLog18ThreadSafeObserverD1Ev = hidden unnamed_addr alias void (%"class.net::NetLog::ThreadSafeObserver"*), void (%"class.net::NetLog::ThreadSafeObserver"*)* @_ZN3net6NetLog18ThreadSafeObserverD2Ev
@_ZN3net6NetLog29ThreadSafeCaptureModeObserverD1Ev = hidden unnamed_addr alias void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*), void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*)* @_ZN3net6NetLog29ThreadSafeCaptureModeObserverD2Ev
@_ZN3net6NetLogC1EN4base7PassKeyIS0_EE = hidden unnamed_addr alias void (%"class.net::NetLog"*), void (%"class.net::NetLog"*)* @_ZN3net6NetLogC2EN4base7PassKeyIS0_EE
@_ZN3net6NetLogC1EN4base7PassKeyINS_16NetLogWithSourceEEE = hidden unnamed_addr alias void (%"class.net::NetLog"*), void (%"class.net::NetLog"*)* @_ZN3net6NetLogC2EN4base7PassKeyINS_16NetLogWithSourceEEE
@_ZN3net6NetLogC1EN4base7PassKeyINS_10TestNetLogEEE = hidden unnamed_addr alias void (%"class.net::NetLog"*), void (%"class.net::NetLog"*)* @_ZN3net6NetLogC2EN4base7PassKeyINS_10TestNetLogEEE
@_ZN3net6NetLogD1Ev = hidden unnamed_addr alias void (%"class.net::NetLog"*), void (%"class.net::NetLog"*)* @_ZN3net6NetLogD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net6NetLog18ThreadSafeObserverC2Ev(%"class.net::NetLog::ThreadSafeObserver"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net6NetLog18ThreadSafeObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %0, i64 0, i32 2
  store %"class.net::NetLog"* null, %"class.net::NetLog"** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net6NetLog18ThreadSafeObserverD2Ev(%"class.net::NetLog::ThreadSafeObserver"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net6NetLog18ThreadSafeObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net6NetLog18ThreadSafeObserverD0Ev(%"class.net::NetLog::ThreadSafeObserver"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net6NetLog18ThreadSafeObserver12capture_modeEv(%"class.net::NetLog::ThreadSafeObserver"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.net::NetLog"* @_ZNK3net6NetLog18ThreadSafeObserver7net_logEv(%"class.net::NetLog::ThreadSafeObserver"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %0, i64 0, i32 2
  %3 = load %"class.net::NetLog"*, %"class.net::NetLog"** %2, align 8
  ret %"class.net::NetLog"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net6NetLog29ThreadSafeCaptureModeObserverC2Ev(%"class.net::NetLog::ThreadSafeCaptureModeObserver"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver", %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net6NetLog29ThreadSafeCaptureModeObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver", %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %0, i64 0, i32 1
  store %"class.net::NetLog"* null, %"class.net::NetLog"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net6NetLog29ThreadSafeCaptureModeObserverD2Ev(%"class.net::NetLog::ThreadSafeCaptureModeObserver"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net6NetLog29ThreadSafeCaptureModeObserverD0Ev(%"class.net::NetLog::ThreadSafeCaptureModeObserver"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK3net6NetLog29ThreadSafeCaptureModeObserver23GetObserverCaptureModesEv(%"class.net::NetLog::ThreadSafeCaptureModeObserver"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver", %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %0, i64 0, i32 1
  %3 = load %"class.net::NetLog"*, %"class.net::NetLog"** %2, align 8
  %4 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %3, i64 0, i32 3
  %5 = load atomic i32, i32* %4 monotonic, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog29ThreadSafeCaptureModeObserver36AddEntryAtTimeWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksEONS7_5ValueE(%"class.net::NetLog::ThreadSafeCaptureModeObserver"* nocapture readonly, i32, %"struct.net::NetLogSource"* nocapture readonly dereferenceable(16), i32, i64, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %7 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver", %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %0, i64 0, i32 1
  %8 = load %"class.net::NetLog"*, %"class.net::NetLog"** %7, align 8
  tail call void @_ZN3net6NetLog36AddEntryAtTimeWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksEONS6_5ValueE(%"class.net::NetLog"* %8, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %2, i32 %3, i64 %4, %"class.base::Value"* dereferenceable(32) %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog36AddEntryAtTimeWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksEONS6_5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* nocapture readonly dereferenceable(16), i32, i64, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %7 = alloca %"struct.net::NetLogEntry", align 8
  %8 = alloca %"class.base::Value", align 8
  %9 = bitcast %"struct.net::NetLogEntry"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 72, i1 false)
  %10 = bitcast %"struct.net::NetLogSource"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.net::NetLogSource", %"struct.net::NetLogSource"* %2, i64 0, i32 2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %8, %"class.base::Value"* dereferenceable(32) %5) #18
  call void @_ZN3net11NetLogEntryC1ENS_15NetLogEventTypeENS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksENS4_5ValueE(%"struct.net::NetLogEntry"* nonnull %7, i32 %1, i64 %11, i64 %13, i32 %3, i64 %4, %"class.base::Value"* nonnull %8) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %8) #18
  %14 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %14, i64 0, i32 0, i32 0
  %16 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %15) #18
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18, !prof !2

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %14, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %19) #18
  br label %20

20:                                               ; preds = %6, %18
  %21 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 0
  %22 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %21, align 8
  %23 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 1
  %24 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %23, align 8
  %25 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %22, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %28, %20
  %27 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %15) #18
  call void @_ZN3net11NetLogEntryD1Ev(%"struct.net::NetLogEntry"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #18
  ret void

28:                                               ; preds = %20, %28
  %29 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %34, %28 ], [ %22, %20 ]
  %30 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %29, align 8
  %31 = bitcast %"class.net::NetLog::ThreadSafeObserver"* %30 to void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)***
  %32 = load void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)**, void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)*** %31, align 8
  %33 = load void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)*, void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)** %32, align 8
  call void %33(%"class.net::NetLog::ThreadSafeObserver"* %30, %"struct.net::NetLogEntry"* nonnull dereferenceable(72) %7) #18
  %34 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %29, i64 1
  %35 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %34, %24
  br i1 %35, label %26, label %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::NetLog"* @_ZN3net6NetLog3GetEv() local_unnamed_addr #6 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN3net6NetLog3GetEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !3

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3net6NetLog3GetEvE8instance) #18
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net6NetLogE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.base::NoDestructor"* @_ZZN3net6NetLog3GetEvE8instance to i32 (...)***), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN3net6NetLog3GetEvE8instance, i64 0, i32 0, i64 8) to %"class.base::internal::LockImpl"*)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN3net6NetLog3GetEvE8instance, i64 0, i32 0, i64 48), i8 0, i64 56, i1 false) #18
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3net6NetLog3GetEvE8instance) #18
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.net::NetLog"* bitcast (%"class.base::NoDestructor"* @_ZZN3net6NetLog3GetEvE8instance to %"class.net::NetLog"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLogC2EN4base7PassKeyIS0_EE(%"class.net::NetLog"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net6NetLogE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %3) #18
  %4 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 2
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLogC2EN4base7PassKeyINS_16NetLogWithSourceEEE(%"class.net::NetLog"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net6NetLogE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %3) #18
  %4 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 2
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLogC2EN4base7PassKeyINS_10TestNetLogEEE(%"class.net::NetLog"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net6NetLogE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %3) #18
  %4 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 2
  %5 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLogD2Ev(%"class.net::NetLog"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net6NetLogE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %3, align 8
  %5 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %4 to i64
  %8 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #19
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %12, align 8
  %14 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %13 to i64
  %17 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast %"class.net::NetLog::ThreadSafeObserver"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.net::NetLog::ThreadSafeObserver"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #19
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %21) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLogD0Ev(%"class.net::NetLog"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net6NetLogE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %3, align 8
  %5 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %4 to i64
  %8 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #19
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %12, align 8
  %14 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %13 to i64
  %17 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast %"class.net::NetLog::ThreadSafeObserver"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.net::NetLog::ThreadSafeObserver"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #19
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %21) #18
  %22 = bitcast %"class.net::NetLog"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #19
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog8AddEntryENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #6 align 2 {
  %5 = alloca %"class.base::Value", align 8
  %6 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 3
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9, !prof !2

9:                                                ; preds = %4
  %10 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #18
  call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %5) #18
  %11 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  call void @_ZN3net6NetLog36AddEntryAtTimeWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksEONS6_5ValueE(%"class.net::NetLog"* %0, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %2, i32 %3, i64 %11, %"class.base::Value"* nonnull dereferenceable(32) %5) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #18
  br label %12

12:                                               ; preds = %4, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog14AddGlobalEntryENS_15NetLogEventTypeE(%"class.net::NetLog"*, i32) local_unnamed_addr #6 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = alloca %"struct.net::NetLogSource", align 8
  %5 = bitcast %"struct.net::NetLogSource"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 2
  %7 = atomicrmw volatile add i32* %6, i32 1 monotonic
  %8 = add nsw i32 %7, 1
  call void @_ZN3net12NetLogSourceC1ENS_16NetLogSourceTypeEj(%"struct.net::NetLogSource"* nonnull %4, i32 0, i32 %8) #18
  %9 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 3
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12, !prof !2

12:                                               ; preds = %2
  %13 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #18
  call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %3) #18
  %14 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  call void @_ZN3net6NetLog36AddEntryAtTimeWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksEONS6_5ValueE(%"class.net::NetLog"* %0, i32 %1, %"struct.net::NetLogSource"* nonnull dereferenceable(16) %4, i32 0, i64 %14, %"class.base::Value"* nonnull dereferenceable(32) %3) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #18
  br label %15

15:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #18
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN3net6NetLog6NextIDEv(%"class.net::NetLog"*) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 2
  %3 = atomicrmw volatile add i32* %2, i32 1 monotonic
  %4 = add nsw i32 %3, 1
  ret i32 %4
}

declare void @_ZN3net12NetLogSourceC1ENS_16NetLogSourceTypeEj(%"struct.net::NetLogSource"*, i32, i32) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog30AddGlobalEntryWithStringParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES7_(%"class.net::NetLog"*, i32, i8*, i64, i8*, i64) local_unnamed_addr #6 align 2 {
  %7 = alloca %"class.base::Value", align 8
  %8 = alloca %"struct.net::NetLogSource", align 8
  %9 = bitcast %"struct.net::NetLogSource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 2
  %11 = atomicrmw volatile add i32* %10, i32 1 monotonic
  %12 = add nsw i32 %11, 1
  call void @_ZN3net12NetLogSourceC1ENS_16NetLogSourceTypeEj(%"struct.net::NetLogSource"* nonnull %8, i32 0, i32 %12) #18
  %13 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 3
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16, !prof !2

16:                                               ; preds = %6
  %17 = bitcast %"class.base::Value"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #18
  call void @_ZN3net22NetLogParamsWithStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull sret %7, i8* %2, i64 %3, i8* %4, i64 %5) #18
  %18 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  call void @_ZN3net6NetLog36AddEntryAtTimeWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksEONS6_5ValueE(%"class.net::NetLog"* %0, i32 %1, %"struct.net::NetLogSource"* nonnull dereferenceable(16) %8, i32 0, i64 %18, %"class.base::Value"* nonnull dereferenceable(32) %7) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %6, %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog11AddObserverEPNS0_18ThreadSafeObserverENS_17NetLogCaptureModeE(%"class.net::NetLog"*, %"class.net::NetLog::ThreadSafeObserver"*, i32) local_unnamed_addr #6 align 2 {
  %4 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"* %1 to i64
  %5 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #18
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #18
  br label %11

11:                                               ; preds = %3, %9
  %12 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %13, align 8
  %15 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %16 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %15, align 8
  %17 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %14, %16
  %18 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %16 to i64
  br i1 %17, label %24, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.net::NetLog::ThreadSafeObserver"** %14 to i64*
  store i64 %4, i64* %20, align 8
  %21 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %14, i64 1
  %22 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %21 to i64
  %23 = bitcast %"class.net::NetLog::ThreadSafeObserver"*** %13 to i64*
  store i64 %22, i64* %23, align 8
  br label %81

24:                                               ; preds = %11
  %25 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %14 to i64
  %26 = bitcast %"class.net::NetLog::ThreadSafeObserver"*** %13 to i64*
  %27 = bitcast %"class.std::__1::vector"* %12 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #17
  unreachable

35:                                               ; preds = %24
  %36 = bitcast %"class.net::NetLog::ThreadSafeObserver"*** %15 to i64*
  %37 = sub i64 %18, %28
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #17
  unreachable

48:                                               ; preds = %45, %35
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %35 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #19
  %52 = bitcast i8* %51 to %"class.net::NetLog::ThreadSafeObserver"**
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %55, i64 %30
  %57 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %55, i64 %54
  %58 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %57 to i64
  %59 = bitcast %"class.net::NetLog::ThreadSafeObserver"** %56 to i64*
  store i64 %4, i64* %59, align 8
  %60 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %56, i64 1
  %61 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %63 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %62, align 8
  %64 = load i64, i64* %26, align 8
  %65 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %56, i64 %68
  %70 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %53
  %73 = bitcast %"class.net::NetLog::ThreadSafeObserver"** %69 to i8*
  %74 = bitcast %"class.net::NetLog::ThreadSafeObserver"** %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #18
  %75 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %62, align 8
  br label %76

76:                                               ; preds = %72, %53
  %77 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %63, %53 ], [ %75, %72 ]
  store i64 %70, i64* %27, align 8
  store i64 %61, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  %78 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.net::NetLog::ThreadSafeObserver"** %77 to i8*
  tail call void @_ZdlPv(i8* %80) #19
  br label %81

81:                                               ; preds = %19, %76, %79
  %82 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %1, i64 0, i32 2
  store %"class.net::NetLog"* %0, %"class.net::NetLog"** %82, align 8
  %83 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %1, i64 0, i32 1
  store i32 %2, i32* %83, align 8
  %84 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 0
  %85 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %84, align 8
  %86 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %13, align 8
  %87 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %85, %86
  br i1 %87, label %116, label %88

88:                                               ; preds = %81
  %89 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %85 to i64
  %90 = getelementptr %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %86, i64 -1
  %91 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %90 to i64
  %92 = sub i64 %91, %89
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 3
  %96 = icmp ult i64 %92, 24
  br i1 %96, label %99, label %97

97:                                               ; preds = %88
  %98 = sub nsw i64 %94, %95
  br label %124

99:                                               ; preds = %124, %88
  %100 = phi i32 [ undef, %88 ], [ %150, %124 ]
  %101 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %85, %88 ], [ %151, %124 ]
  %102 = phi i32 [ 0, %88 ], [ %150, %124 ]
  %103 = icmp eq i64 %95, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %99, %104
  %105 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %113, %104 ], [ %101, %99 ]
  %106 = phi i32 [ %112, %104 ], [ %102, %99 ]
  %107 = phi i64 [ %114, %104 ], [ %95, %99 ]
  %108 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %105, align 8
  %109 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %108, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = shl i32 1, %110
  %112 = or i32 %111, %106
  %113 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %105, i64 1
  %114 = add i64 %107, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %104, !llvm.loop !4

116:                                              ; preds = %99, %104, %81
  %117 = phi i32 [ 0, %81 ], [ %100, %99 ], [ %112, %104 ]
  %118 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 3
  store atomic volatile i32 %117, i32* %118 monotonic, align 4
  %119 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 0
  %120 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %119, align 8
  %121 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 1
  %122 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %121, align 8
  %123 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %120, %122
  br i1 %123, label %162, label %154

124:                                              ; preds = %124, %97
  %125 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %85, %97 ], [ %151, %124 ]
  %126 = phi i32 [ 0, %97 ], [ %150, %124 ]
  %127 = phi i64 [ %98, %97 ], [ %152, %124 ]
  %128 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %125, align 8
  %129 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %128, i64 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = shl i32 1, %130
  %132 = or i32 %131, %126
  %133 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %125, i64 1
  %134 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %133, align 8
  %135 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %134, i64 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = shl i32 1, %136
  %138 = or i32 %137, %132
  %139 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %125, i64 2
  %140 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %139, align 8
  %141 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %140, i64 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = shl i32 1, %142
  %144 = or i32 %143, %138
  %145 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %125, i64 3
  %146 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %145, align 8
  %147 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %146, i64 0, i32 1
  %148 = load i32, i32* %147, align 8
  %149 = shl i32 1, %148
  %150 = or i32 %149, %144
  %151 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %125, i64 4
  %152 = add i64 %127, -4
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %99, label %124

154:                                              ; preds = %116, %154
  %155 = phi %"class.net::NetLog::ThreadSafeCaptureModeObserver"** [ %160, %154 ], [ %120, %116 ]
  %156 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %155, align 8
  %157 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %156 to void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)***
  %158 = load void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)**, void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)*** %157, align 8
  %159 = load void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)*, void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)** %158, align 8
  tail call void %159(%"class.net::NetLog::ThreadSafeCaptureModeObserver"* %156, i32 %117) #18
  %160 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %155, i64 1
  %161 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %160, %122
  br i1 %161, label %162, label %154

162:                                              ; preds = %154, %116
  %163 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog26UpdateObserverCaptureModesEv(%"class.net::NetLog"*) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %2, align 8
  %4 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %4, align 8
  %6 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %3, %5
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %3 to i64
  %9 = getelementptr %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %5, i64 -1
  %10 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %9 to i64
  %11 = sub i64 %10, %8
  %12 = lshr i64 %11, 3
  %13 = add nuw nsw i64 %12, 1
  %14 = and i64 %13, 3
  %15 = icmp ult i64 %11, 24
  br i1 %15, label %18, label %16

16:                                               ; preds = %7
  %17 = sub nsw i64 %13, %14
  br label %43

18:                                               ; preds = %43, %7
  %19 = phi i32 [ undef, %7 ], [ %69, %43 ]
  %20 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %3, %7 ], [ %70, %43 ]
  %21 = phi i32 [ 0, %7 ], [ %69, %43 ]
  %22 = icmp eq i64 %14, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %18, %23
  %24 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %32, %23 ], [ %20, %18 ]
  %25 = phi i32 [ %31, %23 ], [ %21, %18 ]
  %26 = phi i64 [ %33, %23 ], [ %14, %18 ]
  %27 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %24, align 8
  %28 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = shl i32 1, %29
  %31 = or i32 %30, %25
  %32 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %24, i64 1
  %33 = add i64 %26, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %23, !llvm.loop !6

35:                                               ; preds = %18, %23, %1
  %36 = phi i32 [ 0, %1 ], [ %19, %18 ], [ %31, %23 ]
  %37 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 3
  store atomic volatile i32 %36, i32* %37 monotonic, align 4
  %38 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 0
  %39 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %38, align 8
  %40 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %40, align 8
  %42 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %39, %41
  br i1 %42, label %73, label %74

43:                                               ; preds = %43, %16
  %44 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %3, %16 ], [ %70, %43 ]
  %45 = phi i32 [ 0, %16 ], [ %69, %43 ]
  %46 = phi i64 [ %17, %16 ], [ %71, %43 ]
  %47 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %44, align 8
  %48 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %47, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = shl i32 1, %49
  %51 = or i32 %50, %45
  %52 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %44, i64 1
  %53 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %52, align 8
  %54 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = shl i32 1, %55
  %57 = or i32 %56, %51
  %58 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %44, i64 2
  %59 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %58, align 8
  %60 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = shl i32 1, %61
  %63 = or i32 %62, %57
  %64 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %44, i64 3
  %65 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %64, align 8
  %66 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %65, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = shl i32 1, %67
  %69 = or i32 %68, %63
  %70 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %44, i64 4
  %71 = add i64 %46, -4
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %18, label %43

73:                                               ; preds = %74, %35
  ret void

74:                                               ; preds = %35, %74
  %75 = phi %"class.net::NetLog::ThreadSafeCaptureModeObserver"** [ %80, %74 ], [ %39, %35 ]
  %76 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %75, align 8
  %77 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %76 to void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)***
  %78 = load void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)**, void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)*** %77, align 8
  %79 = load void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)*, void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)** %78, align 8
  tail call void %79(%"class.net::NetLog::ThreadSafeCaptureModeObserver"* %76, i32 %36) #18
  %80 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %75, i64 1
  %81 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %80, %41
  br i1 %81, label %73, label %74
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog14RemoveObserverEPNS0_18ThreadSafeObserverE(%"class.net::NetLog"*, %"class.net::NetLog::ThreadSafeObserver"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #18
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #18
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %10, align 8
  %12 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 1
  %13 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %12, align 8
  %14 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %11, %13
  %15 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %13 to i64
  br i1 %14, label %23, label %16

16:                                               ; preds = %9, %20
  %17 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %21, %20 ], [ %11, %9 ]
  %18 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %17, align 8
  %19 = icmp eq %"class.net::NetLog::ThreadSafeObserver"* %18, %1
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %17, i64 1
  %22 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %21, %13
  br i1 %22, label %23, label %16

23:                                               ; preds = %16, %20, %9
  %24 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %11, %9 ], [ %17, %16 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %24, i64 1
  %26 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %25 to i64
  %27 = sub i64 %15, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %23
  %31 = bitcast %"class.net::NetLog::ThreadSafeObserver"** %24 to i8*
  %32 = bitcast %"class.net::NetLog::ThreadSafeObserver"** %25 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #18
  br label %33

33:                                               ; preds = %23, %30
  %34 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %24, i64 %28
  store %"class.net::NetLog::ThreadSafeObserver"** %34, %"class.net::NetLog::ThreadSafeObserver"*** %12, align 8
  %35 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %1, i64 0, i32 2
  store %"class.net::NetLog"* null, %"class.net::NetLog"** %35, align 8
  %36 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %1, i64 0, i32 1
  store i32 0, i32* %36, align 8
  %37 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %10, align 8
  %38 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %12, align 8
  %39 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %37, %38
  br i1 %39, label %68, label %40

40:                                               ; preds = %33
  %41 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %37 to i64
  %42 = getelementptr %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %38, i64 -1
  %43 = ptrtoint %"class.net::NetLog::ThreadSafeObserver"** %42 to i64
  %44 = sub i64 %43, %41
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 3
  %48 = icmp ult i64 %44, 24
  br i1 %48, label %51, label %49

49:                                               ; preds = %40
  %50 = sub nsw i64 %46, %47
  br label %76

51:                                               ; preds = %76, %40
  %52 = phi i32 [ undef, %40 ], [ %102, %76 ]
  %53 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %37, %40 ], [ %103, %76 ]
  %54 = phi i32 [ 0, %40 ], [ %102, %76 ]
  %55 = icmp eq i64 %47, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %65, %56 ], [ %53, %51 ]
  %58 = phi i32 [ %64, %56 ], [ %54, %51 ]
  %59 = phi i64 [ %66, %56 ], [ %47, %51 ]
  %60 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %57, align 8
  %61 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %60, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = shl i32 1, %62
  %64 = or i32 %63, %58
  %65 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %57, i64 1
  %66 = add i64 %59, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %56, !llvm.loop !7

68:                                               ; preds = %51, %56, %33
  %69 = phi i32 [ 0, %33 ], [ %52, %51 ], [ %64, %56 ]
  %70 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 3
  store atomic volatile i32 %69, i32* %70 monotonic, align 4
  %71 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 0
  %72 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %71, align 8
  %73 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 1
  %74 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %73, align 8
  %75 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %72, %74
  br i1 %75, label %114, label %106

76:                                               ; preds = %76, %49
  %77 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %37, %49 ], [ %103, %76 ]
  %78 = phi i32 [ 0, %49 ], [ %102, %76 ]
  %79 = phi i64 [ %50, %49 ], [ %104, %76 ]
  %80 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %77, align 8
  %81 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %80, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = shl i32 1, %82
  %84 = or i32 %83, %78
  %85 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %77, i64 1
  %86 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %85, align 8
  %87 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %86, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = shl i32 1, %88
  %90 = or i32 %89, %84
  %91 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %77, i64 2
  %92 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %91, align 8
  %93 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %92, i64 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = shl i32 1, %94
  %96 = or i32 %95, %90
  %97 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %77, i64 3
  %98 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %97, align 8
  %99 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %98, i64 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = shl i32 1, %100
  %102 = or i32 %101, %96
  %103 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %77, i64 4
  %104 = add i64 %79, -4
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %51, label %76

106:                                              ; preds = %68, %106
  %107 = phi %"class.net::NetLog::ThreadSafeCaptureModeObserver"** [ %112, %106 ], [ %72, %68 ]
  %108 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %107, align 8
  %109 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %108 to void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)***
  %110 = load void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)**, void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)*** %109, align 8
  %111 = load void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)*, void (%"class.net::NetLog::ThreadSafeCaptureModeObserver"*, i32)** %110, align 8
  tail call void %111(%"class.net::NetLog::ThreadSafeCaptureModeObserver"* %108, i32 %69) #18
  %112 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %107, i64 1
  %113 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %112, %74
  br i1 %113, label %114, label %106

114:                                              ; preds = %106, %68
  %115 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog22AddCaptureModeObserverEPNS0_29ThreadSafeCaptureModeObserverE(%"class.net::NetLog"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*) local_unnamed_addr #6 align 2 {
  %3 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %1 to i64
  %4 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #18
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #18
  br label %10

10:                                               ; preds = %2, %8
  %11 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver", %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %1, i64 0, i32 1
  store %"class.net::NetLog"* %0, %"class.net::NetLog"** %11, align 8
  %12 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 1
  %14 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %13, align 8
  %15 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %16 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %15, align 8
  %17 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %14, %16
  %18 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %16 to i64
  br i1 %17, label %24, label %19

19:                                               ; preds = %10
  %20 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %14 to i64*
  store i64 %3, i64* %20, align 8
  %21 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %14, i64 1
  %22 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %21 to i64
  %23 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %13 to i64*
  store i64 %22, i64* %23, align 8
  br label %81

24:                                               ; preds = %10
  %25 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %14 to i64
  %26 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %13 to i64*
  %27 = bitcast %"class.std::__1::vector.1"* %12 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector.1"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #17
  unreachable

35:                                               ; preds = %24
  %36 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %15 to i64*
  %37 = sub i64 %18, %28
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #17
  unreachable

48:                                               ; preds = %45, %35
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %35 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #19
  %52 = bitcast i8* %51 to %"class.net::NetLog::ThreadSafeCaptureModeObserver"**
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi %"class.net::NetLog::ThreadSafeCaptureModeObserver"** [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %55, i64 %30
  %57 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %55, i64 %54
  %58 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %57 to i64
  %59 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %56 to i64*
  store i64 %3, i64* %59, align 8
  %60 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %56, i64 1
  %61 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %12, i64 0, i32 0, i32 0
  %63 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %62, align 8
  %64 = load i64, i64* %26, align 8
  %65 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %56, i64 %68
  %70 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %53
  %73 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %69 to i8*
  %74 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #18
  %75 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %62, align 8
  br label %76

76:                                               ; preds = %72, %53
  %77 = phi %"class.net::NetLog::ThreadSafeCaptureModeObserver"** [ %63, %53 ], [ %75, %72 ]
  store i64 %70, i64* %27, align 8
  store i64 %61, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  %78 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %77 to i8*
  tail call void @_ZdlPv(i8* %80) #19
  br label %81

81:                                               ; preds = %19, %76, %79
  %82 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog25RemoveCaptureModeObserverEPNS0_29ThreadSafeCaptureModeObserverE(%"class.net::NetLog"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #18
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #18
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 0
  %11 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %10, align 8
  %12 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 1
  %13 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %12, align 8
  %14 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %11, %13
  %15 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %13 to i64
  br i1 %14, label %23, label %16

16:                                               ; preds = %9, %20
  %17 = phi %"class.net::NetLog::ThreadSafeCaptureModeObserver"** [ %21, %20 ], [ %11, %9 ]
  %18 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %17, align 8
  %19 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %18, %1
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %17, i64 1
  %22 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %21, %13
  br i1 %22, label %23, label %16

23:                                               ; preds = %16, %20, %9
  %24 = phi %"class.net::NetLog::ThreadSafeCaptureModeObserver"** [ %11, %9 ], [ %17, %16 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %24, i64 1
  %26 = ptrtoint %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %25 to i64
  %27 = sub i64 %15, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %23
  %31 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %24 to i8*
  %32 = bitcast %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %25 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #18
  br label %33

33:                                               ; preds = %23, %30
  %34 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %24, i64 %28
  store %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %34, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %12, align 8
  %35 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver", %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %1, i64 0, i32 1
  store %"class.net::NetLog"* null, %"class.net::NetLog"** %35, align 8
  %36 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net6NetLog11HasObserverEPNS0_18ThreadSafeObserverE(%"class.net::NetLog"* nocapture readonly, %"class.net::NetLog::ThreadSafeObserver"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %3, align 8
  %5 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %5, align 8
  %7 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %13, %12 ], [ %4, %2 ]
  %10 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %9, align 8
  %11 = icmp eq %"class.net::NetLog::ThreadSafeObserver"* %10, %1
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %9, i64 1
  %14 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %13, %6
  br i1 %14, label %15, label %8

15:                                               ; preds = %8, %12, %2
  %16 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %4, %2 ], [ %6, %12 ], [ %9, %8 ]
  %17 = icmp ne %"class.net::NetLog::ThreadSafeObserver"** %16, %6
  ret i1 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net6NetLog22HasCaptureModeObserverEPNS0_29ThreadSafeCaptureModeObserverE(%"class.net::NetLog"* nocapture readonly, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %3, align 8
  %5 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 5, i32 0, i32 1
  %6 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"*** %5, align 8
  %7 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"class.net::NetLog::ThreadSafeCaptureModeObserver"** [ %13, %12 ], [ %4, %2 ]
  %10 = load %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %9, align 8
  %11 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"* %10, %1
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.net::NetLog::ThreadSafeCaptureModeObserver"*, %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %9, i64 1
  %14 = icmp eq %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %13, %6
  br i1 %14, label %15, label %8

15:                                               ; preds = %8, %12, %2
  %16 = phi %"class.net::NetLog::ThreadSafeCaptureModeObserver"** [ %4, %2 ], [ %6, %12 ], [ %9, %8 ]
  %17 = icmp ne %"class.net::NetLog::ThreadSafeCaptureModeObserver"** %16, %6
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog17TickCountToStringERKN4base9TimeTicksE(%"class.std::__1::basic_string"* noalias sret, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #18
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret %0, i64 %8) #18
  ret void
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #10

declare void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog12TimeToStringERKN4base4TimeE(%"class.std::__1::basic_string"* noalias sret, %"class.base::Time"* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = tail call i64 @_ZN4base9TimeTicks9UnixEpochEv() #18
  %6 = tail call i64 @_ZN4base4Time9UnixEpochEv() #18
  %7 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %8, %6
  %10 = add i64 %9, -9223372036854775807
  %11 = icmp ult i64 %10, 2
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = icmp slt i64 %9, 0
  %14 = select i1 %13, i64 -9223372036854775808, i64 9223372036854775807
  %15 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %5, i64 %9) #18
  %16 = extractvalue { i64, i1 } %15, 1
  %17 = extractvalue { i64, i1 } %15, 0
  %18 = select i1 %16, i64 %14, i64 %17, !prof !8
  br label %27

19:                                               ; preds = %2
  %20 = add i64 %5, -9223372036854775807
  %21 = icmp ugt i64 %20, 1
  %22 = icmp eq i64 %5, %9
  %23 = or i1 %21, %22
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.511, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.512, i64 0, i64 0)) #18
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #18
  br label %27

27:                                               ; preds = %12, %19, %24
  %28 = phi i64 [ %18, %12 ], [ %9, %19 ], [ %9, %24 ]
  %29 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #18, !noalias !9
  %30 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %28, i64* %30, align 8, !noalias !9
  %31 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %4) #18, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #18, !noalias !9
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret %0, i64 %31) #18
  ret void
}

declare i64 @_ZN4base9TimeTicks9UnixEpochEv() local_unnamed_addr #10

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #10

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN3net6NetLog17EventTypeToStringENS_15NetLogEventTypeE(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i32 %0, 485
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [485 x i8*], [485 x i8*]* @switch.table._ZN3net6NetLog17EventTypeToStringENS_15NetLogEventTypeE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog20GetEventTypesAsValueEv(%"class.base::Value"* noalias sret) local_unnamed_addr #6 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #18
  %4 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %5

5:                                                ; preds = %13, %1
  %6 = phi i32 [ 0, %1 ], [ %16, %13 ]
  %7 = call i8* @_ZN3net6NetLog17EventTypeToStringENS_15NetLogEventTypeE(i32 %6)
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = call i64 @strlen(i8* nonnull %7) #18
  br label %13

11:                                               ; preds = %5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.513, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.514, i64 0, i64 0)) #18
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #18
  br label %13

13:                                               ; preds = %9, %11
  %14 = phi i64 [ 0, %11 ], [ %10, %9 ]
  %15 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* %7, i64 %14, i32 %6) #18
  %16 = add nuw nsw i32 %6, 1
  %17 = icmp eq i32 %16, 485
  br i1 %17, label %18, label %5

18:                                               ; preds = %13
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #10

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #11

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN3net6NetLog18SourceTypeToStringENS_16NetLogSourceTypeE(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i32 %0, 34
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [34 x i8*], [34 x i8*]* @switch.table._ZN3net6NetLog21GetSourceTypesAsValueEv, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog21GetSourceTypesAsValueEv(%"class.base::Value"* noalias sret) local_unnamed_addr #6 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #18
  %4 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %5

5:                                                ; preds = %15, %1
  %6 = phi i32 [ 0, %1 ], [ %19, %15 ]
  %7 = icmp ult i32 %6, 34
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %9 = zext i32 %6 to i64
  %10 = getelementptr inbounds [34 x i8*], [34 x i8*]* @switch.table._ZN3net6NetLog21GetSourceTypesAsValueEv, i64 0, i64 %9
  %11 = load i8*, i8** %10, align 8
  %12 = call i64 @strlen(i8* nonnull %11) #18
  br label %15

13:                                               ; preds = %5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.513, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.514, i64 0, i64 0)) #18
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #18
  br label %15

15:                                               ; preds = %8, %13
  %16 = phi i8* [ null, %13 ], [ %11, %8 ]
  %17 = phi i64 [ 0, %13 ], [ %12, %8 ]
  %18 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* %16, i64 %17, i32 %6) #18
  %19 = add nuw nsw i32 %6, 1
  %20 = icmp eq i32 %19, 34
  br i1 %20, label %21, label %5

21:                                               ; preds = %15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN3net6NetLog18EventPhaseToStringENS_16NetLogEventPhaseE(i32) local_unnamed_addr #4 align 2 {
  %2 = icmp ult i32 %0, 3
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN3net6NetLog18EventPhaseToStringENS_16NetLogEventPhaseE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* null
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net6NetLog27InitializeSourceIdPartitionEv(%"class.net::NetLog"*) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 2
  %3 = atomicrmw volatile xchg i32* %2, i32 -2147483648 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog16AddEntryInternalENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEPKNS0_18GetParamsInterfaceE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* nocapture readonly dereferenceable(16), i32, %"class.net::NetLog::GetParamsInterface"*) local_unnamed_addr #6 align 2 {
  %6 = alloca %"struct.net::NetLogEntry", align 8
  %7 = alloca %"class.base::Value", align 8
  %8 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 3
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = bitcast %"struct.net::NetLogEntry"* %6 to i8*
  %11 = bitcast %"struct.net::NetLogSource"* %2 to i64*
  %12 = getelementptr inbounds %"struct.net::NetLogSource", %"struct.net::NetLogSource"* %2, i64 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.net::NetLog::GetParamsInterface"* %4 to void (%"class.base::Value"*, %"class.net::NetLog::GetParamsInterface"*, i32)***
  %14 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %14, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %14, i64 0, i32 0
  %17 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 0
  %18 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %0, i64 0, i32 4, i32 0, i32 1
  br label %20

19:                                               ; preds = %53
  ret void

20:                                               ; preds = %53, %5
  %21 = phi i32 [ 0, %5 ], [ %54, %53 ]
  %22 = shl i32 1, %21
  %23 = and i32 %22, %9
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %53, label %25

25:                                               ; preds = %20
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 72, i1 false)
  %26 = load i64, i64* %11, align 8
  %27 = load i64, i64* %12, align 8
  %28 = call i64 @_ZN4base9TimeTicks3NowEv() #18
  %29 = load void (%"class.base::Value"*, %"class.net::NetLog::GetParamsInterface"*, i32)**, void (%"class.base::Value"*, %"class.net::NetLog::GetParamsInterface"*, i32)*** %13, align 8
  %30 = load void (%"class.base::Value"*, %"class.net::NetLog::GetParamsInterface"*, i32)*, void (%"class.base::Value"*, %"class.net::NetLog::GetParamsInterface"*, i32)** %29, align 8
  call void %30(%"class.base::Value"* nonnull sret %7, %"class.net::NetLog::GetParamsInterface"* %4, i32 %21) #18
  call void @_ZN3net11NetLogEntryC1ENS_15NetLogEventTypeENS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksENS4_5ValueE(%"struct.net::NetLogEntry"* nonnull %6, i32 %1, i64 %26, i64 %27, i32 %3, i64 %28, %"class.base::Value"* nonnull %7) #18
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #18
  %31 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %15) #18
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33, !prof !2

33:                                               ; preds = %25
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %16) #18
  br label %34

34:                                               ; preds = %25, %33
  %35 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %17, align 8
  %36 = load %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"*** %18, align 8
  %37 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %35, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %50, %34
  %39 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %15) #18
  call void @_ZN3net11NetLogEntryD1Ev(%"struct.net::NetLogEntry"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #18
  br label %53

40:                                               ; preds = %34, %50
  %41 = phi %"class.net::NetLog::ThreadSafeObserver"** [ %51, %50 ], [ %35, %34 ]
  %42 = load %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %41, align 8
  %43 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver", %"class.net::NetLog::ThreadSafeObserver"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, %21
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = bitcast %"class.net::NetLog::ThreadSafeObserver"* %42 to void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)***
  %48 = load void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)**, void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)*** %47, align 8
  %49 = load void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)*, void (%"class.net::NetLog::ThreadSafeObserver"*, %"struct.net::NetLogEntry"*)** %48, align 8
  call void %49(%"class.net::NetLog::ThreadSafeObserver"* %42, %"struct.net::NetLogEntry"* nonnull dereferenceable(72) %6) #18
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.net::NetLog::ThreadSafeObserver"*, %"class.net::NetLog::ThreadSafeObserver"** %41, i64 1
  %52 = icmp eq %"class.net::NetLog::ThreadSafeObserver"** %51, %36
  br i1 %52, label %38, label %40

53:                                               ; preds = %20, %38
  %54 = add nuw nsw i32 %21, 1
  %55 = icmp eq i32 %54, 3
  br i1 %55, label %19, label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #10

declare void @_ZN3net11NetLogEntryC1ENS_15NetLogEventTypeENS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksENS4_5ValueE(%"struct.net::NetLogEntry"*, i32, i64, i64, i32, i64, %"class.base::Value"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN3net11NetLogEntryD1Ev(%"struct.net::NetLogEntry"*) unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* nocapture readonly dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %6 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  tail call void @_ZN3net6NetLog36AddEntryAtTimeWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEN4base9TimeTicksEONS6_5ValueE(%"class.net::NetLog"* %0, i32 %1, %"struct.net::NetLogSource"* dereferenceable(16) %2, i32 %3, i64 %6, %"class.base::Value"* dereferenceable(32) %4)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #11

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #11

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #10

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #12

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1Ev(%"class.base::Value"*) unnamed_addr #11

declare void @_ZN3net22NetLogParamsWithStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* sret, i8*, i64, i8*, i64) local_unnamed_addr #10

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #11

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #16

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nofree nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind }
attributes #19 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = distinct !{!7, !5}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3net6NetLog17TickCountToStringERKN4base9TimeTicksE: argument 0"}
!11 = distinct !{!11, !"_ZN3net6NetLog17TickCountToStringERKN4base9TimeTicksE"}
