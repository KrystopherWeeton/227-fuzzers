; ModuleID = '../../content/browser/compute_pressure/procfs_stat_cpu_parser.cc'
source_filename = "../../content/browser/compute_pressure/procfs_stat_cpu_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::ProcfsStatCpuParser" = type { %"class.base::FilePath", %"class.std::__1::vector" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"class.std::__1::__compressed_pair.1" }
%"struct.content::ProcfsStatCpuParser::CoreTimes" = type { [10 x i64] }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.content::ProcfsStatCpuParser::CoreTimes"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.8" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.base::BasicStringPiece"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN7content19ProcfsStatCpuParser9CoreTimesENS_9allocatorIS3_EEE8__appendEm = comdat any

@_ZN7content19ProcfsStatCpuParser15kProcfsStatPathE = hidden local_unnamed_addr constant [11 x i8] c"/proc/stat\00", align 1
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1

@_ZN7content19ProcfsStatCpuParserC1EN4base8FilePathE = hidden unnamed_addr alias void (%"class.content::ProcfsStatCpuParser"*, %"class.base::FilePath"*), void (%"class.content::ProcfsStatCpuParser"*, %"class.base::FilePath"*)* @_ZN7content19ProcfsStatCpuParserC2EN4base8FilePathE
@_ZN7content19ProcfsStatCpuParserD1Ev = hidden unnamed_addr alias void (%"class.content::ProcfsStatCpuParser"*), void (%"class.content::ProcfsStatCpuParser"*)* @_ZN7content19ProcfsStatCpuParserD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK7content19ProcfsStatCpuParser9CoreTimes15TimeUtilizationERKS1_(%"struct.content::ProcfsStatCpuParser::CoreTimes"* nocapture readonly, %"struct.content::ProcfsStatCpuParser::CoreTimes"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %0, i64 0, i32 0, i64 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %1, i64 0, i32 0, i64 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %68, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %0, i64 0, i32 0, i64 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %1, i64 0, i32 0, i64 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %68, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %0, i64 0, i32 0, i64 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %1, i64 0, i32 0, i64 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %68, label %20

20:                                               ; preds = %14
  %21 = sub i64 %4, %6
  %22 = uitofp i64 %21 to double
  %23 = sub i64 %10, %12
  %24 = uitofp i64 %23 to double
  %25 = fadd double %22, %24
  %26 = sub i64 %16, %18
  %27 = uitofp i64 %26 to double
  %28 = fadd double %25, %27
  %29 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %0, i64 0, i32 0, i64 3
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %1, i64 0, i32 0, i64 3
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %20
  %35 = sub i64 %30, %32
  %36 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %0, i64 0, i32 0, i64 5
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %1, i64 0, i32 0, i64 5
  %39 = load i64, i64* %38, align 8
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %68, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %0, i64 0, i32 0, i64 6
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %1, i64 0, i32 0, i64 6
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %68, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %0, i64 0, i32 0, i64 7
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %1, i64 0, i32 0, i64 7
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %49, %51
  br i1 %52, label %68, label %53

53:                                               ; preds = %47
  %54 = sub i64 %37, %39
  %55 = uitofp i64 %54 to double
  %56 = fadd double %28, %55
  %57 = sub i64 %43, %45
  %58 = uitofp i64 %57 to double
  %59 = fadd double %56, %58
  %60 = sub i64 %49, %51
  %61 = uitofp i64 %60 to double
  %62 = fadd double %59, %61
  %63 = uitofp i64 %35 to double
  %64 = fadd double %62, %63
  %65 = fcmp oeq double %64, 0.000000e+00
  %66 = fdiv double %62, %64
  %67 = select i1 %65, double -1.000000e+00, double %66
  br label %68

68:                                               ; preds = %8, %14, %20, %53, %47, %41, %34, %2
  %69 = phi double [ -1.000000e+00, %2 ], [ -1.000000e+00, %8 ], [ -1.000000e+00, %14 ], [ -1.000000e+00, %20 ], [ -1.000000e+00, %34 ], [ -1.000000e+00, %41 ], [ -1.000000e+00, %47 ], [ %67, %53 ]
  ret double %69
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ProcfsStatCpuParserC2EN4base8FilePathE(%"class.content::ProcfsStatCpuParser"*, %"class.base::FilePath"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.content::ProcfsStatCpuParser", %"class.content::ProcfsStatCpuParser"* %0, i64 0, i32 0
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %3, %"class.base::FilePath"* dereferenceable(24) %1) #10
  %4 = getelementptr inbounds %"class.content::ProcfsStatCpuParser", %"class.content::ProcfsStatCpuParser"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = tail call i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() #10
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.content::ProcfsStatCpuParser", %"class.content::ProcfsStatCpuParser"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %4 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 80
  %15 = icmp ult i64 %14, %7
  br i1 %15, label %16, label %43

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.content::ProcfsStatCpuParser", %"class.content::ProcfsStatCpuParser"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %17 to i64*
  %19 = icmp slt i32 %6, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @abort() #11
  unreachable

21:                                               ; preds = %16
  %22 = load i64, i64* %18, align 8
  %23 = sub i64 %22, %12
  %24 = sdiv exact i64 %23, 80
  %25 = mul nsw i64 %7, 80
  %26 = tail call i8* @_Znwm(i64 %25) #12
  %27 = bitcast i8* %26 to %"struct.content::ProcfsStatCpuParser::CoreTimes"*
  %28 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %27, i64 %24
  %29 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %28 to i64
  %30 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %27, i64 %7
  %31 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %30 to i64
  %32 = sdiv exact i64 %23, -80
  %33 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %28, i64 %32
  %34 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %33 to i64
  %35 = icmp sgt i64 %23, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %21
  %37 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %33 to i8*
  %38 = inttoptr i64 %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 %23, i1 false) #10
  br label %39

39:                                               ; preds = %36, %21
  store i64 %34, i64* %11, align 8
  store i64 %29, i64* %18, align 8
  store i64 %31, i64* %9, align 8
  %40 = icmp eq i64 %12, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %2, %39, %41
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #3

declare i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ProcfsStatCpuParserD2Ev(%"class.content::ProcfsStatCpuParser"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.content::ProcfsStatCpuParser", %"class.content::ProcfsStatCpuParser"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %2, align 8
  %4 = icmp eq %"struct.content::ProcfsStatCpuParser::CoreTimes"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %3 to i64
  %7 = getelementptr inbounds %"class.content::ProcfsStatCpuParser", %"class.content::ProcfsStatCpuParser"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.content::ProcfsStatCpuParser", %"class.content::ProcfsStatCpuParser"* %0, i64 0, i32 0
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %11) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content19ProcfsStatCpuParser6UpdateEv(%"class.content::ProcfsStatCpuParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::vector.6", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.content::ProcfsStatCpuParser", %"class.content::ProcfsStatCpuParser"* %0, i64 0, i32 0
  %7 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24) %6, %"class.std::__1::basic_string"* nonnull %2) #10
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %78

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %3, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = bitcast %"class.std::__1::vector.6"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load i8, i8* %16, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i8*, i8** %5, align 8
  %21 = select i1 %19, i8* %20, i8* %4
  %22 = load i64, i64* %11, align 8
  %23 = zext i8 %18 to i64
  %24 = select i1 %19, i64 %22, i64 %23
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.6"* nonnull sret %3, i8* %21, i64 %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 0, i32 0) #10
  %25 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %13, align 8
  %26 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %14, align 8
  %27 = icmp eq %"class.base::BasicStringPiece"* %25, %26
  br i1 %27, label %36, label %28

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.content::ProcfsStatCpuParser", %"class.content::ProcfsStatCpuParser"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"class.content::ProcfsStatCpuParser", %"class.content::ProcfsStatCpuParser"* %0, i64 0, i32 1, i32 0, i32 1
  %31 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %30 to i64*
  %32 = bitcast %"class.std::__1::vector"* %29 to i64*
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 0
  br label %44

34:                                               ; preds = %75
  %35 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %13, align 8
  br label %36

36:                                               ; preds = %34, %10
  %37 = phi %"class.base::BasicStringPiece"* [ %35, %34 ], [ %25, %10 ]
  %38 = icmp eq %"class.base::BasicStringPiece"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = ptrtoint %"class.base::BasicStringPiece"* %37 to i64
  %41 = bitcast %"class.base::BasicStringPiece"** %14 to i64*
  store i64 %40, i64* %41, align 8
  %42 = bitcast %"class.base::BasicStringPiece"* %37 to i8*
  call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %78

44:                                               ; preds = %28, %75
  %45 = phi %"class.base::BasicStringPiece"* [ %25, %28 ], [ %76, %75 ]
  %46 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = call i32 @_ZN7content19ProcfsStatCpuParser14CoreIdFromLineEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %47, i64 %49)
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %75, label %52

52:                                               ; preds = %44
  %53 = load i64, i64* %31, align 8
  %54 = load i64, i64* %32, align 8
  %55 = sub i64 %53, %54
  %56 = sdiv exact i64 %55, 80
  %57 = trunc i64 %56 to i32
  %58 = icmp slt i32 %50, %57
  %59 = inttoptr i64 %54 to %"struct.content::ProcfsStatCpuParser::CoreTimes"*
  br i1 %58, label %71, label %60

60:                                               ; preds = %52
  %61 = add nuw nsw i32 %50, 1
  %62 = sext i32 %61 to i64
  %63 = icmp ult i64 %56, %62
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = sub nsw i64 %62, %56
  call void @_ZNSt3__16vectorIN7content19ProcfsStatCpuParser9CoreTimesENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector"* %29, i64 %65) #10
  %66 = load %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %33, align 8
  br label %71

67:                                               ; preds = %60
  %68 = icmp ugt i64 %56, %62
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %59, i64 %62
  store %"struct.content::ProcfsStatCpuParser::CoreTimes"* %70, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %30, align 8
  br label %71

71:                                               ; preds = %69, %67, %64, %52
  %72 = phi %"struct.content::ProcfsStatCpuParser::CoreTimes"* [ %59, %69 ], [ %59, %67 ], [ %66, %64 ], [ %59, %52 ]
  %73 = sext i32 %50 to i64
  %74 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %72, i64 %73
  call void @_ZN7content19ProcfsStatCpuParser10UpdateCoreEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERNS0_9CoreTimesE(i8* %47, i64 %49, %"struct.content::ProcfsStatCpuParser::CoreTimes"* dereferenceable(80) %74)
  br label %75

75:                                               ; preds = %44, %71
  %76 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %45, i64 1
  %77 = icmp eq %"class.base::BasicStringPiece"* %76, %26
  br i1 %77, label %34, label %44

78:                                               ; preds = %8, %43
  %79 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %9, %8 ], [ %15, %43 ]
  %80 = phi i1 [ false, %8 ], [ true, %43 ]
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %78
  %85 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %78, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret i1 %80
}

declare zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.6"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content19ProcfsStatCpuParser14CoreIdFromLineEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  store i64 %1, i64* %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %41, label %8

8:                                                ; preds = %2
  %9 = tail call i8* @memchr(i8* %0, i32 32, i64 %1) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %41, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i8* %9 to i64
  %13 = ptrtoint i8* %0 to i64
  %14 = sub i64 %12, %13
  %15 = add i64 %14, 1
  %16 = icmp ult i64 %15, 5
  br i1 %16, label %41, label %17

17:                                               ; preds = %11
  %18 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %3, i64 0) #10
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 99
  br i1 %20, label %21, label %41

21:                                               ; preds = %17
  %22 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %3, i64 1) #10
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 112
  br i1 %24, label %25, label %41

25:                                               ; preds = %21
  %26 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %3, i64 2) #10
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 117
  br i1 %28, label %29, label %41

29:                                               ; preds = %25
  %30 = add i64 %14, -3
  %31 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %3, i64 3, i64 %30)
  %32 = extractvalue { i8*, i64 } %31, 0
  %33 = extractvalue { i8*, i64 } %31, 1
  %34 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #10
  store i32 -1431655766, i32* %4, align 4
  %35 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %32, i64 %33, i32* nonnull %4) #10
  %36 = xor i1 %35, true
  %37 = load i32, i32* %4, align 4
  %38 = icmp slt i32 %37, 0
  %39 = or i1 %38, %36
  %40 = select i1 %39, i32 -1, i32 %37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #10
  br label %41

41:                                               ; preds = %29, %25, %21, %17, %8, %2, %11
  %42 = phi i32 [ -1, %11 ], [ %40, %29 ], [ -1, %25 ], [ -1, %21 ], [ -1, %17 ], [ -1, %2 ], [ -1, %8 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19ProcfsStatCpuParser10UpdateCoreEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERNS0_9CoreTimesE(i8*, i64, %"struct.content::ProcfsStatCpuParser::CoreTimes"* nocapture dereferenceable(80)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::vector.6", align 8
  %5 = alloca i64, align 8
  %6 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.6"* nonnull sret %4, i8* %0, i64 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1, i32 0, i32 0) #10
  %10 = bitcast %"class.base::BasicStringPiece"** %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.6"* %4 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 4
  %16 = icmp ult i64 %15, 11
  %17 = inttoptr i64 %13 to %"class.base::BasicStringPiece"*
  br i1 %16, label %46, label %18

18:                                               ; preds = %3
  %19 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  store i64 -6148914691236517206, i64* %5, align 8
  %20 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 1, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 1, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = call zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8* %21, i64 %23, i64* nonnull %5) #10
  br i1 %24, label %26, label %25

25:                                               ; preds = %36, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  br label %44

26:                                               ; preds = %18, %36
  %27 = phi i64 [ %38, %36 ], [ 1, %18 ]
  %28 = phi i64 [ %27, %36 ], [ 0, %18 ]
  %29 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %2, i64 0, i32 0, i64 %28
  %30 = load i64, i64* %29, align 8
  %31 = load i64, i64* %5, align 8
  %32 = icmp ult i64 %30, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  store i64 %31, i64* %29, align 8
  br label %34

34:                                               ; preds = %26, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %35 = icmp eq i64 %27, 10
  br i1 %35, label %44, label %36

36:                                               ; preds = %34
  %37 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  store i64 -6148914691236517206, i64* %5, align 8
  %38 = add nuw nsw i64 %27, 1
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 %38, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %37, i64 %38, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = call zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8* %40, i64 %42, i64* nonnull %5) #10
  br i1 %43, label %26, label %25

44:                                               ; preds = %34, %25
  %45 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %7, align 8
  br label %46

46:                                               ; preds = %44, %3
  %47 = phi %"class.base::BasicStringPiece"* [ %45, %44 ], [ %17, %3 ]
  %48 = icmp eq %"class.base::BasicStringPiece"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %46
  %50 = ptrtoint %"class.base::BasicStringPiece"* %47 to i64
  store i64 %50, i64* %10, align 8
  %51 = bitcast %"class.base::BasicStringPiece"* %47 to i8*
  call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %46, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #2 align 2

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #4

declare zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8*, i64, i64*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #2 align 2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7content19ProcfsStatCpuParser9CoreTimesENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 80
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.content::ProcfsStatCpuParser::CoreTimes"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %13, i64 %18, i32 0, i64 0
  %20 = bitcast i64* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 80
  %25 = add i64 %23, 80
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #10
  %27 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 80
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 230584300921369395
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #11
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 80
  %42 = icmp ult i64 %41, 115292150460684697
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 230584300921369395, %39 ]
  %50 = mul i64 %49, 80
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to %"struct.content::ProcfsStatCpuParser::CoreTimes"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.content::ProcfsStatCpuParser::CoreTimes"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %55, i64 %34
  %57 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %56 to i8*
  %58 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %56, i64 %1
  %60 = mul nsw i64 %1, 80
  %61 = add i64 %60, -80
  %62 = urem i64 %61, 80
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %58 to i64
  %66 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %68 = load %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -80
  %73 = getelementptr inbounds %"struct.content::ProcfsStatCpuParser::CoreTimes", %"struct.content::ProcfsStatCpuParser::CoreTimes"* %56, i64 %72
  %74 = ptrtoint %"struct.content::ProcfsStatCpuParser::CoreTimes"* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %73 to i8*
  %78 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 %71, i1 false) #10
  %79 = load %"struct.content::ProcfsStatCpuParser::CoreTimes"*, %"struct.content::ProcfsStatCpuParser::CoreTimes"** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %"struct.content::ProcfsStatCpuParser::CoreTimes"* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %"struct.content::ProcfsStatCpuParser::CoreTimes"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %"struct.content::ProcfsStatCpuParser::CoreTimes"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
