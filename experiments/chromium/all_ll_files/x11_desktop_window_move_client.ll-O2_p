; ModuleID = '../../ui/base/x/x11_desktop_window_move_client.cc'
source_filename = "../../ui/base/x/x11_desktop_window_move_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::X11DesktopWindowMoveClient::Delegate" = type { i32 (...)** }
%"class.ui::X11DesktopWindowMoveClient" = type { %"class.ui::X11MoveLoopDelegate", %"class.ui::X11WholeScreenMoveLoop", %"class.ui::X11DesktopWindowMoveClient::Delegate"*, %"class.gfx::Vector2d" }
%"class.ui::X11MoveLoopDelegate" = type { i32 (...)** }
%"class.ui::X11WholeScreenMoveLoop" = type { %"class.ui::X11MoveLoop", %"class.ui::PlatformEventDispatcher", %"class.ui::X11MoveLoopDelegate"*, i8, %"class.std::__1::unique_ptr", %class.scoped_refptr, i32, %"class.std::__1::unique_ptr.4", i8, %"class.base::OnceCallback.10", i8, %"class.std::__1::unique_ptr.13", %"class.base::WeakPtrFactory" }
%"class.ui::X11MoveLoop" = type { i32 (...)** }
%"class.ui::PlatformEventDispatcher" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::ScopedEventDispatcher"* }
%"class.ui::ScopedEventDispatcher" = type opaque
%class.scoped_refptr = type { %"class.ui::X11Cursor"* }
%"class.ui::X11Cursor" = type { %"class.ui::PlatformCursor.base", i8, i32, %"class.std::__1::vector" }
%"class.ui::PlatformCursor.base" = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::OnceCallback"* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.x11::XScopedEventSelector"* }
%"class.x11::XScopedEventSelector" = type opaque
%"class.base::OnceCallback.10" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.ui::MouseEvent"* }
%"class.ui::MouseEvent" = type { %"class.ui::LocatedEvent", i32, %"class.gfx::Vector2dF", %"struct.ui::PointerDetails" }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.23" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.16" }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.18" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::pair"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::flat_map.26"* }
%"class.base::flat_map.26" = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.ui::PointerDetails" = type { i32, float, float, float, float, float, float, float, i32, %"class.gfx::Vector2d" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.33 }
%class.scoped_refptr.33 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.34", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }

@_ZTVN2ui26X11DesktopWindowMoveClientE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::X11DesktopWindowMoveClient"*)* @_ZN2ui26X11DesktopWindowMoveClientD2Ev to i8*), i8* bitcast (void (%"class.ui::X11DesktopWindowMoveClient"*)* @_ZN2ui26X11DesktopWindowMoveClientD0Ev to i8*), i8* bitcast (void (%"class.ui::X11DesktopWindowMoveClient"*, %"class.gfx::Point"*, i32, i64)* @_ZN2ui26X11DesktopWindowMoveClient15OnMouseMovementERKN3gfx5PointEiN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.ui::X11DesktopWindowMoveClient"*)* @_ZN2ui26X11DesktopWindowMoveClient15OnMouseReleasedEv to i8*), i8* bitcast (void (%"class.ui::X11DesktopWindowMoveClient"*)* @_ZN2ui26X11DesktopWindowMoveClient15OnMoveLoopEndedEv to i8*)] }, align 8
@_ZTVN2ui26X11DesktopWindowMoveClient8DelegateE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)* @_ZN2ui26X11DesktopWindowMoveClient8DelegateD2Ev to i8*), i8* bitcast (void (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)* @_ZN2ui26X11DesktopWindowMoveClient8DelegateD0Ev to i8*)] }, align 8

@_ZN2ui26X11DesktopWindowMoveClient8DelegateD1Ev = hidden unnamed_addr alias void (%"class.ui::X11DesktopWindowMoveClient::Delegate"*), void (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)* @_ZN2ui26X11DesktopWindowMoveClient8DelegateD2Ev
@_ZN2ui26X11DesktopWindowMoveClientC1EPNS0_8DelegateE = hidden unnamed_addr alias void (%"class.ui::X11DesktopWindowMoveClient"*, %"class.ui::X11DesktopWindowMoveClient::Delegate"*), void (%"class.ui::X11DesktopWindowMoveClient"*, %"class.ui::X11DesktopWindowMoveClient::Delegate"*)* @_ZN2ui26X11DesktopWindowMoveClientC2EPNS0_8DelegateE
@_ZN2ui26X11DesktopWindowMoveClientD1Ev = hidden unnamed_addr alias void (%"class.ui::X11DesktopWindowMoveClient"*), void (%"class.ui::X11DesktopWindowMoveClient"*)* @_ZN2ui26X11DesktopWindowMoveClientD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui26X11DesktopWindowMoveClient8DelegateD2Ev(%"class.ui::X11DesktopWindowMoveClient::Delegate"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2ui26X11DesktopWindowMoveClient8DelegateD0Ev(%"class.ui::X11DesktopWindowMoveClient::Delegate"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11DesktopWindowMoveClientC2EPNS0_8DelegateE(%"class.ui::X11DesktopWindowMoveClient"*, %"class.ui::X11DesktopWindowMoveClient::Delegate"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2ui26X11DesktopWindowMoveClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 1
  tail call void @_ZN2ui22X11WholeScreenMoveLoopC1EPNS_19X11MoveLoopDelegateE(%"class.ui::X11WholeScreenMoveLoop"* %5, %"class.ui::X11MoveLoopDelegate"* %3) #10
  %6 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 2
  store %"class.ui::X11DesktopWindowMoveClient::Delegate"* %1, %"class.ui::X11DesktopWindowMoveClient::Delegate"** %6, align 8
  %7 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 3, i32 1
  store i32 0, i32* %8, align 4
  ret void
}

declare void @_ZN2ui22X11WholeScreenMoveLoopC1EPNS_19X11MoveLoopDelegateE(%"class.ui::X11WholeScreenMoveLoop"*, %"class.ui::X11MoveLoopDelegate"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11DesktopWindowMoveClientD2Ev(%"class.ui::X11DesktopWindowMoveClient"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2ui26X11DesktopWindowMoveClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 1
  tail call void @_ZN2ui22X11WholeScreenMoveLoopD1Ev(%"class.ui::X11WholeScreenMoveLoop"* %3) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui22X11WholeScreenMoveLoopD1Ev(%"class.ui::X11WholeScreenMoveLoop"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11DesktopWindowMoveClientD0Ev(%"class.ui::X11DesktopWindowMoveClient"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2ui26X11DesktopWindowMoveClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 1
  tail call void @_ZN2ui22X11WholeScreenMoveLoopD1Ev(%"class.ui::X11WholeScreenMoveLoop"* %3) #10
  %4 = bitcast %"class.ui::X11DesktopWindowMoveClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11DesktopWindowMoveClient15OnMouseMovementERKN3gfx5PointEiN4base9TimeTicksE(%"class.ui::X11DesktopWindowMoveClient"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8), i32, i64) unnamed_addr #3 align 2 {
  %5 = alloca %"class.gfx::Rect", align 8
  %6 = bitcast %"class.gfx::Point"* %1 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, -1
  %14 = select i1 %13, i32 -2147483648, i32 2147483647
  %15 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 %12) #10
  %16 = extractvalue { i32, i1 } %15, 1
  %17 = extractvalue { i32, i1 } %15, 0
  %18 = select i1 %16, i32 %14, i32 %17, !prof !2
  %19 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 3, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %20) #10
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !2
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  %29 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 2
  %30 = load %"class.ui::X11DesktopWindowMoveClient::Delegate"*, %"class.ui::X11DesktopWindowMoveClient::Delegate"** %29, align 8
  %31 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #10
  %32 = bitcast %"class.ui::X11DesktopWindowMoveClient::Delegate"* %30 to i64 (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)***
  %33 = load i64 (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)**, i64 (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)*, i64 (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)** %33, i64 2
  %35 = load i64 (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)*, i64 (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)** %34, align 8
  %36 = tail call i64 %35(%"class.ui::X11DesktopWindowMoveClient::Delegate"* %30) #10
  %37 = trunc i64 %36 to i32
  %38 = lshr i64 %36, 32
  %39 = trunc i64 %38 to i32
  %40 = bitcast %"class.gfx::Rect"* %5 to i64*
  %41 = zext i32 %18 to i64
  %42 = or i64 %28, %41
  store i64 %42, i64* %40, align 8
  %43 = icmp sgt i32 %18, 0
  %44 = icmp sgt i32 %37, 0
  %45 = and i1 %43, %44
  %46 = sub nuw nsw i32 2147483647, %18
  %47 = icmp ult i32 %46, %37
  %48 = and i1 %47, %45
  %49 = select i1 %48, i32 %46, i32 %37
  %50 = icmp sgt i32 %26, 0
  %51 = icmp sgt i32 %39, 0
  %52 = and i1 %50, %51
  %53 = sub nuw nsw i32 2147483647, %26
  %54 = icmp ult i32 %53, %39
  %55 = and i1 %54, %52
  %56 = select i1 %55, i32 %53, i32 %39
  %57 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 0
  %58 = icmp sgt i32 %49, 0
  %59 = select i1 %58, i32 %49, i32 0
  store i32 %59, i32* %57, align 8
  %60 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  %61 = icmp sgt i32 %56, 0
  %62 = select i1 %61, i32 %56, i32 0
  store i32 %62, i32* %60, align 4
  %63 = bitcast %"class.ui::X11DesktopWindowMoveClient::Delegate"* %30 to void (%"class.ui::X11DesktopWindowMoveClient::Delegate"*, %"class.gfx::Rect"*)***
  %64 = load void (%"class.ui::X11DesktopWindowMoveClient::Delegate"*, %"class.gfx::Rect"*)**, void (%"class.ui::X11DesktopWindowMoveClient::Delegate"*, %"class.gfx::Rect"*)*** %63, align 8
  %65 = load void (%"class.ui::X11DesktopWindowMoveClient::Delegate"*, %"class.gfx::Rect"*)*, void (%"class.ui::X11DesktopWindowMoveClient::Delegate"*, %"class.gfx::Rect"*)** %64, align 8
  call void %65(%"class.ui::X11DesktopWindowMoveClient::Delegate"* %30, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11DesktopWindowMoveClient15OnMouseReleasedEv(%"class.ui::X11DesktopWindowMoveClient"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 1
  tail call void @_ZN2ui22X11WholeScreenMoveLoop11EndMoveLoopEv(%"class.ui::X11WholeScreenMoveLoop"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui26X11DesktopWindowMoveClient11EndMoveLoopEv(%"class.ui::X11DesktopWindowMoveClient"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 1
  tail call void @_ZN2ui22X11WholeScreenMoveLoop11EndMoveLoopEv(%"class.ui::X11WholeScreenMoveLoop"* %2) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2ui26X11DesktopWindowMoveClient15OnMoveLoopEndedEv(%"class.ui::X11DesktopWindowMoveClient"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui26X11DesktopWindowMoveClient11RunMoveLoopEbRKN3gfx8Vector2dE(%"class.ui::X11DesktopWindowMoveClient"*, i1 zeroext, %"class.gfx::Vector2d"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 3
  %5 = bitcast %"class.gfx::Vector2d"* %2 to i64*
  %6 = bitcast %"class.gfx::Vector2d"* %4 to i64*
  %7 = load i64, i64* %5, align 4
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.ui::X11DesktopWindowMoveClient", %"class.ui::X11DesktopWindowMoveClient"* %0, i64 0, i32 2
  %10 = load %"class.ui::X11DesktopWindowMoveClient::Delegate"*, %"class.ui::X11DesktopWindowMoveClient::Delegate"** %9, align 8
  %11 = bitcast %"class.ui::X11DesktopWindowMoveClient::Delegate"* %10 to %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)***
  %12 = load %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)**, %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)*, %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)** %12, i64 1
  %14 = load %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)*, %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)** %13, align 8
  %15 = tail call %"class.ui::X11Cursor"* %14(%"class.ui::X11DesktopWindowMoveClient::Delegate"* %10) #10
  %16 = load %"class.ui::X11DesktopWindowMoveClient::Delegate"*, %"class.ui::X11DesktopWindowMoveClient::Delegate"** %9, align 8
  %17 = bitcast %"class.ui::X11DesktopWindowMoveClient::Delegate"* %16 to %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)***
  %18 = load %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)**, %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)*, %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)** %18, i64 1
  %20 = load %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)*, %"class.ui::X11Cursor"* (%"class.ui::X11DesktopWindowMoveClient::Delegate"*)** %19, align 8
  %21 = tail call %"class.ui::X11Cursor"* %20(%"class.ui::X11DesktopWindowMoveClient::Delegate"* %16) #10
  %22 = tail call zeroext i1 @_ZN2ui22X11WholeScreenMoveLoop11RunMoveLoopEb13scoped_refptrINS_9X11CursorEES3_(%"class.ui::X11WholeScreenMoveLoop"* %8, i1 zeroext %1, %"class.ui::X11Cursor"* %15, %"class.ui::X11Cursor"* %21) #10
  ret i1 %22
}

declare zeroext i1 @_ZN2ui22X11WholeScreenMoveLoop11RunMoveLoopEb13scoped_refptrINS_9X11CursorEES3_(%"class.ui::X11WholeScreenMoveLoop"*, i1 zeroext, %"class.ui::X11Cursor"*, %"class.ui::X11Cursor"*) unnamed_addr #4

declare void @_ZN2ui22X11WholeScreenMoveLoop11EndMoveLoopEv(%"class.ui::X11WholeScreenMoveLoop"*) unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
