; ModuleID = '../../components/autofill/core/browser/payments/payments_service_url.cc'
source_filename = "../../components/autofill/core/browser/payments/payments_service_url.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.GURL* }

@_ZN8autofill8switches24kWalletServiceUseSandboxE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i8] c"1\00", align 1
@_ZN8autofill12_GLOBAL__N_123kProdPaymentsServiceUrlE = internal constant [29 x i8] c"https://payments.google.com/\00", align 16
@_ZN8autofill12_GLOBAL__N_132kSandboxPaymentsSecureServiceUrlE = internal constant [37 x i8] c"https://payments.sandbox.google.com/\00", align 16
@_ZN8autofill12_GLOBAL__N_127kProdPaymentsManageCardsUrlE = internal constant [119 x i8] c"https://pay.google.com/payments/home?utm_source=chrome&utm_medium=settings&utm_campaign=payment-methods#paymentMethods\00", align 16
@_ZN8autofill12_GLOBAL__N_130kSandboxPaymentsManageCardsUrlE = internal constant [127 x i8] c"https://pay.sandbox.google.com/payments/home?utm_source=chrome&utm_medium=settings&utm_campaign=payment-methods#paymentMethods\00", align 16

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill8payments27IsPaymentsProductionEnabledEv() local_unnamed_addr #0 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #5
  %3 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #5
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  %7 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8autofill8switches24kWalletServiceUseSandboxE, i64 0, i64 0)) #5
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %1, %"class.base::CommandLine"* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8autofill8switches24kWalletServiceUseSandboxE, i64 0, i64 0), i64 %7) #5
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = load i64, i64* %5, align 8
  %13 = zext i8 %10 to i64
  %14 = select i1 %11, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %20

16:                                               ; preds = %0
  %17 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %1, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #5
  %18 = icmp ne i32 %17, 0
  %19 = load i8, i8* %9, align 1
  br label %20

20:                                               ; preds = %0, %16
  %21 = phi i8 [ %19, %16 ], [ %10, %0 ]
  %22 = phi i1 [ %18, %16 ], [ true, %0 ]
  %23 = icmp slt i8 %21, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = load i8*, i8** %4, align 8
  call void @_ZdlPv(i8* %25) #6
  br label %26

26:                                               ; preds = %20, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #5
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill8payments16GetBaseSecureUrlEv(%class.GURL* noalias sret) local_unnamed_addr #0 {
  %2 = tail call zeroext i1 @_ZN8autofill8payments27IsPaymentsProductionEnabledEv()
  %3 = select i1 %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN8autofill12_GLOBAL__N_123kProdPaymentsServiceUrlE, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_ZN8autofill12_GLOBAL__N_132kSandboxPaymentsSecureServiceUrlE, i64 0, i64 0)
  %4 = select i1 %2, i64 28, i64 36
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* %3, i64 %4) #5
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill8payments23GetManageInstrumentsUrlEv(%class.GURL* noalias sret) local_unnamed_addr #0 {
  %2 = tail call zeroext i1 @_ZN8autofill8payments27IsPaymentsProductionEnabledEv()
  %3 = select i1 %2, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @_ZN8autofill12_GLOBAL__N_127kProdPaymentsManageCardsUrlE, i64 0, i64 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @_ZN8autofill12_GLOBAL__N_130kSandboxPaymentsManageCardsUrlE, i64 0, i64 0)
  %4 = select i1 %2, i64 118, i64 126
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* %3, i64 %4) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill8payments21GetManageAddressesUrlEv(%class.GURL* noalias sret) local_unnamed_addr #0 {
  %2 = tail call zeroext i1 @_ZN8autofill8payments27IsPaymentsProductionEnabledEv() #5, !noalias !2
  %3 = select i1 %2, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @_ZN8autofill12_GLOBAL__N_127kProdPaymentsManageCardsUrlE, i64 0, i64 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @_ZN8autofill12_GLOBAL__N_130kSandboxPaymentsManageCardsUrlE, i64 0, i64 0)
  %4 = select i1 %2, i64 118, i64 126
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* %3, i64 %4) #5
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8autofill8payments23GetManageInstrumentsUrlEv: argument 0"}
!4 = distinct !{!4, !"_ZN8autofill8payments23GetManageInstrumentsUrlEv"}
