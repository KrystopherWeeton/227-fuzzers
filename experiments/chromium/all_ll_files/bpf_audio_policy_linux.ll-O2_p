; ModuleID = '../../sandbox/policy/linux/bpf_audio_policy_linux.cc'
source_filename = "../../sandbox/policy/linux/bpf_audio_policy_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.sandbox::policy::AudioProcessPolicy" = type { %"class.sandbox::policy::BPFBasePolicy" }
%"class.sandbox::policy::BPFBasePolicy" = type { %"class.sandbox::bpf_dsl::Policy", %"class.std::__1::unique_ptr" }
%"class.sandbox::bpf_dsl::Policy" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sandbox::BaselinePolicy"* }
%"class.sandbox::BaselinePolicy" = type { %"class.sandbox::bpf_dsl::Policy", i32, i32 }
%"class.sandbox::bpf_dsl::internal::ResultExprImpl" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr" = type { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* }
%"class.sandbox::bpf_dsl::Elser" = type { %"class.std::__1::shared_ptr.1" }
%"class.std::__1::shared_ptr.1" = type { %"class.sandbox::cons::Cell"*, %"class.std::__1::__shared_weak_count"* }
%"class.sandbox::cons::Cell" = type opaque
%"class.sandbox::bpf_dsl::Caser" = type { %"class.sandbox::bpf_dsl::Arg", %"class.sandbox::bpf_dsl::Elser" }
%"class.sandbox::bpf_dsl::Arg" = type { i32, i64 }
%"class.sandbox::bpf_dsl::internal::BoolExprImpl" = type opaque
%"class.sandbox::policy::SandboxLinux" = type { i32, i8, i32, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.3", %"class.sandbox::syscall_broker::BrokerProcess"* }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.sandbox::SetuidSandboxClient"* }
%"class.sandbox::SetuidSandboxClient" = type opaque
%"class.sandbox::syscall_broker::BrokerProcess" = type { i8, i32, i32, i8, i8, %"class.std::__1::bitset", %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.std::__1::unique_ptr.17" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.sandbox::syscall_broker::BrokerPermissionList" = type { i32, %"class.std::__1::vector", %"class.sandbox::syscall_broker::BrokerFilePermission"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.sandbox::syscall_broker::BrokerFilePermission"* }
%"class.sandbox::syscall_broker::BrokerFilePermission" = type <{ %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.sandbox::syscall_broker::BrokerClient"* }
%"class.sandbox::syscall_broker::BrokerClient" = type opaque
%"class.std::__1::shared_ptr.2" = type { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* }

$_ZNK7sandbox7bpf_dsl5CaserIiE9CasesImplIJiiiiiiEEES2_NSt3__110shared_ptrIKNS0_8internal14ResultExprImplEEEDpRKT_ = comdat any

@_ZTVN7sandbox6policy18AudioProcessPolicyE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sandbox::policy::AudioProcessPolicy"*)* @_ZN7sandbox6policy18AudioProcessPolicyD2Ev to i8*), i8* bitcast (void (%"class.sandbox::policy::AudioProcessPolicy"*)* @_ZN7sandbox6policy18AudioProcessPolicyD0Ev to i8*), i8* bitcast ({ %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } (%"class.sandbox::policy::AudioProcessPolicy"*, i32)* @_ZNK7sandbox6policy18AudioProcessPolicy15EvaluateSyscallEi to i8*), i8* bitcast ({ %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } (%"class.sandbox::policy::BPFBasePolicy"*)* @_ZNK7sandbox6policy13BPFBasePolicy14InvalidSyscallEv to i8*)] }, align 8

@_ZN7sandbox6policy18AudioProcessPolicyC1Ev = hidden unnamed_addr alias void (%"class.sandbox::policy::AudioProcessPolicy"*), void (%"class.sandbox::policy::AudioProcessPolicy"*)* @_ZN7sandbox6policy18AudioProcessPolicyC2Ev
@_ZN7sandbox6policy18AudioProcessPolicyD1Ev = hidden unnamed_addr alias void (%"class.sandbox::policy::AudioProcessPolicy"*), void (%"class.sandbox::policy::AudioProcessPolicy"*)* @_ZN7sandbox6policy18AudioProcessPolicyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy18AudioProcessPolicyC2Ev(%"class.sandbox::policy::AudioProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::AudioProcessPolicy", %"class.sandbox::policy::AudioProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy13BPFBasePolicyC2Ev(%"class.sandbox::policy::BPFBasePolicy"* %2) #5
  %3 = getelementptr inbounds %"class.sandbox::policy::AudioProcessPolicy", %"class.sandbox::policy::AudioProcessPolicy"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7sandbox6policy18AudioProcessPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN7sandbox6policy13BPFBasePolicyC2Ev(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7sandbox6policy13BPFBasePolicyD2Ev(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy18AudioProcessPolicyD2Ev(%"class.sandbox::policy::AudioProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::AudioProcessPolicy", %"class.sandbox::policy::AudioProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy13BPFBasePolicyD2Ev(%"class.sandbox::policy::BPFBasePolicy"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy18AudioProcessPolicyD0Ev(%"class.sandbox::policy::AudioProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::AudioProcessPolicy", %"class.sandbox::policy::AudioProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy13BPFBasePolicyD2Ev(%"class.sandbox::policy::BPFBasePolicy"* %2) #5
  %3 = bitcast %"class.sandbox::policy::AudioProcessPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy18AudioProcessPolicy15EvaluateSyscallEi(%"class.sandbox::policy::AudioProcessPolicy"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::shared_ptr", align 8
  %4 = alloca %"class.sandbox::bpf_dsl::Elser", align 8
  %5 = alloca %"class.sandbox::bpf_dsl::Caser", align 8
  %6 = alloca %"class.sandbox::bpf_dsl::Caser", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.sandbox::bpf_dsl::Elser", align 8
  %14 = alloca %"class.sandbox::bpf_dsl::Elser", align 8
  %15 = alloca %"class.sandbox::bpf_dsl::Elser", align 8
  switch i32 %1, label %86 [
    i32 42, label %16
    i32 77, label %16
    i32 285, label %16
    i32 78, label %16
    i32 52, label %16
    i32 55, label %16
    i32 51, label %16
    i32 16, label %16
    i32 18, label %16
    i32 144, label %16
    i32 54, label %16
    i32 63, label %16
    i32 202, label %20
    i32 62, label %46
    i32 41, label %71
  ]

16:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %17 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  %18 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %17, 0
  %19 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %17, 1
  br label %106

20:                                               ; preds = %2
  %21 = tail call i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64 4) #5
  %22 = bitcast %"class.sandbox::bpf_dsl::Caser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #5
  %23 = bitcast %"class.sandbox::bpf_dsl::Caser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #5
  %24 = and i64 %21, -129
  %25 = bitcast %"class.sandbox::bpf_dsl::Elser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25)
  call void @_ZN7sandbox7bpf_dsl5ElserC1ENSt3__110shared_ptrIKNS_4cons4CellINS2_4pairINS3_IKNS0_8internal12BoolExprImplEEENS3_IKNS7_14ResultExprImplEEEEEEEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull %4, %"class.sandbox::cons::Cell"* null, %"class.std::__1::__shared_weak_count"* null) #5, !noalias !2
  %26 = getelementptr inbounds %"class.sandbox::bpf_dsl::Caser", %"class.sandbox::bpf_dsl::Caser"* %6, i64 0, i32 0, i32 0
  store i32 1, i32* %26, align 8, !alias.scope !2
  %27 = getelementptr inbounds %"class.sandbox::bpf_dsl::Caser", %"class.sandbox::bpf_dsl::Caser"* %6, i64 0, i32 0, i32 1
  store i64 %24, i64* %27, align 8, !alias.scope !2
  %28 = getelementptr inbounds %"class.sandbox::bpf_dsl::Caser", %"class.sandbox::bpf_dsl::Caser"* %6, i64 0, i32 1
  call void @_ZN7sandbox7bpf_dsl5ElserC1ERKS1_(%"class.sandbox::bpf_dsl::Elser"* %28, %"class.sandbox::bpf_dsl::Elser"* nonnull dereferenceable(16) %4) #5
  call void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25)
  %29 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  %30 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %29, 0
  %31 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %29, 1
  %32 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #5
  store i32 4, i32* %7, align 4
  %33 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #5
  store i32 6, i32* %8, align 4
  %34 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #5
  store i32 7, i32* %9, align 4
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #5
  store i32 0, i32* %10, align 4
  %36 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #5
  store i32 9, i32* %11, align 4
  %37 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #5
  store i32 1, i32* %12, align 4
  call void @_ZNK7sandbox7bpf_dsl5CaserIiE9CasesImplIJiiiiiiEEES2_NSt3__110shared_ptrIKNS0_8internal14ResultExprImplEEEDpRKT_(%"class.sandbox::bpf_dsl::Caser"* nonnull sret %5, %"class.sandbox::bpf_dsl::Caser"* nonnull %6, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %30, %"class.std::__1::__shared_weak_count"* %31, i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10, i32* nonnull dereferenceable(4) %11, i32* nonnull dereferenceable(4) %12)
  %38 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5ErrorEi(i32 1) #5
  %39 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %38, 0
  %40 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %38, 1
  %41 = bitcast %"class.std::__1::shared_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  %42 = getelementptr inbounds %"class.sandbox::bpf_dsl::Caser", %"class.sandbox::bpf_dsl::Caser"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 16, i1 false) #5
  %43 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox7bpf_dsl5Elser4ElseENSt3__110shared_ptrIKNS0_8internal14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* %42, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %39, %"class.std::__1::__shared_weak_count"* %40) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal14ResultExprImplEED1Ev(%"class.std::__1::shared_ptr"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  %44 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %43, 0
  %45 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %43, 1
  call void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"* %42) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #5
  call void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"* %28) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #5
  br label %106

46:                                               ; preds = %2
  %47 = tail call i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64 4) #5
  %48 = tail call i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64 4) #5
  %49 = bitcast %"class.sandbox::bpf_dsl::Elser"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #5
  %50 = bitcast %"class.sandbox::bpf_dsl::Elser"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #5
  %51 = tail call i32 @_ZN7sandbox10sys_getpidEv() #5
  %52 = zext i32 %51 to i64
  %53 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 0, i64 4, i64 %47, i64 %52) #5
  %54 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %53, 0
  %55 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %53, 1
  %56 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  %57 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %56, 0
  %58 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %56, 1
  call void @_ZN7sandbox7bpf_dsl2IfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEENS2_IKNS3_14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull sret %14, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %54, %"class.std::__1::__shared_weak_count"* %55, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %57, %"class.std::__1::__shared_weak_count"* %58) #5
  %59 = call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 1, i64 4, i64 %48, i64 0) #5
  %60 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %59, 0
  %61 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %59, 1
  %62 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5ErrorEi(i32 1) #5
  %63 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %62, 0
  %64 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %62, 1
  call void @_ZNK7sandbox7bpf_dsl5Elser6ElseIfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEENS3_IKNS4_14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull sret %13, %"class.sandbox::bpf_dsl::Elser"* nonnull %14, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %60, %"class.std::__1::__shared_weak_count"* %61, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %63, %"class.std::__1::__shared_weak_count"* %64) #5
  %65 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox15CrashSIGSYSKillEv() #5
  %66 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %65, 0
  %67 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %65, 1
  %68 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox7bpf_dsl5Elser4ElseENSt3__110shared_ptrIKNS0_8internal14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull %13, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %66, %"class.std::__1::__shared_weak_count"* %67) #5
  %69 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %68, 0
  %70 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %68, 1
  call void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"* nonnull %13) #5
  call void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #5
  br label %106

71:                                               ; preds = %2
  %72 = tail call i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64 4) #5
  %73 = bitcast %"class.sandbox::bpf_dsl::Elser"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #5
  %74 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 0, i64 4, i64 %72, i64 1) #5
  %75 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %74, 0
  %76 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %74, 1
  %77 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  %78 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %77, 0
  %79 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %77, 1
  call void @_ZN7sandbox7bpf_dsl2IfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEENS2_IKNS3_14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull sret %15, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %75, %"class.std::__1::__shared_weak_count"* %76, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %78, %"class.std::__1::__shared_weak_count"* %79) #5
  %80 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5ErrorEi(i32 1) #5
  %81 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %80, 0
  %82 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %80, 1
  %83 = call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox7bpf_dsl5Elser4ElseENSt3__110shared_ptrIKNS0_8internal14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull %15, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %81, %"class.std::__1::__shared_weak_count"* %82) #5
  %84 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %83, 0
  %85 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %83, 1
  call void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #5
  br label %106

86:                                               ; preds = %2
  %87 = tail call zeroext i1 @_ZN7sandbox11SyscallSets19IsSystemVSemaphoresEi(i32 %1) #5
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = tail call zeroext i1 @_ZN7sandbox11SyscallSets21IsSystemVSharedMemoryEi(i32 %1) #5
  br i1 %89, label %90, label %94

90:                                               ; preds = %88, %86
  %91 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #5
  %92 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %91, 0
  %93 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %91, 1
  br label %106

94:                                               ; preds = %88
  %95 = tail call %"class.sandbox::policy::SandboxLinux"* @_ZN7sandbox6policy12SandboxLinux11GetInstanceEv() #5
  %96 = tail call zeroext i1 @_ZNK7sandbox6policy12SandboxLinux25ShouldBrokerHandleSyscallEi(%"class.sandbox::policy::SandboxLinux"* %95, i32 %1) #5
  br i1 %96, label %97, label %101

97:                                               ; preds = %94
  %98 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy12SandboxLinux15HandleViaBrokerEv(%"class.sandbox::policy::SandboxLinux"* %95) #5
  %99 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %98, 0
  %100 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %98, 1
  br label %106

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.sandbox::policy::AudioProcessPolicy", %"class.sandbox::policy::AudioProcessPolicy"* %0, i64 0, i32 0
  %103 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy15EvaluateSyscallEi(%"class.sandbox::policy::BPFBasePolicy"* %102, i32 %1) #5
  %104 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %103, 0
  %105 = extractvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %103, 1
  br label %106

106:                                              ; preds = %97, %101, %90, %71, %46, %20, %16
  %107 = phi %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* [ %92, %90 ], [ %84, %71 ], [ %69, %46 ], [ %44, %20 ], [ %18, %16 ], [ %99, %97 ], [ %104, %101 ]
  %108 = phi %"class.std::__1::__shared_weak_count"* [ %93, %90 ], [ %85, %71 ], [ %70, %46 ], [ %45, %20 ], [ %19, %16 ], [ %100, %97 ], [ %105, %101 ]
  %109 = insertvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %107, 0
  %110 = insertvalue { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %109, %"class.std::__1::__shared_weak_count"* %108, 1
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %110
}

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7sandbox7bpf_dsl5CaserIiE9CasesImplIJiiiiiiEEES2_NSt3__110shared_ptrIKNS0_8internal14ResultExprImplEEEDpRKT_(%"class.sandbox::bpf_dsl::Caser"* noalias sret, %"class.sandbox::bpf_dsl::Caser"*, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %11 = alloca %"class.std::__1::shared_ptr.2", align 8
  %12 = alloca %"class.std::__1::shared_ptr.2", align 8
  %13 = alloca %"class.std::__1::shared_ptr.2", align 8
  %14 = alloca %"class.std::__1::shared_ptr.2", align 8
  %15 = alloca %"class.std::__1::shared_ptr", align 8
  %16 = alloca %"class.sandbox::bpf_dsl::Elser", align 8
  %17 = alloca %"class.std::__1::shared_ptr.2", align 8
  %18 = alloca %"class.std::__1::shared_ptr.2", align 8
  %19 = alloca %"class.std::__1::shared_ptr.2", align 8
  %20 = alloca %"class.std::__1::shared_ptr.2", align 8
  %21 = alloca %"class.std::__1::shared_ptr.2", align 8
  %22 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %15, i64 0, i32 0
  store %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %2, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %15, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %3, %"class.std::__1::__shared_weak_count"** %23, align 8
  %24 = getelementptr inbounds %"class.sandbox::bpf_dsl::Caser", %"class.sandbox::bpf_dsl::Caser"* %1, i64 0, i32 1
  %25 = load i32, i32* %4, align 4
  %26 = getelementptr inbounds %"class.sandbox::bpf_dsl::Caser", %"class.sandbox::bpf_dsl::Caser"* %1, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.sandbox::bpf_dsl::Caser", %"class.sandbox::bpf_dsl::Caser"* %1, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i32 %25 to i64
  %31 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 %27, i64 4, i64 %29, i64 %30) #5
  %32 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %31, 0
  %33 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %31, 1
  %34 = bitcast %"class.std::__1::shared_ptr.2"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #5
  %35 = load i32, i32* %5, align 4
  %36 = load i32, i32* %26, align 8
  %37 = load i64, i64* %28, align 8
  %38 = zext i32 %35 to i64
  %39 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 %36, i64 4, i64 %37, i64 %38) #5
  %40 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %39, 0
  %41 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %39, 1
  %42 = bitcast %"class.std::__1::shared_ptr.2"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #5
  %43 = load i32, i32* %6, align 4
  %44 = load i32, i32* %26, align 8
  %45 = load i64, i64* %28, align 8
  %46 = zext i32 %43 to i64
  %47 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 %44, i64 4, i64 %45, i64 %46) #5
  %48 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %47, 0
  %49 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %47, 1
  %50 = bitcast %"class.std::__1::shared_ptr.2"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #5
  %51 = load i32, i32* %7, align 4
  %52 = load i32, i32* %26, align 8
  %53 = load i64, i64* %28, align 8
  %54 = zext i32 %51 to i64
  %55 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 %52, i64 4, i64 %53, i64 %54) #5
  %56 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %55, 0
  %57 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %55, 1
  %58 = bitcast %"class.std::__1::shared_ptr.2"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #5
  %59 = load i32, i32* %8, align 4
  %60 = load i32, i32* %26, align 8
  %61 = load i64, i64* %28, align 8
  %62 = zext i32 %59 to i64
  %63 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 %60, i64 4, i64 %61, i64 %62) #5
  %64 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %63, 0
  %65 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %63, 1
  %66 = bitcast %"class.std::__1::shared_ptr.2"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #5
  %67 = load i32, i32* %9, align 4
  %68 = load i32, i32* %26, align 8
  %69 = load i64, i64* %28, align 8
  %70 = zext i32 %67 to i64
  %71 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32 %68, i64 4, i64 %69, i64 %70) #5
  %72 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %71, 0
  %73 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %71, 1
  %74 = bitcast %"class.std::__1::shared_ptr.2"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 16, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #5
  %75 = bitcast %"class.std::__1::shared_ptr.2"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 16, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 16, i1 false) #5
  %76 = bitcast %"class.std::__1::shared_ptr.2"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 16, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 16, i1 false) #5
  %77 = bitcast %"class.std::__1::shared_ptr.2"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 16, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #5
  %78 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AnyOfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEES6_(%"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %64, %"class.std::__1::__shared_weak_count"* %65, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %72, %"class.std::__1::__shared_weak_count"* %73) #5
  %79 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %78, 0
  %80 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %78, 1
  %81 = tail call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AnyOfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEES6_(%"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %56, %"class.std::__1::__shared_weak_count"* %57, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %79, %"class.std::__1::__shared_weak_count"* %80) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #5
  %82 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %81, 0
  %83 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %81, 1
  %84 = call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AnyOfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEES6_(%"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %48, %"class.std::__1::__shared_weak_count"* %49, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %82, %"class.std::__1::__shared_weak_count"* %83) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #5
  %85 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %84, 0
  %86 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %84, 1
  %87 = call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AnyOfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEES6_(%"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %40, %"class.std::__1::__shared_weak_count"* %41, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %85, %"class.std::__1::__shared_weak_count"* %86) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75)
  %88 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %87, 0
  %89 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %87, 1
  %90 = call { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AnyOfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEES6_(%"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %32, %"class.std::__1::__shared_weak_count"* %33, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %88, %"class.std::__1::__shared_weak_count"* %89) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74)
  %91 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %90, 0
  %92 = extractvalue { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } %90, 1
  %93 = load %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"** %22, align 8
  %94 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %23, align 8
  %95 = bitcast %"class.std::__1::shared_ptr"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 16, i1 false) #5
  call void @_ZNK7sandbox7bpf_dsl5Elser6ElseIfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEENS3_IKNS4_14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* nonnull sret %16, %"class.sandbox::bpf_dsl::Elser"* %24, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"* %91, %"class.std::__1::__shared_weak_count"* %92, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"* %93, %"class.std::__1::__shared_weak_count"* %94) #5
  %96 = getelementptr inbounds %"class.sandbox::bpf_dsl::Caser", %"class.sandbox::bpf_dsl::Caser"* %0, i64 0, i32 0, i32 0
  %97 = load i32, i32* %26, align 8
  store i32 %97, i32* %96, align 8
  %98 = getelementptr inbounds %"class.sandbox::bpf_dsl::Caser", %"class.sandbox::bpf_dsl::Caser"* %0, i64 0, i32 0, i32 1
  %99 = load i64, i64* %28, align 8
  store i64 %99, i64* %98, align 8
  %100 = getelementptr inbounds %"class.sandbox::bpf_dsl::Caser", %"class.sandbox::bpf_dsl::Caser"* %0, i64 0, i32 1
  call void @_ZN7sandbox7bpf_dsl5ElserC1ERKS1_(%"class.sandbox::bpf_dsl::Elser"* %100, %"class.sandbox::bpf_dsl::Elser"* nonnull dereferenceable(16) %16) #5
  call void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"* nonnull %16) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %21) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %20) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %19) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"* nonnull %17) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #5
  call void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal14ResultExprImplEED1Ev(%"class.std::__1::shared_ptr"* nonnull %15) #5
  ret void
}

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5ErrorEi(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN7sandbox7bpf_dsl2IfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEENS2_IKNS3_14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* sret, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"*, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #1

declare i32 @_ZN7sandbox10sys_getpidEv() local_unnamed_addr #1

declare void @_ZNK7sandbox7bpf_dsl5Elser6ElseIfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEENS3_IKNS4_14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"* sret, %"class.sandbox::bpf_dsl::Elser"*, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"*, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox7bpf_dsl5Elser4ElseENSt3__110shared_ptrIKNS0_8internal14ResultExprImplEEE(%"class.sandbox::bpf_dsl::Elser"*, %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox15CrashSIGSYSKillEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7sandbox7bpf_dsl5ElserD1Ev(%"class.sandbox::bpf_dsl::Elser"*) unnamed_addr #2

declare zeroext i1 @_ZN7sandbox11SyscallSets19IsSystemVSemaphoresEi(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN7sandbox11SyscallSets21IsSystemVSharedMemoryEi(i32) local_unnamed_addr #1

declare %"class.sandbox::policy::SandboxLinux"* @_ZN7sandbox6policy12SandboxLinux11GetInstanceEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK7sandbox6policy12SandboxLinux25ShouldBrokerHandleSyscallEi(%"class.sandbox::policy::SandboxLinux"*, i32) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy12SandboxLinux15HandleViaBrokerEv(%"class.sandbox::policy::SandboxLinux"*) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy15EvaluateSyscallEi(%"class.sandbox::policy::BPFBasePolicy"*, i32) unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy14InvalidSyscallEv(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #1

declare i64 @_ZN7sandbox7bpf_dsl8internal11DefaultMaskEm(i64) local_unnamed_addr #1

declare void @_ZN7sandbox7bpf_dsl5ElserC1ENSt3__110shared_ptrIKNS_4cons4CellINS2_4pairINS3_IKNS0_8internal12BoolExprImplEEENS3_IKNS7_14ResultExprImplEEEEEEEEE(%"class.sandbox::bpf_dsl::Elser"*, %"class.sandbox::cons::Cell"*, %"class.std::__1::__shared_weak_count"*) unnamed_addr #1

declare void @_ZN7sandbox7bpf_dsl5ElserC1ERKS1_(%"class.sandbox::bpf_dsl::Elser"*, %"class.sandbox::bpf_dsl::Elser"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal12BoolExprImplEED1Ev(%"class.std::__1::shared_ptr.2"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__110shared_ptrIKN7sandbox7bpf_dsl8internal14ResultExprImplEED1Ev(%"class.std::__1::shared_ptr"*) unnamed_addr #2

declare { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AnyOfENSt3__110shared_ptrIKNS0_8internal12BoolExprImplEEES6_(%"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"*, %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::BoolExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl8internal5ArgEqEimmm(i32, i64, i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7sandbox7bpf_dsl6SwitchIiEENS0_5CaserIT_EERKNS0_3ArgIS3_EE: argument 0"}
!4 = distinct !{!4, !"_ZN7sandbox7bpf_dsl6SwitchIiEENS0_5CaserIT_EERKNS0_3ArgIS3_EE"}
