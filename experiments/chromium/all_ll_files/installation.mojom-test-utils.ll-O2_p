; ModuleID = 'gen/third_party/blink/public/mojom/installation/installation.mojom-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/installation/installation.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::InstallationServiceAsyncWaiter" = type { %"class.blink::mojom::InstallationService"* }
%"class.blink::mojom::InstallationService" = type { i32 (...)** }
%"class.blink::mojom::InstallationServiceInterceptorForTesting" = type { %"class.blink::mojom::InstallationService" }

$_ZN5blink5mojom19InstallationServiceD2Ev = comdat any

$_ZN5blink5mojom40InstallationServiceInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom40InstallationServiceInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::InstallationService"*)* @_ZN5blink5mojom19InstallationServiceD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::InstallationServiceInterceptorForTesting"*)* @_ZN5blink5mojom40InstallationServiceInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::InstallationServiceInterceptorForTesting"*)* @_ZN5blink5mojom40InstallationServiceInterceptorForTesting9OnInstallEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom30InstallationServiceAsyncWaiterC1EPNS0_19InstallationServiceE = hidden unnamed_addr alias void (%"class.blink::mojom::InstallationServiceAsyncWaiter"*, %"class.blink::mojom::InstallationService"*), void (%"class.blink::mojom::InstallationServiceAsyncWaiter"*, %"class.blink::mojom::InstallationService"*)* @_ZN5blink5mojom30InstallationServiceAsyncWaiterC2EPNS0_19InstallationServiceE
@_ZN5blink5mojom30InstallationServiceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::InstallationServiceAsyncWaiter"*), void (%"class.blink::mojom::InstallationServiceAsyncWaiter"*)* @_ZN5blink5mojom30InstallationServiceAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom40InstallationServiceInterceptorForTesting9OnInstallEv(%"class.blink::mojom::InstallationServiceInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::InstallationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::InstallationService"* (%"class.blink::mojom::InstallationServiceInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::InstallationService"* (%"class.blink::mojom::InstallationServiceInterceptorForTesting"*)**, %"class.blink::mojom::InstallationService"* (%"class.blink::mojom::InstallationServiceInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::InstallationService"* (%"class.blink::mojom::InstallationServiceInterceptorForTesting"*)*, %"class.blink::mojom::InstallationService"* (%"class.blink::mojom::InstallationServiceInterceptorForTesting"*)** %3, i64 3
  %5 = load %"class.blink::mojom::InstallationService"* (%"class.blink::mojom::InstallationServiceInterceptorForTesting"*)*, %"class.blink::mojom::InstallationService"* (%"class.blink::mojom::InstallationServiceInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::InstallationService"* %5(%"class.blink::mojom::InstallationServiceInterceptorForTesting"* %0) #5
  %7 = bitcast %"class.blink::mojom::InstallationService"* %6 to void (%"class.blink::mojom::InstallationService"*)***
  %8 = load void (%"class.blink::mojom::InstallationService"*)**, void (%"class.blink::mojom::InstallationService"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::InstallationService"*)*, void (%"class.blink::mojom::InstallationService"*)** %8, i64 2
  %10 = load void (%"class.blink::mojom::InstallationService"*)*, void (%"class.blink::mojom::InstallationService"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::InstallationService"* %6) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom30InstallationServiceAsyncWaiterC2EPNS0_19InstallationServiceE(%"class.blink::mojom::InstallationServiceAsyncWaiter"* nocapture, %"class.blink::mojom::InstallationService"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::InstallationServiceAsyncWaiter", %"class.blink::mojom::InstallationServiceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::InstallationService"* %1, %"class.blink::mojom::InstallationService"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom30InstallationServiceAsyncWaiterD2Ev(%"class.blink::mojom::InstallationServiceAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom19InstallationServiceD2Ev(%"class.blink::mojom::InstallationService"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom40InstallationServiceInterceptorForTestingD0Ev(%"class.blink::mojom::InstallationServiceInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
