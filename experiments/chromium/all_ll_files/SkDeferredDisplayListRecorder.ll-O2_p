; ModuleID = '../../third_party/skia/src/core/SkDeferredDisplayListRecorder.cpp'
source_filename = "../../third_party/skia/src/core/SkDeferredDisplayListRecorder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.GrProxyProvider::TextureInfo" = type { i8, i32 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SkDeferredDisplayListRecorder = type { %class.SkSurfaceCharacterization, %class.sk_sp.23, %class.sk_sp.203, %class.sk_sp.204, %class.sk_sp.205 }
%class.SkSurfaceCharacterization = type { %class.sk_sp, i64, %struct.SkImageInfo, %class.GrBackendFormat, i32, i32, i8, i8, i8, i8, i8, i8, %class.SkSurfaceProps }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.1, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %class.sk_sp.10, %"struct.std::__1::atomic.11", [7 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.1 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.2, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.2 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.10 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.15, i32, i32 }
%class.sk_sp.15 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.16, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.16 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.SkSurfaceProps = type { i32, i32 }
%class.sk_sp.23 = type { %class.GrRecordingContext* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.24", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.197" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.34, %class.SkTArray.43, %class.SkTArray.45, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.27"*, i64 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.45, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.46 }
%class.sk_sp.46 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.34 = type { %class.SkTHashTable.35 }
%class.SkTHashTable.35 = type { i32, i32, %class.SkAutoTArray.36 }
%class.SkAutoTArray.36 = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.323" }
%"struct.std::__1::pair.323" = type { i32, %class.SkTArray.324* }
%class.SkTArray.324 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.43 = type { %"class.std::__1::unique_ptr.44"*, i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.324, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.45 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.59 }
%class.SkFibBlockSizes.59 = type { i32 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.66, %class.SkTArray.75, %class.GrOpsTask*, %class.SkSTArray.162, %class.SkSTArray.165, %"class.std::__1::unique_ptr.167", %class.sk_sp.183, %class.GrTokenTracker, i8, i8, %class.SkTArray.184, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.66 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.67", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.70, i8, [7 x i8] }>
%class.sk_sp.70 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.71, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.71 = type { i32 }
%class.SkTArray.75 = type { %class.sk_sp.76*, i64 }
%class.sk_sp.76 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.129, i32, i32, %class.SkSTArray.136, %class.SkSTArray.136, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.77 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.77 = type { %class.sk_sp.78*, i64 }
%class.sk_sp.78 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.79, %class.sk_sp.80, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.124" }
%class.SkNVRefCnt.79 = type { %"struct.std::__1::atomic" }
%class.sk_sp.80 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.84 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.81, [4 x i8] }>
%union.anon.81 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.82, i8* }
%class.sk_sp.82 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.83, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.83 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.84 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.85, void (i8*)*, i8* }
%class.SkNVRefCnt.85 = type { %"struct.std::__1::atomic" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.80, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.1, %class.sk_sp.123, %class.sk_sp.123 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.103, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.114, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.86 }
%class.SkTHashTable.86 = type { i32, i32, %class.SkAutoTArray.87 }
%class.SkAutoTArray.87 = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.94, i32, [4 x i8] }>
%class.SkTDynamicHash.94 = type { %class.SkTHashTable.95 }
%class.SkTHashTable.95 = type { i32, i32, %class.SkAutoTArray.96 }
%class.SkAutoTArray.96 = type { %"class.std::__1::unique_ptr.97" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.103 = type { %class.SkTHashTable.104 }
%class.SkTHashTable.104 = type { i32, i32, %class.SkAutoTArray.105 }
%class.SkAutoTArray.105 = type { %"class.std::__1::unique_ptr.106" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.112, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.112 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.113, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.113 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.114 = type { %class.SkTHashTable.115 }
%class.SkTHashTable.115 = type { i32, i32, %class.SkAutoTArray.116 }
%class.SkAutoTArray.116 = type { %"class.std::__1::unique_ptr.117" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.123 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.124" = type { %"struct.std::__1::__atomic_base.125" }
%"struct.std::__1::__atomic_base.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__cxx_atomic_impl.127" }
%"struct.std::__1::__cxx_atomic_impl.127" = type { %"struct.std::__1::__cxx_atomic_base_impl.128" }
%"struct.std::__1::__cxx_atomic_base_impl.128" = type { i64 }
%class.SkTArray.129 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.130", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.136 = type { %class.SkAlignedSTStorage.137, %class.SkTArray.138 }
%class.SkAlignedSTStorage.137 = type { [8 x i8] }
%class.SkTArray.138 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.139, %class.sk_sp.159, %class.SkTArray.161, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.139 = type { %class.SkAlignedSTStorage.140, %class.SkTArray.141 }
%class.SkAlignedSTStorage.140 = type { [2000 x i8] }
%class.SkTArray.141 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.142", %class.GrOp* }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.142", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.78, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.150" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.148 }
%union.anon.148 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.149, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.149 = type { i32 }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.153, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.153 = type { %class.SkAlignedSTStorage.154, %class.SkTArray.155 }
%class.SkAlignedSTStorage.154 = type { [8 x i8] }
%class.SkTArray.155 = type { %"class.std::__1::unique_ptr.150"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.159 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.160, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.160 = type { %"struct.std::__1::atomic" }
%class.SkTArray.161 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.162 = type { %class.SkAlignedSTStorage.163, %class.SkTArray.164 }
%class.SkAlignedSTStorage.163 = type { [32 x i8] }
%class.SkTArray.164 = type { i32*, i64 }
%class.SkSTArray.165 = type { %class.SkAlignedSTStorage.166, %class.SkTArray.75 }
%class.SkAlignedSTStorage.166 = type { [32 x i8] }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.170, %"class.std::__1::unique_ptr.174", %class.GrPathRenderer* }
%class.SkSTArray.170 = type { %class.SkAlignedSTStorage.171, %class.SkTArray.172 }
%class.SkAlignedSTStorage.171 = type { [64 x i8] }
%class.SkTArray.172 = type { %class.sk_sp.173*, i64 }
%class.sk_sp.173 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.183 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.184 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.185, i32, %class.GrRenderTask** }
%class.SkTHashMap.185 = type { %class.SkTHashTable.186 }
%class.SkTHashTable.186 = type { i32, i32, %class.SkAutoTArray.187 }
%class.SkAutoTArray.187 = type { %"class.std::__1::unique_ptr.188" }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %class.GrProxyProvider* }
%class.sk_sp.203 = type { %class.GrRenderTargetProxy* }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.159, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.204 = type { %"class.SkDeferredDisplayList::LazyProxyData"* }
%"class.SkDeferredDisplayList::LazyProxyData" = type { %class.SkRefCnt.base, %class.GrRenderTargetProxy* }
%class.sk_sp.205 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.206 = type { %class.SkGpuDevice* }
%class.SkGpuDevice = type { %class.SkBaseGpuDevice, %class.sk_sp.23, %"class.std::__1::unique_ptr.207", [8 x i8], %class.GrClipStack }
%class.SkBaseGpuDevice = type { %class.SkBaseDevice }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkMarkerStack = type opaque
%class.SkM44 = type { [16 x float] }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %class.GrSurfaceDrawContext* }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.211, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.15, %class.sk_sp.210, i32, i32 }
%class.sk_sp.210 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.211 = type { %class.GrOpsTask* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.212, %class.SkAutoTMalloc }
%class.SkAutoTArray.212 = type { %"class.std::__1::unique_ptr.213" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.216 }
%union.anon.216 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.217, i32, %"struct.std::__1::atomic.17", %"struct.std::__1::atomic.17", i8, i8 }>
%class.sk_sp.217 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.218, %struct.SkRect, [4 x i8], %class.SkTDArray.219, %class.SkTDArray.220, %class.SkTDArray.221, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.218 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.219 = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.220 = type { i8*, i32, i32 }
%class.SkTDArray.221 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.222 }
%class.SkTDArray.222 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.11", [3 x i8] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.226" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.231, %class.SkSTArray.236, %class.SkSTArray.239 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.230" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.230" = type { %struct.SkPoint* }
%class.SkZip.231 = type { %"class.std::__1::tuple.232", i64 }
%"class.std::__1::tuple.232" = type { %"struct.std::__1::__tuple_impl.233" }
%"struct.std::__1::__tuple_impl.233" = type { %"class.std::__1::__tuple_leaf.234", %"class.std::__1::__tuple_leaf.235" }
%"class.std::__1::__tuple_leaf.234" = type { i16* }
%"class.std::__1::__tuple_leaf.235" = type { %struct.SkPoint* }
%class.SkSTArray.236 = type { %class.SkAlignedSTStorage.237, %class.SkTArray.238 }
%class.SkAlignedSTStorage.237 = type { [8 x i8] }
%class.SkTArray.238 = type { i16*, i64 }
%class.SkSTArray.239 = type { %class.SkAlignedSTStorage.240, %class.SkTArray.241 }
%class.SkAlignedSTStorage.240 = type { [32 x i8] }
%class.SkTArray.241 = type { %struct.SkPoint*, i64 }
%class.GrClipStack = type <{ %class.GrClip, [8 x i8], %class.GrTBlockList, %class.GrTBlockList.245, %class.GrTBlockList.247, %class.GrProxyProvider*, %struct.SkIRect, %class.SkMatrixProvider*, i8, [15 x i8] }>
%class.GrClip = type { i32 (...)** }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [256 x i8] }
%class.GrTBlockList.245 = type { %class.GrSBlockAllocator.246 }
%class.GrSBlockAllocator.246 = type { [192 x i8] }
%class.GrTBlockList.247 = type { %class.GrSBlockAllocator.248 }
%class.GrSBlockAllocator.248 = type { [128 x i8] }
%class.SkSurface_Gpu = type { %class.SkSurface_Base, %class.sk_sp.206 }
%class.SkSurface_Base = type { %class.SkSurface, %"class.std::__1::unique_ptr.250", %class.sk_sp.290 }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %class.SkCanvas* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.253, [384 x i64], %class.sk_sp.254, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.255", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.261" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.253 = type { %class.SkMarkerStack* }
%class.sk_sp.254 = type { %class.SkBaseDevice* }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.277" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.267" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.264, %class.SkSpan.265, %class.SkFont }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.264 = type { i32*, i64 }
%class.SkSpan.265 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.266, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.266 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.270, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.270 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.271, %struct.SkRect, i32, %"struct.std::__1::atomic.272" }
%class.SkNVRefCnt.271 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.272" = type { %"struct.std::__1::__atomic_base.273" }
%"struct.std::__1::__atomic_base.273" = type { %"struct.std::__1::__atomic_base.274" }
%"struct.std::__1::__atomic_base.274" = type { %"struct.std::__1::__cxx_atomic_impl.275" }
%"struct.std::__1::__cxx_atomic_impl.275" = type { %"struct.std::__1::__cxx_atomic_base_impl.276" }
%"struct.std::__1::__cxx_atomic_base_impl.276" = type { i32 }
%"class.std::__1::vector.277" = type { %"class.std::__1::__vector_base.278" }
%"class.std::__1::__vector_base.278" = type { i16*, i16*, %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { i16* }
%class.sk_sp.290 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.291 = type { %class.SkDeferredDisplayList* }
%class.SkDeferredDisplayList = type { %class.SkNVRefCnt.292, %class.SkSurfaceCharacterization, %"class.std::__1::map", %"class.GrRecordingContext::OwnedArenas", %class.SkTArray.75, %class.SkTArray.302, %class.sk_sp.203, %class.sk_sp.204 }
%class.SkNVRefCnt.292 = type { %"struct.std::__1::atomic" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { i64 }
%class.SkTArray.302 = type { %"struct.GrRecordingContext::ProgramData"*, i64 }
%"struct.GrRecordingContext::ProgramData" = type { %"class.std::__1::unique_ptr.303", %class.GrProgramInfo* }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %class.GrProgramDesc* }
%class.GrProgramDesc = type <{ %class.SkSTArray.306, i32, [4 x i8] }>
%class.SkSTArray.306 = type { %class.SkAlignedSTStorage.307, %class.SkTArray.164 }
%class.SkAlignedSTStorage.307 = type { [132 x i8] }
%class.GrProgramInfo = type opaque
%class.GrRecordingContextPriv = type { %class.GrRecordingContext* }
%class.sk_sp.311 = type { %class.SkPromiseImageTexture* }
%class.SkPromiseImageTexture = type <{ %class.SkNVRefCnt.312, [4 x i8], %class.SkSTArray.313, %class.GrBackendTexture, i32, [4 x i8] }>
%class.SkNVRefCnt.312 = type { %"struct.std::__1::atomic" }
%class.SkSTArray.313 = type { %class.SkAlignedSTStorage.314, %class.SkTArray.112 }
%class.SkAlignedSTStorage.314 = type { [64 x i8] }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.315, %class.sk_sp.317 }
%union.anon.315 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.316, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.316 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.317 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%class.GrYUVABackendTextureInfo = type { %class.SkYUVAInfo, [4 x %class.GrBackendFormat], i8, i32 }
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon }
%class.anon = type { %class.sk_sp.204 }

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN21SkDeferredDisplayList13LazyProxyDataD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZTVN21SkDeferredDisplayList13LazyProxyDataE = comdat any

@_ZZN29SkDeferredDisplayListRecorder4initEvE12kTextureInfo = internal constant %"struct.GrProxyProvider::TextureInfo" { i8 0, i32 1 }, align 4
@_ZTVN21SkDeferredDisplayList13LazyProxyDataE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%"class.SkDeferredDisplayList::LazyProxyData"*)* @_ZN21SkDeferredDisplayList13LazyProxyDataD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS6_15LazySurfaceDescEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS6_15LazySurfaceDescEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS6_15LazySurfaceDescEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@switch.table._ZN29SkDeferredDisplayListRecorder4initEv = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

@_ZN29SkDeferredDisplayListRecorderC1ERK25SkSurfaceCharacterization = hidden unnamed_addr alias void (%class.SkDeferredDisplayListRecorder*, %class.SkSurfaceCharacterization*), void (%class.SkDeferredDisplayListRecorder*, %class.SkSurfaceCharacterization*)* @_ZN29SkDeferredDisplayListRecorderC2ERK25SkSurfaceCharacterization
@_ZN29SkDeferredDisplayListRecorderD1Ev = hidden unnamed_addr alias void (%class.SkDeferredDisplayListRecorder*), void (%class.SkDeferredDisplayListRecorder*)* @_ZN29SkDeferredDisplayListRecorderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29SkDeferredDisplayListRecorderC2ERK25SkSurfaceCharacterization(%class.SkDeferredDisplayListRecorder*, %class.SkSurfaceCharacterization* dereferenceable(136)) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.23, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 0, i32 0
  %7 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %6, align 8
  %8 = icmp eq %class.GrContextThreadSafeProxy* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %9, %2
  store %class.GrContextThreadSafeProxy* %7, %class.GrContextThreadSafeProxy** %5, align 8
  %13 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %12, %20
  store %class.SkColorSpace* %18, %class.SkColorSpace** %16, align 8
  %24 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %25 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 1
  %26 = bitcast i32* %25 to i64*
  %27 = bitcast i32* %24 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 2, i32 1
  %30 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 1
  %31 = bitcast %struct.SkISize* %30 to i64*
  %32 = bitcast %struct.SkISize* %29 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 3
  %35 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 3
  tail call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* %34, %class.GrBackendFormat* dereferenceable(72) %35) #10
  %36 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 4
  %37 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 4
  %38 = bitcast i32* %36 to i8*
  %39 = bitcast i32* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 14, i1 false) #10
  %40 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 12
  %41 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %40, %class.SkSurfaceProps* dereferenceable(8) %41) #10
  %42 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 1
  %43 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %42, i64 0, i32 0
  %44 = bitcast %class.sk_sp.23* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 32, i1 false)
  %45 = load i32, i32* %24, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %95, label %47

47:                                               ; preds = %23
  %48 = bitcast %class.sk_sp.23* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  %49 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %50 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %5, align 8, !noalias !2
  %51 = icmp eq %class.GrContextThreadSafeProxy* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 1 monotonic, !noalias !2
  br label %55

55:                                               ; preds = %47, %52
  store %class.GrContextThreadSafeProxy* %50, %class.GrContextThreadSafeProxy** %49, align 8, !alias.scope !2
  call void @_ZN22GrRecordingContextPriv7MakeDDLE5sk_spI24GrContextThreadSafeProxyE(%class.sk_sp.23* nonnull sret %3, %class.sk_sp* nonnull %4) #10
  %56 = getelementptr inbounds %class.sk_sp.23, %class.sk_sp.23* %3, i64 0, i32 0
  %57 = bitcast %class.sk_sp.23* %3 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrRecordingContext* null, %class.GrRecordingContext** %56, align 8
  %59 = load %class.GrRecordingContext*, %class.GrRecordingContext** %43, align 8
  %60 = bitcast %class.sk_sp.23* %42 to i64*
  store i64 %58, i64* %60, align 8
  %61 = icmp eq %class.GrRecordingContext* %59, null
  br i1 %61, label %85, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.GrRecordingContext* %59 to %class.SkRefCntBase*
  %68 = bitcast %class.GrRecordingContext* %59 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  call void %71(%class.SkRefCntBase* nonnull %67) #10
  br label %72

72:                                               ; preds = %62, %66
  %73 = load %class.GrRecordingContext*, %class.GrRecordingContext** %56, align 8
  %74 = icmp eq %class.GrRecordingContext* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = bitcast %class.GrRecordingContext* %73 to %class.SkRefCntBase*
  %81 = bitcast %class.GrRecordingContext* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8
  call void %84(%class.SkRefCntBase* nonnull %80) #10
  br label %85

85:                                               ; preds = %55, %72, %75, %79
  %86 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %49, align 8
  %87 = icmp eq %class.GrContextThreadSafeProxy* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  call void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy* nonnull %86) #10
  %93 = bitcast %class.GrContextThreadSafeProxy* %86 to i8*
  call void @_ZdlPv(i8* %93) #11
  br label %94

94:                                               ; preds = %85, %88, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  br label %95

95:                                               ; preds = %23, %94
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN22GrRecordingContextPriv7MakeDDLE5sk_spI24GrContextThreadSafeProxyE(%class.sk_sp.23* sret, %class.sk_sp*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29SkDeferredDisplayListRecorderD2Ev(%class.SkDeferredDisplayListRecorder* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 1, i32 0
  %3 = load %class.GrRecordingContext*, %class.GrRecordingContext** %2, align 8
  %4 = icmp eq %class.GrRecordingContext* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %class.GrProxyProvider*, %class.GrProxyProvider** %6, align 8
  tail call void @_ZN15GrProxyProvider19orphanAllUniqueKeysEv(%class.GrProxyProvider* %7) #10
  br label %8

8:                                                ; preds = %1, %5
  %9 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 4, i32 0
  %10 = load %class.SkSurface*, %class.SkSurface** %9, align 8
  %11 = icmp eq %class.SkSurface* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %class.SkSurface* %10 to %class.SkRefCntBase*
  %18 = bitcast %class.SkSurface* %10 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  tail call void %21(%class.SkRefCntBase* nonnull %17) #10
  br label %22

22:                                               ; preds = %8, %12, %16
  %23 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 3, i32 0
  %24 = load %"class.SkDeferredDisplayList::LazyProxyData"*, %"class.SkDeferredDisplayList::LazyProxyData"** %23, align 8
  %25 = icmp eq %"class.SkDeferredDisplayList::LazyProxyData"* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.SkDeferredDisplayList::LazyProxyData", %"class.SkDeferredDisplayList::LazyProxyData"* %24, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %"class.SkDeferredDisplayList::LazyProxyData"* %24 to %class.SkRefCntBase*
  %32 = bitcast %"class.SkDeferredDisplayList::LazyProxyData"* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  tail call void %35(%class.SkRefCntBase* nonnull %31) #10
  br label %36

36:                                               ; preds = %22, %26, %30
  %37 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 2, i32 0
  %38 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %37, align 8
  %39 = icmp eq %class.GrRenderTargetProxy* %38, null
  br i1 %39, label %59, label %40

40:                                               ; preds = %36
  %41 = bitcast %class.GrRenderTargetProxy* %38 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr i8, i8* %42, i64 -24
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 8
  %47 = bitcast %class.GrRenderTargetProxy* %38 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 %46
  %49 = bitcast i8* %48 to i32*
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %59

52:                                               ; preds = %40
  %53 = getelementptr inbounds i8, i8* %47, i64 %45
  %54 = bitcast i8* %53 to %class.GrSurfaceProxy*
  %55 = bitcast i8* %53 to void (%class.GrSurfaceProxy*)***
  %56 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %56, i64 1
  %58 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %57, align 8
  tail call void %58(%class.GrSurfaceProxy* nonnull %54) #10
  br label %59

59:                                               ; preds = %36, %40, %52
  %60 = load %class.GrRecordingContext*, %class.GrRecordingContext** %2, align 8
  %61 = icmp eq %class.GrRecordingContext* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  %67 = bitcast %class.GrRecordingContext* %60 to %class.SkRefCntBase*
  %68 = bitcast %class.GrRecordingContext* %60 to void (%class.SkRefCntBase*)***
  %69 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, i64 2
  %71 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, align 8
  tail call void %71(%class.SkRefCntBase* nonnull %67) #10
  br label %72

72:                                               ; preds = %59, %62, %66
  %73 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %74 = load %class.SkColorSpace*, %class.SkColorSpace** %73, align 8
  %75 = icmp eq %class.SkColorSpace* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  %81 = bitcast %class.SkColorSpace* %74 to i8*
  tail call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %80, %76, %72
  %83 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 0, i32 0
  %84 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %83, align 8
  %85 = icmp eq %class.GrContextThreadSafeProxy* %84, null
  br i1 %85, label %92, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  tail call void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy* nonnull %84) #10
  %91 = bitcast %class.GrContextThreadSafeProxy* %84 to i8*
  tail call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %82, %86, %90
  ret void
}

declare void @_ZN15GrProxyProvider19orphanAllUniqueKeysEv(%class.GrProxyProvider*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN29SkDeferredDisplayListRecorder4initEv(%class.SkDeferredDisplayListRecorder*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.206, align 8
  %3 = alloca %class.sk_sp.203, align 8
  %4 = alloca %"class.std::__1::function", align 8
  %5 = alloca %class.sk_sp.206, align 8
  %6 = alloca %class.sk_sp.78, align 8
  %7 = alloca %class.sk_sp.15, align 8
  %8 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %314, label %11

11:                                               ; preds = %1
  %12 = tail call i8* @_Znwm(i64 24) #11
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN21SkDeferredDisplayList13LazyProxyDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 16
  %17 = bitcast i8* %16 to %class.GrRenderTargetProxy**
  store %class.GrRenderTargetProxy* null, %class.GrRenderTargetProxy** %17, align 8
  %18 = ptrtoint i8* %12 to i64
  %19 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 3
  %20 = getelementptr inbounds %class.sk_sp.204, %class.sk_sp.204* %19, i64 0, i32 0
  %21 = load %"class.SkDeferredDisplayList::LazyProxyData"*, %"class.SkDeferredDisplayList::LazyProxyData"** %20, align 8
  %22 = bitcast %class.sk_sp.204* %19 to i64*
  store i64 %18, i64* %22, align 8
  %23 = icmp eq %"class.SkDeferredDisplayList::LazyProxyData"* %21, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.SkDeferredDisplayList::LazyProxyData", %"class.SkDeferredDisplayList::LazyProxyData"* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %"class.SkDeferredDisplayList::LazyProxyData"* %21 to %class.SkRefCntBase*
  %30 = bitcast %"class.SkDeferredDisplayList::LazyProxyData"* %21 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  tail call void %33(%class.SkRefCntBase* nonnull %29) #10
  br label %34

34:                                               ; preds = %28, %24, %11
  %35 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 1, i32 0
  %36 = load %class.GrRecordingContext*, %class.GrRecordingContext** %35, align 8
  %37 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %36, i64 0, i32 5, i32 0, i32 0, i32 0
  %38 = load %class.GrProxyProvider*, %class.GrProxyProvider** %37, align 8
  %39 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %36, i64 0, i32 0, i32 0
  %40 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %39) #10
  %41 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 8
  %42 = load i8, i8* %41, align 2, !range !5
  %43 = icmp ne i8 %42, 0
  br i1 %43, label %44, label %53

44:                                               ; preds = %34
  %45 = load %class.GrRecordingContext*, %class.GrRecordingContext** %35, align 8
  %46 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %45, i64 0, i32 0, i32 0
  %47 = tail call i32 @_ZNK14GrContext_Base7backendEv(%class.GrContext_Base* %46) #10
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %314

49:                                               ; preds = %44
  %50 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 6
  %51 = load i8, i8* %50, align 8, !range !5
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %314

53:                                               ; preds = %49, %34
  %54 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 9
  %55 = load i8, i8* %54, align 1, !range !5
  %56 = icmp ne i8 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load %class.GrRecordingContext*, %class.GrRecordingContext** %35, align 8
  %59 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %58, i64 0, i32 0, i32 0
  %60 = tail call i32 @_ZNK14GrContext_Base7backendEv(%class.GrContext_Base* %59) #10
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %314

62:                                               ; preds = %57, %53
  %63 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 10
  %64 = load i8, i8* %63, align 4, !range !5
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %62
  %67 = or i8 %55, %42
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %314

69:                                               ; preds = %66
  %70 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 6
  %71 = load i8, i8* %70, align 8, !range !5
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %314

73:                                               ; preds = %69
  %74 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %314, label %77

77:                                               ; preds = %62, %73
  %78 = load i32, i32* %8, align 8
  %79 = icmp ult i32 %78, 21
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  tail call void @llvm.trap() #10
  unreachable

81:                                               ; preds = %77
  %82 = sext i32 %78 to i64
  %83 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN29SkDeferredDisplayListRecorder4initEv, i64 0, i64 %82
  %84 = load i32, i32* %83, align 4
  br i1 %43, label %100, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 5
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, 1
  br i1 %88, label %89, label %100

89:                                               ; preds = %85
  %90 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %40, i64 0, i32 3
  %91 = bitcast i48* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = and i64 %92, 16384
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %100

95:                                               ; preds = %89
  %96 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 6
  %97 = load i8, i8* %96, align 8, !range !5
  %98 = icmp eq i8 %97, 0
  %99 = select i1 %98, i32 0, i32 4
  br label %100

100:                                              ; preds = %89, %95, %81, %85
  %101 = phi i32 [ 0, %89 ], [ 0, %85 ], [ 2, %81 ], [ %99, %95 ]
  %102 = or i32 %101, 16
  %103 = select i1 %56, i32 %102, i32 %101
  %104 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 6
  %105 = load i8, i8* %104, align 8, !range !5
  %106 = icmp eq i8 %105, 0
  %107 = select i1 %106, %"struct.GrProxyProvider::TextureInfo"* null, %"struct.GrProxyProvider::TextureInfo"* @_ZZN29SkDeferredDisplayListRecorder4initEvE12kTextureInfo
  %108 = bitcast %class.sk_sp.203* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #10
  %109 = bitcast %"class.std::__1::function"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #10
  %110 = load %"class.SkDeferredDisplayList::LazyProxyData"*, %"class.SkDeferredDisplayList::LazyProxyData"** %20, align 8
  %111 = icmp eq %"class.SkDeferredDisplayList::LazyProxyData"* %110, null
  br i1 %111, label %115, label %112

112:                                              ; preds = %100
  %113 = getelementptr inbounds %"class.SkDeferredDisplayList::LazyProxyData", %"class.SkDeferredDisplayList::LazyProxyData"* %110, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 1 monotonic
  br label %115

115:                                              ; preds = %100, %112
  %116 = ptrtoint %"class.SkDeferredDisplayList::LazyProxyData"* %110 to i64
  %117 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  store void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* @"_ZNSt3__110__function16__policy_invokerIFN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS2_15LazySurfaceDescEEE11__call_implINS0_20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0S9_EEEES3_PKNS0_16__policy_storageES5_S8_", void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)** %117, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS6_15LazySurfaceDescEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %118, align 8
  %119 = tail call i8* @_Znwm(i64 8) #11, !noalias !6
  %120 = bitcast i8* %119 to i64*
  store i64 %116, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %119, i8** %121, align 8
  %122 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 3
  %123 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 2, i32 1
  %124 = bitcast %struct.SkISize* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 5
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 11
  %129 = load i8, i8* %128, align 1, !range !5
  %130 = icmp ne i8 %129, 0
  %131 = load i8, i8* %63, align 4, !range !5
  %132 = icmp ne i8 %131, 0
  call void @_ZN15GrProxyProvider27createLazyRenderTargetProxyEONSt3__18functionIFN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS2_15LazySurfaceDescEEEERK15GrBackendFormat7SkISizei22GrInternalSurfaceFlagsPKNS_11TextureInfoE14GrMipmapStatus12SkBackingFit10SkBudgeted11GrProtectedbNS2_12UseAllocatorE(%class.sk_sp.203* nonnull sret %3, %class.GrProxyProvider* %38, %"class.std::__1::function"* nonnull dereferenceable(32) %4, %class.GrBackendFormat* dereferenceable(72) %122, i64 %125, i32 %127, i32 %103, %"struct.GrProxyProvider::TextureInfo"* %107, i32 0, i32 1, i1 zeroext true, i1 zeroext %130, i1 zeroext %132, i32 1) #10
  %133 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 2
  %134 = getelementptr inbounds %class.sk_sp.203, %class.sk_sp.203* %3, i64 0, i32 0
  %135 = bitcast %class.sk_sp.203* %3 to i64*
  %136 = load i64, i64* %135, align 8
  store %class.GrRenderTargetProxy* null, %class.GrRenderTargetProxy** %134, align 8
  %137 = getelementptr inbounds %class.sk_sp.203, %class.sk_sp.203* %133, i64 0, i32 0
  %138 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %137, align 8
  %139 = bitcast %class.sk_sp.203* %133 to i64*
  store i64 %136, i64* %139, align 8
  %140 = icmp eq %class.GrRenderTargetProxy* %138, null
  br i1 %140, label %160, label %141

141:                                              ; preds = %115
  %142 = bitcast %class.GrRenderTargetProxy* %138 to i8**
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr i8, i8* %143, i64 -24
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 8
  %148 = bitcast %class.GrRenderTargetProxy* %138 to i8*
  %149 = getelementptr inbounds i8, i8* %148, i64 %147
  %150 = bitcast i8* %149 to i32*
  %151 = atomicrmw add i32* %150, i32 -1 acq_rel
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %160

153:                                              ; preds = %141
  %154 = getelementptr inbounds i8, i8* %148, i64 %146
  %155 = bitcast i8* %154 to %class.GrSurfaceProxy*
  %156 = bitcast i8* %154 to void (%class.GrSurfaceProxy*)***
  %157 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %156, align 8
  %158 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %157, i64 1
  %159 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %158, align 8
  call void %159(%class.GrSurfaceProxy* nonnull %155) #10
  br label %160

160:                                              ; preds = %115, %141, %153
  %161 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %134, align 8
  %162 = icmp eq %class.GrRenderTargetProxy* %161, null
  br i1 %162, label %182, label %163

163:                                              ; preds = %160
  %164 = bitcast %class.GrRenderTargetProxy* %161 to i8**
  %165 = load i8*, i8** %164, align 8
  %166 = getelementptr i8, i8* %165, i64 -24
  %167 = bitcast i8* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = add i64 %168, 8
  %170 = bitcast %class.GrRenderTargetProxy* %161 to i8*
  %171 = getelementptr inbounds i8, i8* %170, i64 %169
  %172 = bitcast i8* %171 to i32*
  %173 = atomicrmw add i32* %172, i32 -1 acq_rel
  %174 = icmp eq i32 %173, 1
  br i1 %174, label %175, label %182

175:                                              ; preds = %163
  %176 = getelementptr inbounds i8, i8* %170, i64 %168
  %177 = bitcast i8* %176 to %class.GrSurfaceProxy*
  %178 = bitcast i8* %176 to void (%class.GrSurfaceProxy*)***
  %179 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %178, align 8
  %180 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %179, i64 1
  %181 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %180, align 8
  call void %181(%class.GrSurfaceProxy* nonnull %177) #10
  br label %182

182:                                              ; preds = %160, %163, %175
  %183 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %118, align 8
  %184 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %183, i64 0, i32 1
  %185 = load void (i8*)*, void (i8*)** %184, align 8
  %186 = icmp eq void (i8*)* %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %182
  %188 = load i8*, i8** %121, align 8
  call void %185(i8* %188) #10
  br label %189

189:                                              ; preds = %187, %182
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #10
  %190 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %137, align 8
  %191 = icmp eq %class.GrRenderTargetProxy* %190, null
  br i1 %191, label %314, label %192

192:                                              ; preds = %189
  %193 = bitcast %class.GrRenderTargetProxy* %190 to i8**
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr i8, i8* %194, i64 -24
  %196 = bitcast i8* %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %class.GrRenderTargetProxy* %190 to i8*
  %199 = getelementptr inbounds i8, i8* %198, i64 %197
  %200 = getelementptr inbounds i8, i8* %199, i64 161
  store i8 1, i8* %200, align 1
  %201 = bitcast %class.sk_sp.206* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #10
  %202 = getelementptr inbounds %class.sk_sp.206, %class.sk_sp.206* %5, i64 0, i32 0
  store %class.SkGpuDevice* inttoptr (i64 -6148914691236517206 to %class.SkGpuDevice*), %class.SkGpuDevice** %202, align 8
  %203 = load %class.GrRecordingContext*, %class.GrRecordingContext** %35, align 8
  %204 = getelementptr inbounds %class.sk_sp.78, %class.sk_sp.78* %6, i64 0, i32 0
  %205 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %137, align 8
  %206 = icmp eq %class.GrRenderTargetProxy* %205, null
  br i1 %206, label %224, label %207

207:                                              ; preds = %192
  %208 = bitcast %class.GrRenderTargetProxy* %205 to i8**
  %209 = load i8*, i8** %208, align 8
  %210 = getelementptr i8, i8* %209, i64 -24
  %211 = bitcast i8* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %212, 8
  %214 = bitcast %class.GrRenderTargetProxy* %205 to i8*
  %215 = getelementptr inbounds i8, i8* %214, i64 %213
  %216 = bitcast i8* %215 to i32*
  %217 = atomicrmw add i32* %216, i32 1 monotonic
  %218 = load i8*, i8** %208, align 8
  %219 = getelementptr i8, i8* %218, i64 -24
  %220 = bitcast i8* %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = getelementptr inbounds i8, i8* %214, i64 %221
  %223 = bitcast i8* %222 to %class.GrSurfaceProxy*
  br label %224

224:                                              ; preds = %192, %207
  %225 = phi %class.GrSurfaceProxy* [ %223, %207 ], [ null, %192 ]
  store %class.GrSurfaceProxy* %225, %class.GrSurfaceProxy** %204, align 8
  %226 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %7, i64 0, i32 0
  %227 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %228 = load %class.SkColorSpace*, %class.SkColorSpace** %227, align 8, !noalias !11
  %229 = icmp eq %class.SkColorSpace* %228, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %224
  %231 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %228, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = atomicrmw add i32* %231, i32 1 monotonic, !noalias !11
  br label %233

233:                                              ; preds = %224, %230
  store %class.SkColorSpace* %228, %class.SkColorSpace** %226, align 8, !alias.scope !11
  %234 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 4
  %235 = load i32, i32* %234, align 8
  %236 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 0, i32 12
  call void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext11GrColorType5sk_spI14GrSurfaceProxyES3_I12SkColorSpaceE15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.206* nonnull sret %5, %class.GrRecordingContext* %203, i32 %84, %class.sk_sp.78* nonnull %6, %class.sk_sp.15* nonnull %7, i32 %235, %class.SkSurfaceProps* dereferenceable(8) %236, i32 1) #10
  %237 = load %class.SkColorSpace*, %class.SkColorSpace** %226, align 8
  %238 = icmp eq %class.SkColorSpace* %237, null
  br i1 %238, label %245, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = atomicrmw add i32* %240, i32 -1 acq_rel
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %243, label %245

243:                                              ; preds = %239
  %244 = bitcast %class.SkColorSpace* %237 to i8*
  call void @_ZdlPv(i8* %244) #11
  br label %245

245:                                              ; preds = %233, %239, %243
  %246 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %204, align 8
  %247 = icmp eq %class.GrSurfaceProxy* %246, null
  br i1 %247, label %260, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %246, i64 0, i32 1
  %250 = getelementptr inbounds %class.SkNVRefCnt.79, %class.SkNVRefCnt.79* %249, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = atomicrmw add i32* %250, i32 -1 acq_rel
  %252 = icmp eq i32 %251, 1
  br i1 %252, label %253, label %260

253:                                              ; preds = %248
  %254 = getelementptr inbounds %class.SkNVRefCnt.79, %class.SkNVRefCnt.79* %249, i64 -2
  %255 = bitcast %class.SkNVRefCnt.79* %254 to %class.GrSurfaceProxy*
  %256 = bitcast %class.SkNVRefCnt.79* %254 to void (%class.GrSurfaceProxy*)***
  %257 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %256, align 8
  %258 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %257, i64 1
  %259 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %258, align 8
  call void %259(%class.GrSurfaceProxy* nonnull %255) #10
  br label %260

260:                                              ; preds = %245, %248, %253
  %261 = load %class.SkGpuDevice*, %class.SkGpuDevice** %202, align 8
  %262 = icmp eq %class.SkGpuDevice* %261, null
  br i1 %262, label %312, label %263

263:                                              ; preds = %260
  %264 = ptrtoint %class.SkGpuDevice* %261 to i64
  %265 = bitcast %class.sk_sp.206* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265)
  %266 = call i8* @_Znwm(i64 56) #11, !noalias !18
  %267 = bitcast i8* %266 to %class.SkSurface_Gpu*
  store %class.SkGpuDevice* null, %class.SkGpuDevice** %202, align 8, !noalias !18
  %268 = bitcast %class.sk_sp.206* %2 to i64*
  store i64 %264, i64* %268, align 8, !noalias !18
  call void @_ZN13SkSurface_GpuC1E5sk_spI11SkGpuDeviceE(%class.SkSurface_Gpu* nonnull %267, %class.sk_sp.206* nonnull %2) #10, !noalias !18
  %269 = getelementptr inbounds %class.sk_sp.206, %class.sk_sp.206* %2, i64 0, i32 0
  %270 = load %class.SkGpuDevice*, %class.SkGpuDevice** %269, align 8, !noalias !18
  %271 = icmp eq %class.SkGpuDevice* %270, null
  br i1 %271, label %282, label %272

272:                                              ; preds = %263
  %273 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = atomicrmw add i32* %273, i32 -1 acq_rel, !noalias !18
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %276, label %282

276:                                              ; preds = %272
  %277 = bitcast %class.SkGpuDevice* %270 to %class.SkRefCntBase*
  %278 = bitcast %class.SkGpuDevice* %270 to void (%class.SkRefCntBase*)***
  %279 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %278, align 8, !noalias !18
  %280 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %279, i64 2
  %281 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %280, align 8, !noalias !18
  call void %281(%class.SkRefCntBase* nonnull %277) #10, !noalias !18
  br label %282

282:                                              ; preds = %263, %272, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265)
  %283 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 4, i32 0
  %284 = load %class.SkSurface*, %class.SkSurface** %283, align 8
  %285 = bitcast %class.SkSurface** %283 to i8**
  store i8* %266, i8** %285, align 8
  %286 = icmp eq %class.SkSurface* %284, null
  br i1 %286, label %297, label %287

287:                                              ; preds = %282
  %288 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %284, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = atomicrmw add i32* %288, i32 -1 acq_rel
  %290 = icmp eq i32 %289, 1
  br i1 %290, label %291, label %297

291:                                              ; preds = %287
  %292 = bitcast %class.SkSurface* %284 to %class.SkRefCntBase*
  %293 = bitcast %class.SkSurface* %284 to void (%class.SkRefCntBase*)***
  %294 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %293, align 8
  %295 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %294, i64 2
  %296 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %295, align 8
  call void %296(%class.SkRefCntBase* nonnull %292) #10
  br label %297

297:                                              ; preds = %282, %287, %291
  %298 = load %class.SkSurface*, %class.SkSurface** %283, align 8
  %299 = icmp ne %class.SkSurface* %298, null
  %300 = load %class.SkGpuDevice*, %class.SkGpuDevice** %202, align 8
  %301 = icmp eq %class.SkGpuDevice* %300, null
  br i1 %301, label %312, label %302

302:                                              ; preds = %297
  %303 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %300, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = atomicrmw add i32* %303, i32 -1 acq_rel
  %305 = icmp eq i32 %304, 1
  br i1 %305, label %306, label %312

306:                                              ; preds = %302
  %307 = bitcast %class.SkGpuDevice* %300 to %class.SkRefCntBase*
  %308 = bitcast %class.SkGpuDevice* %300 to void (%class.SkRefCntBase*)***
  %309 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %308, align 8
  %310 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %309, i64 2
  %311 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %310, align 8
  call void %311(%class.SkRefCntBase* nonnull %307) #10
  br label %312

312:                                              ; preds = %260, %297, %302, %306
  %313 = phi i1 [ %299, %297 ], [ %299, %302 ], [ %299, %306 ], [ false, %260 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #10
  br label %314

314:                                              ; preds = %49, %69, %66, %189, %1, %312, %44, %73, %57
  %315 = phi i1 [ false, %1 ], [ false, %44 ], [ false, %49 ], [ false, %57 ], [ false, %66 ], [ false, %73 ], [ false, %69 ], [ %313, %312 ], [ false, %189 ]
  ret i1 %315
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare i32 @_ZNK14GrContext_Base7backendEv(%class.GrContext_Base*) local_unnamed_addr #2

declare void @_ZN15GrProxyProvider27createLazyRenderTargetProxyEONSt3__18functionIFN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS2_15LazySurfaceDescEEEERK15GrBackendFormat7SkISizei22GrInternalSurfaceFlagsPKNS_11TextureInfoE14GrMipmapStatus12SkBackingFit10SkBudgeted11GrProtectedbNS2_12UseAllocatorE(%class.sk_sp.203* sret, %class.GrProxyProvider*, %"class.std::__1::function"* dereferenceable(32), %class.GrBackendFormat* dereferenceable(72), i64, i32, i32, %"struct.GrProxyProvider::TextureInfo"*, i32, i32, i1 zeroext, i1 zeroext, i1 zeroext, i32) local_unnamed_addr #2

declare void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext11GrColorType5sk_spI14GrSurfaceProxyES3_I12SkColorSpaceE15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.206* sret, %class.GrRecordingContext*, i32, %class.sk_sp.78*, %class.sk_sp.15*, i32, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCanvas* @_ZN29SkDeferredDisplayListRecorder9getCanvasEv(%class.SkDeferredDisplayListRecorder*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 1, i32 0
  %3 = load %class.GrRecordingContext*, %class.GrRecordingContext** %2, align 8
  %4 = icmp eq %class.GrRecordingContext* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %0, i64 0, i32 4, i32 0
  %7 = load %class.SkSurface*, %class.SkSurface** %6, align 8
  %8 = icmp eq %class.SkSurface* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @_ZN29SkDeferredDisplayListRecorder4initEv(%class.SkDeferredDisplayListRecorder* %0)
  br i1 %10, label %11, label %16

11:                                               ; preds = %9
  %12 = load %class.SkSurface*, %class.SkSurface** %6, align 8
  br label %13

13:                                               ; preds = %11, %5
  %14 = phi %class.SkSurface* [ %12, %11 ], [ %7, %5 ]
  %15 = tail call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %14) #10
  br label %16

16:                                               ; preds = %1, %9, %13
  %17 = phi %class.SkCanvas* [ %15, %13 ], [ null, %1 ], [ null, %9 ]
  ret %class.SkCanvas* %17
}

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29SkDeferredDisplayListRecorder6detachEv(%class.sk_sp.291* noalias nocapture sret, %class.SkDeferredDisplayListRecorder*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.203, align 8
  %4 = alloca %class.sk_sp.204, align 8
  %5 = alloca %class.GrRecordingContextPriv, align 8
  %6 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %1, i64 0, i32 1, i32 0
  %7 = load %class.GrRecordingContext*, %class.GrRecordingContext** %6, align 8
  %8 = icmp eq %class.GrRecordingContext* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %1, i64 0, i32 2
  %11 = getelementptr inbounds %class.sk_sp.203, %class.sk_sp.203* %10, i64 0, i32 0
  %12 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %11, align 8
  %13 = icmp eq %class.GrRenderTargetProxy* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %9, %2
  %15 = getelementptr inbounds %class.sk_sp.291, %class.sk_sp.291* %0, i64 0, i32 0
  store %class.SkDeferredDisplayList* null, %class.SkDeferredDisplayList** %15, align 8
  br label %90

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %1, i64 0, i32 4, i32 0
  %18 = load %class.SkSurface*, %class.SkSurface** %17, align 8
  %19 = icmp eq %class.SkSurface* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = tail call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* nonnull %18) #10
  tail call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* %21, i32 0) #10
  br label %22

22:                                               ; preds = %16, %20
  %23 = tail call i8* @_Znwm(i64 240) #11
  %24 = bitcast i8* %23 to %class.SkDeferredDisplayList*
  %25 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %1, i64 0, i32 0
  %26 = bitcast %class.sk_sp.203* %10 to i64*
  %27 = load i64, i64* %26, align 8
  store %class.GrRenderTargetProxy* null, %class.GrRenderTargetProxy** %11, align 8
  %28 = bitcast %class.sk_sp.203* %3 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %1, i64 0, i32 3
  %30 = getelementptr inbounds %class.sk_sp.204, %class.sk_sp.204* %29, i64 0, i32 0
  %31 = bitcast %class.sk_sp.204* %29 to i64*
  %32 = load i64, i64* %31, align 8
  store %"class.SkDeferredDisplayList::LazyProxyData"* null, %"class.SkDeferredDisplayList::LazyProxyData"** %30, align 8
  %33 = bitcast %class.sk_sp.204* %4 to i64*
  store i64 %32, i64* %33, align 8
  call void @_ZN21SkDeferredDisplayListC1ERK25SkSurfaceCharacterization5sk_spI19GrRenderTargetProxyES3_INS_13LazyProxyDataEE(%class.SkDeferredDisplayList* nonnull %24, %class.SkSurfaceCharacterization* dereferenceable(136) %25, %class.sk_sp.203* nonnull %3, %class.sk_sp.204* nonnull %4) #10
  %34 = ptrtoint i8* %23 to i64
  %35 = getelementptr inbounds %class.sk_sp.204, %class.sk_sp.204* %4, i64 0, i32 0
  %36 = load %"class.SkDeferredDisplayList::LazyProxyData"*, %"class.SkDeferredDisplayList::LazyProxyData"** %35, align 8
  %37 = icmp eq %"class.SkDeferredDisplayList::LazyProxyData"* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.SkDeferredDisplayList::LazyProxyData", %"class.SkDeferredDisplayList::LazyProxyData"* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = bitcast %"class.SkDeferredDisplayList::LazyProxyData"* %36 to %class.SkRefCntBase*
  %44 = bitcast %"class.SkDeferredDisplayList::LazyProxyData"* %36 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8
  call void %47(%class.SkRefCntBase* nonnull %43) #10
  br label %48

48:                                               ; preds = %22, %38, %42
  %49 = getelementptr inbounds %class.sk_sp.203, %class.sk_sp.203* %3, i64 0, i32 0
  %50 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %49, align 8
  %51 = icmp eq %class.GrRenderTargetProxy* %50, null
  br i1 %51, label %71, label %52

52:                                               ; preds = %48
  %53 = bitcast %class.GrRenderTargetProxy* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr i8, i8* %54, i64 -24
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, 8
  %59 = bitcast %class.GrRenderTargetProxy* %50 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  %61 = bitcast i8* %60 to i32*
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %71

64:                                               ; preds = %52
  %65 = getelementptr inbounds i8, i8* %59, i64 %57
  %66 = bitcast i8* %65 to %class.GrSurfaceProxy*
  %67 = bitcast i8* %65 to void (%class.GrSurfaceProxy*)***
  %68 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %68, i64 1
  %70 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %69, align 8
  call void %70(%class.GrSurfaceProxy* nonnull %66) #10
  br label %71

71:                                               ; preds = %48, %52, %64
  %72 = bitcast %class.GrRecordingContextPriv* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #10
  %73 = bitcast %class.GrRecordingContext** %6 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %class.GrRecordingContextPriv* %5 to i64*
  store i64 %74, i64* %75, align 8, !alias.scope !21
  call void @_ZN22GrRecordingContextPriv20moveRenderTasksToDDLEP21SkDeferredDisplayList(%class.GrRecordingContextPriv* nonnull %5, %class.SkDeferredDisplayList* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #10
  %76 = load %class.SkSurface*, %class.SkSurface** %17, align 8
  store %class.SkSurface* null, %class.SkSurface** %17, align 8
  %77 = icmp eq %class.SkSurface* %76, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %76, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 -1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %88

82:                                               ; preds = %78
  %83 = bitcast %class.SkSurface* %76 to %class.SkRefCntBase*
  %84 = bitcast %class.SkSurface* %76 to void (%class.SkRefCntBase*)***
  %85 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %85, i64 2
  %87 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, align 8
  call void %87(%class.SkRefCntBase* nonnull %83) #10
  br label %88

88:                                               ; preds = %82, %78, %71
  %89 = bitcast %class.sk_sp.291* %0 to i64*
  store i64 %34, i64* %89, align 8
  br label %90

90:                                               ; preds = %88, %14
  ret void
}

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #2

declare void @_ZN21SkDeferredDisplayListC1ERK25SkSurfaceCharacterization5sk_spI19GrRenderTargetProxyES3_INS_13LazyProxyDataEE(%class.SkDeferredDisplayList*, %class.SkSurfaceCharacterization* dereferenceable(136), %class.sk_sp.203*, %class.sk_sp.204*) unnamed_addr #2

declare void @_ZN22GrRecordingContextPriv20moveRenderTasksToDDLEP21SkDeferredDisplayList(%class.GrRecordingContextPriv*, %class.SkDeferredDisplayList*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29SkDeferredDisplayListRecorder18makePromiseTextureERK15GrBackendFormatii11GrMipmapped15GrSurfaceOrigin11SkColorType11SkAlphaType5sk_spI12SkColorSpaceEPFS7_I21SkPromiseImageTextureEPvEPFvSC_ESC_(%class.sk_sp.290* noalias sret, %class.SkDeferredDisplayListRecorder* nocapture readonly, %class.GrBackendFormat* dereferenceable(72), i32, i32, i1 zeroext, i32, i32, i32, %class.sk_sp.15* nocapture, void (%class.sk_sp.311*, i8*)*, void (i8*)*, i8*) local_unnamed_addr #0 align 2 {
  %14 = alloca %class.sk_sp, align 8
  %15 = alloca %class.sk_sp.15, align 8
  %16 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %1, i64 0, i32 1, i32 0
  %17 = load %class.GrRecordingContext*, %class.GrRecordingContext** %16, align 8
  %18 = icmp eq %class.GrRecordingContext* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.sk_sp.290, %class.sk_sp.290* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %20, align 8
  br label %50

21:                                               ; preds = %13
  %22 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %17, i64 0, i32 0, i32 0
  call void @_ZN14GrContext_Base15threadSafeProxyEv(%class.sk_sp* nonnull sret %14, %class.GrContext_Base* %22) #10
  %23 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %9, i64 0, i32 0
  %24 = bitcast %class.sk_sp.15* %9 to i64*
  %25 = load i64, i64* %24, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %23, align 8
  %26 = bitcast %class.sk_sp.15* %15 to i64*
  store i64 %25, i64* %26, align 8
  %27 = zext i32 %4 to i64
  %28 = shl nuw i64 %27, 32
  %29 = zext i32 %3 to i64
  %30 = or i64 %28, %29
  call void @_ZN7SkImage18MakePromiseTextureE5sk_spI24GrContextThreadSafeProxyERK15GrBackendFormat7SkISize11GrMipmapped15GrSurfaceOrigin11SkColorType11SkAlphaTypeS0_I12SkColorSpaceEPFS0_I21SkPromiseImageTextureEPvEPFvSF_ESF_(%class.sk_sp.290* sret %0, %class.sk_sp* nonnull %14, %class.GrBackendFormat* dereferenceable(72) %2, i64 %30, i1 zeroext %5, i32 %6, i32 %7, i32 %8, %class.sk_sp.15* nonnull %15, void (%class.sk_sp.311*, i8*)* %10, void (i8*)* %11, i8* %12) #10
  %31 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %15, i64 0, i32 0
  %32 = load %class.SkColorSpace*, %class.SkColorSpace** %31, align 8
  %33 = icmp eq %class.SkColorSpace* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %21
  %35 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = bitcast %class.SkColorSpace* %32 to i8*
  call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %21, %34, %38
  %41 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  %42 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %41, align 8
  %43 = icmp eq %class.GrContextThreadSafeProxy* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  call void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy* nonnull %42) #10
  %49 = bitcast %class.GrContextThreadSafeProxy* %42 to i8*
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %48, %44, %40, %19
  ret void
}

declare void @_ZN7SkImage18MakePromiseTextureE5sk_spI24GrContextThreadSafeProxyERK15GrBackendFormat7SkISize11GrMipmapped15GrSurfaceOrigin11SkColorType11SkAlphaTypeS0_I12SkColorSpaceEPFS0_I21SkPromiseImageTextureEPvEPFvSF_ESF_(%class.sk_sp.290* sret, %class.sk_sp*, %class.GrBackendFormat* dereferenceable(72), i64, i1 zeroext, i32, i32, i32, %class.sk_sp.15*, void (%class.sk_sp.311*, i8*)*, void (i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN14GrContext_Base15threadSafeProxyEv(%class.sk_sp* sret, %class.GrContext_Base*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29SkDeferredDisplayListRecorder22makeYUVAPromiseTextureERK24GrYUVABackendTextureInfo5sk_spI12SkColorSpaceEPFS3_I21SkPromiseImageTextureEPvEPFvS8_EPS8_(%class.sk_sp.290* noalias sret, %class.SkDeferredDisplayListRecorder* nocapture readonly, %class.GrYUVABackendTextureInfo* dereferenceable(328), %class.sk_sp.15* nocapture, void (%class.sk_sp.311*, i8*)*, void (i8*)*, i8**) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %class.sk_sp.15, align 8
  %10 = getelementptr inbounds %class.SkDeferredDisplayListRecorder, %class.SkDeferredDisplayListRecorder* %1, i64 0, i32 1, i32 0
  %11 = load %class.GrRecordingContext*, %class.GrRecordingContext** %10, align 8
  %12 = icmp eq %class.GrRecordingContext* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.sk_sp.290, %class.sk_sp.290* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %14, align 8
  br label %40

15:                                               ; preds = %7
  %16 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %11, i64 0, i32 0, i32 0
  call void @_ZN14GrContext_Base15threadSafeProxyEv(%class.sk_sp* nonnull sret %8, %class.GrContext_Base* %16) #10
  %17 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %3, i64 0, i32 0
  %18 = bitcast %class.sk_sp.15* %3 to i64*
  %19 = load i64, i64* %18, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %17, align 8
  %20 = bitcast %class.sk_sp.15* %9 to i64*
  store i64 %19, i64* %20, align 8
  call void @_ZN7SkImage22MakePromiseYUVATextureE5sk_spI24GrContextThreadSafeProxyERK24GrYUVABackendTextureInfoS0_I12SkColorSpaceEPFS0_I21SkPromiseImageTextureEPvEPFvSA_EPSA_(%class.sk_sp.290* sret %0, %class.sk_sp* nonnull %8, %class.GrYUVABackendTextureInfo* dereferenceable(328) %2, %class.sk_sp.15* nonnull %9, void (%class.sk_sp.311*, i8*)* %4, void (i8*)* %5, i8** %6) #10
  %21 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %9, i64 0, i32 0
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  %23 = icmp eq %class.SkColorSpace* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = bitcast %class.SkColorSpace* %22 to i8*
  call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %15, %24, %28
  %31 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %32 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %31, align 8
  %33 = icmp eq %class.GrContextThreadSafeProxy* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  call void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy* nonnull %32) #10
  %39 = bitcast %class.GrContextThreadSafeProxy* %32 to i8*
  call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %38, %34, %30, %13
  ret void
}

declare void @_ZN7SkImage22MakePromiseYUVATextureE5sk_spI24GrContextThreadSafeProxyERK24GrYUVABackendTextureInfoS0_I12SkColorSpaceEPFS0_I21SkPromiseImageTextureEPvEPFvSA_EPSA_(%class.sk_sp.290* sret, %class.sk_sp*, %class.GrYUVABackendTextureInfo* dereferenceable(328), %class.sk_sp.15*, void (%class.sk_sp.311*, i8*)*, void (i8*)*, i8**) local_unnamed_addr #2

declare void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21SkDeferredDisplayList13LazyProxyDataD0Ev(%"class.SkDeferredDisplayList::LazyProxyData"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkDeferredDisplayList::LazyProxyData"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind
declare void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy*) unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS2_15LazySurfaceDescEEE11__call_implINS0_20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0S9_EEEES3_PKNS0_16__policy_storageES5_S8_"(%"struct.GrSurfaceProxy::LazyCallbackResult"* noalias nocapture sret, %"union.std::__1::__function::__policy_storage"* nocapture readonly, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"* nocapture readnone dereferenceable(40)) #8 align 2 {
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %1 to %"class.std::__1::__function::__default_alloc_func"**
  %6 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.SkDeferredDisplayList::LazyProxyData"*, %"class.SkDeferredDisplayList::LazyProxyData"** %7, align 8, !noalias !24
  %9 = getelementptr inbounds %"class.SkDeferredDisplayList::LazyProxyData", %"class.SkDeferredDisplayList::LazyProxyData"* %8, i64 0, i32 1
  %10 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %9, align 8, !noalias !24
  %11 = bitcast %class.GrRenderTargetProxy* %10 to i8**
  %12 = load i8*, i8** %11, align 8, !noalias !24
  %13 = getelementptr i8, i8* %12, i64 -24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !24
  %16 = bitcast %class.GrRenderTargetProxy* %10 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = getelementptr inbounds i8, i8* %17, i64 16
  %19 = bitcast i8* %18 to %class.GrSurface**
  %20 = load %class.GrSurface*, %class.GrSurface** %19, align 8, !noalias !24
  %21 = icmp eq %class.GrSurface* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %20, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !33
  br label %25

25:                                               ; preds = %4, %22
  %26 = ptrtoint %class.GrSurface* %20 to i64
  %27 = bitcast %"struct.GrSurfaceProxy::LazyCallbackResult"* %0 to i64*
  store i64 %26, i64* %27, align 8, !alias.scope !24
  %28 = getelementptr inbounds %"struct.GrSurfaceProxy::LazyCallbackResult", %"struct.GrSurfaceProxy::LazyCallbackResult"* %0, i64 0, i32 1
  store i32 1, i32* %28, align 8, !alias.scope !24
  %29 = getelementptr inbounds %"struct.GrSurfaceProxy::LazyCallbackResult", %"struct.GrSurfaceProxy::LazyCallbackResult"* %0, i64 0, i32 2
  store i8 1, i8* %29, align 4, !alias.scope !24
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS6_15LazySurfaceDescEEEEEEPvPKv"(i8* nocapture readonly) #9 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #11, !noalias !36
  %3 = bitcast i8* %2 to %"class.SkDeferredDisplayList::LazyProxyData"**
  %4 = bitcast i8* %0 to %"class.SkDeferredDisplayList::LazyProxyData"**
  %5 = load %"class.SkDeferredDisplayList::LazyProxyData"*, %"class.SkDeferredDisplayList::LazyProxyData"** %4, align 8
  %6 = icmp eq %"class.SkDeferredDisplayList::LazyProxyData"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.SkDeferredDisplayList::LazyProxyData", %"class.SkDeferredDisplayList::LazyProxyData"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %1, %7
  store %"class.SkDeferredDisplayList::LazyProxyData"* %5, %"class.SkDeferredDisplayList::LazyProxyData"** %3, align 8
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS6_15LazySurfaceDescEEEEEEvPv"(i8*) #0 align 2 {
  %2 = bitcast i8* %0 to %"class.SkDeferredDisplayList::LazyProxyData"**
  %3 = load %"class.SkDeferredDisplayList::LazyProxyData"*, %"class.SkDeferredDisplayList::LazyProxyData"** %2, align 8
  %4 = icmp eq %"class.SkDeferredDisplayList::LazyProxyData"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkDeferredDisplayList::LazyProxyData", %"class.SkDeferredDisplayList::LazyProxyData"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %"class.SkDeferredDisplayList::LazyProxyData"* %3 to %class.SkRefCntBase*
  %11 = bitcast %"class.SkDeferredDisplayList::LazyProxyData"* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #10
  br label %15

15:                                               ; preds = %1, %5, %9
  tail call void @_ZdlPv(i8* %0) #11
  ret void
}

declare void @_ZN13SkSurface_GpuC1E5sk_spI11SkGpuDeviceE(%class.SkSurface_Gpu*, %class.sk_sp.206*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK25SkSurfaceCharacterization14refContextInfoEv: argument 0"}
!4 = distinct !{!4, !"_ZNK25SkSurfaceCharacterization14refContextInfoEv"}
!5 = !{i8 0, i8 2}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!9 = distinct !{!9, !10, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS6_15LazySurfaceDescEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS6_15LazySurfaceDescEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!11 = !{!12, !14, !16}
!12 = distinct !{!12, !13, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!13 = distinct !{!13, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!14 = distinct !{!14, !15, !"_ZNK11SkImageInfo13refColorSpaceEv: argument 0"}
!15 = distinct !{!15, !"_ZNK11SkImageInfo13refColorSpaceEv"}
!16 = distinct !{!16, !17, !"_ZNK25SkSurfaceCharacterization13refColorSpaceEv: argument 0"}
!17 = distinct !{!17, !"_ZNK25SkSurfaceCharacterization13refColorSpaceEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_Z10sk_make_spI13SkSurface_GpuJ5sk_spI11SkGpuDeviceEEES1_IT_EDpOT0_: argument 0"}
!20 = distinct !{!20, !"_Z10sk_make_spI13SkSurface_GpuJ5sk_spI11SkGpuDeviceEEES1_IT_EDpOT0_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN18GrRecordingContext4privEv: argument 0"}
!23 = distinct !{!23, !"_ZN18GrRecordingContext4privEv"}
!24 = !{!25, !27, !29, !31}
!25 = distinct !{!25, !26, !"_ZZN29SkDeferredDisplayListRecorder4initEvENK3$_0clEP18GrResourceProviderRKN14GrSurfaceProxy15LazySurfaceDescE: argument 0"}
!26 = distinct !{!26, !"_ZZN29SkDeferredDisplayListRecorder4initEvENK3$_0clEP18GrResourceProviderRKN14GrSurfaceProxy15LazySurfaceDescE"}
!27 = distinct !{!27, !28, !"_ZNSt3__18__invokeIRZN29SkDeferredDisplayListRecorder4initEvE3$_0JP18GrResourceProviderRKN14GrSurfaceProxy15LazySurfaceDescEEEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSA_DpOSB_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__18__invokeIRZN29SkDeferredDisplayListRecorder4initEvE3$_0JP18GrResourceProviderRKN14GrSurfaceProxy15LazySurfaceDescEEEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSA_DpOSB_"}
!29 = distinct !{!29, !30, !"_ZNSt3__128__invoke_void_return_wrapperIN14GrSurfaceProxy18LazyCallbackResultELb0EE6__callIJRZN29SkDeferredDisplayListRecorder4initEvE3$_0P18GrResourceProviderRKNS1_15LazySurfaceDescEEEES2_DpOT_: argument 0"}
!30 = distinct !{!30, !"_ZNSt3__128__invoke_void_return_wrapperIN14GrSurfaceProxy18LazyCallbackResultELb0EE6__callIJRZN29SkDeferredDisplayListRecorder4initEvE3$_0P18GrResourceProviderRKNS1_15LazySurfaceDescEEEES2_DpOT_"}
!31 = distinct !{!31, !32, !"_ZNSt3__110__function20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS4_15LazySurfaceDescEEEclEOS7_SA_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__110__function20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS4_15LazySurfaceDescEEEclEOS7_SA_"}
!33 = !{!34, !25, !27, !29, !31}
!34 = distinct !{!34, !35, !"_Z9sk_ref_spI9GrSurfaceE5sk_spIT_EPS2_: argument 0"}
!35 = distinct !{!35, !"_Z9sk_ref_spI9GrSurfaceE5sk_spIT_EPS2_"}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!39 = distinct !{!39, !40, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS6_15LazySurfaceDescEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN29SkDeferredDisplayListRecorder4initEvE3$_0FN14GrSurfaceProxy18LazyCallbackResultEP18GrResourceProviderRKNS6_15LazySurfaceDescEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
