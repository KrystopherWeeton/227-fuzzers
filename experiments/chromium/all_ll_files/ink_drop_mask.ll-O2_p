; ModuleID = '../../ui/views/animation/ink_drop_mask.cc'
source_filename = "../../ui/views/animation/ink_drop_mask.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintFlags" = type <{ %class.sk_sp.625, %class.sk_sp.626, %class.sk_sp.657, %class.sk_sp.658, %class.sk_sp.659, %class.sk_sp, i32, float, float, i32, %union.anon.660, [4 x i8] }>
%class.sk_sp.625 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.626 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.627", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.635, i32, %"class.absl::optional.644", %"class.std::__1::vector.362", %"class.std::__1::vector.649", %class.sk_sp.656, %class.sk_sp.632, i32, [4 x i8] }>
%"class.absl::optional.627" = type { %"class.absl::optional_internal::optional_data.628" }
%"class.absl::optional_internal::optional_data.628" = type { %"class.absl::optional_internal::optional_data_base.629" }
%"class.absl::optional_internal::optional_data_base.629" = type { %"class.absl::optional_internal::optional_data_dtor_base.630" }
%"class.absl::optional_internal::optional_data_dtor_base.630" = type { i8, %union.anon.631 }
%union.anon.631 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.632, %class.sk_sp.635, %"class.gfx::Rect", i32, %class.sk_sp.640, %class.sk_sp.641, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.632, %class.scoped_refptr.642 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.640 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.641 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr.642 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.643", [4 x i8] }>
%"class.base::RefCountedThreadSafe.643" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.635 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.636", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { i8* }
%"class.absl::optional.644" = type { %"class.absl::optional_internal::optional_data.645" }
%"class.absl::optional_internal::optional_data.645" = type { %"class.absl::optional_internal::optional_data_base.646" }
%"class.absl::optional_internal::optional_data_base.646" = type { %"class.absl::optional_internal::optional_data_dtor_base.647" }
%"class.absl::optional_internal::optional_data_dtor_base.647" = type { i8, %union.anon.648 }
%union.anon.648 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.362" = type { %"class.std::__1::__vector_base.363" }
%"class.std::__1::__vector_base.363" = type { i32*, i32*, %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { i32* }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { float*, float*, %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { float* }
%class.sk_sp.656 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.621", [7 x i8] }>
%"struct.std::__1::atomic.621" = type { %"struct.std::__1::__atomic_base.622" }
%"struct.std::__1::__atomic_base.622" = type { %"struct.std::__1::__cxx_atomic_impl.623" }
%"struct.std::__1::__cxx_atomic_impl.623" = type { %"struct.std::__1::__cxx_atomic_base_impl.624" }
%"struct.std::__1::__cxx_atomic_base_impl.624" = type { i8 }
%class.sk_sp.632 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.633, i32, i32 }
%class.sk_sp.633 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.634, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.634 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.117" }
%"struct.std::__1::atomic.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl.120" }
%"struct.std::__1::__cxx_atomic_impl.120" = type { %"struct.std::__1::__cxx_atomic_base_impl.121" }
%"struct.std::__1::__cxx_atomic_base_impl.121" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.657 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.658 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.659 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.47, i32, %"class.absl::optional", i8, i32 }
%class.sk_sp.47 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%union.anon.660 = type { i32 }
%"class.ui::PaintContext" = type opaque
%class.scoped_refptr.661 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.662", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.48", %"class.std::__1::vector.731", %"class.std::__1::vector.738", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.662" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.663", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.663" = type { %"class.std::__1::__vector_base.664" }
%"class.std::__1::__vector_base.664" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.670", %"class.std::__1::vector.680", %"class.base::flat_map.694", i8, i8, [6 x i8], %"class.cc::RTree.704", %"class.std::__1::vector.723" }
%"class.base::flat_map.670" = type { %"class.base::internal::flat_tree.671" }
%"class.base::internal::flat_tree.671" = type { %"class.std::__1::vector.672" }
%"class.std::__1::vector.672" = type { %"class.std::__1::__vector_base.673" }
%"class.std::__1::__vector_base.673" = type { %"struct.std::__1::pair.674"*, %"struct.std::__1::pair.674"*, %"class.std::__1::__compressed_pair.675" }
%"struct.std::__1::pair.674" = type opaque
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"struct.std::__1::pair.674"* }
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.689" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.682", i32, i32 }
%"class.std::__1::vector.682" = type { %"class.std::__1::__vector_base.683" }
%"class.std::__1::__vector_base.683" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.684" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.694" = type { %"class.base::internal::flat_tree.695" }
%"class.base::internal::flat_tree.695" = type { %"class.std::__1::vector.696" }
%"class.std::__1::vector.696" = type { %"class.std::__1::__vector_base.697" }
%"class.std::__1::__vector_base.697" = type { %"struct.std::__1::pair.698"*, %"struct.std::__1::pair.698"*, %"class.std::__1::__compressed_pair.699" }
%"struct.std::__1::pair.698" = type { i32, i32 }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"struct.std::__1::pair.698"* }
%"class.cc::RTree.704" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.715", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.705", %"class.absl::optional.710", float, [4 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional.705" = type { %"class.absl::optional_internal::optional_data.706" }
%"class.absl::optional_internal::optional_data.706" = type { %"class.absl::optional_internal::optional_data_base.707" }
%"class.absl::optional_internal::optional_data_base.707" = type { %"class.absl::optional_internal::optional_data_dtor_base.708" }
%"class.absl::optional_internal::optional_data_dtor_base.708" = type { i8, %union.anon.709 }
%union.anon.709 = type { i64 }
%"class.absl::optional.710" = type { %"class.absl::optional_internal::optional_data.711" }
%"class.absl::optional_internal::optional_data.711" = type { %"class.absl::optional_internal::optional_data_base.712" }
%"class.absl::optional_internal::optional_data_base.712" = type { %"class.absl::optional_internal::optional_data_dtor_base.713" }
%"class.absl::optional_internal::optional_data_dtor_base.713" = type { i8, %union.anon.714 }
%union.anon.714 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.715" = type { %"class.std::__1::__vector_base.716" }
%"class.std::__1::__vector_base.716" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.723" = type { %"class.std::__1::__vector_base.724" }
%"class.std::__1::__vector_base.724" = type { %"struct.std::__1::pair.725"*, %"struct.std::__1::pair.725"*, %"class.std::__1::__compressed_pair.726" }
%"struct.std::__1::pair.725" = type opaque
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"struct.std::__1::pair.725"* }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.731" = type { %"class.std::__1::__vector_base.732" }
%"class.std::__1::__vector_base.732" = type { i64*, i64*, %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { i64* }
%"class.std::__1::vector.738" = type { %"class.std::__1::__vector_base.739" }
%"class.std::__1::__vector_base.739" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.740" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.750 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.751 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%union.anon.772 = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp.773, %class.SkPixmap, %class.sk_sp.774 }
%class.sk_sp.773 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.774 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"class.ui::PaintCache" = type opaque
%"class.views::InkDropMask" = type { %"class.ui::LayerDelegate", %"class.ui::Layer" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::Layer" = type { %"class.ui::LayerAnimationDelegate", %"class.cc::ContentLayerClient", %"class.cc::TextureLayerClient", i32, %"class.ui::Compositor"*, %"class.ui::Layer"*, %"class.std::__1::vector.177", %"class.std::__1::vector.184", %"class.ui::Layer"*, %"class.base::internal::flat_tree.192", i8, i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.193", i8, i8, i8, i8, %"class.cc::Region", %"class.cc::Region", float, float, float, float, i8, float, %"class.ui::Layer"*, %"class.ui::Layer"*, float, i32, %"class.std::__1::unique_ptr.199", %"class.std::__1::basic_string", %"class.ui::LayerDelegate"*, %"class.base::ObserverList.205", %"class.ui::LayerOwner"*, %class.scoped_refptr.209, %class.scoped_refptr.210, %class.scoped_refptr.211, %class.scoped_refptr.212, %class.scoped_refptr.213, %class.scoped_refptr.214, %class.scoped_refptr.215, %"class.cc::Layer"*, float, %"class.gfx::ImageSkia", %"class.gfx::Rect", %"struct.viz::TransferableResource", %"class.base::OnceCallback", %"class.gfx::Size", i32, i32, float, i32, %"class.base::WeakPtrFactory.240" }
%"class.ui::LayerAnimationDelegate" = type { i32 (...)** }
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%"class.ui::Compositor" = type { %"class.cc::LayerTreeHostClient", %"class.cc::LayerTreeHostSingleThreadClient", %"class.viz::HostFrameSinkClient", %"class.ui::ThroughputTrackerHost", %"class.gfx::Size", %"class.ui::ContextFactory"*, %"class.viz::mojom::DisplayPrivate"*, %"class.viz::mojom::ExternalBeginFrameController"*, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList", %"class.base::ObserverList.4", i32, i32, float, [4 x i8], %"class.std::__1::unordered_set", i8, i8, %"class.viz::FrameSinkId", %class.scoped_refptr, %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.base::WeakPtr", %class.scoped_refptr.122, %"class.base::TimeTicks", %"class.base::TimeDelta", i8, i8, i8, float, %"class.ui::LayerAnimatorCollection", %class.scoped_refptr.132, %"class.std::__1::unique_ptr.133", %class.SkMatrix44, %"class.gfx::DisplayColorSpaces", i8, i8, %"class.ui::CompositorLockManager", %"class.std::__1::unique_ptr.160", i8, i64, %"class.base::flat_map.166", %"class.base::WeakPtrFactory.176", %"class.base::WeakPtrFactory.176" }
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSingleThreadClient" = type { i32 (...)** }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.ui::ThroughputTrackerHost" = type { i32 (...)** }
%"class.ui::ContextFactory" = type { i32 (...)** }
%"class.viz::mojom::DisplayPrivate" = type opaque
%"class.viz::mojom::ExternalBeginFrameController" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::PendingBeginFrameArgs"* }
%"struct.ui::PendingBeginFrameArgs" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.4" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.5", i64, i32, [4 x i8] }>
%"class.base::LinkedList.5" = type { %"class.base::LinkNode.6" }
%"class.base::LinkNode.6" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.8", %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.24", [4 x i8] }>
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { float }
%"class.viz::FrameSinkId" = type { i32, i32 }
%class.scoped_refptr = type { %"class.cc::Layer"* }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.cc::AnimationHost"* }
%"class.cc::AnimationHost" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.cc::LayerTreeHost"* }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr.249", %class.scoped_refptr.250, %"class.std::__1::unique_ptr.251", i32, %"class.std::__1::unique_ptr.257", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269", i32, %"class.std::__1::unique_ptr.275", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.299", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.314", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.462, %"class.base::flat_map.463", %"class.base::internal::flat_tree.473", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.504", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.530", %"class.std::__1::unordered_map.538", %"class.std::__1::vector.562", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.571", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.592", %"class.std::__1::vector.598", %"class.base::flat_map.606", %"class.base::WeakPtrFactory.616" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.241", %class.scoped_refptr.122 }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"class.std::__1::unique_ptr.243"*, %"class.std::__1::unique_ptr.243"*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::unique_ptr.243" = type opaque
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.std::__1::unique_ptr.243"* }
%"class.base::WeakPtr.249" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.115 }
%class.scoped_refptr.115 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.116", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.116" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.117" }
%class.scoped_refptr.250 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.123" }>
%"class.base::RefCountedThreadSafe.123" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.122, %class.scoped_refptr.122 }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.281", %"class.std::__1::set.289" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.std::__1::unique_ptr.283"*, %"class.std::__1::unique_ptr.283"*, %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.std::__1::unique_ptr.283"* }
%"class.std::__1::set.289" = type { %"class.std::__1::__tree.290" }
%"class.std::__1::__tree.290" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.302, %class.scoped_refptr.303, %class.scoped_refptr.122, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.304", i64, %"class.base::WeakPtrFactory.310" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.302 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.303 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory.310" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.159 }
%class.scoped_refptr.159 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.320", %"class.base::flat_map.320", %"class.base::flat_map.320", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.320" = type { %"class.base::internal::flat_tree.321" }
%"class.base::internal::flat_tree.321" = type { %"class.std::__1::vector.322" }
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"struct.std::__1::pair.324"*, %"struct.std::__1::pair.324"*, %"class.std::__1::__compressed_pair.325" }
%"struct.std::__1::pair.324" = type opaque
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::pair.324"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.337", %"class.std::__1::vector.344", %"class.std::__1::vector.351" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.330", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.332" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { i32*, i32*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { i32* }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.346" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.351" = type { %"class.std::__1::__vector_base.352" }
%"class.std::__1::__vector_base.352" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.353" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.358", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.397" }
%"class.cc::PropertyTree.358" = type { i32 (...)**, %"class.std::__1::vector.359", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.359" = type { %"class.std::__1::__vector_base.360" }
%"class.std::__1::__vector_base.360" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.369" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.60", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.44" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.55" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.48", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.361" }
%"class.base::internal::flat_tree.361" = type { %"class.std::__1::vector.362" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector.397" = type { %"class.std::__1::__vector_base.398" }
%"class.std::__1::__vector_base.398" = type { %"class.std::__1::unique_ptr.399"*, %"class.std::__1::unique_ptr.399"*, %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.std::__1::unique_ptr.399"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.410" }
%"class.cc::PropertyTree.410" = type { i32 (...)**, %"class.std::__1::vector.411", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.411" = type { %"class.std::__1::__vector_base.412" }
%"class.std::__1::__vector_base.412" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.413" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.418", i32, %"class.base::flat_map.426", %"class.base::flat_map.436", %"class.base::WeakPtr.446" }
%"class.cc::PropertyTree.418" = type { i32 (...)**, %"class.std::__1::vector.419", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.419" = type { %"class.std::__1::__vector_base.420" }
%"class.std::__1::__vector_base.420" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.421" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.426" = type { %"class.base::internal::flat_tree.427" }
%"class.base::internal::flat_tree.427" = type { %"class.std::__1::vector.428" }
%"class.std::__1::vector.428" = type { %"class.std::__1::__vector_base.429" }
%"class.std::__1::__vector_base.429" = type { %"struct.std::__1::pair.430"*, %"struct.std::__1::pair.430"*, %"class.std::__1::__compressed_pair.431" }
%"struct.std::__1::pair.430" = type opaque
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"struct.std::__1::pair.430"* }
%"class.base::flat_map.436" = type { %"class.base::internal::flat_tree.437" }
%"class.base::internal::flat_tree.437" = type { %"class.std::__1::vector.438" }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"struct.std::__1::pair.440"*, %"struct.std::__1::pair.440"*, %"class.std::__1::__compressed_pair.441" }
%"struct.std::__1::pair.440" = type opaque
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"struct.std::__1::pair.440"* }
%"class.base::WeakPtr.446" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.447", %"class.std::__1::vector.454" }
%"class.std::__1::vector.447" = type { %"class.std::__1::__vector_base.448" }
%"class.std::__1::__vector_base.448" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.449" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.454" = type { %"class.std::__1::__vector_base.455" }
%"class.std::__1::__vector_base.455" = type { %"class.std::__1::vector.456"*, %"class.std::__1::vector.456"*, %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::vector.456" = type opaque
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.std::__1::vector.456"* }
%"class.gfx::Vector2dF" = type { float, float }
%class.scoped_refptr.462 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.463" = type { %"class.base::internal::flat_tree.464" }
%"class.base::internal::flat_tree.464" = type { %"class.std::__1::vector.465" }
%"class.std::__1::vector.465" = type { %"class.std::__1::__vector_base.466" }
%"class.std::__1::__vector_base.466" = type { %"struct.std::__1::pair.467"*, %"struct.std::__1::pair.467"*, %"class.std::__1::__compressed_pair.468" }
%"struct.std::__1::pair.467" = type opaque
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::pair.467"* }
%"class.base::internal::flat_tree.473" = type { %"class.std::__1::vector.474" }
%"class.std::__1::vector.474" = type { %"class.std::__1::__vector_base.475" }
%"class.std::__1::__vector_base.475" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.481" }
%"class.std::__1::__hash_table.481" = type <{ %"class.std::__1::unique_ptr.482", %"class.std::__1::__compressed_pair.492", %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.500", [4 x i8] }>
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484", %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"struct.std::__1::__hash_node_base.485"** }
%"struct.std::__1::__hash_node_base.485" = type { %"struct.std::__1::__hash_node_base.485"* }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.std::__1::__bucket_list_deallocator.487" }
%"class.std::__1::__bucket_list_deallocator.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.std::__1::__hash_node_base.485" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unordered_map.504" = type { %"class.std::__1::__hash_table.505" }
%"class.std::__1::__hash_table.505" = type <{ %"class.std::__1::unique_ptr.506", %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.524", [4 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508", %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.std::__1::__hash_node_base.509"** }
%"struct.std::__1::__hash_node_base.509" = type { %"struct.std::__1::__hash_node_base.509"* }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::__bucket_list_deallocator.511" }
%"class.std::__1::__bucket_list_deallocator.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.509" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.530" = type { %"class.std::__1::__vector_base.531" }
%"class.std::__1::__vector_base.531" = type { %"struct.std::__1::pair.532"*, %"struct.std::__1::pair.532"*, %"class.std::__1::__compressed_pair.533" }
%"struct.std::__1::pair.532" = type opaque
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"struct.std::__1::pair.532"* }
%"class.std::__1::unordered_map.538" = type { %"class.std::__1::__hash_table.539" }
%"class.std::__1::__hash_table.539" = type <{ %"class.std::__1::unique_ptr.540", %"class.std::__1::__compressed_pair.550", %"class.std::__1::__compressed_pair.555", %"class.std::__1::__compressed_pair.558", [4 x i8] }>
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542", %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"struct.std::__1::__hash_node_base.543"** }
%"struct.std::__1::__hash_node_base.543" = type { %"struct.std::__1::__hash_node_base.543"* }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.std::__1::__bucket_list_deallocator.545" }
%"class.std::__1::__bucket_list_deallocator.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"struct.std::__1::__hash_node_base.543" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector.562" = type { %"class.std::__1::__vector_base.563" }
%"class.std::__1::__vector_base.563" = type { %"class.base::OnceCallback.564"*, %"class.base::OnceCallback.564"*, %"class.std::__1::__compressed_pair.565" }
%"class.base::OnceCallback.564" = type opaque
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.base::OnceCallback.564"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.570" }
%"class.base::OnceCallback.570" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.65 }
%class.scoped_refptr.65 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.577", %"class.std::__1::vector.584" }
%"class.std::__1::vector.577" = type { %"class.std::__1::__vector_base.578" }
%"class.std::__1::__vector_base.578" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.579" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.584" = type { %"class.std::__1::__vector_base.585" }
%"class.std::__1::__vector_base.585" = type { %"class.std::__1::unique_ptr.586"*, %"class.std::__1::unique_ptr.586"*, %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.788", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.788" = type { %"class.absl::optional_internal::optional_data.789" }
%"class.absl::optional_internal::optional_data.789" = type { %"class.absl::optional_internal::optional_data_base.790" }
%"class.absl::optional_internal::optional_data_base.790" = type { %"class.absl::optional_internal::optional_data_dtor_base.791" }
%"class.absl::optional_internal::optional_data_dtor_base.791" = type { i8, %union.anon.792 }
%union.anon.792 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.std::__1::unique_ptr.586"* }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.598" = type { %"class.std::__1::__vector_base.599" }
%"class.std::__1::__vector_base.599" = type { %"class.std::__1::unique_ptr.600"*, %"class.std::__1::unique_ptr.600"*, %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::unique_ptr.600" = type opaque
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::unique_ptr.600"* }
%"class.base::flat_map.606" = type { %"class.base::internal::flat_tree.607" }
%"class.base::internal::flat_tree.607" = type { %"class.std::__1::vector.608" }
%"class.std::__1::vector.608" = type { %"class.std::__1::__vector_base.609" }
%"class.std::__1::__vector_base.609" = type { %"struct.std::__1::pair.610"*, %"struct.std::__1::pair.610"*, %"class.std::__1::__compressed_pair.611" }
%"struct.std::__1::pair.610" = type opaque
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"struct.std::__1::pair.610"* }
%"class.base::WeakPtrFactory.616" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.122 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LayerAnimatorCollection" = type { %"class.ui::CompositorAnimationObserver", %"class.ui::Compositor"*, %"class.base::TimeTicks", %"class.std::__1::set" }
%"class.ui::CompositorAnimationObserver" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%class.scoped_refptr.132 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.ui::ScopedAnimationDurationScaleMode"* }
%"class.ui::ScopedAnimationDurationScaleMode" = type opaque
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.139" }
%"class.absl::optional.139" = type { %"class.absl::optional_internal::optional_data.140" }
%"class.absl::optional_internal::optional_data.140" = type { %"class.absl::optional_internal::optional_data_base.141" }
%"class.absl::optional_internal::optional_data_base.141" = type { %"class.absl::optional_internal::optional_data_dtor_base.142" }
%"class.absl::optional_internal::optional_data_dtor_base.142" = type { i8, %union.anon.143 }
%union.anon.143 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.ui::CompositorLockManager" = type { %class.scoped_refptr.122, %"class.base::TimeTicks", i8, %"class.std::__1::vector.144", %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory" }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { %"class.ui::CompositorLock"**, %"class.ui::CompositorLock"**, %"class.std::__1::__compressed_pair.154" }
%"class.ui::CompositorLock" = type { %"class.ui::CompositorLockClient"*, %"class.std::__1::unique_ptr.146", %"class.base::WeakPtr.153" }
%"class.ui::CompositorLockClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.cc::ScopedDeferMainFrameUpdate"* }
%"class.cc::ScopedDeferMainFrameUpdate" = type { %"class.base::WeakPtr.149" }
%"class.base::WeakPtr.149" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.153" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.ui::CompositorLock"** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.ui::ScrollInputHandler"* }
%"class.ui::ScrollInputHandler" = type opaque
%"class.base::flat_map.166" = type { %"class.base::internal::flat_tree.167" }
%"class.base::internal::flat_tree.167" = type { %"class.std::__1::vector.168" }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.std::__1::pair.170"*, %"struct.std::__1::pair.170"*, %"class.std::__1::__compressed_pair.171" }
%"struct.std::__1::pair.170" = type opaque
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.std::__1::pair.170"* }
%"class.base::WeakPtrFactory.176" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.ui::Layer"** }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"*, %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::unique_ptr.186" = type opaque
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.std::__1::unique_ptr.186"* }
%"class.base::internal::flat_tree.192" = type { %"class.std::__1::vector.177" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.ui::Layer::SubpixelPositionOffsetCache"* }
%"class.ui::Layer::SubpixelPositionOffsetCache" = type opaque
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.std::__1::vector.48"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.82 }
%union.anon.82 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ObserverList.205" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.206", i64, i32, [4 x i8] }>
%"class.base::LinkedList.206" = type { %"class.base::LinkNode.207" }
%"class.base::LinkNode.207" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::LayerOwner" = type opaque
%class.scoped_refptr.209 = type { %"class.ui::LayerAnimator"* }
%"class.ui::LayerAnimator" = type opaque
%class.scoped_refptr.210 = type { %"class.cc::PictureLayer"* }
%"class.cc::PictureLayer" = type opaque
%class.scoped_refptr.211 = type { %"class.cc::MirrorLayer"* }
%"class.cc::MirrorLayer" = type opaque
%class.scoped_refptr.212 = type { %"class.cc::NinePatchLayer"* }
%"class.cc::NinePatchLayer" = type opaque
%class.scoped_refptr.213 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%class.scoped_refptr.214 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%class.scoped_refptr.215 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.216", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.222", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.41", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.77" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.27", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.scoped_refptr* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.34" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.60", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.66" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"class.std::__1::unique_ptr.68"*, %"class.std::__1::unique_ptr.68"*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::unique_ptr.68" = type opaque
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::unique_ptr.68"* }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.86", %"class.std::__1::vector.86", %"class.std::__1::vector.93" }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { i8**, i8**, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i8** }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.95" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.base::RepeatingCallback.216" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.217", %"class.viz::SurfaceId" }
%"class.absl::optional.217" = type { %"class.absl::optional_internal::optional_data.218" }
%"class.absl::optional_internal::optional_data.218" = type { %"class.absl::optional_internal::optional_data_base.219" }
%"class.absl::optional_internal::optional_data_base.219" = type { %"class.absl::optional_internal::optional_data_dtor_base.220" }
%"class.absl::optional_internal::optional_data_dtor_base.220" = type { i8, %union.anon.221 }
%union.anon.221 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.absl::optional.222" = type { %"class.absl::optional_internal::optional_data.223" }
%"class.absl::optional_internal::optional_data.223" = type { %"class.absl::optional_internal::optional_data_base.224" }
%"class.absl::optional_internal::optional_data_base.224" = type { %"class.absl::optional_internal::optional_data_dtor_base.225" }
%"class.absl::optional_internal::optional_data_dtor_base.225" = type { i8, %union.anon.226 }
%union.anon.226 = type { i32 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"struct.viz::TransferableResource" = type { %"class.util::IdType", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.230", i8, i32, i8, [7 x i8], %"class.absl::optional.235" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.228", i64 }
%"class.util::IdType.228" = type { %"class.base::StrongAlias.229" }
%"class.base::StrongAlias.229" = type { i64 }
%"class.absl::optional.230" = type { %"class.absl::optional_internal::optional_data.231" }
%"class.absl::optional_internal::optional_data.231" = type { %"class.absl::optional_internal::optional_data_base.232" }
%"class.absl::optional_internal::optional_data_base.232" = type { %"class.absl::optional_internal::optional_data_dtor_base.233" }
%"class.absl::optional_internal::optional_data_dtor_base.233" = type { i8, %union.anon.234 }
%union.anon.234 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.235" = type { %"class.absl::optional_internal::optional_data.236" }
%"class.absl::optional_internal::optional_data.236" = type { %"class.absl::optional_internal::optional_data_base.237" }
%"class.absl::optional_internal::optional_data_base.237" = type { %"class.absl::optional_internal::optional_data_dtor_base.238" }
%"class.absl::optional_internal::optional_data_dtor_base.238" = type { i8, [7 x i8], %union.anon.239 }
%union.anon.239 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.240" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.views::PathInkDropMask" = type { %"class.views::InkDropMask", %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.617, i32, %"struct.std::__1::atomic.117", %"struct.std::__1::atomic.117", i8, i8 }>
%class.sk_sp.617 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.618, %class.SkTDArray.619, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.618 = type { i8*, i32, i32 }
%class.SkTDArray.619 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.620 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.620 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.621", [3 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.ui::PaintRecorder" = type { %"class.ui::PaintContext"*, %class.scoped_refptr.661, %"class.cc::RecordPaintCanvas", %"class.gfx::Canvas", %"class.ui::PaintCache"*, %"class.gfx::Size" }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.745", %struct.SkRect }
%"class.absl::optional.745" = type { %"class.absl::optional_internal::optional_data.746" }
%"class.absl::optional_internal::optional_data.746" = type { %"class.absl::optional_internal::optional_data_base.747" }
%"class.absl::optional_internal::optional_data_base.747" = type { %"class.absl::optional_internal::optional_data_dtor_base.748" }
%"class.absl::optional_internal::optional_data_dtor_base.748" = type { i8, %union.anon.749 }
%union.anon.749 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional.768", %"class.absl::optional.775", %"class.cc::PaintCanvas"* }
%"class.absl::optional.768" = type { %"class.absl::optional_internal::optional_data.769" }
%"class.absl::optional_internal::optional_data.769" = type { %"class.absl::optional_internal::optional_data_base.770" }
%"class.absl::optional_internal::optional_data_base.770" = type { %"class.absl::optional_internal::optional_data_dtor_base.771" }
%"class.absl::optional_internal::optional_data_dtor_base.771" = type { i8, %union.anon.772 }
%"class.absl::optional.775" = type { %"class.absl::optional_internal::optional_data.776" }
%"class.absl::optional_internal::optional_data.776" = type { %"class.absl::optional_internal::optional_data_base.777" }
%"class.absl::optional_internal::optional_data_base.777" = type { %"class.absl::optional_internal::optional_data_dtor_base.778" }
%"class.absl::optional_internal::optional_data_dtor_base.778" = type { i8, [7 x i8], %union.anon.779 }
%union.anon.779 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.780", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }

$_ZN5views15PathInkDropMaskD2Ev = comdat any

$_ZN5views15PathInkDropMaskD0Ev = comdat any

@_ZTVN5views11InkDropMaskE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.views::InkDropMask"*, float, float)* @_ZN5views11InkDropMask26OnDeviceScaleFactorChangedEff to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, %"class.gfx::Rect"*, i32)* @_ZN2ui13LayerDelegate20OnLayerBoundsChangedERKN3gfx4RectENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, %"class.gfx::Transform"*, i32)* @_ZN2ui13LayerDelegate18OnLayerTransformedERKN3gfx9TransformENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, i32)* @_ZN2ui13LayerDelegate21OnLayerOpacityChangedENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*)* @_ZN2ui13LayerDelegate24OnLayerAlphaShapeChangedEv to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, i32)* @_ZN2ui13LayerDelegate33OnLayerFillsBoundsOpaquelyChangedENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*)* @_ZN2ui13LayerDelegate17UpdateVisualStateEv to i8*), i8* bitcast (void (%"class.views::InkDropMask"*)* @_ZN5views11InkDropMaskD2Ev to i8*), i8* bitcast (void (%"class.views::InkDropMask"*)* @_ZN5views11InkDropMaskD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"InkDropMaskLayer\00", align 1
@_ZTVN5views15PathInkDropMaskE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::PathInkDropMask"*, %"class.ui::PaintContext"*)* @_ZN5views15PathInkDropMask12OnPaintLayerERKN2ui12PaintContextE to i8*), i8* bitcast (void (%"class.views::InkDropMask"*, float, float)* @_ZN5views11InkDropMask26OnDeviceScaleFactorChangedEff to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, %"class.gfx::Rect"*, i32)* @_ZN2ui13LayerDelegate20OnLayerBoundsChangedERKN3gfx4RectENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, %"class.gfx::Transform"*, i32)* @_ZN2ui13LayerDelegate18OnLayerTransformedERKN3gfx9TransformENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, i32)* @_ZN2ui13LayerDelegate21OnLayerOpacityChangedENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*)* @_ZN2ui13LayerDelegate24OnLayerAlphaShapeChangedEv to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*, i32)* @_ZN2ui13LayerDelegate33OnLayerFillsBoundsOpaquelyChangedENS_20PropertyChangeReasonE to i8*), i8* bitcast (void (%"class.ui::LayerDelegate"*)* @_ZN2ui13LayerDelegate17UpdateVisualStateEv to i8*), i8* bitcast (void (%"class.views::PathInkDropMask"*)* @_ZN5views15PathInkDropMaskD2Ev to i8*), i8* bitcast (void (%"class.views::PathInkDropMask"*)* @_ZN5views15PathInkDropMaskD0Ev to i8*)] }, align 8
@__const._ZN5views15PathInkDropMask12OnPaintLayerERKN2ui12PaintContextE.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.625 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.626 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.657 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.658 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.659 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.660 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN5views15PathInkDropMask12OnPaintLayerERKN2ui12PaintContextE.recorder = private unnamed_addr constant { %"class.ui::PaintContext"*, %class.scoped_refptr.661, { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } } } } } } } }, %struct.SkRect }, { i32 (...)**, float, [4 x i8], { { { { i8, [7 x i8], %union.anon.772 } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.780", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } }, %"class.cc::PaintCanvas"* }, %"class.ui::PaintCache"*, %"class.gfx::Size" } { %"class.ui::PaintContext"* inttoptr (i64 -6148914691236517206 to %"class.ui::PaintContext"*), %class.scoped_refptr.661 { %"class.cc::DisplayItemList"* inttoptr (i64 -6148914691236517206 to %"class.cc::DisplayItemList"*) }, { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } } } } } } } }, %struct.SkRect } { %"class.cc::PaintCanvas" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.printing::MetafileSkia"* inttoptr (i64 -6148914691236517206 to %"class.printing::MetafileSkia"*), %"class.paint_preview::PaintPreviewTracker"* inttoptr (i64 -6148914691236517206 to %"class.paint_preview::PaintPreviewTracker"*) }, %"class.cc::DisplayItemList"* inttoptr (i64 -6148914691236517206 to %"class.cc::DisplayItemList"*), { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } } } } } } } } { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } } } } } } } { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } } } } } } { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } } } } { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } } } { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } } { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.750 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.751 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.752" { %"class.std::__1::__compressed_pair.753" { %"struct.std::__1::__compressed_pair_elem.754" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.758" { %"class.std::__1::__compressed_pair.759" { %"struct.std::__1::__compressed_pair_elem.760" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } } } } } } } } }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, { i32 (...)**, float, [4 x i8], { { { { i8, [7 x i8], %union.anon.772 } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.780", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } }, %"class.cc::PaintCanvas"* } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.772 } } } } { { { { i8, [7 x i8], %union.anon.772 } } } { { { i8, [7 x i8], %union.anon.772 } } { { i8, [7 x i8], %union.anon.772 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.772 { %class.SkBitmap { %class.sk_sp.773 { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.633 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.774 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } } } } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.780", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } } { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.780", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.780", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.780", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.780", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.780", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> <{ %"class.cc::PaintCanvas" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.printing::MetafileSkia"* inttoptr (i64 -6148914691236517206 to %"class.printing::MetafileSkia"*), %"class.paint_preview::PaintPreviewTracker"* inttoptr (i64 -6148914691236517206 to %"class.paint_preview::PaintPreviewTracker"*) }, %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*), %class.SkBitmap { %class.sk_sp.773 { %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*) }, %class.SkPixmap { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, %struct.SkImageInfo { %class.SkColorInfo { %class.sk_sp.633 { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, i32 -1431655766, i32 -1431655766 }, %struct.SkISize { i32 -1431655766, i32 -1431655766 } } }, %class.sk_sp.774 { %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*) } }, %"class.std::__1::unique_ptr.780" { %"class.std::__1::__compressed_pair.781" { %"struct.std::__1::__compressed_pair_elem.782" { %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*) } } }, %"class.cc::ImageProvider"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageProvider"*), { i8, [3 x i8], i32 } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } } } } }, %"class.cc::PaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintCanvas"*) }, %"class.ui::PaintCache"* inttoptr (i64 -6148914691236517206 to %"class.ui::PaintCache"*), %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, align 8

@_ZN5views11InkDropMaskD1Ev = hidden unnamed_addr alias void (%"class.views::InkDropMask"*), void (%"class.views::InkDropMask"*)* @_ZN5views11InkDropMaskD2Ev
@_ZN5views15PathInkDropMaskC1ERKN3gfx4SizeERK6SkPath = hidden unnamed_addr alias void (%"class.views::PathInkDropMask"*, %"class.gfx::Size"*, %class.SkPath*), void (%"class.views::PathInkDropMask"*, %"class.gfx::Size"*, %class.SkPath*)* @_ZN5views15PathInkDropMaskC2ERKN3gfx4SizeERK6SkPath

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views11InkDropMaskC2ERKN3gfx4SizeE(%"class.views::InkDropMask"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.views::InkDropMask", %"class.views::InkDropMask"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.views::InkDropMask", %"class.views::InkDropMask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5views11InkDropMaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.views::InkDropMask", %"class.views::InkDropMask"* %0, i64 0, i32 1
  tail call void @_ZN2ui5LayerC1ENS_9LayerTypeE(%"class.ui::Layer"* %7, i32 1) #9
  %8 = getelementptr inbounds %"class.views::InkDropMask", %"class.views::InkDropMask"* %0, i64 0, i32 1, i32 32
  store %"class.ui::LayerDelegate"* %5, %"class.ui::LayerDelegate"** %8, align 8
  %9 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %13 = bitcast %"class.gfx::Size"* %1 to i64*
  %14 = bitcast %"class.gfx::Size"* %12 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 4
  call void @_ZN2ui5Layer9SetBoundsERKN3gfx4RectE(%"class.ui::Layer"* %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  call void @_ZN2ui5Layer22SetFillsBoundsOpaquelyEb(%"class.ui::Layer"* %7, i1 zeroext false) #9
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 16, i8* %18, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16, i1 false) #9
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = bitcast i64* %19 to i8*
  store i8 0, i8* %20, align 8
  call void @_ZN2ui5Layer7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.ui::Layer"* %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  %21 = load i8, i8* %18, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %2, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  ret void
}

declare void @_ZN2ui5LayerC1ENS_9LayerTypeE(%"class.ui::Layer"*, i32) unnamed_addr #1

declare void @_ZN2ui5Layer9SetBoundsERKN3gfx4RectE(%"class.ui::Layer"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2ui5Layer22SetFillsBoundsOpaquelyEb(%"class.ui::Layer"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN2ui5Layer7SetNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.ui::Layer"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views11InkDropMaskD2Ev(%"class.views::InkDropMask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::InkDropMask", %"class.views::InkDropMask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5views11InkDropMaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::InkDropMask", %"class.views::InkDropMask"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.views::InkDropMask", %"class.views::InkDropMask"* %0, i64 0, i32 1, i32 32
  store %"class.ui::LayerDelegate"* null, %"class.ui::LayerDelegate"** %4, align 8
  tail call void @_ZN2ui5LayerD1Ev(%"class.ui::Layer"* %3) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui5LayerD1Ev(%"class.ui::Layer"*) unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5views11InkDropMaskD0Ev(%"class.views::InkDropMask"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views11InkDropMask26OnDeviceScaleFactorChangedEff(%"class.views::InkDropMask"* nocapture, float, float) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views15PathInkDropMaskC2ERKN3gfx4SizeERK6SkPath(%"class.views::PathInkDropMask"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), %class.SkPath* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 0
  tail call void @_ZN5views11InkDropMaskC2ERKN3gfx4SizeE(%"class.views::InkDropMask"* %4, %"class.gfx::Size"* dereferenceable(8) %1)
  %5 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5views15PathInkDropMaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 1
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %6, %class.SkPath* dereferenceable(16) %2) #9
  ret void
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views15PathInkDropMask12OnPaintLayerERKN2ui12PaintContextE(%"class.views::PathInkDropMask"*, %"class.ui::PaintContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintFlags", align 8
  %4 = alloca %"class.ui::PaintRecorder", align 8
  %5 = bitcast %"class.cc::PaintFlags"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5views15PathInkDropMask12OnPaintLayerERKN2ui12PaintContextE.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %3) #9
  %6 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %3, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = or i32 %7, -16777216
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %3, i64 0, i32 10
  %10 = bitcast %union.anon.660* %9 to i16*
  %11 = load i16, i16* %10, align 8
  %12 = and i16 %11, -194
  %13 = or i16 %12, 1
  store i16 %13, i16* %10, align 8
  %14 = bitcast %"class.ui::PaintRecorder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3536, i8* nonnull %14) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast ({ %"class.ui::PaintContext"*, %class.scoped_refptr.661, { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, { { { { i8, [7 x i8], { { { { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.750, [384 x i64], %class.sk_sp.751, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.752", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.758" } } } } } } } }, %struct.SkRect }, { i32 (...)**, float, [4 x i8], { { { { i8, [7 x i8], %union.anon.772 } } } }, { { { { i8, [7 x i8], { <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.780", %"class.cc::ImageProvider"*, { i8, [3 x i8], i32 }, i32, [4 x i8] }> } } } } }, %"class.cc::PaintCanvas"* }, %"class.ui::PaintCache"*, %"class.gfx::Size" }* @__const._ZN5views15PathInkDropMask12OnPaintLayerERKN2ui12PaintContextE.recorder to i8*), i64 3536, i1 false)
  %15 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 0, i32 1, i32 12, i32 1
  call void @_ZN2ui13PaintRecorderC1ERKNS_12PaintContextERKN3gfx4SizeE(%"class.ui::PaintRecorder"* nonnull %4, %"class.ui::PaintContext"* %1, %"class.gfx::Size"* dereferenceable(8) %15) #9
  %16 = getelementptr inbounds %"class.ui::PaintRecorder", %"class.ui::PaintRecorder"* %4, i64 0, i32 3
  %17 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 1
  call void @_ZN3gfx6Canvas8DrawPathERK6SkPathRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %16, %class.SkPath* dereferenceable(16) %17, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %3) #9
  call void @_ZN2ui13PaintRecorderD1Ev(%"class.ui::PaintRecorder"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 3536, i8* nonnull %14) #9
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #1

declare void @_ZN2ui13PaintRecorderC1ERKNS_12PaintContextERKN3gfx4SizeE(%"class.ui::PaintRecorder"*, %"class.ui::PaintContext"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN3gfx6Canvas8DrawPathERK6SkPathRKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %class.SkPath* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui13PaintRecorderD1Ev(%"class.ui::PaintRecorder"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #3

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN2ui13LayerDelegate20OnLayerBoundsChangedERKN3gfx4RectENS_20PropertyChangeReasonE(%"class.ui::LayerDelegate"*, %"class.gfx::Rect"* dereferenceable(16), i32) unnamed_addr #1

declare void @_ZN2ui13LayerDelegate18OnLayerTransformedERKN3gfx9TransformENS_20PropertyChangeReasonE(%"class.ui::LayerDelegate"*, %"class.gfx::Transform"* dereferenceable(68), i32) unnamed_addr #1

declare void @_ZN2ui13LayerDelegate21OnLayerOpacityChangedENS_20PropertyChangeReasonE(%"class.ui::LayerDelegate"*, i32) unnamed_addr #1

declare void @_ZN2ui13LayerDelegate24OnLayerAlphaShapeChangedEv(%"class.ui::LayerDelegate"*) unnamed_addr #1

declare void @_ZN2ui13LayerDelegate33OnLayerFillsBoundsOpaquelyChangedENS_20PropertyChangeReasonE(%"class.ui::LayerDelegate"*, i32) unnamed_addr #1

declare void @_ZN2ui13LayerDelegate17UpdateVisualStateEv(%"class.ui::LayerDelegate"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views15PathInkDropMaskD2Ev(%"class.views::PathInkDropMask"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5views15PathInkDropMaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %3) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5views11InkDropMaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 0, i32 1, i32 32
  store %"class.ui::LayerDelegate"* null, %"class.ui::LayerDelegate"** %5, align 8
  tail call void @_ZN2ui5LayerD1Ev(%"class.ui::Layer"* %4) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views15PathInkDropMaskD0Ev(%"class.views::PathInkDropMask"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5views15PathInkDropMaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %3) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5views11InkDropMaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.views::PathInkDropMask", %"class.views::PathInkDropMask"* %0, i64 0, i32 0, i32 1, i32 32
  store %"class.ui::LayerDelegate"* null, %"class.ui::LayerDelegate"** %5, align 8
  tail call void @_ZN2ui5LayerD1Ev(%"class.ui::Layer"* %4) #9
  %6 = bitcast %"class.views::PathInkDropMask"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
