; ModuleID = '../../third_party/icu/source/common/ustrtrns.cpp'
source_filename = "../../third_party/icu/source/common/ustrtrns.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i16* @u_strFromUTF32WithSub_69(i16*, i32, i32*, i32* readonly, i32, i32, i32*, i32*) local_unnamed_addr #0 {
  %9 = load i32, i32* %7, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %148

11:                                               ; preds = %8
  %12 = icmp eq i32* %3, null
  %13 = icmp ne i32 %4, 0
  %14 = and i1 %12, %13
  %15 = icmp slt i32 %4, -1
  %16 = or i1 %15, %14
  %17 = icmp slt i32 %1, 0
  %18 = or i1 %17, %16
  br i1 %18, label %28, label %19

19:                                               ; preds = %11
  %20 = icmp eq i16* %0, null
  %21 = icmp sgt i32 %1, 0
  %22 = and i1 %20, %21
  %23 = icmp sgt i32 %5, 1114111
  %24 = or i1 %22, %23
  %25 = and i32 %5, -2048
  %26 = icmp eq i32 %25, 55296
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %19, %11
  store i32 1, i32* %7, align 4
  br label %148

29:                                               ; preds = %19
  %30 = icmp ne i32* %6, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  store i32 0, i32* %6, align 4
  br label %32

32:                                               ; preds = %31, %29
  %33 = sext i32 %1 to i64
  %34 = getelementptr inbounds i16, i16* %0, i64 %33
  %35 = select i1 %20, i16* null, i16* %34
  %36 = icmp slt i32 %4, 0
  br i1 %36, label %37, label %67

37:                                               ; preds = %32
  %38 = load i32, i32* %3, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %132, label %40

40:                                               ; preds = %37, %57
  %41 = phi i32 [ %60, %57 ], [ %38, %37 ]
  %42 = phi i32 [ %59, %57 ], [ 0, %37 ]
  %43 = phi i16* [ %58, %57 ], [ %0, %37 ]
  %44 = phi i32* [ %50, %57 ], [ %3, %37 ]
  %45 = icmp ult i32 %41, 55296
  %46 = and i32 %41, -8192
  %47 = icmp eq i32 %46, 57344
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %62

49:                                               ; preds = %40
  %50 = getelementptr inbounds i32, i32* %44, i64 1
  %51 = icmp ult i16* %43, %35
  br i1 %51, label %52, label %55

52:                                               ; preds = %49
  %53 = trunc i32 %41 to i16
  %54 = getelementptr inbounds i16, i16* %43, i64 1
  store i16 %53, i16* %43, align 2
  br label %57

55:                                               ; preds = %49
  %56 = add nsw i32 %42, 1
  br label %57

57:                                               ; preds = %55, %52
  %58 = phi i16* [ %54, %52 ], [ %43, %55 ]
  %59 = phi i32 [ %42, %52 ], [ %56, %55 ]
  %60 = load i32, i32* %50, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %132, label %40

62:                                               ; preds = %40, %62
  %63 = phi i32* [ %64, %62 ], [ %44, %40 ]
  %64 = getelementptr inbounds i32, i32* %63, i64 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %71, label %62

67:                                               ; preds = %32
  %68 = sext i32 %4 to i64
  %69 = getelementptr inbounds i32, i32* %3, i64 %68
  %70 = select i1 %12, i32* null, i32* %69
  br label %71

71:                                               ; preds = %62, %67
  %72 = phi i32* [ %3, %67 ], [ %44, %62 ]
  %73 = phi i32* [ %70, %67 ], [ %64, %62 ]
  %74 = phi i16* [ %0, %67 ], [ %43, %62 ]
  %75 = phi i32 [ 0, %67 ], [ %42, %62 ]
  %76 = icmp ult i32* %72, %73
  br i1 %76, label %77, label %132

77:                                               ; preds = %71
  %78 = icmp slt i32 %5, 0
  %79 = icmp ult i32 %5, 55296
  %80 = and i32 %5, -8192
  %81 = icmp eq i32 %80, 57344
  %82 = or i1 %79, %81
  br label %83

83:                                               ; preds = %77, %127
  %84 = phi i32 [ 0, %77 ], [ %128, %127 ]
  %85 = phi i32 [ %75, %77 ], [ %130, %127 ]
  %86 = phi i16* [ %74, %77 ], [ %129, %127 ]
  %87 = phi i32* [ %72, %77 ], [ %88, %127 ]
  %88 = getelementptr inbounds i32, i32* %87, i64 1
  %89 = load i32, i32* %87, align 4
  %90 = icmp ult i32 %89, 55296
  %91 = and i32 %89, -8192
  %92 = icmp eq i32 %91, 57344
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %103

94:                                               ; preds = %125, %83
  %95 = phi i32 [ %89, %83 ], [ %5, %125 ]
  %96 = phi i32 [ %84, %83 ], [ %126, %125 ]
  %97 = icmp ult i16* %86, %35
  br i1 %97, label %98, label %101

98:                                               ; preds = %94
  %99 = trunc i32 %95 to i16
  %100 = getelementptr inbounds i16, i16* %86, i64 1
  store i16 %99, i16* %86, align 2
  br label %127

101:                                              ; preds = %94
  %102 = add nsw i32 %85, 1
  br label %127

103:                                              ; preds = %83, %125
  %104 = phi i32 [ %126, %125 ], [ %84, %83 ]
  %105 = phi i32 [ %5, %125 ], [ %89, %83 ]
  %106 = add i32 %105, -65536
  %107 = icmp ult i32 %106, 1048576
  br i1 %107, label %108, label %123

108:                                              ; preds = %103
  %109 = icmp eq i16* %86, null
  %110 = getelementptr inbounds i16, i16* %86, i64 2
  %111 = icmp ugt i16* %110, %35
  %112 = or i1 %109, %111
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = lshr i32 %105, 10
  %115 = trunc i32 %114 to i16
  %116 = add nuw nsw i16 %115, -10304
  %117 = getelementptr inbounds i16, i16* %86, i64 1
  store i16 %116, i16* %86, align 2
  %118 = trunc i32 %105 to i16
  %119 = and i16 %118, 1023
  %120 = or i16 %119, -9216
  store i16 %120, i16* %117, align 2
  br label %127

121:                                              ; preds = %108
  %122 = add nsw i32 %85, 2
  br label %127

123:                                              ; preds = %103
  br i1 %78, label %124, label %125

124:                                              ; preds = %123
  store i32 10, i32* %7, align 4
  br label %148

125:                                              ; preds = %123
  %126 = add nsw i32 %104, 1
  br i1 %82, label %94, label %103

127:                                              ; preds = %113, %121, %98, %101
  %128 = phi i32 [ %96, %98 ], [ %96, %101 ], [ %104, %113 ], [ %104, %121 ]
  %129 = phi i16* [ %100, %98 ], [ %86, %101 ], [ %110, %113 ], [ %86, %121 ]
  %130 = phi i32 [ %85, %98 ], [ %102, %101 ], [ %85, %113 ], [ %122, %121 ]
  %131 = icmp ult i32* %88, %73
  br i1 %131, label %83, label %132

132:                                              ; preds = %57, %127, %37, %71
  %133 = phi i16* [ %74, %71 ], [ %0, %37 ], [ %129, %127 ], [ %58, %57 ]
  %134 = phi i32 [ %75, %71 ], [ 0, %37 ], [ %130, %127 ], [ %59, %57 ]
  %135 = phi i32 [ 0, %71 ], [ 0, %37 ], [ %128, %127 ], [ 0, %57 ]
  %136 = ptrtoint i16* %133 to i64
  %137 = ptrtoint i16* %0 to i64
  %138 = sub i64 %136, %137
  %139 = lshr exact i64 %138, 1
  %140 = trunc i64 %139 to i32
  %141 = add nsw i32 %134, %140
  %142 = icmp eq i32* %2, null
  br i1 %142, label %144, label %143

143:                                              ; preds = %132
  store i32 %141, i32* %2, align 4
  br label %144

144:                                              ; preds = %132, %143
  br i1 %30, label %145, label %146

145:                                              ; preds = %144
  store i32 %135, i32* %6, align 4
  br label %146

146:                                              ; preds = %145, %144
  %147 = tail call i32 @u_terminateUChars_69(i16* %0, i32 %1, i32 %141, i32* %7) #4
  br label %148

148:                                              ; preds = %8, %146, %124, %28
  %149 = phi i16* [ null, %28 ], [ null, %124 ], [ %0, %146 ], [ null, %8 ]
  ret i16* %149
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @u_terminateUChars_69(i16*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i16* @u_strFromUTF32_69(i16*, i32, i32*, i32* readonly, i32, i32*) local_unnamed_addr #0 {
  %7 = tail call i16* @u_strFromUTF32WithSub_69(i16* %0, i32 %1, i32* %2, i32* %3, i32 %4, i32 -1, i32* null, i32* %5)
  ret i16* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @u_strToUTF32WithSub_69(i32*, i32, i32*, i16* readonly, i32, i32, i32*, i32*) local_unnamed_addr #0 {
  %9 = load i32, i32* %7, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %144

11:                                               ; preds = %8
  %12 = icmp eq i16* %3, null
  %13 = icmp ne i32 %4, 0
  %14 = and i1 %12, %13
  %15 = icmp slt i32 %4, -1
  %16 = or i1 %15, %14
  %17 = icmp slt i32 %1, 0
  %18 = or i1 %17, %16
  br i1 %18, label %28, label %19

19:                                               ; preds = %11
  %20 = icmp eq i32* %0, null
  %21 = icmp sgt i32 %1, 0
  %22 = and i1 %20, %21
  %23 = icmp sgt i32 %5, 1114111
  %24 = or i1 %22, %23
  %25 = and i32 %5, -2048
  %26 = icmp eq i32 %25, 55296
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %19, %11
  store i32 1, i32* %7, align 4
  br label %144

29:                                               ; preds = %19
  %30 = icmp ne i32* %6, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %29
  store i32 0, i32* %6, align 4
  br label %32

32:                                               ; preds = %31, %29
  %33 = sext i32 %1 to i64
  %34 = getelementptr inbounds i32, i32* %0, i64 %33
  %35 = select i1 %20, i32* null, i32* %34
  %36 = icmp slt i32 %4, 0
  br i1 %36, label %37, label %74

37:                                               ; preds = %32
  %38 = load i16, i16* %3, align 2
  %39 = zext i16 %38 to i32
  %40 = icmp ne i16 %38, 0
  %41 = and i32 %39, 63488
  %42 = icmp ne i32 %41, 55296
  %43 = and i1 %40, %42
  br i1 %43, label %44, label %64

44:                                               ; preds = %37, %55
  %45 = phi i32 [ %59, %55 ], [ %39, %37 ]
  %46 = phi i32 [ %57, %55 ], [ 0, %37 ]
  %47 = phi i32* [ %56, %55 ], [ %0, %37 ]
  %48 = phi i16* [ %49, %55 ], [ %3, %37 ]
  %49 = getelementptr inbounds i16, i16* %48, i64 1
  %50 = icmp ult i32* %47, %35
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = getelementptr inbounds i32, i32* %47, i64 1
  store i32 %45, i32* %47, align 4
  br label %55

53:                                               ; preds = %44
  %54 = add nsw i32 %46, 1
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i32* [ %52, %51 ], [ %47, %53 ]
  %57 = phi i32 [ %46, %51 ], [ %54, %53 ]
  %58 = load i16, i16* %49, align 2
  %59 = zext i16 %58 to i32
  %60 = icmp ne i16 %58, 0
  %61 = and i32 %59, 63488
  %62 = icmp ne i32 %61, 55296
  %63 = and i1 %60, %62
  br i1 %63, label %44, label %64

64:                                               ; preds = %55, %37
  %65 = phi i16* [ %3, %37 ], [ %49, %55 ]
  %66 = phi i32* [ %0, %37 ], [ %56, %55 ]
  %67 = phi i32 [ 0, %37 ], [ %57, %55 ]
  %68 = phi i1 [ %40, %37 ], [ %60, %55 ]
  br i1 %68, label %69, label %128

69:                                               ; preds = %64, %69
  %70 = phi i16* [ %71, %69 ], [ %65, %64 ]
  %71 = getelementptr inbounds i16, i16* %70, i64 1
  %72 = load i16, i16* %71, align 2
  %73 = icmp eq i16 %72, 0
  br i1 %73, label %78, label %69

74:                                               ; preds = %32
  %75 = sext i32 %4 to i64
  %76 = getelementptr inbounds i16, i16* %3, i64 %75
  %77 = select i1 %12, i16* null, i16* %76
  br label %78

78:                                               ; preds = %69, %74
  %79 = phi i16* [ %3, %74 ], [ %65, %69 ]
  %80 = phi i16* [ %77, %74 ], [ %71, %69 ]
  %81 = phi i32* [ %0, %74 ], [ %66, %69 ]
  %82 = phi i32 [ 0, %74 ], [ %67, %69 ]
  %83 = icmp ult i16* %79, %80
  br i1 %83, label %84, label %128

84:                                               ; preds = %78
  %85 = icmp slt i32 %5, 0
  br label %86

86:                                               ; preds = %84, %124
  %87 = phi i32 [ 0, %84 ], [ %118, %124 ]
  %88 = phi i32 [ %82, %84 ], [ %126, %124 ]
  %89 = phi i32* [ %81, %84 ], [ %125, %124 ]
  %90 = phi i16* [ %79, %84 ], [ %116, %124 ]
  %91 = getelementptr inbounds i16, i16* %90, i64 1
  %92 = load i16, i16* %90, align 2
  %93 = zext i16 %92 to i32
  %94 = and i32 %93, 63488
  %95 = icmp eq i32 %94, 55296
  br i1 %95, label %96, label %115

96:                                               ; preds = %86
  %97 = and i32 %93, 1024
  %98 = icmp eq i32 %97, 0
  %99 = icmp ult i16* %91, %80
  %100 = and i1 %99, %98
  br i1 %100, label %101, label %111

101:                                              ; preds = %96
  %102 = load i16, i16* %91, align 2
  %103 = zext i16 %102 to i32
  %104 = and i32 %103, 64512
  %105 = icmp eq i32 %104, 56320
  br i1 %105, label %106, label %111

106:                                              ; preds = %101
  %107 = getelementptr inbounds i16, i16* %90, i64 2
  %108 = shl nuw nsw i32 %93, 10
  %109 = add nsw i32 %108, -56613888
  %110 = add nsw i32 %109, %103
  br label %115

111:                                              ; preds = %101, %96
  br i1 %85, label %112, label %113

112:                                              ; preds = %111
  store i32 10, i32* %7, align 4
  br label %144

113:                                              ; preds = %111
  %114 = add nsw i32 %87, 1
  br label %115

115:                                              ; preds = %106, %113, %86
  %116 = phi i16* [ %107, %106 ], [ %91, %113 ], [ %91, %86 ]
  %117 = phi i32 [ %110, %106 ], [ %5, %113 ], [ %93, %86 ]
  %118 = phi i32 [ %87, %106 ], [ %114, %113 ], [ %87, %86 ]
  %119 = icmp ult i32* %89, %35
  br i1 %119, label %120, label %122

120:                                              ; preds = %115
  %121 = getelementptr inbounds i32, i32* %89, i64 1
  store i32 %117, i32* %89, align 4
  br label %124

122:                                              ; preds = %115
  %123 = add nsw i32 %88, 1
  br label %124

124:                                              ; preds = %122, %120
  %125 = phi i32* [ %121, %120 ], [ %89, %122 ]
  %126 = phi i32 [ %88, %120 ], [ %123, %122 ]
  %127 = icmp ult i16* %116, %80
  br i1 %127, label %86, label %128

128:                                              ; preds = %124, %64, %78
  %129 = phi i32* [ %81, %78 ], [ %66, %64 ], [ %125, %124 ]
  %130 = phi i32 [ %82, %78 ], [ %67, %64 ], [ %126, %124 ]
  %131 = phi i32 [ 0, %78 ], [ 0, %64 ], [ %118, %124 ]
  %132 = ptrtoint i32* %129 to i64
  %133 = ptrtoint i32* %0 to i64
  %134 = sub i64 %132, %133
  %135 = lshr exact i64 %134, 2
  %136 = trunc i64 %135 to i32
  %137 = add nsw i32 %130, %136
  %138 = icmp eq i32* %2, null
  br i1 %138, label %140, label %139

139:                                              ; preds = %128
  store i32 %137, i32* %2, align 4
  br label %140

140:                                              ; preds = %128, %139
  br i1 %30, label %141, label %142

141:                                              ; preds = %140
  store i32 %131, i32* %6, align 4
  br label %142

142:                                              ; preds = %141, %140
  %143 = tail call i32 @u_terminateUChar32s_69(i32* %0, i32 %1, i32 %137, i32* %7) #4
  br label %144

144:                                              ; preds = %8, %142, %112, %28
  %145 = phi i32* [ null, %28 ], [ null, %112 ], [ %0, %142 ], [ null, %8 ]
  ret i32* %145
}

declare i32 @u_terminateUChar32s_69(i32*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32* @u_strToUTF32_69(i32*, i32, i32*, i16* readonly, i32, i32*) local_unnamed_addr #0 {
  %7 = tail call i32* @u_strToUTF32WithSub_69(i32* %0, i32 %1, i32* %2, i16* %3, i32 %4, i32 -1, i32* null, i32* %5)
  ret i32* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @u_strFromUTF8WithSub_69(i16*, i32, i32*, i8*, i32, i32, i32*, i32*) local_unnamed_addr #0 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = load i32, i32* %7, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %565

13:                                               ; preds = %8
  %14 = icmp eq i8* %3, null
  %15 = icmp ne i32 %4, 0
  %16 = and i1 %14, %15
  %17 = icmp slt i32 %4, -1
  %18 = or i1 %17, %16
  %19 = icmp slt i32 %1, 0
  %20 = or i1 %19, %18
  br i1 %20, label %30, label %21

21:                                               ; preds = %13
  %22 = icmp eq i16* %0, null
  %23 = icmp sgt i32 %1, 0
  %24 = and i1 %22, %23
  %25 = icmp sgt i32 %5, 1114111
  %26 = or i1 %24, %25
  %27 = and i32 %5, -2048
  %28 = icmp eq i32 %27, 55296
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %21, %13
  store i32 1, i32* %7, align 4
  br label %565

31:                                               ; preds = %21
  %32 = icmp ne i32* %6, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %31
  store i32 0, i32* %6, align 4
  br label %34

34:                                               ; preds = %33, %31
  %35 = sext i32 %1 to i64
  %36 = getelementptr inbounds i16, i16* %0, i64 %35
  %37 = icmp slt i32 %4, 0
  br i1 %37, label %38, label %225

38:                                               ; preds = %34
  %39 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #4
  store i32 0, i32* %9, align 4
  %40 = load i8, i8* %3, align 1
  %41 = icmp ne i8 %40, 0
  %42 = and i1 %23, %41
  br i1 %42, label %43, label %148

43:                                               ; preds = %38
  %44 = icmp slt i32 %5, 0
  br label %45

45:                                               ; preds = %43, %138
  %46 = phi i8 [ %40, %43 ], [ %144, %138 ]
  %47 = phi i32 [ 0, %43 ], [ %141, %138 ]
  %48 = phi i32 [ 0, %43 ], [ %140, %138 ]
  %49 = phi i16* [ %0, %43 ], [ %139, %138 ]
  %50 = zext i8 %46 to i32
  %51 = add nsw i32 %47, 1
  store i32 %51, i32* %9, align 4
  %52 = icmp sgt i8 %46, -1
  br i1 %52, label %53, label %56

53:                                               ; preds = %45
  %54 = zext i8 %46 to i16
  %55 = getelementptr inbounds i16, i16* %49, i64 1
  store i16 %54, i16* %49, align 2
  br label %138

56:                                               ; preds = %45
  %57 = and i8 %46, -16
  %58 = icmp eq i8 %57, -32
  br i1 %58, label %59, label %92

59:                                               ; preds = %56
  %60 = and i32 %50, 15
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = sext i32 %51 to i64
  %66 = getelementptr inbounds i8, i8* %3, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = lshr i8 %67, 5
  %69 = zext i8 %68 to i32
  %70 = shl i32 1, %69
  %71 = and i32 %70, %64
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %92, label %73

73:                                               ; preds = %59
  %74 = add nsw i32 %47, 2
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %3, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = xor i8 %77, -128
  %79 = icmp ult i8 %78, 64
  br i1 %79, label %80, label %92

80:                                               ; preds = %73
  %81 = zext i8 %78 to i32
  %82 = shl nuw nsw i32 %50, 12
  %83 = and i8 %67, 63
  %84 = zext i8 %83 to i32
  %85 = shl nuw nsw i32 %84, 6
  %86 = or i32 %85, %82
  %87 = or i32 %86, %81
  %88 = trunc i32 %87 to i16
  %89 = getelementptr inbounds i16, i16* %49, i64 1
  store i16 %88, i16* %49, align 2
  %90 = load i32, i32* %9, align 4
  %91 = add nsw i32 %90, 2
  store i32 %91, i32* %9, align 4
  br label %138

92:                                               ; preds = %59, %73, %56
  %93 = add nsw i8 %46, 62
  %94 = icmp ult i8 %93, 30
  br i1 %94, label %95, label %110

95:                                               ; preds = %92
  %96 = sext i32 %51 to i64
  %97 = getelementptr inbounds i8, i8* %3, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = xor i8 %98, -128
  %100 = icmp ult i8 %99, 64
  br i1 %100, label %101, label %110

101:                                              ; preds = %95
  %102 = zext i8 %99 to i32
  %103 = shl nuw nsw i32 %50, 6
  %104 = and i32 %103, 1984
  %105 = or i32 %104, %102
  %106 = trunc i32 %105 to i16
  %107 = getelementptr inbounds i16, i16* %49, i64 1
  store i16 %106, i16* %49, align 2
  %108 = load i32, i32* %9, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %9, align 4
  br label %138

110:                                              ; preds = %95, %92
  %111 = call i32 @utf8_nextCharSafeBody_69(i8* %3, i32* nonnull %9, i32 -1, i32 %50, i8 signext -1) #4
  %112 = icmp slt i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %110
  %114 = add nsw i32 %48, 1
  br i1 %44, label %224, label %115

115:                                              ; preds = %113, %110
  %116 = phi i32 [ %114, %113 ], [ %48, %110 ]
  %117 = phi i32 [ %5, %113 ], [ %111, %110 ]
  %118 = icmp slt i32 %117, 65536
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = trunc i32 %117 to i16
  %121 = getelementptr inbounds i16, i16* %49, i64 1
  store i16 %120, i16* %49, align 2
  br label %138

122:                                              ; preds = %115
  %123 = lshr i32 %117, 10
  %124 = trunc i32 %123 to i16
  %125 = add i16 %124, -10304
  %126 = getelementptr inbounds i16, i16* %49, i64 1
  store i16 %125, i16* %49, align 2
  %127 = icmp ult i16* %126, %36
  br i1 %127, label %133, label %128

128:                                              ; preds = %122
  %129 = load i32, i32* %9, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %3, i64 %130
  %132 = load i8, i8* %131, align 1
  br label %148

133:                                              ; preds = %122
  %134 = trunc i32 %117 to i16
  %135 = and i16 %134, 1023
  %136 = or i16 %135, -9216
  %137 = getelementptr inbounds i16, i16* %49, i64 2
  store i16 %136, i16* %126, align 2
  br label %138

138:                                              ; preds = %80, %133, %119, %101, %53
  %139 = phi i16* [ %55, %53 ], [ %137, %133 ], [ %121, %119 ], [ %107, %101 ], [ %89, %80 ]
  %140 = phi i32 [ %48, %53 ], [ %116, %133 ], [ %116, %119 ], [ %48, %101 ], [ %48, %80 ]
  %141 = load i32, i32* %9, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %3, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = icmp ne i8 %144, 0
  %146 = icmp ult i16* %139, %36
  %147 = and i1 %146, %145
  br i1 %147, label %45, label %148

148:                                              ; preds = %138, %128, %38
  %149 = phi i8 [ %40, %38 ], [ %132, %128 ], [ %144, %138 ]
  %150 = phi i32 [ 0, %38 ], [ %129, %128 ], [ %141, %138 ]
  %151 = phi i16* [ %0, %38 ], [ %126, %128 ], [ %139, %138 ]
  %152 = phi i32 [ 0, %38 ], [ 1, %128 ], [ 0, %138 ]
  %153 = phi i32 [ 0, %38 ], [ %116, %128 ], [ %140, %138 ]
  %154 = icmp eq i8 %149, 0
  br i1 %154, label %548, label %155

155:                                              ; preds = %148
  %156 = icmp slt i32 %5, 0
  br label %157

157:                                              ; preds = %155, %216
  %158 = phi i8 [ %149, %155 ], [ %222, %216 ]
  %159 = phi i32 [ %150, %155 ], [ %217, %216 ]
  %160 = phi i32 [ %153, %155 ], [ %219, %216 ]
  %161 = phi i32 [ %152, %155 ], [ %218, %216 ]
  %162 = zext i8 %158 to i32
  %163 = add nsw i32 %159, 1
  store i32 %163, i32* %9, align 4
  %164 = icmp sgt i8 %158, -1
  br i1 %164, label %165, label %167

165:                                              ; preds = %157
  %166 = add nsw i32 %161, 1
  br label %216

167:                                              ; preds = %157
  %168 = and i8 %158, -16
  %169 = icmp eq i8 %168, -32
  br i1 %169, label %170, label %193

170:                                              ; preds = %167
  %171 = and i32 %162, 15
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = sext i8 %174 to i32
  %176 = sext i32 %163 to i64
  %177 = getelementptr inbounds i8, i8* %3, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = lshr i8 %178, 5
  %180 = zext i8 %179 to i32
  %181 = shl i32 1, %180
  %182 = and i32 %181, %175
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %193, label %184

184:                                              ; preds = %170
  %185 = add nsw i32 %159, 2
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %3, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = icmp slt i8 %188, -64
  br i1 %189, label %190, label %193

190:                                              ; preds = %184
  %191 = add nsw i32 %161, 1
  %192 = add nsw i32 %159, 3
  store i32 %192, i32* %9, align 4
  br label %216

193:                                              ; preds = %170, %184, %167
  %194 = add nsw i8 %158, 62
  %195 = icmp ult i8 %194, 30
  br i1 %195, label %196, label %204

196:                                              ; preds = %193
  %197 = sext i32 %163 to i64
  %198 = getelementptr inbounds i8, i8* %3, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, -64
  br i1 %200, label %201, label %204

201:                                              ; preds = %196
  %202 = add nsw i32 %161, 1
  %203 = add nsw i32 %159, 2
  store i32 %203, i32* %9, align 4
  br label %216

204:                                              ; preds = %196, %193
  %205 = call i32 @utf8_nextCharSafeBody_69(i8* %3, i32* nonnull %9, i32 -1, i32 %162, i8 signext -1) #4
  %206 = icmp slt i32 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %204
  %208 = add nsw i32 %160, 1
  br i1 %156, label %224, label %209

209:                                              ; preds = %207, %204
  %210 = phi i32 [ %208, %207 ], [ %160, %204 ]
  %211 = phi i32 [ %5, %207 ], [ %205, %204 ]
  %212 = icmp ult i32 %211, 65536
  %213 = select i1 %212, i32 1, i32 2
  %214 = add nsw i32 %213, %161
  %215 = load i32, i32* %9, align 4
  br label %216

216:                                              ; preds = %190, %209, %201, %165
  %217 = phi i32 [ %163, %165 ], [ %215, %209 ], [ %203, %201 ], [ %192, %190 ]
  %218 = phi i32 [ %166, %165 ], [ %214, %209 ], [ %202, %201 ], [ %191, %190 ]
  %219 = phi i32 [ %160, %165 ], [ %210, %209 ], [ %160, %201 ], [ %160, %190 ]
  %220 = sext i32 %217 to i64
  %221 = getelementptr inbounds i8, i8* %3, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %548, label %157

224:                                              ; preds = %113, %207
  store i32 10, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #4
  br label %565

225:                                              ; preds = %34
  %226 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %226) #4
  store i32 0, i32* %10, align 4
  %227 = ptrtoint i16* %36 to i64
  %228 = icmp sgt i32 %5, 65535
  %229 = icmp slt i32 %5, 0
  %230 = sdiv i32 %4, 3
  %231 = icmp slt i32 %230, %1
  %232 = select i1 %231, i32 %230, i32 %1
  %233 = icmp slt i32 %232, 3
  br i1 %233, label %361, label %234

234:                                              ; preds = %225, %343
  %235 = phi i32 [ %344, %343 ], [ 0, %225 ]
  %236 = phi i16* [ %345, %343 ], [ %0, %225 ]
  %237 = phi i32 [ %346, %343 ], [ 0, %225 ]
  %238 = phi i32 [ %347, %343 ], [ %232, %225 ]
  %239 = add nsw i32 %235, 1
  store i32 %239, i32* %10, align 4
  %240 = sext i32 %235 to i64
  %241 = getelementptr inbounds i8, i8* %3, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = icmp sgt i8 %242, -1
  br i1 %244, label %245, label %248

245:                                              ; preds = %234
  %246 = zext i8 %242 to i16
  %247 = getelementptr inbounds i16, i16* %236, i64 1
  store i16 %246, i16* %236, align 2
  br label %335

248:                                              ; preds = %234
  %249 = and i8 %242, -16
  %250 = icmp eq i8 %249, -32
  br i1 %250, label %251, label %286

251:                                              ; preds = %248
  %252 = add nsw i32 %235, 2
  %253 = icmp slt i32 %252, %4
  br i1 %253, label %254, label %286

254:                                              ; preds = %251
  %255 = and i32 %243, 15
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = sext i8 %258 to i32
  %260 = sext i32 %239 to i64
  %261 = getelementptr inbounds i8, i8* %3, i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = lshr i8 %262, 5
  %264 = zext i8 %263 to i32
  %265 = shl i32 1, %264
  %266 = and i32 %265, %259
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %286, label %268

268:                                              ; preds = %254
  %269 = sext i32 %252 to i64
  %270 = getelementptr inbounds i8, i8* %3, i64 %269
  %271 = load i8, i8* %270, align 1
  %272 = xor i8 %271, -128
  %273 = icmp ult i8 %272, 64
  br i1 %273, label %274, label %286

274:                                              ; preds = %268
  %275 = zext i8 %272 to i32
  %276 = shl nuw nsw i32 %243, 12
  %277 = and i8 %262, 63
  %278 = zext i8 %277 to i32
  %279 = shl nuw nsw i32 %278, 6
  %280 = or i32 %279, %276
  %281 = or i32 %280, %275
  %282 = trunc i32 %281 to i16
  %283 = getelementptr inbounds i16, i16* %236, i64 1
  store i16 %282, i16* %236, align 2
  %284 = load i32, i32* %10, align 4
  %285 = add nsw i32 %284, 2
  store i32 %285, i32* %10, align 4
  br label %335

286:                                              ; preds = %254, %268, %251, %248
  %287 = add nsw i8 %242, 62
  %288 = icmp ugt i8 %287, 29
  %289 = icmp eq i32 %239, %4
  %290 = or i1 %289, %288
  br i1 %290, label %306, label %291

291:                                              ; preds = %286
  %292 = sext i32 %239 to i64
  %293 = getelementptr inbounds i8, i8* %3, i64 %292
  %294 = load i8, i8* %293, align 1
  %295 = xor i8 %294, -128
  %296 = icmp ult i8 %295, 64
  br i1 %296, label %297, label %306

297:                                              ; preds = %291
  %298 = zext i8 %295 to i32
  %299 = shl nuw nsw i32 %243, 6
  %300 = and i32 %299, 1984
  %301 = or i32 %300, %298
  %302 = trunc i32 %301 to i16
  %303 = getelementptr inbounds i16, i16* %236, i64 1
  store i16 %302, i16* %236, align 2
  %304 = load i32, i32* %10, align 4
  %305 = add nsw i32 %304, 1
  store i32 %305, i32* %10, align 4
  br label %335

306:                                              ; preds = %286, %291
  %307 = icmp ugt i8 %242, -17
  %308 = or i1 %228, %307
  br i1 %308, label %309, label %312

309:                                              ; preds = %306
  %310 = add nsw i32 %238, -1
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %334, label %312

312:                                              ; preds = %309, %306
  %313 = phi i32 [ %310, %309 ], [ %238, %306 ]
  %314 = call i32 @utf8_nextCharSafeBody_69(i8* %3, i32* nonnull %10, i32 %4, i32 %243, i8 signext -1) #4
  %315 = icmp slt i32 %314, 0
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  %317 = add nsw i32 %237, 1
  br i1 %229, label %547, label %318

318:                                              ; preds = %316, %312
  %319 = phi i32 [ %317, %316 ], [ %237, %312 ]
  %320 = phi i32 [ %5, %316 ], [ %314, %312 ]
  %321 = icmp slt i32 %320, 65536
  br i1 %321, label %322, label %325

322:                                              ; preds = %318
  %323 = trunc i32 %320 to i16
  %324 = getelementptr inbounds i16, i16* %236, i64 1
  store i16 %323, i16* %236, align 2
  br label %335

325:                                              ; preds = %318
  %326 = lshr i32 %320, 10
  %327 = trunc i32 %326 to i16
  %328 = add i16 %327, -10304
  %329 = getelementptr inbounds i16, i16* %236, i64 1
  store i16 %328, i16* %236, align 2
  %330 = trunc i32 %320 to i16
  %331 = and i16 %330, 1023
  %332 = or i16 %331, -9216
  %333 = getelementptr inbounds i16, i16* %236, i64 2
  store i16 %332, i16* %329, align 2
  br label %335

334:                                              ; preds = %309
  store i32 %235, i32* %10, align 4
  br label %348

335:                                              ; preds = %274, %325, %322, %297, %245
  %336 = phi i16* [ %247, %245 ], [ %333, %325 ], [ %324, %322 ], [ %303, %297 ], [ %283, %274 ]
  %337 = phi i32 [ %237, %245 ], [ %319, %325 ], [ %319, %322 ], [ %237, %297 ], [ %237, %274 ]
  %338 = phi i32 [ %238, %245 ], [ %313, %325 ], [ %313, %322 ], [ %238, %297 ], [ %238, %274 ]
  %339 = add nsw i32 %338, -1
  %340 = icmp sgt i32 %339, 0
  br i1 %340, label %341, label %348

341:                                              ; preds = %335
  %342 = load i32, i32* %10, align 4
  br label %343

343:                                              ; preds = %341, %348
  %344 = phi i32 [ %342, %341 ], [ %351, %348 ]
  %345 = phi i16* [ %336, %341 ], [ %349, %348 ]
  %346 = phi i32 [ %337, %341 ], [ %350, %348 ]
  %347 = phi i32 [ %339, %341 ], [ %359, %348 ]
  br label %234

348:                                              ; preds = %335, %334
  %349 = phi i16* [ %236, %334 ], [ %336, %335 ]
  %350 = phi i32 [ %237, %334 ], [ %337, %335 ]
  %351 = load i32, i32* %10, align 4
  %352 = ptrtoint i16* %349 to i64
  %353 = sub i64 %227, %352
  %354 = lshr exact i64 %353, 1
  %355 = trunc i64 %354 to i32
  %356 = sub nsw i32 %4, %351
  %357 = sdiv i32 %356, 3
  %358 = icmp slt i32 %357, %355
  %359 = select i1 %358, i32 %357, i32 %355
  %360 = icmp slt i32 %359, 3
  br i1 %360, label %361, label %343

361:                                              ; preds = %348, %225
  %362 = phi i16* [ %0, %225 ], [ %349, %348 ]
  %363 = phi i32 [ 0, %225 ], [ %350, %348 ]
  %364 = load i32, i32* %10, align 4
  %365 = icmp slt i32 %364, %4
  %366 = icmp ult i16* %362, %36
  %367 = and i1 %366, %365
  br i1 %367, label %368, label %471

368:                                              ; preds = %361, %464
  %369 = phi i32 [ %467, %464 ], [ %364, %361 ]
  %370 = phi i32 [ %466, %464 ], [ %363, %361 ]
  %371 = phi i16* [ %465, %464 ], [ %362, %361 ]
  %372 = add nsw i32 %369, 1
  store i32 %372, i32* %10, align 4
  %373 = sext i32 %369 to i64
  %374 = getelementptr inbounds i8, i8* %3, i64 %373
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i32
  %377 = icmp sgt i8 %375, -1
  br i1 %377, label %378, label %381

378:                                              ; preds = %368
  %379 = zext i8 %375 to i16
  %380 = getelementptr inbounds i16, i16* %371, i64 1
  store i16 %379, i16* %371, align 2
  br label %464

381:                                              ; preds = %368
  %382 = and i8 %375, -16
  %383 = icmp eq i8 %382, -32
  br i1 %383, label %384, label %419

384:                                              ; preds = %381
  %385 = add nsw i32 %369, 2
  %386 = icmp slt i32 %385, %4
  br i1 %386, label %387, label %419

387:                                              ; preds = %384
  %388 = and i32 %376, 15
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %389
  %391 = load i8, i8* %390, align 1
  %392 = sext i8 %391 to i32
  %393 = sext i32 %372 to i64
  %394 = getelementptr inbounds i8, i8* %3, i64 %393
  %395 = load i8, i8* %394, align 1
  %396 = lshr i8 %395, 5
  %397 = zext i8 %396 to i32
  %398 = shl i32 1, %397
  %399 = and i32 %398, %392
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %419, label %401

401:                                              ; preds = %387
  %402 = sext i32 %385 to i64
  %403 = getelementptr inbounds i8, i8* %3, i64 %402
  %404 = load i8, i8* %403, align 1
  %405 = xor i8 %404, -128
  %406 = icmp ult i8 %405, 64
  br i1 %406, label %407, label %419

407:                                              ; preds = %401
  %408 = zext i8 %405 to i32
  %409 = shl nuw nsw i32 %376, 12
  %410 = and i8 %395, 63
  %411 = zext i8 %410 to i32
  %412 = shl nuw nsw i32 %411, 6
  %413 = or i32 %412, %409
  %414 = or i32 %413, %408
  %415 = trunc i32 %414 to i16
  %416 = getelementptr inbounds i16, i16* %371, i64 1
  store i16 %415, i16* %371, align 2
  %417 = load i32, i32* %10, align 4
  %418 = add nsw i32 %417, 2
  store i32 %418, i32* %10, align 4
  br label %464

419:                                              ; preds = %387, %401, %384, %381
  %420 = add nsw i8 %375, 62
  %421 = icmp ugt i8 %420, 29
  %422 = icmp eq i32 %372, %4
  %423 = or i1 %422, %421
  br i1 %423, label %439, label %424

424:                                              ; preds = %419
  %425 = sext i32 %372 to i64
  %426 = getelementptr inbounds i8, i8* %3, i64 %425
  %427 = load i8, i8* %426, align 1
  %428 = xor i8 %427, -128
  %429 = icmp ult i8 %428, 64
  br i1 %429, label %430, label %439

430:                                              ; preds = %424
  %431 = zext i8 %428 to i32
  %432 = shl nuw nsw i32 %376, 6
  %433 = and i32 %432, 1984
  %434 = or i32 %433, %431
  %435 = trunc i32 %434 to i16
  %436 = getelementptr inbounds i16, i16* %371, i64 1
  store i16 %435, i16* %371, align 2
  %437 = load i32, i32* %10, align 4
  %438 = add nsw i32 %437, 1
  store i32 %438, i32* %10, align 4
  br label %464

439:                                              ; preds = %419, %424
  %440 = call i32 @utf8_nextCharSafeBody_69(i8* %3, i32* nonnull %10, i32 %4, i32 %376, i8 signext -1) #4
  %441 = icmp slt i32 %440, 0
  br i1 %441, label %442, label %444

442:                                              ; preds = %439
  %443 = add nsw i32 %370, 1
  br i1 %229, label %547, label %444

444:                                              ; preds = %442, %439
  %445 = phi i32 [ %443, %442 ], [ %370, %439 ]
  %446 = phi i32 [ %5, %442 ], [ %440, %439 ]
  %447 = icmp slt i32 %446, 65536
  br i1 %447, label %448, label %451

448:                                              ; preds = %444
  %449 = trunc i32 %446 to i16
  %450 = getelementptr inbounds i16, i16* %371, i64 1
  store i16 %449, i16* %371, align 2
  br label %464

451:                                              ; preds = %444
  %452 = lshr i32 %446, 10
  %453 = trunc i32 %452 to i16
  %454 = add i16 %453, -10304
  %455 = getelementptr inbounds i16, i16* %371, i64 1
  store i16 %454, i16* %371, align 2
  %456 = icmp ult i16* %455, %36
  br i1 %456, label %459, label %457

457:                                              ; preds = %451
  %458 = load i32, i32* %10, align 4
  br label %471

459:                                              ; preds = %451
  %460 = trunc i32 %446 to i16
  %461 = and i16 %460, 1023
  %462 = or i16 %461, -9216
  %463 = getelementptr inbounds i16, i16* %371, i64 2
  store i16 %462, i16* %455, align 2
  br label %464

464:                                              ; preds = %407, %459, %448, %430, %378
  %465 = phi i16* [ %380, %378 ], [ %463, %459 ], [ %450, %448 ], [ %436, %430 ], [ %416, %407 ]
  %466 = phi i32 [ %370, %378 ], [ %445, %459 ], [ %445, %448 ], [ %370, %430 ], [ %370, %407 ]
  %467 = load i32, i32* %10, align 4
  %468 = icmp slt i32 %467, %4
  %469 = icmp ult i16* %465, %36
  %470 = and i1 %469, %468
  br i1 %470, label %368, label %471

471:                                              ; preds = %464, %457, %361
  %472 = phi i32 [ %364, %361 ], [ %458, %457 ], [ %467, %464 ]
  %473 = phi i16* [ %362, %361 ], [ %455, %457 ], [ %465, %464 ]
  %474 = phi i32 [ 0, %361 ], [ 1, %457 ], [ 0, %464 ]
  %475 = phi i32 [ %363, %361 ], [ %445, %457 ], [ %466, %464 ]
  %476 = icmp slt i32 %472, %4
  br i1 %476, label %477, label %548

477:                                              ; preds = %471, %542
  %478 = phi i32 [ %543, %542 ], [ %472, %471 ]
  %479 = phi i32 [ %545, %542 ], [ %475, %471 ]
  %480 = phi i32 [ %544, %542 ], [ %474, %471 ]
  %481 = add nsw i32 %478, 1
  store i32 %481, i32* %10, align 4
  %482 = sext i32 %478 to i64
  %483 = getelementptr inbounds i8, i8* %3, i64 %482
  %484 = load i8, i8* %483, align 1
  %485 = zext i8 %484 to i32
  %486 = icmp sgt i8 %484, -1
  br i1 %486, label %487, label %489

487:                                              ; preds = %477
  %488 = add nsw i32 %480, 1
  br label %542

489:                                              ; preds = %477
  %490 = and i8 %484, -16
  %491 = icmp eq i8 %490, -32
  br i1 %491, label %492, label %517

492:                                              ; preds = %489
  %493 = add nsw i32 %478, 2
  %494 = icmp slt i32 %493, %4
  br i1 %494, label %495, label %517

495:                                              ; preds = %492
  %496 = and i32 %485, 15
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %497
  %499 = load i8, i8* %498, align 1
  %500 = sext i8 %499 to i32
  %501 = sext i32 %481 to i64
  %502 = getelementptr inbounds i8, i8* %3, i64 %501
  %503 = load i8, i8* %502, align 1
  %504 = lshr i8 %503, 5
  %505 = zext i8 %504 to i32
  %506 = shl i32 1, %505
  %507 = and i32 %506, %500
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %517, label %509

509:                                              ; preds = %495
  %510 = sext i32 %493 to i64
  %511 = getelementptr inbounds i8, i8* %3, i64 %510
  %512 = load i8, i8* %511, align 1
  %513 = icmp slt i8 %512, -64
  br i1 %513, label %514, label %517

514:                                              ; preds = %509
  %515 = add nsw i32 %480, 1
  %516 = add nsw i32 %478, 3
  store i32 %516, i32* %10, align 4
  br label %542

517:                                              ; preds = %495, %509, %492, %489
  %518 = add nsw i8 %484, 62
  %519 = icmp ugt i8 %518, 29
  %520 = icmp eq i32 %481, %4
  %521 = or i1 %520, %519
  br i1 %521, label %530, label %522

522:                                              ; preds = %517
  %523 = sext i32 %481 to i64
  %524 = getelementptr inbounds i8, i8* %3, i64 %523
  %525 = load i8, i8* %524, align 1
  %526 = icmp slt i8 %525, -64
  br i1 %526, label %527, label %530

527:                                              ; preds = %522
  %528 = add nsw i32 %480, 1
  %529 = add nsw i32 %478, 2
  store i32 %529, i32* %10, align 4
  br label %542

530:                                              ; preds = %517, %522
  %531 = call i32 @utf8_nextCharSafeBody_69(i8* %3, i32* nonnull %10, i32 %4, i32 %485, i8 signext -1) #4
  %532 = icmp slt i32 %531, 0
  br i1 %532, label %533, label %535

533:                                              ; preds = %530
  %534 = add nsw i32 %479, 1
  br i1 %229, label %547, label %535

535:                                              ; preds = %533, %530
  %536 = phi i32 [ %534, %533 ], [ %479, %530 ]
  %537 = phi i32 [ %5, %533 ], [ %531, %530 ]
  %538 = icmp ult i32 %537, 65536
  %539 = select i1 %538, i32 1, i32 2
  %540 = add nsw i32 %539, %480
  %541 = load i32, i32* %10, align 4
  br label %542

542:                                              ; preds = %514, %535, %527, %487
  %543 = phi i32 [ %481, %487 ], [ %541, %535 ], [ %529, %527 ], [ %516, %514 ]
  %544 = phi i32 [ %488, %487 ], [ %540, %535 ], [ %528, %527 ], [ %515, %514 ]
  %545 = phi i32 [ %479, %487 ], [ %536, %535 ], [ %479, %527 ], [ %479, %514 ]
  %546 = icmp slt i32 %543, %4
  br i1 %546, label %477, label %548

547:                                              ; preds = %316, %442, %533
  store i32 10, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %226) #4
  br label %565

548:                                              ; preds = %542, %216, %471, %148
  %549 = phi i8* [ %39, %148 ], [ %226, %471 ], [ %39, %216 ], [ %226, %542 ]
  %550 = phi i16* [ %151, %148 ], [ %473, %471 ], [ %151, %216 ], [ %473, %542 ]
  %551 = phi i32 [ %152, %148 ], [ %474, %471 ], [ %218, %216 ], [ %544, %542 ]
  %552 = phi i32 [ %153, %148 ], [ %475, %471 ], [ %219, %216 ], [ %545, %542 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %549) #4
  %553 = ptrtoint i16* %550 to i64
  %554 = ptrtoint i16* %0 to i64
  %555 = sub i64 %553, %554
  %556 = lshr exact i64 %555, 1
  %557 = trunc i64 %556 to i32
  %558 = add nsw i32 %551, %557
  br i1 %32, label %559, label %560

559:                                              ; preds = %548
  store i32 %552, i32* %6, align 4
  br label %560

560:                                              ; preds = %559, %548
  %561 = icmp eq i32* %2, null
  br i1 %561, label %563, label %562

562:                                              ; preds = %560
  store i32 %558, i32* %2, align 4
  br label %563

563:                                              ; preds = %560, %562
  %564 = call i32 @u_terminateUChars_69(i16* %0, i32 %1, i32 %558, i32* %7) #4
  br label %565

565:                                              ; preds = %547, %224, %563, %8, %30
  %566 = phi i16* [ null, %30 ], [ null, %8 ], [ %0, %563 ], [ null, %224 ], [ null, %547 ]
  ret i16* %566
}

declare i32 @utf8_nextCharSafeBody_69(i8*, i32*, i32, i32, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i16* @u_strFromUTF8_69(i16*, i32, i32*, i8*, i32, i32*) local_unnamed_addr #0 {
  %7 = tail call i16* @u_strFromUTF8WithSub_69(i16* %0, i32 %1, i32* %2, i8* %3, i32 %4, i32 -1, i32* null, i32* %5)
  ret i16* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @u_strFromUTF8Lenient_69(i16*, i32, i32*, i8*, i32, i32*) local_unnamed_addr #0 {
  %7 = load i32, i32* %5, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %344

9:                                                ; preds = %6
  %10 = icmp eq i8* %3, null
  %11 = icmp ne i32 %4, 0
  %12 = and i1 %10, %11
  %13 = icmp slt i32 %4, -1
  %14 = or i1 %13, %12
  %15 = icmp slt i32 %1, 0
  %16 = or i1 %15, %14
  br i1 %16, label %21, label %17

17:                                               ; preds = %9
  %18 = icmp eq i16* %0, null
  %19 = icmp sgt i32 %1, 0
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %9
  store i32 1, i32* %5, align 4
  br label %344

22:                                               ; preds = %17
  %23 = icmp slt i32 %4, 0
  br i1 %23, label %24, label %169

24:                                               ; preds = %22
  %25 = sext i32 %1 to i64
  %26 = getelementptr inbounds i16, i16* %0, i64 %25
  %27 = select i1 %18, i16* null, i16* %26
  %28 = load i8, i8* %3, align 1
  %29 = icmp ne i8 %28, 0
  %30 = icmp ugt i16* %27, %0
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %124

32:                                               ; preds = %24, %42
  %33 = phi i8 [ %45, %42 ], [ %28, %24 ]
  %34 = phi i8* [ %44, %42 ], [ %3, %24 ]
  %35 = phi i16* [ %43, %42 ], [ %0, %24 ]
  %36 = zext i8 %33 to i32
  %37 = icmp ult i8 %33, -64
  br i1 %37, label %38, label %49

38:                                               ; preds = %32
  %39 = zext i8 %33 to i16
  %40 = getelementptr inbounds i16, i16* %35, i64 1
  store i16 %39, i16* %35, align 2
  %41 = getelementptr inbounds i8, i8* %34, i64 1
  br label %42

42:                                               ; preds = %38, %55, %74, %111
  %43 = phi i16* [ %40, %38 ], [ %61, %55 ], [ %82, %74 ], [ %115, %111 ]
  %44 = phi i8* [ %41, %38 ], [ %62, %55 ], [ %83, %74 ], [ %96, %111 ]
  %45 = load i8, i8* %44, align 1
  %46 = icmp ne i8 %45, 0
  %47 = icmp ult i16* %43, %27
  %48 = and i1 %47, %46
  br i1 %48, label %32, label %124

49:                                               ; preds = %32
  %50 = icmp ult i8 %33, -32
  br i1 %50, label %51, label %63

51:                                               ; preds = %49
  %52 = getelementptr inbounds i8, i8* %34, i64 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %116, label %55

55:                                               ; preds = %51
  %56 = zext i8 %53 to i32
  %57 = shl nuw nsw i32 %36, 6
  %58 = add nuw nsw i32 %57, %56
  %59 = trunc i32 %58 to i16
  %60 = add nsw i16 %59, -12416
  %61 = getelementptr inbounds i16, i16* %35, i64 1
  store i16 %60, i16* %35, align 2
  %62 = getelementptr inbounds i8, i8* %34, i64 2
  br label %42

63:                                               ; preds = %49
  %64 = icmp ult i8 %33, -16
  %65 = getelementptr inbounds i8, i8* %34, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = icmp ne i8 %66, 0
  br i1 %64, label %69, label %84

69:                                               ; preds = %63
  br i1 %68, label %70, label %116

70:                                               ; preds = %69
  %71 = getelementptr inbounds i8, i8* %34, i64 2
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %116, label %74

74:                                               ; preds = %70
  %75 = zext i8 %72 to i32
  %76 = shl nuw nsw i32 %36, 12
  %77 = shl nuw nsw i32 %67, 6
  %78 = add nuw nsw i32 %77, %76
  %79 = add nuw nsw i32 %78, %75
  %80 = trunc i32 %79 to i16
  %81 = add i16 %80, -8320
  %82 = getelementptr inbounds i16, i16* %35, i64 1
  store i16 %81, i16* %35, align 2
  %83 = getelementptr inbounds i8, i8* %34, i64 3
  br label %42

84:                                               ; preds = %63
  br i1 %68, label %85, label %116

85:                                               ; preds = %84
  %86 = getelementptr inbounds i8, i8* %34, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp eq i8 %87, 0
  br i1 %89, label %116, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds i8, i8* %34, i64 3
  %92 = load i8, i8* %91, align 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %116, label %94

94:                                               ; preds = %90
  %95 = zext i8 %92 to i32
  %96 = getelementptr inbounds i8, i8* %34, i64 4
  %97 = shl nuw nsw i32 %36, 18
  %98 = shl nuw nsw i32 %67, 12
  %99 = shl nuw nsw i32 %88, 6
  %100 = add nsw i32 %97, -63447168
  %101 = add nsw i32 %100, %98
  %102 = add nsw i32 %101, %99
  %103 = add nsw i32 %102, %95
  %104 = lshr i32 %103, 10
  %105 = trunc i32 %104 to i16
  %106 = add i16 %105, -10304
  %107 = getelementptr inbounds i16, i16* %35, i64 1
  store i16 %106, i16* %35, align 2
  %108 = icmp ult i16* %107, %27
  br i1 %108, label %111, label %109

109:                                              ; preds = %94
  %110 = load i8, i8* %96, align 1
  br label %124

111:                                              ; preds = %94
  %112 = trunc i32 %103 to i16
  %113 = and i16 %112, 1023
  %114 = or i16 %113, -9216
  %115 = getelementptr inbounds i16, i16* %35, i64 2
  store i16 %114, i16* %107, align 2
  br label %42

116:                                              ; preds = %51, %70, %90, %85, %84, %69
  store i16 -3, i16* %35, align 2
  br label %117

117:                                              ; preds = %117, %116
  %118 = phi i8* [ %34, %116 ], [ %119, %117 ]
  %119 = getelementptr inbounds i8, i8* %118, i64 1
  %120 = load i8, i8* %119, align 1
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %117

122:                                              ; preds = %117
  %123 = getelementptr inbounds i16, i16* %35, i64 1
  br label %331

124:                                              ; preds = %42, %109, %24
  %125 = phi i8 [ %28, %24 ], [ %110, %109 ], [ %45, %42 ]
  %126 = phi i16* [ %0, %24 ], [ %107, %109 ], [ %43, %42 ]
  %127 = phi i32 [ 0, %24 ], [ 1, %109 ], [ 0, %42 ]
  %128 = phi i8* [ %3, %24 ], [ %96, %109 ], [ %44, %42 ]
  %129 = icmp eq i8 %125, 0
  br i1 %129, label %331, label %130

130:                                              ; preds = %124, %135
  %131 = phi i8 [ %140, %135 ], [ %125, %124 ]
  %132 = phi i8* [ %139, %135 ], [ %128, %124 ]
  %133 = phi i32 [ %138, %135 ], [ %127, %124 ]
  %134 = icmp ult i8 %131, -64
  br i1 %134, label %135, label %142

135:                                              ; preds = %130, %163, %154, %144
  %136 = phi i32 [ 1, %144 ], [ 1, %154 ], [ 2, %163 ], [ 1, %130 ]
  %137 = phi i64 [ 2, %144 ], [ 3, %154 ], [ 4, %163 ], [ 1, %130 ]
  %138 = add nuw nsw i32 %133, %136
  %139 = getelementptr inbounds i8, i8* %132, i64 %137
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %331, label %130

142:                                              ; preds = %130
  %143 = icmp ult i8 %131, -32
  br i1 %143, label %144, label %148

144:                                              ; preds = %142
  %145 = getelementptr inbounds i8, i8* %132, i64 1
  %146 = load i8, i8* %145, align 1
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %167, label %135

148:                                              ; preds = %142
  %149 = icmp ult i8 %131, -16
  %150 = getelementptr inbounds i8, i8* %132, i64 1
  %151 = load i8, i8* %150, align 1
  %152 = icmp ne i8 %151, 0
  br i1 %149, label %153, label %158

153:                                              ; preds = %148
  br i1 %152, label %154, label %167

154:                                              ; preds = %153
  %155 = getelementptr inbounds i8, i8* %132, i64 2
  %156 = load i8, i8* %155, align 1
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %167, label %135

158:                                              ; preds = %148
  br i1 %152, label %159, label %167

159:                                              ; preds = %158
  %160 = getelementptr inbounds i8, i8* %132, i64 2
  %161 = load i8, i8* %160, align 1
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds i8, i8* %132, i64 3
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %167, label %135

167:                                              ; preds = %144, %154, %163, %159, %158, %153
  %168 = add nuw nsw i32 %133, 1
  br label %331

169:                                              ; preds = %22
  %170 = sext i32 %4 to i64
  %171 = getelementptr inbounds i8, i8* %3, i64 %170
  %172 = select i1 %10, i8* null, i8* %171
  %173 = icmp slt i32 %1, %4
  br i1 %173, label %174, label %177

174:                                              ; preds = %169
  %175 = icmp eq i32* %2, null
  br i1 %175, label %330, label %176

176:                                              ; preds = %174
  store i32 %4, i32* %2, align 4
  br label %330

177:                                              ; preds = %169
  %178 = ptrtoint i8* %172 to i64
  %179 = ptrtoint i8* %3 to i64
  %180 = sub i64 %178, %179
  %181 = icmp sgt i64 %180, 3
  br i1 %181, label %182, label %250

182:                                              ; preds = %177
  %183 = getelementptr inbounds i8, i8* %172, i64 -3
  br label %184

184:                                              ; preds = %246, %182
  %185 = phi i16* [ %0, %182 ], [ %247, %246 ]
  %186 = phi i8* [ %3, %182 ], [ %248, %246 ]
  %187 = getelementptr inbounds i8, i8* %186, i64 1
  %188 = load i8, i8* %186, align 1
  %189 = zext i8 %188 to i32
  %190 = icmp ult i8 %188, -64
  br i1 %190, label %191, label %194

191:                                              ; preds = %184
  %192 = zext i8 %188 to i16
  %193 = getelementptr inbounds i16, i16* %185, i64 1
  store i16 %192, i16* %185, align 2
  br label %246

194:                                              ; preds = %184
  %195 = icmp ult i8 %188, -32
  br i1 %195, label %196, label %205

196:                                              ; preds = %194
  %197 = shl nuw nsw i32 %189, 6
  %198 = getelementptr inbounds i8, i8* %186, i64 2
  %199 = load i8, i8* %187, align 1
  %200 = zext i8 %199 to i32
  %201 = add nuw nsw i32 %197, %200
  %202 = trunc i32 %201 to i16
  %203 = add nsw i16 %202, -12416
  %204 = getelementptr inbounds i16, i16* %185, i64 1
  store i16 %203, i16* %185, align 2
  br label %246

205:                                              ; preds = %194
  %206 = icmp ult i8 %188, -16
  br i1 %206, label %207, label %221

207:                                              ; preds = %205
  %208 = shl nuw nsw i32 %189, 12
  %209 = getelementptr inbounds i8, i8* %186, i64 2
  %210 = load i8, i8* %187, align 1
  %211 = zext i8 %210 to i32
  %212 = shl nuw nsw i32 %211, 6
  %213 = add nuw nsw i32 %212, %208
  %214 = getelementptr inbounds i8, i8* %186, i64 3
  %215 = load i8, i8* %209, align 1
  %216 = zext i8 %215 to i32
  %217 = add nuw nsw i32 %213, %216
  %218 = trunc i32 %217 to i16
  %219 = add i16 %218, -8320
  %220 = getelementptr inbounds i16, i16* %185, i64 1
  store i16 %219, i16* %185, align 2
  br label %246

221:                                              ; preds = %205
  %222 = shl nuw nsw i32 %189, 18
  %223 = getelementptr inbounds i8, i8* %186, i64 2
  %224 = load i8, i8* %187, align 1
  %225 = zext i8 %224 to i32
  %226 = shl nuw nsw i32 %225, 12
  %227 = getelementptr inbounds i8, i8* %186, i64 3
  %228 = load i8, i8* %223, align 1
  %229 = zext i8 %228 to i32
  %230 = shl nuw nsw i32 %229, 6
  %231 = getelementptr inbounds i8, i8* %186, i64 4
  %232 = load i8, i8* %227, align 1
  %233 = zext i8 %232 to i32
  %234 = add nsw i32 %222, -63447168
  %235 = add nsw i32 %234, %226
  %236 = add nsw i32 %235, %230
  %237 = add nsw i32 %236, %233
  %238 = lshr i32 %237, 10
  %239 = trunc i32 %238 to i16
  %240 = add i16 %239, -10304
  %241 = getelementptr inbounds i16, i16* %185, i64 1
  store i16 %240, i16* %185, align 2
  %242 = trunc i32 %237 to i16
  %243 = and i16 %242, 1023
  %244 = or i16 %243, -9216
  %245 = getelementptr inbounds i16, i16* %185, i64 2
  store i16 %244, i16* %241, align 2
  br label %246

246:                                              ; preds = %191, %207, %221, %196
  %247 = phi i16* [ %193, %191 ], [ %204, %196 ], [ %220, %207 ], [ %245, %221 ]
  %248 = phi i8* [ %187, %191 ], [ %198, %196 ], [ %214, %207 ], [ %231, %221 ]
  %249 = icmp ult i8* %248, %183
  br i1 %249, label %184, label %250

250:                                              ; preds = %246, %177
  %251 = phi i16* [ %0, %177 ], [ %247, %246 ]
  %252 = phi i8* [ %3, %177 ], [ %248, %246 ]
  %253 = icmp ult i8* %252, %172
  br i1 %253, label %254, label %331

254:                                              ; preds = %250, %264
  %255 = phi i8* [ %266, %264 ], [ %252, %250 ]
  %256 = phi i16* [ %265, %264 ], [ %251, %250 ]
  %257 = getelementptr inbounds i8, i8* %255, i64 1
  %258 = load i8, i8* %255, align 1
  %259 = zext i8 %258 to i32
  %260 = icmp ult i8 %258, -64
  br i1 %260, label %261, label %268

261:                                              ; preds = %254
  %262 = zext i8 %258 to i16
  %263 = getelementptr inbounds i16, i16* %256, i64 1
  store i16 %262, i16* %256, align 2
  br label %264

264:                                              ; preds = %261, %272, %287, %303
  %265 = phi i16* [ %263, %261 ], [ %280, %272 ], [ %299, %287 ], [ %326, %303 ]
  %266 = phi i8* [ %257, %261 ], [ %274, %272 ], [ %300, %287 ], [ %327, %303 ]
  %267 = icmp ult i8* %266, %172
  br i1 %267, label %254, label %331

268:                                              ; preds = %254
  %269 = icmp ult i8 %258, -32
  br i1 %269, label %270, label %281

270:                                              ; preds = %268
  %271 = icmp ult i8* %257, %172
  br i1 %271, label %272, label %328

272:                                              ; preds = %270
  %273 = shl nuw nsw i32 %259, 6
  %274 = getelementptr inbounds i8, i8* %255, i64 2
  %275 = load i8, i8* %257, align 1
  %276 = zext i8 %275 to i32
  %277 = add nuw nsw i32 %273, %276
  %278 = trunc i32 %277 to i16
  %279 = add nsw i16 %278, -12416
  %280 = getelementptr inbounds i16, i16* %256, i64 1
  store i16 %279, i16* %256, align 2
  br label %264

281:                                              ; preds = %268
  %282 = icmp ult i8 %258, -16
  %283 = ptrtoint i8* %257 to i64
  %284 = sub i64 %178, %283
  br i1 %282, label %285, label %301

285:                                              ; preds = %281
  %286 = icmp sgt i64 %284, 1
  br i1 %286, label %287, label %328

287:                                              ; preds = %285
  %288 = shl nuw nsw i32 %259, 12
  %289 = getelementptr inbounds i8, i8* %255, i64 2
  %290 = load i8, i8* %257, align 1
  %291 = zext i8 %290 to i32
  %292 = shl nuw nsw i32 %291, 6
  %293 = add nuw nsw i32 %292, %288
  %294 = load i8, i8* %289, align 1
  %295 = zext i8 %294 to i32
  %296 = add nuw nsw i32 %293, %295
  %297 = trunc i32 %296 to i16
  %298 = add i16 %297, -8320
  %299 = getelementptr inbounds i16, i16* %256, i64 1
  store i16 %298, i16* %256, align 2
  %300 = getelementptr inbounds i8, i8* %255, i64 6
  br label %264

301:                                              ; preds = %281
  %302 = icmp sgt i64 %284, 2
  br i1 %302, label %303, label %328

303:                                              ; preds = %301
  %304 = shl nuw nsw i32 %259, 18
  %305 = getelementptr inbounds i8, i8* %255, i64 2
  %306 = load i8, i8* %257, align 1
  %307 = zext i8 %306 to i32
  %308 = shl nuw nsw i32 %307, 12
  %309 = getelementptr inbounds i8, i8* %255, i64 3
  %310 = load i8, i8* %305, align 1
  %311 = zext i8 %310 to i32
  %312 = shl nuw nsw i32 %311, 6
  %313 = load i8, i8* %309, align 1
  %314 = zext i8 %313 to i32
  %315 = add nsw i32 %304, -63447168
  %316 = add nsw i32 %315, %308
  %317 = add nsw i32 %316, %312
  %318 = add nsw i32 %317, %314
  %319 = lshr i32 %318, 10
  %320 = trunc i32 %319 to i16
  %321 = add i16 %320, -10304
  %322 = getelementptr inbounds i16, i16* %256, i64 1
  store i16 %321, i16* %256, align 2
  %323 = trunc i32 %318 to i16
  %324 = and i16 %323, 1023
  %325 = or i16 %324, -9216
  %326 = getelementptr inbounds i16, i16* %256, i64 2
  store i16 %325, i16* %322, align 2
  %327 = getelementptr inbounds i8, i8* %255, i64 8
  br label %264

328:                                              ; preds = %270, %301, %285
  %329 = getelementptr inbounds i16, i16* %256, i64 1
  store i16 -3, i16* %256, align 2
  br label %331

330:                                              ; preds = %176, %174
  store i32 15, i32* %5, align 4
  br label %344

331:                                              ; preds = %264, %135, %122, %250, %124, %328, %167
  %332 = phi i16* [ %126, %167 ], [ %329, %328 ], [ %126, %124 ], [ %251, %250 ], [ %123, %122 ], [ %126, %135 ], [ %265, %264 ]
  %333 = phi i32 [ %168, %167 ], [ 0, %328 ], [ %127, %124 ], [ 0, %250 ], [ 0, %122 ], [ %138, %135 ], [ 0, %264 ]
  %334 = ptrtoint i16* %332 to i64
  %335 = ptrtoint i16* %0 to i64
  %336 = sub i64 %334, %335
  %337 = lshr exact i64 %336, 1
  %338 = trunc i64 %337 to i32
  %339 = add nsw i32 %333, %338
  %340 = icmp eq i32* %2, null
  br i1 %340, label %342, label %341

341:                                              ; preds = %331
  store i32 %339, i32* %2, align 4
  br label %342

342:                                              ; preds = %331, %341
  %343 = tail call i32 @u_terminateUChars_69(i16* %0, i32 %1, i32 %339, i32* %5) #4
  br label %344

344:                                              ; preds = %330, %6, %342, %21
  %345 = phi i16* [ null, %21 ], [ %0, %342 ], [ null, %330 ], [ null, %6 ]
  ret i16* %345
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @u_strToUTF8WithSub_69(i8*, i32, i32*, i16*, i32, i32, i32*, i32*) local_unnamed_addr #0 {
  %9 = icmp eq i8* %0, null
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i8, i8* %0, i64 %10
  %12 = select i1 %9, i8* null, i8* %11
  %13 = load i32, i32* %7, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %629

15:                                               ; preds = %8
  %16 = icmp eq i16* %3, null
  %17 = icmp ne i32 %4, 0
  %18 = and i1 %16, %17
  %19 = icmp slt i32 %4, -1
  %20 = or i1 %19, %18
  %21 = icmp slt i32 %1, 0
  %22 = or i1 %21, %20
  br i1 %22, label %31, label %23

23:                                               ; preds = %15
  %24 = icmp sgt i32 %1, 0
  %25 = and i1 %9, %24
  %26 = icmp sgt i32 %5, 1114111
  %27 = or i1 %25, %26
  %28 = and i32 %5, -2048
  %29 = icmp eq i32 %28, 55296
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %23, %15
  store i32 1, i32* %7, align 4
  br label %629

32:                                               ; preds = %23
  %33 = icmp ne i32* %6, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  store i32 0, i32* %6, align 4
  br label %35

35:                                               ; preds = %34, %32
  %36 = icmp eq i32 %4, -1
  br i1 %36, label %37, label %246

37:                                               ; preds = %35
  %38 = load i16, i16* %3, align 2
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %614, label %40

40:                                               ; preds = %37
  %41 = ptrtoint i8* %12 to i64
  %42 = icmp sgt i32 %5, -1
  br label %43

43:                                               ; preds = %40, %181
  %44 = phi i16 [ %38, %40 ], [ %185, %181 ]
  %45 = phi i32 [ 0, %40 ], [ %184, %181 ]
  %46 = phi i8* [ %0, %40 ], [ %183, %181 ]
  %47 = phi i16* [ %3, %40 ], [ %182, %181 ]
  %48 = zext i16 %44 to i32
  %49 = getelementptr inbounds i16, i16* %47, i64 1
  %50 = icmp ult i16 %44, 128
  br i1 %50, label %51, label %56

51:                                               ; preds = %43
  %52 = icmp ult i8* %46, %12
  br i1 %52, label %53, label %187

53:                                               ; preds = %51
  %54 = trunc i16 %44 to i8
  %55 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 %54, i8* %46, align 1
  br label %181

56:                                               ; preds = %43
  %57 = icmp ult i16 %44, 2048
  br i1 %57, label %58, label %71

58:                                               ; preds = %56
  %59 = ptrtoint i8* %46 to i64
  %60 = sub i64 %41, %59
  %61 = icmp sgt i64 %60, 1
  br i1 %61, label %62, label %187

62:                                               ; preds = %58
  %63 = lshr i16 %44, 6
  %64 = trunc i16 %63 to i8
  %65 = or i8 %64, -64
  %66 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 %65, i8* %46, align 1
  %67 = trunc i16 %44 to i8
  %68 = and i8 %67, 63
  %69 = or i8 %68, -128
  %70 = getelementptr inbounds i8, i8* %46, i64 2
  store i8 %69, i8* %66, align 1
  br label %181

71:                                               ; preds = %56
  %72 = and i16 %44, -2048
  %73 = icmp eq i16 %72, -10240
  br i1 %73, label %92, label %74

74:                                               ; preds = %71
  %75 = ptrtoint i8* %46 to i64
  %76 = sub i64 %41, %75
  %77 = icmp sgt i64 %76, 2
  br i1 %77, label %78, label %187

78:                                               ; preds = %74
  %79 = lshr i16 %44, 12
  %80 = trunc i16 %79 to i8
  %81 = or i8 %80, -32
  %82 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 %81, i8* %46, align 1
  %83 = lshr i16 %44, 6
  %84 = trunc i16 %83 to i8
  %85 = and i8 %84, 63
  %86 = or i8 %85, -128
  %87 = getelementptr inbounds i8, i8* %46, i64 2
  store i8 %86, i8* %82, align 1
  %88 = trunc i16 %44 to i8
  %89 = and i8 %88, 63
  %90 = or i8 %89, -128
  %91 = getelementptr inbounds i8, i8* %46, i64 3
  store i8 %90, i8* %87, align 1
  br label %181

92:                                               ; preds = %71
  %93 = and i32 %48, 1024
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %105

95:                                               ; preds = %92
  %96 = load i16, i16* %49, align 2
  %97 = zext i16 %96 to i32
  %98 = and i32 %97, 64512
  %99 = icmp eq i32 %98, 56320
  br i1 %99, label %100, label %105

100:                                              ; preds = %95
  %101 = getelementptr inbounds i16, i16* %47, i64 2
  %102 = shl nuw nsw i32 %48, 10
  %103 = add nsw i32 %102, -56613888
  %104 = add nsw i32 %103, %97
  br label %109

105:                                              ; preds = %95, %92
  br i1 %42, label %106, label %108

106:                                              ; preds = %105
  %107 = add nsw i32 %45, 1
  br label %109

108:                                              ; preds = %105
  store i32 10, i32* %7, align 4
  br label %629

109:                                              ; preds = %106, %100
  %110 = phi i16* [ %101, %100 ], [ %49, %106 ]
  %111 = phi i32 [ %104, %100 ], [ %5, %106 ]
  %112 = phi i32 [ %45, %100 ], [ %107, %106 ]
  %113 = icmp ult i32 %111, 128
  br i1 %113, label %124, label %114

114:                                              ; preds = %109
  %115 = icmp ult i32 %111, 2048
  br i1 %115, label %124, label %116

116:                                              ; preds = %114
  %117 = icmp ult i32 %111, 55296
  br i1 %117, label %124, label %118

118:                                              ; preds = %116
  %119 = add nsw i32 %111, -57344
  %120 = icmp ugt i32 %119, 1056767
  br i1 %120, label %124, label %121

121:                                              ; preds = %118
  %122 = icmp ult i32 %111, 65536
  %123 = select i1 %122, i32 3, i32 4
  br label %124

124:                                              ; preds = %114, %121, %118, %116, %109
  %125 = phi i32 [ 1, %109 ], [ 2, %114 ], [ 3, %116 ], [ %123, %121 ], [ 0, %118 ]
  %126 = ptrtoint i8* %46 to i64
  %127 = sub i64 %41, %126
  %128 = zext i32 %125 to i64
  %129 = icmp slt i64 %127, %128
  br i1 %129, label %187, label %130

130:                                              ; preds = %124
  %131 = icmp slt i32 %111, 128
  br i1 %131, label %132, label %135

132:                                              ; preds = %130
  %133 = trunc i32 %111 to i8
  %134 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 %133, i8* %46, align 1
  br label %181

135:                                              ; preds = %130
  %136 = icmp slt i32 %111, 2048
  br i1 %136, label %137, label %146

137:                                              ; preds = %135
  %138 = lshr i32 %111, 6
  %139 = trunc i32 %138 to i8
  %140 = or i8 %139, -64
  %141 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 %140, i8* %46, align 1
  %142 = trunc i32 %111 to i8
  %143 = and i8 %142, 63
  %144 = or i8 %143, -128
  %145 = getelementptr inbounds i8, i8* %46, i64 2
  store i8 %144, i8* %141, align 1
  br label %181

146:                                              ; preds = %135
  %147 = icmp slt i32 %111, 65536
  br i1 %147, label %148, label %162

148:                                              ; preds = %146
  %149 = lshr i32 %111, 12
  %150 = trunc i32 %149 to i8
  %151 = or i8 %150, -32
  %152 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 %151, i8* %46, align 1
  %153 = lshr i32 %111, 6
  %154 = trunc i32 %153 to i8
  %155 = and i8 %154, 63
  %156 = or i8 %155, -128
  %157 = getelementptr inbounds i8, i8* %46, i64 2
  store i8 %156, i8* %152, align 1
  %158 = trunc i32 %111 to i8
  %159 = and i8 %158, 63
  %160 = or i8 %159, -128
  %161 = getelementptr inbounds i8, i8* %46, i64 3
  store i8 %160, i8* %157, align 1
  br label %181

162:                                              ; preds = %146
  %163 = lshr i32 %111, 18
  %164 = trunc i32 %163 to i8
  %165 = or i8 %164, -16
  %166 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 %165, i8* %46, align 1
  %167 = lshr i32 %111, 12
  %168 = trunc i32 %167 to i8
  %169 = and i8 %168, 63
  %170 = or i8 %169, -128
  %171 = getelementptr inbounds i8, i8* %46, i64 2
  store i8 %170, i8* %166, align 1
  %172 = lshr i32 %111, 6
  %173 = trunc i32 %172 to i8
  %174 = and i8 %173, 63
  %175 = or i8 %174, -128
  %176 = getelementptr inbounds i8, i8* %46, i64 3
  store i8 %175, i8* %171, align 1
  %177 = trunc i32 %111 to i8
  %178 = and i8 %177, 63
  %179 = or i8 %178, -128
  %180 = getelementptr inbounds i8, i8* %46, i64 4
  store i8 %179, i8* %176, align 1
  br label %181

181:                                              ; preds = %162, %148, %137, %132, %62, %78, %53
  %182 = phi i16* [ %49, %53 ], [ %49, %62 ], [ %49, %78 ], [ %110, %132 ], [ %110, %137 ], [ %110, %148 ], [ %110, %162 ]
  %183 = phi i8* [ %55, %53 ], [ %70, %62 ], [ %91, %78 ], [ %134, %132 ], [ %145, %137 ], [ %161, %148 ], [ %180, %162 ]
  %184 = phi i32 [ %45, %53 ], [ %45, %62 ], [ %45, %78 ], [ %112, %132 ], [ %112, %137 ], [ %112, %148 ], [ %112, %162 ]
  %185 = load i16, i16* %182, align 2
  %186 = icmp eq i16 %185, 0
  br i1 %186, label %614, label %43

187:                                              ; preds = %51, %58, %74, %124
  %188 = phi i16* [ %110, %124 ], [ %49, %74 ], [ %49, %58 ], [ %49, %51 ]
  %189 = phi i32 [ %125, %124 ], [ 3, %74 ], [ 2, %58 ], [ 1, %51 ]
  %190 = phi i32 [ %112, %124 ], [ %45, %74 ], [ %45, %58 ], [ %45, %51 ]
  %191 = load i16, i16* %188, align 2
  %192 = icmp eq i16 %191, 0
  br i1 %192, label %614, label %193

193:                                              ; preds = %187
  %194 = icmp sgt i32 %5, -1
  %195 = icmp ult i32 %5, 128
  %196 = icmp ult i32 %5, 2048
  %197 = icmp ult i32 %5, 55296
  %198 = add nsw i32 %5, -57344
  %199 = icmp ugt i32 %198, 1056767
  %200 = icmp ult i32 %5, 65536
  %201 = select i1 %200, i32 3, i32 4
  %202 = select i1 %195, i32 1, i32 2
  %203 = select i1 %196, i32 %202, i32 3
  %204 = select i1 %199, i32 0, i32 %201
  %205 = select i1 %197, i32 %203, i32 %204
  br label %206

206:                                              ; preds = %193, %240
  %207 = phi i16 [ %191, %193 ], [ %244, %240 ]
  %208 = phi i16* [ %188, %193 ], [ %241, %240 ]
  %209 = phi i32 [ %190, %193 ], [ %243, %240 ]
  %210 = phi i32 [ %189, %193 ], [ %242, %240 ]
  %211 = getelementptr inbounds i16, i16* %208, i64 1
  %212 = zext i16 %207 to i32
  %213 = icmp ult i16 %207, 128
  br i1 %213, label %214, label %216

214:                                              ; preds = %206
  %215 = add nsw i32 %210, 1
  br label %240

216:                                              ; preds = %206
  %217 = icmp ult i16 %207, 2048
  br i1 %217, label %218, label %220

218:                                              ; preds = %216
  %219 = add nsw i32 %210, 2
  br label %240

220:                                              ; preds = %216
  %221 = and i32 %212, 63488
  %222 = icmp eq i32 %221, 55296
  br i1 %222, label %225, label %223

223:                                              ; preds = %220
  %224 = add nsw i32 %210, 3
  br label %240

225:                                              ; preds = %220
  %226 = and i32 %212, 1024
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %235

228:                                              ; preds = %225
  %229 = load i16, i16* %211, align 2
  %230 = and i16 %229, -1024
  %231 = icmp eq i16 %230, -9216
  br i1 %231, label %232, label %235

232:                                              ; preds = %228
  %233 = getelementptr inbounds i16, i16* %208, i64 2
  %234 = add nsw i32 %210, 4
  br label %240

235:                                              ; preds = %228, %225
  br i1 %194, label %236, label %239

236:                                              ; preds = %235
  %237 = add nsw i32 %205, %210
  %238 = add nsw i32 %209, 1
  br label %240

239:                                              ; preds = %235
  store i32 10, i32* %7, align 4
  br label %629

240:                                              ; preds = %218, %232, %236, %223, %214
  %241 = phi i16* [ %211, %214 ], [ %211, %218 ], [ %233, %232 ], [ %211, %236 ], [ %211, %223 ]
  %242 = phi i32 [ %215, %214 ], [ %219, %218 ], [ %234, %232 ], [ %237, %236 ], [ %224, %223 ]
  %243 = phi i32 [ %209, %214 ], [ %209, %218 ], [ %209, %232 ], [ %238, %236 ], [ %209, %223 ]
  %244 = load i16, i16* %241, align 2
  %245 = icmp eq i16 %244, 0
  br i1 %245, label %614, label %206

246:                                              ; preds = %35
  %247 = sext i32 %4 to i64
  %248 = getelementptr inbounds i16, i16* %3, i64 %247
  %249 = select i1 %16, i16* null, i16* %248
  %250 = ptrtoint i8* %12 to i64
  %251 = ptrtoint i8* %0 to i64
  %252 = sub i64 %250, %251
  %253 = sdiv i64 %252, 3
  %254 = trunc i64 %253 to i32
  %255 = ptrtoint i16* %249 to i64
  %256 = ptrtoint i16* %3 to i64
  %257 = sub i64 %255, %256
  %258 = lshr exact i64 %257, 1
  %259 = trunc i64 %258 to i32
  %260 = icmp sgt i32 %254, %259
  %261 = select i1 %260, i32 %259, i32 %254
  %262 = icmp slt i32 %261, 3
  br i1 %262, label %284, label %263

263:                                              ; preds = %246
  %264 = icmp sgt i32 %5, -1
  %265 = icmp slt i32 %5, 128
  %266 = icmp slt i32 %5, 2048
  %267 = icmp slt i32 %5, 65536
  %268 = lshr i32 %5, 18
  %269 = trunc i32 %268 to i8
  %270 = or i8 %269, -16
  %271 = lshr i32 %5, 12
  %272 = trunc i32 %271 to i8
  %273 = and i8 %272, 63
  %274 = or i8 %273, -128
  %275 = lshr i32 %5, 6
  %276 = trunc i32 %275 to i8
  %277 = and i8 %276, 63
  %278 = or i8 %277, -128
  %279 = trunc i32 %5 to i8
  %280 = and i8 %279, 63
  %281 = or i8 %280, -128
  %282 = or i8 %272, -32
  %283 = or i8 %276, -64
  br label %291

284:                                              ; preds = %394, %246
  %285 = phi i16* [ %3, %246 ], [ %395, %394 ]
  %286 = phi i8* [ %0, %246 ], [ %396, %394 ]
  %287 = phi i32 [ 0, %246 ], [ %397, %394 ]
  %288 = icmp ult i16* %285, %249
  br i1 %288, label %289, label %554

289:                                              ; preds = %284
  %290 = icmp sgt i32 %5, -1
  br label %409

291:                                              ; preds = %389, %263
  %292 = phi i16* [ %3, %263 ], [ %390, %389 ]
  %293 = phi i8* [ %0, %263 ], [ %391, %389 ]
  %294 = phi i32 [ 0, %263 ], [ %392, %389 ]
  %295 = phi i32 [ %261, %263 ], [ %393, %389 ]
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = load i16, i16* %292, align 2
  %298 = zext i16 %297 to i32
  %299 = icmp ult i16 %297, 128
  br i1 %299, label %300, label %303

300:                                              ; preds = %291
  %301 = trunc i16 %297 to i8
  %302 = getelementptr inbounds i8, i8* %293, i64 1
  store i8 %301, i8* %293, align 1
  br label %382

303:                                              ; preds = %291
  %304 = icmp ult i16 %297, 2048
  br i1 %304, label %305, label %314

305:                                              ; preds = %303
  %306 = lshr i16 %297, 6
  %307 = trunc i16 %306 to i8
  %308 = or i8 %307, -64
  %309 = getelementptr inbounds i8, i8* %293, i64 1
  store i8 %308, i8* %293, align 1
  %310 = trunc i16 %297 to i8
  %311 = and i8 %310, 63
  %312 = or i8 %311, -128
  %313 = getelementptr inbounds i8, i8* %293, i64 2
  store i8 %312, i8* %309, align 1
  br label %382

314:                                              ; preds = %303
  %315 = and i16 %297, -2048
  %316 = icmp eq i16 %315, -10240
  br i1 %316, label %331, label %317

317:                                              ; preds = %314
  %318 = lshr i16 %297, 12
  %319 = trunc i16 %318 to i8
  %320 = or i8 %319, -32
  %321 = getelementptr inbounds i8, i8* %293, i64 1
  store i8 %320, i8* %293, align 1
  %322 = lshr i16 %297, 6
  %323 = trunc i16 %322 to i8
  %324 = and i8 %323, 63
  %325 = or i8 %324, -128
  %326 = getelementptr inbounds i8, i8* %293, i64 2
  store i8 %325, i8* %321, align 1
  %327 = trunc i16 %297 to i8
  %328 = and i8 %327, 63
  %329 = or i8 %328, -128
  %330 = getelementptr inbounds i8, i8* %293, i64 3
  store i8 %329, i8* %326, align 1
  br label %382

331:                                              ; preds = %314
  %332 = add nsw i32 %295, -1
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %394, label %334

334:                                              ; preds = %331
  %335 = and i32 %298, 1024
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %365

337:                                              ; preds = %334
  %338 = load i16, i16* %296, align 2
  %339 = zext i16 %338 to i32
  %340 = and i32 %339, 64512
  %341 = icmp eq i32 %340, 56320
  br i1 %341, label %342, label %365

342:                                              ; preds = %337
  %343 = getelementptr inbounds i16, i16* %292, i64 2
  %344 = shl nuw nsw i32 %298, 10
  %345 = add nsw i32 %344, -56613888
  %346 = add nsw i32 %345, %339
  %347 = lshr i32 %346, 18
  %348 = trunc i32 %347 to i8
  %349 = or i8 %348, -16
  %350 = getelementptr inbounds i8, i8* %293, i64 1
  store i8 %349, i8* %293, align 1
  %351 = lshr i32 %346, 12
  %352 = trunc i32 %351 to i8
  %353 = and i8 %352, 63
  %354 = or i8 %353, -128
  %355 = getelementptr inbounds i8, i8* %293, i64 2
  store i8 %354, i8* %350, align 1
  %356 = lshr i32 %346, 6
  %357 = trunc i32 %356 to i8
  %358 = and i8 %357, 63
  %359 = or i8 %358, -128
  %360 = getelementptr inbounds i8, i8* %293, i64 3
  store i8 %359, i8* %355, align 1
  %361 = trunc i32 %346 to i8
  %362 = and i8 %361, 63
  %363 = or i8 %362, -128
  %364 = getelementptr inbounds i8, i8* %293, i64 4
  store i8 %363, i8* %360, align 1
  br label %382

365:                                              ; preds = %337, %334
  br i1 %264, label %366, label %381

366:                                              ; preds = %365
  %367 = add nsw i32 %294, 1
  %368 = getelementptr inbounds i8, i8* %293, i64 1
  br i1 %265, label %369, label %370

369:                                              ; preds = %366
  store i8 %279, i8* %293, align 1
  br label %382

370:                                              ; preds = %366
  br i1 %266, label %371, label %373

371:                                              ; preds = %370
  store i8 %283, i8* %293, align 1
  %372 = getelementptr inbounds i8, i8* %293, i64 2
  store i8 %281, i8* %368, align 1
  br label %382

373:                                              ; preds = %370
  br i1 %267, label %374, label %377

374:                                              ; preds = %373
  store i8 %282, i8* %293, align 1
  %375 = getelementptr inbounds i8, i8* %293, i64 2
  store i8 %278, i8* %368, align 1
  %376 = getelementptr inbounds i8, i8* %293, i64 3
  store i8 %281, i8* %375, align 1
  br label %382

377:                                              ; preds = %373
  store i8 %270, i8* %293, align 1
  %378 = getelementptr inbounds i8, i8* %293, i64 2
  store i8 %274, i8* %368, align 1
  %379 = getelementptr inbounds i8, i8* %293, i64 3
  store i8 %278, i8* %378, align 1
  %380 = getelementptr inbounds i8, i8* %293, i64 4
  store i8 %281, i8* %379, align 1
  br label %382

381:                                              ; preds = %365
  store i32 10, i32* %7, align 4
  br label %629

382:                                              ; preds = %377, %374, %371, %369, %300, %317, %342, %305
  %383 = phi i16* [ %296, %300 ], [ %296, %305 ], [ %296, %317 ], [ %343, %342 ], [ %296, %369 ], [ %296, %371 ], [ %296, %374 ], [ %296, %377 ]
  %384 = phi i8* [ %302, %300 ], [ %313, %305 ], [ %330, %317 ], [ %364, %342 ], [ %368, %369 ], [ %372, %371 ], [ %376, %374 ], [ %380, %377 ]
  %385 = phi i32 [ %294, %300 ], [ %294, %305 ], [ %294, %317 ], [ %294, %342 ], [ %367, %369 ], [ %367, %371 ], [ %367, %374 ], [ %367, %377 ]
  %386 = phi i32 [ %295, %300 ], [ %295, %305 ], [ %295, %317 ], [ %332, %342 ], [ %332, %369 ], [ %332, %371 ], [ %332, %374 ], [ %332, %377 ]
  %387 = add nsw i32 %386, -1
  %388 = icmp sgt i32 %387, 0
  br i1 %388, label %389, label %394

389:                                              ; preds = %382, %394
  %390 = phi i16* [ %383, %382 ], [ %395, %394 ]
  %391 = phi i8* [ %384, %382 ], [ %396, %394 ]
  %392 = phi i32 [ %385, %382 ], [ %397, %394 ]
  %393 = phi i32 [ %387, %382 ], [ %407, %394 ]
  br label %291

394:                                              ; preds = %331, %382
  %395 = phi i16* [ %383, %382 ], [ %292, %331 ]
  %396 = phi i8* [ %384, %382 ], [ %293, %331 ]
  %397 = phi i32 [ %385, %382 ], [ %294, %331 ]
  %398 = ptrtoint i8* %396 to i64
  %399 = sub i64 %250, %398
  %400 = sdiv i64 %399, 3
  %401 = trunc i64 %400 to i32
  %402 = ptrtoint i16* %395 to i64
  %403 = sub i64 %255, %402
  %404 = lshr exact i64 %403, 1
  %405 = trunc i64 %404 to i32
  %406 = icmp sgt i32 %401, %405
  %407 = select i1 %406, i32 %405, i32 %401
  %408 = icmp slt i32 %407, 3
  br i1 %408, label %284, label %389

409:                                              ; preds = %289, %549
  %410 = phi i32 [ %287, %289 ], [ %552, %549 ]
  %411 = phi i8* [ %286, %289 ], [ %551, %549 ]
  %412 = phi i16* [ %285, %289 ], [ %550, %549 ]
  %413 = getelementptr inbounds i16, i16* %412, i64 1
  %414 = load i16, i16* %412, align 2
  %415 = zext i16 %414 to i32
  %416 = icmp ult i16 %414, 128
  br i1 %416, label %417, label %422

417:                                              ; preds = %409
  %418 = icmp ult i8* %411, %12
  br i1 %418, label %419, label %554

419:                                              ; preds = %417
  %420 = trunc i16 %414 to i8
  %421 = getelementptr inbounds i8, i8* %411, i64 1
  store i8 %420, i8* %411, align 1
  br label %549

422:                                              ; preds = %409
  %423 = icmp ult i16 %414, 2048
  br i1 %423, label %424, label %437

424:                                              ; preds = %422
  %425 = ptrtoint i8* %411 to i64
  %426 = sub i64 %250, %425
  %427 = icmp sgt i64 %426, 1
  br i1 %427, label %428, label %554

428:                                              ; preds = %424
  %429 = lshr i16 %414, 6
  %430 = trunc i16 %429 to i8
  %431 = or i8 %430, -64
  %432 = getelementptr inbounds i8, i8* %411, i64 1
  store i8 %431, i8* %411, align 1
  %433 = trunc i16 %414 to i8
  %434 = and i8 %433, 63
  %435 = or i8 %434, -128
  %436 = getelementptr inbounds i8, i8* %411, i64 2
  store i8 %435, i8* %432, align 1
  br label %549

437:                                              ; preds = %422
  %438 = and i16 %414, -2048
  %439 = icmp eq i16 %438, -10240
  br i1 %439, label %458, label %440

440:                                              ; preds = %437
  %441 = ptrtoint i8* %411 to i64
  %442 = sub i64 %250, %441
  %443 = icmp sgt i64 %442, 2
  br i1 %443, label %444, label %554

444:                                              ; preds = %440
  %445 = lshr i16 %414, 12
  %446 = trunc i16 %445 to i8
  %447 = or i8 %446, -32
  %448 = getelementptr inbounds i8, i8* %411, i64 1
  store i8 %447, i8* %411, align 1
  %449 = lshr i16 %414, 6
  %450 = trunc i16 %449 to i8
  %451 = and i8 %450, 63
  %452 = or i8 %451, -128
  %453 = getelementptr inbounds i8, i8* %411, i64 2
  store i8 %452, i8* %448, align 1
  %454 = trunc i16 %414 to i8
  %455 = and i8 %454, 63
  %456 = or i8 %455, -128
  %457 = getelementptr inbounds i8, i8* %411, i64 3
  store i8 %456, i8* %453, align 1
  br label %549

458:                                              ; preds = %437
  %459 = and i32 %415, 1024
  %460 = icmp eq i32 %459, 0
  %461 = icmp ult i16* %413, %249
  %462 = and i1 %461, %460
  br i1 %462, label %463, label %473

463:                                              ; preds = %458
  %464 = load i16, i16* %413, align 2
  %465 = zext i16 %464 to i32
  %466 = and i32 %465, 64512
  %467 = icmp eq i32 %466, 56320
  br i1 %467, label %468, label %473

468:                                              ; preds = %463
  %469 = getelementptr inbounds i16, i16* %412, i64 2
  %470 = shl nuw nsw i32 %415, 10
  %471 = add nsw i32 %470, -56613888
  %472 = add nsw i32 %471, %465
  br label %477

473:                                              ; preds = %463, %458
  br i1 %290, label %474, label %476

474:                                              ; preds = %473
  %475 = add nsw i32 %410, 1
  br label %477

476:                                              ; preds = %473
  store i32 10, i32* %7, align 4
  br label %629

477:                                              ; preds = %474, %468
  %478 = phi i16* [ %469, %468 ], [ %413, %474 ]
  %479 = phi i32 [ %472, %468 ], [ %5, %474 ]
  %480 = phi i32 [ %410, %468 ], [ %475, %474 ]
  %481 = icmp ult i32 %479, 128
  br i1 %481, label %492, label %482

482:                                              ; preds = %477
  %483 = icmp ult i32 %479, 2048
  br i1 %483, label %492, label %484

484:                                              ; preds = %482
  %485 = icmp ult i32 %479, 55296
  br i1 %485, label %492, label %486

486:                                              ; preds = %484
  %487 = add nsw i32 %479, -57344
  %488 = icmp ugt i32 %487, 1056767
  br i1 %488, label %492, label %489

489:                                              ; preds = %486
  %490 = icmp ult i32 %479, 65536
  %491 = select i1 %490, i32 3, i32 4
  br label %492

492:                                              ; preds = %482, %489, %486, %484, %477
  %493 = phi i32 [ 1, %477 ], [ 2, %482 ], [ 3, %484 ], [ %491, %489 ], [ 0, %486 ]
  %494 = ptrtoint i8* %411 to i64
  %495 = sub i64 %250, %494
  %496 = zext i32 %493 to i64
  %497 = icmp slt i64 %495, %496
  br i1 %497, label %554, label %498

498:                                              ; preds = %492
  %499 = icmp slt i32 %479, 128
  br i1 %499, label %500, label %503

500:                                              ; preds = %498
  %501 = trunc i32 %479 to i8
  %502 = getelementptr inbounds i8, i8* %411, i64 1
  store i8 %501, i8* %411, align 1
  br label %549

503:                                              ; preds = %498
  %504 = icmp slt i32 %479, 2048
  br i1 %504, label %505, label %514

505:                                              ; preds = %503
  %506 = lshr i32 %479, 6
  %507 = trunc i32 %506 to i8
  %508 = or i8 %507, -64
  %509 = getelementptr inbounds i8, i8* %411, i64 1
  store i8 %508, i8* %411, align 1
  %510 = trunc i32 %479 to i8
  %511 = and i8 %510, 63
  %512 = or i8 %511, -128
  %513 = getelementptr inbounds i8, i8* %411, i64 2
  store i8 %512, i8* %509, align 1
  br label %549

514:                                              ; preds = %503
  %515 = icmp slt i32 %479, 65536
  br i1 %515, label %516, label %530

516:                                              ; preds = %514
  %517 = lshr i32 %479, 12
  %518 = trunc i32 %517 to i8
  %519 = or i8 %518, -32
  %520 = getelementptr inbounds i8, i8* %411, i64 1
  store i8 %519, i8* %411, align 1
  %521 = lshr i32 %479, 6
  %522 = trunc i32 %521 to i8
  %523 = and i8 %522, 63
  %524 = or i8 %523, -128
  %525 = getelementptr inbounds i8, i8* %411, i64 2
  store i8 %524, i8* %520, align 1
  %526 = trunc i32 %479 to i8
  %527 = and i8 %526, 63
  %528 = or i8 %527, -128
  %529 = getelementptr inbounds i8, i8* %411, i64 3
  store i8 %528, i8* %525, align 1
  br label %549

530:                                              ; preds = %514
  %531 = lshr i32 %479, 18
  %532 = trunc i32 %531 to i8
  %533 = or i8 %532, -16
  %534 = getelementptr inbounds i8, i8* %411, i64 1
  store i8 %533, i8* %411, align 1
  %535 = lshr i32 %479, 12
  %536 = trunc i32 %535 to i8
  %537 = and i8 %536, 63
  %538 = or i8 %537, -128
  %539 = getelementptr inbounds i8, i8* %411, i64 2
  store i8 %538, i8* %534, align 1
  %540 = lshr i32 %479, 6
  %541 = trunc i32 %540 to i8
  %542 = and i8 %541, 63
  %543 = or i8 %542, -128
  %544 = getelementptr inbounds i8, i8* %411, i64 3
  store i8 %543, i8* %539, align 1
  %545 = trunc i32 %479 to i8
  %546 = and i8 %545, 63
  %547 = or i8 %546, -128
  %548 = getelementptr inbounds i8, i8* %411, i64 4
  store i8 %547, i8* %544, align 1
  br label %549

549:                                              ; preds = %530, %516, %505, %500, %428, %444, %419
  %550 = phi i16* [ %413, %419 ], [ %413, %428 ], [ %413, %444 ], [ %478, %500 ], [ %478, %505 ], [ %478, %516 ], [ %478, %530 ]
  %551 = phi i8* [ %421, %419 ], [ %436, %428 ], [ %457, %444 ], [ %502, %500 ], [ %513, %505 ], [ %529, %516 ], [ %548, %530 ]
  %552 = phi i32 [ %410, %419 ], [ %410, %428 ], [ %410, %444 ], [ %480, %500 ], [ %480, %505 ], [ %480, %516 ], [ %480, %530 ]
  %553 = icmp ult i16* %550, %249
  br i1 %553, label %409, label %554

554:                                              ; preds = %549, %417, %424, %440, %492, %284
  %555 = phi i8* [ %286, %284 ], [ %411, %492 ], [ %411, %440 ], [ %411, %424 ], [ %411, %417 ], [ %551, %549 ]
  %556 = phi i16* [ %285, %284 ], [ %478, %492 ], [ %413, %440 ], [ %413, %424 ], [ %413, %417 ], [ %550, %549 ]
  %557 = phi i32 [ 0, %284 ], [ %493, %492 ], [ 3, %440 ], [ 2, %424 ], [ 1, %417 ], [ 0, %549 ]
  %558 = phi i32 [ %287, %284 ], [ %480, %492 ], [ %410, %440 ], [ %410, %424 ], [ %410, %417 ], [ %552, %549 ]
  %559 = icmp ult i16* %556, %249
  br i1 %559, label %560, label %614

560:                                              ; preds = %554
  %561 = icmp sgt i32 %5, -1
  %562 = icmp ult i32 %5, 128
  %563 = icmp ult i32 %5, 2048
  %564 = icmp ult i32 %5, 55296
  %565 = add nsw i32 %5, -57344
  %566 = icmp ugt i32 %565, 1056767
  %567 = icmp ult i32 %5, 65536
  %568 = select i1 %567, i32 3, i32 4
  %569 = select i1 %562, i32 1, i32 2
  %570 = select i1 %563, i32 %569, i32 3
  %571 = select i1 %566, i32 0, i32 %568
  %572 = select i1 %564, i32 %570, i32 %571
  br label %573

573:                                              ; preds = %560, %609
  %574 = phi i32 [ %558, %560 ], [ %612, %609 ]
  %575 = phi i32 [ %557, %560 ], [ %611, %609 ]
  %576 = phi i16* [ %556, %560 ], [ %610, %609 ]
  %577 = getelementptr inbounds i16, i16* %576, i64 1
  %578 = load i16, i16* %576, align 2
  %579 = zext i16 %578 to i32
  %580 = icmp ult i16 %578, 128
  br i1 %580, label %581, label %583

581:                                              ; preds = %573
  %582 = add nsw i32 %575, 1
  br label %609

583:                                              ; preds = %573
  %584 = icmp ult i16 %578, 2048
  br i1 %584, label %585, label %587

585:                                              ; preds = %583
  %586 = add nsw i32 %575, 2
  br label %609

587:                                              ; preds = %583
  %588 = and i32 %579, 63488
  %589 = icmp eq i32 %588, 55296
  br i1 %589, label %592, label %590

590:                                              ; preds = %587
  %591 = add nsw i32 %575, 3
  br label %609

592:                                              ; preds = %587
  %593 = and i32 %579, 1024
  %594 = icmp eq i32 %593, 0
  %595 = icmp ult i16* %577, %249
  %596 = and i1 %595, %594
  br i1 %596, label %597, label %604

597:                                              ; preds = %592
  %598 = load i16, i16* %577, align 2
  %599 = and i16 %598, -1024
  %600 = icmp eq i16 %599, -9216
  br i1 %600, label %601, label %604

601:                                              ; preds = %597
  %602 = getelementptr inbounds i16, i16* %576, i64 2
  %603 = add nsw i32 %575, 4
  br label %609

604:                                              ; preds = %597, %592
  br i1 %561, label %605, label %608

605:                                              ; preds = %604
  %606 = add nsw i32 %572, %575
  %607 = add nsw i32 %574, 1
  br label %609

608:                                              ; preds = %604
  store i32 10, i32* %7, align 4
  br label %629

609:                                              ; preds = %585, %601, %605, %590, %581
  %610 = phi i16* [ %577, %581 ], [ %577, %585 ], [ %602, %601 ], [ %577, %605 ], [ %577, %590 ]
  %611 = phi i32 [ %582, %581 ], [ %586, %585 ], [ %603, %601 ], [ %606, %605 ], [ %591, %590 ]
  %612 = phi i32 [ %574, %581 ], [ %574, %585 ], [ %574, %601 ], [ %607, %605 ], [ %574, %590 ]
  %613 = icmp ult i16* %610, %249
  br i1 %613, label %573, label %614

614:                                              ; preds = %609, %181, %240, %37, %554, %187
  %615 = phi i32 [ %189, %187 ], [ %557, %554 ], [ 0, %37 ], [ %242, %240 ], [ 0, %181 ], [ %611, %609 ]
  %616 = phi i8* [ %46, %187 ], [ %555, %554 ], [ %0, %37 ], [ %46, %240 ], [ %183, %181 ], [ %555, %609 ]
  %617 = phi i32 [ %190, %187 ], [ %558, %554 ], [ 0, %37 ], [ %243, %240 ], [ %184, %181 ], [ %612, %609 ]
  %618 = ptrtoint i8* %616 to i64
  %619 = ptrtoint i8* %0 to i64
  %620 = sub i64 %618, %619
  %621 = trunc i64 %620 to i32
  %622 = add nsw i32 %615, %621
  br i1 %33, label %623, label %624

623:                                              ; preds = %614
  store i32 %617, i32* %6, align 4
  br label %624

624:                                              ; preds = %623, %614
  %625 = icmp eq i32* %2, null
  br i1 %625, label %627, label %626

626:                                              ; preds = %624
  store i32 %622, i32* %2, align 4
  br label %627

627:                                              ; preds = %624, %626
  %628 = tail call i32 @u_terminateChars_69(i8* %0, i32 %1, i32 %622, i32* %7) #4
  br label %629

629:                                              ; preds = %476, %381, %608, %108, %8, %627, %239, %31
  %630 = phi i8* [ null, %31 ], [ null, %239 ], [ %0, %627 ], [ null, %8 ], [ null, %108 ], [ null, %608 ], [ null, %381 ], [ null, %476 ]
  ret i8* %630
}

declare i32 @u_terminateChars_69(i8*, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @u_strToUTF8_69(i8*, i32, i32*, i16*, i32, i32*) local_unnamed_addr #0 {
  %7 = tail call i8* @u_strToUTF8WithSub_69(i8* %0, i32 %1, i32* %2, i16* %3, i32 %4, i32 -1, i32* null, i32* %5)
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @u_strFromJavaModifiedUTF8WithSub_69(i16*, i32, i32*, i8*, i32, i32, i32*, i32*) local_unnamed_addr #0 {
  %9 = alloca i32, align 4
  %10 = load i32, i32* %7, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %373

12:                                               ; preds = %8
  %13 = icmp eq i8* %3, null
  %14 = icmp ne i32 %4, 0
  %15 = and i1 %13, %14
  %16 = icmp slt i32 %4, -1
  %17 = or i1 %16, %15
  br i1 %17, label %29, label %18

18:                                               ; preds = %12
  %19 = icmp eq i16* %0, null
  %20 = icmp ne i32 %1, 0
  %21 = and i1 %19, %20
  %22 = icmp slt i32 %1, 0
  %23 = or i1 %22, %21
  %24 = icmp sgt i32 %5, 1114111
  %25 = or i1 %23, %24
  %26 = and i32 %5, -2048
  %27 = icmp eq i32 %26, 55296
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %18, %12
  store i32 1, i32* %7, align 4
  br label %373

30:                                               ; preds = %18
  %31 = icmp ne i32* %6, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  store i32 0, i32* %6, align 4
  br label %33

33:                                               ; preds = %32, %30
  %34 = sext i32 %1 to i64
  %35 = getelementptr inbounds i16, i16* %0, i64 %34
  %36 = icmp slt i32 %4, 0
  br i1 %36, label %37, label %71

37:                                               ; preds = %33
  %38 = load i8, i8* %3, align 1
  %39 = icmp sgt i8 %38, 0
  %40 = icmp sgt i32 %1, 0
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %53

42:                                               ; preds = %37, %42
  %43 = phi i8 [ %49, %42 ], [ %38, %37 ]
  %44 = phi i16* [ %47, %42 ], [ %0, %37 ]
  %45 = phi i8* [ %48, %42 ], [ %3, %37 ]
  %46 = zext i8 %43 to i16
  %47 = getelementptr inbounds i16, i16* %44, i64 1
  store i16 %46, i16* %44, align 2
  %48 = getelementptr inbounds i8, i8* %45, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp sgt i8 %49, 0
  %51 = icmp ult i16* %47, %35
  %52 = and i1 %51, %50
  br i1 %52, label %42, label %53

53:                                               ; preds = %42, %37
  %54 = phi i8* [ %3, %37 ], [ %48, %42 ]
  %55 = phi i16* [ %0, %37 ], [ %47, %42 ]
  %56 = phi i8 [ %38, %37 ], [ %49, %42 ]
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ptrtoint i16* %55 to i64
  %60 = ptrtoint i16* %0 to i64
  %61 = sub i64 %59, %60
  %62 = lshr exact i64 %61, 1
  %63 = trunc i64 %62 to i32
  %64 = icmp eq i32* %2, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %58
  store i32 %63, i32* %2, align 4
  br label %69

66:                                               ; preds = %53
  %67 = tail call i64 @strlen(i8* %54) #5
  %68 = trunc i64 %67 to i32
  br label %71

69:                                               ; preds = %65, %58
  %70 = tail call i32 @u_terminateUChars_69(i16* %0, i32 %1, i32 %63, i32* %7) #4
  br label %373

71:                                               ; preds = %66, %33
  %72 = phi i32 [ %4, %33 ], [ %68, %66 ]
  %73 = phi i8* [ %3, %33 ], [ %54, %66 ]
  %74 = phi i16* [ %0, %33 ], [ %55, %66 ]
  %75 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #4
  store i32 0, i32* %9, align 4
  %76 = ptrtoint i16* %35 to i64
  %77 = icmp sgt i32 %72, 0
  %78 = icmp sgt i32 %5, 65535
  %79 = icmp slt i32 %5, 0
  %80 = trunc i32 %5 to i16
  br label %81

81:                                               ; preds = %187, %71
  %82 = phi i32 [ 0, %71 ], [ %192, %187 ]
  %83 = phi i16* [ %74, %71 ], [ %189, %187 ]
  %84 = phi i32 [ 0, %71 ], [ %188, %187 ]
  %85 = ptrtoint i16* %83 to i64
  %86 = sub i64 %76, %85
  %87 = lshr exact i64 %86, 1
  %88 = trunc i64 %87 to i32
  %89 = sub nsw i32 %72, %82
  %90 = icmp sle i32 %89, %88
  %91 = and i1 %77, %90
  br i1 %91, label %92, label %116

92:                                               ; preds = %81
  %93 = load i8, i8* %73, align 1
  %94 = icmp sgt i8 %93, -1
  br i1 %94, label %95, label %116

95:                                               ; preds = %92
  %96 = icmp sgt i32 %72, %82
  br i1 %96, label %97, label %110

97:                                               ; preds = %95, %104
  %98 = phi i32 [ %108, %104 ], [ %82, %95 ]
  %99 = phi i16* [ %106, %104 ], [ %83, %95 ]
  %100 = sext i32 %98 to i64
  %101 = getelementptr inbounds i8, i8* %73, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = icmp sgt i8 %102, -1
  br i1 %103, label %104, label %110

104:                                              ; preds = %97
  %105 = zext i8 %102 to i16
  %106 = getelementptr inbounds i16, i16* %99, i64 1
  store i16 %105, i16* %99, align 2
  %107 = load i32, i32* %9, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %9, align 4
  %109 = icmp slt i32 %108, %72
  br i1 %109, label %97, label %110

110:                                              ; preds = %97, %104, %95
  %111 = phi i16* [ %83, %95 ], [ %106, %104 ], [ %99, %97 ]
  %112 = phi i32 [ %82, %95 ], [ %108, %104 ], [ %98, %97 ]
  %113 = sub nsw i32 %112, %82
  %114 = sub nsw i32 %88, %113
  %115 = sub nsw i32 %89, %113
  br label %116

116:                                              ; preds = %110, %92, %81
  %117 = phi i32 [ %112, %110 ], [ %82, %92 ], [ %82, %81 ]
  %118 = phi i16* [ %111, %110 ], [ %83, %92 ], [ %83, %81 ]
  %119 = phi i32 [ %114, %110 ], [ %88, %92 ], [ %88, %81 ]
  %120 = phi i32 [ %115, %110 ], [ %89, %92 ], [ %89, %81 ]
  br i1 %78, label %193, label %121

121:                                              ; preds = %116
  %122 = sdiv i32 %120, 3
  %123 = icmp sgt i32 %119, %122
  %124 = select i1 %123, i32 %122, i32 %119
  %125 = icmp slt i32 %124, 3
  br i1 %125, label %193, label %126

126:                                              ; preds = %121, %187
  %127 = phi i32 [ %192, %187 ], [ %117, %121 ]
  %128 = phi i16* [ %189, %187 ], [ %118, %121 ]
  %129 = phi i32 [ %188, %187 ], [ %84, %121 ]
  %130 = phi i32 [ %190, %187 ], [ %124, %121 ]
  %131 = add nsw i32 %127, 1
  store i32 %131, i32* %9, align 4
  %132 = sext i32 %127 to i64
  %133 = getelementptr inbounds i8, i8* %73, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = icmp sgt i8 %134, -1
  br i1 %136, label %137, label %139

137:                                              ; preds = %126
  %138 = zext i8 %134 to i16
  store i16 %138, i16* %128, align 2
  br label %187

139:                                              ; preds = %126
  %140 = icmp ugt i8 %134, -33
  br i1 %140, label %141, label %166

141:                                              ; preds = %139
  %142 = icmp ult i8 %134, -16
  br i1 %142, label %143, label %182

143:                                              ; preds = %141
  %144 = sext i32 %131 to i64
  %145 = getelementptr inbounds i8, i8* %73, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = xor i8 %146, -128
  %148 = zext i8 %147 to i32
  %149 = icmp ult i8 %147, 64
  br i1 %149, label %150, label %182

150:                                              ; preds = %143
  %151 = add nsw i32 %127, 2
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %73, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = xor i8 %154, -128
  %156 = icmp ult i8 %155, 64
  br i1 %156, label %157, label %182

157:                                              ; preds = %150
  %158 = zext i8 %155 to i32
  %159 = shl nuw nsw i32 %135, 12
  %160 = shl nuw nsw i32 %148, 6
  %161 = or i32 %160, %159
  %162 = or i32 %161, %158
  %163 = trunc i32 %162 to i16
  store i16 %163, i16* %128, align 2
  %164 = load i32, i32* %9, align 4
  %165 = add nsw i32 %164, 2
  store i32 %165, i32* %9, align 4
  br label %187

166:                                              ; preds = %139
  %167 = icmp ugt i8 %134, -65
  br i1 %167, label %168, label %182

168:                                              ; preds = %166
  %169 = sext i32 %131 to i64
  %170 = getelementptr inbounds i8, i8* %73, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = xor i8 %171, -128
  %173 = icmp ult i8 %172, 64
  br i1 %173, label %174, label %182

174:                                              ; preds = %168
  %175 = zext i8 %172 to i32
  %176 = shl nuw nsw i32 %135, 6
  %177 = and i32 %176, 1984
  %178 = or i32 %177, %175
  %179 = trunc i32 %178 to i16
  store i16 %179, i16* %128, align 2
  %180 = load i32, i32* %9, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %9, align 4
  br label %187

182:                                              ; preds = %166, %168, %141, %143, %150
  br i1 %79, label %183, label %184

183:                                              ; preds = %182
  store i32 10, i32* %7, align 4
  br label %371

184:                                              ; preds = %182
  %185 = call i32 @utf8_nextCharSafeBody_69(i8* %73, i32* nonnull %9, i32 %72, i32 %135, i8 signext -1) #4
  %186 = add nsw i32 %129, 1
  store i16 %80, i16* %128, align 2
  br label %187

187:                                              ; preds = %137, %184, %174, %157
  %188 = phi i32 [ %129, %137 ], [ %129, %157 ], [ %186, %184 ], [ %129, %174 ]
  %189 = getelementptr inbounds i16, i16* %128, i64 1
  %190 = add nsw i32 %130, -1
  %191 = icmp sgt i32 %190, 0
  %192 = load i32, i32* %9, align 4
  br i1 %191, label %126, label %81

193:                                              ; preds = %116, %121
  %194 = load i32, i32* %9, align 4
  %195 = icmp slt i32 %194, %72
  %196 = icmp ult i16* %118, %35
  %197 = and i1 %196, %195
  br i1 %197, label %198, label %295

198:                                              ; preds = %193
  %199 = icmp slt i32 %5, 65536
  %200 = lshr i32 %5, 10
  %201 = trunc i32 %200 to i16
  %202 = add i16 %201, -10304
  %203 = and i16 %80, 1023
  %204 = or i16 %203, -9216
  br label %205

205:                                              ; preds = %198, %288
  %206 = phi i32 [ %194, %198 ], [ %291, %288 ]
  %207 = phi i32 [ %84, %198 ], [ %290, %288 ]
  %208 = phi i16* [ %118, %198 ], [ %289, %288 ]
  br label %209

209:                                              ; preds = %205, %250
  %210 = phi i32 [ %206, %205 ], [ %251, %250 ]
  %211 = phi i16* [ %208, %205 ], [ %252, %250 ]
  %212 = add nsw i32 %210, 1
  store i32 %212, i32* %9, align 4
  %213 = sext i32 %210 to i64
  %214 = getelementptr inbounds i8, i8* %73, i64 %213
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i32
  %217 = icmp sgt i8 %215, -1
  br i1 %217, label %218, label %221

218:                                              ; preds = %209
  %219 = zext i8 %215 to i16
  %220 = getelementptr inbounds i16, i16* %211, i64 1
  store i16 %219, i16* %211, align 2
  br label %288

221:                                              ; preds = %209
  %222 = icmp ugt i8 %215, -33
  br i1 %222, label %223, label %256

223:                                              ; preds = %221
  %224 = icmp ult i8 %215, -16
  br i1 %224, label %225, label %274

225:                                              ; preds = %223
  %226 = add nsw i32 %210, 2
  %227 = icmp slt i32 %226, %72
  br i1 %227, label %228, label %274

228:                                              ; preds = %225
  %229 = sext i32 %212 to i64
  %230 = getelementptr inbounds i8, i8* %73, i64 %229
  %231 = load i8, i8* %230, align 1
  %232 = xor i8 %231, -128
  %233 = zext i8 %232 to i32
  %234 = icmp ult i8 %232, 64
  br i1 %234, label %235, label %274

235:                                              ; preds = %228
  %236 = sext i32 %226 to i64
  %237 = getelementptr inbounds i8, i8* %73, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = xor i8 %238, -128
  %240 = icmp ult i8 %239, 64
  br i1 %240, label %241, label %274

241:                                              ; preds = %235
  %242 = zext i8 %239 to i32
  %243 = shl nuw nsw i32 %216, 12
  %244 = shl nuw nsw i32 %233, 6
  %245 = or i32 %244, %243
  %246 = or i32 %245, %242
  %247 = trunc i32 %246 to i16
  store i16 %247, i16* %211, align 2
  %248 = load i32, i32* %9, align 4
  %249 = add nsw i32 %248, 2
  br label %250

250:                                              ; preds = %241, %266
  %251 = phi i32 [ %273, %266 ], [ %249, %241 ]
  %252 = getelementptr inbounds i16, i16* %211, i64 1
  store i32 %251, i32* %9, align 4
  %253 = icmp slt i32 %251, %72
  %254 = icmp ult i16* %252, %35
  %255 = and i1 %254, %253
  br i1 %255, label %209, label %295

256:                                              ; preds = %221
  %257 = icmp ugt i8 %215, -65
  %258 = icmp slt i32 %212, %72
  %259 = and i1 %258, %257
  br i1 %259, label %260, label %274

260:                                              ; preds = %256
  %261 = sext i32 %212 to i64
  %262 = getelementptr inbounds i8, i8* %73, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = xor i8 %263, -128
  %265 = icmp ult i8 %264, 64
  br i1 %265, label %266, label %274

266:                                              ; preds = %260
  %267 = zext i8 %264 to i32
  %268 = shl nuw nsw i32 %216, 6
  %269 = and i32 %268, 1984
  %270 = or i32 %269, %267
  %271 = trunc i32 %270 to i16
  store i16 %271, i16* %211, align 2
  %272 = load i32, i32* %9, align 4
  %273 = add nsw i32 %272, 1
  br label %250

274:                                              ; preds = %256, %260, %223, %225, %228, %235
  br i1 %79, label %275, label %276

275:                                              ; preds = %274
  store i32 10, i32* %7, align 4
  br label %371

276:                                              ; preds = %274
  %277 = zext i8 %215 to i32
  %278 = call i32 @utf8_nextCharSafeBody_69(i8* %73, i32* nonnull %9, i32 %72, i32 %277, i8 signext -1) #4
  %279 = add nsw i32 %207, 1
  %280 = getelementptr inbounds i16, i16* %211, i64 1
  br i1 %199, label %281, label %282

281:                                              ; preds = %276
  store i16 %80, i16* %211, align 2
  br label %288

282:                                              ; preds = %276
  store i16 %202, i16* %211, align 2
  %283 = icmp ult i16* %280, %35
  br i1 %283, label %286, label %284

284:                                              ; preds = %282
  %285 = load i32, i32* %9, align 4
  br label %295

286:                                              ; preds = %282
  %287 = getelementptr inbounds i16, i16* %211, i64 2
  store i16 %204, i16* %280, align 2
  br label %288

288:                                              ; preds = %286, %281, %218
  %289 = phi i16* [ %220, %218 ], [ %280, %281 ], [ %287, %286 ]
  %290 = phi i32 [ %207, %218 ], [ %279, %281 ], [ %279, %286 ]
  %291 = load i32, i32* %9, align 4
  %292 = icmp slt i32 %291, %72
  %293 = icmp ult i16* %289, %35
  %294 = and i1 %293, %292
  br i1 %294, label %205, label %295

295:                                              ; preds = %288, %250, %284, %193
  %296 = phi i32 [ %194, %193 ], [ %285, %284 ], [ %251, %250 ], [ %291, %288 ]
  %297 = phi i16* [ %118, %193 ], [ %280, %284 ], [ %252, %250 ], [ %289, %288 ]
  %298 = phi i32 [ 0, %193 ], [ 1, %284 ], [ 0, %250 ], [ 0, %288 ]
  %299 = phi i32 [ %84, %193 ], [ %279, %284 ], [ %207, %250 ], [ %290, %288 ]
  %300 = icmp slt i32 %296, %72
  br i1 %300, label %301, label %356

301:                                              ; preds = %295, %351
  %302 = phi i32 [ %352, %351 ], [ %296, %295 ]
  %303 = phi i32 [ %353, %351 ], [ %299, %295 ]
  %304 = phi i32 [ %354, %351 ], [ %298, %295 ]
  br label %305

305:                                              ; preds = %301, %330
  %306 = phi i32 [ %302, %301 ], [ %332, %330 ]
  %307 = phi i32 [ %304, %301 ], [ %333, %330 ]
  %308 = add nsw i32 %306, 1
  store i32 %308, i32* %9, align 4
  %309 = sext i32 %306 to i64
  %310 = getelementptr inbounds i8, i8* %73, i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = icmp sgt i8 %311, -1
  br i1 %312, label %351, label %313

313:                                              ; preds = %305
  %314 = icmp ugt i8 %311, -33
  br i1 %314, label %315, label %335

315:                                              ; preds = %313
  %316 = icmp ult i8 %311, -16
  br i1 %316, label %317, label %344

317:                                              ; preds = %315
  %318 = add nsw i32 %306, 2
  %319 = icmp slt i32 %318, %72
  br i1 %319, label %320, label %344

320:                                              ; preds = %317
  %321 = sext i32 %308 to i64
  %322 = getelementptr inbounds i8, i8* %73, i64 %321
  %323 = load i8, i8* %322, align 1
  %324 = icmp slt i8 %323, -64
  br i1 %324, label %325, label %344

325:                                              ; preds = %320
  %326 = sext i32 %318 to i64
  %327 = getelementptr inbounds i8, i8* %73, i64 %326
  %328 = load i8, i8* %327, align 1
  %329 = icmp slt i8 %328, -64
  br i1 %329, label %330, label %344

330:                                              ; preds = %325, %339
  %331 = phi i32 [ 2, %339 ], [ 3, %325 ]
  %332 = add nsw i32 %306, %331
  %333 = add nsw i32 %307, 1
  store i32 %332, i32* %9, align 4
  %334 = icmp slt i32 %332, %72
  br i1 %334, label %305, label %356

335:                                              ; preds = %313
  %336 = icmp ugt i8 %311, -65
  %337 = icmp slt i32 %308, %72
  %338 = and i1 %337, %336
  br i1 %338, label %339, label %344

339:                                              ; preds = %335
  %340 = sext i32 %308 to i64
  %341 = getelementptr inbounds i8, i8* %73, i64 %340
  %342 = load i8, i8* %341, align 1
  %343 = icmp slt i8 %342, -64
  br i1 %343, label %330, label %344

344:                                              ; preds = %335, %339, %315, %317, %320, %325
  br i1 %79, label %345, label %346

345:                                              ; preds = %344
  store i32 10, i32* %7, align 4
  br label %371

346:                                              ; preds = %344
  %347 = zext i8 %311 to i32
  %348 = call i32 @utf8_nextCharSafeBody_69(i8* %73, i32* nonnull %9, i32 %72, i32 %347, i8 signext -1) #4
  %349 = add nsw i32 %303, 1
  %350 = load i32, i32* %9, align 4
  br label %351

351:                                              ; preds = %305, %346
  %352 = phi i32 [ %350, %346 ], [ %308, %305 ]
  %353 = phi i32 [ %349, %346 ], [ %303, %305 ]
  %354 = add nsw i32 %307, 1
  %355 = icmp slt i32 %352, %72
  br i1 %355, label %301, label %356

356:                                              ; preds = %351, %330, %295
  %357 = phi i32 [ %299, %295 ], [ %303, %330 ], [ %353, %351 ]
  %358 = phi i32 [ %298, %295 ], [ %333, %330 ], [ %354, %351 ]
  br i1 %31, label %359, label %360

359:                                              ; preds = %356
  store i32 %357, i32* %6, align 4
  br label %360

360:                                              ; preds = %359, %356
  %361 = ptrtoint i16* %297 to i64
  %362 = ptrtoint i16* %0 to i64
  %363 = sub i64 %361, %362
  %364 = lshr exact i64 %363, 1
  %365 = trunc i64 %364 to i32
  %366 = add nsw i32 %358, %365
  %367 = icmp eq i32* %2, null
  br i1 %367, label %369, label %368

368:                                              ; preds = %360
  store i32 %366, i32* %2, align 4
  br label %369

369:                                              ; preds = %360, %368
  %370 = call i32 @u_terminateUChars_69(i16* %0, i32 %1, i32 %366, i32* %7) #4
  br label %371

371:                                              ; preds = %183, %369, %345, %275
  %372 = phi i16* [ null, %275 ], [ null, %345 ], [ %0, %369 ], [ null, %183 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #4
  br label %373

373:                                              ; preds = %69, %371, %8, %29
  %374 = phi i16* [ null, %29 ], [ null, %8 ], [ %372, %371 ], [ %0, %69 ]
  ret i16* %374
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @u_strToJavaModifiedUTF8_69(i8*, i32, i32*, i16*, i32, i32*) local_unnamed_addr #0 {
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  %9 = load i32, i32* %5, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %271

11:                                               ; preds = %6
  %12 = icmp eq i16* %3, null
  %13 = icmp ne i32 %4, 0
  %14 = and i1 %12, %13
  %15 = icmp slt i32 %4, -1
  %16 = or i1 %15, %14
  br i1 %16, label %23, label %17

17:                                               ; preds = %11
  %18 = icmp eq i8* %0, null
  %19 = icmp ne i32 %1, 0
  %20 = and i1 %18, %19
  %21 = icmp slt i32 %1, 0
  %22 = or i1 %21, %20
  br i1 %22, label %23, label %24

23:                                               ; preds = %17, %11
  store i32 1, i32* %5, align 4
  br label %271

24:                                               ; preds = %17
  %25 = icmp eq i32 %4, -1
  br i1 %25, label %26, label %60

26:                                               ; preds = %24
  %27 = load i16, i16* %3, align 2
  %28 = add i16 %27, -1
  %29 = icmp ult i16 %28, 127
  %30 = icmp sgt i32 %1, 0
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %44

32:                                               ; preds = %26, %32
  %33 = phi i16 [ %39, %32 ], [ %27, %26 ]
  %34 = phi i8* [ %37, %32 ], [ %0, %26 ]
  %35 = phi i16* [ %38, %32 ], [ %3, %26 ]
  %36 = trunc i16 %33 to i8
  %37 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %36, i8* %34, align 1
  %38 = getelementptr inbounds i16, i16* %35, i64 1
  %39 = load i16, i16* %38, align 2
  %40 = add i16 %39, -1
  %41 = icmp ult i16 %40, 127
  %42 = icmp ult i8* %37, %8
  %43 = and i1 %42, %41
  br i1 %43, label %32, label %44

44:                                               ; preds = %32, %26
  %45 = phi i16* [ %3, %26 ], [ %38, %32 ]
  %46 = phi i8* [ %0, %26 ], [ %37, %32 ]
  %47 = phi i16 [ %27, %26 ], [ %39, %32 ]
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %49, label %58

49:                                               ; preds = %44
  %50 = ptrtoint i8* %46 to i64
  %51 = ptrtoint i8* %0 to i64
  %52 = sub i64 %50, %51
  %53 = trunc i64 %52 to i32
  %54 = icmp eq i32* %2, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %49
  store i32 %53, i32* %2, align 4
  br label %56

56:                                               ; preds = %49, %55
  %57 = tail call i32 @u_terminateChars_69(i8* %0, i32 %1, i32 %53, i32* %5) #4
  br label %271

58:                                               ; preds = %44
  %59 = tail call i32 @u_strlen_69(i16* %45) #4
  br label %60

60:                                               ; preds = %58, %24
  %61 = phi i16* [ %45, %58 ], [ %3, %24 ]
  %62 = phi i32 [ %59, %58 ], [ %4, %24 ]
  %63 = phi i8* [ %46, %58 ], [ %0, %24 ]
  %64 = icmp eq i16* %61, null
  %65 = sext i32 %62 to i64
  %66 = getelementptr inbounds i16, i16* %61, i64 %65
  %67 = select i1 %64, i16* null, i16* %66
  %68 = bitcast i16* %67 to i8*
  %69 = ptrtoint i8* %8 to i64
  %70 = ptrtoint i16* %67 to i64
  br label %71

71:                                               ; preds = %164, %60
  %72 = phi i16* [ %61, %60 ], [ %132, %164 ]
  %73 = phi i8* [ %63, %60 ], [ %165, %164 ]
  %74 = ptrtoint i8* %73 to i64
  %75 = sub i64 %69, %74
  %76 = trunc i64 %75 to i32
  %77 = ptrtoint i16* %72 to i64
  %78 = sub i64 %70, %77
  %79 = lshr exact i64 %78, 1
  %80 = trunc i64 %79 to i32
  %81 = icmp sge i32 %76, %80
  %82 = icmp sgt i32 %80, 0
  %83 = and i1 %81, %82
  br i1 %83, label %84, label %117

84:                                               ; preds = %71
  %85 = load i16, i16* %72, align 2
  %86 = icmp ult i16 %85, 128
  br i1 %86, label %87, label %117

87:                                               ; preds = %84
  %88 = icmp ult i16* %72, %67
  br i1 %88, label %89, label %108

89:                                               ; preds = %87
  %90 = add i16 %85, -1
  %91 = icmp ult i16 %90, 127
  br i1 %91, label %92, label %104

92:                                               ; preds = %89, %100
  %93 = phi i16* [ %98, %100 ], [ %72, %89 ]
  %94 = phi i8* [ %97, %100 ], [ %73, %89 ]
  %95 = phi i16 [ %101, %100 ], [ %85, %89 ]
  %96 = trunc i16 %95 to i8
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  store i8 %96, i8* %94, align 1
  %98 = getelementptr inbounds i16, i16* %93, i64 1
  %99 = icmp ult i16* %98, %67
  br i1 %99, label %100, label %104

100:                                              ; preds = %92
  %101 = load i16, i16* %98, align 2
  %102 = add i16 %101, -1
  %103 = icmp ult i16 %102, 127
  br i1 %103, label %92, label %104

104:                                              ; preds = %100, %92, %89
  %105 = phi i16* [ %72, %89 ], [ %98, %92 ], [ %98, %100 ]
  %106 = phi i8* [ %73, %89 ], [ %97, %92 ], [ %97, %100 ]
  %107 = ptrtoint i16* %105 to i64
  br label %108

108:                                              ; preds = %104, %87
  %109 = phi i64 [ %107, %104 ], [ %77, %87 ]
  %110 = phi i16* [ %105, %104 ], [ %72, %87 ]
  %111 = phi i8* [ %106, %104 ], [ %73, %87 ]
  %112 = sub i64 %109, %77
  %113 = lshr exact i64 %112, 1
  %114 = trunc i64 %113 to i32
  %115 = sub nsw i32 %76, %114
  %116 = sub nsw i32 %80, %114
  br label %117

117:                                              ; preds = %108, %84, %71
  %118 = phi i16* [ %110, %108 ], [ %72, %84 ], [ %72, %71 ]
  %119 = phi i32 [ %116, %108 ], [ %80, %84 ], [ %80, %71 ]
  %120 = phi i8* [ %111, %108 ], [ %73, %84 ], [ %73, %71 ]
  %121 = phi i32 [ %115, %108 ], [ %76, %84 ], [ %76, %71 ]
  %122 = sdiv i32 %121, 3
  %123 = icmp sgt i32 %122, %119
  %124 = select i1 %123, i32 %119, i32 %122
  %125 = icmp slt i32 %124, 3
  br i1 %125, label %126, label %128

126:                                              ; preds = %117
  %127 = icmp ult i16* %118, %67
  br i1 %127, label %168, label %214

128:                                              ; preds = %117, %164
  %129 = phi i16* [ %132, %164 ], [ %118, %117 ]
  %130 = phi i8* [ %165, %164 ], [ %120, %117 ]
  %131 = phi i32 [ %166, %164 ], [ %124, %117 ]
  %132 = getelementptr inbounds i16, i16* %129, i64 1
  %133 = load i16, i16* %129, align 2
  %134 = add i16 %133, -1
  %135 = icmp ult i16 %134, 127
  br i1 %135, label %136, label %139

136:                                              ; preds = %128
  %137 = trunc i16 %133 to i8
  %138 = getelementptr inbounds i8, i8* %130, i64 1
  store i8 %137, i8* %130, align 1
  br label %164

139:                                              ; preds = %128
  %140 = icmp ult i16 %133, 2048
  br i1 %140, label %141, label %150

141:                                              ; preds = %139
  %142 = lshr i16 %133, 6
  %143 = trunc i16 %142 to i8
  %144 = or i8 %143, -64
  %145 = getelementptr inbounds i8, i8* %130, i64 1
  store i8 %144, i8* %130, align 1
  %146 = trunc i16 %133 to i8
  %147 = and i8 %146, 63
  %148 = or i8 %147, -128
  %149 = getelementptr inbounds i8, i8* %130, i64 2
  store i8 %148, i8* %145, align 1
  br label %164

150:                                              ; preds = %139
  %151 = lshr i16 %133, 12
  %152 = trunc i16 %151 to i8
  %153 = or i8 %152, -32
  %154 = getelementptr inbounds i8, i8* %130, i64 1
  store i8 %153, i8* %130, align 1
  %155 = lshr i16 %133, 6
  %156 = trunc i16 %155 to i8
  %157 = and i8 %156, 63
  %158 = or i8 %157, -128
  %159 = getelementptr inbounds i8, i8* %130, i64 2
  store i8 %158, i8* %154, align 1
  %160 = trunc i16 %133 to i8
  %161 = and i8 %160, 63
  %162 = or i8 %161, -128
  %163 = getelementptr inbounds i8, i8* %130, i64 3
  store i8 %162, i8* %159, align 1
  br label %164

164:                                              ; preds = %136, %150, %141
  %165 = phi i8* [ %138, %136 ], [ %149, %141 ], [ %163, %150 ]
  %166 = add nsw i32 %131, -1
  %167 = icmp sgt i32 %166, 0
  br i1 %167, label %128, label %71

168:                                              ; preds = %126, %211
  %169 = phi i8* [ %212, %211 ], [ %120, %126 ]
  %170 = phi i16* [ %171, %211 ], [ %118, %126 ]
  %171 = getelementptr inbounds i16, i16* %170, i64 1
  %172 = load i16, i16* %170, align 2
  %173 = add i16 %172, -1
  %174 = icmp ult i16 %173, 127
  br i1 %174, label %175, label %180

175:                                              ; preds = %168
  %176 = icmp ult i8* %169, %8
  br i1 %176, label %177, label %214

177:                                              ; preds = %175
  %178 = trunc i16 %172 to i8
  %179 = getelementptr inbounds i8, i8* %169, i64 1
  store i8 %178, i8* %169, align 1
  br label %211

180:                                              ; preds = %168
  %181 = icmp ult i16 %172, 2048
  %182 = ptrtoint i8* %169 to i64
  %183 = sub i64 %69, %182
  br i1 %181, label %184, label %195

184:                                              ; preds = %180
  %185 = icmp sgt i64 %183, 1
  br i1 %185, label %186, label %214

186:                                              ; preds = %184
  %187 = lshr i16 %172, 6
  %188 = trunc i16 %187 to i8
  %189 = or i8 %188, -64
  %190 = getelementptr inbounds i8, i8* %169, i64 1
  store i8 %189, i8* %169, align 1
  %191 = trunc i16 %172 to i8
  %192 = and i8 %191, 63
  %193 = or i8 %192, -128
  %194 = getelementptr inbounds i8, i8* %169, i64 2
  store i8 %193, i8* %190, align 1
  br label %211

195:                                              ; preds = %180
  %196 = icmp sgt i64 %183, 2
  br i1 %196, label %197, label %214

197:                                              ; preds = %195
  %198 = lshr i16 %172, 12
  %199 = trunc i16 %198 to i8
  %200 = or i8 %199, -32
  %201 = getelementptr inbounds i8, i8* %169, i64 1
  store i8 %200, i8* %169, align 1
  %202 = lshr i16 %172, 6
  %203 = trunc i16 %202 to i8
  %204 = and i8 %203, 63
  %205 = or i8 %204, -128
  %206 = getelementptr inbounds i8, i8* %169, i64 2
  store i8 %205, i8* %201, align 1
  %207 = trunc i16 %172 to i8
  %208 = and i8 %207, 63
  %209 = or i8 %208, -128
  %210 = getelementptr inbounds i8, i8* %169, i64 3
  store i8 %209, i8* %206, align 1
  br label %211

211:                                              ; preds = %186, %197, %177
  %212 = phi i8* [ %179, %177 ], [ %194, %186 ], [ %210, %197 ]
  %213 = icmp ult i16* %171, %67
  br i1 %213, label %168, label %214

214:                                              ; preds = %211, %175, %184, %195, %126
  %215 = phi i8* [ %120, %126 ], [ %169, %195 ], [ %169, %184 ], [ %169, %175 ], [ %212, %211 ]
  %216 = phi i16* [ %118, %126 ], [ %171, %195 ], [ %171, %184 ], [ %171, %175 ], [ %171, %211 ]
  %217 = phi i32 [ 0, %126 ], [ 3, %195 ], [ 2, %184 ], [ 1, %175 ], [ 0, %211 ]
  %218 = icmp ult i16* %216, %67
  br i1 %218, label %219, label %260

219:                                              ; preds = %214
  %220 = ptrtoint i16* %216 to i64
  %221 = xor i64 %220, -1
  %222 = getelementptr i8, i8* %68, i64 %221
  %223 = ptrtoint i8* %222 to i64
  %224 = and i64 %223, 2
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %235

226:                                              ; preds = %219
  %227 = getelementptr inbounds i16, i16* %216, i64 1
  %228 = load i16, i16* %216, align 2
  %229 = add i16 %228, -1
  %230 = icmp ult i16 %229, 127
  %231 = icmp ult i16 %228, 2048
  %232 = select i1 %231, i32 2, i32 3
  %233 = select i1 %230, i32 1, i32 %232
  %234 = add nuw nsw i32 %217, %233
  br label %235

235:                                              ; preds = %226, %219
  %236 = phi i32 [ %217, %219 ], [ %234, %226 ]
  %237 = phi i16* [ %216, %219 ], [ %227, %226 ]
  %238 = phi i32 [ undef, %219 ], [ %234, %226 ]
  %239 = icmp ult i8* %222, inttoptr (i64 2 to i8*)
  br i1 %239, label %260, label %240

240:                                              ; preds = %235, %240
  %241 = phi i32 [ %258, %240 ], [ %236, %235 ]
  %242 = phi i16* [ %251, %240 ], [ %237, %235 ]
  %243 = getelementptr inbounds i16, i16* %242, i64 1
  %244 = load i16, i16* %242, align 2
  %245 = add i16 %244, -1
  %246 = icmp ult i16 %245, 127
  %247 = icmp ult i16 %244, 2048
  %248 = select i1 %247, i32 2, i32 3
  %249 = select i1 %246, i32 1, i32 %248
  %250 = add nuw nsw i32 %241, %249
  %251 = getelementptr inbounds i16, i16* %242, i64 2
  %252 = load i16, i16* %243, align 2
  %253 = add i16 %252, -1
  %254 = icmp ult i16 %253, 127
  %255 = icmp ult i16 %252, 2048
  %256 = select i1 %255, i32 2, i32 3
  %257 = select i1 %254, i32 1, i32 %256
  %258 = add nuw nsw i32 %250, %257
  %259 = icmp ult i16* %251, %67
  br i1 %259, label %240, label %260

260:                                              ; preds = %235, %240, %214
  %261 = phi i32 [ %217, %214 ], [ %238, %235 ], [ %258, %240 ]
  %262 = ptrtoint i8* %215 to i64
  %263 = ptrtoint i8* %0 to i64
  %264 = sub i64 %262, %263
  %265 = trunc i64 %264 to i32
  %266 = add nsw i32 %261, %265
  %267 = icmp eq i32* %2, null
  br i1 %267, label %269, label %268

268:                                              ; preds = %260
  store i32 %266, i32* %2, align 4
  br label %269

269:                                              ; preds = %260, %268
  %270 = tail call i32 @u_terminateChars_69(i8* %0, i32 %1, i32 %266, i32* %5) #4
  br label %271

271:                                              ; preds = %6, %269, %56, %23
  %272 = phi i8* [ null, %23 ], [ %0, %56 ], [ %0, %269 ], [ null, %6 ]
  ret i8* %272
}

declare i32 @u_strlen_69(i16*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
