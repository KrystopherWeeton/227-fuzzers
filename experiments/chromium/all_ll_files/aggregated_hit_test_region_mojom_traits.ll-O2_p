; ModuleID = '../../services/viz/public/cpp/hit_test/aggregated_hit_test_region_mojom_traits.cc'
source_filename = "../../services/viz/public/cpp/hit_test/aggregated_hit_test_region_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::internal::AggregatedHitTestRegion_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", i32, i32, %"struct.mojo::internal::Pointer.0", i32, [4 x i8], %"struct.mojo::internal::Pointer.1" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"struct.mojo::internal::Pointer.1" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.4", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.2"*, %"class.mojo::ScopedHandleBase.2"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.2" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.2"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.6" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.15, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.17", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.14", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.15 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.16" }>
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i32 }
%"struct.viz::AggregatedHitTestRegion" = type { %"class.viz::FrameSinkId", i32, i32, %"class.gfx::Rect", i32, %"class.gfx::Transform" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom31AggregatedHitTestRegionDataViewENS1_23AggregatedHitTestRegionEE4ReadES3_PS4_(%"class.viz::mojom::internal::AggregatedHitTestRegion_Data"*, %"class.mojo::Message"*, %"struct.viz::AggregatedHitTestRegion"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = bitcast %"struct.mojo::internal::Pointer"* %4 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %6
  br i1 %7, label %24, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 1
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = bitcast %"struct.viz::AggregatedHitTestRegion"* %2 to i64*
  %18 = zext i32 %16 to i64
  %19 = shl nuw i64 %18, 32
  %20 = zext i32 %13 to i64
  %21 = or i64 %19, %20
  store i64 %21, i64* %17, align 4
  %22 = or i32 %16, %13
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %96, label %24

24:                                               ; preds = %10, %3
  %25 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 4
  %26 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  %29 = bitcast %"struct.mojo::internal::Pointer.0"* %25 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %27
  br i1 %28, label %68, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds i8, i8* %30, i64 16
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 1
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %96, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %30, i64 20
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %96, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds i8, i8* %30, i64 8
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 1
  %45 = getelementptr inbounds i8, i8* %30, i64 12
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 1
  %48 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %2, i64 0, i32 3, i32 0, i32 0
  store i32 %44, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %2, i64 0, i32 3, i32 0, i32 1
  store i32 %47, i32* %49, align 4
  %50 = icmp sgt i32 %44, 0
  %51 = icmp sgt i32 %34, 0
  %52 = and i1 %51, %50
  %53 = sub nuw nsw i32 2147483647, %44
  %54 = icmp ult i32 %53, %34
  %55 = and i1 %54, %52
  %56 = select i1 %55, i32 %53, i32 %34
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  %59 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %2, i64 0, i32 3, i32 1, i32 0
  store i32 %58, i32* %59, align 4
  %60 = icmp sgt i32 %47, 0
  %61 = sub nuw nsw i32 2147483647, %47
  %62 = icmp ult i32 %61, %39
  %63 = and i1 %60, %62
  %64 = select i1 %63, i32 %61, i32 %39
  %65 = icmp sgt i32 %64, 0
  %66 = select i1 %65, i32 %64, i32 0
  %67 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %2, i64 0, i32 3, i32 1, i32 1
  store i32 %66, i32* %67, align 4
  br label %68

68:                                               ; preds = %24, %41
  %69 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 7
  %70 = getelementptr inbounds %"struct.mojo::internal::Pointer.1", %"struct.mojo::internal::Pointer.1"* %69, i64 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %86, label %73

73:                                               ; preds = %68
  %74 = bitcast %"struct.mojo::internal::Pointer.1"* %69 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 %71
  %76 = getelementptr inbounds i8, i8* %75, i64 8
  %77 = bitcast i8* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  %80 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %2, i64 0, i32 5, i32 0
  br i1 %79, label %81, label %82

81:                                               ; preds = %73
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %80) #2
  br label %86

82:                                               ; preds = %73
  %83 = getelementptr inbounds i8, i8* %76, i64 %78
  %84 = getelementptr inbounds i8, i8* %83, i64 8
  %85 = bitcast i8* %84 to float*
  tail call void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44* %80, float* %85) #2
  br label %86

86:                                               ; preds = %82, %81, %68
  %87 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 2
  %88 = load i32, i32* %87, align 1
  %89 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %2, i64 0, i32 1
  store i32 %88, i32* %89, align 4
  %90 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 1
  %92 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %2, i64 0, i32 2
  store i32 %91, i32* %92, align 4
  %93 = getelementptr inbounds %"class.viz::mojom::internal::AggregatedHitTestRegion_Data", %"class.viz::mojom::internal::AggregatedHitTestRegion_Data"* %0, i64 0, i32 5
  %94 = load i32, i32* %93, align 1
  %95 = getelementptr inbounds %"struct.viz::AggregatedHitTestRegion", %"struct.viz::AggregatedHitTestRegion"* %2, i64 0, i32 4
  store i32 %94, i32* %95, align 4
  br label %96

96:                                               ; preds = %10, %36, %31, %86
  %97 = phi i1 [ true, %86 ], [ false, %10 ], [ false, %31 ], [ false, %36 ]
  ret i1 %97
}

declare void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44*, float*) local_unnamed_addr #1

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
