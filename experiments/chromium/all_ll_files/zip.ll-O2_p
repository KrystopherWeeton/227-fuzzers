; ModuleID = '../../third_party/zlib/contrib/minizip/zip.c'
source_filename = "../../third_party/zlib/contrib/minizip/zip.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip64_internal = type { %struct.zlib_filefunc64_32_def_s, i8*, %struct.linkedlist_data_s, i32, %struct.curfile64_info, i64, i64, i64, i8* }
%struct.zlib_filefunc64_32_def_s = type { %struct.zlib_filefunc64_def_s, i8* (i8*, i8*, i32)*, i64 (i8*, i8*)*, i64 (i8*, i8*, i64, i32)* }
%struct.zlib_filefunc64_def_s = type { i8* (i8*, i8*, i32)*, i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*, i64, i32)*, i32 (i8*, i8*)*, i32 (i8*, i8*)*, i8* }
%struct.linkedlist_data_s = type { %struct.linkedlist_datablock_internal_s*, %struct.linkedlist_datablock_internal_s* }
%struct.linkedlist_datablock_internal_s = type { %struct.linkedlist_datablock_internal_s*, i64, i64, i64, [4080 x i8] }
%struct.curfile64_info = type { %struct.z_stream_s, i32, i32, i64, i8*, i64, i64, i64, i64, i32, i32, [65536 x i8], i64, i64, i32, i32, i64, i64, i64, [3 x i64], i32*, i32 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.zlib_filefunc_def_s = type { i8* (i8*, i8*, i32)*, i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*, i64, i32)*, i32 (i8*, i8*)*, i32 (i8*, i8*)*, i8* }
%struct.zip_fileinfo = type { %struct.tm_zip_s, i64, i64, i64 }
%struct.tm_zip_s = type { i32, i32, i32, i32, i32, i32 }

@zip_copyright = hidden local_unnamed_addr constant [79 x i8] c" zip 1.01 Copyright 1998-2004 Gilles Vollant - http://www.winimage.com/zLibDll\00", align 16
@.str = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1
@crypthead.calls = internal unnamed_addr global i32 0, align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @LoadCentralDirectoryRecord(%struct.zip64_internal*) local_unnamed_addr #0 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  store i64 -6148914691236517206, i64* %18, align 8
  %27 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  store i64 -6148914691236517206, i64* %19, align 8
  %28 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  store i64 -6148914691236517206, i64* %20, align 8
  %29 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  store i64 -6148914691236517206, i64* %21, align 8
  %30 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #6
  store i64 -6148914691236517206, i64* %22, align 8
  %31 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #6
  store i64 -6148914691236517206, i64* %23, align 8
  %32 = bitcast i64* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  store i64 -6148914691236517206, i64* %24, align 8
  %33 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0
  %34 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  store i64 -6148914691236517206, i64* %16, align 8
  %37 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #6
  store i64 -6148914691236517206, i64* %17, align 8
  %38 = tail call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* %33, i8* %35, i64 0, i32 2) #6
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %128

40:                                               ; preds = %1
  %41 = tail call i64 @call_ztell64(%struct.zlib_filefunc64_32_def_s* %33, i8* %35) #6
  %42 = icmp ult i64 %41, 65535
  %43 = select i1 %42, i64 %41, i64 65535
  %44 = tail call noalias i8* @malloc(i64 1028) #6
  %45 = icmp eq i8* %44, null
  br i1 %45, label %128, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  br label %49

49:                                               ; preds = %93, %46
  %50 = phi i64 [ %55, %93 ], [ 4, %46 ]
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %52, label %96

52:                                               ; preds = %49
  %53 = add i64 %50, 1024
  %54 = icmp ugt i64 %53, %43
  %55 = select i1 %54, i64 %43, i64 %53
  %56 = sub i64 %41, %55
  %57 = icmp ult i64 %55, 1028
  %58 = select i1 %57, i64 %55, i64 1028
  %59 = tail call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* %33, i8* %35, i64 %56, i32 0) #6
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %96

61:                                               ; preds = %52
  %62 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %47, align 8
  %63 = load i8*, i8** %48, align 8
  %64 = tail call i64 %62(i8* %63, i8* %35, i8* nonnull %44, i64 %58) #6
  %65 = icmp eq i64 %64, %58
  br i1 %65, label %66, label %96

66:                                               ; preds = %61
  %67 = trunc i64 %58 to i32
  %68 = icmp ugt i32 %67, 3
  br i1 %68, label %69, label %93

69:                                               ; preds = %66
  %70 = add nsw i64 %58, -4
  br label %71

71:                                               ; preds = %90, %69
  %72 = phi i64 [ %70, %69 ], [ %91, %90 ]
  %73 = getelementptr inbounds i8, i8* %44, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 80
  br i1 %75, label %76, label %90

76:                                               ; preds = %71
  %77 = getelementptr inbounds i8, i8* %73, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 75
  br i1 %79, label %80, label %90

80:                                               ; preds = %76
  %81 = getelementptr inbounds i8, i8* %73, i64 2
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 6
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = getelementptr inbounds i8, i8* %73, i64 3
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 7
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = add i64 %72, %56
  br label %93

90:                                               ; preds = %84, %80, %76, %71
  %91 = add nsw i64 %72, -1
  %92 = icmp sgt i64 %72, 0
  br i1 %92, label %71, label %93

93:                                               ; preds = %90, %88, %66
  %94 = phi i64 [ %89, %88 ], [ 0, %66 ], [ 0, %90 ]
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %49, label %97

96:                                               ; preds = %61, %52, %49
  tail call void @free(i8* %44) #6
  br label %128

97:                                               ; preds = %93
  tail call void @free(i8* %44) #6
  %98 = tail call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* %33, i8* %35, i64 %94, i32 0) #6
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %128

100:                                              ; preds = %97
  %101 = call fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* %33, i8* %35, i64* nonnull %16) #6
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %128

103:                                              ; preds = %100
  %104 = call fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* %33, i8* %35, i64* nonnull %16) #6
  %105 = icmp eq i32 %104, 0
  %106 = load i64, i64* %16, align 8
  %107 = icmp eq i64 %106, 0
  %108 = and i1 %105, %107
  br i1 %108, label %109, label %128

109:                                              ; preds = %103
  %110 = call fastcc i32 @zip64local_getLong64(%struct.zlib_filefunc64_32_def_s* %33, i8* %35, i64* nonnull %17) #6
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %128

112:                                              ; preds = %109
  %113 = call fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* %33, i8* %35, i64* nonnull %16) #6
  %114 = icmp eq i32 %113, 0
  %115 = load i64, i64* %16, align 8
  %116 = icmp eq i64 %115, 1
  %117 = and i1 %114, %116
  br i1 %117, label %118, label %128

118:                                              ; preds = %112
  %119 = load i64, i64* %17, align 8
  %120 = tail call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* %33, i8* %35, i64 %119, i32 0) #6
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = call fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* %33, i8* %35, i64* nonnull %16) #6
  %124 = icmp eq i32 %123, 0
  %125 = load i64, i64* %16, align 8
  %126 = icmp eq i64 %125, 101075792
  %127 = and i1 %124, %126
  br i1 %127, label %129, label %128

128:                                              ; preds = %1, %40, %97, %100, %103, %109, %112, %118, %122, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %131

129:                                              ; preds = %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  %130 = icmp eq i64 %119, 0
  br i1 %130, label %131, label %193

131:                                              ; preds = %128, %129
  %132 = load i8*, i8** %34, align 8
  %133 = tail call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* %33, i8* %132, i64 0, i32 2) #6
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %295

135:                                              ; preds = %131
  %136 = tail call i64 @call_ztell64(%struct.zlib_filefunc64_32_def_s* %33, i8* %132) #6
  %137 = icmp ult i64 %136, 65535
  %138 = select i1 %137, i64 %136, i64 65535
  %139 = tail call noalias i8* @malloc(i64 1028) #6
  %140 = icmp eq i8* %139, null
  br i1 %140, label %295, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 1
  %143 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  br label %144

144:                                              ; preds = %188, %141
  %145 = phi i64 [ %150, %188 ], [ 4, %141 ]
  %146 = icmp ult i64 %145, %138
  br i1 %146, label %147, label %191

147:                                              ; preds = %144
  %148 = add i64 %145, 1024
  %149 = icmp ugt i64 %148, %138
  %150 = select i1 %149, i64 %138, i64 %148
  %151 = sub i64 %136, %150
  %152 = icmp ult i64 %150, 1028
  %153 = select i1 %152, i64 %150, i64 1028
  %154 = tail call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* %33, i8* %132, i64 %151, i32 0) #6
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %191

156:                                              ; preds = %147
  %157 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %142, align 8
  %158 = load i8*, i8** %143, align 8
  %159 = tail call i64 %157(i8* %158, i8* %132, i8* nonnull %139, i64 %153) #6
  %160 = icmp eq i64 %159, %153
  br i1 %160, label %161, label %191

161:                                              ; preds = %156
  %162 = trunc i64 %153 to i32
  %163 = icmp ugt i32 %162, 3
  br i1 %163, label %164, label %188

164:                                              ; preds = %161
  %165 = add nsw i64 %153, -4
  br label %166

166:                                              ; preds = %185, %164
  %167 = phi i64 [ %165, %164 ], [ %186, %185 ]
  %168 = getelementptr inbounds i8, i8* %139, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = icmp eq i8 %169, 80
  br i1 %170, label %171, label %185

171:                                              ; preds = %166
  %172 = getelementptr inbounds i8, i8* %168, i64 1
  %173 = load i8, i8* %172, align 1
  %174 = icmp eq i8 %173, 75
  br i1 %174, label %175, label %185

175:                                              ; preds = %171
  %176 = getelementptr inbounds i8, i8* %168, i64 2
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, 5
  br i1 %178, label %179, label %185

179:                                              ; preds = %175
  %180 = getelementptr inbounds i8, i8* %168, i64 3
  %181 = load i8, i8* %180, align 1
  %182 = icmp eq i8 %181, 6
  br i1 %182, label %183, label %185

183:                                              ; preds = %179
  %184 = add i64 %167, %151
  br label %188

185:                                              ; preds = %179, %175, %171, %166
  %186 = add nsw i64 %167, -1
  %187 = icmp sgt i64 %167, 0
  br i1 %187, label %166, label %188

188:                                              ; preds = %185, %183, %161
  %189 = phi i64 [ %184, %183 ], [ 0, %161 ], [ 0, %185 ]
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %144, label %191

191:                                              ; preds = %188, %156, %147, %144
  %192 = phi i64 [ %189, %188 ], [ 0, %144 ], [ 0, %147 ], [ 0, %156 ]
  tail call void @free(i8* %139) #6
  br label %295

193:                                              ; preds = %129
  %194 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #6
  store i64 -6148914691236517206, i64* %25, align 8
  %195 = load i8*, i8** %34, align 8
  %196 = tail call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* %33, i8* %195, i64 %119, i32 0) #6
  %197 = icmp ne i64 %196, 0
  %198 = load i8*, i8** %34, align 8
  %199 = call fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* %33, i8* %198, i64* nonnull %20)
  %200 = load i8*, i8** %34, align 8
  %201 = call fastcc i32 @zip64local_getLong64(%struct.zlib_filefunc64_32_def_s* %33, i8* %200, i64* nonnull %25)
  %202 = or i32 %201, %199
  %203 = icmp ne i32 %202, 0
  %204 = or i1 %197, %203
  %205 = sext i1 %204 to i32
  %206 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #6
  store i8 -86, i8* %15, align 1
  %207 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %47, align 8
  %208 = load i8*, i8** %48, align 8
  %209 = call i64 %207(i8* %208, i8* %206, i8* nonnull %15, i64 1) #6
  %210 = trunc i64 %209 to i32
  %211 = icmp eq i32 %210, 1
  br i1 %211, label %212, label %213

212:                                              ; preds = %193
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #6
  br label %219

213:                                              ; preds = %193
  %214 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %215 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %214, align 8
  %216 = load i8*, i8** %48, align 8
  %217 = call i32 %215(i8* %216, i8* %206) #6
  %218 = icmp eq i32 %217, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #6
  br i1 %218, label %219, label %233

219:                                              ; preds = %213, %212
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #6
  store i8 -86, i8* %14, align 1
  %220 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %47, align 8
  %221 = load i8*, i8** %48, align 8
  %222 = call i64 %220(i8* %221, i8* %206, i8* nonnull %14, i64 1) #6
  %223 = trunc i64 %222 to i32
  %224 = icmp eq i32 %223, 1
  br i1 %224, label %225, label %226

225:                                              ; preds = %219
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #6
  br label %232

226:                                              ; preds = %219
  %227 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %228 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %227, align 8
  %229 = load i8*, i8** %48, align 8
  %230 = call i32 %228(i8* %229, i8* %206) #6
  %231 = icmp eq i32 %230, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #6
  br i1 %231, label %232, label %233

232:                                              ; preds = %226, %225
  br label %233

233:                                              ; preds = %213, %226, %232
  %234 = phi i32 [ %205, %232 ], [ -1, %226 ], [ -1, %213 ]
  %235 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #6
  store i8 -86, i8* %13, align 1
  %236 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %47, align 8
  %237 = load i8*, i8** %48, align 8
  %238 = call i64 %236(i8* %237, i8* %235, i8* nonnull %13, i64 1) #6
  %239 = trunc i64 %238 to i32
  %240 = icmp eq i32 %239, 1
  br i1 %240, label %241, label %242

241:                                              ; preds = %233
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #6
  br label %248

242:                                              ; preds = %233
  %243 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %244 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %243, align 8
  %245 = load i8*, i8** %48, align 8
  %246 = call i32 %244(i8* %245, i8* %235) #6
  %247 = icmp eq i32 %246, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #6
  br i1 %247, label %248, label %262

248:                                              ; preds = %242, %241
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #6
  store i8 -86, i8* %12, align 1
  %249 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %47, align 8
  %250 = load i8*, i8** %48, align 8
  %251 = call i64 %249(i8* %250, i8* %235, i8* nonnull %12, i64 1) #6
  %252 = trunc i64 %251 to i32
  %253 = icmp eq i32 %252, 1
  br i1 %253, label %254, label %255

254:                                              ; preds = %248
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #6
  br label %261

255:                                              ; preds = %248
  %256 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %257 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %256, align 8
  %258 = load i8*, i8** %48, align 8
  %259 = call i32 %257(i8* %258, i8* %235) #6
  %260 = icmp eq i32 %259, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #6
  br i1 %260, label %261, label %262

261:                                              ; preds = %255, %254
  br label %262

262:                                              ; preds = %242, %255, %261
  %263 = phi i32 [ %234, %261 ], [ -1, %255 ], [ -1, %242 ]
  %264 = load i8*, i8** %34, align 8
  %265 = call fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* %33, i8* %264, i64* nonnull %21)
  %266 = load i8*, i8** %34, align 8
  %267 = call fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* %33, i8* %266, i64* nonnull %22)
  %268 = or i32 %267, %265
  %269 = load i8*, i8** %34, align 8
  %270 = call fastcc i32 @zip64local_getLong64(%struct.zlib_filefunc64_32_def_s* %33, i8* %269, i64* nonnull %23)
  %271 = or i32 %268, %270
  %272 = load i8*, i8** %34, align 8
  %273 = call fastcc i32 @zip64local_getLong64(%struct.zlib_filefunc64_32_def_s* %33, i8* %272, i64* nonnull %24)
  %274 = or i32 %271, %273
  %275 = icmp eq i32 %274, 0
  %276 = select i1 %275, i32 %263, i32 -1
  %277 = load i64, i64* %24, align 8
  %278 = load i64, i64* %23, align 8
  %279 = icmp ne i64 %277, %278
  %280 = load i64, i64* %22, align 8
  %281 = load i64, i64* %21, align 8
  %282 = or i64 %281, %280
  %283 = icmp ne i64 %282, 0
  %284 = or i1 %279, %283
  %285 = select i1 %284, i32 -103, i32 %276
  %286 = load i8*, i8** %34, align 8
  %287 = call fastcc i32 @zip64local_getLong64(%struct.zlib_filefunc64_32_def_s* %33, i8* %286, i64* nonnull %18)
  %288 = load i8*, i8** %34, align 8
  %289 = call fastcc i32 @zip64local_getLong64(%struct.zlib_filefunc64_32_def_s* %33, i8* %288, i64* nonnull %19)
  %290 = or i32 %289, %287
  %291 = icmp eq i32 %290, 0
  %292 = select i1 %291, i32 %285, i32 -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #6
  %293 = load i64, i64* %19, align 8
  %294 = load i64, i64* %18, align 8
  br label %517

295:                                              ; preds = %131, %135, %191
  %296 = phi i64 [ 0, %135 ], [ 0, %131 ], [ %192, %191 ]
  %297 = load i8*, i8** %34, align 8
  %298 = tail call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* %33, i8* %297, i64 %296, i32 0) #6
  %299 = icmp ne i64 %298, 0
  %300 = load i8*, i8** %34, align 8
  %301 = call fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* %33, i8* %300, i64* nonnull %20)
  %302 = icmp ne i32 %301, 0
  %303 = or i1 %299, %302
  %304 = sext i1 %303 to i32
  %305 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #6
  store i8 -86, i8* %11, align 1
  %306 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 1
  %307 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %306, align 8
  %308 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  %309 = load i8*, i8** %308, align 8
  %310 = call i64 %307(i8* %309, i8* %305, i8* nonnull %11, i64 1) #6
  %311 = trunc i64 %310 to i32
  %312 = icmp eq i32 %311, 1
  br i1 %312, label %313, label %316

313:                                              ; preds = %295
  %314 = load i8, i8* %11, align 1
  %315 = zext i8 %314 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #6
  br label %322

316:                                              ; preds = %295
  %317 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %318 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %317, align 8
  %319 = load i8*, i8** %308, align 8
  %320 = call i32 %318(i8* %319, i8* %305) #6
  %321 = icmp eq i32 %320, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #6
  br i1 %321, label %322, label %342

322:                                              ; preds = %316, %313
  %323 = phi i64 [ %315, %313 ], [ 0, %316 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #6
  store i8 -86, i8* %10, align 1
  %324 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %306, align 8
  %325 = load i8*, i8** %308, align 8
  %326 = call i64 %324(i8* %325, i8* %305, i8* nonnull %10, i64 1) #6
  %327 = trunc i64 %326 to i32
  %328 = icmp eq i32 %327, 1
  br i1 %328, label %329, label %332

329:                                              ; preds = %322
  %330 = load i8, i8* %10, align 1
  %331 = zext i8 %330 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #6
  br label %338

332:                                              ; preds = %322
  %333 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %334 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %333, align 8
  %335 = load i8*, i8** %308, align 8
  %336 = call i32 %334(i8* %335, i8* %305) #6
  %337 = icmp eq i32 %336, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #6
  br i1 %337, label %338, label %342

338:                                              ; preds = %332, %329
  %339 = phi i64 [ %331, %329 ], [ %323, %332 ]
  %340 = shl nsw i64 %339, 8
  %341 = or i64 %340, %323
  br label %342

342:                                              ; preds = %316, %332, %338
  %343 = phi i64 [ %341, %338 ], [ 0, %332 ], [ 0, %316 ]
  %344 = phi i32 [ %304, %338 ], [ -1, %332 ], [ -1, %316 ]
  store i64 %343, i64* %21, align 8
  %345 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #6
  store i8 -86, i8* %9, align 1
  %346 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %306, align 8
  %347 = load i8*, i8** %308, align 8
  %348 = call i64 %346(i8* %347, i8* %345, i8* nonnull %9, i64 1) #6
  %349 = trunc i64 %348 to i32
  %350 = icmp eq i32 %349, 1
  br i1 %350, label %351, label %354

351:                                              ; preds = %342
  %352 = load i8, i8* %9, align 1
  %353 = zext i8 %352 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #6
  br label %360

354:                                              ; preds = %342
  %355 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %356 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %355, align 8
  %357 = load i8*, i8** %308, align 8
  %358 = call i32 %356(i8* %357, i8* %345) #6
  %359 = icmp eq i32 %358, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #6
  br i1 %359, label %360, label %380

360:                                              ; preds = %354, %351
  %361 = phi i64 [ %353, %351 ], [ 0, %354 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #6
  store i8 -86, i8* %8, align 1
  %362 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %306, align 8
  %363 = load i8*, i8** %308, align 8
  %364 = call i64 %362(i8* %363, i8* %345, i8* nonnull %8, i64 1) #6
  %365 = trunc i64 %364 to i32
  %366 = icmp eq i32 %365, 1
  br i1 %366, label %367, label %370

367:                                              ; preds = %360
  %368 = load i8, i8* %8, align 1
  %369 = zext i8 %368 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #6
  br label %376

370:                                              ; preds = %360
  %371 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %372 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %371, align 8
  %373 = load i8*, i8** %308, align 8
  %374 = call i32 %372(i8* %373, i8* %345) #6
  %375 = icmp eq i32 %374, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #6
  br i1 %375, label %376, label %380

376:                                              ; preds = %370, %367
  %377 = phi i64 [ %369, %367 ], [ %361, %370 ]
  %378 = shl nsw i64 %377, 8
  %379 = or i64 %378, %361
  br label %380

380:                                              ; preds = %354, %370, %376
  %381 = phi i64 [ %379, %376 ], [ 0, %370 ], [ 0, %354 ]
  %382 = phi i32 [ %344, %376 ], [ -1, %370 ], [ -1, %354 ]
  store i64 %381, i64* %22, align 8
  store i64 0, i64* %23, align 8
  %383 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #6
  store i8 -86, i8* %7, align 1
  %384 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %306, align 8
  %385 = load i8*, i8** %308, align 8
  %386 = call i64 %384(i8* %385, i8* %383, i8* nonnull %7, i64 1) #6
  %387 = trunc i64 %386 to i32
  %388 = icmp eq i32 %387, 1
  br i1 %388, label %389, label %392

389:                                              ; preds = %380
  %390 = load i8, i8* %7, align 1
  %391 = zext i8 %390 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #6
  br label %398

392:                                              ; preds = %380
  %393 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %394 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %393, align 8
  %395 = load i8*, i8** %308, align 8
  %396 = call i32 %394(i8* %395, i8* %383) #6
  %397 = icmp eq i32 %396, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #6
  br i1 %397, label %398, label %414

398:                                              ; preds = %392, %389
  %399 = phi i64 [ %391, %389 ], [ 0, %392 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #6
  store i8 -86, i8* %6, align 1
  %400 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %306, align 8
  %401 = load i8*, i8** %308, align 8
  %402 = call i64 %400(i8* %401, i8* %383, i8* nonnull %6, i64 1) #6
  %403 = trunc i64 %402 to i32
  %404 = icmp eq i32 %403, 1
  br i1 %404, label %405, label %408

405:                                              ; preds = %398
  %406 = load i8, i8* %6, align 1
  %407 = zext i8 %406 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #6
  br label %415

408:                                              ; preds = %398
  %409 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %410 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %409, align 8
  %411 = load i8*, i8** %308, align 8
  %412 = call i32 %410(i8* %411, i8* %383) #6
  %413 = icmp eq i32 %412, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #6
  br i1 %413, label %415, label %414

414:                                              ; preds = %408, %392
  store i64 0, i64* %20, align 8
  br label %419

415:                                              ; preds = %408, %405
  %416 = phi i64 [ %407, %405 ], [ %399, %408 ]
  %417 = shl nsw i64 %416, 8
  %418 = or i64 %417, %399
  store i64 %418, i64* %20, align 8
  store i64 %418, i64* %23, align 8
  br label %419

419:                                              ; preds = %414, %415
  %420 = phi i64 [ %418, %415 ], [ 0, %414 ]
  %421 = phi i32 [ %382, %415 ], [ -1, %414 ]
  store i64 0, i64* %24, align 8
  %422 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #6
  store i8 -86, i8* %5, align 1
  %423 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %306, align 8
  %424 = load i8*, i8** %308, align 8
  %425 = call i64 %423(i8* %424, i8* %422, i8* nonnull %5, i64 1) #6
  %426 = trunc i64 %425 to i32
  %427 = icmp eq i32 %426, 1
  br i1 %427, label %428, label %431

428:                                              ; preds = %419
  %429 = load i8, i8* %5, align 1
  %430 = zext i8 %429 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #6
  br label %437

431:                                              ; preds = %419
  %432 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %433 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %432, align 8
  %434 = load i8*, i8** %308, align 8
  %435 = call i32 %433(i8* %434, i8* %422) #6
  %436 = icmp eq i32 %435, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #6
  br i1 %436, label %437, label %453

437:                                              ; preds = %431, %428
  %438 = phi i64 [ %430, %428 ], [ 0, %431 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 -86, i8* %4, align 1
  %439 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %306, align 8
  %440 = load i8*, i8** %308, align 8
  %441 = call i64 %439(i8* %440, i8* %422, i8* nonnull %4, i64 1) #6
  %442 = trunc i64 %441 to i32
  %443 = icmp eq i32 %442, 1
  br i1 %443, label %444, label %447

444:                                              ; preds = %437
  %445 = load i8, i8* %4, align 1
  %446 = zext i8 %445 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  br label %454

447:                                              ; preds = %437
  %448 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %449 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %448, align 8
  %450 = load i8*, i8** %308, align 8
  %451 = call i32 %449(i8* %450, i8* %422) #6
  %452 = icmp eq i32 %451, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  br i1 %452, label %454, label %453

453:                                              ; preds = %447, %431
  store i64 0, i64* %20, align 8
  br label %458

454:                                              ; preds = %447, %444
  %455 = phi i64 [ %446, %444 ], [ %438, %447 ]
  %456 = shl nsw i64 %455, 8
  %457 = or i64 %456, %438
  store i64 %457, i64* %20, align 8
  store i64 %457, i64* %24, align 8
  br label %458

458:                                              ; preds = %453, %454
  %459 = phi i64 [ %457, %454 ], [ 0, %453 ]
  %460 = phi i32 [ %421, %454 ], [ -1, %453 ]
  store i64 0, i64* %18, align 8
  %461 = load i8*, i8** %34, align 8
  %462 = call fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* %33, i8* %461, i64* nonnull %20)
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %464, label %471

464:                                              ; preds = %458
  %465 = or i64 %381, %343
  %466 = icmp ne i64 %465, 0
  %467 = icmp ne i64 %459, %420
  %468 = or i1 %466, %467
  %469 = select i1 %468, i32 -103, i32 %460
  %470 = load i64, i64* %20, align 8
  store i64 %470, i64* %18, align 8
  br label %471

471:                                              ; preds = %458, %464
  %472 = phi i64 [ %470, %464 ], [ 0, %458 ]
  %473 = phi i32 [ %469, %464 ], [ -1, %458 ]
  store i64 0, i64* %19, align 8
  %474 = load i8*, i8** %34, align 8
  %475 = call fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* %33, i8* %474, i64* nonnull %20)
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %479

477:                                              ; preds = %471
  %478 = load i64, i64* %20, align 8
  store i64 %478, i64* %19, align 8
  br label %479

479:                                              ; preds = %471, %477
  %480 = phi i64 [ %478, %477 ], [ 0, %471 ]
  %481 = phi i32 [ %473, %477 ], [ -1, %471 ]
  %482 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #6
  store i8 -86, i8* %3, align 1
  %483 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %306, align 8
  %484 = load i8*, i8** %308, align 8
  %485 = call i64 %483(i8* %484, i8* %482, i8* nonnull %3, i64 1) #6
  %486 = trunc i64 %485 to i32
  %487 = icmp eq i32 %486, 1
  br i1 %487, label %488, label %491

488:                                              ; preds = %479
  %489 = load i8, i8* %3, align 1
  %490 = zext i8 %489 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #6
  br label %497

491:                                              ; preds = %479
  %492 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %493 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %492, align 8
  %494 = load i8*, i8** %308, align 8
  %495 = call i32 %493(i8* %494, i8* %482) #6
  %496 = icmp eq i32 %495, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #6
  br i1 %496, label %497, label %528

497:                                              ; preds = %491, %488
  %498 = phi i64 [ %490, %488 ], [ 0, %491 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #6
  store i8 -86, i8* %2, align 1
  %499 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %306, align 8
  %500 = load i8*, i8** %308, align 8
  %501 = call i64 %499(i8* %500, i8* %482, i8* nonnull %2, i64 1) #6
  %502 = trunc i64 %501 to i32
  %503 = icmp eq i32 %502, 1
  br i1 %503, label %504, label %507

504:                                              ; preds = %497
  %505 = load i8, i8* %2, align 1
  %506 = zext i8 %505 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #6
  br label %513

507:                                              ; preds = %497
  %508 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 6
  %509 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %508, align 8
  %510 = load i8*, i8** %308, align 8
  %511 = call i32 %509(i8* %510, i8* %482) #6
  %512 = icmp eq i32 %511, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #6
  br i1 %512, label %513, label %528

513:                                              ; preds = %507, %504
  %514 = phi i64 [ %506, %504 ], [ %498, %507 ]
  %515 = shl nsw i64 %514, 8
  %516 = or i64 %515, %498
  br label %517

517:                                              ; preds = %513, %262
  %518 = phi i64 [ %277, %262 ], [ %459, %513 ]
  %519 = phi i64 [ %294, %262 ], [ %472, %513 ]
  %520 = phi i64 [ %293, %262 ], [ %480, %513 ]
  %521 = phi i64 [ %119, %262 ], [ %296, %513 ]
  %522 = phi i64 [ 0, %262 ], [ %516, %513 ]
  %523 = phi i32 [ %292, %262 ], [ %481, %513 ]
  %524 = add i64 %519, %520
  %525 = icmp uge i64 %521, %524
  %526 = icmp eq i32 %523, 0
  %527 = and i1 %526, %525
  br i1 %527, label %535, label %528

528:                                              ; preds = %491, %507, %517
  %529 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 5
  %530 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %529, align 8
  %531 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  %532 = load i8*, i8** %531, align 8
  %533 = load i8*, i8** %34, align 8
  %534 = call i32 %530(i8* %532, i8* %533) #6
  br label %694

535:                                              ; preds = %517
  %536 = icmp eq i64 %522, 0
  br i1 %536, label %551, label %537

537:                                              ; preds = %535
  %538 = add nsw i64 %522, 1
  %539 = call noalias i8* @malloc(i64 %538) #6
  %540 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 8
  store i8* %539, i8** %540, align 8
  %541 = icmp eq i8* %539, null
  br i1 %541, label %551, label %542

542:                                              ; preds = %537
  %543 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 1
  %544 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %543, align 8
  %545 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  %546 = load i8*, i8** %545, align 8
  %547 = load i8*, i8** %34, align 8
  %548 = call i64 %544(i8* %546, i8* %547, i8* nonnull %539, i64 %522) #6
  %549 = load i8*, i8** %540, align 8
  %550 = getelementptr inbounds i8, i8* %549, i64 %548
  store i8 0, i8* %550, align 1
  br label %551

551:                                              ; preds = %537, %535, %542
  %552 = sub i64 %521, %524
  %553 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 6
  store i64 %552, i64* %553, align 8
  %554 = call noalias i8* @malloc(i64 4080) #6
  %555 = load i8*, i8** %34, align 8
  %556 = add i64 %552, %520
  %557 = call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* %33, i8* %555, i64 %556, i32 0) #6
  %558 = icmp ne i64 %557, 0
  %559 = sext i1 %558 to i32
  %560 = icmp ne i64 %519, 0
  %561 = xor i1 %558, true
  %562 = and i1 %560, %561
  br i1 %562, label %563, label %683

563:                                              ; preds = %551
  %564 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 1
  %565 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  %566 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 2
  %567 = icmp eq %struct.linkedlist_data_s* %566, null
  %568 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 2, i32 1
  %569 = bitcast %struct.linkedlist_datablock_internal_s** %568 to i8**
  %570 = bitcast %struct.linkedlist_data_s* %566 to i8**
  br label %571

571:                                              ; preds = %678, %563
  %572 = phi i64 [ %519, %563 ], [ %679, %678 ]
  %573 = icmp ult i64 %572, 4080
  %574 = select i1 %573, i64 %572, i64 4080
  %575 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %564, align 8
  %576 = load i8*, i8** %565, align 8
  %577 = load i8*, i8** %34, align 8
  %578 = call i64 %575(i8* %576, i8* %577, i8* %554, i64 %574) #6
  %579 = icmp ne i64 %578, %574
  %580 = or i1 %579, %567
  br i1 %580, label %681, label %581

581:                                              ; preds = %571
  %582 = load %struct.linkedlist_datablock_internal_s*, %struct.linkedlist_datablock_internal_s** %568, align 8
  %583 = icmp eq %struct.linkedlist_datablock_internal_s* %582, null
  br i1 %583, label %584, label %593

584:                                              ; preds = %581
  %585 = call noalias i8* @malloc(i64 4112) #6
  %586 = icmp eq i8* %585, null
  br i1 %586, label %587, label %588

587:                                              ; preds = %584
  store i8* %585, i8** %569, align 8
  store i8* %585, i8** %570, align 8
  br label %683

588:                                              ; preds = %584
  %589 = bitcast i8* %585 to %struct.linkedlist_datablock_internal_s*
  %590 = bitcast i8* %585 to %struct.linkedlist_datablock_internal_s**
  store %struct.linkedlist_datablock_internal_s* null, %struct.linkedlist_datablock_internal_s** %590, align 8
  %591 = getelementptr inbounds i8, i8* %585, i64 8
  %592 = bitcast i8* %591 to <2 x i64>*
  store <2 x i64> <i64 4080, i64 0>, <2 x i64>* %592, align 8
  store i8* %585, i8** %569, align 8
  store i8* %585, i8** %570, align 8
  br label %593

593:                                              ; preds = %588, %581
  %594 = phi %struct.linkedlist_datablock_internal_s* [ %589, %588 ], [ %582, %581 ]
  %595 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %594, i64 0, i32 1
  %596 = load i64, i64* %595, align 8
  br label %597

597:                                              ; preds = %670, %593
  %598 = phi i64 [ %674, %670 ], [ %596, %593 ]
  %599 = phi i8* [ %675, %670 ], [ %554, %593 ]
  %600 = phi %struct.linkedlist_datablock_internal_s* [ %619, %670 ], [ %594, %593 ]
  %601 = phi i64 [ %676, %670 ], [ %574, %593 ]
  %602 = icmp eq i64 %598, 0
  br i1 %602, label %603, label %617

603:                                              ; preds = %597
  %604 = call noalias i8* @malloc(i64 4112) #6
  %605 = icmp eq i8* %604, null
  br i1 %605, label %606, label %608

606:                                              ; preds = %603
  %607 = bitcast %struct.linkedlist_datablock_internal_s* %600 to i8**
  store i8* %604, i8** %607, align 8
  br label %683

608:                                              ; preds = %603
  %609 = bitcast i8* %604 to %struct.linkedlist_datablock_internal_s*
  %610 = bitcast i8* %604 to %struct.linkedlist_datablock_internal_s**
  store %struct.linkedlist_datablock_internal_s* null, %struct.linkedlist_datablock_internal_s** %610, align 8
  %611 = getelementptr inbounds i8, i8* %604, i64 8
  %612 = bitcast i8* %611 to <2 x i64>*
  store <2 x i64> <i64 4080, i64 0>, <2 x i64>* %612, align 8
  %613 = bitcast %struct.linkedlist_datablock_internal_s* %600 to i8**
  store i8* %604, i8** %613, align 8
  store i8* %604, i8** %569, align 8
  %614 = getelementptr inbounds i8, i8* %604, i64 8
  %615 = bitcast i8* %614 to i64*
  %616 = load i64, i64* %615, align 8
  br label %617

617:                                              ; preds = %608, %597
  %618 = phi i64 [ %616, %608 ], [ %598, %597 ]
  %619 = phi %struct.linkedlist_datablock_internal_s* [ %609, %608 ], [ %600, %597 ]
  %620 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %619, i64 0, i32 1
  %621 = icmp ult i64 %618, %601
  %622 = select i1 %621, i64 %618, i64 %601
  %623 = trunc i64 %622 to i32
  %624 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %619, i64 0, i32 2
  %625 = load i64, i64* %624, align 8
  %626 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %619, i64 0, i32 4, i64 %625
  %627 = icmp eq i32 %623, 0
  %628 = and i64 %622, 4294967295
  br i1 %627, label %670, label %629

629:                                              ; preds = %617
  %630 = icmp ult i64 %628, 32
  br i1 %630, label %658, label %631

631:                                              ; preds = %629
  %632 = getelementptr %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %619, i64 0, i32 4, i64 %625
  %633 = add i64 %625, %628
  %634 = getelementptr %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %619, i64 0, i32 4, i64 %633
  %635 = getelementptr i8, i8* %599, i64 %628
  %636 = icmp ult i8* %632, %635
  %637 = icmp ult i8* %599, %634
  %638 = and i1 %636, %637
  br i1 %638, label %658, label %639

639:                                              ; preds = %631
  %640 = and i64 %622, 31
  %641 = sub nsw i64 %628, %640
  br label %642

642:                                              ; preds = %642, %639
  %643 = phi i64 [ 0, %639 ], [ %654, %642 ]
  %644 = getelementptr inbounds i8, i8* %599, i64 %643
  %645 = bitcast i8* %644 to <16 x i8>*
  %646 = load <16 x i8>, <16 x i8>* %645, align 1, !alias.scope !2
  %647 = getelementptr inbounds i8, i8* %644, i64 16
  %648 = bitcast i8* %647 to <16 x i8>*
  %649 = load <16 x i8>, <16 x i8>* %648, align 1, !alias.scope !2
  %650 = getelementptr inbounds i8, i8* %626, i64 %643
  %651 = bitcast i8* %650 to <16 x i8>*
  store <16 x i8> %646, <16 x i8>* %651, align 1, !alias.scope !5, !noalias !2
  %652 = getelementptr inbounds i8, i8* %650, i64 16
  %653 = bitcast i8* %652 to <16 x i8>*
  store <16 x i8> %649, <16 x i8>* %653, align 1, !alias.scope !5, !noalias !2
  %654 = add i64 %643, 32
  %655 = icmp eq i64 %654, %641
  br i1 %655, label %656, label %642, !llvm.loop !7

656:                                              ; preds = %642
  %657 = icmp eq i64 %640, 0
  br i1 %657, label %667, label %658

658:                                              ; preds = %656, %631, %629
  %659 = phi i64 [ 0, %631 ], [ 0, %629 ], [ %641, %656 ]
  br label %660

660:                                              ; preds = %658, %660
  %661 = phi i64 [ %665, %660 ], [ %659, %658 ]
  %662 = getelementptr inbounds i8, i8* %599, i64 %661
  %663 = load i8, i8* %662, align 1
  %664 = getelementptr inbounds i8, i8* %626, i64 %661
  store i8 %663, i8* %664, align 1
  %665 = add nuw nsw i64 %661, 1
  %666 = icmp ult i64 %665, %628
  br i1 %666, label %660, label %667, !llvm.loop !9

667:                                              ; preds = %660, %656
  %668 = load i64, i64* %624, align 8
  %669 = load i64, i64* %620, align 8
  br label %670

670:                                              ; preds = %617, %667
  %671 = phi i64 [ %669, %667 ], [ %618, %617 ]
  %672 = phi i64 [ %668, %667 ], [ %625, %617 ]
  %673 = add i64 %672, %628
  store i64 %673, i64* %624, align 8
  %674 = sub i64 %671, %628
  store i64 %674, i64* %620, align 8
  %675 = getelementptr inbounds i8, i8* %599, i64 %628
  %676 = sub i64 %601, %628
  %677 = icmp eq i64 %676, 0
  br i1 %677, label %678, label %597

678:                                              ; preds = %670
  %679 = sub i64 %572, %574
  %680 = icmp eq i64 %679, 0
  br i1 %680, label %683, label %571

681:                                              ; preds = %571
  %682 = select i1 %579, i32 -1, i32 -104
  br label %683

683:                                              ; preds = %678, %681, %606, %587, %551
  %684 = phi i32 [ %559, %551 ], [ -104, %606 ], [ -104, %587 ], [ %682, %681 ], [ 0, %678 ]
  %685 = icmp eq i8* %554, null
  br i1 %685, label %687, label %686

686:                                              ; preds = %683
  call void @free(i8* nonnull %554) #6
  br label %687

687:                                              ; preds = %683, %686
  %688 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 5
  store i64 %552, i64* %688, align 8
  %689 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 7
  store i64 %518, i64* %689, align 8
  %690 = load i8*, i8** %34, align 8
  %691 = call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* %33, i8* %690, i64 %556, i32 0) #6
  %692 = icmp eq i64 %691, 0
  %693 = select i1 %692, i32 %684, i32 -1
  br label %694

694:                                              ; preds = %687, %528
  %695 = phi i32 [ -1, %528 ], [ %693, %687 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  ret i32 %695
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s*, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @zip64local_getLong(%struct.zlib_filefunc64_32_def_s* nocapture readonly, i8*, i64* nocapture) unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #6
  store i8 -86, i8* %7, align 1
  %8 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 1
  %9 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %8, align 8
  %10 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 7
  %11 = load i8*, i8** %10, align 8
  %12 = call i64 %9(i8* %11, i8* %1, i8* nonnull %7, i64 1) #6
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %19

15:                                               ; preds = %3
  %16 = load i8, i8* %7, align 1
  %17 = zext i8 %16 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #6
  %18 = zext i8 %16 to i64
  br label %25

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %21 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %20, align 8
  %22 = load i8*, i8** %10, align 8
  %23 = call i32 %21(i8* %22, i8* %1) #6
  %24 = icmp eq i32 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #6
  br i1 %24, label %25, label %91

25:                                               ; preds = %15, %19
  %26 = phi i64 [ %18, %15 ], [ 0, %19 ]
  %27 = phi i32 [ %17, %15 ], [ 0, %19 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #6
  store i8 -86, i8* %6, align 1
  %28 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %8, align 8
  %29 = load i8*, i8** %10, align 8
  %30 = call i64 %28(i8* %29, i8* %1, i8* nonnull %6, i64 1) #6
  %31 = trunc i64 %30 to i32
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %25
  %34 = load i8, i8* %6, align 1
  %35 = zext i8 %34 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #6
  %36 = zext i8 %34 to i64
  %37 = shl nuw nsw i64 %36, 8
  %38 = or i64 %37, %26
  br label %48

39:                                               ; preds = %25
  %40 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %41 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %40, align 8
  %42 = load i8*, i8** %10, align 8
  %43 = call i32 %41(i8* %42, i8* %1) #6
  %44 = icmp eq i32 %43, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #6
  %45 = shl nuw nsw i32 %27, 8
  %46 = zext i32 %45 to i64
  %47 = or i64 %26, %46
  br i1 %44, label %48, label %91

48:                                               ; preds = %33, %39
  %49 = phi i64 [ %38, %33 ], [ %47, %39 ]
  %50 = phi i32 [ %35, %33 ], [ %27, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #6
  store i8 -86, i8* %5, align 1
  %51 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %8, align 8
  %52 = load i8*, i8** %10, align 8
  %53 = call i64 %51(i8* %52, i8* %1, i8* nonnull %5, i64 1) #6
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %60

56:                                               ; preds = %48
  %57 = load i8, i8* %5, align 1
  %58 = zext i8 %57 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #6
  %59 = zext i8 %57 to i64
  br label %67

60:                                               ; preds = %48
  %61 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %62 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %61, align 8
  %63 = load i8*, i8** %10, align 8
  %64 = call i32 %62(i8* %63, i8* %1) #6
  %65 = icmp eq i32 %64, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #6
  %66 = sext i32 %50 to i64
  br i1 %65, label %67, label %91

67:                                               ; preds = %56, %60
  %68 = phi i64 [ %59, %56 ], [ %66, %60 ]
  %69 = phi i32 [ %58, %56 ], [ %50, %60 ]
  %70 = shl nsw i64 %68, 16
  %71 = add nuw nsw i64 %70, %49
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 -86, i8* %4, align 1
  %72 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %8, align 8
  %73 = load i8*, i8** %10, align 8
  %74 = call i64 %72(i8* %73, i8* %1, i8* nonnull %4, i64 1) #6
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %80

77:                                               ; preds = %67
  %78 = load i8, i8* %4, align 1
  %79 = zext i8 %78 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  br label %86

80:                                               ; preds = %67
  %81 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %82 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %81, align 8
  %83 = load i8*, i8** %10, align 8
  %84 = call i32 %82(i8* %83, i8* %1) #6
  %85 = icmp eq i32 %84, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  br i1 %85, label %86, label %91

86:                                               ; preds = %77, %80
  %87 = phi i32 [ %79, %77 ], [ %69, %80 ]
  %88 = sext i32 %87 to i64
  %89 = shl nsw i64 %88, 24
  %90 = add nuw nsw i64 %71, %89
  br label %91

91:                                               ; preds = %19, %39, %60, %80, %86
  %92 = phi i32 [ 0, %86 ], [ -1, %80 ], [ -1, %60 ], [ -1, %39 ], [ -1, %19 ]
  %93 = phi i64 [ %90, %86 ], [ 0, %80 ], [ 0, %60 ], [ 0, %39 ], [ 0, %19 ]
  store i64 %93, i64* %2, align 8
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @zip64local_getLong64(%struct.zlib_filefunc64_32_def_s* readonly, i8*, i64* nocapture) unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #6
  store i8 -86, i8* %11, align 1
  %12 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 1
  %13 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %12, align 8
  %14 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 7
  %15 = load i8*, i8** %14, align 8
  %16 = call i64 %13(i8* %15, i8* %1, i8* nonnull %11, i64 1) #6
  %17 = trunc i64 %16 to i32
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %23

19:                                               ; preds = %3
  %20 = load i8, i8* %11, align 1
  %21 = zext i8 %20 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #6
  %22 = zext i8 %20 to i64
  br label %29

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %24, align 8
  %26 = load i8*, i8** %14, align 8
  %27 = call i32 %25(i8* %26, i8* %1) #6
  %28 = icmp eq i32 %27, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #6
  br i1 %28, label %29, label %179

29:                                               ; preds = %19, %23
  %30 = phi i64 [ %22, %19 ], [ 0, %23 ]
  %31 = phi i32 [ %21, %19 ], [ 0, %23 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #6
  store i8 -86, i8* %10, align 1
  %32 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %12, align 8
  %33 = load i8*, i8** %14, align 8
  %34 = call i64 %32(i8* %33, i8* %1, i8* nonnull %10, i64 1) #6
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %29
  %38 = load i8, i8* %10, align 1
  %39 = zext i8 %38 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #6
  %40 = zext i8 %38 to i64
  %41 = shl nuw nsw i64 %40, 8
  %42 = or i64 %41, %30
  br label %52

43:                                               ; preds = %29
  %44 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %45 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %44, align 8
  %46 = load i8*, i8** %14, align 8
  %47 = call i32 %45(i8* %46, i8* %1) #6
  %48 = icmp eq i32 %47, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #6
  %49 = shl nuw nsw i32 %31, 8
  %50 = zext i32 %49 to i64
  %51 = or i64 %30, %50
  br i1 %48, label %52, label %179

52:                                               ; preds = %37, %43
  %53 = phi i64 [ %42, %37 ], [ %51, %43 ]
  %54 = phi i32 [ %39, %37 ], [ %31, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #6
  store i8 -86, i8* %9, align 1
  %55 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %12, align 8
  %56 = load i8*, i8** %14, align 8
  %57 = call i64 %55(i8* %56, i8* %1, i8* nonnull %9, i64 1) #6
  %58 = trunc i64 %57 to i32
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %64

60:                                               ; preds = %52
  %61 = load i8, i8* %9, align 1
  %62 = zext i8 %61 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #6
  %63 = zext i8 %61 to i64
  br label %71

64:                                               ; preds = %52
  %65 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %66 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %65, align 8
  %67 = load i8*, i8** %14, align 8
  %68 = call i32 %66(i8* %67, i8* %1) #6
  %69 = icmp eq i32 %68, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #6
  %70 = sext i32 %54 to i64
  br i1 %69, label %71, label %179

71:                                               ; preds = %60, %64
  %72 = phi i64 [ %63, %60 ], [ %70, %64 ]
  %73 = phi i32 [ %62, %60 ], [ %54, %64 ]
  %74 = shl nsw i64 %72, 16
  %75 = add nuw nsw i64 %74, %53
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #6
  store i8 -86, i8* %8, align 1
  %76 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %12, align 8
  %77 = load i8*, i8** %14, align 8
  %78 = call i64 %76(i8* %77, i8* %1, i8* nonnull %8, i64 1) #6
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %85

81:                                               ; preds = %71
  %82 = load i8, i8* %8, align 1
  %83 = zext i8 %82 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #6
  %84 = zext i8 %82 to i64
  br label %92

85:                                               ; preds = %71
  %86 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %87 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %86, align 8
  %88 = load i8*, i8** %14, align 8
  %89 = call i32 %87(i8* %88, i8* %1) #6
  %90 = icmp eq i32 %89, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #6
  %91 = sext i32 %73 to i64
  br i1 %90, label %92, label %179

92:                                               ; preds = %81, %85
  %93 = phi i64 [ %84, %81 ], [ %91, %85 ]
  %94 = phi i32 [ %83, %81 ], [ %73, %85 ]
  %95 = shl nsw i64 %93, 24
  %96 = add nuw nsw i64 %75, %95
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #6
  store i8 -86, i8* %7, align 1
  %97 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %12, align 8
  %98 = load i8*, i8** %14, align 8
  %99 = call i64 %97(i8* %98, i8* %1, i8* nonnull %7, i64 1) #6
  %100 = trunc i64 %99 to i32
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %106

102:                                              ; preds = %92
  %103 = load i8, i8* %7, align 1
  %104 = zext i8 %103 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #6
  %105 = zext i8 %103 to i64
  br label %113

106:                                              ; preds = %92
  %107 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %108 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %107, align 8
  %109 = load i8*, i8** %14, align 8
  %110 = call i32 %108(i8* %109, i8* %1) #6
  %111 = icmp eq i32 %110, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #6
  %112 = zext i32 %94 to i64
  br i1 %111, label %113, label %179

113:                                              ; preds = %102, %106
  %114 = phi i64 [ %105, %102 ], [ %112, %106 ]
  %115 = phi i32 [ %104, %102 ], [ %94, %106 ]
  %116 = shl nuw i64 %114, 32
  %117 = add nuw nsw i64 %96, %116
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #6
  store i8 -86, i8* %6, align 1
  %118 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %12, align 8
  %119 = load i8*, i8** %14, align 8
  %120 = call i64 %118(i8* %119, i8* %1, i8* nonnull %6, i64 1) #6
  %121 = trunc i64 %120 to i32
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %127

123:                                              ; preds = %113
  %124 = load i8, i8* %6, align 1
  %125 = zext i8 %124 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #6
  %126 = zext i8 %124 to i64
  br label %134

127:                                              ; preds = %113
  %128 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %129 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %128, align 8
  %130 = load i8*, i8** %14, align 8
  %131 = call i32 %129(i8* %130, i8* %1) #6
  %132 = icmp eq i32 %131, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #6
  %133 = zext i32 %115 to i64
  br i1 %132, label %134, label %179

134:                                              ; preds = %123, %127
  %135 = phi i64 [ %126, %123 ], [ %133, %127 ]
  %136 = phi i32 [ %125, %123 ], [ %115, %127 ]
  %137 = shl i64 %135, 40
  %138 = add nuw nsw i64 %117, %137
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #6
  store i8 -86, i8* %5, align 1
  %139 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %12, align 8
  %140 = load i8*, i8** %14, align 8
  %141 = call i64 %139(i8* %140, i8* %1, i8* nonnull %5, i64 1) #6
  %142 = trunc i64 %141 to i32
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %148

144:                                              ; preds = %134
  %145 = load i8, i8* %5, align 1
  %146 = zext i8 %145 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #6
  %147 = zext i8 %145 to i64
  br label %155

148:                                              ; preds = %134
  %149 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %150 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %149, align 8
  %151 = load i8*, i8** %14, align 8
  %152 = call i32 %150(i8* %151, i8* %1) #6
  %153 = icmp eq i32 %152, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #6
  %154 = zext i32 %136 to i64
  br i1 %153, label %155, label %179

155:                                              ; preds = %144, %148
  %156 = phi i64 [ %147, %144 ], [ %154, %148 ]
  %157 = phi i32 [ %146, %144 ], [ %136, %148 ]
  %158 = shl i64 %156, 48
  %159 = add nuw nsw i64 %138, %158
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #6
  store i8 -86, i8* %4, align 1
  %160 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %12, align 8
  %161 = load i8*, i8** %14, align 8
  %162 = call i64 %160(i8* %161, i8* %1, i8* nonnull %4, i64 1) #6
  %163 = trunc i64 %162 to i32
  %164 = icmp eq i32 %163, 1
  br i1 %164, label %165, label %168

165:                                              ; preds = %155
  %166 = load i8, i8* %4, align 1
  %167 = zext i8 %166 to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  br label %174

168:                                              ; preds = %155
  %169 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %0, i64 0, i32 0, i32 6
  %170 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %169, align 8
  %171 = load i8*, i8** %14, align 8
  %172 = call i32 %170(i8* %171, i8* %1) #6
  %173 = icmp eq i32 %172, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #6
  br i1 %173, label %174, label %179

174:                                              ; preds = %165, %168
  %175 = phi i32 [ %167, %165 ], [ %157, %168 ]
  %176 = zext i32 %175 to i64
  %177 = shl i64 %176, 56
  %178 = add nuw i64 %159, %177
  br label %179

179:                                              ; preds = %23, %43, %64, %85, %106, %127, %148, %168, %174
  %180 = phi i32 [ 0, %174 ], [ -1, %168 ], [ -1, %148 ], [ -1, %127 ], [ -1, %106 ], [ -1, %85 ], [ -1, %64 ], [ -1, %43 ], [ -1, %23 ]
  %181 = phi i64 [ %178, %174 ], [ 0, %168 ], [ 0, %148 ], [ 0, %127 ], [ 0, %106 ], [ 0, %85 ], [ 0, %64 ], [ 0, %43 ], [ 0, %23 ]
  store i64 %181, i64* %2, align 8
  ret i32 %180
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @zipOpen3(i8*, i32, i8**, %struct.zlib_filefunc64_32_def_s* readonly) local_unnamed_addr #0 {
  %5 = alloca %struct.zip64_internal, align 8
  %6 = bitcast %struct.zip64_internal* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 65952, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 65952, i1 false)
  %7 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 0
  %8 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 0, i32 2
  %9 = icmp eq %struct.zlib_filefunc64_32_def_s* %3, null
  %10 = bitcast i64 (i8*, i8*)** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  br i1 %9, label %11, label %13

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 0, i32 0
  call void @fill_fopen64_filefunc(%struct.zlib_filefunc64_def_s* nonnull %12) #6
  br label %15

13:                                               ; preds = %4
  %14 = bitcast %struct.zlib_filefunc64_32_def_s* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %14, i64 88, i1 false)
  br label %15

15:                                               ; preds = %13, %11
  %16 = icmp eq i32 %1, 0
  %17 = select i1 %16, i32 11, i32 7
  %18 = call i8* @call_zopen64(%struct.zlib_filefunc64_32_def_s* nonnull %7, i8* %0, i32 %17) #6
  %19 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 1
  store i8* %18, i8** %19, align 8
  %20 = icmp eq i8* %18, null
  br i1 %20, label %64, label %21

21:                                               ; preds = %15
  %22 = icmp eq i32 %1, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* nonnull %7, i8* nonnull %18, i64 0, i32 2) #6
  %25 = load i8*, i8** %19, align 8
  br label %26

26:                                               ; preds = %23, %21
  %27 = phi i8* [ %25, %23 ], [ %18, %21 ]
  %28 = call i64 @call_ztell64(%struct.zlib_filefunc64_32_def_s* nonnull %7, i8* %27) #6
  %29 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 5
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 4, i32 1
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 6
  %32 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 2
  %33 = bitcast %struct.linkedlist_data_s* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 20, i1 false)
  %34 = bitcast i64* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  %35 = call noalias i8* @malloc(i64 65952) #6
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %44

37:                                               ; preds = %26
  %38 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 0, i32 0, i32 5
  %39 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %38, align 8
  %40 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 0, i32 0, i32 7
  %41 = load i8*, i8** %40, align 8
  %42 = load i8*, i8** %19, align 8
  %43 = call i32 %39(i8* %41, i8* %42) #6
  br label %64

44:                                               ; preds = %26
  %45 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %5, i64 0, i32 8
  store i8* null, i8** %45, align 8
  %46 = icmp eq i32 %1, 2
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = call i32 @LoadCentralDirectoryRecord(%struct.zip64_internal* nonnull %5)
  br label %49

49:                                               ; preds = %47, %44
  %50 = phi i32 [ %48, %47 ], [ 0, %44 ]
  %51 = icmp eq i8** %2, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = bitcast i8** %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast i8** %2 to i64*
  store i64 %54, i64* %55, align 8
  br label %56

56:                                               ; preds = %49, %52
  %57 = icmp eq i32 %50, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %56
  %59 = load i8*, i8** %45, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @free(i8* nonnull %59) #6
  br label %62

62:                                               ; preds = %61, %58
  call void @free(i8* nonnull %35) #6
  br label %64

63:                                               ; preds = %56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %6, i64 65952, i1 false)
  br label %64

64:                                               ; preds = %15, %63, %62, %37
  %65 = phi i8* [ null, %37 ], [ null, %62 ], [ %35, %63 ], [ null, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 65952, i8* nonnull %6) #6
  ret i8* %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @fill_fopen64_filefunc(%struct.zlib_filefunc64_def_s*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @call_zopen64(%struct.zlib_filefunc64_32_def_s*, i8*, i32) local_unnamed_addr #2

declare i64 @call_ztell64(%struct.zlib_filefunc64_32_def_s*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @zipOpen2(i8*, i32, i8**, %struct.zlib_filefunc_def_s*) local_unnamed_addr #0 {
  %5 = alloca %struct.zlib_filefunc64_32_def_s, align 8
  %6 = icmp eq %struct.zlib_filefunc_def_s* %3, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = bitcast %struct.zlib_filefunc64_32_def_s* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 88, i1 false)
  call void @fill_zlib_filefunc64_32_def_from_filefunc32(%struct.zlib_filefunc64_32_def_s* nonnull %5, %struct.zlib_filefunc_def_s* nonnull %3) #6
  %9 = call i8* @zipOpen3(i8* %0, i32 %1, i8** %2, %struct.zlib_filefunc64_32_def_s* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #6
  br label %12

10:                                               ; preds = %4
  %11 = tail call i8* @zipOpen3(i8* %0, i32 %1, i8** %2, %struct.zlib_filefunc64_32_def_s* null)
  br label %12

12:                                               ; preds = %10, %7
  %13 = phi i8* [ %9, %7 ], [ %11, %10 ]
  ret i8* %13
}

declare void @fill_zlib_filefunc64_32_def_from_filefunc32(%struct.zlib_filefunc64_32_def_s*, %struct.zlib_filefunc_def_s*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @zipOpen2_64(i8*, i32, i8**, %struct.zlib_filefunc64_def_s* readonly) local_unnamed_addr #0 {
  %5 = alloca %struct.zlib_filefunc64_32_def_s, align 8
  %6 = icmp eq %struct.zlib_filefunc64_def_s* %3, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = bitcast %struct.zlib_filefunc64_32_def_s* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #6
  %9 = bitcast %struct.zlib_filefunc64_def_s* %3 to i8*
  %10 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %5, i64 0, i32 1
  %11 = bitcast i8* (i8*, i8*, i32)** %10 to i64*
  store i64 -6148914691236517206, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %9, i64 64, i1 false)
  %12 = getelementptr inbounds %struct.zlib_filefunc64_32_def_s, %struct.zlib_filefunc64_32_def_s* %5, i64 0, i32 2
  %13 = bitcast i64 (i8*, i8*)** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  %14 = call i8* @zipOpen3(i8* %0, i32 %1, i8** %2, %struct.zlib_filefunc64_32_def_s* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #6
  br label %17

15:                                               ; preds = %4
  %16 = tail call i8* @zipOpen3(i8* %0, i32 %1, i8** %2, %struct.zlib_filefunc64_32_def_s* null)
  br label %17

17:                                               ; preds = %15, %7
  %18 = phi i8* [ %14, %7 ], [ %16, %15 ]
  ret i8* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @zipOpen(i8*, i32) local_unnamed_addr #0 {
  %3 = tail call i8* @zipOpen3(i8* %0, i32 %1, i8** null, %struct.zlib_filefunc64_32_def_s* null)
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @zipOpen64(i8*, i32) local_unnamed_addr #0 {
  %3 = tail call i8* @zipOpen3(i8* %0, i32 %1, i8** null, %struct.zlib_filefunc64_32_def_s* null)
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Write_LocalFileHeader(%struct.zip64_internal*, i8*, i32, i8*) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = tail call i64 @strlen(i8* %1) #7
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  store i64 -6148914694032503984, i64* %21, align 8
  %27 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0
  %28 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 2
  %29 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %30 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  %31 = load i8*, i8** %30, align 8
  %32 = call i64 %29(i8* %31, i8* %25, i8* nonnull %26, i64 4) #6
  %33 = icmp eq i64 %32, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  br i1 %33, label %34, label %250

34:                                               ; preds = %4
  %35 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 4, i32 15
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  %38 = load i8*, i8** %24, align 8
  br i1 %37, label %44, label %39

39:                                               ; preds = %34
  %40 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #6
  store i64 -6148914691236560851, i64* %20, align 8
  %41 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %42 = load i8*, i8** %30, align 8
  %43 = call i64 %41(i8* %42, i8* %38, i8* nonnull %40, i64 2) #6
  br label %49

44:                                               ; preds = %34
  %45 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #6
  store i64 -6148914691236560876, i64* %19, align 8
  %46 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %47 = load i8*, i8** %30, align 8
  %48 = call i64 %46(i8* %47, i8* %38, i8* nonnull %45, i64 2) #6
  br label %49

49:                                               ; preds = %39, %44
  %50 = phi i8* [ %40, %39 ], [ %45, %44 ]
  %51 = phi i64 [ %43, %39 ], [ %48, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #6
  %52 = icmp eq i64 %51, 2
  br i1 %52, label %53, label %250

53:                                               ; preds = %49
  %54 = load i8*, i8** %24, align 8
  %55 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 4, i32 8
  %56 = load i64, i64* %55, align 8
  %57 = bitcast i64* %18 to [8 x i8]*
  %58 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #6
  store i64 -6148914691236517206, i64* %18, align 8
  %59 = trunc i64 %56 to i8
  %60 = bitcast i64* %18 to i8*
  store i8 %59, i8* %60, align 8
  %61 = lshr i64 %56, 8
  %62 = trunc i64 %61 to i8
  %63 = getelementptr inbounds [8 x i8], [8 x i8]* %57, i64 0, i64 1
  store i8 %62, i8* %63, align 1
  %64 = icmp ult i64 %56, 65536
  br i1 %64, label %67, label %65

65:                                               ; preds = %53
  %66 = bitcast i64* %18 to i16*
  store i16 -1, i16* %66, align 8
  br label %67

67:                                               ; preds = %53, %65
  %68 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %69 = load i8*, i8** %30, align 8
  %70 = call i64 %68(i8* %69, i8* %54, i8* nonnull %58, i64 2) #6
  %71 = icmp eq i64 %70, 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #6
  br i1 %71, label %72, label %250

72:                                               ; preds = %67
  %73 = load i8*, i8** %24, align 8
  %74 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 4, i32 9
  %75 = load i32, i32* %74, align 8
  %76 = bitcast i64* %17 to [8 x i8]*
  %77 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #6
  store i64 -6148914691236517206, i64* %17, align 8
  %78 = trunc i32 %75 to i8
  %79 = bitcast i64* %17 to i8*
  store i8 %78, i8* %79, align 8
  %80 = lshr i32 %75, 8
  %81 = trunc i32 %80 to i8
  %82 = getelementptr inbounds [8 x i8], [8 x i8]* %76, i64 0, i64 1
  store i8 %81, i8* %82, align 1
  %83 = icmp ult i32 %75, 65536
  br i1 %83, label %86, label %84

84:                                               ; preds = %72
  %85 = bitcast i64* %17 to i16*
  store i16 -1, i16* %85, align 8
  br label %86

86:                                               ; preds = %72, %84
  %87 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %88 = load i8*, i8** %30, align 8
  %89 = call i64 %87(i8* %88, i8* %73, i8* nonnull %77, i64 2) #6
  %90 = icmp eq i64 %89, 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #6
  br i1 %90, label %91, label %250

91:                                               ; preds = %86
  %92 = load i8*, i8** %24, align 8
  %93 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 4, i32 12
  %94 = load i64, i64* %93, align 8
  %95 = bitcast i64* %16 to [8 x i8]*
  %96 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #6
  store i64 -6148914691236517206, i64* %16, align 8
  %97 = trunc i64 %94 to i8
  %98 = bitcast i64* %16 to i8*
  store i8 %97, i8* %98, align 8
  %99 = lshr i64 %94, 8
  %100 = trunc i64 %99 to i8
  %101 = getelementptr inbounds [8 x i8], [8 x i8]* %95, i64 0, i64 1
  store i8 %100, i8* %101, align 1
  %102 = lshr i64 %94, 16
  %103 = trunc i64 %102 to i8
  %104 = getelementptr inbounds [8 x i8], [8 x i8]* %95, i64 0, i64 2
  store i8 %103, i8* %104, align 2
  %105 = lshr i64 %94, 24
  %106 = trunc i64 %105 to i8
  %107 = getelementptr inbounds [8 x i8], [8 x i8]* %95, i64 0, i64 3
  store i8 %106, i8* %107, align 1
  %108 = icmp ult i64 %94, 4294967296
  br i1 %108, label %111, label %109

109:                                              ; preds = %91
  %110 = bitcast i64* %16 to i32*
  store i32 -1, i32* %110, align 8
  br label %111

111:                                              ; preds = %91, %109
  %112 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %113 = load i8*, i8** %30, align 8
  %114 = call i64 %112(i8* %113, i8* %92, i8* nonnull %96, i64 4) #6
  %115 = icmp eq i64 %114, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #6
  br i1 %115, label %116, label %250

116:                                              ; preds = %111
  %117 = load i8*, i8** %24, align 8
  %118 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #6
  store i64 -6148914694099828736, i64* %15, align 8
  %119 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %120 = load i8*, i8** %30, align 8
  %121 = call i64 %119(i8* %120, i8* %117, i8* nonnull %118, i64 4) #6
  %122 = icmp eq i64 %121, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #6
  br i1 %122, label %123, label %250

123:                                              ; preds = %116
  %124 = load i32, i32* %35, align 4
  %125 = icmp eq i32 %124, 0
  %126 = load i8*, i8** %24, align 8
  br i1 %125, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #6
  store i64 -6148914689804861441, i64* %14, align 8
  %129 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %130 = load i8*, i8** %30, align 8
  %131 = call i64 %129(i8* %130, i8* %126, i8* nonnull %128, i64 4) #6
  br label %137

132:                                              ; preds = %123
  %133 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #6
  store i64 -6148914694099828736, i64* %13, align 8
  %134 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %135 = load i8*, i8** %30, align 8
  %136 = call i64 %134(i8* %135, i8* %126, i8* nonnull %133, i64 4) #6
  br label %137

137:                                              ; preds = %127, %132
  %138 = phi i8* [ %128, %127 ], [ %133, %132 ]
  %139 = phi i64 [ %131, %127 ], [ %136, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #6
  %140 = icmp eq i64 %139, 4
  br i1 %140, label %141, label %250

141:                                              ; preds = %137
  %142 = load i32, i32* %35, align 4
  %143 = icmp eq i32 %142, 0
  %144 = load i8*, i8** %24, align 8
  br i1 %143, label %150, label %145

145:                                              ; preds = %141
  %146 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #6
  store i64 -6148914689804861441, i64* %12, align 8
  %147 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %148 = load i8*, i8** %30, align 8
  %149 = call i64 %147(i8* %148, i8* %144, i8* nonnull %146, i64 4) #6
  br label %155

150:                                              ; preds = %141
  %151 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #6
  store i64 -6148914694099828736, i64* %11, align 8
  %152 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %153 = load i8*, i8** %30, align 8
  %154 = call i64 %152(i8* %153, i8* %144, i8* nonnull %151, i64 4) #6
  br label %155

155:                                              ; preds = %145, %150
  %156 = phi i8* [ %146, %145 ], [ %151, %150 ]
  %157 = phi i64 [ %149, %145 ], [ %154, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #6
  %158 = icmp eq i64 %157, 4
  br i1 %158, label %159, label %250

159:                                              ; preds = %155
  %160 = load i8*, i8** %24, align 8
  %161 = and i64 %22, 4294967295
  %162 = bitcast i64* %10 to [8 x i8]*
  %163 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #6
  store i64 -6148914691236517206, i64* %10, align 8
  %164 = trunc i64 %22 to i8
  %165 = bitcast i64* %10 to i8*
  store i8 %164, i8* %165, align 8
  %166 = lshr i64 %22, 8
  %167 = trunc i64 %166 to i8
  %168 = getelementptr inbounds [8 x i8], [8 x i8]* %162, i64 0, i64 1
  store i8 %167, i8* %168, align 1
  %169 = and i64 %22, 4294901760
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %173, label %171

171:                                              ; preds = %159
  %172 = bitcast i64* %10 to i16*
  store i16 -1, i16* %172, align 8
  br label %173

173:                                              ; preds = %159, %171
  %174 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %175 = load i8*, i8** %30, align 8
  %176 = call i64 %174(i8* %175, i8* %160, i8* nonnull %163, i64 2) #6
  %177 = icmp eq i64 %176, 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #6
  br i1 %177, label %178, label %250

178:                                              ; preds = %173
  %179 = load i32, i32* %35, align 4
  %180 = icmp eq i32 %179, 0
  %181 = add i32 %2, 20
  %182 = select i1 %180, i32 %2, i32 %181
  %183 = load i8*, i8** %24, align 8
  %184 = bitcast i64* %9 to [8 x i8]*
  %185 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #6
  store i64 -6148914691236517206, i64* %9, align 8
  %186 = trunc i32 %182 to i8
  %187 = bitcast i64* %9 to i8*
  store i8 %186, i8* %187, align 8
  %188 = lshr i32 %182, 8
  %189 = trunc i32 %188 to i8
  %190 = getelementptr inbounds [8 x i8], [8 x i8]* %184, i64 0, i64 1
  store i8 %189, i8* %190, align 1
  %191 = icmp ult i32 %182, 65536
  br i1 %191, label %194, label %192

192:                                              ; preds = %178
  %193 = bitcast i64* %9 to i16*
  store i16 -1, i16* %193, align 8
  br label %194

194:                                              ; preds = %178, %192
  %195 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %196 = load i8*, i8** %30, align 8
  %197 = call i64 %195(i8* %196, i8* %183, i8* nonnull %185, i64 2) #6
  %198 = icmp ne i64 %197, 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #6
  %199 = xor i1 %198, true
  %200 = icmp ne i32 %23, 0
  %201 = and i1 %200, %199
  br i1 %201, label %202, label %208

202:                                              ; preds = %194
  %203 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %204 = load i8*, i8** %30, align 8
  %205 = load i8*, i8** %24, align 8
  %206 = call i64 %203(i8* %204, i8* %205, i8* %1, i64 %161) #6
  %207 = icmp ne i64 %206, %161
  br label %208

208:                                              ; preds = %202, %194
  %209 = phi i1 [ %198, %194 ], [ %207, %202 ]
  %210 = xor i1 %209, true
  %211 = icmp ne i32 %2, 0
  %212 = and i1 %211, %210
  br i1 %212, label %213, label %220

213:                                              ; preds = %208
  %214 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %215 = load i8*, i8** %30, align 8
  %216 = load i8*, i8** %24, align 8
  %217 = zext i32 %2 to i64
  %218 = call i64 %214(i8* %215, i8* %216, i8* %3, i64 %217) #6
  %219 = icmp eq i64 %218, %217
  br i1 %219, label %221, label %250

220:                                              ; preds = %208
  br i1 %209, label %250, label %221

221:                                              ; preds = %220, %213
  %222 = load i32, i32* %35, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %250, label %224

224:                                              ; preds = %221
  %225 = load i8*, i8** %24, align 8
  %226 = call i64 @call_ztell64(%struct.zlib_filefunc64_32_def_s* %27, i8* %225) #6
  %227 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 4, i32 16
  store i64 %226, i64* %227, align 8
  %228 = load i8*, i8** %24, align 8
  %229 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #6
  store i64 -6148914691236560895, i64* %8, align 8
  %230 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %231 = load i8*, i8** %30, align 8
  %232 = call i64 %230(i8* %231, i8* %228, i8* nonnull %229, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #6
  %233 = load i8*, i8** %24, align 8
  %234 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #6
  store i64 -6148914691236560880, i64* %7, align 8
  %235 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %236 = load i8*, i8** %30, align 8
  %237 = call i64 %235(i8* %236, i8* %233, i8* nonnull %234, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #6
  %238 = load i8*, i8** %24, align 8
  %239 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %239) #6
  store i64 0, i64* %6, align 8
  %240 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %241 = load i8*, i8** %30, align 8
  %242 = call i64 %240(i8* %241, i8* %238, i8* nonnull %239, i64 8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %239) #6
  %243 = load i8*, i8** %24, align 8
  %244 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #6
  store i64 0, i64* %5, align 8
  %245 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %28, align 8
  %246 = load i8*, i8** %30, align 8
  %247 = call i64 %245(i8* %246, i8* %243, i8* nonnull %244, i64 8) #6
  %248 = icmp ne i64 %247, 8
  %249 = sext i1 %248 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #6
  br label %250

250:                                              ; preds = %155, %137, %49, %220, %173, %116, %111, %86, %67, %4, %213, %221, %224
  %251 = phi i32 [ %249, %224 ], [ 0, %221 ], [ -1, %220 ], [ -1, %213 ], [ -1, %173 ], [ -1, %155 ], [ -1, %137 ], [ -1, %116 ], [ -1, %111 ], [ -1, %86 ], [ -1, %67 ], [ -1, %49 ], [ -1, %4 ]
  ret i32 %251
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipOpenNewFileInZip4_64(i8*, i8*, %struct.zip_fileinfo* readonly, i8*, i32, i8* nocapture readonly, i32, i8* readonly, i32, i32, i32, i32, i32, i32, i8* readonly, i64, i64, i64, i32) local_unnamed_addr #0 {
  %20 = alloca [10 x i8], align 1
  %21 = alloca [12 x i8], align 1
  %22 = icmp ne i8* %0, null
  %23 = and i32 %8, -9
  %24 = icmp eq i32 %23, 0
  %25 = and i1 %22, %24
  br i1 %25, label %26, label %760

26:                                               ; preds = %19
  %27 = bitcast i8* %0 to %struct.zip64_internal*
  %28 = getelementptr inbounds i8, i8* %0, i64 112
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %26
  %33 = tail call i32 @zipCloseFileInZipRaw64(i8* nonnull %0, i64 0, i64 0) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %760

35:                                               ; preds = %32, %26
  %36 = icmp eq i8* %1, null
  %37 = select i1 %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8* %1
  %38 = icmp eq i8* %7, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = tail call i64 @strlen(i8* nonnull %7) #7
  %41 = trunc i64 %40 to i32
  br label %42

42:                                               ; preds = %35, %39
  %43 = phi i32 [ %41, %39 ], [ 0, %35 ]
  %44 = tail call i64 @strlen(i8* %37) #7
  %45 = trunc i64 %44 to i32
  %46 = icmp eq %struct.zip_fileinfo* %2, null
  br i1 %46, label %89, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %2, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %89

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %2, i64 0, i32 0, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = icmp ugt i32 %53, 1979
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = add nsw i64 %54, -1980
  br label %62

58:                                               ; preds = %51
  %59 = icmp ugt i32 %53, 79
  %60 = add nsw i64 %54, -80
  %61 = select i1 %59, i64 %60, i64 %54
  br label %62

62:                                               ; preds = %56, %58
  %63 = phi i64 [ %57, %56 ], [ %61, %58 ]
  %64 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %2, i64 0, i32 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %2, i64 0, i32 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = shl i32 %67, 5
  %69 = add i32 %65, 32
  %70 = add i32 %69, %68
  %71 = zext i32 %70 to i64
  %72 = shl nsw i64 %63, 9
  %73 = add nsw i64 %72, %71
  %74 = shl nsw i64 %73, 16
  %75 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %2, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = lshr i32 %76, 1
  %78 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %2, i64 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = shl i32 %79, 5
  %81 = add i32 %80, %77
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %2, i64 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 11
  %87 = add nuw nsw i64 %86, %82
  %88 = or i64 %87, %74
  br label %89

89:                                               ; preds = %47, %42, %62
  %90 = phi i64 [ %88, %62 ], [ 0, %42 ], [ %49, %47 ]
  %91 = getelementptr inbounds i8, i8* %0, i64 65832
  %92 = bitcast i8* %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = getelementptr inbounds i8, i8* %0, i64 120
  %94 = getelementptr inbounds i8, i8* %0, i64 280
  %95 = bitcast i8* %94 to i64*
  %96 = or i32 %9, 1
  %97 = icmp eq i32 %96, 9
  %98 = or i64 %17, 2
  %99 = select i1 %97, i64 %98, i64 %17
  store i64 %99, i64* %95, align 8
  switch i32 %9, label %106 [
    i32 2, label %100
    i32 1, label %102
  ]

100:                                              ; preds = %89
  %101 = or i64 %99, 4
  br label %104

102:                                              ; preds = %89
  %103 = or i64 %99, 6
  br label %104

104:                                              ; preds = %102, %100
  %105 = phi i64 [ %101, %100 ], [ %103, %102 ]
  store i64 %105, i64* %95, align 8
  br label %106

106:                                              ; preds = %104, %89
  %107 = phi i64 [ %99, %89 ], [ %105, %104 ]
  %108 = icmp ne i8* %14, null
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = or i64 %107, 1
  store i64 %110, i64* %95, align 8
  br label %111

111:                                              ; preds = %106, %109
  %112 = getelementptr inbounds i8, i8* %0, i64 65840
  %113 = bitcast i8* %112 to i64*
  store i64 0, i64* %113, align 8
  %114 = getelementptr inbounds i8, i8* %0, i64 288
  %115 = bitcast i8* %114 to i32*
  store i32 %8, i32* %115, align 8
  %116 = getelementptr inbounds i8, i8* %0, i64 65848
  %117 = bitcast i8* %116 to i32*
  store i32 0, i32* %117, align 8
  %118 = getelementptr inbounds i8, i8* %0, i64 232
  %119 = bitcast i8* %118 to i32*
  store i32 0, i32* %119, align 8
  %120 = getelementptr inbounds i8, i8* %0, i64 236
  %121 = bitcast i8* %120 to i32*
  store i32 0, i32* %121, align 4
  %122 = getelementptr inbounds i8, i8* %0, i64 292
  %123 = bitcast i8* %122 to i32*
  store i32 %10, i32* %123, align 4
  %124 = bitcast i8* %0 to %struct.zlib_filefunc64_32_def_s*
  %125 = getelementptr inbounds i8, i8* %0, i64 88
  %126 = bitcast i8* %125 to i8**
  %127 = load i8*, i8** %126, align 8
  %128 = tail call i64 @call_ztell64(%struct.zlib_filefunc64_32_def_s* nonnull %124, i8* %127) #6
  %129 = getelementptr inbounds i8, i8* %0, i64 240
  %130 = bitcast i8* %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = add i32 %6, 46
  %132 = add i32 %131, %43
  %133 = add i32 %132, %45
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %0, i64 264
  %136 = bitcast i8* %135 to i64*
  store i64 %134, i64* %136, align 8
  %137 = getelementptr inbounds i8, i8* %0, i64 272
  %138 = bitcast i8* %137 to i64*
  store i64 32, i64* %138, align 8
  %139 = add nuw nsw i64 %134, 32
  %140 = tail call noalias i8* @malloc(i64 %139) #6
  %141 = getelementptr inbounds i8, i8* %0, i64 248
  %142 = bitcast i8* %141 to i8**
  store i8* %140, i8** %142, align 8
  %143 = zext i32 %6 to i64
  %144 = getelementptr inbounds i8, i8* %0, i64 256
  %145 = bitcast i8* %144 to i64*
  store i64 %143, i64* %145, align 8
  store i8 80, i8* %140, align 1
  %146 = getelementptr inbounds i8, i8* %140, i64 1
  store i8 75, i8* %146, align 1
  %147 = getelementptr inbounds i8, i8* %140, i64 2
  store i8 1, i8* %147, align 1
  %148 = getelementptr inbounds i8, i8* %140, i64 3
  store i8 2, i8* %148, align 1
  %149 = getelementptr inbounds i8, i8* %140, i64 4
  %150 = trunc i64 %16 to i8
  store i8 %150, i8* %149, align 1
  %151 = lshr i64 %16, 8
  %152 = trunc i64 %151 to i8
  %153 = getelementptr inbounds i8, i8* %140, i64 5
  store i8 %152, i8* %153, align 1
  %154 = icmp ult i64 %16, 65536
  br i1 %154, label %157, label %155

155:                                              ; preds = %111
  %156 = bitcast i8* %149 to i16*
  store i16 -1, i16* %156, align 1
  br label %157

157:                                              ; preds = %155, %111
  %158 = getelementptr inbounds i8, i8* %140, i64 6
  store i8 20, i8* %158, align 1
  %159 = getelementptr inbounds i8, i8* %140, i64 7
  store i8 0, i8* %159, align 1
  %160 = getelementptr inbounds i8, i8* %140, i64 8
  %161 = load i64, i64* %95, align 8
  %162 = trunc i64 %161 to i8
  store i8 %162, i8* %160, align 1
  %163 = lshr i64 %161, 8
  %164 = trunc i64 %163 to i8
  %165 = getelementptr inbounds i8, i8* %140, i64 9
  store i8 %164, i8* %165, align 1
  %166 = icmp ult i64 %161, 65536
  br i1 %166, label %169, label %167

167:                                              ; preds = %157
  %168 = bitcast i8* %160 to i16*
  store i16 -1, i16* %168, align 1
  br label %169

169:                                              ; preds = %157, %167
  %170 = getelementptr inbounds i8, i8* %140, i64 10
  %171 = load i32, i32* %115, align 8
  %172 = trunc i32 %171 to i8
  store i8 %172, i8* %170, align 1
  %173 = lshr i32 %171, 8
  %174 = trunc i32 %173 to i8
  %175 = getelementptr inbounds i8, i8* %140, i64 11
  store i8 %174, i8* %175, align 1
  %176 = icmp ult i32 %171, 65536
  br i1 %176, label %179, label %177

177:                                              ; preds = %169
  %178 = bitcast i8* %170 to i16*
  store i16 -1, i16* %178, align 1
  br label %179

179:                                              ; preds = %169, %177
  %180 = getelementptr inbounds i8, i8* %140, i64 12
  %181 = getelementptr inbounds i8, i8* %0, i64 65832
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = trunc i64 %183 to i8
  store i8 %184, i8* %180, align 1
  %185 = lshr i64 %183, 8
  %186 = trunc i64 %185 to i8
  %187 = getelementptr inbounds i8, i8* %140, i64 13
  store i8 %186, i8* %187, align 1
  %188 = lshr i64 %183, 16
  %189 = trunc i64 %188 to i8
  %190 = getelementptr inbounds i8, i8* %140, i64 14
  store i8 %189, i8* %190, align 1
  %191 = lshr i64 %183, 24
  %192 = trunc i64 %191 to i8
  %193 = getelementptr inbounds i8, i8* %140, i64 15
  store i8 %192, i8* %193, align 1
  %194 = icmp ult i64 %183, 4294967296
  br i1 %194, label %197, label %195

195:                                              ; preds = %179
  %196 = bitcast i8* %180 to i32*
  store i32 -1, i32* %196, align 1
  br label %197

197:                                              ; preds = %195, %179
  %198 = getelementptr inbounds i8, i8* %140, i64 16
  store i8 0, i8* %198, align 1
  %199 = getelementptr inbounds i8, i8* %140, i64 17
  store i8 0, i8* %199, align 1
  %200 = getelementptr inbounds i8, i8* %140, i64 18
  store i8 0, i8* %200, align 1
  %201 = getelementptr inbounds i8, i8* %140, i64 19
  store i8 0, i8* %201, align 1
  %202 = getelementptr inbounds i8, i8* %140, i64 20
  store i8 0, i8* %202, align 1
  %203 = getelementptr inbounds i8, i8* %140, i64 21
  store i8 0, i8* %203, align 1
  %204 = getelementptr inbounds i8, i8* %140, i64 22
  store i8 0, i8* %204, align 1
  %205 = getelementptr inbounds i8, i8* %140, i64 23
  store i8 0, i8* %205, align 1
  %206 = getelementptr inbounds i8, i8* %140, i64 24
  store i8 0, i8* %206, align 1
  %207 = getelementptr inbounds i8, i8* %140, i64 25
  store i8 0, i8* %207, align 1
  %208 = getelementptr inbounds i8, i8* %140, i64 26
  store i8 0, i8* %208, align 1
  %209 = getelementptr inbounds i8, i8* %140, i64 27
  store i8 0, i8* %209, align 1
  %210 = getelementptr inbounds i8, i8* %140, i64 28
  %211 = and i64 %44, 4294967295
  %212 = trunc i64 %44 to i8
  store i8 %212, i8* %210, align 1
  %213 = lshr i64 %44, 8
  %214 = trunc i64 %213 to i8
  %215 = getelementptr inbounds i8, i8* %140, i64 29
  store i8 %214, i8* %215, align 1
  %216 = and i64 %44, 4294901760
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %197
  %219 = bitcast i8* %210 to i16*
  store i16 -1, i16* %219, align 1
  br label %220

220:                                              ; preds = %197, %218
  %221 = getelementptr inbounds i8, i8* %140, i64 30
  %222 = trunc i32 %6 to i8
  store i8 %222, i8* %221, align 1
  %223 = lshr i32 %6, 8
  %224 = trunc i32 %223 to i8
  %225 = getelementptr inbounds i8, i8* %140, i64 31
  store i8 %224, i8* %225, align 1
  %226 = and i64 %143, 4294901760
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %230, label %228

228:                                              ; preds = %220
  %229 = bitcast i8* %221 to i16*
  store i16 -1, i16* %229, align 1
  br label %230

230:                                              ; preds = %220, %228
  %231 = getelementptr inbounds i8, i8* %140, i64 32
  %232 = zext i32 %43 to i64
  %233 = trunc i32 %43 to i8
  store i8 %233, i8* %231, align 1
  %234 = lshr i32 %43, 8
  %235 = trunc i32 %234 to i8
  %236 = getelementptr inbounds i8, i8* %140, i64 33
  store i8 %235, i8* %236, align 1
  %237 = and i64 %232, 4294901760
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %241, label %239

239:                                              ; preds = %230
  %240 = bitcast i8* %231 to i16*
  store i16 -1, i16* %240, align 1
  br label %241

241:                                              ; preds = %239, %230
  %242 = getelementptr inbounds i8, i8* %140, i64 34
  store i8 0, i8* %242, align 1
  %243 = getelementptr inbounds i8, i8* %140, i64 35
  store i8 0, i8* %243, align 1
  %244 = getelementptr inbounds i8, i8* %140, i64 36
  br i1 %46, label %255, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %2, i64 0, i32 2
  %247 = load i64, i64* %246, align 8
  %248 = trunc i64 %247 to i8
  store i8 %248, i8* %244, align 1
  %249 = lshr i64 %247, 8
  %250 = trunc i64 %249 to i8
  %251 = getelementptr inbounds i8, i8* %140, i64 37
  store i8 %250, i8* %251, align 1
  %252 = icmp ult i64 %247, 65536
  br i1 %252, label %261, label %253

253:                                              ; preds = %245
  %254 = bitcast i8* %244 to i16*
  store i16 -1, i16* %254, align 1
  br label %261

255:                                              ; preds = %241
  store i8 0, i8* %244, align 1
  %256 = getelementptr inbounds i8, i8* %140, i64 37
  store i8 0, i8* %256, align 1
  %257 = getelementptr inbounds i8, i8* %140, i64 38
  store i8 0, i8* %257, align 1
  %258 = getelementptr inbounds i8, i8* %140, i64 39
  store i8 0, i8* %258, align 1
  %259 = getelementptr inbounds i8, i8* %140, i64 40
  store i8 0, i8* %259, align 1
  %260 = getelementptr inbounds i8, i8* %140, i64 41
  store i8 0, i8* %260, align 1
  br label %278

261:                                              ; preds = %245, %253
  %262 = getelementptr inbounds i8, i8* %140, i64 38
  %263 = getelementptr inbounds %struct.zip_fileinfo, %struct.zip_fileinfo* %2, i64 0, i32 3
  %264 = load i64, i64* %263, align 8
  %265 = trunc i64 %264 to i8
  store i8 %265, i8* %262, align 1
  %266 = lshr i64 %264, 8
  %267 = trunc i64 %266 to i8
  %268 = getelementptr inbounds i8, i8* %140, i64 39
  store i8 %267, i8* %268, align 1
  %269 = lshr i64 %264, 16
  %270 = trunc i64 %269 to i8
  %271 = getelementptr inbounds i8, i8* %140, i64 40
  store i8 %270, i8* %271, align 1
  %272 = lshr i64 %264, 24
  %273 = trunc i64 %272 to i8
  %274 = getelementptr inbounds i8, i8* %140, i64 41
  store i8 %273, i8* %274, align 1
  %275 = icmp ult i64 %264, 4294967296
  br i1 %275, label %278, label %276

276:                                              ; preds = %261
  %277 = bitcast i8* %262 to i32*
  store i32 -1, i32* %277, align 1
  br label %278

278:                                              ; preds = %255, %261, %276
  %279 = icmp ugt i64 %128, 4294967294
  %280 = getelementptr inbounds i8, i8* %140, i64 42
  br i1 %279, label %281, label %285

281:                                              ; preds = %278
  store i8 -1, i8* %280, align 1
  %282 = getelementptr inbounds i8, i8* %140, i64 43
  store i8 -1, i8* %282, align 1
  %283 = getelementptr inbounds i8, i8* %140, i64 44
  store i8 -1, i8* %283, align 1
  %284 = getelementptr inbounds i8, i8* %140, i64 45
  store i8 -1, i8* %284, align 1
  br label %303

285:                                              ; preds = %278
  %286 = getelementptr inbounds i8, i8* %0, i64 65928
  %287 = bitcast i8* %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = sub i64 %128, %288
  %290 = trunc i64 %289 to i8
  store i8 %290, i8* %280, align 1
  %291 = lshr i64 %289, 8
  %292 = trunc i64 %291 to i8
  %293 = getelementptr inbounds i8, i8* %140, i64 43
  store i8 %292, i8* %293, align 1
  %294 = lshr i64 %289, 16
  %295 = trunc i64 %294 to i8
  %296 = getelementptr inbounds i8, i8* %140, i64 44
  store i8 %295, i8* %296, align 1
  %297 = lshr i64 %289, 24
  %298 = trunc i64 %297 to i8
  %299 = getelementptr inbounds i8, i8* %140, i64 45
  store i8 %298, i8* %299, align 1
  %300 = icmp ult i64 %289, 4294967296
  br i1 %300, label %303, label %301

301:                                              ; preds = %285
  %302 = bitcast i8* %280 to i32*
  store i32 -1, i32* %302, align 1
  br label %303

303:                                              ; preds = %281, %285, %301
  %304 = icmp eq i32 %45, 0
  br i1 %304, label %331, label %305

305:                                              ; preds = %303
  %306 = and i64 %44, 4294967295
  %307 = load i8, i8* %37, align 1
  %308 = getelementptr inbounds i8, i8* %140, i64 46
  store i8 %307, i8* %308, align 1
  %309 = icmp eq i64 %306, 1
  br i1 %309, label %331, label %310

310:                                              ; preds = %305
  %311 = add nsw i64 %211, -1
  %312 = add nsw i64 %211, -2
  %313 = and i64 %311, 3
  %314 = icmp ult i64 %312, 3
  br i1 %314, label %317, label %315

315:                                              ; preds = %310
  %316 = sub nsw i64 %311, %313
  br label %339

317:                                              ; preds = %339, %310
  %318 = phi i64 [ 1, %310 ], [ %365, %339 ]
  %319 = icmp eq i64 %313, 0
  br i1 %319, label %331, label %320

320:                                              ; preds = %317, %320
  %321 = phi i64 [ %328, %320 ], [ %318, %317 ]
  %322 = phi i64 [ %329, %320 ], [ %313, %317 ]
  %323 = load i8*, i8** %142, align 8
  %324 = getelementptr inbounds i8, i8* %37, i64 %321
  %325 = load i8, i8* %324, align 1
  %326 = getelementptr inbounds i8, i8* %323, i64 46
  %327 = getelementptr inbounds i8, i8* %326, i64 %321
  store i8 %325, i8* %327, align 1
  %328 = add nuw nsw i64 %321, 1
  %329 = add i64 %322, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %320, !llvm.loop !10

331:                                              ; preds = %317, %320, %305, %303
  %332 = icmp eq i32 %6, 0
  br i1 %332, label %383, label %333

333:                                              ; preds = %331
  %334 = add nsw i64 %143, -1
  %335 = and i64 %143, 3
  %336 = icmp ult i64 %334, 3
  br i1 %336, label %368, label %337

337:                                              ; preds = %333
  %338 = sub nsw i64 %143, %335
  br label %391

339:                                              ; preds = %339, %315
  %340 = phi i64 [ 1, %315 ], [ %365, %339 ]
  %341 = phi i64 [ %316, %315 ], [ %366, %339 ]
  %342 = load i8*, i8** %142, align 8
  %343 = getelementptr inbounds i8, i8* %37, i64 %340
  %344 = load i8, i8* %343, align 1
  %345 = getelementptr inbounds i8, i8* %342, i64 46
  %346 = getelementptr inbounds i8, i8* %345, i64 %340
  store i8 %344, i8* %346, align 1
  %347 = add nuw nsw i64 %340, 1
  %348 = load i8*, i8** %142, align 8
  %349 = getelementptr inbounds i8, i8* %37, i64 %347
  %350 = load i8, i8* %349, align 1
  %351 = getelementptr inbounds i8, i8* %348, i64 46
  %352 = getelementptr inbounds i8, i8* %351, i64 %347
  store i8 %350, i8* %352, align 1
  %353 = add nuw nsw i64 %340, 2
  %354 = load i8*, i8** %142, align 8
  %355 = getelementptr inbounds i8, i8* %37, i64 %353
  %356 = load i8, i8* %355, align 1
  %357 = getelementptr inbounds i8, i8* %354, i64 46
  %358 = getelementptr inbounds i8, i8* %357, i64 %353
  store i8 %356, i8* %358, align 1
  %359 = add nuw nsw i64 %340, 3
  %360 = load i8*, i8** %142, align 8
  %361 = getelementptr inbounds i8, i8* %37, i64 %359
  %362 = load i8, i8* %361, align 1
  %363 = getelementptr inbounds i8, i8* %360, i64 46
  %364 = getelementptr inbounds i8, i8* %363, i64 %359
  store i8 %362, i8* %364, align 1
  %365 = add nuw nsw i64 %340, 4
  %366 = add i64 %341, -4
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %317, label %339

368:                                              ; preds = %391, %333
  %369 = phi i64 [ 0, %333 ], [ %421, %391 ]
  %370 = icmp eq i64 %335, 0
  br i1 %370, label %383, label %371

371:                                              ; preds = %368, %371
  %372 = phi i64 [ %380, %371 ], [ %369, %368 ]
  %373 = phi i64 [ %381, %371 ], [ %335, %368 ]
  %374 = getelementptr inbounds i8, i8* %5, i64 %372
  %375 = load i8, i8* %374, align 1
  %376 = load i8*, i8** %142, align 8
  %377 = getelementptr inbounds i8, i8* %376, i64 46
  %378 = getelementptr inbounds i8, i8* %377, i64 %211
  %379 = getelementptr inbounds i8, i8* %378, i64 %372
  store i8 %375, i8* %379, align 1
  %380 = add nuw nsw i64 %372, 1
  %381 = add i64 %373, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %371, !llvm.loop !12

383:                                              ; preds = %368, %371, %331
  %384 = icmp eq i32 %43, 0
  br i1 %384, label %477, label %385

385:                                              ; preds = %383
  %386 = add nsw i64 %232, -1
  %387 = and i64 %232, 3
  %388 = icmp ult i64 %386, 3
  br i1 %388, label %461, label %389

389:                                              ; preds = %385
  %390 = sub nsw i64 %232, %387
  br label %424

391:                                              ; preds = %391, %337
  %392 = phi i64 [ 0, %337 ], [ %421, %391 ]
  %393 = phi i64 [ %338, %337 ], [ %422, %391 ]
  %394 = getelementptr inbounds i8, i8* %5, i64 %392
  %395 = load i8, i8* %394, align 1
  %396 = load i8*, i8** %142, align 8
  %397 = getelementptr inbounds i8, i8* %396, i64 46
  %398 = getelementptr inbounds i8, i8* %397, i64 %211
  %399 = getelementptr inbounds i8, i8* %398, i64 %392
  store i8 %395, i8* %399, align 1
  %400 = or i64 %392, 1
  %401 = getelementptr inbounds i8, i8* %5, i64 %400
  %402 = load i8, i8* %401, align 1
  %403 = load i8*, i8** %142, align 8
  %404 = getelementptr inbounds i8, i8* %403, i64 46
  %405 = getelementptr inbounds i8, i8* %404, i64 %211
  %406 = getelementptr inbounds i8, i8* %405, i64 %400
  store i8 %402, i8* %406, align 1
  %407 = or i64 %392, 2
  %408 = getelementptr inbounds i8, i8* %5, i64 %407
  %409 = load i8, i8* %408, align 1
  %410 = load i8*, i8** %142, align 8
  %411 = getelementptr inbounds i8, i8* %410, i64 46
  %412 = getelementptr inbounds i8, i8* %411, i64 %211
  %413 = getelementptr inbounds i8, i8* %412, i64 %407
  store i8 %409, i8* %413, align 1
  %414 = or i64 %392, 3
  %415 = getelementptr inbounds i8, i8* %5, i64 %414
  %416 = load i8, i8* %415, align 1
  %417 = load i8*, i8** %142, align 8
  %418 = getelementptr inbounds i8, i8* %417, i64 46
  %419 = getelementptr inbounds i8, i8* %418, i64 %211
  %420 = getelementptr inbounds i8, i8* %419, i64 %414
  store i8 %416, i8* %420, align 1
  %421 = add nuw nsw i64 %392, 4
  %422 = add i64 %393, -4
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %368, label %391

424:                                              ; preds = %424, %389
  %425 = phi i64 [ 0, %389 ], [ %458, %424 ]
  %426 = phi i64 [ %390, %389 ], [ %459, %424 ]
  %427 = getelementptr inbounds i8, i8* %7, i64 %425
  %428 = load i8, i8* %427, align 1
  %429 = load i8*, i8** %142, align 8
  %430 = getelementptr inbounds i8, i8* %429, i64 46
  %431 = getelementptr inbounds i8, i8* %430, i64 %211
  %432 = getelementptr inbounds i8, i8* %431, i64 %143
  %433 = getelementptr inbounds i8, i8* %432, i64 %425
  store i8 %428, i8* %433, align 1
  %434 = or i64 %425, 1
  %435 = getelementptr inbounds i8, i8* %7, i64 %434
  %436 = load i8, i8* %435, align 1
  %437 = load i8*, i8** %142, align 8
  %438 = getelementptr inbounds i8, i8* %437, i64 46
  %439 = getelementptr inbounds i8, i8* %438, i64 %211
  %440 = getelementptr inbounds i8, i8* %439, i64 %143
  %441 = getelementptr inbounds i8, i8* %440, i64 %434
  store i8 %436, i8* %441, align 1
  %442 = or i64 %425, 2
  %443 = getelementptr inbounds i8, i8* %7, i64 %442
  %444 = load i8, i8* %443, align 1
  %445 = load i8*, i8** %142, align 8
  %446 = getelementptr inbounds i8, i8* %445, i64 46
  %447 = getelementptr inbounds i8, i8* %446, i64 %211
  %448 = getelementptr inbounds i8, i8* %447, i64 %143
  %449 = getelementptr inbounds i8, i8* %448, i64 %442
  store i8 %444, i8* %449, align 1
  %450 = or i64 %425, 3
  %451 = getelementptr inbounds i8, i8* %7, i64 %450
  %452 = load i8, i8* %451, align 1
  %453 = load i8*, i8** %142, align 8
  %454 = getelementptr inbounds i8, i8* %453, i64 46
  %455 = getelementptr inbounds i8, i8* %454, i64 %211
  %456 = getelementptr inbounds i8, i8* %455, i64 %143
  %457 = getelementptr inbounds i8, i8* %456, i64 %450
  store i8 %452, i8* %457, align 1
  %458 = add nuw nsw i64 %425, 4
  %459 = add i64 %426, -4
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %461, label %424

461:                                              ; preds = %424, %385
  %462 = phi i64 [ 0, %385 ], [ %458, %424 ]
  %463 = icmp eq i64 %387, 0
  br i1 %463, label %477, label %464

464:                                              ; preds = %461, %464
  %465 = phi i64 [ %474, %464 ], [ %462, %461 ]
  %466 = phi i64 [ %475, %464 ], [ %387, %461 ]
  %467 = getelementptr inbounds i8, i8* %7, i64 %465
  %468 = load i8, i8* %467, align 1
  %469 = load i8*, i8** %142, align 8
  %470 = getelementptr inbounds i8, i8* %469, i64 46
  %471 = getelementptr inbounds i8, i8* %470, i64 %211
  %472 = getelementptr inbounds i8, i8* %471, i64 %143
  %473 = getelementptr inbounds i8, i8* %472, i64 %465
  store i8 %468, i8* %473, align 1
  %474 = add nuw nsw i64 %465, 1
  %475 = add i64 %466, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %464, !llvm.loop !13

477:                                              ; preds = %461, %464, %383
  %478 = load i8*, i8** %142, align 8
  %479 = icmp eq i8* %478, null
  br i1 %479, label %760, label %480

480:                                              ; preds = %477
  %481 = getelementptr inbounds i8, i8* %0, i64 65852
  %482 = bitcast i8* %481 to i32*
  store i32 %18, i32* %482, align 4
  %483 = getelementptr inbounds i8, i8* %0, i64 65856
  call void @llvm.memset.p0i8.i64(i8* align 8 %483, i8 0, i64 24, i1 false)
  %484 = tail call i32 @Write_LocalFileHeader(%struct.zip64_internal* %27, i8* %37, i32 %4, i8* %3)
  %485 = bitcast i8* %93 to %struct.z_stream_s*
  %486 = getelementptr inbounds i8, i8* %0, i64 128
  %487 = bitcast i8* %486 to i32*
  store i32 0, i32* %487, align 8
  %488 = getelementptr inbounds i8, i8* %0, i64 152
  %489 = bitcast i8* %488 to i32*
  store i32 65536, i32* %489, align 8
  %490 = getelementptr inbounds i8, i8* %0, i64 296
  %491 = getelementptr inbounds i8, i8* %0, i64 144
  %492 = bitcast i8* %491 to i8**
  store i8* %490, i8** %492, align 8
  %493 = getelementptr inbounds i8, i8* %0, i64 136
  %494 = bitcast i8* %493 to i64*
  store i64 0, i64* %494, align 8
  %495 = getelementptr inbounds i8, i8* %0, i64 160
  %496 = bitcast i8* %495 to i64*
  store i64 0, i64* %496, align 8
  %497 = getelementptr inbounds i8, i8* %0, i64 208
  %498 = bitcast i8* %497 to i32*
  store i32 0, i32* %498, align 8
  %499 = icmp eq i32 %484, 0
  br i1 %499, label %500, label %514

500:                                              ; preds = %480
  %501 = load i32, i32* %115, align 8
  %502 = icmp eq i32 %501, 8
  br i1 %502, label %503, label %518

503:                                              ; preds = %500
  %504 = load i32, i32* %123, align 4
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %518

506:                                              ; preds = %503
  %507 = getelementptr inbounds i8, i8* %0, i64 184
  %508 = icmp slt i32 %11, 0
  %509 = sub nsw i32 0, %11
  %510 = select i1 %508, i32 %11, i32 %509
  call void @llvm.memset.p0i8.i64(i8* align 8 %507, i8 0, i64 24, i1 false)
  %511 = tail call i32 @Cr_z_deflateInit2_(%struct.z_stream_s* %485, i32 %9, i32 8, i32 %510, i32 %12, i32 %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 112) #6
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %513, label %514

513:                                              ; preds = %506
  store i32 8, i32* %119, align 8
  br label %518

514:                                              ; preds = %506, %480
  %515 = phi i32 [ %484, %480 ], [ %511, %506 ]
  %516 = getelementptr inbounds i8, i8* %0, i64 65912
  %517 = bitcast i8* %516 to i32*
  store i32 0, i32* %517, align 8
  br label %760

518:                                              ; preds = %503, %513, %500
  %519 = getelementptr inbounds i8, i8* %0, i64 65912
  %520 = bitcast i8* %519 to i32*
  store i32 0, i32* %520, align 8
  br i1 %108, label %521, label %759

521:                                              ; preds = %518
  %522 = getelementptr inbounds [12 x i8], [12 x i8]* %21, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %522) #6
  %523 = getelementptr inbounds [12 x i8], [12 x i8]* %21, i64 0, i64 10
  %524 = getelementptr inbounds [12 x i8], [12 x i8]* %21, i64 0, i64 11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %522, i8 -86, i64 12, i1 false)
  store i32 1, i32* %117, align 8
  %525 = tail call i32* @Cr_z_get_crc_table() #6
  %526 = getelementptr inbounds i8, i8* %0, i64 65904
  %527 = bitcast i8* %526 to i32**
  store i32* %525, i32** %527, align 8
  %528 = getelementptr inbounds i8, i8* %0, i64 65880
  %529 = bitcast i8* %528 to i64*
  %530 = getelementptr inbounds [10 x i8], [10 x i8]* %20, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %530) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %530, i8 -86, i64 10, i1 false) #6
  %531 = load i32, i32* @crypthead.calls, align 4
  %532 = add i32 %531, 1
  store i32 %532, i32* @crypthead.calls, align 4
  %533 = icmp eq i32 %531, 0
  br i1 %533, label %534, label %538

534:                                              ; preds = %521
  %535 = tail call i64 @time(i64* null) #6
  %536 = trunc i64 %535 to i32
  %537 = xor i32 %536, -1153374642
  tail call void @srand(i32 %537) #6
  br label %538

538:                                              ; preds = %534, %521
  %539 = getelementptr inbounds i8, i8* %0, i64 65888
  %540 = bitcast i8* %539 to i64*
  %541 = bitcast i8* %528 to <2 x i64>*
  store <2 x i64> <i64 305419896, i64 591751049>, <2 x i64>* %541, align 8
  %542 = getelementptr inbounds i8, i8* %0, i64 65896
  %543 = bitcast i8* %542 to i64*
  store i64 878082192, i64* %543, align 8
  %544 = load i8, i8* %14, align 1
  %545 = icmp eq i8 %544, 0
  br i1 %545, label %575, label %546

546:                                              ; preds = %538, %546
  %547 = phi i64 [ %571, %546 ], [ 878082192, %538 ]
  %548 = phi i64 [ %563, %546 ], [ 591751049, %538 ]
  %549 = phi i64 [ %559, %546 ], [ 305419896, %538 ]
  %550 = phi i8 [ %573, %546 ], [ %544, %538 ]
  %551 = phi i8* [ %572, %546 ], [ %14, %538 ]
  %552 = zext i8 %550 to i64
  %553 = and i64 %549, 255
  %554 = xor i64 %553, %552
  %555 = getelementptr inbounds i32, i32* %525, i64 %554
  %556 = load i32, i32* %555, align 4
  %557 = zext i32 %556 to i64
  %558 = lshr i64 %549, 8
  %559 = xor i64 %558, %557
  store i64 %559, i64* %529, align 8
  %560 = and i64 %559, 255
  %561 = add i64 %560, %548
  %562 = mul i64 %561, 134775813
  %563 = add i64 %562, 1
  store i64 %563, i64* %540, align 8
  %564 = lshr i64 %563, 24
  %565 = xor i64 %564, %547
  %566 = and i64 %565, 255
  %567 = getelementptr inbounds i32, i32* %525, i64 %566
  %568 = load i32, i32* %567, align 4
  %569 = zext i32 %568 to i64
  %570 = lshr i64 %547, 8
  %571 = xor i64 %570, %569
  store i64 %571, i64* %543, align 8
  %572 = getelementptr inbounds i8, i8* %551, i64 1
  %573 = load i8, i8* %572, align 1
  %574 = icmp eq i8 %573, 0
  br i1 %574, label %575, label %546

575:                                              ; preds = %546, %538
  br label %576

576:                                              ; preds = %575, %576
  %577 = phi i64 [ %613, %576 ], [ 0, %575 ]
  %578 = tail call i32 @rand() #6
  %579 = lshr i32 %578, 7
  %580 = load i64, i64* %543, align 8
  %581 = trunc i64 %580 to i32
  %582 = and i32 %581, 65533
  %583 = or i32 %582, 2
  %584 = xor i32 %582, 3
  %585 = mul nuw i32 %583, %584
  %586 = lshr i32 %585, 8
  %587 = load i64, i64* %529, align 8
  %588 = trunc i64 %587 to i32
  %589 = xor i32 %579, %588
  %590 = and i32 %589, 255
  %591 = zext i32 %590 to i64
  %592 = getelementptr inbounds i32, i32* %525, i64 %591
  %593 = load i32, i32* %592, align 4
  %594 = zext i32 %593 to i64
  %595 = lshr i64 %587, 8
  %596 = xor i64 %595, %594
  store i64 %596, i64* %529, align 8
  %597 = and i64 %596, 255
  %598 = load i64, i64* %540, align 8
  %599 = add i64 %597, %598
  %600 = mul i64 %599, 134775813
  %601 = add i64 %600, 1
  store i64 %601, i64* %540, align 8
  %602 = lshr i64 %601, 24
  %603 = xor i64 %602, %580
  %604 = and i64 %603, 255
  %605 = getelementptr inbounds i32, i32* %525, i64 %604
  %606 = load i32, i32* %605, align 4
  %607 = zext i32 %606 to i64
  %608 = lshr i64 %580, 8
  %609 = xor i64 %608, %607
  store i64 %609, i64* %543, align 8
  %610 = xor i32 %586, %579
  %611 = trunc i32 %610 to i8
  %612 = getelementptr inbounds [10 x i8], [10 x i8]* %20, i64 0, i64 %577
  store i8 %611, i8* %612, align 1
  %613 = add nuw nsw i64 %577, 1
  %614 = icmp eq i64 %613, 10
  br i1 %614, label %615, label %576

615:                                              ; preds = %576
  %616 = bitcast i8* %528 to <2 x i64>*
  store <2 x i64> <i64 305419896, i64 591751049>, <2 x i64>* %616, align 8
  store i64 878082192, i64* %543, align 8
  %617 = load i8, i8* %14, align 1
  %618 = icmp eq i8 %617, 0
  br i1 %618, label %648, label %619

619:                                              ; preds = %615, %619
  %620 = phi i64 [ %644, %619 ], [ 878082192, %615 ]
  %621 = phi i64 [ %636, %619 ], [ 591751049, %615 ]
  %622 = phi i64 [ %632, %619 ], [ 305419896, %615 ]
  %623 = phi i8 [ %646, %619 ], [ %617, %615 ]
  %624 = phi i8* [ %645, %619 ], [ %14, %615 ]
  %625 = zext i8 %623 to i64
  %626 = and i64 %622, 255
  %627 = xor i64 %626, %625
  %628 = getelementptr inbounds i32, i32* %525, i64 %627
  %629 = load i32, i32* %628, align 4
  %630 = zext i32 %629 to i64
  %631 = lshr i64 %622, 8
  %632 = xor i64 %631, %630
  store i64 %632, i64* %529, align 8
  %633 = and i64 %632, 255
  %634 = add i64 %633, %621
  %635 = mul i64 %634, 134775813
  %636 = add i64 %635, 1
  store i64 %636, i64* %540, align 8
  %637 = lshr i64 %636, 24
  %638 = xor i64 %637, %620
  %639 = and i64 %638, 255
  %640 = getelementptr inbounds i32, i32* %525, i64 %639
  %641 = load i32, i32* %640, align 4
  %642 = zext i32 %641 to i64
  %643 = lshr i64 %620, 8
  %644 = xor i64 %643, %642
  store i64 %644, i64* %543, align 8
  %645 = getelementptr inbounds i8, i8* %624, i64 1
  %646 = load i8, i8* %645, align 1
  %647 = icmp eq i8 %646, 0
  br i1 %647, label %648, label %619

648:                                              ; preds = %619, %615
  %649 = phi i64 [ 591751049, %615 ], [ %636, %619 ]
  %650 = phi i64 [ 305419896, %615 ], [ %632, %619 ]
  %651 = phi i64 [ 878082192, %615 ], [ %644, %619 ]
  %652 = trunc i64 %651 to i32
  %653 = and i32 %652, 65533
  %654 = or i32 %653, 2
  %655 = xor i32 %653, 3
  %656 = mul nuw i32 %654, %655
  %657 = lshr i32 %656, 8
  br label %658

658:                                              ; preds = %658, %648
  %659 = phi i64 [ %649, %648 ], [ %677, %658 ]
  %660 = phi i64 [ %650, %648 ], [ %673, %658 ]
  %661 = phi i64 [ 0, %648 ], [ %689, %658 ]
  %662 = phi i32 [ %657, %648 ], [ %695, %658 ]
  %663 = phi i64 [ %651, %648 ], [ %685, %658 ]
  %664 = getelementptr inbounds [10 x i8], [10 x i8]* %20, i64 0, i64 %661
  %665 = load i8, i8* %664, align 1
  %666 = zext i8 %665 to i64
  %667 = and i64 %660, 255
  %668 = xor i64 %667, %666
  %669 = getelementptr inbounds i32, i32* %525, i64 %668
  %670 = load i32, i32* %669, align 4
  %671 = zext i32 %670 to i64
  %672 = lshr i64 %660, 8
  %673 = xor i64 %672, %671
  store i64 %673, i64* %529, align 8
  %674 = and i64 %673, 255
  %675 = add i64 %674, %659
  %676 = mul i64 %675, 134775813
  %677 = add i64 %676, 1
  store i64 %677, i64* %540, align 8
  %678 = lshr i64 %677, 24
  %679 = xor i64 %678, %663
  %680 = and i64 %679, 255
  %681 = getelementptr inbounds i32, i32* %525, i64 %680
  %682 = load i32, i32* %681, align 4
  %683 = zext i32 %682 to i64
  %684 = lshr i64 %663, 8
  %685 = xor i64 %684, %683
  store i64 %685, i64* %543, align 8
  %686 = trunc i32 %662 to i8
  %687 = xor i8 %665, %686
  %688 = getelementptr inbounds [12 x i8], [12 x i8]* %21, i64 0, i64 %661
  store i8 %687, i8* %688, align 1
  %689 = add nuw nsw i64 %661, 1
  %690 = trunc i64 %685 to i32
  %691 = and i32 %690, 65533
  %692 = or i32 %691, 2
  %693 = xor i32 %691, 3
  %694 = mul nuw i32 %692, %693
  %695 = lshr i32 %694, 8
  %696 = icmp eq i64 %689, 10
  br i1 %696, label %697, label %658

697:                                              ; preds = %658
  %698 = lshr i64 %15, 16
  %699 = trunc i64 %698 to i32
  %700 = xor i64 %673, %698
  %701 = and i64 %700, 255
  %702 = getelementptr inbounds i32, i32* %525, i64 %701
  %703 = load i32, i32* %702, align 4
  %704 = zext i32 %703 to i64
  %705 = lshr i64 %673, 8
  %706 = xor i64 %705, %704
  store i64 %706, i64* %529, align 8
  %707 = and i64 %706, 255
  %708 = add i64 %707, %677
  %709 = mul i64 %708, 134775813
  %710 = add i64 %709, 1
  store i64 %710, i64* %540, align 8
  %711 = lshr i64 %710, 24
  %712 = xor i64 %711, %685
  %713 = and i64 %712, 255
  %714 = getelementptr inbounds i32, i32* %525, i64 %713
  %715 = load i32, i32* %714, align 4
  %716 = zext i32 %715 to i64
  %717 = lshr i64 %685, 8
  %718 = xor i64 %717, %716
  store i64 %718, i64* %543, align 8
  %719 = xor i32 %695, %699
  %720 = trunc i32 %719 to i8
  store i8 %720, i8* %523, align 1
  %721 = trunc i64 %718 to i32
  %722 = and i32 %721, 65533
  %723 = or i32 %722, 2
  %724 = xor i32 %722, 3
  %725 = mul nuw i32 %723, %724
  %726 = lshr i32 %725, 8
  %727 = lshr i64 %15, 24
  %728 = trunc i64 %727 to i32
  %729 = xor i64 %706, %727
  %730 = and i64 %729, 255
  %731 = getelementptr inbounds i32, i32* %525, i64 %730
  %732 = load i32, i32* %731, align 4
  %733 = zext i32 %732 to i64
  %734 = lshr i64 %706, 8
  %735 = xor i64 %734, %733
  store i64 %735, i64* %529, align 8
  %736 = and i64 %735, 255
  %737 = add i64 %736, %710
  %738 = mul i64 %737, 134775813
  %739 = add i64 %738, 1
  store i64 %739, i64* %540, align 8
  %740 = lshr i64 %739, 24
  %741 = xor i64 %740, %718
  %742 = and i64 %741, 255
  %743 = getelementptr inbounds i32, i32* %525, i64 %742
  %744 = load i32, i32* %743, align 4
  %745 = zext i32 %744 to i64
  %746 = lshr i64 %718, 8
  %747 = xor i64 %746, %745
  store i64 %747, i64* %543, align 8
  %748 = xor i32 %726, %728
  %749 = trunc i32 %748 to i8
  store i8 %749, i8* %524, align 1
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %530) #6
  store i32 12, i32* %520, align 8
  %750 = getelementptr inbounds i8, i8* %0, i64 16
  %751 = bitcast i8* %750 to i64 (i8*, i8*, i8*, i64)**
  %752 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %751, align 8
  %753 = getelementptr inbounds i8, i8* %0, i64 56
  %754 = bitcast i8* %753 to i8**
  %755 = load i8*, i8** %754, align 8
  %756 = load i8*, i8** %126, align 8
  %757 = call i64 %752(i8* %755, i8* %756, i8* nonnull %522, i64 12) #6
  %758 = icmp eq i64 %757, 12
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %522) #6
  br i1 %758, label %759, label %760

759:                                              ; preds = %697, %518
  store i32 1, i32* %29, align 8
  br label %760

760:                                              ; preds = %514, %697, %19, %759, %477, %32
  %761 = phi i32 [ -102, %19 ], [ %33, %32 ], [ -104, %477 ], [ 0, %759 ], [ -1, %697 ], [ %515, %514 ]
  ret i32 %761
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipCloseFileInZip(i8*) local_unnamed_addr #0 {
  %2 = tail call i32 @zipCloseFileInZipRaw64(i8* %0, i64 0, i64 0) #6
  ret i32 %2
}

declare i32 @Cr_z_deflateInit2_(%struct.z_stream_s*, i32, i32, i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare i32* @Cr_z_get_crc_table() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipOpenNewFileInZip4(i8*, i8*, %struct.zip_fileinfo* readonly, i8*, i32, i8* nocapture readonly, i32, i8* readonly, i32, i32, i32, i32, i32, i32, i8* readonly, i64, i64, i64) local_unnamed_addr #0 {
  %19 = tail call i32 @zipOpenNewFileInZip4_64(i8* %0, i8* %1, %struct.zip_fileinfo* %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i8* %14, i64 %15, i64 %16, i64 %17, i32 0)
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipOpenNewFileInZip3(i8*, i8*, %struct.zip_fileinfo* readonly, i8*, i32, i8* nocapture readonly, i32, i8* readonly, i32, i32, i32, i32, i32, i32, i8* readonly, i64) local_unnamed_addr #0 {
  %17 = tail call i32 @zipOpenNewFileInZip4_64(i8* %0, i8* %1, %struct.zip_fileinfo* %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i8* %14, i64 %15, i64 0, i64 0, i32 0)
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipOpenNewFileInZip3_64(i8*, i8*, %struct.zip_fileinfo* readonly, i8*, i32, i8* nocapture readonly, i32, i8* readonly, i32, i32, i32, i32, i32, i32, i8* readonly, i64, i32) local_unnamed_addr #0 {
  %18 = tail call i32 @zipOpenNewFileInZip4_64(i8* %0, i8* %1, %struct.zip_fileinfo* %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i8* %14, i64 %15, i64 0, i64 0, i32 %16)
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipOpenNewFileInZip2(i8*, i8*, %struct.zip_fileinfo* readonly, i8*, i32, i8* nocapture readonly, i32, i8* readonly, i32, i32, i32) local_unnamed_addr #0 {
  %12 = tail call i32 @zipOpenNewFileInZip4_64(i8* %0, i8* %1, %struct.zip_fileinfo* %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8, i32 %9, i32 %10, i32 -15, i32 8, i32 0, i8* null, i64 0, i64 0, i64 0, i32 0)
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipOpenNewFileInZip2_64(i8*, i8*, %struct.zip_fileinfo* readonly, i8*, i32, i8* nocapture readonly, i32, i8* readonly, i32, i32, i32, i32) local_unnamed_addr #0 {
  %13 = tail call i32 @zipOpenNewFileInZip4_64(i8* %0, i8* %1, %struct.zip_fileinfo* %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8, i32 %9, i32 %10, i32 -15, i32 8, i32 0, i8* null, i64 0, i64 0, i64 0, i32 %11)
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipOpenNewFileInZip64(i8*, i8*, %struct.zip_fileinfo* readonly, i8*, i32, i8* nocapture readonly, i32, i8* readonly, i32, i32, i32) local_unnamed_addr #0 {
  %12 = tail call i32 @zipOpenNewFileInZip4_64(i8* %0, i8* %1, %struct.zip_fileinfo* %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8, i32 %9, i32 0, i32 -15, i32 8, i32 0, i8* null, i64 0, i64 0, i64 0, i32 %10)
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipOpenNewFileInZip(i8*, i8*, %struct.zip_fileinfo* readonly, i8*, i32, i8* nocapture readonly, i32, i8* readonly, i32, i32) local_unnamed_addr #0 {
  %11 = tail call i32 @zipOpenNewFileInZip4_64(i8* %0, i8* %1, %struct.zip_fileinfo* %2, i8* %3, i32 %4, i8* %5, i32 %6, i8* %7, i32 %8, i32 %9, i32 0, i32 -15, i32 8, i32 0, i8* null, i64 0, i64 0, i64 0, i32 0)
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipWriteInFileInZip(i8*, i8*, i32) local_unnamed_addr #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %212, label %5

5:                                                ; preds = %3
  %6 = bitcast i8* %0 to %struct.zip64_internal*
  %7 = getelementptr inbounds i8, i8* %0, i64 112
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %212, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds i8, i8* %0, i64 120
  %13 = getelementptr inbounds i8, i8* %0, i64 65840
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64 @Cr_z_crc32(i64 %15, i8* %1, i32 %2) #6
  store i64 %16, i64* %14, align 8
  %17 = bitcast i8* %12 to %struct.z_stream_s*
  %18 = bitcast i8* %12 to i8**
  store i8* %1, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %0, i64 128
  %20 = bitcast i8* %19 to i32*
  store i32 %2, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %0, i64 152
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds i8, i8* %0, i64 65848
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds i8, i8* %0, i64 236
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds i8, i8* %0, i64 65880
  %28 = bitcast i8* %27 to i64*
  %29 = getelementptr inbounds i8, i8* %0, i64 65904
  %30 = bitcast i8* %29 to i32**
  %31 = getelementptr inbounds i8, i8* %0, i64 65896
  %32 = bitcast i8* %31 to i64*
  %33 = getelementptr inbounds i8, i8* %0, i64 65888
  %34 = bitcast i8* %33 to i64*
  %35 = getelementptr inbounds i8, i8* %0, i64 16
  %36 = bitcast i8* %35 to i64 (i8*, i8*, i8*, i64)**
  %37 = getelementptr inbounds i8, i8* %0, i64 56
  %38 = bitcast i8* %37 to i8**
  %39 = getelementptr inbounds i8, i8* %0, i64 88
  %40 = bitcast i8* %39 to i8**
  %41 = getelementptr inbounds i8, i8* %0, i64 296
  %42 = getelementptr inbounds i8, i8* %0, i64 65864
  %43 = getelementptr inbounds i8, i8* %0, i64 136
  %44 = bitcast i8* %43 to i64*
  %45 = getelementptr inbounds i8, i8* %0, i64 144
  %46 = bitcast i8* %45 to i8**
  %47 = getelementptr inbounds i8, i8* %0, i64 288
  %48 = bitcast i8* %47 to i32*
  %49 = getelementptr inbounds i8, i8* %0, i64 292
  %50 = bitcast i8* %49 to i32*
  %51 = getelementptr inbounds i8, i8* %0, i64 160
  %52 = bitcast i8* %51 to i64*
  %53 = icmp eq i32 %2, 0
  br i1 %53, label %212, label %54

54:                                               ; preds = %11
  %55 = bitcast i8* %42 to <2 x i64>*
  %56 = bitcast i8* %42 to <2 x i64>*
  br label %57

57:                                               ; preds = %54, %209
  %58 = load i32, i32* %22, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %119

60:                                               ; preds = %57
  %61 = load i32, i32* %24, align 8
  %62 = icmp eq i32 %61, 0
  %63 = load i32, i32* %26, align 4
  %64 = icmp eq i32 %63, 0
  %65 = or i1 %62, %64
  %66 = zext i32 %63 to i64
  br i1 %65, label %106, label %67

67:                                               ; preds = %60, %67
  %68 = phi i64 [ %104, %67 ], [ 0, %60 ]
  %69 = load i64, i64* %32, align 8
  %70 = trunc i64 %69 to i32
  %71 = and i32 %70, 65533
  %72 = or i32 %71, 2
  %73 = xor i32 %71, 3
  %74 = mul nuw i32 %72, %73
  %75 = lshr i32 %74, 8
  %76 = load i32*, i32** %30, align 8
  %77 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %6, i64 0, i32 4, i32 11, i64 %68
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i64
  %80 = load i64, i64* %28, align 8
  %81 = and i64 %80, 255
  %82 = xor i64 %81, %79
  %83 = getelementptr inbounds i32, i32* %76, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = lshr i64 %80, 8
  %87 = xor i64 %86, %85
  store i64 %87, i64* %28, align 8
  %88 = and i64 %87, 255
  %89 = load i64, i64* %34, align 8
  %90 = add i64 %88, %89
  %91 = mul i64 %90, 134775813
  %92 = add i64 %91, 1
  store i64 %92, i64* %34, align 8
  %93 = lshr i64 %92, 24
  %94 = xor i64 %93, %69
  %95 = and i64 %94, 255
  %96 = getelementptr inbounds i32, i32* %76, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = lshr i64 %69, 8
  %100 = xor i64 %99, %98
  store i64 %100, i64* %32, align 8
  %101 = load i8, i8* %77, align 1
  %102 = trunc i32 %75 to i8
  %103 = xor i8 %101, %102
  store i8 %103, i8* %77, align 1
  %104 = add nuw nsw i64 %68, 1
  %105 = icmp eq i64 %104, %66
  br i1 %105, label %106, label %67

106:                                              ; preds = %67, %60
  %107 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %36, align 8
  %108 = load i8*, i8** %38, align 8
  %109 = load i8*, i8** %40, align 8
  %110 = tail call i64 %107(i8* %108, i8* %109, i8* %41, i64 %66) #6
  %111 = load i32, i32* %26, align 4
  %112 = zext i32 %111 to i64
  %113 = icmp eq i64 %110, %112
  %114 = load i64, i64* %44, align 8
  %115 = load <2 x i64>, <2 x i64>* %55, align 8
  %116 = insertelement <2 x i64> undef, i64 %112, i32 0
  %117 = insertelement <2 x i64> %116, i64 %114, i32 1
  %118 = add <2 x i64> %115, %117
  store <2 x i64> %118, <2 x i64>* %56, align 8
  store i64 0, i64* %44, align 8
  store i32 0, i32* %26, align 4
  store i32 65536, i32* %22, align 8
  store i8* %41, i8** %46, align 8
  br i1 %113, label %119, label %212

119:                                              ; preds = %106, %57
  %120 = phi i32 [ 65536, %106 ], [ %58, %57 ]
  %121 = load i32, i32* %48, align 8
  %122 = icmp eq i32 %121, 8
  br i1 %122, label %123, label %126

123:                                              ; preds = %119
  %124 = load i32, i32* %50, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %200, label %126

126:                                              ; preds = %123, %119
  %127 = load i32, i32* %20, align 8
  %128 = icmp ult i32 %127, %120
  %129 = select i1 %128, i32 %127, i32 %120
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %184, label %131

131:                                              ; preds = %126
  %132 = zext i32 %129 to i64
  %133 = add nsw i64 %132, -1
  %134 = and i64 %132, 3
  %135 = icmp ult i64 %133, 3
  br i1 %135, label %167, label %136

136:                                              ; preds = %131
  %137 = sub nsw i64 %132, %134
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i64 [ 0, %136 ], [ %164, %138 ]
  %140 = phi i64 [ %137, %136 ], [ %165, %138 ]
  %141 = load i8*, i8** %18, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 %139
  %143 = load i8, i8* %142, align 1
  %144 = load i8*, i8** %46, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 %139
  store i8 %143, i8* %145, align 1
  %146 = or i64 %139, 1
  %147 = load i8*, i8** %18, align 8
  %148 = getelementptr inbounds i8, i8* %147, i64 %146
  %149 = load i8, i8* %148, align 1
  %150 = load i8*, i8** %46, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 %146
  store i8 %149, i8* %151, align 1
  %152 = or i64 %139, 2
  %153 = load i8*, i8** %18, align 8
  %154 = getelementptr inbounds i8, i8* %153, i64 %152
  %155 = load i8, i8* %154, align 1
  %156 = load i8*, i8** %46, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 %152
  store i8 %155, i8* %157, align 1
  %158 = or i64 %139, 3
  %159 = load i8*, i8** %18, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 %158
  %161 = load i8, i8* %160, align 1
  %162 = load i8*, i8** %46, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 %158
  store i8 %161, i8* %163, align 1
  %164 = add nuw nsw i64 %139, 4
  %165 = add i64 %140, -4
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %138

167:                                              ; preds = %138, %131
  %168 = phi i64 [ 0, %131 ], [ %164, %138 ]
  %169 = icmp eq i64 %134, 0
  br i1 %169, label %181, label %170

170:                                              ; preds = %167, %170
  %171 = phi i64 [ %178, %170 ], [ %168, %167 ]
  %172 = phi i64 [ %179, %170 ], [ %134, %167 ]
  %173 = load i8*, i8** %18, align 8
  %174 = getelementptr inbounds i8, i8* %173, i64 %171
  %175 = load i8, i8* %174, align 1
  %176 = load i8*, i8** %46, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 %171
  store i8 %175, i8* %177, align 1
  %178 = add nuw nsw i64 %171, 1
  %179 = add i64 %172, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %170, !llvm.loop !14

181:                                              ; preds = %170, %167
  %182 = load i32, i32* %20, align 8
  %183 = load i32, i32* %22, align 8
  br label %184

184:                                              ; preds = %126, %181
  %185 = phi i64 [ %132, %181 ], [ 0, %126 ]
  %186 = phi i32 [ %183, %181 ], [ %120, %126 ]
  %187 = phi i32 [ %182, %181 ], [ %127, %126 ]
  %188 = sub i32 %187, %129
  store i32 %188, i32* %20, align 8
  %189 = sub i32 %186, %129
  store i32 %189, i32* %22, align 8
  %190 = load i8*, i8** %18, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 %185
  store i8* %191, i8** %18, align 8
  %192 = load i8*, i8** %46, align 8
  %193 = getelementptr inbounds i8, i8* %192, i64 %185
  store i8* %193, i8** %46, align 8
  %194 = load i64, i64* %44, align 8
  %195 = add i64 %194, %185
  store i64 %195, i64* %44, align 8
  %196 = load i64, i64* %52, align 8
  %197 = add i64 %196, %185
  store i64 %197, i64* %52, align 8
  %198 = load i32, i32* %26, align 4
  %199 = add i32 %198, %129
  store i32 %199, i32* %26, align 4
  br label %209

200:                                              ; preds = %123
  %201 = load i64, i64* %52, align 8
  %202 = tail call i32 @Cr_z_deflate(%struct.z_stream_s* %17, i32 0) #6
  %203 = load i64, i64* %52, align 8
  %204 = sub i64 %203, %201
  %205 = trunc i64 %204 to i32
  %206 = load i32, i32* %26, align 4
  %207 = add i32 %206, %205
  store i32 %207, i32* %26, align 4
  %208 = icmp eq i32 %202, 0
  br i1 %208, label %209, label %212

209:                                              ; preds = %184, %200
  %210 = load i32, i32* %20, align 8
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %57

212:                                              ; preds = %209, %200, %106, %11, %5, %3
  %213 = phi i32 [ -102, %3 ], [ -102, %5 ], [ 0, %11 ], [ -1, %106 ], [ %202, %200 ], [ 0, %209 ]
  ret i32 %213
}

declare i64 @Cr_z_crc32(i64, i8*, i32) local_unnamed_addr #2

declare i32 @Cr_z_deflate(%struct.z_stream_s*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipCloseFileInZipRaw(i8*, i64, i64) local_unnamed_addr #0 {
  %4 = tail call i32 @zipCloseFileInZipRaw64(i8* %0, i64 %1, i64 %2)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipCloseFileInZipRaw64(i8*, i64, i64) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = icmp eq i8* %0, null
  br i1 %9, label %755, label %10

10:                                               ; preds = %3
  %11 = bitcast i8* %0 to %struct.zip64_internal*
  %12 = getelementptr inbounds i8, i8* %0, i64 112
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %755, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds i8, i8* %0, i64 120
  %18 = bitcast i8* %17 to %struct.z_stream_s*
  %19 = getelementptr inbounds i8, i8* %0, i64 128
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %0, i64 288
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 8
  br i1 %24, label %25, label %132

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %0, i64 292
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %132

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %0, i64 152
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds i8, i8* %0, i64 65848
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %0, i64 236
  %36 = bitcast i8* %35 to i32*
  %37 = getelementptr inbounds i8, i8* %0, i64 65880
  %38 = bitcast i8* %37 to i64*
  %39 = getelementptr inbounds i8, i8* %0, i64 65904
  %40 = bitcast i8* %39 to i32**
  %41 = getelementptr inbounds i8, i8* %0, i64 65896
  %42 = bitcast i8* %41 to i64*
  %43 = getelementptr inbounds i8, i8* %0, i64 65888
  %44 = bitcast i8* %43 to i64*
  %45 = getelementptr inbounds i8, i8* %0, i64 16
  %46 = bitcast i8* %45 to i64 (i8*, i8*, i8*, i64)**
  %47 = getelementptr inbounds i8, i8* %0, i64 56
  %48 = bitcast i8* %47 to i8**
  %49 = getelementptr inbounds i8, i8* %0, i64 88
  %50 = bitcast i8* %49 to i8**
  %51 = getelementptr inbounds i8, i8* %0, i64 296
  %52 = getelementptr inbounds i8, i8* %0, i64 65864
  %53 = getelementptr inbounds i8, i8* %0, i64 136
  %54 = bitcast i8* %53 to i64*
  %55 = getelementptr inbounds i8, i8* %0, i64 144
  %56 = bitcast i8* %55 to i8**
  %57 = getelementptr inbounds i8, i8* %0, i64 160
  %58 = bitcast i8* %57 to i64*
  %59 = bitcast i8* %52 to <2 x i64>*
  %60 = bitcast i8* %52 to <2 x i64>*
  br label %61

61:                                               ; preds = %30, %124
  %62 = phi i32 [ %126, %124 ], [ 0, %30 ]
  switch i32 %62, label %220 [
    i32 0, label %63
    i32 1, label %132
  ]

63:                                               ; preds = %61
  %64 = load i32, i32* %32, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %124

66:                                               ; preds = %63
  %67 = load i32, i32* %34, align 8
  %68 = icmp eq i32 %67, 0
  %69 = load i32, i32* %36, align 4
  %70 = icmp eq i32 %69, 0
  %71 = or i1 %68, %70
  %72 = zext i32 %69 to i64
  br i1 %71, label %112, label %73

73:                                               ; preds = %66, %73
  %74 = phi i64 [ %110, %73 ], [ 0, %66 ]
  %75 = load i64, i64* %42, align 8
  %76 = trunc i64 %75 to i32
  %77 = and i32 %76, 65533
  %78 = or i32 %77, 2
  %79 = xor i32 %77, 3
  %80 = mul nuw i32 %78, %79
  %81 = lshr i32 %80, 8
  %82 = load i32*, i32** %40, align 8
  %83 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %11, i64 0, i32 4, i32 11, i64 %74
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = load i64, i64* %38, align 8
  %87 = and i64 %86, 255
  %88 = xor i64 %87, %85
  %89 = getelementptr inbounds i32, i32* %82, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i64
  %92 = lshr i64 %86, 8
  %93 = xor i64 %92, %91
  store i64 %93, i64* %38, align 8
  %94 = and i64 %93, 255
  %95 = load i64, i64* %44, align 8
  %96 = add i64 %94, %95
  %97 = mul i64 %96, 134775813
  %98 = add i64 %97, 1
  store i64 %98, i64* %44, align 8
  %99 = lshr i64 %98, 24
  %100 = xor i64 %99, %75
  %101 = and i64 %100, 255
  %102 = getelementptr inbounds i32, i32* %82, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i64
  %105 = lshr i64 %75, 8
  %106 = xor i64 %105, %104
  store i64 %106, i64* %42, align 8
  %107 = load i8, i8* %83, align 1
  %108 = trunc i32 %81 to i8
  %109 = xor i8 %107, %108
  store i8 %109, i8* %83, align 1
  %110 = add nuw nsw i64 %74, 1
  %111 = icmp eq i64 %110, %72
  br i1 %111, label %112, label %73

112:                                              ; preds = %73, %66
  %113 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %46, align 8
  %114 = load i8*, i8** %48, align 8
  %115 = load i8*, i8** %50, align 8
  %116 = tail call i64 %113(i8* %114, i8* %115, i8* %51, i64 %72) #6
  %117 = load i32, i32* %36, align 4
  %118 = zext i32 %117 to i64
  %119 = load i64, i64* %54, align 8
  %120 = load <2 x i64>, <2 x i64>* %59, align 8
  %121 = insertelement <2 x i64> undef, i64 %118, i32 0
  %122 = insertelement <2 x i64> %121, i64 %119, i32 1
  %123 = add <2 x i64> %120, %122
  store <2 x i64> %123, <2 x i64>* %60, align 8
  store i64 0, i64* %54, align 8
  store i32 0, i32* %36, align 4
  store i32 65536, i32* %32, align 8
  store i8* %51, i8** %56, align 8
  br label %124

124:                                              ; preds = %112, %63
  %125 = load i64, i64* %58, align 8
  %126 = tail call i32 @Cr_z_deflate(%struct.z_stream_s* %18, i32 4) #6
  %127 = load i64, i64* %58, align 8
  %128 = sub i64 %127, %125
  %129 = trunc i64 %128 to i32
  %130 = load i32, i32* %36, align 4
  %131 = add i32 %130, %129
  store i32 %131, i32* %36, align 4
  br label %61

132:                                              ; preds = %61, %16, %25
  %133 = getelementptr inbounds i8, i8* %0, i64 236
  %134 = bitcast i8* %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %220, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds i8, i8* %0, i64 65848
  %139 = bitcast i8* %138 to i32*
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  %143 = zext i32 %135 to i64
  br label %193

144:                                              ; preds = %137
  %145 = getelementptr inbounds i8, i8* %0, i64 65880
  %146 = bitcast i8* %145 to i64*
  %147 = getelementptr inbounds i8, i8* %0, i64 65904
  %148 = bitcast i8* %147 to i32**
  %149 = getelementptr inbounds i8, i8* %0, i64 65896
  %150 = bitcast i8* %149 to i64*
  %151 = getelementptr inbounds i8, i8* %0, i64 65888
  %152 = bitcast i8* %151 to i64*
  %153 = zext i32 %135 to i64
  br label %154

154:                                              ; preds = %154, %144
  %155 = phi i64 [ 0, %144 ], [ %191, %154 ]
  %156 = load i64, i64* %150, align 8
  %157 = trunc i64 %156 to i32
  %158 = and i32 %157, 65533
  %159 = or i32 %158, 2
  %160 = xor i32 %158, 3
  %161 = mul nuw i32 %159, %160
  %162 = lshr i32 %161, 8
  %163 = load i32*, i32** %148, align 8
  %164 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %11, i64 0, i32 4, i32 11, i64 %155
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = load i64, i64* %146, align 8
  %168 = and i64 %167, 255
  %169 = xor i64 %168, %166
  %170 = getelementptr inbounds i32, i32* %163, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i64
  %173 = lshr i64 %167, 8
  %174 = xor i64 %173, %172
  store i64 %174, i64* %146, align 8
  %175 = and i64 %174, 255
  %176 = load i64, i64* %152, align 8
  %177 = add i64 %175, %176
  %178 = mul i64 %177, 134775813
  %179 = add i64 %178, 1
  store i64 %179, i64* %152, align 8
  %180 = lshr i64 %179, 24
  %181 = xor i64 %180, %156
  %182 = and i64 %181, 255
  %183 = getelementptr inbounds i32, i32* %163, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = zext i32 %184 to i64
  %186 = lshr i64 %156, 8
  %187 = xor i64 %186, %185
  store i64 %187, i64* %150, align 8
  %188 = load i8, i8* %164, align 1
  %189 = trunc i32 %162 to i8
  %190 = xor i8 %188, %189
  store i8 %190, i8* %164, align 1
  %191 = add nuw nsw i64 %155, 1
  %192 = icmp eq i64 %191, %153
  br i1 %192, label %193, label %154

193:                                              ; preds = %154, %142
  %194 = phi i64 [ %143, %142 ], [ %153, %154 ]
  %195 = getelementptr inbounds i8, i8* %0, i64 16
  %196 = bitcast i8* %195 to i64 (i8*, i8*, i8*, i64)**
  %197 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %196, align 8
  %198 = getelementptr inbounds i8, i8* %0, i64 56
  %199 = bitcast i8* %198 to i8**
  %200 = load i8*, i8** %199, align 8
  %201 = getelementptr inbounds i8, i8* %0, i64 88
  %202 = bitcast i8* %201 to i8**
  %203 = load i8*, i8** %202, align 8
  %204 = getelementptr inbounds i8, i8* %0, i64 296
  %205 = tail call i64 %197(i8* %200, i8* %203, i8* %204, i64 %194) #6
  %206 = load i32, i32* %134, align 4
  %207 = zext i32 %206 to i64
  %208 = icmp ne i64 %205, %207
  %209 = getelementptr inbounds i8, i8* %0, i64 65864
  %210 = getelementptr inbounds i8, i8* %0, i64 136
  %211 = bitcast i8* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast i8* %209 to <2 x i64>*
  %214 = load <2 x i64>, <2 x i64>* %213, align 8
  %215 = insertelement <2 x i64> undef, i64 %207, i32 0
  %216 = insertelement <2 x i64> %215, i64 %212, i32 1
  %217 = add <2 x i64> %214, %216
  %218 = bitcast i8* %209 to <2 x i64>*
  store <2 x i64> %217, <2 x i64>* %218, align 8
  store i64 0, i64* %211, align 8
  store i32 0, i32* %134, align 4
  %219 = sext i1 %208 to i32
  br label %220

220:                                              ; preds = %61, %132, %193
  %221 = phi i32 [ 0, %132 ], [ %219, %193 ], [ %62, %61 ]
  %222 = load i32, i32* %22, align 8
  %223 = icmp eq i32 %222, 8
  br i1 %223, label %224, label %235

224:                                              ; preds = %220
  %225 = getelementptr inbounds i8, i8* %0, i64 292
  %226 = bitcast i8* %225 to i32*
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %235

229:                                              ; preds = %224
  %230 = tail call i32 @Cr_z_deflateEnd(%struct.z_stream_s* %18) #6
  %231 = icmp eq i32 %221, 0
  %232 = select i1 %231, i32 %230, i32 %221
  %233 = getelementptr inbounds i8, i8* %0, i64 232
  %234 = bitcast i8* %233 to i32*
  store i32 0, i32* %234, align 8
  br label %235

235:                                              ; preds = %220, %224, %229
  %236 = phi i32 [ %221, %224 ], [ %232, %229 ], [ %221, %220 ]
  %237 = getelementptr inbounds i8, i8* %0, i64 292
  %238 = bitcast i8* %237 to i32*
  %239 = load i32, i32* %238, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %248

241:                                              ; preds = %235
  %242 = getelementptr inbounds i8, i8* %0, i64 65840
  %243 = bitcast i8* %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = getelementptr inbounds i8, i8* %0, i64 65872
  %246 = bitcast i8* %245 to i64*
  %247 = load i64, i64* %246, align 8
  br label %248

248:                                              ; preds = %235, %241
  %249 = phi i64 [ %1, %235 ], [ %247, %241 ]
  %250 = phi i64 [ %2, %235 ], [ %244, %241 ]
  %251 = getelementptr inbounds i8, i8* %0, i64 65864
  %252 = bitcast i8* %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = getelementptr inbounds i8, i8* %0, i64 65912
  %255 = bitcast i8* %254 to i32*
  %256 = load i32, i32* %255, align 8
  %257 = sext i32 %256 to i64
  %258 = add i64 %253, %257
  %259 = icmp ugt i64 %258, 4294967294
  %260 = icmp ugt i64 %249, 4294967294
  %261 = or i1 %260, %259
  br i1 %261, label %267, label %262

262:                                              ; preds = %248
  %263 = getelementptr inbounds i8, i8* %0, i64 240
  %264 = bitcast i8* %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = icmp ugt i64 %265, 4294967294
  br i1 %266, label %267, label %276

267:                                              ; preds = %262, %248
  %268 = getelementptr inbounds i8, i8* %0, i64 248
  %269 = bitcast i8* %268 to i8**
  %270 = load i8*, i8** %269, align 8
  %271 = getelementptr inbounds i8, i8* %270, i64 4
  store i8 45, i8* %271, align 1
  %272 = getelementptr inbounds i8, i8* %270, i64 5
  store i8 0, i8* %272, align 1
  %273 = load i8*, i8** %269, align 8
  %274 = getelementptr inbounds i8, i8* %273, i64 6
  store i8 45, i8* %274, align 1
  %275 = getelementptr inbounds i8, i8* %273, i64 7
  store i8 0, i8* %275, align 1
  br label %276

276:                                              ; preds = %267, %262
  %277 = getelementptr inbounds i8, i8* %0, i64 248
  %278 = bitcast i8* %277 to i8**
  %279 = load i8*, i8** %278, align 8
  %280 = getelementptr inbounds i8, i8* %279, i64 16
  %281 = trunc i64 %250 to i8
  store i8 %281, i8* %280, align 1
  %282 = lshr i64 %250, 8
  %283 = trunc i64 %282 to i8
  %284 = getelementptr inbounds i8, i8* %279, i64 17
  store i8 %283, i8* %284, align 1
  %285 = lshr i64 %250, 16
  %286 = trunc i64 %285 to i8
  %287 = getelementptr inbounds i8, i8* %279, i64 18
  store i8 %286, i8* %287, align 1
  %288 = lshr i64 %250, 24
  %289 = trunc i64 %288 to i8
  %290 = getelementptr inbounds i8, i8* %279, i64 19
  store i8 %289, i8* %290, align 1
  %291 = icmp ult i64 %250, 4294967296
  br i1 %291, label %294, label %292

292:                                              ; preds = %276
  %293 = bitcast i8* %280 to i32*
  store i32 -1, i32* %293, align 1
  br label %294

294:                                              ; preds = %276, %292
  %295 = load i8*, i8** %278, align 8
  %296 = getelementptr inbounds i8, i8* %295, i64 20
  br i1 %259, label %307, label %297

297:                                              ; preds = %294
  %298 = trunc i64 %258 to i8
  store i8 %298, i8* %296, align 1
  %299 = lshr i64 %258, 8
  %300 = trunc i64 %299 to i8
  %301 = getelementptr inbounds i8, i8* %295, i64 21
  store i8 %300, i8* %301, align 1
  %302 = lshr i64 %258, 16
  %303 = trunc i64 %302 to i8
  %304 = getelementptr inbounds i8, i8* %295, i64 22
  store i8 %303, i8* %304, align 1
  %305 = lshr i64 %258, 24
  %306 = trunc i64 %305 to i8
  br label %310

307:                                              ; preds = %294
  store i8 -1, i8* %296, align 1
  %308 = getelementptr inbounds i8, i8* %295, i64 21
  store i8 -1, i8* %308, align 1
  %309 = getelementptr inbounds i8, i8* %295, i64 22
  store i8 -1, i8* %309, align 1
  br label %310

310:                                              ; preds = %307, %297
  %311 = phi i8 [ -1, %307 ], [ %306, %297 ]
  %312 = getelementptr inbounds i8, i8* %295, i64 23
  store i8 %311, i8* %312, align 1
  %313 = getelementptr inbounds i8, i8* %0, i64 208
  %314 = bitcast i8* %313 to i32*
  %315 = load i32, i32* %314, align 8
  %316 = icmp eq i32 %315, 1
  br i1 %316, label %317, label %321

317:                                              ; preds = %310
  %318 = load i8*, i8** %278, align 8
  %319 = getelementptr inbounds i8, i8* %318, i64 36
  store i8 1, i8* %319, align 1
  %320 = getelementptr inbounds i8, i8* %318, i64 37
  store i8 0, i8* %320, align 1
  br label %321

321:                                              ; preds = %317, %310
  %322 = load i8*, i8** %278, align 8
  %323 = getelementptr inbounds i8, i8* %322, i64 24
  br i1 %260, label %334, label %324

324:                                              ; preds = %321
  %325 = trunc i64 %249 to i8
  store i8 %325, i8* %323, align 1
  %326 = lshr i64 %249, 8
  %327 = trunc i64 %326 to i8
  %328 = getelementptr inbounds i8, i8* %322, i64 25
  store i8 %327, i8* %328, align 1
  %329 = lshr i64 %249, 16
  %330 = trunc i64 %329 to i8
  %331 = getelementptr inbounds i8, i8* %322, i64 26
  store i8 %330, i8* %331, align 1
  %332 = lshr i64 %249, 24
  %333 = trunc i64 %332 to i8
  br label %337

334:                                              ; preds = %321
  store i8 -1, i8* %323, align 1
  %335 = getelementptr inbounds i8, i8* %322, i64 25
  store i8 -1, i8* %335, align 1
  %336 = getelementptr inbounds i8, i8* %322, i64 26
  store i8 -1, i8* %336, align 1
  br label %337

337:                                              ; preds = %334, %324
  %338 = phi i8 [ -1, %334 ], [ %333, %324 ]
  %339 = getelementptr inbounds i8, i8* %322, i64 27
  store i8 %338, i8* %339, align 1
  %340 = select i1 %260, i16 8, i16 0
  %341 = add nuw nsw i16 %340, 8
  %342 = select i1 %259, i16 %341, i16 %340
  %343 = getelementptr inbounds i8, i8* %0, i64 240
  %344 = bitcast i8* %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = icmp ugt i64 %345, 4294967294
  %347 = add nuw nsw i16 %342, 8
  %348 = select i1 %346, i16 %347, i16 %342
  %349 = icmp eq i16 %348, 0
  br i1 %349, label %465, label %350

350:                                              ; preds = %337
  %351 = or i16 %348, 4
  %352 = zext i16 %351 to i64
  %353 = getelementptr inbounds i8, i8* %0, i64 272
  %354 = bitcast i8* %353 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = icmp ult i64 %355, %352
  br i1 %356, label %755, label %357

357:                                              ; preds = %350
  %358 = load i8*, i8** %278, align 8
  %359 = getelementptr inbounds i8, i8* %0, i64 264
  %360 = bitcast i8* %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds i8, i8* %358, i64 %361
  store i8 1, i8* %362, align 1
  %363 = getelementptr inbounds i8, i8* %362, i64 1
  store i8 0, i8* %363, align 1
  %364 = getelementptr inbounds i8, i8* %362, i64 2
  %365 = trunc i16 %348 to i8
  store i8 %365, i8* %364, align 1
  %366 = getelementptr inbounds i8, i8* %364, i64 1
  store i8 0, i8* %366, align 1
  %367 = getelementptr inbounds i8, i8* %364, i64 2
  br i1 %260, label %368, label %392

368:                                              ; preds = %357
  %369 = trunc i64 %249 to i8
  store i8 %369, i8* %367, align 1
  %370 = lshr i64 %249, 8
  %371 = trunc i64 %370 to i8
  %372 = getelementptr inbounds i8, i8* %367, i64 1
  store i8 %371, i8* %372, align 1
  %373 = lshr i64 %249, 16
  %374 = trunc i64 %373 to i8
  %375 = getelementptr inbounds i8, i8* %367, i64 2
  store i8 %374, i8* %375, align 1
  %376 = lshr i64 %249, 24
  %377 = trunc i64 %376 to i8
  %378 = getelementptr inbounds i8, i8* %367, i64 3
  store i8 %377, i8* %378, align 1
  %379 = lshr i64 %249, 32
  %380 = trunc i64 %379 to i8
  %381 = getelementptr inbounds i8, i8* %367, i64 4
  store i8 %380, i8* %381, align 1
  %382 = lshr i64 %249, 40
  %383 = trunc i64 %382 to i8
  %384 = getelementptr inbounds i8, i8* %367, i64 5
  store i8 %383, i8* %384, align 1
  %385 = lshr i64 %249, 48
  %386 = trunc i64 %385 to i8
  %387 = getelementptr inbounds i8, i8* %367, i64 6
  store i8 %386, i8* %387, align 1
  %388 = lshr i64 %249, 56
  %389 = trunc i64 %388 to i8
  %390 = getelementptr inbounds i8, i8* %367, i64 7
  store i8 %389, i8* %390, align 1
  %391 = getelementptr inbounds i8, i8* %367, i64 8
  br label %392

392:                                              ; preds = %368, %357
  %393 = phi i8* [ %391, %368 ], [ %367, %357 ]
  br i1 %259, label %394, label %418

394:                                              ; preds = %392
  %395 = trunc i64 %258 to i8
  store i8 %395, i8* %393, align 1
  %396 = lshr i64 %258, 8
  %397 = trunc i64 %396 to i8
  %398 = getelementptr inbounds i8, i8* %393, i64 1
  store i8 %397, i8* %398, align 1
  %399 = lshr i64 %258, 16
  %400 = trunc i64 %399 to i8
  %401 = getelementptr inbounds i8, i8* %393, i64 2
  store i8 %400, i8* %401, align 1
  %402 = lshr i64 %258, 24
  %403 = trunc i64 %402 to i8
  %404 = getelementptr inbounds i8, i8* %393, i64 3
  store i8 %403, i8* %404, align 1
  %405 = lshr i64 %258, 32
  %406 = trunc i64 %405 to i8
  %407 = getelementptr inbounds i8, i8* %393, i64 4
  store i8 %406, i8* %407, align 1
  %408 = lshr i64 %258, 40
  %409 = trunc i64 %408 to i8
  %410 = getelementptr inbounds i8, i8* %393, i64 5
  store i8 %409, i8* %410, align 1
  %411 = lshr i64 %258, 48
  %412 = trunc i64 %411 to i8
  %413 = getelementptr inbounds i8, i8* %393, i64 6
  store i8 %412, i8* %413, align 1
  %414 = lshr i64 %258, 56
  %415 = trunc i64 %414 to i8
  %416 = getelementptr inbounds i8, i8* %393, i64 7
  store i8 %415, i8* %416, align 1
  %417 = getelementptr inbounds i8, i8* %393, i64 8
  br label %418

418:                                              ; preds = %394, %392
  %419 = phi i8* [ %417, %394 ], [ %393, %392 ]
  %420 = load i64, i64* %344, align 8
  %421 = icmp ugt i64 %420, 4294967294
  br i1 %421, label %422, label %445

422:                                              ; preds = %418
  %423 = trunc i64 %420 to i8
  store i8 %423, i8* %419, align 1
  %424 = lshr i64 %420, 8
  %425 = trunc i64 %424 to i8
  %426 = getelementptr inbounds i8, i8* %419, i64 1
  store i8 %425, i8* %426, align 1
  %427 = lshr i64 %420, 16
  %428 = trunc i64 %427 to i8
  %429 = getelementptr inbounds i8, i8* %419, i64 2
  store i8 %428, i8* %429, align 1
  %430 = lshr i64 %420, 24
  %431 = trunc i64 %430 to i8
  %432 = getelementptr inbounds i8, i8* %419, i64 3
  store i8 %431, i8* %432, align 1
  %433 = lshr i64 %420, 32
  %434 = trunc i64 %433 to i8
  %435 = getelementptr inbounds i8, i8* %419, i64 4
  store i8 %434, i8* %435, align 1
  %436 = lshr i64 %420, 40
  %437 = trunc i64 %436 to i8
  %438 = getelementptr inbounds i8, i8* %419, i64 5
  store i8 %437, i8* %438, align 1
  %439 = lshr i64 %420, 48
  %440 = trunc i64 %439 to i8
  %441 = getelementptr inbounds i8, i8* %419, i64 6
  store i8 %440, i8* %441, align 1
  %442 = lshr i64 %420, 56
  %443 = trunc i64 %442 to i8
  %444 = getelementptr inbounds i8, i8* %419, i64 7
  store i8 %443, i8* %444, align 1
  br label %445

445:                                              ; preds = %422, %418
  %446 = load i64, i64* %354, align 8
  %447 = sub i64 %446, %352
  store i64 %447, i64* %354, align 8
  %448 = getelementptr inbounds i8, i8* %0, i64 256
  %449 = bitcast i8* %448 to <2 x i64>*
  %450 = load <2 x i64>, <2 x i64>* %449, align 8
  %451 = insertelement <2 x i64> undef, i64 %352, i32 0
  %452 = shufflevector <2 x i64> %451, <2 x i64> undef, <2 x i32> zeroinitializer
  %453 = add <2 x i64> %450, %452
  %454 = bitcast i8* %448 to <2 x i64>*
  store <2 x i64> %453, <2 x i64>* %454, align 8
  %455 = load i8*, i8** %278, align 8
  %456 = getelementptr inbounds i8, i8* %455, i64 30
  %457 = extractelement <2 x i64> %453, i32 0
  %458 = trunc i64 %457 to i8
  store i8 %458, i8* %456, align 1
  %459 = lshr i64 %457, 8
  %460 = trunc i64 %459 to i8
  %461 = getelementptr inbounds i8, i8* %455, i64 31
  store i8 %460, i8* %461, align 1
  %462 = icmp ult i64 %457, 65536
  br i1 %462, label %465, label %463

463:                                              ; preds = %445
  %464 = bitcast i8* %456 to i16*
  store i16 -1, i16* %464, align 1
  br label %465

465:                                              ; preds = %445, %337, %463
  %466 = icmp eq i32 %236, 0
  br i1 %466, label %467, label %580

467:                                              ; preds = %465
  %468 = getelementptr inbounds i8, i8* %0, i64 96
  %469 = load i8*, i8** %278, align 8
  %470 = getelementptr inbounds i8, i8* %0, i64 264
  %471 = bitcast i8* %470 to i64*
  %472 = load i64, i64* %471, align 8
  %473 = icmp eq i8* %468, null
  br i1 %473, label %580, label %474

474:                                              ; preds = %467
  %475 = getelementptr inbounds i8, i8* %0, i64 104
  %476 = bitcast i8* %475 to %struct.linkedlist_datablock_internal_s**
  %477 = load %struct.linkedlist_datablock_internal_s*, %struct.linkedlist_datablock_internal_s** %476, align 8
  %478 = icmp eq %struct.linkedlist_datablock_internal_s* %477, null
  br i1 %478, label %479, label %492

479:                                              ; preds = %474
  %480 = tail call noalias i8* @malloc(i64 4112) #6
  %481 = icmp eq i8* %480, null
  br i1 %481, label %482, label %485

482:                                              ; preds = %479
  %483 = bitcast i8* %475 to i8**
  store i8* %480, i8** %483, align 8
  %484 = bitcast i8* %468 to i8**
  store i8* %480, i8** %484, align 8
  br label %580

485:                                              ; preds = %479
  %486 = bitcast i8* %480 to %struct.linkedlist_datablock_internal_s*
  %487 = bitcast i8* %480 to %struct.linkedlist_datablock_internal_s**
  store %struct.linkedlist_datablock_internal_s* null, %struct.linkedlist_datablock_internal_s** %487, align 8
  %488 = getelementptr inbounds i8, i8* %480, i64 8
  %489 = bitcast i8* %488 to <2 x i64>*
  store <2 x i64> <i64 4080, i64 0>, <2 x i64>* %489, align 8
  %490 = bitcast i8* %475 to i8**
  store i8* %480, i8** %490, align 8
  %491 = bitcast i8* %468 to i8**
  store i8* %480, i8** %491, align 8
  br label %492

492:                                              ; preds = %485, %474
  %493 = phi %struct.linkedlist_datablock_internal_s* [ %486, %485 ], [ %477, %474 ]
  %494 = icmp eq i64 %472, 0
  br i1 %494, label %585, label %495

495:                                              ; preds = %492
  %496 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %493, i64 0, i32 1
  %497 = load i64, i64* %496, align 8
  %498 = bitcast i8* %475 to i8**
  br label %499

499:                                              ; preds = %570, %495
  %500 = phi i64 [ %574, %570 ], [ %497, %495 ]
  %501 = phi i8* [ %575, %570 ], [ %469, %495 ]
  %502 = phi %struct.linkedlist_datablock_internal_s* [ %519, %570 ], [ %493, %495 ]
  %503 = phi i64 [ %576, %570 ], [ %472, %495 ]
  %504 = icmp eq i64 %500, 0
  br i1 %504, label %505, label %517

505:                                              ; preds = %499
  %506 = tail call noalias i8* @malloc(i64 4112) #6
  %507 = icmp eq i8* %506, null
  br i1 %507, label %578, label %508

508:                                              ; preds = %505
  %509 = bitcast i8* %506 to %struct.linkedlist_datablock_internal_s*
  %510 = bitcast i8* %506 to %struct.linkedlist_datablock_internal_s**
  store %struct.linkedlist_datablock_internal_s* null, %struct.linkedlist_datablock_internal_s** %510, align 8
  %511 = getelementptr inbounds i8, i8* %506, i64 8
  %512 = bitcast i8* %511 to <2 x i64>*
  store <2 x i64> <i64 4080, i64 0>, <2 x i64>* %512, align 8
  %513 = bitcast %struct.linkedlist_datablock_internal_s* %502 to i8**
  store i8* %506, i8** %513, align 8
  store i8* %506, i8** %498, align 8
  %514 = getelementptr inbounds i8, i8* %506, i64 8
  %515 = bitcast i8* %514 to i64*
  %516 = load i64, i64* %515, align 8
  br label %517

517:                                              ; preds = %508, %499
  %518 = phi i64 [ %516, %508 ], [ %500, %499 ]
  %519 = phi %struct.linkedlist_datablock_internal_s* [ %509, %508 ], [ %502, %499 ]
  %520 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %519, i64 0, i32 1
  %521 = icmp ult i64 %518, %503
  %522 = select i1 %521, i64 %518, i64 %503
  %523 = trunc i64 %522 to i32
  %524 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %519, i64 0, i32 2
  %525 = load i64, i64* %524, align 8
  %526 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %519, i64 0, i32 4, i64 %525
  %527 = icmp eq i32 %523, 0
  %528 = and i64 %522, 4294967295
  br i1 %527, label %570, label %529

529:                                              ; preds = %517
  %530 = icmp ult i64 %528, 32
  br i1 %530, label %558, label %531

531:                                              ; preds = %529
  %532 = getelementptr %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %519, i64 0, i32 4, i64 %525
  %533 = add i64 %525, %528
  %534 = getelementptr %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %519, i64 0, i32 4, i64 %533
  %535 = getelementptr i8, i8* %501, i64 %528
  %536 = icmp ult i8* %532, %535
  %537 = icmp ult i8* %501, %534
  %538 = and i1 %536, %537
  br i1 %538, label %558, label %539

539:                                              ; preds = %531
  %540 = and i64 %522, 31
  %541 = sub nsw i64 %528, %540
  br label %542

542:                                              ; preds = %542, %539
  %543 = phi i64 [ 0, %539 ], [ %554, %542 ]
  %544 = getelementptr inbounds i8, i8* %501, i64 %543
  %545 = bitcast i8* %544 to <16 x i8>*
  %546 = load <16 x i8>, <16 x i8>* %545, align 1, !alias.scope !15
  %547 = getelementptr inbounds i8, i8* %544, i64 16
  %548 = bitcast i8* %547 to <16 x i8>*
  %549 = load <16 x i8>, <16 x i8>* %548, align 1, !alias.scope !15
  %550 = getelementptr inbounds i8, i8* %526, i64 %543
  %551 = bitcast i8* %550 to <16 x i8>*
  store <16 x i8> %546, <16 x i8>* %551, align 1, !alias.scope !18, !noalias !15
  %552 = getelementptr inbounds i8, i8* %550, i64 16
  %553 = bitcast i8* %552 to <16 x i8>*
  store <16 x i8> %549, <16 x i8>* %553, align 1, !alias.scope !18, !noalias !15
  %554 = add i64 %543, 32
  %555 = icmp eq i64 %554, %541
  br i1 %555, label %556, label %542, !llvm.loop !20

556:                                              ; preds = %542
  %557 = icmp eq i64 %540, 0
  br i1 %557, label %567, label %558

558:                                              ; preds = %556, %531, %529
  %559 = phi i64 [ 0, %531 ], [ 0, %529 ], [ %541, %556 ]
  br label %560

560:                                              ; preds = %558, %560
  %561 = phi i64 [ %565, %560 ], [ %559, %558 ]
  %562 = getelementptr inbounds i8, i8* %501, i64 %561
  %563 = load i8, i8* %562, align 1
  %564 = getelementptr inbounds i8, i8* %526, i64 %561
  store i8 %563, i8* %564, align 1
  %565 = add nuw nsw i64 %561, 1
  %566 = icmp ult i64 %565, %528
  br i1 %566, label %560, label %567, !llvm.loop !21

567:                                              ; preds = %560, %556
  %568 = load i64, i64* %524, align 8
  %569 = load i64, i64* %520, align 8
  br label %570

570:                                              ; preds = %517, %567
  %571 = phi i64 [ %569, %567 ], [ %518, %517 ]
  %572 = phi i64 [ %568, %567 ], [ %525, %517 ]
  %573 = add i64 %572, %528
  store i64 %573, i64* %524, align 8
  %574 = sub i64 %571, %528
  store i64 %574, i64* %520, align 8
  %575 = getelementptr inbounds i8, i8* %501, i64 %528
  %576 = sub i64 %503, %528
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %583, label %499

578:                                              ; preds = %505
  %579 = bitcast %struct.linkedlist_datablock_internal_s* %502 to i8**
  store i8* %506, i8** %579, align 8
  br label %580

580:                                              ; preds = %482, %578, %465, %467
  %581 = phi i32 [ -104, %467 ], [ %236, %465 ], [ -104, %578 ], [ -104, %482 ]
  %582 = load i8*, i8** %278, align 8
  tail call void @free(i8* %582) #6
  br label %749

583:                                              ; preds = %570
  %584 = load i8*, i8** %278, align 8
  br label %585

585:                                              ; preds = %583, %492
  %586 = phi i8* [ %584, %583 ], [ %469, %492 ]
  tail call void @free(i8* %586) #6
  %587 = bitcast i8* %0 to %struct.zlib_filefunc64_32_def_s*
  %588 = getelementptr inbounds i8, i8* %0, i64 88
  %589 = bitcast i8* %588 to i8**
  %590 = load i8*, i8** %589, align 8
  %591 = tail call i64 @call_ztell64(%struct.zlib_filefunc64_32_def_s* nonnull %587, i8* %590) #6
  %592 = load i8*, i8** %589, align 8
  %593 = load i64, i64* %344, align 8
  %594 = add i64 %593, 14
  %595 = tail call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* nonnull %587, i8* %592, i64 %594, i32 0) #6
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %597, label %617

597:                                              ; preds = %585
  %598 = load i8*, i8** %589, align 8
  %599 = bitcast i64* %4 to [8 x i8]*
  %600 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %600) #6
  store i64 -6148914691236517206, i64* %4, align 8
  %601 = bitcast i64* %4 to i8*
  store i8 %281, i8* %601, align 8
  %602 = getelementptr inbounds [8 x i8], [8 x i8]* %599, i64 0, i64 1
  store i8 %283, i8* %602, align 1
  %603 = getelementptr inbounds [8 x i8], [8 x i8]* %599, i64 0, i64 2
  store i8 %286, i8* %603, align 2
  %604 = getelementptr inbounds [8 x i8], [8 x i8]* %599, i64 0, i64 3
  store i8 %289, i8* %604, align 1
  br i1 %291, label %607, label %605

605:                                              ; preds = %597
  %606 = bitcast i64* %4 to i32*
  store i32 -1, i32* %606, align 8
  br label %607

607:                                              ; preds = %597, %605
  %608 = getelementptr inbounds i8, i8* %0, i64 16
  %609 = bitcast i8* %608 to i64 (i8*, i8*, i8*, i64)**
  %610 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %609, align 8
  %611 = getelementptr inbounds i8, i8* %0, i64 56
  %612 = bitcast i8* %611 to i8**
  %613 = load i8*, i8** %612, align 8
  %614 = call i64 %610(i8* %613, i8* %598, i8* nonnull %600, i64 4) #6
  %615 = icmp ne i64 %614, 4
  %616 = sext i1 %615 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %600) #6
  br label %617

617:                                              ; preds = %607, %585
  %618 = phi i32 [ %616, %607 ], [ -1, %585 ]
  br i1 %261, label %619, label %698

619:                                              ; preds = %617
  %620 = getelementptr inbounds i8, i8* %0, i64 65856
  %621 = bitcast i8* %620 to i64*
  %622 = load i64, i64* %621, align 8
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %743, label %624

624:                                              ; preds = %619
  %625 = load i8*, i8** %589, align 8
  %626 = add i64 %622, 4
  %627 = call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* nonnull %587, i8* %625, i64 %626, i32 0) #6
  %628 = icmp eq i64 %627, 0
  %629 = icmp eq i32 %618, 0
  %630 = and i1 %629, %628
  br i1 %630, label %631, label %743

631:                                              ; preds = %624
  %632 = load i8*, i8** %589, align 8
  %633 = bitcast i64* %5 to [8 x i8]*
  %634 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %634) #6
  %635 = trunc i64 %249 to i8
  %636 = bitcast i64* %5 to i8*
  store i8 %635, i8* %636, align 8
  %637 = lshr i64 %249, 8
  %638 = trunc i64 %637 to i8
  %639 = getelementptr inbounds [8 x i8], [8 x i8]* %633, i64 0, i64 1
  store i8 %638, i8* %639, align 1
  %640 = lshr i64 %249, 16
  %641 = trunc i64 %640 to i8
  %642 = getelementptr inbounds [8 x i8], [8 x i8]* %633, i64 0, i64 2
  store i8 %641, i8* %642, align 2
  %643 = lshr i64 %249, 24
  %644 = trunc i64 %643 to i8
  %645 = getelementptr inbounds [8 x i8], [8 x i8]* %633, i64 0, i64 3
  store i8 %644, i8* %645, align 1
  %646 = lshr i64 %249, 32
  %647 = trunc i64 %646 to i8
  %648 = getelementptr inbounds [8 x i8], [8 x i8]* %633, i64 0, i64 4
  store i8 %647, i8* %648, align 4
  %649 = lshr i64 %249, 40
  %650 = trunc i64 %649 to i8
  %651 = getelementptr inbounds [8 x i8], [8 x i8]* %633, i64 0, i64 5
  store i8 %650, i8* %651, align 1
  %652 = lshr i64 %249, 48
  %653 = trunc i64 %652 to i8
  %654 = getelementptr inbounds [8 x i8], [8 x i8]* %633, i64 0, i64 6
  store i8 %653, i8* %654, align 2
  %655 = lshr i64 %249, 56
  %656 = trunc i64 %655 to i8
  %657 = getelementptr inbounds [8 x i8], [8 x i8]* %633, i64 0, i64 7
  store i8 %656, i8* %657, align 1
  %658 = getelementptr inbounds i8, i8* %0, i64 16
  %659 = bitcast i8* %658 to i64 (i8*, i8*, i8*, i64)**
  %660 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %659, align 8
  %661 = getelementptr inbounds i8, i8* %0, i64 56
  %662 = bitcast i8* %661 to i8**
  %663 = load i8*, i8** %662, align 8
  %664 = call i64 %660(i8* %663, i8* %632, i8* nonnull %634, i64 8) #6
  %665 = icmp eq i64 %664, 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %634) #6
  br i1 %665, label %666, label %743

666:                                              ; preds = %631
  %667 = load i8*, i8** %589, align 8
  %668 = bitcast i64* %6 to [8 x i8]*
  %669 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %669) #6
  %670 = trunc i64 %258 to i8
  %671 = bitcast i64* %6 to i8*
  store i8 %670, i8* %671, align 8
  %672 = lshr i64 %258, 8
  %673 = trunc i64 %672 to i8
  %674 = getelementptr inbounds [8 x i8], [8 x i8]* %668, i64 0, i64 1
  store i8 %673, i8* %674, align 1
  %675 = lshr i64 %258, 16
  %676 = trunc i64 %675 to i8
  %677 = getelementptr inbounds [8 x i8], [8 x i8]* %668, i64 0, i64 2
  store i8 %676, i8* %677, align 2
  %678 = lshr i64 %258, 24
  %679 = trunc i64 %678 to i8
  %680 = getelementptr inbounds [8 x i8], [8 x i8]* %668, i64 0, i64 3
  store i8 %679, i8* %680, align 1
  %681 = lshr i64 %258, 32
  %682 = trunc i64 %681 to i8
  %683 = getelementptr inbounds [8 x i8], [8 x i8]* %668, i64 0, i64 4
  store i8 %682, i8* %683, align 4
  %684 = lshr i64 %258, 40
  %685 = trunc i64 %684 to i8
  %686 = getelementptr inbounds [8 x i8], [8 x i8]* %668, i64 0, i64 5
  store i8 %685, i8* %686, align 1
  %687 = lshr i64 %258, 48
  %688 = trunc i64 %687 to i8
  %689 = getelementptr inbounds [8 x i8], [8 x i8]* %668, i64 0, i64 6
  store i8 %688, i8* %689, align 2
  %690 = lshr i64 %258, 56
  %691 = trunc i64 %690 to i8
  %692 = getelementptr inbounds [8 x i8], [8 x i8]* %668, i64 0, i64 7
  store i8 %691, i8* %692, align 1
  %693 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %659, align 8
  %694 = load i8*, i8** %662, align 8
  %695 = call i64 %693(i8* %694, i8* %667, i8* nonnull %669, i64 8) #6
  %696 = icmp ne i64 %695, 8
  %697 = sext i1 %696 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %669) #6
  br label %743

698:                                              ; preds = %617
  %699 = icmp eq i32 %618, 0
  br i1 %699, label %700, label %743

700:                                              ; preds = %698
  %701 = load i8*, i8** %589, align 8
  %702 = bitcast i64* %7 to [8 x i8]*
  %703 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %703) #6
  store i64 -6148914691236517206, i64* %7, align 8
  %704 = trunc i64 %258 to i8
  %705 = bitcast i64* %7 to i8*
  store i8 %704, i8* %705, align 8
  %706 = lshr i64 %258, 8
  %707 = trunc i64 %706 to i8
  %708 = getelementptr inbounds [8 x i8], [8 x i8]* %702, i64 0, i64 1
  store i8 %707, i8* %708, align 1
  %709 = lshr i64 %258, 16
  %710 = trunc i64 %709 to i8
  %711 = getelementptr inbounds [8 x i8], [8 x i8]* %702, i64 0, i64 2
  store i8 %710, i8* %711, align 2
  %712 = lshr i64 %258, 24
  %713 = trunc i64 %712 to i8
  %714 = getelementptr inbounds [8 x i8], [8 x i8]* %702, i64 0, i64 3
  store i8 %713, i8* %714, align 1
  %715 = getelementptr inbounds i8, i8* %0, i64 16
  %716 = bitcast i8* %715 to i64 (i8*, i8*, i8*, i64)**
  %717 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %716, align 8
  %718 = getelementptr inbounds i8, i8* %0, i64 56
  %719 = bitcast i8* %718 to i8**
  %720 = load i8*, i8** %719, align 8
  %721 = call i64 %717(i8* %720, i8* %701, i8* nonnull %703, i64 4) #6
  %722 = icmp eq i64 %721, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %703) #6
  br i1 %722, label %723, label %743

723:                                              ; preds = %700
  %724 = load i8*, i8** %589, align 8
  %725 = bitcast i64* %8 to [8 x i8]*
  %726 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %726) #6
  store i64 -6148914691236517206, i64* %8, align 8
  %727 = trunc i64 %249 to i8
  %728 = bitcast i64* %8 to i8*
  store i8 %727, i8* %728, align 8
  %729 = lshr i64 %249, 8
  %730 = trunc i64 %729 to i8
  %731 = getelementptr inbounds [8 x i8], [8 x i8]* %725, i64 0, i64 1
  store i8 %730, i8* %731, align 1
  %732 = lshr i64 %249, 16
  %733 = trunc i64 %732 to i8
  %734 = getelementptr inbounds [8 x i8], [8 x i8]* %725, i64 0, i64 2
  store i8 %733, i8* %734, align 2
  %735 = lshr i64 %249, 24
  %736 = trunc i64 %735 to i8
  %737 = getelementptr inbounds [8 x i8], [8 x i8]* %725, i64 0, i64 3
  store i8 %736, i8* %737, align 1
  %738 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %716, align 8
  %739 = load i8*, i8** %719, align 8
  %740 = call i64 %738(i8* %739, i8* %724, i8* nonnull %726, i64 4) #6
  %741 = icmp ne i64 %740, 4
  %742 = sext i1 %741 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %726) #6
  br label %743

743:                                              ; preds = %698, %624, %619, %700, %723, %666, %631
  %744 = phi i32 [ %697, %666 ], [ -1, %631 ], [ %742, %723 ], [ -1, %700 ], [ -103, %619 ], [ -1, %624 ], [ -1, %698 ]
  %745 = load i8*, i8** %589, align 8
  %746 = call i64 @call_zseek64(%struct.zlib_filefunc64_32_def_s* nonnull %587, i8* %745, i64 %591, i32 0) #6
  %747 = icmp eq i64 %746, 0
  %748 = select i1 %747, i32 %744, i32 -1
  br label %749

749:                                              ; preds = %580, %743
  %750 = phi i32 [ %748, %743 ], [ %581, %580 ]
  %751 = getelementptr inbounds i8, i8* %0, i64 65936
  %752 = bitcast i8* %751 to i64*
  %753 = load i64, i64* %752, align 8
  %754 = add i64 %753, 1
  store i64 %754, i64* %752, align 8
  store i32 0, i32* %13, align 8
  br label %755

755:                                              ; preds = %350, %10, %3, %749
  %756 = phi i32 [ %750, %749 ], [ -102, %3 ], [ -102, %10 ], [ -103, %350 ]
  ret i32 %756
}

declare i32 @Cr_z_deflateEnd(%struct.z_stream_s*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Write_Zip64EndOfCentralDirectoryLocator(%struct.zip64_internal* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 6
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  store i64 -6148914693981975728, i64* %6, align 8
  %12 = sub i64 %1, %8
  %13 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 2
  %14 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %13, align 8
  %15 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  %16 = load i8*, i8** %15, align 8
  %17 = call i64 %14(i8* %16, i8* %10, i8* nonnull %11, i64 4) #6
  %18 = icmp eq i64 %17, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  br i1 %18, label %19, label %65

19:                                               ; preds = %2
  %20 = load i8*, i8** %9, align 8
  %21 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #6
  store i64 -6148914694099828736, i64* %5, align 8
  %22 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %13, align 8
  %23 = load i8*, i8** %15, align 8
  %24 = call i64 %22(i8* %23, i8* %20, i8* nonnull %21, i64 4) #6
  %25 = icmp eq i64 %24, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #6
  br i1 %25, label %26, label %65

26:                                               ; preds = %19
  %27 = load i8*, i8** %9, align 8
  %28 = bitcast i64* %4 to [8 x i8]*
  %29 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  %30 = trunc i64 %12 to i8
  %31 = bitcast i64* %4 to i8*
  store i8 %30, i8* %31, align 8
  %32 = lshr i64 %12, 8
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds [8 x i8], [8 x i8]* %28, i64 0, i64 1
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %12, 16
  %36 = trunc i64 %35 to i8
  %37 = getelementptr inbounds [8 x i8], [8 x i8]* %28, i64 0, i64 2
  store i8 %36, i8* %37, align 2
  %38 = lshr i64 %12, 24
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %28, i64 0, i64 3
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 32
  %42 = trunc i64 %41 to i8
  %43 = getelementptr inbounds [8 x i8], [8 x i8]* %28, i64 0, i64 4
  store i8 %42, i8* %43, align 4
  %44 = lshr i64 %12, 40
  %45 = trunc i64 %44 to i8
  %46 = getelementptr inbounds [8 x i8], [8 x i8]* %28, i64 0, i64 5
  store i8 %45, i8* %46, align 1
  %47 = lshr i64 %12, 48
  %48 = trunc i64 %47 to i8
  %49 = getelementptr inbounds [8 x i8], [8 x i8]* %28, i64 0, i64 6
  store i8 %48, i8* %49, align 2
  %50 = lshr i64 %12, 56
  %51 = trunc i64 %50 to i8
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %28, i64 0, i64 7
  store i8 %51, i8* %52, align 1
  %53 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %13, align 8
  %54 = load i8*, i8** %15, align 8
  %55 = call i64 %53(i8* %54, i8* %27, i8* nonnull %29, i64 8) #6
  %56 = icmp eq i64 %55, 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  br i1 %56, label %57, label %65

57:                                               ; preds = %26
  %58 = load i8*, i8** %9, align 8
  %59 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #6
  store i64 -6148914694099828735, i64* %3, align 8
  %60 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %13, align 8
  %61 = load i8*, i8** %15, align 8
  %62 = call i64 %60(i8* %61, i8* %58, i8* nonnull %59, i64 4) #6
  %63 = icmp ne i64 %62, 4
  %64 = sext i1 %63 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #6
  br label %65

65:                                               ; preds = %2, %19, %57, %26
  %66 = phi i32 [ %64, %57 ], [ -1, %26 ], [ -1, %19 ], [ -1, %2 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Write_Zip64EndOfCentralDirectoryRecord(%struct.zip64_internal* nocapture readonly, i64, i64) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  store i64 -6148914693998752944, i64* %13, align 8
  %17 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %19 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  %20 = load i8*, i8** %19, align 8
  %21 = call i64 %18(i8* %20, i8* %15, i8* nonnull %16, i64 4) #6
  %22 = icmp eq i64 %21, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br i1 %22, label %23, label %191

23:                                               ; preds = %3
  %24 = load i8*, i8** %14, align 8
  %25 = bitcast i64* %12 to [8 x i8]*
  %26 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  store i64 -6148914691236517332, i64* %12, align 8
  %27 = getelementptr inbounds [8 x i8], [8 x i8]* %25, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %27, i8 0, i64 7, i1 false)
  %28 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %29 = load i8*, i8** %19, align 8
  %30 = call i64 %28(i8* %29, i8* %24, i8* nonnull %26, i64 8) #6
  %31 = icmp eq i64 %30, 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  br i1 %31, label %32, label %191

32:                                               ; preds = %23
  %33 = load i8*, i8** %14, align 8
  %34 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  store i64 -6148914691236560851, i64* %11, align 8
  %35 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %36 = load i8*, i8** %19, align 8
  %37 = call i64 %35(i8* %36, i8* %33, i8* nonnull %34, i64 2) #6
  %38 = icmp eq i64 %37, 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br i1 %38, label %39, label %191

39:                                               ; preds = %32
  %40 = load i8*, i8** %14, align 8
  %41 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #6
  store i64 -6148914691236560851, i64* %10, align 8
  %42 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %43 = load i8*, i8** %19, align 8
  %44 = call i64 %42(i8* %43, i8* %40, i8* nonnull %41, i64 2) #6
  %45 = icmp eq i64 %44, 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #6
  br i1 %45, label %46, label %191

46:                                               ; preds = %39
  %47 = load i8*, i8** %14, align 8
  %48 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #6
  store i64 -6148914694099828736, i64* %9, align 8
  %49 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %50 = load i8*, i8** %19, align 8
  %51 = call i64 %49(i8* %50, i8* %47, i8* nonnull %48, i64 4) #6
  %52 = icmp eq i64 %51, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #6
  br i1 %52, label %53, label %191

53:                                               ; preds = %46
  %54 = load i8*, i8** %14, align 8
  %55 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #6
  store i64 -6148914694099828736, i64* %8, align 8
  %56 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %57 = load i8*, i8** %19, align 8
  %58 = call i64 %56(i8* %57, i8* %54, i8* nonnull %55, i64 4) #6
  %59 = icmp eq i64 %58, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #6
  br i1 %59, label %60, label %191

60:                                               ; preds = %53
  %61 = load i8*, i8** %14, align 8
  %62 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 7
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i64* %7 to [8 x i8]*
  %65 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #6
  %66 = trunc i64 %63 to i8
  %67 = bitcast i64* %7 to i8*
  store i8 %66, i8* %67, align 8
  %68 = lshr i64 %63, 8
  %69 = trunc i64 %68 to i8
  %70 = getelementptr inbounds [8 x i8], [8 x i8]* %64, i64 0, i64 1
  store i8 %69, i8* %70, align 1
  %71 = lshr i64 %63, 16
  %72 = trunc i64 %71 to i8
  %73 = getelementptr inbounds [8 x i8], [8 x i8]* %64, i64 0, i64 2
  store i8 %72, i8* %73, align 2
  %74 = lshr i64 %63, 24
  %75 = trunc i64 %74 to i8
  %76 = getelementptr inbounds [8 x i8], [8 x i8]* %64, i64 0, i64 3
  store i8 %75, i8* %76, align 1
  %77 = lshr i64 %63, 32
  %78 = trunc i64 %77 to i8
  %79 = getelementptr inbounds [8 x i8], [8 x i8]* %64, i64 0, i64 4
  store i8 %78, i8* %79, align 4
  %80 = lshr i64 %63, 40
  %81 = trunc i64 %80 to i8
  %82 = getelementptr inbounds [8 x i8], [8 x i8]* %64, i64 0, i64 5
  store i8 %81, i8* %82, align 1
  %83 = lshr i64 %63, 48
  %84 = trunc i64 %83 to i8
  %85 = getelementptr inbounds [8 x i8], [8 x i8]* %64, i64 0, i64 6
  store i8 %84, i8* %85, align 2
  %86 = lshr i64 %63, 56
  %87 = trunc i64 %86 to i8
  %88 = getelementptr inbounds [8 x i8], [8 x i8]* %64, i64 0, i64 7
  store i8 %87, i8* %88, align 1
  %89 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %90 = load i8*, i8** %19, align 8
  %91 = call i64 %89(i8* %90, i8* %61, i8* nonnull %65, i64 8) #6
  %92 = icmp eq i64 %91, 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #6
  br i1 %92, label %93, label %191

93:                                               ; preds = %60
  %94 = load i8*, i8** %14, align 8
  %95 = load i64, i64* %62, align 8
  %96 = bitcast i64* %6 to [8 x i8]*
  %97 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #6
  %98 = trunc i64 %95 to i8
  %99 = bitcast i64* %6 to i8*
  store i8 %98, i8* %99, align 8
  %100 = lshr i64 %95, 8
  %101 = trunc i64 %100 to i8
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %96, i64 0, i64 1
  store i8 %101, i8* %102, align 1
  %103 = lshr i64 %95, 16
  %104 = trunc i64 %103 to i8
  %105 = getelementptr inbounds [8 x i8], [8 x i8]* %96, i64 0, i64 2
  store i8 %104, i8* %105, align 2
  %106 = lshr i64 %95, 24
  %107 = trunc i64 %106 to i8
  %108 = getelementptr inbounds [8 x i8], [8 x i8]* %96, i64 0, i64 3
  store i8 %107, i8* %108, align 1
  %109 = lshr i64 %95, 32
  %110 = trunc i64 %109 to i8
  %111 = getelementptr inbounds [8 x i8], [8 x i8]* %96, i64 0, i64 4
  store i8 %110, i8* %111, align 4
  %112 = lshr i64 %95, 40
  %113 = trunc i64 %112 to i8
  %114 = getelementptr inbounds [8 x i8], [8 x i8]* %96, i64 0, i64 5
  store i8 %113, i8* %114, align 1
  %115 = lshr i64 %95, 48
  %116 = trunc i64 %115 to i8
  %117 = getelementptr inbounds [8 x i8], [8 x i8]* %96, i64 0, i64 6
  store i8 %116, i8* %117, align 2
  %118 = lshr i64 %95, 56
  %119 = trunc i64 %118 to i8
  %120 = getelementptr inbounds [8 x i8], [8 x i8]* %96, i64 0, i64 7
  store i8 %119, i8* %120, align 1
  %121 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %122 = load i8*, i8** %19, align 8
  %123 = call i64 %121(i8* %122, i8* %94, i8* nonnull %97, i64 8) #6
  %124 = icmp eq i64 %123, 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #6
  br i1 %124, label %125, label %191

125:                                              ; preds = %93
  %126 = load i8*, i8** %14, align 8
  %127 = bitcast i64* %5 to [8 x i8]*
  %128 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #6
  %129 = trunc i64 %1 to i8
  %130 = bitcast i64* %5 to i8*
  store i8 %129, i8* %130, align 8
  %131 = lshr i64 %1, 8
  %132 = trunc i64 %131 to i8
  %133 = getelementptr inbounds [8 x i8], [8 x i8]* %127, i64 0, i64 1
  store i8 %132, i8* %133, align 1
  %134 = lshr i64 %1, 16
  %135 = trunc i64 %134 to i8
  %136 = getelementptr inbounds [8 x i8], [8 x i8]* %127, i64 0, i64 2
  store i8 %135, i8* %136, align 2
  %137 = lshr i64 %1, 24
  %138 = trunc i64 %137 to i8
  %139 = getelementptr inbounds [8 x i8], [8 x i8]* %127, i64 0, i64 3
  store i8 %138, i8* %139, align 1
  %140 = lshr i64 %1, 32
  %141 = trunc i64 %140 to i8
  %142 = getelementptr inbounds [8 x i8], [8 x i8]* %127, i64 0, i64 4
  store i8 %141, i8* %142, align 4
  %143 = lshr i64 %1, 40
  %144 = trunc i64 %143 to i8
  %145 = getelementptr inbounds [8 x i8], [8 x i8]* %127, i64 0, i64 5
  store i8 %144, i8* %145, align 1
  %146 = lshr i64 %1, 48
  %147 = trunc i64 %146 to i8
  %148 = getelementptr inbounds [8 x i8], [8 x i8]* %127, i64 0, i64 6
  store i8 %147, i8* %148, align 2
  %149 = lshr i64 %1, 56
  %150 = trunc i64 %149 to i8
  %151 = getelementptr inbounds [8 x i8], [8 x i8]* %127, i64 0, i64 7
  store i8 %150, i8* %151, align 1
  %152 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %153 = load i8*, i8** %19, align 8
  %154 = call i64 %152(i8* %153, i8* %126, i8* nonnull %128, i64 8) #6
  %155 = icmp eq i64 %154, 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #6
  br i1 %155, label %156, label %191

156:                                              ; preds = %125
  %157 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 6
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %2, %158
  %160 = load i8*, i8** %14, align 8
  %161 = bitcast i64* %4 to [8 x i8]*
  %162 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #6
  %163 = trunc i64 %159 to i8
  %164 = bitcast i64* %4 to i8*
  store i8 %163, i8* %164, align 8
  %165 = lshr i64 %159, 8
  %166 = trunc i64 %165 to i8
  %167 = getelementptr inbounds [8 x i8], [8 x i8]* %161, i64 0, i64 1
  store i8 %166, i8* %167, align 1
  %168 = lshr i64 %159, 16
  %169 = trunc i64 %168 to i8
  %170 = getelementptr inbounds [8 x i8], [8 x i8]* %161, i64 0, i64 2
  store i8 %169, i8* %170, align 2
  %171 = lshr i64 %159, 24
  %172 = trunc i64 %171 to i8
  %173 = getelementptr inbounds [8 x i8], [8 x i8]* %161, i64 0, i64 3
  store i8 %172, i8* %173, align 1
  %174 = lshr i64 %159, 32
  %175 = trunc i64 %174 to i8
  %176 = getelementptr inbounds [8 x i8], [8 x i8]* %161, i64 0, i64 4
  store i8 %175, i8* %176, align 4
  %177 = lshr i64 %159, 40
  %178 = trunc i64 %177 to i8
  %179 = getelementptr inbounds [8 x i8], [8 x i8]* %161, i64 0, i64 5
  store i8 %178, i8* %179, align 1
  %180 = lshr i64 %159, 48
  %181 = trunc i64 %180 to i8
  %182 = getelementptr inbounds [8 x i8], [8 x i8]* %161, i64 0, i64 6
  store i8 %181, i8* %182, align 2
  %183 = lshr i64 %159, 56
  %184 = trunc i64 %183 to i8
  %185 = getelementptr inbounds [8 x i8], [8 x i8]* %161, i64 0, i64 7
  store i8 %184, i8* %185, align 1
  %186 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %187 = load i8*, i8** %19, align 8
  %188 = call i64 %186(i8* %187, i8* %160, i8* nonnull %162, i64 8) #6
  %189 = icmp ne i64 %188, 8
  %190 = sext i1 %189 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #6
  br label %191

191:                                              ; preds = %3, %23, %32, %39, %46, %53, %60, %93, %156, %125
  %192 = phi i32 [ %190, %156 ], [ -1, %125 ], [ -1, %93 ], [ -1, %60 ], [ -1, %53 ], [ -1, %46 ], [ -1, %39 ], [ -1, %32 ], [ -1, %23 ], [ -1, %3 ]
  ret i32 %192
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Write_EndOfCentralDirectoryRecord(%struct.zip64_internal* nocapture readonly, i64, i64) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  store i64 -6148914693998818480, i64* %13, align 8
  %17 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %19 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  %20 = load i8*, i8** %19, align 8
  %21 = call i64 %18(i8* %20, i8* %15, i8* nonnull %16, i64 4) #6
  %22 = icmp eq i64 %21, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br i1 %22, label %23, label %141

23:                                               ; preds = %3
  %24 = load i8*, i8** %14, align 8
  %25 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  store i64 -6148914691236560896, i64* %12, align 8
  %26 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %27 = load i8*, i8** %19, align 8
  %28 = call i64 %26(i8* %27, i8* %24, i8* nonnull %25, i64 2) #6
  %29 = icmp eq i64 %28, 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  br i1 %29, label %30, label %141

30:                                               ; preds = %23
  %31 = load i8*, i8** %14, align 8
  %32 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  store i64 -6148914691236560896, i64* %11, align 8
  %33 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %34 = load i8*, i8** %19, align 8
  %35 = call i64 %33(i8* %34, i8* %31, i8* nonnull %32, i64 2) #6
  %36 = icmp eq i64 %35, 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br i1 %36, label %37, label %141

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 7
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %39, 65534
  %41 = load i8*, i8** %14, align 8
  br i1 %40, label %42, label %47

42:                                               ; preds = %37
  %43 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #6
  store i64 -6148914691236495361, i64* %10, align 8
  %44 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %45 = load i8*, i8** %19, align 8
  %46 = call i64 %44(i8* %45, i8* %41, i8* nonnull %43, i64 2) #6
  br label %58

47:                                               ; preds = %37
  %48 = bitcast i64* %9 to [8 x i8]*
  %49 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #6
  store i64 -6148914691236517206, i64* %9, align 8
  %50 = trunc i64 %39 to i8
  %51 = bitcast i64* %9 to i8*
  store i8 %50, i8* %51, align 8
  %52 = lshr i64 %39, 8
  %53 = trunc i64 %52 to i8
  %54 = getelementptr inbounds [8 x i8], [8 x i8]* %48, i64 0, i64 1
  store i8 %53, i8* %54, align 1
  %55 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %56 = load i8*, i8** %19, align 8
  %57 = call i64 %55(i8* %56, i8* %41, i8* nonnull %49, i64 2) #6
  br label %58

58:                                               ; preds = %42, %47
  %59 = phi i8* [ %43, %42 ], [ %49, %47 ]
  %60 = phi i64 [ %46, %42 ], [ %57, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #6
  %61 = icmp eq i64 %60, 2
  br i1 %61, label %62, label %141

62:                                               ; preds = %58
  %63 = load i64, i64* %38, align 8
  %64 = icmp ugt i64 %63, 65534
  %65 = load i8*, i8** %14, align 8
  br i1 %64, label %66, label %71

66:                                               ; preds = %62
  %67 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #6
  store i64 -6148914691236495361, i64* %8, align 8
  %68 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %69 = load i8*, i8** %19, align 8
  %70 = call i64 %68(i8* %69, i8* %65, i8* nonnull %67, i64 2) #6
  br label %82

71:                                               ; preds = %62
  %72 = bitcast i64* %7 to [8 x i8]*
  %73 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  store i64 -6148914691236517206, i64* %7, align 8
  %74 = trunc i64 %63 to i8
  %75 = bitcast i64* %7 to i8*
  store i8 %74, i8* %75, align 8
  %76 = lshr i64 %63, 8
  %77 = trunc i64 %76 to i8
  %78 = getelementptr inbounds [8 x i8], [8 x i8]* %72, i64 0, i64 1
  store i8 %77, i8* %78, align 1
  %79 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %80 = load i8*, i8** %19, align 8
  %81 = call i64 %79(i8* %80, i8* %65, i8* nonnull %73, i64 2) #6
  br label %82

82:                                               ; preds = %66, %71
  %83 = phi i8* [ %67, %66 ], [ %73, %71 ]
  %84 = phi i64 [ %70, %66 ], [ %81, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #6
  %85 = icmp eq i64 %84, 2
  br i1 %85, label %86, label %141

86:                                               ; preds = %82
  %87 = load i8*, i8** %14, align 8
  %88 = bitcast i64* %6 to [8 x i8]*
  %89 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #6
  store i64 -6148914691236517206, i64* %6, align 8
  %90 = trunc i64 %1 to i8
  %91 = bitcast i64* %6 to i8*
  store i8 %90, i8* %91, align 8
  %92 = lshr i64 %1, 8
  %93 = trunc i64 %92 to i8
  %94 = getelementptr inbounds [8 x i8], [8 x i8]* %88, i64 0, i64 1
  store i8 %93, i8* %94, align 1
  %95 = lshr i64 %1, 16
  %96 = trunc i64 %95 to i8
  %97 = getelementptr inbounds [8 x i8], [8 x i8]* %88, i64 0, i64 2
  store i8 %96, i8* %97, align 2
  %98 = lshr i64 %1, 24
  %99 = trunc i64 %98 to i8
  %100 = getelementptr inbounds [8 x i8], [8 x i8]* %88, i64 0, i64 3
  store i8 %99, i8* %100, align 1
  %101 = icmp ult i64 %1, 4294967296
  br i1 %101, label %104, label %102

102:                                              ; preds = %86
  %103 = bitcast i64* %6 to i32*
  store i32 -1, i32* %103, align 8
  br label %104

104:                                              ; preds = %86, %102
  %105 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %106 = load i8*, i8** %19, align 8
  %107 = call i64 %105(i8* %106, i8* %87, i8* nonnull %89, i64 4) #6
  %108 = icmp eq i64 %107, 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #6
  br i1 %108, label %109, label %141

109:                                              ; preds = %104
  %110 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 6
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %2, %111
  %113 = icmp ugt i64 %112, 4294967294
  %114 = load i8*, i8** %14, align 8
  br i1 %113, label %115, label %122

115:                                              ; preds = %109
  %116 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #6
  store i64 -6148914689804861441, i64* %5, align 8
  %117 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %118 = load i8*, i8** %19, align 8
  %119 = call i64 %117(i8* %118, i8* %114, i8* nonnull %116, i64 4) #6
  %120 = icmp ne i64 %119, 4
  %121 = sext i1 %120 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #6
  br label %141

122:                                              ; preds = %109
  %123 = bitcast i64* %4 to [8 x i8]*
  %124 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #6
  store i64 -6148914691236517206, i64* %4, align 8
  %125 = trunc i64 %112 to i8
  %126 = bitcast i64* %4 to i8*
  store i8 %125, i8* %126, align 8
  %127 = lshr i64 %112, 8
  %128 = trunc i64 %127 to i8
  %129 = getelementptr inbounds [8 x i8], [8 x i8]* %123, i64 0, i64 1
  store i8 %128, i8* %129, align 1
  %130 = lshr i64 %112, 16
  %131 = trunc i64 %130 to i8
  %132 = getelementptr inbounds [8 x i8], [8 x i8]* %123, i64 0, i64 2
  store i8 %131, i8* %132, align 2
  %133 = lshr i64 %112, 24
  %134 = trunc i64 %133 to i8
  %135 = getelementptr inbounds [8 x i8], [8 x i8]* %123, i64 0, i64 3
  store i8 %134, i8* %135, align 1
  %136 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %17, align 8
  %137 = load i8*, i8** %19, align 8
  %138 = call i64 %136(i8* %137, i8* %114, i8* nonnull %124, i64 4) #6
  %139 = icmp ne i64 %138, 4
  %140 = sext i1 %139 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #6
  br label %141

141:                                              ; preds = %82, %58, %3, %23, %30, %115, %122, %104
  %142 = phi i32 [ -1, %104 ], [ %121, %115 ], [ %140, %122 ], [ -1, %82 ], [ -1, %58 ], [ -1, %30 ], [ -1, %23 ], [ -1, %3 ]
  ret i32 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Write_GlobalComment(%struct.zip64_internal* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = icmp eq i8* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = tail call i64 @strlen(i8* nonnull %1) #7
  %7 = trunc i64 %6 to i32
  br label %8

8:                                                ; preds = %2, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %2 ]
  %10 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = zext i32 %9 to i64
  %13 = bitcast i64* %3 to [8 x i8]*
  %14 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  store i64 -6148914691236517206, i64* %3, align 8
  %15 = trunc i32 %9 to i8
  %16 = bitcast i64* %3 to i8*
  store i8 %15, i8* %16, align 8
  %17 = lshr i32 %9, 8
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds [8 x i8], [8 x i8]* %13, i64 0, i64 1
  store i8 %18, i8* %19, align 1
  %20 = and i64 %12, 4294901760
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %8
  %23 = bitcast i64* %3 to i16*
  store i16 -1, i16* %23, align 8
  br label %24

24:                                               ; preds = %8, %22
  %25 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 2
  %26 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %25, align 8
  %27 = getelementptr inbounds %struct.zip64_internal, %struct.zip64_internal* %0, i64 0, i32 0, i32 0, i32 7
  %28 = load i8*, i8** %27, align 8
  %29 = call i64 %26(i8* %28, i8* %11, i8* nonnull %14, i64 2) #6
  %30 = icmp ne i64 %29, 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  %31 = xor i1 %30, true
  %32 = icmp ne i32 %9, 0
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %41

34:                                               ; preds = %24
  %35 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %25, align 8
  %36 = load i8*, i8** %27, align 8
  %37 = load i8*, i8** %10, align 8
  %38 = call i64 %35(i8* %36, i8* %37, i8* %1, i64 %12) #6
  %39 = icmp ne i64 %38, %12
  %40 = sext i1 %39 to i32
  ret i32 %40

41:                                               ; preds = %24
  %42 = sext i1 %30 to i32
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipClose(i8*, i8*) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = icmp eq i8* %0, null
  br i1 %4, label %157, label %5

5:                                                ; preds = %2
  %6 = bitcast i8* %0 to %struct.zip64_internal*
  %7 = getelementptr inbounds i8, i8* %0, i64 112
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = tail call i32 @zipCloseFileInZipRaw64(i8* nonnull %0, i64 0, i64 0) #6
  br label %13

13:                                               ; preds = %11, %5
  %14 = phi i32 [ %12, %11 ], [ 0, %5 ]
  %15 = icmp eq i8* %1, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, i8* %0, i64 65944
  %18 = bitcast i8* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %16, %13
  %21 = phi i8* [ %19, %16 ], [ %1, %13 ]
  %22 = bitcast i8* %0 to %struct.zlib_filefunc64_32_def_s*
  %23 = getelementptr inbounds i8, i8* %0, i64 88
  %24 = bitcast i8* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i64 @call_ztell64(%struct.zlib_filefunc64_32_def_s* nonnull %22, i8* %25) #6
  %27 = icmp eq i32 %14, 0
  br i1 %27, label %28, label %63

28:                                               ; preds = %20
  %29 = getelementptr inbounds i8, i8* %0, i64 96
  %30 = bitcast i8* %29 to %struct.linkedlist_datablock_internal_s**
  %31 = load %struct.linkedlist_datablock_internal_s*, %struct.linkedlist_datablock_internal_s** %30, align 8
  %32 = icmp eq %struct.linkedlist_datablock_internal_s* %31, null
  br i1 %32, label %63, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds i8, i8* %0, i64 16
  %35 = bitcast i8* %34 to i64 (i8*, i8*, i8*, i64)**
  %36 = getelementptr inbounds i8, i8* %0, i64 56
  %37 = bitcast i8* %36 to i8**
  br label %38

38:                                               ; preds = %33, %56
  %39 = phi %struct.linkedlist_datablock_internal_s* [ %31, %33 ], [ %61, %56 ]
  %40 = phi i64 [ 0, %33 ], [ %59, %56 ]
  %41 = phi i32 [ 0, %33 ], [ %58, %56 ]
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %39, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  br i1 %42, label %45, label %56

45:                                               ; preds = %38
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %45
  %48 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %35, align 8
  %49 = load i8*, i8** %37, align 8
  %50 = load i8*, i8** %24, align 8
  %51 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %39, i64 0, i32 4, i64 0
  %52 = tail call i64 %48(i8* %49, i8* %50, i8* %51, i64 %44) #6
  %53 = load i64, i64* %43, align 8
  %54 = icmp ne i64 %52, %53
  %55 = sext i1 %54 to i32
  br label %56

56:                                               ; preds = %38, %47, %45
  %57 = phi i64 [ 0, %45 ], [ %53, %47 ], [ %44, %38 ]
  %58 = phi i32 [ 0, %45 ], [ %55, %47 ], [ %41, %38 ]
  %59 = add i64 %57, %40
  %60 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %39, i64 0, i32 0
  %61 = load %struct.linkedlist_datablock_internal_s*, %struct.linkedlist_datablock_internal_s** %60, align 8
  %62 = icmp eq %struct.linkedlist_datablock_internal_s* %61, null
  br i1 %62, label %63, label %38

63:                                               ; preds = %56, %20, %28
  %64 = phi i32 [ 0, %28 ], [ %14, %20 ], [ %58, %56 ]
  %65 = phi i64 [ 0, %28 ], [ 0, %20 ], [ %59, %56 ]
  %66 = getelementptr inbounds i8, i8* %0, i64 96
  %67 = bitcast i8* %66 to %struct.linkedlist_datablock_internal_s**
  %68 = load %struct.linkedlist_datablock_internal_s*, %struct.linkedlist_datablock_internal_s** %67, align 8
  %69 = icmp eq %struct.linkedlist_datablock_internal_s* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %63, %70
  %71 = phi %struct.linkedlist_datablock_internal_s* [ %73, %70 ], [ %68, %63 ]
  %72 = getelementptr inbounds %struct.linkedlist_datablock_internal_s, %struct.linkedlist_datablock_internal_s* %71, i64 0, i32 0
  %73 = load %struct.linkedlist_datablock_internal_s*, %struct.linkedlist_datablock_internal_s** %72, align 8
  %74 = bitcast %struct.linkedlist_datablock_internal_s* %71 to i8*
  tail call void @free(i8* %74) #6
  %75 = icmp eq %struct.linkedlist_datablock_internal_s* %73, null
  br i1 %75, label %76, label %70

76:                                               ; preds = %70, %63
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #6
  %77 = getelementptr inbounds i8, i8* %0, i64 65928
  %78 = bitcast i8* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %26, %79
  %81 = icmp ugt i64 %80, 4294967294
  br i1 %81, label %87, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds i8, i8* %0, i64 65936
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ugt i64 %85, 65535
  br i1 %86, label %87, label %92

87:                                               ; preds = %82, %76
  %88 = load i8*, i8** %24, align 8
  %89 = tail call i64 @call_ztell64(%struct.zlib_filefunc64_32_def_s* nonnull %22, i8* %88) #6
  %90 = tail call i32 @Write_Zip64EndOfCentralDirectoryRecord(%struct.zip64_internal* nonnull %6, i64 %65, i64 %26)
  %91 = tail call i32 @Write_Zip64EndOfCentralDirectoryLocator(%struct.zip64_internal* nonnull %6, i64 %89)
  br label %92

92:                                               ; preds = %87, %82
  %93 = icmp eq i32 %64, 0
  br i1 %93, label %94, label %137

94:                                               ; preds = %92
  %95 = tail call i32 @Write_EndOfCentralDirectoryRecord(%struct.zip64_internal* nonnull %6, i64 %65, i64 %26)
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %137

97:                                               ; preds = %94
  %98 = icmp eq i8* %21, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %97
  %100 = tail call i64 @strlen(i8* nonnull %21) #7
  %101 = trunc i64 %100 to i32
  br label %102

102:                                              ; preds = %99, %97
  %103 = phi i32 [ %101, %99 ], [ 0, %97 ]
  %104 = load i8*, i8** %24, align 8
  %105 = zext i32 %103 to i64
  %106 = bitcast i64* %3 to [8 x i8]*
  %107 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #6
  store i64 -6148914691236517206, i64* %3, align 8
  %108 = trunc i32 %103 to i8
  store i8 %108, i8* %107, align 8
  %109 = lshr i32 %103, 8
  %110 = trunc i32 %109 to i8
  %111 = getelementptr inbounds [8 x i8], [8 x i8]* %106, i64 0, i64 1
  store i8 %110, i8* %111, align 1
  %112 = and i64 %105, 4294901760
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %102
  %115 = bitcast i64* %3 to i16*
  store i16 -1, i16* %115, align 8
  br label %116

116:                                              ; preds = %114, %102
  %117 = getelementptr inbounds i8, i8* %0, i64 16
  %118 = bitcast i8* %117 to i64 (i8*, i8*, i8*, i64)**
  %119 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %118, align 8
  %120 = getelementptr inbounds i8, i8* %0, i64 56
  %121 = bitcast i8* %120 to i8**
  %122 = load i8*, i8** %121, align 8
  %123 = call i64 %119(i8* %122, i8* %104, i8* nonnull %107, i64 2) #6
  %124 = icmp ne i64 %123, 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #6
  %125 = xor i1 %124, true
  %126 = icmp ne i32 %103, 0
  %127 = and i1 %126, %125
  br i1 %127, label %128, label %135

128:                                              ; preds = %116
  %129 = load i64 (i8*, i8*, i8*, i64)*, i64 (i8*, i8*, i8*, i64)** %118, align 8
  %130 = load i8*, i8** %121, align 8
  %131 = load i8*, i8** %24, align 8
  %132 = call i64 %129(i8* %130, i8* %131, i8* %21, i64 %105) #6
  %133 = icmp ne i64 %132, %105
  %134 = sext i1 %133 to i32
  br label %137

135:                                              ; preds = %116
  %136 = sext i1 %124 to i32
  br label %137

137:                                              ; preds = %92, %128, %135, %94
  %138 = phi i32 [ %95, %94 ], [ %134, %128 ], [ %136, %135 ], [ %64, %92 ]
  %139 = getelementptr inbounds i8, i8* %0, i64 40
  %140 = bitcast i8* %139 to i32 (i8*, i8*)**
  %141 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %140, align 8
  %142 = getelementptr inbounds i8, i8* %0, i64 56
  %143 = bitcast i8* %142 to i8**
  %144 = load i8*, i8** %143, align 8
  %145 = load i8*, i8** %24, align 8
  %146 = call i32 %141(i8* %144, i8* %145) #6
  %147 = icmp ne i32 %146, 0
  %148 = icmp eq i32 %138, 0
  %149 = and i1 %148, %147
  %150 = select i1 %149, i32 -1, i32 %138
  %151 = getelementptr inbounds i8, i8* %0, i64 65944
  %152 = bitcast i8* %151 to i8**
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %156, label %155

155:                                              ; preds = %137
  call void @free(i8* nonnull %153) #6
  br label %156

156:                                              ; preds = %155, %137
  call void @free(i8* %0) #6
  br label %157

157:                                              ; preds = %2, %156
  %158 = phi i32 [ %150, %156 ], [ -102, %2 ]
  ret i32 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @zipRemoveExtraInfoBlock(i8*, i32* nocapture, i16 signext) local_unnamed_addr #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %1, align 4
  %7 = icmp slt i32 %6, 4
  br i1 %7, label %45, label %8

8:                                                ; preds = %5
  %9 = sext i32 %6 to i64
  %10 = tail call noalias i8* @malloc(i64 %9) #6
  %11 = getelementptr inbounds i8, i8* %0, i64 %9
  br label %12

12:                                               ; preds = %8, %29
  %13 = phi i32 [ %31, %29 ], [ 0, %8 ]
  %14 = phi i8* [ %32, %29 ], [ %0, %8 ]
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 2
  %17 = getelementptr inbounds i8, i8* %14, i64 2
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %16, %2
  br i1 %20, label %21, label %24

21:                                               ; preds = %12
  %22 = sext i16 %19 to i64
  %23 = add nsw i64 %22, 4
  br label %29

24:                                               ; preds = %12
  %25 = sext i16 %19 to i32
  %26 = add nsw i32 %25, 4
  %27 = sext i32 %26 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %14, i64 %27, i1 false)
  %28 = add nsw i32 %26, %13
  br label %29

29:                                               ; preds = %24, %21
  %30 = phi i64 [ %23, %21 ], [ %27, %24 ]
  %31 = phi i32 [ %13, %21 ], [ %28, %24 ]
  %32 = getelementptr inbounds i8, i8* %14, i64 %30
  %33 = icmp ult i8* %32, %11
  br i1 %33, label %12, label %34

34:                                               ; preds = %29
  %35 = icmp slt i32 %31, %6
  br i1 %35, label %36, label %41

36:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %0, i8 0, i64 %9, i1 false)
  %37 = icmp sgt i32 %31, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = sext i32 %31 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %0, i8* align 1 %10, i64 %39, i1 false)
  br label %40

40:                                               ; preds = %38, %36
  store i32 %31, i32* %1, align 4
  br label %41

41:                                               ; preds = %34, %40
  %42 = phi i32 [ 0, %40 ], [ -1, %34 ]
  %43 = icmp eq i8* %10, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  tail call void @free(i8* nonnull %10) #6
  br label %45

45:                                               ; preds = %44, %41, %3, %5
  %46 = phi i32 [ -102, %5 ], [ -102, %3 ], [ %42, %41 ], [ %42, %44 ]
  ret i32 %46
}

; Function Attrs: nounwind
declare void @srand(i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @rand() local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !11}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !8}
!21 = distinct !{!21, !8}
