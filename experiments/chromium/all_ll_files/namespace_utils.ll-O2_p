; ModuleID = '../../sandbox/linux/services/namespace_utils.cc'
source_filename = "../../sandbox/linux/services/namespace_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::strings::internal::Arg" = type <{ %union.anon.1, i32, [4 x i8] }>
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { i64, i8 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@.str = private unnamed_addr constant [9 x i8] c"%d %d 1\0A\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"Check failed: IGNORE_EINTR(close(fd)) == 0\0A\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"/proc/self/ns/user\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"/proc/self/ns/ipc\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"/proc/self/ns/net\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"/proc/self/ns/mnt\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"/proc/self/ns/pid\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"/proc/self/ns/uts\00", align 1
@_ZN7sandbox12_GLOBAL__N_118kProcSelfSetgroupsE = internal constant [21 x i8] c"/proc/self/setgroups\00", align 16
@_ZZN7sandbox14NamespaceUtils13DenySetgroupsEvE5kDeny = internal constant [5 x i8] c"deny\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14NamespaceUtils16WriteToIdMapFileEPKcj(i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x %"struct.base::strings::internal::Arg"], align 16
  %4 = alloca [64 x i8], align 16
  br label %5

5:                                                ; preds = %8, %2
  %6 = tail call i32 (i8*, i32, ...) @open64(i8* %0, i32 1) #6
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %12

8:                                                ; preds = %5
  %9 = tail call i32* @__errno_location() #7
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %5, label %40

12:                                               ; preds = %5
  %13 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 64, i1 false)
  %14 = bitcast [2 x %"struct.base::strings::internal::Arg"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 48, i1 false) #6
  %15 = getelementptr inbounds [2 x %"struct.base::strings::internal::Arg"], [2 x %"struct.base::strings::internal::Arg"]* %3, i64 0, i64 0
  %16 = getelementptr inbounds [2 x %"struct.base::strings::internal::Arg"], [2 x %"struct.base::strings::internal::Arg"]* %3, i64 0, i64 0, i32 1
  store i32 1, i32* %16, align 16
  %17 = zext i32 %1 to i64
  %18 = getelementptr inbounds [2 x %"struct.base::strings::internal::Arg"], [2 x %"struct.base::strings::internal::Arg"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 16
  %19 = getelementptr inbounds [2 x %"struct.base::strings::internal::Arg"], [2 x %"struct.base::strings::internal::Arg"]* %3, i64 0, i64 0, i32 0, i32 0, i32 1
  store i8 4, i8* %19, align 8
  %20 = getelementptr inbounds [2 x %"struct.base::strings::internal::Arg"], [2 x %"struct.base::strings::internal::Arg"]* %3, i64 0, i64 1, i32 1
  store i32 1, i32* %20, align 8
  %21 = getelementptr inbounds [2 x %"struct.base::strings::internal::Arg"], [2 x %"struct.base::strings::internal::Arg"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  store i64 %17, i64* %21, align 8
  %22 = getelementptr inbounds [2 x %"struct.base::strings::internal::Arg"], [2 x %"struct.base::strings::internal::Arg"]* %3, i64 0, i64 1, i32 0, i32 0, i32 1
  store i8 4, i8* %22, align 8
  %23 = call i64 @_ZN4base7strings8internal12SafeSNPrintfEPcmPKcPKNS1_3ArgEm(i8* nonnull %13, i64 64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), %"struct.base::strings::internal::Arg"* nonnull %15, i64 2) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #6
  br label %24

24:                                               ; preds = %27, %12
  %25 = call i64 @write(i32 %6, i8* nonnull %13, i64 %23) #6
  %26 = icmp eq i64 %25, -1
  br i1 %26, label %27, label %31

27:                                               ; preds = %24
  %28 = tail call i32* @__errno_location() #7
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 4
  br i1 %30, label %24, label %31

31:                                               ; preds = %24, %27
  %32 = call i32 @close(i32 %6) #6
  switch i32 %32, label %37 [
    i32 -1, label %33
    i32 0, label %38
  ]

33:                                               ; preds = %31
  %34 = tail call i32* @__errno_location() #7
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 4
  br i1 %36, label %38, label %37

37:                                               ; preds = %31, %33
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #6
  br label %38

38:                                               ; preds = %31, %33, %37
  %39 = icmp eq i64 %25, %23
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #6
  br label %40

40:                                               ; preds = %8, %38
  %41 = phi i1 [ %39, %38 ], [ false, %8 ]
  ret i1 %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #2

declare i32 @close(i32) local_unnamed_addr #4

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14NamespaceUtils35KernelSupportsUnprivilegedNamespaceEi(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::FilePath", align 8
  %3 = alloca %"class.base::FilePath", align 8
  %4 = bitcast %"class.base::FilePath"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18) #6
  %5 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %2) #6
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6
  br i1 %5, label %6, label %16

6:                                                ; preds = %1
  switch i32 %0, label %11 [
    i32 268435456, label %16
    i32 134217728, label %12
    i32 1073741824, label %7
    i32 131072, label %8
    i32 536870912, label %9
    i32 67108864, label %10
  ]

7:                                                ; preds = %6
  br label %12

8:                                                ; preds = %6
  br label %12

9:                                                ; preds = %6
  br label %12

10:                                               ; preds = %6
  br label %12

11:                                               ; preds = %6
  br label %16

12:                                               ; preds = %6, %10, %9, %8, %7
  %13 = phi i8* [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), %10 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), %9 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), %8 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), %7 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), %6 ]
  %14 = bitcast %"class.base::FilePath"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #6
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %3, i8* nonnull %13, i64 17) #6
  %15 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %3) #6
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #6
  br label %16

16:                                               ; preds = %11, %12, %6, %1
  %17 = phi i1 [ false, %1 ], [ false, %11 ], [ %15, %12 ], [ true, %6 ]
  ret i1 %17
}

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14NamespaceUtils27KernelSupportsDenySetgroupsEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.base::FilePath", align 8
  %2 = bitcast %"class.base::FilePath"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #6
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZN7sandbox12_GLOBAL__N_118kProcSelfSetgroupsE, i64 0, i64 0), i64 20) #6
  %3 = call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %1) #6
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %1) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #6
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14NamespaceUtils13DenySetgroupsEv() local_unnamed_addr #0 align 2 {
  br label %1

1:                                                ; preds = %4, %0
  %2 = tail call i32 (i8*, i32, ...) @open64(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @_ZN7sandbox12_GLOBAL__N_118kProcSelfSetgroupsE, i64 0, i64 0), i32 1) #6
  %3 = icmp eq i32 %2, -1
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = tail call i32* @__errno_location() #7
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %1, label %24

8:                                                ; preds = %1, %11
  %9 = tail call i64 @write(i32 %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN7sandbox14NamespaceUtils13DenySetgroupsEvE5kDeny, i64 0, i64 0), i64 4) #6
  %10 = icmp eq i64 %9, -1
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = tail call i32* @__errno_location() #7
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 4
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %11
  %16 = tail call i32 @close(i32 %2) #6
  switch i32 %16, label %21 [
    i32 -1, label %17
    i32 0, label %22
  ]

17:                                               ; preds = %15
  %18 = tail call i32* @__errno_location() #7
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 4
  br i1 %20, label %22, label %21

21:                                               ; preds = %15, %17
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0)) #6
  br label %22

22:                                               ; preds = %15, %17, %21
  %23 = icmp eq i64 %9, 4
  br label %24

24:                                               ; preds = %4, %22
  %25 = phi i1 [ %23, %22 ], [ false, %4 ]
  ret i1 %25
}

declare i64 @_ZN4base7strings8internal12SafeSNPrintfEPcmPKcPKNS1_3ArgEm(i8*, i64, i8*, %"struct.base::strings::internal::Arg"*, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
