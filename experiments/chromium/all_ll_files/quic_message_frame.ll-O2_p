; ModuleID = '../../net/third_party/quiche/src/quic/core/frames/quic_message_frame.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/frames/quic_message_frame.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.quic::QuicMessageFrame" = type { i32, i8*, i16, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.quic::QuicMemSlice"*, %"class.quic::QuicMemSlice"*, %"class.std::__1::__compressed_pair" }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr, i64 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.quic::QuicMemSlice"* }
%"class.quic::QuicMemSliceSpan" = type { %"class.quic::QuicMemSliceSpanImpl" }
%"class.quic::QuicMemSliceSpanImpl" = type { %class.scoped_refptr*, i64*, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN4quic12QuicMemSliceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [14 x i8] c" message_id: \00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c", message_length: \00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c" }\0A\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4quic16QuicMessageFrameC1Ej = hidden unnamed_addr alias void (%"struct.quic::QuicMessageFrame"*, i32), void (%"struct.quic::QuicMessageFrame"*, i32)* @_ZN4quic16QuicMessageFrameC2Ej
@_ZN4quic16QuicMessageFrameC1EjNS_16QuicMemSliceSpanE = hidden unnamed_addr alias void (%"struct.quic::QuicMessageFrame"*, i32, %"class.quic::QuicMemSliceSpan"*), void (%"struct.quic::QuicMessageFrame"*, i32, %"class.quic::QuicMemSliceSpan"*)* @_ZN4quic16QuicMessageFrameC2EjNS_16QuicMemSliceSpanE
@_ZN4quic16QuicMessageFrameC1EPKct = hidden unnamed_addr alias void (%"struct.quic::QuicMessageFrame"*, i8*, i16), void (%"struct.quic::QuicMessageFrame"*, i8*, i16)* @_ZN4quic16QuicMessageFrameC2EPKct
@_ZN4quic16QuicMessageFrameD1Ev = hidden unnamed_addr alias void (%"struct.quic::QuicMessageFrame"*), void (%"struct.quic::QuicMessageFrame"*)* @_ZN4quic16QuicMessageFrameD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16QuicMessageFrameC2Ej(%"struct.quic::QuicMessageFrame"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 1
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 2
  store i16 0, i16* %5, align 8
  %6 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16QuicMessageFrameC2EjNS_16QuicMemSliceSpanE(%"struct.quic::QuicMessageFrame"*, i32, %"class.quic::QuicMemSliceSpan"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.quic::QuicMemSlice", align 8
  %5 = alloca %"class.quic::QuicMemSliceImpl", align 8
  %6 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 1
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 2
  store i16 0, i16* %8, align 8
  %9 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #9
  %11 = bitcast %"class.quic::QuicMemSlice"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = bitcast %"class.quic::QuicMemSliceImpl"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.quic::QuicMemSliceSpan", %"class.quic::QuicMemSliceSpan"* %2, i64 0, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %62, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.quic::QuicMemSliceSpan", %"class.quic::QuicMemSliceSpan"* %2, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.quic::QuicMemSliceSpan", %"class.quic::QuicMemSliceSpan"* %2, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %4, i64 0, i32 0
  %20 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %4, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 3, i32 0, i32 1
  %22 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.quic::QuicMemSlice"** %21 to i64*
  br label %24

24:                                               ; preds = %58, %16
  %25 = phi i64 [ %14, %16 ], [ %59, %58 ]
  %26 = phi i64 [ 0, %16 ], [ %60, %58 ]
  %27 = load i64*, i64** %17, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 %26
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %24
  %32 = load %class.scoped_refptr*, %class.scoped_refptr** %18, align 8
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %32, i64 %26, i32 0
  %34 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %33, align 8
  %35 = icmp eq %"class.net::IOBuffer"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  %39 = load i64*, i64** %17, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 %26
  %41 = load i64, i64* %40, align 8
  br label %42

42:                                               ; preds = %36, %31
  %43 = phi i64 [ %29, %31 ], [ %41, %36 ]
  call void @_ZN4quic16QuicMemSliceImplC1E13scoped_refptrIN3net8IOBufferEEm(%"class.quic::QuicMemSliceImpl"* nonnull %5, %"class.net::IOBuffer"* %34, i64 %43) #9
  call void @_ZN4quic16QuicMemSliceImplC1EOS0_(%"class.quic::QuicMemSliceImpl"* nonnull %19, %"class.quic::QuicMemSliceImpl"* nonnull dereferenceable(16) %5) #9
  %44 = load i64, i64* %20, align 8
  %45 = load i16, i16* %8, align 8
  %46 = trunc i64 %44 to i16
  %47 = add i16 %45, %46
  store i16 %47, i16* %8, align 8
  %48 = load %"class.quic::QuicMemSlice"*, %"class.quic::QuicMemSlice"** %21, align 8
  %49 = load %"class.quic::QuicMemSlice"*, %"class.quic::QuicMemSlice"** %22, align 8
  %50 = icmp ult %"class.quic::QuicMemSlice"* %48, %49
  br i1 %50, label %51, label %55

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %48, i64 0, i32 0
  call void @_ZN4quic16QuicMemSliceImplC1EOS0_(%"class.quic::QuicMemSliceImpl"* %52, %"class.quic::QuicMemSliceImpl"* nonnull dereferenceable(16) %19) #9
  %53 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %48, i64 1
  %54 = ptrtoint %"class.quic::QuicMemSlice"* %53 to i64
  store i64 %54, i64* %23, align 8
  br label %56

55:                                               ; preds = %42
  call void @_ZNSt3__16vectorIN4quic12QuicMemSliceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %9, %"class.quic::QuicMemSlice"* nonnull dereferenceable(16) %4) #9
  br label %56

56:                                               ; preds = %55, %51
  call void @_ZN4quic16QuicMemSliceImplD1Ev(%"class.quic::QuicMemSliceImpl"* nonnull %19) #9
  call void @_ZN4quic16QuicMemSliceImplD1Ev(%"class.quic::QuicMemSliceImpl"* nonnull %5) #9
  %57 = load i64, i64* %13, align 8
  br label %58

58:                                               ; preds = %56, %24
  %59 = phi i64 [ %25, %24 ], [ %57, %56 ]
  %60 = add nuw i64 %26, 1
  %61 = icmp ult i64 %60, %59
  br i1 %61, label %24, label %62

62:                                               ; preds = %58, %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16QuicMessageFrameC2EPKct(%"struct.quic::QuicMessageFrame"* nocapture, i8*, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 1
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 2
  store i16 %2, i16* %6, align 8
  %7 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16QuicMessageFrameD2Ev(%"struct.quic::QuicMessageFrame"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.quic::QuicMemSlice"*, %"class.quic::QuicMemSlice"** %3, align 8
  %5 = icmp eq %"class.quic::QuicMemSlice"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.quic::QuicMemSlice"* %4 to i8*
  %8 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"class.quic::QuicMemSlice"*, %"class.quic::QuicMemSlice"** %8, align 8
  %10 = icmp eq %"class.quic::QuicMemSlice"* %9, %4
  br i1 %10, label %19, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.quic::QuicMemSlice"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %12, i64 -1
  %14 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %13, i64 0, i32 0
  tail call void @_ZN4quic16QuicMemSliceImplD1Ev(%"class.quic::QuicMemSliceImpl"* %14) #9
  %15 = icmp eq %"class.quic::QuicMemSlice"* %13, %4
  br i1 %15, label %16, label %11

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::vector"* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %6
  %20 = phi i8* [ %18, %16 ], [ %7, %6 ]
  store %"class.quic::QuicMemSlice"* %4, %"class.quic::QuicMemSlice"** %8, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16QuicMessageFrameE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"struct.quic::QuicMessageFrame"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13) #9
  %4 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %3, i32 %5) #9
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i64 18) #9
  %8 = getelementptr inbounds %"struct.quic::QuicMessageFrame", %"struct.quic::QuicMessageFrame"* %1, i64 0, i32 2
  %9 = load i16, i16* %8, align 8
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"* %7, i16 zeroext %9) #9
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEt(%"class.std::__1::basic_ostream"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic16QuicMemSliceImplD1Ev(%"class.quic::QuicMemSliceImpl"*) unnamed_addr #3

declare void @_ZN4quic16QuicMemSliceImplC1E13scoped_refptrIN3net8IOBufferEEm(%"class.quic::QuicMemSliceImpl"*, %"class.net::IOBuffer"*, i64) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4quic12QuicMemSliceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"class.quic::QuicMemSlice"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.quic::QuicMemSlice"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.quic::QuicMemSlice"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.quic::QuicMemSlice"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.quic::QuicMemSlice"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %36, i64 %9
  %38 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %36, i64 %35
  %39 = ptrtoint %"class.quic::QuicMemSlice"* %38 to i64
  %40 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %1, i64 0, i32 0
  tail call void @_ZN4quic16QuicMemSliceImplC1EOS0_(%"class.quic::QuicMemSliceImpl"* %40, %"class.quic::QuicMemSliceImpl"* dereferenceable(16) %41) #9
  %42 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %37, i64 1
  %43 = ptrtoint %"class.quic::QuicMemSlice"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %45 = load %"class.quic::QuicMemSlice"*, %"class.quic::QuicMemSlice"** %44, align 8
  %46 = load %"class.quic::QuicMemSlice"*, %"class.quic::QuicMemSlice"** %3, align 8
  %47 = icmp eq %"class.quic::QuicMemSlice"* %46, %45
  br i1 %47, label %48, label %50

48:                                               ; preds = %34
  %49 = ptrtoint %"class.quic::QuicMemSlice"* %45 to i64
  br label %61

50:                                               ; preds = %34, %50
  %51 = phi %"class.quic::QuicMemSlice"* [ %56, %50 ], [ %37, %34 ]
  %52 = phi %"class.quic::QuicMemSlice"* [ %53, %50 ], [ %46, %34 ]
  %53 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %52, i64 -1
  %54 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %51, i64 -1, i32 0
  %55 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %53, i64 0, i32 0
  tail call void @_ZN4quic16QuicMemSliceImplC1EOS0_(%"class.quic::QuicMemSliceImpl"* %54, %"class.quic::QuicMemSliceImpl"* dereferenceable(16) %55) #9
  %56 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %51, i64 -1
  %57 = icmp eq %"class.quic::QuicMemSlice"* %53, %45
  br i1 %57, label %58, label %50

58:                                               ; preds = %50
  %59 = load i64, i64* %6, align 8
  %60 = load %"class.quic::QuicMemSlice"*, %"class.quic::QuicMemSlice"** %3, align 8
  br label %61

61:                                               ; preds = %48, %58
  %62 = phi %"class.quic::QuicMemSlice"* [ %45, %48 ], [ %60, %58 ]
  %63 = phi %"class.quic::QuicMemSlice"* [ %37, %48 ], [ %56, %58 ]
  %64 = phi i64 [ %49, %48 ], [ %59, %58 ]
  %65 = ptrtoint %"class.quic::QuicMemSlice"* %63 to i64
  store i64 %65, i64* %6, align 8
  store i64 %43, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %66 = inttoptr i64 %64 to %"class.quic::QuicMemSlice"*
  %67 = icmp eq %"class.quic::QuicMemSlice"* %62, %66
  br i1 %67, label %73, label %68

68:                                               ; preds = %61, %68
  %69 = phi %"class.quic::QuicMemSlice"* [ %70, %68 ], [ %62, %61 ]
  %70 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %69, i64 -1
  %71 = getelementptr inbounds %"class.quic::QuicMemSlice", %"class.quic::QuicMemSlice"* %70, i64 0, i32 0
  tail call void @_ZN4quic16QuicMemSliceImplD1Ev(%"class.quic::QuicMemSliceImpl"* %71) #9
  %72 = icmp eq %"class.quic::QuicMemSlice"* %70, %66
  br i1 %72, label %73, label %68

73:                                               ; preds = %68, %61
  %74 = icmp eq i64 %64, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = inttoptr i64 %64 to i8*
  tail call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %73, %75
  ret void
}

declare void @_ZN4quic16QuicMemSliceImplC1EOS0_(%"class.quic::QuicMemSliceImpl"*, %"class.quic::QuicMemSliceImpl"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
