; ModuleID = '../../third_party/blink/common/loader/inter_process_time_ticks_converter.cc'
source_filename = "../../third_party/blink/common/loader/inter_process_time_ticks_converter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::InterProcessTimeTicksConverter" = type { %"class.blink::SiteSpecificTimeTicks", %"class.blink::SiteSpecificTimeDelta", double, %"class.blink::SiteSpecificTimeTicks.0", %"class.blink::SiteSpecificTimeTicks.0" }
%"class.blink::SiteSpecificTimeTicks" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::SiteSpecificTimeDelta" = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::SiteSpecificTimeTicks.0" = type { %"class.base::TimeTicks" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNK4base9TimeDeltadvES0_ = comdat any

@.str = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN5blink30InterProcessTimeTicksConverterC1ENS_21SiteSpecificTimeTicksINS_24SiteSpecificTimeLocalTagEEES3_NS1_INS_25SiteSpecificTimeRemoteTagEEES5_ = hidden unnamed_addr alias void (%"class.blink::InterProcessTimeTicksConverter"*, i64, i64, i64, i64), void (%"class.blink::InterProcessTimeTicksConverter"*, i64, i64, i64, i64)* @_ZN5blink30InterProcessTimeTicksConverterC2ENS_21SiteSpecificTimeTicksINS_24SiteSpecificTimeLocalTagEEES3_NS1_INS_25SiteSpecificTimeRemoteTagEEES5_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30InterProcessTimeTicksConverterC2ENS_21SiteSpecificTimeTicksINS_24SiteSpecificTimeLocalTagEEES3_NS1_INS_25SiteSpecificTimeRemoteTagEEES5_(%"class.blink::InterProcessTimeTicksConverter"* nocapture, i64, i64, i64, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = alloca %"class.base::TimeDelta", align 8
  %9 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = sub nsw i64 %2, %1
  %11 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %4, i64* %13, align 8
  %14 = sub nsw i64 %4, %3
  %15 = icmp sgt i64 %14, %10
  br i1 %15, label %39, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 2
  store double 1.000000e+00, double* %17, align 8
  %18 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 %10, i64* %19, align 8
  %20 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %7, i64 %14)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %21 = sdiv i64 %20, 2
  %22 = add i64 %21, -9223372036854775807
  %23 = icmp ult i64 %22, 2
  br i1 %23, label %31, label %24

24:                                               ; preds = %16
  %25 = icmp slt i64 %20, -1
  %26 = select i1 %25, i64 -9223372036854775808, i64 9223372036854775807
  %27 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %1, i64 %21) #6
  %28 = extractvalue { i64, i1 } %27, 1
  %29 = extractvalue { i64, i1 } %27, 0
  %30 = select i1 %28, i64 %26, i64 %29, !prof !2
  br label %44

31:                                               ; preds = %16
  %32 = add i64 %1, -9223372036854775807
  %33 = icmp ugt i64 %32, 1
  %34 = icmp eq i64 %21, %1
  %35 = or i1 %33, %34
  br i1 %35, label %44, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #6
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6
  br label %44

39:                                               ; preds = %5
  %40 = bitcast %"class.base::TimeDelta"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #6
  %41 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %8, i64 0, i32 0
  store i64 %10, i64* %41, align 8
  %42 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %8, i64 %14)
  %43 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 2
  store double %42, double* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #6
  br label %44

44:                                               ; preds = %36, %31, %24, %39
  %45 = phi i64 [ %1, %39 ], [ %30, %24 ], [ %21, %31 ], [ %21, %36 ]
  store i64 %45, i64* %9, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #6
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #6
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #6
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #6
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink30InterProcessTimeTicksConverter16ToLocalTimeTicksENS_21SiteSpecificTimeTicksINS_25SiteSpecificTimeRemoteTagEEE(%"class.blink::InterProcessTimeTicksConverter"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %59, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %1, %8
  %10 = icmp slt i64 %9, 1
  br i1 %10, label %38, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 1
  %13 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 2
  %15 = load double, double* %14, align 8
  %16 = sitofp i64 %9 to double
  %17 = fmul double %15, %16
  %18 = fcmp oge double %17, 0xC3E0000000000000
  %19 = fcmp ole double %17, 0x43DFFFFFFFFFFFFF
  %20 = and i1 %19, %18
  %21 = fptosi double %17 to i64
  br i1 %20, label %29, label %22

22:                                               ; preds = %11
  %23 = lshr i64 %9, 63
  %24 = trunc i64 %23 to i32
  %25 = fcmp olt double %15, 0.000000e+00
  %26 = zext i1 %25 to i32
  %27 = icmp eq i32 %24, %26
  %28 = select i1 %27, i64 9223372036854775807, i64 -9223372036854775808
  br label %29

29:                                               ; preds = %22, %11
  %30 = phi i64 [ %21, %11 ], [ %28, %22 ]
  store i64 %30, i64* %3, align 8
  %31 = getelementptr inbounds %"class.blink::SiteSpecificTimeDelta", %"class.blink::SiteSpecificTimeDelta"* %12, i64 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %30, %32
  %34 = bitcast i64* %3 to %"class.blink::SiteSpecificTimeDelta"*
  %35 = select i1 %33, %"class.blink::SiteSpecificTimeDelta"* %34, %"class.blink::SiteSpecificTimeDelta"* %12
  %36 = getelementptr inbounds %"class.blink::SiteSpecificTimeDelta", %"class.blink::SiteSpecificTimeDelta"* %35, i64 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  br label %38

38:                                               ; preds = %6, %29
  %39 = phi i64 [ %37, %29 ], [ %9, %6 ]
  %40 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %39, -9223372036854775807
  %43 = icmp ult i64 %42, 2
  br i1 %43, label %51, label %44

44:                                               ; preds = %38
  %45 = icmp slt i64 %39, 0
  %46 = select i1 %45, i64 -9223372036854775808, i64 9223372036854775807
  %47 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %41, i64 %39) #6
  %48 = extractvalue { i64, i1 } %47, 1
  %49 = extractvalue { i64, i1 } %47, 0
  %50 = select i1 %48, i64 %46, i64 %49, !prof !2
  br label %59

51:                                               ; preds = %38
  %52 = add i64 %41, -9223372036854775807
  %53 = icmp ugt i64 %52, 1
  %54 = icmp eq i64 %41, %39
  %55 = or i1 %54, %53
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #6
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #6
  br label %59

59:                                               ; preds = %56, %51, %44, %2
  %60 = phi i64 [ 0, %2 ], [ %50, %44 ], [ %39, %51 ], [ %39, %56 ]
  ret i64 %60
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink30InterProcessTimeTicksConverter16ToLocalTimeDeltaENS_21SiteSpecificTimeDeltaINS_25SiteSpecificTimeRemoteTagEEE(%"class.blink::InterProcessTimeTicksConverter"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = icmp slt i64 %1, 1
  br i1 %4, label %32, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 1
  %7 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 2
  %9 = load double, double* %8, align 8
  %10 = sitofp i64 %1 to double
  %11 = fmul double %9, %10
  %12 = fcmp oge double %11, 0xC3E0000000000000
  %13 = fcmp ole double %11, 0x43DFFFFFFFFFFFFF
  %14 = and i1 %13, %12
  %15 = fptosi double %11 to i64
  br i1 %14, label %23, label %16

16:                                               ; preds = %5
  %17 = lshr i64 %1, 63
  %18 = trunc i64 %17 to i32
  %19 = fcmp olt double %9, 0.000000e+00
  %20 = zext i1 %19 to i32
  %21 = icmp eq i32 %18, %20
  %22 = select i1 %21, i64 9223372036854775807, i64 -9223372036854775808
  br label %23

23:                                               ; preds = %5, %16
  %24 = phi i64 [ %15, %5 ], [ %22, %16 ]
  store i64 %24, i64* %3, align 8
  %25 = getelementptr inbounds %"class.blink::SiteSpecificTimeDelta", %"class.blink::SiteSpecificTimeDelta"* %6, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp slt i64 %24, %26
  %28 = bitcast i64* %3 to %"class.blink::SiteSpecificTimeDelta"*
  %29 = select i1 %27, %"class.blink::SiteSpecificTimeDelta"* %28, %"class.blink::SiteSpecificTimeDelta"* %6
  %30 = getelementptr inbounds %"class.blink::SiteSpecificTimeDelta", %"class.blink::SiteSpecificTimeDelta"* %29, i64 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  br label %32

32:                                               ; preds = %2, %23
  %33 = phi i64 [ %31, %23 ], [ %1, %2 ]
  ret i64 %33
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink30InterProcessTimeTicksConverter17GetSkewForMetricsEv(%"class.blink::InterProcessTimeTicksConverter"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.blink::InterProcessTimeTicksConverter", %"class.blink::InterProcessTimeTicksConverter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = sub nsw i64 %3, %5
  ret i64 %6
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #5

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
