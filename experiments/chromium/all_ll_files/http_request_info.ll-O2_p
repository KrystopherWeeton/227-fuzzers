; ModuleID = '../../net/http/http_request_info.cc'
source_filename = "../../net/http/http_request_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::HttpRequestInfo" = type <{ %class.GURL, %"class.std::__1::basic_string", %"class.net::NetworkIsolationKey", i8, [7 x i8], %"class.net::HttpRequestHeaders", %"class.net::UploadDataStream"*, i32, i32, i32, %"class.net::SocketTag", [3 x i8], %"struct.net::MutableNetworkTrafficAnnotationTag", i32, %"class.absl::optional.15", i32, [4 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.5" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.net::UploadDataStream" = type opaque
%"class.net::SocketTag" = type { i8 }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, %union.anon.19 }
%union.anon.19 = type { %"class.url::Origin" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN3net15HttpRequestInfoC1Ev = hidden unnamed_addr alias void (%"struct.net::HttpRequestInfo"*), void (%"struct.net::HttpRequestInfo"*)* @_ZN3net15HttpRequestInfoC2Ev
@_ZN3net15HttpRequestInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"*), void (%"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"*)* @_ZN3net15HttpRequestInfoC2ERKS0_
@_ZN3net15HttpRequestInfoD1Ev = hidden unnamed_addr alias void (%"struct.net::HttpRequestInfo"*), void (%"struct.net::HttpRequestInfo"*)* @_ZN3net15HttpRequestInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpRequestInfoC2Ev(%"struct.net::HttpRequestInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %2) #5
  %3 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #5
  %5 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 2
  tail call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* %5) #5
  %6 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 3
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 5
  tail call void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"* %7) #5
  %8 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 12, i32 0
  %10 = bitcast %"class.net::UploadDataStream"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false)
  store i32 -1, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 13
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %union.anon.19* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 84, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

declare void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #1

declare void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpRequestInfoC2ERKS0_(%"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"* dereferenceable(488)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %3, %class.GURL* dereferenceable(120) %4) #5
  %5 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #5
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %16, i64 %18) #5
  br label %19

19:                                               ; preds = %11, %14
  %20 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 2
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %20, %"class.net::NetworkIsolationKey"* dereferenceable(184) %21) #5
  %22 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 3
  %24 = load i8, i8* %23, align 8, !range !2
  store i8 %24, i8* %22, align 8
  %25 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 5
  %26 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 5
  tail call void @_ZN3net18HttpRequestHeadersC1ERKS0_(%"class.net::HttpRequestHeaders"* %25, %"class.net::HttpRequestHeaders"* dereferenceable(24) %26) #5
  %27 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 6
  %28 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 6
  %29 = bitcast %"class.net::UploadDataStream"** %27 to i8*
  %30 = bitcast %"class.net::UploadDataStream"** %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 32, i1 false)
  %31 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 88, i1 false) #5
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %19
  %36 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %37, %"class.url::Origin"* dereferenceable(80) %36) #5
  store i8 1, i8* %31, align 8
  br label %38

38:                                               ; preds = %19, %35
  %39 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 15
  %40 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %1, i64 0, i32 15
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

declare void @_ZN3net18HttpRequestHeadersC1ERKS0_(%"class.net::HttpRequestHeaders"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpRequestInfoD2Ev(%"struct.net::HttpRequestInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %6) #5
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 5
  tail call void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"* %8) #5
  %9 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 2
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %9) #5
  %10 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #6
  br label %18

18:                                               ; preds = %7, %15
  %19 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %0, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %19) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
