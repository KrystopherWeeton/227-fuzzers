; ModuleID = '../../ui/base/x/x11_shm_image_pool.cc'
source_filename = "../../ui/base/x/x11_shm_image_pool.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::XShmImagePool::FrameState" = type { i32, i32, i8*, i8, %class.SkBitmap, %"class.std::__1::unique_ptr" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkCanvas* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.8, [384 x i64], %class.sk_sp.9, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.10", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.14" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.8 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.9 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"struct.ui::XShmImagePool::SwapClosure" = type <{ %"class.base::OnceCallback", i32, [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.ui::XShmImagePool" = type { %"class.x11::EventObserver", %"class.x11::Connection"*, %"struct.x11::Drawable", i32, i32, i8, i8, %"class.gfx::Size", i64, %"class.std::__1::vector.284", i64, %"class.std::__1::list" }
%"class.x11::EventObserver" = type { i32 (...)** }
%"struct.x11::Drawable" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"*, %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.ui::XShmImagePool::FrameState"* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { i64 }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.203", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.216", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.262", %"class.base::circular_deque", %"class.base::ObserverList.268", %"class.x11::Event"*, %"class.base::circular_deque.272", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.209" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.206" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type { i32 (...)** }
%"class.base::ObserverList.209" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.210", i64, i32, [4 x i8] }>
%"class.base::LinkedList.210" = type { %"class.base::LinkNode.211" }
%"class.base::LinkNode.211" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.227", %"class.std::__1::vector.234" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.229" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.236" }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.238" }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.255" }
%"class.std::__1::vector.255" = type { %"class.std::__1::__vector_base.256" }
%"class.std::__1::__vector_base.256" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.257" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.268" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.269", i64, i32, [4 x i8] }>
%"class.base::LinkedList.269" = type { %"class.base::LinkNode.270" }
%"class.base::LinkNode.270" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.272" = type { %"class.base::internal::VectorBuffer.273", i64, i64 }
%"class.base::internal::VectorBuffer.273" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback.274", i8, %class.scoped_refptr.275, %"class.std::__1::unique_ptr.277" }
%"class.base::OnceCallback.274" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.275 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.276", [4 x i8] }>
%"class.base::RefCountedThreadSafe.276" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.283 }
%union.anon.283 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%struct.shminfo = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%"struct.x11::Shm::AttachRequest" = type <{ i32, i32, i8, [3 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::Environment" = type { i32 (...)** }
%"class.base::CommandLine" = type { %"class.std::__1::vector.313", %"class.std::__1::map", i64 }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.320", %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%struct.shmid_ds = type { %struct.ipc_perm, i64, i64, i64, i64, i32, i32, i64, i64, i64 }
%struct.ipc_perm = type { i32, i32, i32, i32, i32, i32, i16, i16, i64, i64 }
%"struct.x11::Connection::VisualInfo" = type { %"struct.x11::Format"*, %"struct.x11::VisualType"* }
%"class.base::OnceCallback.306" = type { %"class.base::internal::CallbackBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.x11::Shm::CompletionEvent" = type { i8, i16, %"struct.x11::Drawable", i16, i8, i32, i32 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.ui::XShmImagePool::SwapClosure" }

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJS4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJS5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

@_ZTVN2ui13XShmImagePoolE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::XShmImagePool"*, %"class.x11::Event"*)* @_ZN2ui13XShmImagePool7OnEventERKN3x115EventE to i8*), i8* bitcast (void (%"class.ui::XShmImagePool"*)* @_ZN2ui13XShmImagePoolD2Ev to i8*), i8* bitcast (void (%"class.ui::XShmImagePool"*)* @_ZN2ui13XShmImagePoolD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"QT_X11_NO_MITSHM\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"J2D_USE_MITSHM\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZN8switches7kNoXshmE = external constant [0 x i8], align 1
@_ZZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size = internal unnamed_addr global i64 0, align 8
@_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size = internal global i64 0, align 8
@.str.7 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1

@_ZN2ui13XShmImagePool10FrameStateC1Ev = hidden unnamed_addr alias void (%"struct.ui::XShmImagePool::FrameState"*), void (%"struct.ui::XShmImagePool::FrameState"*)* @_ZN2ui13XShmImagePool10FrameStateC2Ev
@_ZN2ui13XShmImagePool10FrameStateD1Ev = hidden unnamed_addr alias void (%"struct.ui::XShmImagePool::FrameState"*), void (%"struct.ui::XShmImagePool::FrameState"*)* @_ZN2ui13XShmImagePool10FrameStateD2Ev
@_ZN2ui13XShmImagePool11SwapClosureC1Ev = hidden unnamed_addr alias void (%"struct.ui::XShmImagePool::SwapClosure"*), void (%"struct.ui::XShmImagePool::SwapClosure"*)* @_ZN2ui13XShmImagePool11SwapClosureC2Ev
@_ZN2ui13XShmImagePool11SwapClosureD1Ev = hidden unnamed_addr alias void (%"struct.ui::XShmImagePool::SwapClosure"*), void (%"struct.ui::XShmImagePool::SwapClosure"*)* @_ZN2ui13XShmImagePool11SwapClosureD2Ev
@_ZN2ui13XShmImagePoolC1EPN3x1110ConnectionENS1_8DrawableENS1_8VisualIdEimb = hidden unnamed_addr alias void (%"class.ui::XShmImagePool"*, %"class.x11::Connection"*, i32, i32, i32, i64, i1), void (%"class.ui::XShmImagePool"*, %"class.x11::Connection"*, i32, i32, i32, i64, i1)* @_ZN2ui13XShmImagePoolC2EPN3x1110ConnectionENS1_8DrawableENS1_8VisualIdEimb
@_ZN2ui13XShmImagePoolD1Ev = hidden unnamed_addr alias void (%"class.ui::XShmImagePool"*), void (%"class.ui::XShmImagePool"*)* @_ZN2ui13XShmImagePoolD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui13XShmImagePool10FrameStateC2Ev(%"struct.ui::XShmImagePool::FrameState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %0, i64 0, i32 4
  %3 = bitcast %"struct.ui::XShmImagePool::FrameState"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 17, i1 false)
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %2) #10
  %4 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %0, i64 0, i32 5
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 0, i64* %5, align 8
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui13XShmImagePool10FrameStateD2Ev(%"struct.ui::XShmImagePool::FrameState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %class.SkCanvas*, %class.SkCanvas** %2, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %2, align 8
  %4 = icmp eq %class.SkCanvas* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.SkCanvas* %3 to void (%class.SkCanvas*)***
  %7 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %7, i64 1
  %9 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %8, align 8
  tail call void %9(%class.SkCanvas* nonnull %3) #10
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %0, i64 0, i32 4
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %11) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui13XShmImagePool11SwapClosureC2Ev(%"struct.ui::XShmImagePool::SwapClosure"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.ui::XShmImagePool::SwapClosure", %"struct.ui::XShmImagePool::SwapClosure"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %2, align 8
  %3 = getelementptr inbounds %"struct.ui::XShmImagePool::SwapClosure", %"struct.ui::XShmImagePool::SwapClosure"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui13XShmImagePool11SwapClosureD2Ev(%"struct.ui::XShmImagePool::SwapClosure"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::XShmImagePool::SwapClosure", %"struct.ui::XShmImagePool::SwapClosure"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui13XShmImagePoolC2EPN3x1110ConnectionENS1_8DrawableENS1_8VisualIdEimb(%"class.ui::XShmImagePool"*, %"class.x11::Connection"*, i32, i32, i32, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = zext i1 %6 to i8
  %9 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui13XShmImagePoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 1
  store %"class.x11::Connection"* %1, %"class.x11::Connection"** %11, align 8
  %12 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 2, i32 0
  store i32 %2, i32* %12, align 8
  %13 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 3
  store i32 %3, i32* %13, align 4
  %14 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 4
  store i32 %4, i32* %14, align 8
  %15 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 5
  store i8 %8, i8* %15, align 4
  %16 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 6
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 7, i32 0
  %18 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9
  %19 = icmp eq i64 %5, 0
  %20 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 40, i1 false)
  br i1 %19, label %46, label %21

21:                                               ; preds = %7
  %22 = icmp ugt i64 %5, 209622091746699450
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.284"* %18 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #11
  unreachable

25:                                               ; preds = %21
  %26 = mul i64 %5, 88
  %27 = tail call i8* @_Znwm(i64 %26) #12
  %28 = bitcast i8* %27 to %"struct.ui::XShmImagePool::FrameState"*
  %29 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 1
  %30 = bitcast %"struct.ui::XShmImagePool::FrameState"** %29 to i8**
  store i8* %27, i8** %30, align 8
  %31 = bitcast %"class.std::__1::vector.284"* %18 to i8**
  store i8* %27, i8** %31, align 8
  %32 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %28, i64 %5
  %33 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store %"struct.ui::XShmImagePool::FrameState"* %32, %"struct.ui::XShmImagePool::FrameState"** %33, align 8
  br label %34

34:                                               ; preds = %34, %25
  %35 = phi %"struct.ui::XShmImagePool::FrameState"* [ %40, %34 ], [ %28, %25 ]
  %36 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %35, i64 0, i32 4
  %37 = bitcast %"struct.ui::XShmImagePool::FrameState"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 17, i1 false) #10
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %36) #10
  %38 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %35, i64 0, i32 5
  %39 = bitcast %"class.std::__1::unique_ptr"* %38 to i64*
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %35, i64 1
  %41 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %40, %32
  br i1 %41, label %42, label %34

42:                                               ; preds = %34
  %43 = bitcast %"struct.ui::XShmImagePool::FrameState"** %29 to i64*
  %44 = ptrtoint %"struct.ui::XShmImagePool::FrameState"* %32 to i64
  store i64 %44, i64* %43, align 8
  %45 = load i8, i8* %15, align 4, !range !2
  br label %46

46:                                               ; preds = %7, %42
  %47 = phi i8 [ %8, %7 ], [ %45, %42 ]
  %48 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 10
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11
  %50 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %49, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %49, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %50, %"struct.std::__1::__list_node_base"** %51, align 8
  %52 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %50, %"struct.std::__1::__list_node_base"** %52, align 8
  %53 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %53, align 8
  %54 = icmp eq i8 %47, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %46
  %56 = load %"class.x11::Connection"*, %"class.x11::Connection"** %11, align 8
  tail call void @_ZN3x1110Connection16AddEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %56, %"class.x11::EventObserver"* %9) #10
  br label %57

57:                                               ; preds = %46, %55
  ret void
}

declare void @_ZN3x1110Connection16AddEventObserverEPNS_13EventObserverE(%"class.x11::Connection"*, %"class.x11::EventObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui13XShmImagePoolD2Ev(%"class.ui::XShmImagePool"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2ui13XShmImagePoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %3, align 8
  %5 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 1
  %6 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %5, align 8
  %7 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %4, %6
  br i1 %7, label %36, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 1
  %10 = bitcast %"class.x11::Connection"** %9 to i8**
  br label %11

11:                                               ; preds = %32, %8
  %12 = phi %"struct.ui::XShmImagePool::FrameState"* [ %4, %8 ], [ %33, %32 ]
  %13 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %12, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = tail call i32 @shmdt(i8* nonnull %14) #10
  br label %18

18:                                               ; preds = %16, %11
  %19 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %12, i64 0, i32 3
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %18
  %23 = load i8*, i8** %10, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 128
  %25 = bitcast i8* %24 to %"class.x11::Shm"**
  %26 = load %"class.x11::Shm"*, %"class.x11::Shm"** %25, align 8
  %27 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %12, i64 0, i32 0
  %28 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x113Shm6DetachERKNS0_3SegE(%"class.x11::Shm"* %26, i32* dereferenceable(4) %27) #10
  %29 = icmp eq %"class.x11::Connection::FutureImpl"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %22
  %31 = bitcast %"class.x11::Connection::FutureImpl"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %30, %22, %18
  %33 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %12, i64 1
  %34 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %33, %6
  %35 = bitcast %"struct.ui::XShmImagePool::FrameState"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 17, i1 false) #10
  br i1 %34, label %36, label %11

36:                                               ; preds = %32, %1
  %37 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 7
  %38 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 10
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 6
  store i8 0, i8* %39, align 1
  %40 = bitcast %"class.gfx::Size"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #10
  %41 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 5
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 1
  %46 = load %"class.x11::Connection"*, %"class.x11::Connection"** %45, align 8
  %47 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 0
  tail call void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %46, %"class.x11::EventObserver"* %47) #10
  br label %48

48:                                               ; preds = %36, %44
  %49 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0
  %50 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %79, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %55 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %49, i64 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %49, i64 0, i32 0, i32 0
  %58 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %58, i64 0, i32 1
  %60 = bitcast %"struct.std::__1::__list_node_base"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %55, i64 0, i32 0
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = bitcast %"struct.std::__1::__list_node_base"** %64 to i64*
  store i64 %61, i64* %65, align 8
  %66 = bitcast %"struct.std::__1::__list_node_base"* %55 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"struct.std::__1::__list_node_base"** %59 to i64**
  %69 = load i64*, i64** %68, align 8
  store i64 %67, i64* %69, align 8
  store i64 0, i64* %50, align 8
  %70 = icmp eq %"struct.std::__1::__list_node_base"* %55, %56
  br i1 %70, label %79, label %71

71:                                               ; preds = %53, %71
  %72 = phi %"struct.std::__1::__list_node_base"* [ %74, %71 ], [ %55, %53 ]
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %72, i64 0, i32 1
  %74 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %72, i64 1
  %76 = bitcast %"struct.std::__1::__list_node_base"* %75 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %76) #10
  %77 = bitcast %"struct.std::__1::__list_node_base"* %72 to i8*
  tail call void @_ZdlPv(i8* %77) #12
  %78 = icmp eq %"struct.std::__1::__list_node_base"* %74, %56
  br i1 %78, label %79, label %71

79:                                               ; preds = %71, %48, %53
  %80 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9
  %81 = getelementptr inbounds %"class.std::__1::vector.284", %"class.std::__1::vector.284"* %80, i64 0, i32 0, i32 0
  %82 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %81, align 8
  %83 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %82, null
  br i1 %83, label %107, label %84

84:                                               ; preds = %79
  %85 = bitcast %"struct.ui::XShmImagePool::FrameState"* %82 to i8*
  %86 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %5, align 8
  %87 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %86, %82
  br i1 %87, label %105, label %88

88:                                               ; preds = %84, %99
  %89 = phi %"struct.ui::XShmImagePool::FrameState"* [ %90, %99 ], [ %86, %84 ]
  %90 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %89, i64 -1
  %91 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %89, i64 -1, i32 5, i32 0, i32 0, i32 0
  %92 = load %class.SkCanvas*, %class.SkCanvas** %91, align 8
  store %class.SkCanvas* null, %class.SkCanvas** %91, align 8
  %93 = icmp eq %class.SkCanvas* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %88
  %95 = bitcast %class.SkCanvas* %92 to void (%class.SkCanvas*)***
  %96 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %96, i64 1
  %98 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %97, align 8
  tail call void %98(%class.SkCanvas* nonnull %92) #10
  br label %99

99:                                               ; preds = %94, %88
  %100 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %89, i64 -1, i32 4
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %100) #10
  %101 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %90, %82
  br i1 %101, label %102, label %88

102:                                              ; preds = %99
  %103 = bitcast %"class.std::__1::vector.284"* %80 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %105

105:                                              ; preds = %102, %84
  %106 = phi i8* [ %104, %102 ], [ %85, %84 ]
  store %"struct.ui::XShmImagePool::FrameState"* %82, %"struct.ui::XShmImagePool::FrameState"** %5, align 8
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %79, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui13XShmImagePool7CleanupEv(%"class.ui::XShmImagePool"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %2, align 8
  %4 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 1
  %5 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %4, align 8
  %6 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %3, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 1
  %9 = bitcast %"class.x11::Connection"** %8 to i8**
  br label %15

10:                                               ; preds = %36, %1
  %11 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 10
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 6
  store i8 0, i8* %13, align 1
  %14 = bitcast %"class.gfx::Size"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  ret void

15:                                               ; preds = %7, %36
  %16 = phi %"struct.ui::XShmImagePool::FrameState"* [ %3, %7 ], [ %37, %36 ]
  %17 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %16, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = tail call i32 @shmdt(i8* nonnull %18) #10
  br label %22

22:                                               ; preds = %15, %20
  %23 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %16, i64 0, i32 3
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  %27 = load i8*, i8** %9, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 128
  %29 = bitcast i8* %28 to %"class.x11::Shm"**
  %30 = load %"class.x11::Shm"*, %"class.x11::Shm"** %29, align 8
  %31 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %16, i64 0, i32 0
  %32 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x113Shm6DetachERKNS0_3SegE(%"class.x11::Shm"* %30, i32* dereferenceable(4) %31) #10
  %33 = icmp eq %"class.x11::Connection::FutureImpl"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %26
  %35 = bitcast %"class.x11::Connection::FutureImpl"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %26, %22
  %37 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %16, i64 1
  %38 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %37, %5
  %39 = bitcast %"struct.ui::XShmImagePool::FrameState"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 17, i1 false)
  br i1 %38, label %10, label %15
}

declare void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"*, %"class.x11::EventObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui13XShmImagePoolD0Ev(%"class.ui::XShmImagePool"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui13XShmImagePoolD2Ev(%"class.ui::XShmImagePool"* %0) #10
  %2 = bitcast %"class.ui::XShmImagePool"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui13XShmImagePool6ResizeERKN3gfx4SizeE(%"class.ui::XShmImagePool"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.275, align 8
  %4 = alloca %"class.std::__1::unique_ptr.277", align 8
  %5 = alloca %struct.shminfo, align 8
  %6 = alloca %struct.shminfo, align 8
  %7 = alloca %struct.shminfo, align 8
  %8 = alloca %struct.shminfo, align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %struct.SkImageInfo, align 8
  %12 = alloca %"struct.x11::Shm::AttachRequest", align 4
  %13 = alloca %class.SkBitmap, align 8
  %14 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 7
  %15 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %14, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 7, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %441, label %26

26:                                               ; preds = %2, %20
  %27 = ptrtoint %"class.ui::XShmImagePool"* %0 to i64
  %28 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 1
  %29 = load %"class.x11::Connection"*, %"class.x11::Connection"** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false) #10
  call void @_ZNK3x1110Connection21GetConnectionHostnameEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.x11::Connection"* %29) #10
  %33 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i64, i64* %32, align 8
  %38 = zext i8 %35 to i64
  %39 = select i1 %36, i64 %37, i64 %38
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %26
  %42 = load i8*, i8** %31, align 8
  %43 = select i1 %36, i8* %42, i8* %30
  %44 = call zeroext i1 @_ZN3net21HostStringIsLocalhostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %43, i64 %39) #10
  br i1 %44, label %45, label %106

45:                                               ; preds = %41, %26
  %46 = call %"class.base::Environment"* @_ZN4base11Environment6CreateEv() #10
  %47 = bitcast %"class.base::Environment"* %46 to i1 (%"class.base::Environment"*, i8*, i64)***
  %48 = load i1 (%"class.base::Environment"*, i8*, i64)**, i1 (%"class.base::Environment"*, i8*, i64)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.base::Environment"*, i8*, i64)*, i1 (%"class.base::Environment"*, i8*, i64)** %48, i64 3
  %50 = load i1 (%"class.base::Environment"*, i8*, i64)*, i1 (%"class.base::Environment"*, i8*, i64)** %49, align 8
  %51 = call zeroext i1 %50(%"class.base::Environment"* %46, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16) #10
  br i1 %51, label %98, label %52

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #10
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #10
  %56 = bitcast %"class.base::Environment"* %46 to i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)***
  %57 = load i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)**, i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)*, i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)** %57, i64 2
  %59 = load i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)*, i1 (%"class.base::Environment"*, i8*, i64, %"class.std::__1::basic_string"*)** %58, align 8
  %60 = call zeroext i1 %59(%"class.base::Environment"* %46, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14, %"class.std::__1::basic_string"* nonnull %10) #10
  %61 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %60, label %62, label %86

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  %66 = load i64, i64* %55, align 8
  %67 = zext i8 %64 to i64
  %68 = select i1 %65, i64 %66, i64 %67
  %69 = icmp eq i64 %68, 1
  br i1 %69, label %70, label %77

70:                                               ; preds = %62
  %71 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %10, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %90, label %73

73:                                               ; preds = %70
  %74 = load i8, i8* %63, align 1
  %75 = load i64, i64* %55, align 8
  %76 = zext i8 %74 to i64
  br label %77

77:                                               ; preds = %73, %62
  %78 = phi i64 [ %76, %73 ], [ %67, %62 ]
  %79 = phi i64 [ %75, %73 ], [ %66, %62 ]
  %80 = phi i8 [ %74, %73 ], [ %64, %62 ]
  %81 = icmp slt i8 %80, 0
  %82 = load i8*, i8** %54, align 8
  %83 = select i1 %81, i8* %82, i8* %53
  %84 = select i1 %81, i64 %79, i64 %78
  %85 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %83, i64 %84, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64 5) #10
  br i1 %85, label %90, label %86

86:                                               ; preds = %77, %52
  %87 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #10
  %88 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %87, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches7kNoXshmE, i64 0, i64 0)) #10
  %89 = xor i1 %88, true
  br label %90

90:                                               ; preds = %86, %77, %70
  %91 = phi i1 [ %89, %86 ], [ false, %77 ], [ false, %70 ]
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %96) #12
  br label %97

97:                                               ; preds = %95, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #10
  br label %98

98:                                               ; preds = %97, %45
  %99 = phi i1 [ %91, %97 ], [ false, %45 ]
  %100 = icmp eq %"class.base::Environment"* %46, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %98
  %102 = bitcast %"class.base::Environment"* %46 to void (%"class.base::Environment"*)***
  %103 = load void (%"class.base::Environment"*)**, void (%"class.base::Environment"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.base::Environment"*)*, void (%"class.base::Environment"*)** %103, i64 1
  %105 = load void (%"class.base::Environment"*)*, void (%"class.base::Environment"*)** %104, align 8
  call void %105(%"class.base::Environment"* nonnull %46) #10
  br label %106

106:                                              ; preds = %101, %98, %41
  %107 = phi i1 [ false, %41 ], [ %99, %98 ], [ %99, %101 ]
  %108 = load i8, i8* %34, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %111) #12
  br label %112

112:                                              ; preds = %106, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  br i1 %107, label %113, label %398

113:                                              ; preds = %112
  %114 = call zeroext i1 @_ZN2ui15QueryShmSupportEv() #10
  %115 = xor i1 %114, true
  %116 = load i32, i32* %15, align 4
  %117 = icmp slt i32 %116, 1
  %118 = or i1 %117, %115
  br i1 %118, label %398, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 %121, 1
  br i1 %122, label %398, label %123

123:                                              ; preds = %119
  %124 = call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %1) #10
  %125 = icmp slt i32 %124, 257
  br i1 %125, label %398, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = call i32 @_ZN2ui18ColorTypeForVisualEN3x118VisualIdE(i32 %128) #10
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %398, label %131

131:                                              ; preds = %126
  %132 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #10
  %133 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 0, i32 0
  %134 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 1
  %135 = load i32, i32* %15, align 4
  %136 = load i32, i32* %120, align 4
  %137 = zext i32 %129 to i64
  %138 = or i64 %137, 8589934592
  %139 = zext i32 %136 to i64
  %140 = shl nuw i64 %139, 32
  %141 = zext i32 %135 to i64
  %142 = or i64 %140, %141
  %143 = bitcast %struct.SkImageInfo* %11 to i64*
  store i64 0, i64* %143, align 8, !alias.scope !3
  %144 = bitcast i32* %134 to i64*
  store i64 %138, i64* %144, align 8, !alias.scope !3
  %145 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 1
  %146 = bitcast %struct.SkISize* %145 to i64*
  store i64 %142, i64* %146, align 8, !alias.scope !3
  %147 = sext i32 %135 to i64
  %148 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0
  %149 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %148) #10
  %150 = sext i32 %149 to i64
  %151 = mul nsw i64 %150, %147
  %152 = icmp ult i64 %151, 2147483648
  %153 = select i1 %152, i64 %151, i64 0
  %154 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %11, i64 %153) #10
  %155 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 8
  %156 = load i64, i64* %155, align 8
  %157 = icmp ugt i64 %154, %156
  br i1 %157, label %163, label %158

158:                                              ; preds = %131
  %159 = uitofp i64 %154 to float
  %160 = uitofp i64 %156 to float
  %161 = fmul float %160, 0x3FDC71C720000000
  %162 = fcmp ogt float %161, %159
  br i1 %162, label %163, label %341

163:                                              ; preds = %158, %131
  %164 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 0
  %165 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %164, align 8
  %166 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 1
  %167 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %166, align 8
  %168 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %165, %167
  br i1 %168, label %196, label %169

169:                                              ; preds = %163
  %170 = bitcast %"class.x11::Connection"** %28 to i8**
  br label %171

171:                                              ; preds = %192, %169
  %172 = phi %"struct.ui::XShmImagePool::FrameState"* [ %165, %169 ], [ %193, %192 ]
  %173 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %172, i64 0, i32 2
  %174 = load i8*, i8** %173, align 8
  %175 = icmp eq i8* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %171
  %177 = call i32 @shmdt(i8* nonnull %174) #10
  br label %178

178:                                              ; preds = %176, %171
  %179 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %172, i64 0, i32 3
  %180 = load i8, i8* %179, align 8, !range !2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %192, label %182

182:                                              ; preds = %178
  %183 = load i8*, i8** %170, align 8
  %184 = getelementptr inbounds i8, i8* %183, i64 128
  %185 = bitcast i8* %184 to %"class.x11::Shm"**
  %186 = load %"class.x11::Shm"*, %"class.x11::Shm"** %185, align 8
  %187 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %172, i64 0, i32 0
  %188 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Shm6DetachERKNS0_3SegE(%"class.x11::Shm"* %186, i32* dereferenceable(4) %187) #10
  %189 = icmp eq %"class.x11::Connection::FutureImpl"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %182
  %191 = bitcast %"class.x11::Connection::FutureImpl"* %188 to i8*
  call void @_ZdlPv(i8* %191) #12
  br label %192

192:                                              ; preds = %190, %182, %178
  %193 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %172, i64 1
  %194 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %193, %167
  %195 = bitcast %"struct.ui::XShmImagePool::FrameState"* %172 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 17, i1 false) #10
  br i1 %194, label %196, label %171

196:                                              ; preds = %192, %163
  %197 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 10
  store i64 0, i64* %197, align 8
  %198 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 6
  store i8 0, i8* %198, align 1
  %199 = bitcast %"class.gfx::Size"* %14 to i64*
  store i64 0, i64* %199, align 8
  %200 = uitofp i64 %154 to float
  %201 = fmul float %200, 1.500000e+00
  %202 = fptoui float %201 to i64
  store i64 %202, i64* %155, align 8
  %203 = load atomic i8, i8* bitcast (i64* @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size to i8*) acquire, align 8
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %205, label %216, !prof !6

205:                                              ; preds = %196
  %206 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size) #10
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %216, label %208

208:                                              ; preds = %205
  %209 = bitcast %struct.shminfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %209) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 -86, i64 72, i1 false) #10
  %210 = bitcast %struct.shminfo* %8 to %struct.shmid_ds*
  %211 = call i32 @shmctl(i32 0, i32 3, %struct.shmid_ds* nonnull %210) #10
  %212 = icmp eq i32 %211, -1
  %213 = getelementptr inbounds %struct.shminfo, %struct.shminfo* %8, i64 0, i32 0
  %214 = load i64, i64* %213, align 8
  %215 = select i1 %212, i64 0, i64 %214
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %209) #10
  store i64 %215, i64* @_ZZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size) #10
  br label %216

216:                                              ; preds = %196, %205, %208
  %217 = load i64, i64* @_ZZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size, align 8
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %270, label %219

219:                                              ; preds = %216
  %220 = load i64, i64* %155, align 8
  %221 = load atomic i8, i8* bitcast (i64* @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size to i8*) acquire, align 8
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %234, !prof !6

223:                                              ; preds = %219
  %224 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size) #10
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %234, label %226

226:                                              ; preds = %223
  %227 = bitcast %struct.shminfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %227) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %227, i8 -86, i64 72, i1 false) #10
  %228 = bitcast %struct.shminfo* %7 to %struct.shmid_ds*
  %229 = call i32 @shmctl(i32 0, i32 3, %struct.shmid_ds* nonnull %228) #10
  %230 = icmp eq i32 %229, -1
  %231 = getelementptr inbounds %struct.shminfo, %struct.shminfo* %7, i64 0, i32 0
  %232 = load i64, i64* %231, align 8
  %233 = select i1 %230, i64 0, i64 %232
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %227) #10
  store i64 %233, i64* @_ZZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size) #10
  br label %234

234:                                              ; preds = %219, %223, %226
  %235 = load i64, i64* @_ZZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size, align 8
  %236 = icmp ugt i64 %220, %235
  br i1 %236, label %237, label %270

237:                                              ; preds = %234
  %238 = load atomic i8, i8* bitcast (i64* @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size to i8*) acquire, align 8
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %251, !prof !6

240:                                              ; preds = %237
  %241 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size) #10
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %251, label %243

243:                                              ; preds = %240
  %244 = bitcast %struct.shminfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %244) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %244, i8 -86, i64 72, i1 false) #10
  %245 = bitcast %struct.shminfo* %6 to %struct.shmid_ds*
  %246 = call i32 @shmctl(i32 0, i32 3, %struct.shmid_ds* nonnull %245) #10
  %247 = icmp eq i32 %246, -1
  %248 = getelementptr inbounds %struct.shminfo, %struct.shminfo* %6, i64 0, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = select i1 %247, i64 0, i64 %249
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %244) #10
  store i64 %250, i64* @_ZZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size) #10
  br label %251

251:                                              ; preds = %237, %240, %243
  %252 = load i64, i64* @_ZZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size, align 8
  %253 = icmp ult i64 %252, %154
  br i1 %253, label %385, label %254

254:                                              ; preds = %251
  %255 = load atomic i8, i8* bitcast (i64* @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size to i8*) acquire, align 8
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %257, label %268, !prof !6

257:                                              ; preds = %254
  %258 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size) #10
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %268, label %260

260:                                              ; preds = %257
  %261 = bitcast %struct.shminfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %261) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 -86, i64 72, i1 false) #10
  %262 = bitcast %struct.shminfo* %5 to %struct.shmid_ds*
  %263 = call i32 @shmctl(i32 0, i32 3, %struct.shmid_ds* nonnull %262) #10
  %264 = icmp eq i32 %263, -1
  %265 = getelementptr inbounds %struct.shminfo, %struct.shminfo* %5, i64 0, i32 0
  %266 = load i64, i64* %265, align 8
  %267 = select i1 %264, i64 0, i64 %266
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %261) #10
  store i64 %267, i64* @_ZZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size) #10
  br label %268

268:                                              ; preds = %254, %257, %260
  %269 = load i64, i64* @_ZZN2ui12_GLOBAL__N_117MaxShmSegmentSizeEvE8max_size, align 8
  store i64 %269, i64* %155, align 8
  br label %270

270:                                              ; preds = %216, %268, %234
  %271 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %164, align 8
  %272 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %166, align 8
  %273 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %271, %272
  br i1 %273, label %341, label %274

274:                                              ; preds = %270
  %275 = bitcast %"class.x11::Connection"** %28 to i8**
  %276 = bitcast %"struct.x11::Shm::AttachRequest"* %12 to i8*
  %277 = getelementptr inbounds %"struct.x11::Shm::AttachRequest", %"struct.x11::Shm::AttachRequest"* %12, i64 0, i32 0
  %278 = getelementptr inbounds %"struct.x11::Shm::AttachRequest", %"struct.x11::Shm::AttachRequest"* %12, i64 0, i32 1
  %279 = getelementptr inbounds %"struct.x11::Shm::AttachRequest", %"struct.x11::Shm::AttachRequest"* %12, i64 0, i32 2
  %280 = bitcast %class.scoped_refptr.275* %3 to i8*
  %281 = getelementptr inbounds %class.scoped_refptr.275, %class.scoped_refptr.275* %3, i64 0, i32 0
  %282 = bitcast %"class.std::__1::unique_ptr.277"* %4 to i8*
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.277"* %4, i64 0, i32 0, i32 0, i32 0
  %284 = bitcast %"class.std::__1::unique_ptr.277"* %4 to i64*
  br label %285

285:                                              ; preds = %274, %338
  %286 = phi %"struct.ui::XShmImagePool::FrameState"* [ %271, %274 ], [ %339, %338 ]
  %287 = load i64, i64* %155, align 8
  %288 = call i32 @shmget(i32 0, i64 %287, i32 902) #10
  %289 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %286, i64 0, i32 1
  store i32 %288, i32* %289, align 4
  %290 = icmp slt i32 %288, 0
  br i1 %290, label %385, label %291

291:                                              ; preds = %285
  %292 = call i8* @shmat(i32 %288, i8* null, i32 0) #10
  %293 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %286, i64 0, i32 2
  store i8* %292, i8** %293, align 8
  %294 = icmp eq i8* %292, inttoptr (i64 -1 to i8*)
  %295 = load i32, i32* %289, align 4
  %296 = call i32 @shmctl(i32 %295, i32 0, %struct.shmid_ds* null) #10
  br i1 %294, label %385, label %297

297:                                              ; preds = %291
  %298 = load %"class.x11::Connection"*, %"class.x11::Connection"** %28, align 8
  %299 = call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %298) #10
  %300 = load i8*, i8** %275, align 8
  %301 = getelementptr inbounds i8, i8* %300, i64 128
  %302 = bitcast i8* %301 to %"class.x11::Shm"**
  %303 = load %"class.x11::Shm"*, %"class.x11::Shm"** %302, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %276) #10
  store i32 %299, i32* %277, align 4
  %304 = load i32, i32* %289, align 4
  store i32 %304, i32* %278, align 4
  store i8 1, i8* %279, align 4
  %305 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Shm6AttachERKNS0_13AttachRequestE(%"class.x11::Shm"* %303, %"struct.x11::Shm::AttachRequest"* nonnull dereferenceable(12) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %276) #10
  %306 = icmp eq %"class.x11::Connection::FutureImpl"* %305, null
  br i1 %306, label %335, label %307

307:                                              ; preds = %297
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %280) #10
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %281, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %282) #10
  store i64 0, i64* %284, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %305, %class.scoped_refptr.275* nonnull %3, %"class.std::__1::unique_ptr.277"* nonnull %4) #10
  %308 = load %"class.x11::Error"*, %"class.x11::Error"** %283, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %282) #10
  %309 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %281, align 8
  %310 = icmp eq %"class.base::RefCountedMemory"* %309, null
  br i1 %310, label %323, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %309, i64 0, i32 1
  %313 = getelementptr inbounds %"class.base::RefCountedThreadSafe.276", %"class.base::RefCountedThreadSafe.276"* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = atomicrmw sub i32* %313, i32 1 acq_rel
  %315 = icmp eq i32 %314, 1
  br i1 %315, label %316, label %323

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"class.base::RefCountedThreadSafe.276", %"class.base::RefCountedThreadSafe.276"* %312, i64 -2
  %318 = bitcast %"class.base::RefCountedThreadSafe.276"* %317 to %"class.base::RefCountedMemory"*
  %319 = bitcast %"class.base::RefCountedThreadSafe.276"* %317 to void (%"class.base::RefCountedMemory"*)***
  %320 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %319, align 8
  %321 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %320, i64 3
  %322 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %321, align 8
  call void %322(%"class.base::RefCountedMemory"* nonnull %318) #10
  br label %323

323:                                              ; preds = %307, %311, %316
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #10
  %324 = icmp eq %"class.x11::Error"* %308, null
  br i1 %324, label %331, label %325

325:                                              ; preds = %323
  %326 = bitcast %"class.x11::Error"* %308 to void (%"class.x11::Error"*)***
  %327 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %326, align 8
  %328 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %327, i64 1
  %329 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %328, align 8
  call void %329(%"class.x11::Error"* nonnull %308) #10
  %330 = bitcast %"class.x11::Connection::FutureImpl"* %305 to i8*
  call void @_ZdlPv(i8* %330) #12
  br label %385

331:                                              ; preds = %323
  %332 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %286, i64 0, i32 0
  store i32 %299, i32* %332, align 8
  %333 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %286, i64 0, i32 3
  store i8 1, i8* %333, align 8
  %334 = bitcast %"class.x11::Connection::FutureImpl"* %305 to i8*
  call void @_ZdlPv(i8* %334) #12
  br label %338

335:                                              ; preds = %297
  %336 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %286, i64 0, i32 0
  store i32 %299, i32* %336, align 8
  %337 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %286, i64 0, i32 3
  store i8 1, i8* %337, align 8
  br label %338

338:                                              ; preds = %331, %335
  %339 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %286, i64 1
  %340 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %339, %272
  br i1 %340, label %341, label %285

341:                                              ; preds = %338, %270, %158
  %342 = load %"class.x11::Connection"*, %"class.x11::Connection"** %28, align 8
  %343 = load i32, i32* %127, align 4
  %344 = call %"struct.x11::Connection::VisualInfo"* @_ZNK3x1110Connection19GetVisualInfoFromIdENS_8VisualIdE(%"class.x11::Connection"* %342, i32 %343) #10
  %345 = icmp eq %"struct.x11::Connection::VisualInfo"* %344, null
  br i1 %345, label %385, label %346

346:                                              ; preds = %341
  %347 = load i32, i32* %15, align 4
  %348 = call i64 @_ZN2ui22RowBytesForVisualWidthERKN3x1110Connection10VisualInfoEi(%"struct.x11::Connection::VisualInfo"* nonnull dereferenceable(16) %344, i32 %347) #10
  %349 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 0
  %350 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %349, align 8
  %351 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 1
  %352 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %351, align 8
  %353 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %350, %352
  br i1 %353, label %380, label %354

354:                                              ; preds = %346
  %355 = bitcast %class.SkBitmap* %13 to i8*
  br label %356

356:                                              ; preds = %354, %377
  %357 = phi %"struct.ui::XShmImagePool::FrameState"* [ %350, %354 ], [ %378, %377 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %355) #10
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %13) #10
  %358 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %357, i64 0, i32 4
  %359 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %358, %class.SkBitmap* nonnull dereferenceable(56) %13) #10
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %355) #10
  %360 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %357, i64 0, i32 2
  %361 = load i8*, i8** %360, align 8
  %362 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* %358, %struct.SkImageInfo* nonnull dereferenceable(24) %11, i8* %361, i64 %348, void (i8*, i8*)* null, i8* null) #10
  br i1 %362, label %363, label %385

363:                                              ; preds = %356
  %364 = call i8* @_Znwm(i64 3232) #12
  %365 = bitcast i8* %364 to %class.SkCanvas*
  call void @_ZN8SkCanvasC1ERK8SkBitmap(%class.SkCanvas* nonnull %365, %class.SkBitmap* dereferenceable(56) %358) #10
  %366 = ptrtoint i8* %364 to i64
  %367 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %357, i64 0, i32 5
  %368 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %367, i64 0, i32 0, i32 0, i32 0
  %369 = load %class.SkCanvas*, %class.SkCanvas** %368, align 8
  %370 = bitcast %"class.std::__1::unique_ptr"* %367 to i64*
  store i64 %366, i64* %370, align 8
  %371 = icmp eq %class.SkCanvas* %369, null
  br i1 %371, label %377, label %372

372:                                              ; preds = %363
  %373 = bitcast %class.SkCanvas* %369 to void (%class.SkCanvas*)***
  %374 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %373, align 8
  %375 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %374, i64 1
  %376 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %375, align 8
  call void %376(%class.SkCanvas* nonnull %369) #10
  br label %377

377:                                              ; preds = %372, %363
  %378 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %357, i64 1
  %379 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %378, %352
  br i1 %379, label %380, label %356

380:                                              ; preds = %377, %346
  %381 = bitcast %"class.gfx::Size"* %1 to i64*
  %382 = bitcast %"class.gfx::Size"* %14 to i64*
  %383 = load i64, i64* %381, align 4
  store i64 %383, i64* %382, align 8
  %384 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 6
  store i8 1, i8* %384, align 1
  br label %385

385:                                              ; preds = %291, %285, %356, %325, %341, %380, %251
  %386 = phi i64 [ %27, %341 ], [ 0, %380 ], [ %27, %251 ], [ %27, %325 ], [ %27, %356 ], [ %27, %285 ], [ %27, %291 ]
  %387 = phi i1 [ false, %341 ], [ true, %380 ], [ false, %251 ], [ false, %325 ], [ false, %356 ], [ false, %285 ], [ false, %291 ]
  %388 = inttoptr i64 %386 to %"class.ui::XShmImagePool"*
  %389 = load %class.SkColorSpace*, %class.SkColorSpace** %133, align 8
  %390 = icmp eq %class.SkColorSpace* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %385
  %392 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %389, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %393 = atomicrmw add i32* %392, i32 -1 acq_rel
  %394 = icmp eq i32 %393, 1
  br i1 %394, label %395, label %397

395:                                              ; preds = %391
  %396 = bitcast %class.SkColorSpace* %389 to i8*
  call void @_ZdlPv(i8* %396) #12
  br label %397

397:                                              ; preds = %385, %391, %395
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #10
  br label %398

398:                                              ; preds = %113, %397, %126, %119, %123, %112
  %399 = phi %"class.ui::XShmImagePool"* [ %0, %119 ], [ %0, %123 ], [ %0, %126 ], [ %388, %397 ], [ %0, %113 ], [ %0, %112 ]
  %400 = phi i1 [ false, %119 ], [ false, %123 ], [ false, %126 ], [ %387, %397 ], [ false, %113 ], [ false, %112 ]
  %401 = icmp eq %"class.ui::XShmImagePool"* %399, null
  br i1 %401, label %441, label %402

402:                                              ; preds = %398
  %403 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %399, i64 0, i32 9, i32 0, i32 0
  %404 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %403, align 8
  %405 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %399, i64 0, i32 9, i32 0, i32 1
  %406 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %405, align 8
  %407 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %404, %406
  br i1 %407, label %436, label %408

408:                                              ; preds = %402
  %409 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %399, i64 0, i32 1
  %410 = bitcast %"class.x11::Connection"** %409 to i8**
  br label %411

411:                                              ; preds = %432, %408
  %412 = phi %"struct.ui::XShmImagePool::FrameState"* [ %404, %408 ], [ %433, %432 ]
  %413 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %412, i64 0, i32 2
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, null
  br i1 %415, label %418, label %416

416:                                              ; preds = %411
  %417 = call i32 @shmdt(i8* nonnull %414) #10
  br label %418

418:                                              ; preds = %416, %411
  %419 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %412, i64 0, i32 3
  %420 = load i8, i8* %419, align 8, !range !2
  %421 = icmp eq i8 %420, 0
  br i1 %421, label %432, label %422

422:                                              ; preds = %418
  %423 = load i8*, i8** %410, align 8
  %424 = getelementptr inbounds i8, i8* %423, i64 128
  %425 = bitcast i8* %424 to %"class.x11::Shm"**
  %426 = load %"class.x11::Shm"*, %"class.x11::Shm"** %425, align 8
  %427 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %412, i64 0, i32 0
  %428 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Shm6DetachERKNS0_3SegE(%"class.x11::Shm"* %426, i32* dereferenceable(4) %427) #10
  %429 = icmp eq %"class.x11::Connection::FutureImpl"* %428, null
  br i1 %429, label %432, label %430

430:                                              ; preds = %422
  %431 = bitcast %"class.x11::Connection::FutureImpl"* %428 to i8*
  call void @_ZdlPv(i8* %431) #12
  br label %432

432:                                              ; preds = %430, %422, %418
  %433 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %412, i64 1
  %434 = icmp eq %"struct.ui::XShmImagePool::FrameState"* %433, %406
  %435 = bitcast %"struct.ui::XShmImagePool::FrameState"* %412 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %435, i8 0, i64 17, i1 false) #10
  br i1 %434, label %436, label %411

436:                                              ; preds = %432, %402
  %437 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %399, i64 0, i32 7
  %438 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %399, i64 0, i32 10
  store i64 0, i64* %438, align 8
  %439 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %399, i64 0, i32 6
  store i8 0, i8* %439, align 1
  %440 = bitcast %"class.gfx::Size"* %437 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %440, i8 0, i64 16, i1 false) #10
  br label %441

441:                                              ; preds = %436, %398, %20
  %442 = phi i1 [ true, %20 ], [ %400, %398 ], [ %400, %436 ]
  ret i1 %442
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare zeroext i1 @_ZN2ui15QueryShmSupportEv() local_unnamed_addr #1

declare i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"*) local_unnamed_addr #1

declare i32 @_ZN2ui18ColorTypeForVisualEN3x118VisualIdE(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @shmget(i32, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @shmat(i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @shmctl(i32, i32, %struct.shmid_ds*) local_unnamed_addr #2

declare %"class.x11::Connection::FutureImpl"* @_ZN3x113Shm6AttachERKNS0_13AttachRequestE(%"class.x11::Shm"*, %"struct.x11::Shm::AttachRequest"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare %"struct.x11::Connection::VisualInfo"* @_ZNK3x1110Connection19GetVisualInfoFromIdENS_8VisualIdE(%"class.x11::Connection"*, i32) local_unnamed_addr #1

declare i64 @_ZN2ui22RowBytesForVisualWidthERKN3x1110Connection10VisualInfoEi(%"struct.x11::Connection::VisualInfo"* dereferenceable(16), i32) local_unnamed_addr #1

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2ui13XShmImagePool5ReadyEv(%"class.ui::XShmImagePool"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(56) %class.SkBitmap* @_ZN2ui13XShmImagePool13CurrentBitmapEv(%"class.ui::XShmImagePool"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 10
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %4, align 8
  %6 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %5, i64 %3, i32 4
  ret %class.SkBitmap* %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkCanvas* @_ZN2ui13XShmImagePool13CurrentCanvasEv(%"class.ui::XShmImagePool"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 10
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %4, align 8
  %6 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %5, i64 %3, i32 5, i32 0, i32 0, i32 0
  %7 = load %class.SkCanvas*, %class.SkCanvas** %6, align 8
  ret %class.SkCanvas* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2ui13XShmImagePool14CurrentSegmentEv(%"class.ui::XShmImagePool"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 10
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %4, align 8
  %6 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %5, i64 %3, i32 0
  %7 = load i32, i32* %6, align 8
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui13XShmImagePool11SwapBuffersEN4base12OnceCallbackIFvRKN3gfx4SizeEEEE(%"class.ui::XShmImagePool"*, %"class.base::OnceCallback.306"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11
  %6 = tail call i8* @_Znwm(i64 32) #12, !noalias !7
  %7 = bitcast i8* %6 to %"struct.std::__1::__list_node_base"**
  %8 = getelementptr inbounds i8, i8* %6, i64 16
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"**
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 24
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds i8, i8* %6, i64 8
  %14 = bitcast i8* %13 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %12, %"struct.std::__1::__list_node_base"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %15, align 8
  store %"struct.std::__1::__list_node_base"* %16, %"struct.std::__1::__list_node_base"** %7, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %18 = bitcast %"struct.std::__1::__list_node_base"** %17 to i8**
  store i8* %6, i8** %18, align 8
  %19 = bitcast %"class.std::__1::list"* %5 to i8**
  store i8* %6, i8** %19, align 8
  %20 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  %23 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 7
  %25 = tail call i8* @_Znwm(i64 48) #12, !noalias !10
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJS4_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJS5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #10, !noalias !10
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = getelementptr inbounds %"class.base::OnceCallback.306", %"class.base::OnceCallback.306"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback.306"* %1 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !10
  %31 = bitcast i8* %27 to i64*
  store i64 %30, i64* %31, align 8, !noalias !10
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8, !noalias !10
  %32 = getelementptr inbounds i8, i8* %25, i64 40
  %33 = bitcast %"class.gfx::Size"* %24 to i64*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %33, align 4, !noalias !10
  store i64 %35, i64* %34, align 4, !noalias !10
  %36 = icmp eq i64 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %2
  %38 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #10, !noalias !10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0)) #10, !noalias !10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10, !noalias !10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #10, !noalias !10
  br label %40

40:                                               ; preds = %2, %37
  %41 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %25, i8** %41, align 8, !alias.scope !10
  %42 = bitcast i8* %8 to %"class.base::internal::CallbackBase"*
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %44 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %42, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %43) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  %45 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 10
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 0
  %48 = load %"struct.ui::XShmImagePool::FrameState"*, %"struct.ui::XShmImagePool::FrameState"** %47, align 8
  %49 = getelementptr inbounds %"struct.ui::XShmImagePool::FrameState", %"struct.ui::XShmImagePool::FrameState"* %48, i64 %46, i32 0
  %50 = load i32, i32* %49, align 8
  store i32 %50, i32* %11, align 8
  %51 = add i64 %46, 1
  %52 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 9, i32 0, i32 1
  %53 = bitcast %"struct.ui::XShmImagePool::FrameState"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = ptrtoint %"struct.ui::XShmImagePool::FrameState"* %48 to i64
  %56 = sub i64 %54, %55
  %57 = sdiv exact i64 %56, 88
  %58 = urem i64 %51, %57
  store i64 %58, i64* %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui13XShmImagePool26DispatchShmCompletionEventEN3x113Shm15CompletionEventE(%"class.ui::XShmImagePool"*, %"struct.x11::Shm::CompletionEvent"* nocapture readonly byval(%"struct.x11::Shm::CompletionEvent") align 8) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::__list_node_base"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 0
  %8 = inttoptr i64 %6 to %"struct.std::__1::__list_node_base"*
  %9 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %9, label %56, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.x11::Shm::CompletionEvent", %"struct.x11::Shm::CompletionEvent"* %1, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %10, %50
  %14 = phi %"struct.std::__1::__list_node_base"* [ %8, %10 ], [ %54, %50 ]
  %15 = phi i64 [ %6, %10 ], [ %53, %50 ]
  %16 = inttoptr i64 %15 to %"struct.std::__1::__list_node"*
  %17 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %16, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %12, %18
  br i1 %19, label %20, label %50

20:                                               ; preds = %13
  %21 = inttoptr i64 %15 to %"struct.std::__1::__list_node"*
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 0
  %23 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::OnceCallback"* %22 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %29 = inttoptr i64 %26 to %"class.base::internal::BindStateBase"*
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %29, i64 0, i32 1
  %31 = bitcast void ()** %30 to void (%"class.base::internal::BindStateBase"*)**
  %32 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %31, align 8
  tail call void %32(%"class.base::internal::BindStateBase"* %29) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  %33 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 1
  %34 = bitcast %"struct.std::__1::__list_node_base"** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 0
  %37 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %37, i64 0, i32 1
  %39 = bitcast %"struct.std::__1::__list_node_base"** %38 to i64*
  store i64 %35, i64* %39, align 8
  %40 = inttoptr i64 %15 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"struct.std::__1::__list_node_base"** %33 to i64**
  %43 = load i64*, i64** %42, align 8
  store i64 %41, i64* %43, align 8
  %44 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, -1
  store i64 %46, i64* %44, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 1
  %48 = bitcast %"struct.std::__1::__list_node_base"* %47 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %48) #10
  %49 = inttoptr i64 %15 to i8*
  call void @_ZdlPv(i8* %49) #12
  br label %56

50:                                               ; preds = %13
  %51 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %14, i64 0, i32 1
  %52 = bitcast %"struct.std::__1::__list_node_base"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = inttoptr i64 %53 to %"struct.std::__1::__list_node_base"*
  %55 = icmp eq %"struct.std::__1::__list_node_base"* %7, %54
  br i1 %55, label %56, label %13

56:                                               ; preds = %50, %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui13XShmImagePool7OnEventERKN3x115EventE(%"class.ui::XShmImagePool"*, %"class.x11::Event"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 15
  br i1 %6, label %7, label %70

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %9 = bitcast i8** %8 to %"struct.x11::Shm::CompletionEvent"**
  %10 = load %"struct.x11::Shm::CompletionEvent"*, %"struct.x11::Shm::CompletionEvent"** %9, align 8
  %11 = icmp eq %"struct.x11::Shm::CompletionEvent"* %10, null
  br i1 %11, label %70, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.x11::Shm::CompletionEvent", %"struct.x11::Shm::CompletionEvent"* %10, i64 0, i32 2, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %70

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.x11::Shm::CompletionEvent", %"struct.x11::Shm::CompletionEvent"* %10, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 0
  %25 = inttoptr i64 %23 to %"struct.std::__1::__list_node_base"*
  %26 = icmp eq %"struct.std::__1::__list_node_base"* %24, %25
  br i1 %26, label %70, label %27

27:                                               ; preds = %18, %64
  %28 = phi %"struct.std::__1::__list_node_base"* [ %68, %64 ], [ %25, %18 ]
  %29 = phi i64 [ %67, %64 ], [ %23, %18 ]
  %30 = inttoptr i64 %29 to %"struct.std::__1::__list_node"*
  %31 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %30, i64 0, i32 1, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %20, %32
  br i1 %33, label %34, label %64

34:                                               ; preds = %27
  %35 = inttoptr i64 %29 to %"struct.std::__1::__list_node"*
  %36 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %35, i64 0, i32 1, i32 0
  %37 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %36, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::OnceCallback"* %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %43 = inttoptr i64 %40 to %"class.base::internal::BindStateBase"*
  %44 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %43, i64 0, i32 1
  %45 = bitcast void ()** %44 to void (%"class.base::internal::BindStateBase"*)**
  %46 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %45, align 8
  tail call void %46(%"class.base::internal::BindStateBase"* %43) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 1
  %48 = bitcast %"struct.std::__1::__list_node_base"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 0
  %51 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %51, i64 0, i32 1
  %53 = bitcast %"struct.std::__1::__list_node_base"** %52 to i64*
  store i64 %49, i64* %53, align 8
  %54 = inttoptr i64 %29 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.std::__1::__list_node_base"** %47 to i64**
  %57 = load i64*, i64** %56, align 8
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds %"class.ui::XShmImagePool", %"class.ui::XShmImagePool"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  store i64 %60, i64* %58, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 1
  %62 = bitcast %"struct.std::__1::__list_node_base"* %61 to %"class.base::internal::CallbackBase"*
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %62) #10
  %63 = inttoptr i64 %29 to i8*
  call void @_ZdlPv(i8* %63) #12
  br label %70

64:                                               ; preds = %27
  %65 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 1
  %66 = bitcast %"struct.std::__1::__list_node_base"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = inttoptr i64 %67 to %"struct.std::__1::__list_node_base"*
  %69 = icmp eq %"struct.std::__1::__list_node_base"* %24, %68
  br i1 %69, label %70, label %27

70:                                               ; preds = %64, %34, %18, %2, %7, %12
  ret void
}

; Function Attrs: nounwind
declare i32 @shmdt(i8*) local_unnamed_addr #2

declare %"class.x11::Connection::FutureImpl"* @_ZN3x113Shm6DetachERKNS0_3SegE(%"class.x11::Shm"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZNK3x1110Connection21GetConnectionHostnameEv(%"class.std::__1::basic_string"* sret, %"class.x11::Connection"*) local_unnamed_addr #1

declare %"class.base::Environment"* @_ZN4base11Environment6CreateEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net21HostStringIsLocalhostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"*, %class.scoped_refptr.275*, %"class.std::__1::unique_ptr.277"*) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN8SkCanvasC1ERK8SkBitmap(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.306", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.gfx::Size"*
  %6 = bitcast %"class.base::OnceCallback.306"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::BindStateBase"**
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback.306"* %2 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.306", %"class.base::OnceCallback.306"* %2, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, %"class.gfx::Size"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, %"class.gfx::Size"*)*, void (%"class.base::internal::BindStateBase"*, %"class.gfx::Size"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12, %"class.gfx::Size"* dereferenceable(8) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJS4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJS5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #10
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #10
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!5 = distinct !{!5, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!6 = !{!"branch_weights", i32 1, i32 1048575}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__14listIN2ui13XShmImagePool11SwapClosureENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__14listIN2ui13XShmImagePool11SwapClosureENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvRKN3gfx4SizeEEEEJRS4_EEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvRKN3gfx4SizeEEEEJRS4_EEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJRS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceINS_12OnceCallbackIFvRKN3gfx4SizeEEEEJRS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
