; ModuleID = '../../ui/display/mojom/display_layout_mojom_traits.cc'
source_filename = "../../ui/display/mojom/display_layout_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.display::mojom::internal::DisplayPlacement_Data" = type { %"struct.mojo::internal::StructHeader", i64, i64, i32, i32, i32, [4 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.display::DisplayPlacement" = type <{ i64, i64, i32, i32, i32, [4 x i8] }>
%"class.display::mojom::internal::DisplayLayout_Data" = type { %"struct.mojo::internal::StructHeader", i8, [7 x i8], i64, %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.display::DisplayLayout"* }
%"class.display::DisplayLayout" = type { %"class.std::__1::vector.22", i8, i64 }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.display::DisplayPlacement"*, %"struct.display::DisplayPlacement"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.display::DisplayPlacement"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7display5mojom24DisplayPlacementDataViewEEENSt3__16vectorINS3_16DisplayPlacementENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal21DisplayPlacement_DataEEEEEPSC_PNS_7MessageE = comdat any

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN7display5mojom8PositionENS1_16DisplayPlacement8PositionEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 3
  %4 = select i1 %3, i32 %0, i32 0
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN7display5mojom8PositionENS1_16DisplayPlacement8PositionEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 4
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN7display5mojom15OffsetReferenceENS1_16DisplayPlacement15OffsetReferenceEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN7display5mojom15OffsetReferenceENS1_16DisplayPlacement15OffsetReferenceEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 2
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7display5mojom24DisplayPlacementDataViewENS1_16DisplayPlacementEE4ReadES3_PS4_(%"class.display::mojom::internal::DisplayPlacement_Data"*, %"struct.display::DisplayPlacement"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.display::mojom::internal::DisplayPlacement_Data", %"class.display::mojom::internal::DisplayPlacement_Data"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 1
  %5 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %1, i64 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.display::mojom::internal::DisplayPlacement_Data", %"class.display::mojom::internal::DisplayPlacement_Data"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %1, i64 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.display::mojom::internal::DisplayPlacement_Data", %"class.display::mojom::internal::DisplayPlacement_Data"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 1
  %11 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %1, i64 0, i32 3
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"class.display::mojom::internal::DisplayPlacement_Data", %"class.display::mojom::internal::DisplayPlacement_Data"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 1
  %14 = icmp ult i32 %13, 4
  br i1 %14, label %15, label %22

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %1, i64 0, i32 2
  store i32 %13, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %1, i64 0, i32 4
  %18 = getelementptr inbounds %"class.display::mojom::internal::DisplayPlacement_Data", %"class.display::mojom::internal::DisplayPlacement_Data"* %0, i64 0, i32 5
  %19 = load i32, i32* %18, align 1
  switch i32 %19, label %22 [
    i32 0, label %20
    i32 1, label %21
  ]

20:                                               ; preds = %15
  store i32 0, i32* %17, align 4
  br label %22

21:                                               ; preds = %15
  store i32 1, i32* %17, align 4
  br label %22

22:                                               ; preds = %2, %15, %21, %20
  %23 = phi i1 [ false, %2 ], [ false, %15 ], [ true, %21 ], [ true, %20 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7display5mojom21DisplayLayoutDataViewENSt3__110unique_ptrINS1_13DisplayLayoutENS4_14default_deleteIS6_EEEEE4ReadES3_PS9_(%"class.display::mojom::internal::DisplayLayout_Data"*, %"class.mojo::Message"*, %"class.std::__1::unique_ptr"* nocapture) local_unnamed_addr #3 align 2 {
  %4 = tail call i8* @_Znwm(i64 40) #8
  %5 = bitcast i8* %4 to %"class.display::DisplayLayout"*
  tail call void @_ZN7display13DisplayLayoutC1Ev(%"class.display::DisplayLayout"* nonnull %5) #9
  %6 = ptrtoint i8* %4 to i64
  %7 = getelementptr inbounds %"class.display::mojom::internal::DisplayLayout_Data", %"class.display::mojom::internal::DisplayLayout_Data"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = bitcast i8* %4 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 8
  %15 = bitcast i8* %14 to i64*
  store i64 %13, i64* %15, align 8
  br label %22

16:                                               ; preds = %3
  %17 = bitcast i8* %4 to %"class.std::__1::vector.22"*
  %18 = bitcast %"struct.mojo::internal::Pointer"* %7 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %9
  %20 = bitcast i8* %19 to %"class.mojo::internal::Array_Data"*
  %21 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7display5mojom24DisplayPlacementDataViewEEENSt3__16vectorINS3_16DisplayPlacementENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal21DisplayPlacement_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data"* nonnull %20, %"class.std::__1::vector.22"* nonnull %17, %"class.mojo::Message"* %1) #9
  br i1 %21, label %22, label %37

22:                                               ; preds = %11, %16
  %23 = getelementptr inbounds %"class.display::mojom::internal::DisplayLayout_Data", %"class.display::mojom::internal::DisplayLayout_Data"* %0, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds i8, i8* %4, i64 24
  store i8 %25, i8* %26, align 8
  %27 = getelementptr inbounds %"class.display::mojom::internal::DisplayLayout_Data", %"class.display::mojom::internal::DisplayLayout_Data"* %0, i64 0, i32 3
  %28 = load i64, i64* %27, align 1
  %29 = getelementptr inbounds i8, i8* %4, i64 32
  %30 = bitcast i8* %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.display::DisplayLayout"*, %"class.display::DisplayLayout"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %6, i64* %33, align 8
  %34 = icmp eq %"class.display::DisplayLayout"* %32, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %22
  tail call void @_ZN7display13DisplayLayoutD1Ev(%"class.display::DisplayLayout"* nonnull %32) #9
  %36 = bitcast %"class.display::DisplayLayout"* %32 to i8*
  tail call void @_ZdlPv(i8* %36) #8
  br label %38

37:                                               ; preds = %16
  tail call void @_ZN7display13DisplayLayoutD1Ev(%"class.display::DisplayLayout"* nonnull %5) #9
  tail call void @_ZdlPv(i8* nonnull %4) #8
  br label %38

38:                                               ; preds = %35, %22, %37
  %39 = phi i1 [ false, %37 ], [ true, %22 ], [ true, %35 ]
  ret i1 %39
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN7display13DisplayLayoutC1Ev(%"class.display::DisplayLayout"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7display13DisplayLayoutD1Ev(%"class.display::DisplayLayout"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7display5mojom24DisplayPlacementDataViewEEENSt3__16vectorINS3_16DisplayPlacementENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal21DisplayPlacement_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data"*, %"class.std::__1::vector.22"*, %"class.mojo::Message"*) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.display::DisplayPlacement"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.22"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 5
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %39, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %15
  %18 = shl nuw nsw i64 %6, 5
  %19 = tail call i8* @_Znwm(i64 %18) #8
  %20 = bitcast i8* %19 to %"struct.display::DisplayPlacement"*
  %21 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %"struct.display::DisplayPlacement"* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN7display16DisplayPlacementC1Ev(%"struct.display::DisplayPlacement"* %24) #9
  %25 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %24, i64 1
  %26 = icmp eq %"struct.display::DisplayPlacement"* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.display::DisplayPlacement"* %21 to i64
  %29 = load i64, i64* %10, align 8
  br label %30

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %32 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %32, i64* %10, align 8
  store i64 %31, i64* %8, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"struct.display::DisplayPlacement"** %34 to i64*
  store i64 %31, i64* %35, align 8
  %36 = icmp eq i64 %33, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %38) #8
  br label %39

39:                                               ; preds = %3, %37, %30
  %40 = load i32, i32* %4, align 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %86, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %0, i64 1
  %44 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %42, %82
  %46 = phi i64 [ 0, %42 ], [ %53, %82 ]
  %47 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %43, i64 %46
  %48 = bitcast %"class.mojo::internal::Array_Data"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  %51 = bitcast %"class.mojo::internal::Array_Data"* %47 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 %49
  %53 = add nuw nsw i64 %46, 1
  %54 = load %"struct.display::DisplayPlacement"*, %"struct.display::DisplayPlacement"** %44, align 8
  %55 = icmp eq i8* %52, null
  %56 = or i1 %50, %55
  br i1 %56, label %82, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds i8, i8* %52, i64 8
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 1
  %61 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %54, i64 %46, i32 0
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %52, i64 16
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 1
  %65 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %54, i64 %46, i32 1
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds i8, i8* %52, i64 28
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 1
  %69 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %54, i64 %46, i32 3
  store i32 %68, i32* %69, align 4
  %70 = getelementptr inbounds i8, i8* %52, i64 24
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 1
  %73 = icmp ult i32 %72, 4
  br i1 %73, label %74, label %86

74:                                               ; preds = %57
  %75 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %54, i64 %46, i32 2
  store i32 %72, i32* %75, align 4
  %76 = getelementptr inbounds i8, i8* %52, i64 32
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 1
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %80, label %86

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.display::DisplayPlacement", %"struct.display::DisplayPlacement"* %54, i64 %46, i32 4
  store i32 %78, i32* %81, align 4
  br label %82

82:                                               ; preds = %80, %45
  %83 = load i32, i32* %4, align 1
  %84 = zext i32 %83 to i64
  %85 = icmp ult i64 %53, %84
  br i1 %85, label %45, label %86

86:                                               ; preds = %74, %57, %82, %39
  %87 = phi i1 [ true, %39 ], [ false, %74 ], [ false, %57 ], [ true, %82 ]
  ret i1 %87
}

declare void @_ZN7display16DisplayPlacementC1Ev(%"struct.display::DisplayPlacement"*) unnamed_addr #5

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
