; ModuleID = '../../third_party/blink/renderer/core/animation/css_interpolation_type.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css_interpolation_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.23", i32, [4 x i8], %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.135", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i64 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.129", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i64 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { float }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.138", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.147" }
%"class.WTF::Vector.147" = type { %"class.WTF::VectorBuffer.148" }
%"class.WTF::VectorBuffer.148" = type { %"class.WTF::VectorBufferBase.149" }
%"class.WTF::VectorBufferBase.149" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.163" }
%"class.WTF::VectorBuffer.163" = type { %"class.WTF::VectorBufferBase.164" }
%"class.WTF::VectorBufferBase.164" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.94"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.200" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::CSSInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PropertyRegistration"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member", %class.scoped_refptr.4, %"class.WTF::Vector.18", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%class.scoped_refptr.4 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.5", %"class.WTF::Vector.7", %"class.WTF::Vector.12", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.5" = type { %"class.base::RefCounted.6" }
%"class.base::RefCounted.6" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9" }
%"class.WTF::VectorBufferBase.9" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.15 }
%union.anon.15 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.207, i32, [4 x i8] }>
%class.scoped_refptr.207 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.208" }
%"struct.std::__1::atomic.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__atomic_base.210" }
%"struct.std::__1::__atomic_base.210" = type { %"struct.std::__1::__cxx_atomic_impl.211" }
%"struct.std::__1::__cxx_atomic_impl.211" = type { %"struct.std::__1::__cxx_atomic_base_impl.212" }
%"struct.std::__1::__cxx_atomic_base_impl.212" = type { i32 }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.213", %class.scoped_refptr.219 }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.219 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.220", [4 x i8] }>
%"class.WTF::RefCounted.220" = type { %"class.base::RefCounted.221" }
%"class.base::RefCounted.221" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.222" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224" }
%"class.WTF::VectorBufferBase.224" = type { %"class.std::__1::unique_ptr.225"*, i32, i32 }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.1471" }
%"class.std::__1::__compressed_pair.1471" = type { %"struct.std::__1::__compressed_pair_elem.1472" }
%"struct.std::__1::__compressed_pair_elem.1472" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.std::__1::unique_ptr.1390" = type { %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.1392" }
%"struct.std::__1::__compressed_pair_elem.1392" = type { %"class.blink::ResolvedVariableChecker"* }
%"class.blink::ResolvedVariableChecker" = type { %"class.blink::InterpolationType::ConversionChecker", i32, %"class.blink::Persistent.1393", %"class.blink::Persistent.1393" }
%"class.blink::Persistent.1393" = type { %"class.blink::PersistentBase.1394" }
%"class.blink::PersistentBase.1394" = type { %"class.blink::CSSValue"*, %"class.blink::PersistentNodePtr.361" }
%"class.blink::PersistentNodePtr.361" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.1398" = type { %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { %"class.blink::RevertChecker"* }
%"class.blink::RevertChecker" = type { %"class.blink::InterpolationType::ConversionChecker", %"class.blink::PropertyHandle", %"class.blink::Persistent.1393" }
%"class.blink::CSSInterpolationEnvironment" = type { %"class.blink::InterpolationEnvironment", %"class.blink::StyleResolverState"*, %"class.blink::ComputedStyle"*, %"class.blink::StyleCascade"*, %"class.blink::CascadeResolver"* }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.749, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.260, %class.scoped_refptr.260, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.260, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.242" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.234", %"class.blink::Member.234" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.234", %"class.blink::Member.236", %"class.blink::Member.234", %"class.blink::Member.234", %"class.blink::Member.238" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.407", %"class.blink::Member.409", %"class.blink::Member.236", %"class.blink::Member.411", %"class.blink::Member.411", %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::Member.439", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.444", %"class.blink::HeapVector.446" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::Document"* }
%"class.blink::Member.411" = type { %"class.blink::MemberBase.412" }
%"class.blink::MemberBase.412" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.415" }
%"class.blink::HeapHashMap.415" = type { %"class.WTF::HashMap.418" }
%"class.WTF::HashMap.418" = type { %"class.WTF::HashTable.419" }
%"class.WTF::HashTable.419" = type <{ %"struct.WTF::KeyValuePair.421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.421" = type { %"class.WTF::AtomicString", %"class.blink::Member.422" }
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.426", i32, %"class.blink::HeapVector.428" }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.428" = type { %"class.WTF::Vector.431" }
%"class.WTF::Vector.431" = type { %"class.WTF::VectorBuffer.432" }
%"class.WTF::VectorBuffer.432" = type { %"class.WTF::VectorBufferBase.433" }
%"class.WTF::VectorBufferBase.433" = type { %"class.blink::Member.426"*, i32, i32 }
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.441" }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::HeapHashMap.443"* }
%"class.blink::HeapHashMap.443" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.446" = type { %"class.WTF::Vector.449" }
%"class.WTF::Vector.449" = type { %"class.WTF::VectorBuffer.450" }
%"class.WTF::VectorBuffer.450" = type { %"class.WTF::VectorBufferBase.451" }
%"class.WTF::VectorBufferBase.451" = type { %"class.blink::Member.452"*, i32, i32 }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.242" = type { %"class.blink::MemberBase.243" }
%"class.blink::MemberBase.243" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.246", %"class.blink::Member.248", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.246" = type { %"class.WTF::SingleThreadedBitField.247" }
%"class.WTF::SingleThreadedBitField.247" = type { i32 }
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.252 }
%class.scoped_refptr.252 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.253", %"class.WTF::AtomicString", %"class.WTF::Vector.255" }
%"class.WTF::RefCounted.253" = type { %"class.base::RefCounted.254" }
%"class.base::RefCounted.254" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.255" = type { %"class.WTF::VectorBuffer.256" }
%"class.WTF::VectorBuffer.256" = type { %"class.WTF::VectorBufferBase.257", [32 x i8] }
%"class.WTF::VectorBufferBase.257" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1036", %"class.WTF::Vector.1036", i8, i32, %"class.blink::Member.1043", %"class.blink::Member.1045", %"class.blink::Member.1047", %"class.blink::Member.1049", %"class.blink::Member.1051", %"class.blink::Member.1053", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1061", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1067", %"class.blink::Member.1069", %"class.blink::Member.452", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1072", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.428", %"class.blink::Member.426", %"class.blink::Member.1097", %"class.blink::Member.426", %"class.blink::Member.426", %"class.blink::Member.426", %"class.blink::UserActionElementSet", %"class.blink::Member.1106", double, double, i64, i64, %"class.blink::HeapHashSet.1108", %"class.blink::HeapHashSet.1115", i16, i8, %"class.blink::Member.1122", %"class.blink::Member.1124", %"class.blink::Member.1126", %"class.blink::Member.1128", %"class.blink::TextLinkColors", %"class.blink::Member.1130", i8, [7 x i8], %"class.blink::HeapHashMap.1132", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.426", %"class.WTF::Vector.1139", %"class.blink::Member.1144", %"class.blink::Member.1146", i8, %"class.blink::Member.426", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1148", %"class.blink::HeapVector.1150", %"class.std::__1::unique_ptr.1158", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1164", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1177", %"class.WTF::Vector.1179", i8, i8, %"class.std::__1::unique_ptr.1184", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.428", %"class.blink::HeapVector.1190", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1198", i8, i32, %"class.blink::Member.1200", %"class.blink::Member.1202", %"class.blink::Member.1204", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1206", %"class.WTF::HashMap.1208", %"class.blink::Member.1213", %"class.blink::Member.1215", %"class.blink::Member.1217", %"class.blink::Member.1219", %"class.blink::Member.409", %"class.blink::Member.409", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1221", i8, i32, %"class.blink::Member.1228", %"class.blink::Member.1230", i32, %"class.blink::Member.1232", %"class.blink::Member.1234", %"class.blink::Member.1236", %"class.std::__1::unique_ptr.1238", i64, %"class.std::__1::unique_ptr.1244", i32, i32, %"class.blink::Member.1259", %"class.blink::Member.1261", %"class.blink::Member.1263", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1265", %"class.WTF::Vector.1267", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1272", %"class.blink::Member.1279", %"class.std::__1::unique_ptr.1281", %"class.blink::Member.1287", i8, i8, %"class.WTF::String", %"class.blink::Member.1289", i8, [7 x i8], %"class.blink::HeapHashMap.1291", %"class.blink::HeapObserverSet.1298", %"class.blink::Member.1306", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1308", i32, i8, i8, %"class.blink::WeakMember.1310", %"class.blink::Member.1311" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1029" }
%"class.blink::HeapHashMap.1029" = type { %"class.WTF::HashMap.1032" }
%"class.WTF::HashMap.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"struct.WTF::KeyValuePair.1035"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1035" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1036" = type { %"class.WTF::VectorBuffer.1037" }
%"class.WTF::VectorBuffer.1037" = type { %"class.WTF::VectorBufferBase.1038" }
%"class.WTF::VectorBufferBase.1038" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1039 }
%class.scoped_refptr.1039 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1040", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1040" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1324", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1357", i32, i8, [3 x i8], %"class.blink::HeapVector.1359", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1367", %"class.blink::Member.1369", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1378", %"class.blink::Member.1384", %"class.blink::Member.1386", i8, [7 x i8] }>
%"class.blink::Supplementable.1324" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1325" }
%"class.blink::HeapHashMap.1325" = type { %"class.WTF::HashMap.1328" }
%"class.WTF::HashMap.1328" = type { %"class.WTF::HashTable.1329" }
%"class.WTF::HashTable.1329" = type <{ %"struct.WTF::KeyValuePair.1331"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1331" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1332" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.997" }
%"class.blink::HeapHashSet.997" = type { %"class.WTF::HashSet.1000" }
%"class.WTF::HashSet.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"class.blink::WeakMember.1003"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1003" = type opaque
%"class.blink::Supplementable.1332" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1333" }
%"class.blink::HeapHashMap.1333" = type { %"class.WTF::HashMap.1336" }
%"class.WTF::HashMap.1336" = type { %"class.WTF::HashTable.1337" }
%"class.WTF::HashTable.1337" = type <{ %"struct.WTF::KeyValuePair.1339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1339" = type { i8*, %"class.blink::Member.1427" }
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1429" }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1340, %"class.std::__1::unique_ptr.1341", %"class.std::__1::unique_ptr.1341", %"class.std::__1::unique_ptr.1347", %"class.std::__1::unique_ptr.1347", %"class.blink::Member.1045", i32, [4 x i8], %"class.WTF::HashSet.1353", i32, i32 }
%class.scoped_refptr.1340 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1341" = type { %"class.std::__1::__compressed_pair.1342" }
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.1343" }
%"struct.std::__1::__compressed_pair_elem.1343" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1347" = type { %"class.std::__1::__compressed_pair.1348" }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.1349" }
%"struct.std::__1::__compressed_pair_elem.1349" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1353" = type { %"class.WTF::HashTable.1354" }
%"class.WTF::HashTable.1354" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1357" = type { %"class.blink::MemberBase.1358" }
%"class.blink::MemberBase.1358" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1359" = type { %"class.WTF::Vector.1362" }
%"class.WTF::Vector.1362" = type { %"class.WTF::VectorBuffer.1363" }
%"class.WTF::VectorBuffer.1363" = type { %"class.WTF::VectorBufferBase.1364" }
%"class.WTF::VectorBufferBase.1364" = type { %"class.blink::Member.1365"*, i32, i32 }
%"class.blink::Member.1365" = type opaque
%"class.blink::Member.1367" = type { %"class.blink::MemberBase.1368" }
%"class.blink::MemberBase.1368" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1371", i32, i32 }
%"class.blink::HeapHashMap.1371" = type { %"class.WTF::HashMap.1374" }
%"class.WTF::HashMap.1374" = type { %"class.WTF::HashTable.1375" }
%"class.WTF::HashTable.1375" = type <{ %"struct.WTF::KeyValuePair.1377"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1377" = type opaque
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1055" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.blink::KURL"* }
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1071 }
%class.scoped_refptr.1071 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1072" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1075 }
%class.scoped_refptr.1075 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1076", i32, i32, %"class.blink::Persistent.1078" }
%"class.WTF::RefCounted.1076" = type { %"class.base::RefCounted.1077" }
%"class.base::RefCounted.1077" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1078" = type { %"class.blink::PersistentBase.1079" }
%"class.blink::PersistentBase.1079" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.361" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1082" }
%"class.blink::HeapHashMap.1082" = type { %"class.WTF::HashMap.1085" }
%"class.WTF::HashMap.1085" = type { %"class.WTF::HashTable.1086" }
%"class.WTF::HashTable.1086" = type <{ %"struct.WTF::KeyValuePair.1088"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1088" = type { %"class.blink::WeakMember.1089", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1099" }
%"class.blink::HeapHashMap.1099" = type { %"class.WTF::HashMap.1102" }
%"class.WTF::HashMap.1102" = type { %"class.WTF::HashTable.1103" }
%"class.WTF::HashTable.1103" = type <{ %"struct.WTF::KeyValuePair.1105"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1105" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1108" = type { %"class.WTF::HashSet.1111" }
%"class.WTF::HashSet.1111" = type { %"class.WTF::HashTable.1112" }
%"class.WTF::HashTable.1112" = type <{ %"class.blink::WeakMember.1114"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1114" = type opaque
%"class.blink::HeapHashSet.1115" = type { %"class.WTF::HashSet.1118" }
%"class.WTF::HashSet.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"class.blink::WeakMember.1121"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1121" = type opaque
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1132" = type { %"class.WTF::HashMap.1135" }
%"class.WTF::HashMap.1135" = type { %"class.WTF::HashTable.1136" }
%"class.WTF::HashTable.1136" = type <{ %"struct.WTF::KeyValuePair.1138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1138" = type opaque
%"class.WTF::Vector.1139" = type { %"class.WTF::VectorBuffer.1140" }
%"class.WTF::VectorBuffer.1140" = type { %"class.WTF::VectorBufferBase.1141" }
%"class.WTF::VectorBufferBase.1141" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1150" = type { %"class.WTF::Vector.1153" }
%"class.WTF::Vector.1153" = type { %"class.WTF::VectorBuffer.1154" }
%"class.WTF::VectorBuffer.1154" = type { %"class.WTF::VectorBufferBase.1155" }
%"class.WTF::VectorBufferBase.1155" = type { %"class.blink::Member.1156"*, i32, i32 }
%"class.blink::Member.1156" = type opaque
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1164" = type { %"class.WTF::HashSet.1167" }
%"class.WTF::HashSet.1167" = type { %"class.WTF::HashTable.1168" }
%"class.WTF::HashTable.1168" = type <{ %"class.blink::WeakMember.1170"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1170" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1171", i32, [4 x i8] }>
%"class.WTF::Vector.1171" = type { %"class.WTF::VectorBuffer.1172" }
%"class.WTF::VectorBuffer.1172" = type { %"class.WTF::VectorBufferBase.1173" }
%"class.WTF::VectorBufferBase.1173" = type { %"struct.std::__1::pair.1174"*, i32, i32 }
%"struct.std::__1::pair.1174" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1179" = type { %"class.WTF::VectorBuffer.1180" }
%"class.WTF::VectorBuffer.1180" = type { %"class.WTF::VectorBufferBase.1181" }
%"class.WTF::VectorBufferBase.1181" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1190" = type { %"class.WTF::Vector.1193" }
%"class.WTF::Vector.1193" = type { %"class.WTF::VectorBuffer.1194" }
%"class.WTF::VectorBuffer.1194" = type { %"class.WTF::VectorBufferBase.1195" }
%"class.WTF::VectorBufferBase.1195" = type { %"class.blink::Member.1196"*, i32, i32 }
%"class.blink::Member.1196" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.409" }
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1206" = type { %"class.blink::MemberBase.1207" }
%"class.blink::MemberBase.1207" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1208" = type { %"class.WTF::HashTable.1209" }
%"class.WTF::HashTable.1209" = type <{ %"struct.WTF::KeyValuePair.1212"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1212" = type opaque
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1219" = type { %"class.blink::MemberBase.1220" }
%"class.blink::MemberBase.1220" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1096", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1093, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1093 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1094" }>
%"class.base::RefCountedThreadSafe.1094" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1095 }
%class.scoped_refptr.1095 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.332", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.332" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.313" }
%"struct.std::__1::atomic.313" = type { %"struct.std::__1::__atomic_base.314" }
%"struct.std::__1::__atomic_base.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__cxx_atomic_impl.316" }
%"struct.std::__1::__cxx_atomic_impl.316" = type { %"struct.std::__1::__cxx_atomic_base_impl.317" }
%"struct.std::__1::__cxx_atomic_base_impl.317" = type { i8 }
%"class.blink::WeakMember.1096" = type { %"class.blink::MemberBase.410" }
%"class.blink::HeapHashSet.1221" = type { %"class.WTF::HashSet.1224" }
%"class.WTF::HashSet.1224" = type { %"class.WTF::HashTable.1225" }
%"class.WTF::HashTable.1225" = type <{ %"class.blink::Member.1227"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1227" = type opaque
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1244" = type { %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.1246" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1247", %"class.WTF::HashSet.1247", %"class.WTF::HashSet.1247", %"class.WTF::HashSet.1247", %"class.WTF::HashSet.1247", %"class.WTF::HashSet.1247", i32, [4 x i8], %"class.WTF::HashMap.1251", %"class.WTF::HashMap.1251", %"class.WTF::HashMap.1251", %"class.WTF::HashMap.1251", %"class.WTF::HashMap.1251", %"class.WTF::HashMap.1251", %"class.WTF::HashMap.1251", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1251" = type { %"class.WTF::HashTable.1252" }
%"class.WTF::HashTable.1252" = type <{ %"struct.WTF::KeyValuePair.1255"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1255" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1267" = type { %"class.WTF::VectorBuffer.1268" }
%"class.WTF::VectorBuffer.1268" = type { %"class.WTF::VectorBufferBase.1269" }
%"class.WTF::VectorBufferBase.1269" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1272" = type { %"class.WTF::HashMap.1275" }
%"class.WTF::HashMap.1275" = type { %"class.WTF::HashTable.1276" }
%"class.WTF::HashTable.1276" = type <{ %"struct.WTF::KeyValuePair.1278"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1278" = type opaque
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1281" = type { %"class.std::__1::__compressed_pair.1282" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1291" = type { %"class.WTF::HashMap.1294" }
%"class.WTF::HashMap.1294" = type { %"class.WTF::HashTable.1295" }
%"class.WTF::HashTable.1295" = type <{ %"struct.WTF::KeyValuePair.1297"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1297" = type opaque
%"class.blink::HeapObserverSet.1298" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1299" }
%"class.blink::HeapHashSet.1299" = type { %"class.WTF::HashSet.1302" }
%"class.WTF::HashSet.1302" = type { %"class.WTF::HashTable.1303" }
%"class.WTF::HashTable.1303" = type <{ %"class.blink::WeakMember.1305"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1305" = type opaque
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.409", %"class.blink::HeapHashSet.1315", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1322", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1315" = type { %"class.WTF::HashSet.1318" }
%"class.WTF::HashSet.1318" = type { %"class.WTF::HashTable.1319" }
%"class.WTF::HashTable.1319" = type <{ %"class.blink::Member.1321"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1321" = type opaque
%"class.blink::HeapTaskRunnerTimer.1322" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1323", { i64, i64 } }
%"class.blink::WeakMember.1323" = type { %"class.blink::MemberBase.1309" }
%"class.blink::WeakMember.1310" = type { %"class.blink::MemberBase.235" }
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.749 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.301 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.269, %class.scoped_refptr.277, %class.scoped_refptr.287, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.300 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.268 }
%class.scoped_refptr.268 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1388", [4 x i8] }>
%"class.WTF::RefCounted.1388" = type { %"class.base::RefCounted.1389" }
%"class.base::RefCounted.1389" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.269 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.275", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.270" }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.275" = type { %"class.base::RefCounted.276" }
%"class.base::RefCounted.276" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.277 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.278", %"class.WTF::RefCounted.285", [4 x i8] }>
%"class.blink::FontSettings.278" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"class.blink::FontTagValuePair.282"*, i32, i32 }
%"class.blink::FontTagValuePair.282" = type { i32, float }
%"class.WTF::RefCounted.285" = type { %"class.base::RefCounted.286" }
%"class.base::RefCounted.286" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.287 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.288", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.297, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.288" = type { %"class.base::RefCounted.289" }
%"class.base::RefCounted.289" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.292 }
%union.anon.292 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.297 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.298", [4 x i8] }>
%"class.WTF::RefCounted.298" = type { %"class.base::RefCounted.299" }
%"class.base::RefCounted.299" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.300 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.301 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.302", %"class.WTF::Vector.304", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.329", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.302" = type { %"class.base::RefCounted.303" }
%"class.base::RefCounted.303" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.304" = type { %"class.WTF::VectorBuffer.305" }
%"class.WTF::VectorBuffer.305" = type { %"class.WTF::VectorBufferBase.306", [8 x i8] }
%"class.WTF::VectorBufferBase.306" = type { %class.scoped_refptr.307*, i32, i32 }
%class.scoped_refptr.307 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.308", [4 x i8] }>
%"class.WTF::RefCounted.308" = type { %"class.base::RefCounted.309" }
%"class.base::RefCounted.309" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.319", %class.scoped_refptr.326, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.308" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.312 }
%union.anon.312 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.318, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.208" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.208" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.313" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.318 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.322, %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.326 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.327", [4 x i8] }>
%"class.WTF::RefCounted.327" = type { %"class.base::RefCounted.328" }
%"class.base::RefCounted.328" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent.329" = type { %"class.blink::PersistentBase.330" }
%"class.blink::PersistentBase.330" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.331 }
%class.scoped_refptr.331 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.260 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.750", %"class.WTF::Vector.900", %"class.blink::HeapHashSet.905", %"class.WTF::Vector.900", %"class.blink::HeapVector.912", %"class.blink::HeapVector.919", %"class.blink::HeapHashMap.926", %"class.WTF::HashSet.933", %"class.WTF::HashSet.933", %"class.blink::HeapHashMap.937", %"class.blink::HeapHashMap.937", %"class.blink::HeapHashMap.937", %"class.blink::HeapHashMap.937" }
%"class.blink::HeapVector.750" = type { %"class.WTF::Vector.753" }
%"class.WTF::Vector.753" = type { %"class.WTF::VectorBuffer.754" }
%"class.WTF::VectorBuffer.754" = type { %"class.WTF::VectorBufferBase.755" }
%"class.WTF::VectorBufferBase.755" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.756", %"struct.blink::Timing", %"class.blink::Member.830", i32, %"class.blink::Member.842", %"class.WTF::Vector.606" }
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.779", i8, %"class.absl::optional.760", %"class.absl::optional.825" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.758", %"struct.blink::Timing", %"class.blink::Member.765", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.760", %"class.absl::optional.774", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.769", %"class.absl::optional.769", i8, i8, i8, %"class.absl::optional.760", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.769" = type { %"class.absl::optional_internal::optional_data.770" }
%"class.absl::optional_internal::optional_data.770" = type { %"class.absl::optional_internal::optional_data_base.771" }
%"class.absl::optional_internal::optional_data_base.771" = type { %"class.absl::optional_internal::optional_data_dtor_base.772" }
%"class.absl::optional_internal::optional_data_dtor_base.772" = type { i8, %union.anon.773 }
%union.anon.773 = type { double }
%"class.absl::optional.774" = type { %"class.absl::optional_internal::optional_data.775" }
%"class.absl::optional_internal::optional_data.775" = type { %"class.absl::optional_internal::optional_data_base.776" }
%"class.absl::optional_internal::optional_data_base.776" = type { %"class.absl::optional_internal::optional_data_dtor_base.777" }
%"class.absl::optional_internal::optional_data_dtor_base.777" = type { i8, %union.anon.778 }
%union.anon.778 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.783", %"class.blink::Member.791", %"class.blink::Member.813", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.207, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.783" = type { %"class.WTF::Vector.786" }
%"class.WTF::Vector.786" = type { %"class.WTF::VectorBuffer.787" }
%"class.WTF::VectorBuffer.787" = type { %"class.WTF::VectorBufferBase.788" }
%"class.WTF::VectorBufferBase.788" = type { %"class.blink::Member.789"*, i32, i32 }
%"class.blink::Member.789" = type { %"class.blink::MemberBase.1438" }
%"class.blink::MemberBase.1438" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.769", %"class.absl::optional.1441", %class.scoped_refptr.207 }
%"class.absl::optional.1441" = type { %"class.absl::optional_internal::optional_data.1442" }
%"class.absl::optional_internal::optional_data.1442" = type { %"class.absl::optional_internal::optional_data_base.1443" }
%"class.absl::optional_internal::optional_data_base.1443" = type { %"class.absl::optional_internal::optional_data_dtor_base.1444" }
%"class.absl::optional_internal::optional_data_dtor_base.1444" = type { i8, %union.anon.1445 }
%union.anon.1445 = type { i32 }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::HeapHashMap.793"* }
%"class.blink::HeapHashMap.793" = type { %"class.WTF::HashMap.796" }
%"class.WTF::HashMap.796" = type { %"class.WTF::HashTable.797" }
%"class.WTF::HashTable.797" = type <{ %"struct.WTF::KeyValuePair.799"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.799" = type { %"class.blink::PropertyHandle", %"class.blink::Member.800" }
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.804" }
%"class.blink::HeapVector.804" = type { %"class.WTF::Vector.807" }
%"class.WTF::Vector.807" = type { %"class.WTF::VectorBuffer.808" }
%"class.WTF::VectorBuffer.808" = type { %"class.WTF::VectorBufferBase.809" }
%"class.WTF::VectorBufferBase.809" = type { %"class.blink::Member.810"*, i32, i32 }
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.817" }
%"class.blink::HeapVector.817" = type { %"class.WTF::Vector.820" }
%"class.WTF::Vector.820" = type { %"class.WTF::VectorBuffer.821" }
%"class.WTF::VectorBuffer.821" = type { %"class.WTF::VectorBufferBase.822" }
%"class.WTF::VectorBufferBase.822" = type { %"class.blink::Member.823"*, i32, i32 }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1434", %class.scoped_refptr.207, double, double, double, double }
%"class.blink::Member.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.760" = type { %"class.absl::optional_internal::optional_data.761" }
%"class.absl::optional_internal::optional_data.761" = type { %"class.absl::optional_internal::optional_data_base.762" }
%"class.absl::optional_internal::optional_data_base.762" = type { %"class.absl::optional_internal::optional_data_dtor_base.763" }
%"class.absl::optional_internal::optional_data_dtor_base.763" = type { i8, %union.anon.764 }
%union.anon.764 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.825" = type { %"class.absl::optional_internal::optional_data.826" }
%"class.absl::optional_internal::optional_data.826" = type { %"class.absl::optional_internal::optional_data_base.827" }
%"class.absl::optional_internal::optional_data_base.827" = type { %"class.absl::optional_internal::optional_data_dtor_base.828" }
%"class.absl::optional_internal::optional_data_dtor_base.828" = type { i8, %union.anon.829 }
%union.anon.829 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.760", i32, [4 x i8], %class.scoped_refptr.207, i16, [6 x i8] }>
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.834", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.834" = type { %"class.WTF::Vector.837" }
%"class.WTF::Vector.837" = type { %"class.WTF::VectorBuffer.838" }
%"class.WTF::VectorBuffer.838" = type { %"class.WTF::VectorBufferBase.839" }
%"class.WTF::VectorBufferBase.839" = type { %"class.blink::Member.840"*, i32, i32 }
%"class.blink::Member.840" = type opaque
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.409", i32, [4 x i8], %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.850", %"class.std::__1::unique_ptr.856", %"class.absl::optional.889" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.846" }
%"class.WTF::HashTable.846" = type <{ %"class.blink::Member.848"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.848" = type { %"class.blink::MemberBase.849" }
%"class.blink::MemberBase.849" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.769", %"class.absl::optional.760", %"class.absl::optional.760", %"class.absl::optional.825", %"class.absl::optional.760", i8, [3 x i8], i32, %"class.blink::Member.1004", %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.409", %"class.blink::Member.842", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.blink::Member.1008", %"class.std::__1::unique_ptr.1010", i8, [3 x i8], i32, %"class.blink::Member.1016", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.988" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.976" }
%"class.blink::HeapVector.976" = type { %"class.WTF::Vector.979" }
%"class.WTF::Vector.979" = type { %"class.WTF::VectorBuffer.980" }
%"class.WTF::VectorBuffer.980" = type { %"class.WTF::VectorBufferBase.981", [32 x i8] }
%"class.WTF::VectorBufferBase.981" = type { %"struct.std::__1::pair.982"*, i32, i32 }
%"struct.std::__1::pair.982" = type { %"class.WTF::AtomicString", %"class.blink::Member.983" }
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::HeapVector.985"* }
%"class.blink::HeapVector.985" = type opaque
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.WTF::Vector.991"* }
%"class.WTF::Vector.991" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.995" }
%"class.blink::WeakMember.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.769", %"class.absl::optional.769", double, i8, i32 }
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1020", %"class.std::__1::unique_ptr.1021", %"class.blink::Member.848" }
%"class.blink::ThreadState::PrefinalizerRegistration.1020" = type { i8 }
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.850" = type { %"class.WTF::HashSet.853" }
%"class.WTF::HashSet.853" = type { %"class.WTF::HashTable.854" }
%"class.WTF::HashTable.854" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.std::__1::unique_ptr.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.859 }
%class.scoped_refptr.859 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.860", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.860" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.861" }
%"class.std::__1::__hash_table.861" = type <{ %"class.std::__1::unique_ptr.862", %"class.std::__1::__compressed_pair.872", %"class.std::__1::__compressed_pair.877", %"class.std::__1::__compressed_pair.881", [4 x i8] }>
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864", %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.std::__1::__hash_node_base.865"** }
%"struct.std::__1::__hash_node_base.865" = type { %"struct.std::__1::__hash_node_base.865"* }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.std::__1::__bucket_list_deallocator.867" }
%"class.std::__1::__bucket_list_deallocator.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"struct.std::__1::__hash_node_base.865" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.889" = type { %"class.absl::optional_internal::optional_data.890" }
%"class.absl::optional_internal::optional_data.890" = type { %"class.absl::optional_internal::optional_data_base.891" }
%"class.absl::optional_internal::optional_data_base.891" = type { %"class.absl::optional_internal::optional_data_dtor_base.892" }
%"class.absl::optional_internal::optional_data_dtor_base.892" = type { i8, %union.anon.893 }
%union.anon.893 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.894" }
%"class.absl::optional.894" = type { %"class.absl::optional_internal::optional_data.895" }
%"class.absl::optional_internal::optional_data.895" = type { %"class.absl::optional_internal::optional_data_base.896" }
%"class.absl::optional_internal::optional_data_base.896" = type { %"class.absl::optional_internal::optional_data_dtor_base.897" }
%"class.absl::optional_internal::optional_data_dtor_base.897" = type { i8, %union.anon.898 }
%union.anon.898 = type { %"class.base::TimeDelta" }
%"class.WTF::Vector.606" = type { %"class.WTF::VectorBuffer.607" }
%"class.WTF::VectorBuffer.607" = type { %"class.WTF::VectorBufferBase.608" }
%"class.WTF::VectorBufferBase.608" = type { i32*, i32, i32 }
%"class.blink::HeapHashSet.905" = type { %"class.WTF::HashSet.908" }
%"class.WTF::HashSet.908" = type { %"class.WTF::HashTable.909" }
%"class.WTF::HashTable.909" = type <{ %"class.blink::Member.911"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.911" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.900" = type { %"class.WTF::VectorBuffer.901" }
%"class.WTF::VectorBuffer.901" = type { %"class.WTF::VectorBufferBase.902" }
%"class.WTF::VectorBufferBase.902" = type { i32*, i32, i32 }
%"class.blink::HeapVector.912" = type { %"class.WTF::Vector.915" }
%"class.WTF::Vector.915" = type { %"class.WTF::VectorBuffer.916" }
%"class.WTF::VectorBuffer.916" = type { %"class.WTF::VectorBufferBase.917" }
%"class.WTF::VectorBufferBase.917" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.848", %"class.blink::Member.756", %"struct.blink::Timing", %"class.blink::Member.830", i32, %"class.blink::Member.842", %"class.WTF::Vector.606" }
%"class.blink::HeapVector.919" = type { %"class.WTF::Vector.922" }
%"class.WTF::Vector.922" = type { %"class.WTF::VectorBuffer.923" }
%"class.WTF::VectorBuffer.923" = type { %"class.WTF::VectorBufferBase.924" }
%"class.WTF::VectorBufferBase.924" = type { %"class.blink::Member.848"*, i32, i32 }
%"class.blink::HeapHashMap.926" = type { %"class.WTF::HashMap.929" }
%"class.WTF::HashMap.929" = type { %"class.WTF::HashTable.930" }
%"class.WTF::HashTable.930" = type <{ %"struct.WTF::KeyValuePair.932"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.932" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1457" }
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.260, %class.scoped_refptr.260, %class.scoped_refptr.260, double, %"class.blink::Member.756" }
%"class.WTF::HashSet.933" = type { %"class.WTF::HashTable.934" }
%"class.WTF::HashTable.934" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.937" = type { %"class.WTF::HashMap.940" }
%"class.WTF::HashMap.940" = type { %"class.WTF::HashTable.941" }
%"class.WTF::HashTable.941" = type <{ %"struct.WTF::KeyValuePair.943"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.943" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1447" }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::HeapVector.1449"* }
%"class.blink::HeapVector.1449" = type { %"class.WTF::Vector.1452" }
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454", [8 x i8] }
%"class.WTF::VectorBufferBase.1454" = type { %"class.blink::Member.1434"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.944", %"class.WTF::HashSet.944", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.944" = type { %"class.WTF::HashTable.945" }
%"class.WTF::HashTable.945" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.734", %"class.std::__1::unique_ptr.736" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.334", %"class.blink::DataRef.457", %"class.blink::DataRef.461", %"class.blink::DataRef.654", %"class.blink::DataRef.717", %"class.blink::DataRef.721", %"class.blink::DataRef.725", %"class.blink::DataRef.729", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.261 }
%class.scoped_refptr.261 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.262", %"class.blink::DataRef.264", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.262" = type { %"class.base::RefCounted.263" }
%"class.base::RefCounted.263" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.264" = type { %class.scoped_refptr.265 }
%class.scoped_refptr.265 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.266", %"class.blink::Font" }
%"class.WTF::RefCounted.266" = type { %"class.base::RefCounted.267" }
%"class.base::RefCounted.267" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Length" = type <{ %union.anon.333, i8, i8, i8, i8 }>
%union.anon.333 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.334" = type { %class.scoped_refptr.335 }
%class.scoped_refptr.335 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.336", [4 x i8], %"class.blink::DataRef.338", %"class.blink::DataRef.374", %"class.WTF::Vector.378", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.382, %class.scoped_refptr.391, %"class.blink::Persistent.399", %"class.blink::Persistent.401", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.336" = type { %"class.base::RefCounted.337" }
%"class.base::RefCounted.337" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.338" = type { %class.scoped_refptr.339 }
%class.scoped_refptr.339 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.340", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.342, %class.scoped_refptr.349, %"class.blink::Persistent.362", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.340" = type { %"class.base::RefCounted.341" }
%"class.base::RefCounted.341" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.342 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.343", %"class.WTF::Vector.344" }
%"class.base::RefCountedThreadSafe.343" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase.346" }
%"class.WTF::VectorBufferBase.346" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.349 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.350", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.350" = type { %"class.base::RefCounted.351" }
%"class.base::RefCounted.351" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.354" }
%"class.blink::PersistentBase.354" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.361" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.357" }
%"class.WTF::HashMap.357" = type { %"class.WTF::HashTable.358" }
%"class.WTF::HashTable.358" = type <{ %"struct.WTF::KeyValuePair.360"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.360" = type opaque
%"class.blink::Persistent.362" = type { %"class.blink::PersistentBase.363" }
%"class.blink::PersistentBase.363" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.361" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.366" }
%"class.WTF::Vector.366" = type { %"class.WTF::VectorBuffer.367" }
%"class.WTF::VectorBuffer.367" = type { %"class.WTF::VectorBufferBase.368" }
%"class.WTF::VectorBufferBase.368" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.369", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.374" = type { %class.scoped_refptr.375 }
%class.scoped_refptr.375 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.376", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.376" = type { %"class.base::RefCounted.377" }
%"class.base::RefCounted.377" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.378" = type { %"class.WTF::VectorBuffer.379" }
%"class.WTF::VectorBuffer.379" = type { %"class.WTF::VectorBufferBase.257" }
%class.scoped_refptr.382 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.383", %"class.WTF::Vector.385" }
%"class.WTF::RefCounted.383" = type { %"class.base::RefCounted.384" }
%"class.base::RefCounted.384" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.385" = type { %"class.WTF::VectorBuffer.386" }
%"class.WTF::VectorBuffer.386" = type { %"class.WTF::VectorBufferBase.387" }
%"class.WTF::VectorBufferBase.387" = type { %"struct.std::__1::pair.388"*, i32, i32 }
%"struct.std::__1::pair.388" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.391 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.392", [4 x i8], %"class.WTF::Vector.394" }
%"class.WTF::RefCounted.392" = type { %"class.base::RefCounted.393" }
%"class.base::RefCounted.393" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.396", [28 x i8] }>
%"class.WTF::VectorBufferBase.396" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.399" = type { %"class.blink::PersistentBase.400" }
%"class.blink::PersistentBase.400" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.361" }
%"class.blink::Persistent.401" = type { %"class.blink::PersistentBase.402" }
%"class.blink::PersistentBase.402" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.361" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.405", %"class.blink::Member.455" }
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.457" = type { %class.scoped_refptr.458 }
%class.scoped_refptr.458 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.459", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.459" = type { %"class.base::RefCounted.460" }
%"class.base::RefCounted.460" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.461" = type { %class.scoped_refptr.462 }
%class.scoped_refptr.462 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.463", [4 x i8], %"class.blink::DataRef.465", %"class.blink::DataRef.531", %"class.blink::TransformOperations", %class.scoped_refptr.391, %"class.blink::Persistent.648", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.463" = type { %"class.base::RefCounted.464" }
%"class.base::RefCounted.464" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.465" = type { %class.scoped_refptr.466 }
%class.scoped_refptr.466 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.467", [4 x i8], %"class.blink::DataRef.469", %"class.blink::Persistent.507", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.467" = type { %"class.base::RefCounted.468" }
%"class.base::RefCounted.468" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.469" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.471", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.489, %class.scoped_refptr.492, %class.scoped_refptr.495, %class.scoped_refptr.498, %class.scoped_refptr.499, %class.scoped_refptr.500, %"class.blink::Persistent.507", %"class.blink::Persistent.522", %"class.absl::optional.526", %"class.absl::optional.526", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.471" = type { %"class.base::RefCounted.472" }
%"class.base::RefCounted.472" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.473", %"class.std::__1::unique_ptr.478" }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.481", %"class.WTF::Vector.473", i32, i32 }
%"class.WTF::Vector.481" = type { %"class.WTF::VectorBuffer.482" }
%"class.WTF::VectorBuffer.482" = type { %"class.WTF::VectorBufferBase.483" }
%"class.WTF::VectorBufferBase.483" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.489 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.490", [4 x i8] }>
%"class.WTF::RefCounted.490" = type { %"class.base::RefCounted.491" }
%"class.base::RefCounted.491" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.492 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.493", [4 x i8] }>
%"class.WTF::RefCounted.493" = type { %"class.base::RefCounted.494" }
%"class.base::RefCounted.494" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.495 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.496" }>
%"class.WTF::RefCounted.496" = type { %"class.base::RefCounted.497" }
%"class.base::RefCounted.497" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.498 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.499 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.500 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.501", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.501" = type { %"class.base::RefCounted.502" }
%"class.base::RefCounted.502" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.503" }
%"class.blink::DataRef.503" = type { %class.scoped_refptr.504 }
%class.scoped_refptr.504 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.399", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.505" }
%"class.WTF::RefCounted.505" = type { %"class.base::RefCounted.506" }
%"class.base::RefCounted.506" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.522" = type { %"class.blink::PersistentBase.523" }
%"class.blink::PersistentBase.523" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.361" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.492, %"class.blink::Member.369", i32, [4 x i8] }>
%"class.absl::optional.526" = type { %"class.absl::optional_internal::optional_data.527" }
%"class.absl::optional_internal::optional_data.527" = type { %"class.absl::optional_internal::optional_data_base.528" }
%"class.absl::optional_internal::optional_data_base.528" = type { %"class.absl::optional_internal::optional_data_dtor_base.529" }
%"class.absl::optional_internal::optional_data_dtor_base.529" = type { i8, [3 x i8], %union.anon.530 }
%union.anon.530 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.507" = type { %"class.blink::PersistentBase.508" }
%"class.blink::PersistentBase.508" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.361" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.511" }
%"class.blink::HeapVector.511" = type { %"class.WTF::Vector.514" }
%"class.WTF::Vector.514" = type { %"class.WTF::VectorBuffer.515" }
%"class.WTF::VectorBuffer.515" = type { %"class.WTF::VectorBufferBase.516" }
%"class.WTF::VectorBufferBase.516" = type { %"class.blink::Member.517"*, i32, i32 }
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.531" = type { %class.scoped_refptr.532 }
%class.scoped_refptr.532 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.533", %"class.blink::DataRef.535", %"class.blink::DataRef.539", %"class.blink::DataRef.548", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.567", %"class.std::__1::unique_ptr.578", %"class.std::__1::unique_ptr.614", %"class.std::__1::unique_ptr.625", %"class.std::__1::unique_ptr.636", %"class.WTF::Vector.7", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.533" = type { %"class.base::RefCounted.534" }
%"class.base::RefCounted.534" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.535" = type { %class.scoped_refptr.536 }
%class.scoped_refptr.536 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.537", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.537" = type { %"class.base::RefCounted.538" }
%"class.base::RefCounted.538" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.539" = type { %class.scoped_refptr.540 }
%class.scoped_refptr.540 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.541", [4 x i8], %"class.WTF::Vector.543", i8, [7 x i8] }>
%"class.WTF::RefCounted.541" = type { %"class.base::RefCounted.542" }
%"class.base::RefCounted.542" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.543" = type { %"class.WTF::VectorBuffer.544" }
%"class.WTF::VectorBuffer.544" = type { %"class.WTF::VectorBufferBase.545" }
%"class.WTF::VectorBufferBase.545" = type { i32*, i32, i32 }
%"class.blink::DataRef.548" = type { %class.scoped_refptr.549 }
%class.scoped_refptr.549 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.550", [4 x i8], %"class.WTF::HashMap.552", %"class.WTF::HashMap.552", %"class.WTF::HashMap.552", %"class.WTF::HashMap.552", %"class.WTF::HashMap.552", %"class.WTF::HashMap.552", %"class.WTF::HashMap.557", %"class.WTF::HashMap.557", %"class.WTF::HashMap.557", %"class.WTF::HashMap.557", %"class.WTF::HashMap.562", %"class.WTF::Vector.473", %"class.WTF::Vector.473", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.550" = type { %"class.base::RefCounted.551" }
%"class.base::RefCounted.551" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.552" = type { %"class.WTF::HashTable.553" }
%"class.WTF::HashTable.553" = type <{ %"struct.WTF::KeyValuePair.556"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.556" = type { %"class.WTF::String", %"class.WTF::Vector.1461" }
%"class.WTF::Vector.1461" = type { %"class.WTF::VectorBuffer.1462" }
%"class.WTF::VectorBuffer.1462" = type { %"class.WTF::VectorBufferBase.1463" }
%"class.WTF::VectorBufferBase.1463" = type { i64*, i32, i32 }
%"class.WTF::HashMap.557" = type { %"class.WTF::HashTable.558" }
%"class.WTF::HashTable.558" = type <{ %"struct.WTF::KeyValuePair.561"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.561" = type { i64, %"class.WTF::Vector.7" }
%"class.WTF::HashMap.562" = type { %"class.WTF::HashTable.563" }
%"class.WTF::HashTable.563" = type <{ %"struct.WTF::KeyValuePair.566"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.566" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.570" }
%"class.WTF::HashMap.570" = type { %"class.WTF::HashTable.571" }
%"class.WTF::HashTable.571" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1466", %"class.absl::optional.1466", %"class.absl::optional.1466" }
%"class.absl::optional.1466" = type { %"class.absl::optional_internal::optional_data.1467" }
%"class.absl::optional_internal::optional_data.1467" = type { %"class.absl::optional_internal::optional_data_base.1468" }
%"class.absl::optional_internal::optional_data_base.1468" = type { %"class.absl::optional_internal::optional_data_dtor_base.1469" }
%"class.absl::optional_internal::optional_data_dtor_base.1469" = type { i8, %union.anon.1470 }
%union.anon.1470 = type { i32 }
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.378", %"class.WTF::Vector.591", %"class.WTF::Vector.581", %"class.WTF::Vector.596", %"class.WTF::Vector.601", %"class.WTF::Vector.606" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.581", %"class.WTF::Vector.581", %"class.WTF::Vector.586" }
%"class.WTF::Vector.586" = type { %"class.WTF::VectorBuffer.587" }
%"class.WTF::VectorBuffer.587" = type { %"class.WTF::VectorBufferBase.588" }
%"class.WTF::VectorBufferBase.588" = type { %class.scoped_refptr.207*, i32, i32 }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.581" = type { %"class.WTF::VectorBuffer.582" }
%"class.WTF::VectorBuffer.582" = type { %"class.WTF::VectorBufferBase.583" }
%"class.WTF::VectorBufferBase.583" = type { double*, i32, i32 }
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { i32*, i32, i32 }
%"class.WTF::Vector.601" = type { %"class.WTF::VectorBuffer.602" }
%"class.WTF::VectorBuffer.602" = type { %"class.WTF::VectorBufferBase.603" }
%"class.WTF::VectorBufferBase.603" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.617" }
%"class.WTF::Vector.617" = type { %"class.WTF::VectorBuffer.618" }
%"class.WTF::VectorBuffer.618" = type { %"class.WTF::VectorBufferBase.619" }
%"class.WTF::VectorBufferBase.619" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.628" }
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::VectorBufferBase.630" = type { %"class.blink::Persistent.399"*, i32, i32 }
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.399", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.642" }
%"class.WTF::Vector.642" = type { %"class.WTF::VectorBuffer.643" }
%"class.WTF::VectorBuffer.643" = type { %"class.WTF::VectorBufferBase.644" }
%"class.WTF::VectorBufferBase.644" = type { %class.scoped_refptr.645*, i32, i32 }
%class.scoped_refptr.645 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.496", [4 x i8] }>
%"class.blink::Persistent.648" = type { %"class.blink::PersistentBase.649" }
%"class.blink::PersistentBase.649" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.361" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.652" }
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.654" = type { %class.scoped_refptr.655 }
%class.scoped_refptr.655 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.656", [4 x i8], %"class.blink::DataRef.658", %"class.blink::DataRef.662", %"class.blink::DataRef.679", %"class.blink::DataRef.697", %"class.blink::DataRef.709", %"class.blink::DataRef.713", %class.scoped_refptr.683, i32, [4 x i8] }>
%"class.WTF::RefCounted.656" = type { %"class.base::RefCounted.657" }
%"class.base::RefCounted.657" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.658" = type { %class.scoped_refptr.659 }
%class.scoped_refptr.659 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.660", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.660" = type { %"class.base::RefCounted.661" }
%"class.base::RefCounted.661" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.662" = type { %class.scoped_refptr.663 }
%class.scoped_refptr.663 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.664", %class.scoped_refptr.666, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.664" = type { %"class.base::RefCounted.665" }
%"class.base::RefCounted.665" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.666 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.667", %"class.std::__1::unique_ptr.673", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.493" }>
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.679" = type { %class.scoped_refptr.680 }
%class.scoped_refptr.680 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.681", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.683, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.697" = type { %class.scoped_refptr.698 }
%class.scoped_refptr.698 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.699", [4 x i8], %class.scoped_refptr.701, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.699" = type { %"class.base::RefCounted.700" }
%"class.base::RefCounted.700" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.701 = type { %"class.base::RefCountedData.702"* }
%"class.base::RefCountedData.702" = type { %"class.base::RefCountedThreadSafe.703", %"class.WTF::Vector.704" }
%"class.base::RefCountedThreadSafe.703" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.704" = type { %"class.WTF::VectorBuffer.705" }
%"class.WTF::VectorBuffer.705" = type { %"class.WTF::VectorBufferBase.706" }
%"class.WTF::VectorBufferBase.706" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.709" = type { %class.scoped_refptr.710 }
%class.scoped_refptr.710 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.711", %class.scoped_refptr.683, %class.scoped_refptr.683, %class.scoped_refptr.683 }
%"class.WTF::RefCounted.711" = type { %"class.base::RefCounted.712" }
%"class.base::RefCounted.712" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.713" = type { %class.scoped_refptr.714 }
%class.scoped_refptr.714 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.715", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.715" = type { %"class.base::RefCounted.716" }
%"class.base::RefCounted.716" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.683 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.684", %"class.blink::Persistent.686", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.684" = type { %"class.base::RefCounted.685" }
%"class.base::RefCounted.685" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.686" = type { %"class.blink::PersistentBase.687" }
%"class.blink::PersistentBase.687" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.361" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.426", %"class.blink::HeapHashMap.690" }
%"class.blink::HeapHashMap.690" = type { %"class.WTF::HashMap.693" }
%"class.WTF::HashMap.693" = type { %"class.WTF::HashTable.694" }
%"class.WTF::HashTable.694" = type <{ %"struct.WTF::KeyValuePair.696"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.696" = type opaque
%"class.blink::DataRef.717" = type { %class.scoped_refptr.718 }
%class.scoped_refptr.718 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.719", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.719" = type { %"class.base::RefCounted.720" }
%"class.base::RefCounted.720" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.721" = type { %class.scoped_refptr.722 }
%class.scoped_refptr.722 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.723", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.723" = type { %"class.base::RefCounted.724" }
%"class.base::RefCounted.724" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.725" = type { %class.scoped_refptr.726 }
%class.scoped_refptr.726 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.727", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.727" = type { %"class.base::RefCounted.728" }
%"class.base::RefCounted.728" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.729" = type { %class.scoped_refptr.730 }
%class.scoped_refptr.730 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.731", %class.scoped_refptr.733 }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.733 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1027", %"class.blink::StyleVariables", %class.scoped_refptr.733 }
%"class.WTF::RefCounted.1027" = type { %"class.base::RefCounted.1028" }
%"class.base::RefCounted.1028" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.734" = type { %"class.base::RefCounted.735" }
%"class.base::RefCounted.735" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.739" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.WTF::Vector.742"* }
%"class.WTF::Vector.742" = type opaque
%"class.blink::StyleCascade" = type <{ %"class.blink::StyleResolverState"*, %"class.blink::MatchResult", %"class.blink::CascadeInterpolations", %"class.blink::CascadeMap", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::MatchResult" = type <{ %"class.blink::HeapVector.948", %"class.blink::HeapVector.956", i8, i8, i8, i8, i16, [2 x i8] }>
%"class.blink::HeapVector.948" = type { %"class.WTF::Vector.951" }
%"class.WTF::Vector.951" = type { %"class.WTF::VectorBuffer.952" }
%"class.WTF::VectorBuffer.952" = type { %"class.WTF::VectorBufferBase.953", [1024 x i8] }
%"class.WTF::VectorBufferBase.953" = type { %"struct.blink::MatchedProperties"*, i32, i32 }
%"struct.blink::MatchedProperties" = type <{ %"class.blink::Member.248", %"struct.blink::MatchedProperties::Data", [4 x i8] }>
%"struct.blink::MatchedProperties::Data" = type { i8, i8, i16 }
%"class.blink::HeapVector.956" = type { %"class.WTF::Vector.959" }
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961", [32 x i8] }
%"class.WTF::VectorBufferBase.961" = type { %"class.blink::Member.405"*, i32, i32 }
%"class.blink::CascadeInterpolations" = type { %"class.WTF::Vector.964" }
%"class.WTF::Vector.964" = type { %"class.WTF::VectorBuffer.965" }
%"class.WTF::VectorBuffer.965" = type { %"class.WTF::VectorBufferBase.966", [64 x i8] }
%"class.WTF::VectorBufferBase.966" = type { %"struct.blink::CascadeInterpolations::Entry"*, i32, i32 }
%"struct.blink::CascadeInterpolations::Entry" = type <{ %"class.blink::HeapHashMap.937"*, i8, [7 x i8] }>
%"class.blink::CascadeMap" = type { i64, i8, %"class.blink::CascadeMap::NativeMap", %"class.blink::CascadeMap::NativeMap", %"class.blink::CascadeMap::NativeMap", %"class.WTF::HashMap.969", %"class.WTF::HashMap.969" }
%"class.blink::CascadeMap::NativeMap" = type { %"class.blink::CSSBitsetBase", [4992 x i8] }
%"class.blink::CSSBitsetBase" = type { [10 x i64] }
%"class.WTF::HashMap.969" = type { %"class.WTF::HashTable.970" }
%"class.WTF::HashTable.970" = type <{ %"struct.WTF::KeyValuePair.973"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.973" = type { %"class.blink::CSSPropertyName", %"class.blink::CascadePriority" }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::CascadePriority" = type { i64 }
%"class.blink::CascadeResolver" = type opaque
%"class.blink::CSSCustomPropertyDeclaration" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.4, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1404" = type { %"class.std::__1::__compressed_pair.1405" }
%"class.std::__1::__compressed_pair.1405" = type { %"struct.std::__1::__compressed_pair_elem.1406" }
%"struct.std::__1::__compressed_pair_elem.1406" = type { %"class.blink::ResolvedRegisteredCustomPropertyChecker"* }
%"class.blink::ResolvedRegisteredCustomPropertyChecker" = type { %"class.blink::InterpolationType::ConversionChecker", %"class.blink::Persistent.1407", %class.scoped_refptr.4 }
%"class.blink::Persistent.1407" = type { %"class.blink::PersistentBase.1408" }
%"class.blink::PersistentBase.1408" = type { %"class.blink::CSSCustomPropertyDeclaration"*, %"class.blink::PersistentNodePtr.361" }
%"class.std::__1::unique_ptr.1412" = type { %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { %"class.blink::InheritedCustomPropertyChecker"* }
%"class.blink::InheritedCustomPropertyChecker" = type { %"class.blink::CSSInterpolationType::CSSConversionChecker", %"class.WTF::AtomicString"*, i8, %"class.blink::Persistent.1393", %"class.blink::Persistent.1393" }
%"class.blink::CSSInterpolationType::CSSConversionChecker" = type { %"class.blink::InterpolationType::ConversionChecker" }
%"class.blink::CSSInitialValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSInheritedValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.1418", %"class.WTF::Vector.7", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr.0 }
%"class.WTF::Vector.1418" = type { %"class.WTF::VectorBuffer.1419" }
%"class.WTF::VectorBuffer.1419" = type { %"class.WTF::VectorBufferBase.1420", [32 x i8] }
%"class.WTF::VectorBufferBase.1420" = type { i32*, i32, i32 }
%"class.WTF::Vector.1423" = type { %"class.WTF::VectorBuffer.1424" }
%"class.WTF::VectorBuffer.1424" = type { %"class.WTF::VectorBufferBase.14", [768 x i8] }
%"struct.blink::CSSTokenizedValue" = type { %"class.blink::CSSParserTokenRange", %"class.WTF::StringView" }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ScopedCSSValue" = type { %"class.blink::CSSValue"*, %"class.blink::TreeScope"* }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", %class.scoped_refptr.219 }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::cssvalue::CSSRevertValue" = type { %"class.blink::CSSValue" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink12CSSTokenizerD2Ev = comdat any

$_ZN5blink20CSSInterpolationTypeD2Ev = comdat any

$_ZN5blink20CSSInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE = comdat any

$_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_20PropertyRegistrationELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink14PersistentBaseIKNS_20PropertyRegistrationELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink23ResolvedVariableCheckerC2ENS_13CSSPropertyIDEPKNS_8CSSValueES4_ = comdat any

$_ZN5blink23ResolvedVariableCheckerD2Ev = comdat any

$_ZN5blink23ResolvedVariableCheckerD0Ev = comdat any

$_ZNK5blink23ResolvedVariableChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8CSSValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23ResolvedVariableCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN5blink13RevertCheckerC2ERKNS_14PropertyHandleEPKNS_8CSSValueE = comdat any

$_ZN5blink13RevertCheckerD2Ev = comdat any

$_ZN5blink13RevertCheckerD0Ev = comdat any

$_ZNK5blink13RevertChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_13RevertCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN5blink39ResolvedRegisteredCustomPropertyCheckerC2ERKNS_28CSSCustomPropertyDeclarationE13scoped_refptrINS_15CSSVariableDataEE = comdat any

$_ZN5blink39ResolvedRegisteredCustomPropertyCheckerD2Ev = comdat any

$_ZN5blink39ResolvedRegisteredCustomPropertyCheckerD0Ev = comdat any

$_ZNK5blink39ResolvedRegisteredCustomPropertyChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_28CSSCustomPropertyDeclarationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink10TraceTraitINS_28CSSCustomPropertyDeclarationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_39ResolvedRegisteredCustomPropertyCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN5blink30InheritedCustomPropertyCheckerC2ERKN3WTF12AtomicStringEbPKNS_8CSSValueES7_ = comdat any

$_ZN5blink30InheritedCustomPropertyCheckerD2Ev = comdat any

$_ZN5blink30InheritedCustomPropertyCheckerD0Ev = comdat any

$_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZNK5blink30InheritedCustomPropertyChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30InheritedCustomPropertyCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

$_ZTVN5blink23ResolvedVariableCheckerE = comdat any

$_ZTVN5blink13RevertCheckerE = comdat any

$_ZTVN5blink39ResolvedRegisteredCustomPropertyCheckerE = comdat any

$_ZTVN5blink30InheritedCustomPropertyCheckerE = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink20CSSInterpolationTypeE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.222"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink23ResolvedVariableCheckerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ResolvedVariableChecker"*)* @_ZN5blink23ResolvedVariableCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::ResolvedVariableChecker"*)* @_ZN5blink23ResolvedVariableCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ResolvedVariableChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink23ResolvedVariableChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1
@_ZTVN5blink13RevertCheckerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::RevertChecker"*)* @_ZN5blink13RevertCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::RevertChecker"*)* @_ZN5blink13RevertCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::RevertChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink13RevertChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@_ZTVN5blink39ResolvedRegisteredCustomPropertyCheckerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ResolvedRegisteredCustomPropertyChecker"*)* @_ZN5blink39ResolvedRegisteredCustomPropertyCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::ResolvedRegisteredCustomPropertyChecker"*)* @_ZN5blink39ResolvedRegisteredCustomPropertyCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ResolvedRegisteredCustomPropertyChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink39ResolvedRegisteredCustomPropertyChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@_ZTVN5blink30InheritedCustomPropertyCheckerE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InheritedCustomPropertyChecker"*)* @_ZN5blink30InheritedCustomPropertyCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::InheritedCustomPropertyChecker"*)* @_ZN5blink30InheritedCustomPropertyCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::InheritedCustomPropertyChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink30InheritedCustomPropertyChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"*, %"class.blink::PropertyHandle"* nocapture readonly byval(%"class.blink::PropertyHandle") align 8, %"class.blink::PropertyRegistration"*) unnamed_addr #0 align 2 {
  %4 = alloca { i32, %union.anon }, align 8
  %5 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  %6 = bitcast { i32, %union.anon }* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %5, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #9
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %3, %10, %25
  %28 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1
  %30 = bitcast %"class.blink::PropertyHandle"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %6, i64 16, i1 false)
  %31 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %31, align 8
  br i1 %9, label %60, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #9
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  tail call void @llvm.trap() #9
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %47, %32
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = load atomic i32, i32* %33 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  %55 = add i32 %50, -1
  store i32 %55, i32* %37, align 4
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i32 [ %55, %54 ], [ %50, %49 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %60

60:                                               ; preds = %27, %56, %59
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %61 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1
  %62 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %61, i64 0, i32 0, i32 0
  store %"class.blink::PropertyRegistration"* %2, %"class.blink::PropertyRegistration"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %64, align 8
  %65 = ptrtoint %"class.blink::PropertyRegistration"* %2 to i64
  switch i64 %65, label %66 [
    i64 0, label %92
    i64 -1, label %92
  ]

66:                                               ; preds = %60
  %67 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %68 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %67, i64 0, i32 1
  %69 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %68) #9
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %73, !prof !2

71:                                               ; preds = %66
  %72 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %68, i8* %72) #9
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i8* [ %72, %71 ], [ %69, %66 ]
  %75 = bitcast i8* %74 to %"class.blink::ThreadState"**
  %76 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %76, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %79, align 8
  %81 = icmp eq %"class.blink::PersistentNode"* %80, null
  br i1 %81, label %82, label %85, !prof !2

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %78, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %83) #9
  %84 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %79, align 8
  br label %85

85:                                               ; preds = %82, %73
  %86 = phi %"class.blink::PersistentNode"* [ %84, %82 ], [ %80, %73 ]
  %87 = bitcast %"class.blink::PersistentNode"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.blink::PersistentRegion"* %78 to i64*
  store i64 %88, i64* %89, align 8
  %90 = bitcast %"class.blink::PersistentNode"* %86 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %62, %"class.blink::PersistentBase"** %90, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %86, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_20PropertyRegistrationELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %91, align 8
  store %"class.blink::PersistentNode"* %86, %"class.blink::PersistentNode"** %64, align 8
  br label %92

92:                                               ; preds = %60, %60, %85
  br i1 %9, label %106, label %93

93:                                               ; preds = %92
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #9
  br label %106

106:                                              ; preds = %92, %102, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* nocapture readonly dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.222"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %7 = alloca %"struct.blink::InterpolationValue", align 8
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = bitcast %"struct.blink::InterpolationValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 1, i32 0
  %12 = bitcast %"struct.blink::InterpolationValue"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink20CSSInterpolationType26MaybeConvertSingleInternalERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* nonnull sret %7, %"class.blink::CSSInterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %3, %"struct.blink::InterpolationValue"* dereferenceable(16) %4, %"class.WTF::Vector.222"* dereferenceable(16) %5)
  %13 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %10, align 8
  %14 = icmp eq %"class.blink::InterpolableValue"* %13, null
  %15 = ptrtoint %"class.blink::InterpolableValue"* %13 to i64
  br i1 %14, label %57, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %2, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %57, label %20

20:                                               ; preds = %16
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %10, align 8
  %21 = bitcast %"struct.blink::InterpolationValue"* %8 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 1
  %24 = getelementptr inbounds %class.scoped_refptr.219, %class.scoped_refptr.219* %23, i64 0, i32 0
  %25 = bitcast %class.scoped_refptr.219* %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %class.scoped_refptr.219* %22 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %24, align 8
  %28 = bitcast %"class.blink::CSSInterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.222"*)***
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.222"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.222"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.222"*)** %29, i64 13
  %31 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.222"*)** %30, align 8
  call void %31(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSInterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull %8, %"struct.blink::InterpolationValue"* dereferenceable(16) %4, i32 %18, %"class.WTF::Vector.222"* dereferenceable(16) %5) #9
  %32 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %33 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %32, align 8
  %34 = icmp eq %"class.blink::NonInterpolableValue"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %33, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %36, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #9
  %38 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %36, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %36, i64 -2
  %43 = bitcast %"class.base::RefCounted.221"* %42 to %"class.blink::NonInterpolableValue"*
  %44 = bitcast %"class.base::RefCounted.221"* %42 to void (%"class.blink::NonInterpolableValue"*)***
  %45 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %45, i64 1
  %47 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %46, align 8
  call void %47(%"class.blink::NonInterpolableValue"* nonnull %43) #9
  br label %48

48:                                               ; preds = %41, %35, %20
  %49 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %49, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %49, align 8
  %51 = icmp eq %"class.blink::InterpolableValue"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.blink::InterpolableValue"* %50 to void (%"class.blink::InterpolableValue"*)***
  %54 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %54, i64 1
  %56 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %55, align 8
  call void %56(%"class.blink::InterpolableValue"* nonnull %50) #9
  br label %65

57:                                               ; preds = %6, %16
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %10, align 8
  %58 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %15, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %7, i64 0, i32 1
  %61 = getelementptr inbounds %class.scoped_refptr.219, %class.scoped_refptr.219* %60, i64 0, i32 0
  %62 = bitcast %class.scoped_refptr.219* %60 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %class.scoped_refptr.219* %59 to i64*
  store i64 %63, i64* %64, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %61, align 8
  br label %65

65:                                               ; preds = %52, %48, %57
  %66 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %11, align 8
  %67 = icmp eq %"class.blink::NonInterpolableValue"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %66, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %69, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %70) #9
  %71 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %69, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %81

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %69, i64 -2
  %76 = bitcast %"class.base::RefCounted.221"* %75 to %"class.blink::NonInterpolableValue"*
  %77 = bitcast %"class.base::RefCounted.221"* %75 to void (%"class.blink::NonInterpolableValue"*)***
  %78 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, i64 1
  %80 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %79, align 8
  call void %80(%"class.blink::NonInterpolableValue"* nonnull %76) #9
  br label %81

81:                                               ; preds = %74, %68, %65
  %82 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %10, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %10, align 8
  %83 = icmp eq %"class.blink::InterpolableValue"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.blink::InterpolableValue"* %82 to void (%"class.blink::InterpolableValue"*)***
  %86 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, i64 1
  %88 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %87, align 8
  call void %88(%"class.blink::InterpolableValue"* nonnull %82) #9
  br label %89

89:                                               ; preds = %81, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20CSSInterpolationType26MaybeConvertSingleInternalERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* nocapture readonly dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.222"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::PropertyHandle", align 8
  %8 = alloca %"class.std::__1::unique_ptr.1390", align 8
  %9 = alloca %"class.blink::PropertyHandle", align 8
  %10 = alloca %"class.std::__1::unique_ptr.1398", align 8
  %11 = alloca %"class.blink::PropertyHandle", align 8
  %12 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %2, i64 1
  %13 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %12 to %"class.blink::CSSValue"**
  %14 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %13, align 8
  %15 = bitcast %"class.blink::InterpolationEnvironment"* %3 to %"class.blink::CSSInterpolationEnvironment"*
  %16 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %3, i64 1
  %17 = bitcast %"class.blink::InterpolationEnvironment"* %16 to %"class.blink::StyleResolverState"**
  %18 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %17, align 8
  %19 = icmp eq %"class.blink::CSSValue"* %14, null
  br i1 %19, label %20, label %25

20:                                               ; preds = %6
  %21 = bitcast %"class.blink::CSSInterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)***
  %22 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)** %22, i64 8
  %24 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)** %23, align 8
  tail call void %24(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSInterpolationType"* %1, %"struct.blink::InterpolationValue"* dereferenceable(16) %4, %"class.WTF::Vector.222"* dereferenceable(16) %5) #9
  br label %355

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8, !noalias !3
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4, !noalias !3
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %50

38:                                               ; preds = %31
  %39 = zext i32 %37 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #9
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %38
  tail call void @llvm.trap() #9, !noalias !3
  unreachable

46:                                               ; preds = %38
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %36, align 4, !noalias !3
  br label %50

48:                                               ; preds = %25
  %49 = icmp eq i32 %27, 3
  br i1 %49, label %64, label %66

50:                                               ; preds = %31, %46
  %51 = phi i32 [ %47, %46 ], [ %37, %31 ]
  %52 = icmp eq i32 %27, 3
  %53 = load atomic i32, i32* %32 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %58 = add i32 %51, -1
  store i32 %58, i32* %57, align 4
  br label %59

59:                                               ; preds = %56, %50
  %60 = phi i32 [ %58, %56 ], [ %51, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br i1 %52, label %64, label %66

63:                                               ; preds = %59
  br i1 %52, label %64, label %66

64:                                               ; preds = %62, %48, %63
  %65 = bitcast %"class.blink::CSSValue"* %14 to %"class.blink::CSSCustomPropertyDeclaration"*
  tail call void @_ZNK5blink20CSSInterpolationType37MaybeConvertCustomPropertyDeclarationERKNS_28CSSCustomPropertyDeclarationERKNS_24InterpolationEnvironmentERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSInterpolationType"* %1, %"class.blink::CSSCustomPropertyDeclaration"* nonnull dereferenceable(32) %65, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %3, %"class.WTF::Vector.222"* dereferenceable(16) %5)
  br label %355

66:                                               ; preds = %62, %48, %63
  %67 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %14, i64 0, i32 2
  %68 = load i8, i8* %67, align 1
  switch i8 %68, label %177 [
    i8 42, label %69
    i8 44, label %69
  ]

69:                                               ; preds = %66, %66
  %70 = bitcast %"class.blink::PropertyHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #9
  %71 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1
  %72 = bitcast %"class.blink::PropertyHandle"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 8 %72, i64 16, i1 false) #9
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8, !noalias !6
  %74 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %74, align 8, !alias.scope !6
  %75 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %75, label %93, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4, !noalias !6
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %93

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %83 = load i32, i32* %82, align 4, !noalias !6
  %84 = zext i32 %83 to i33
  %85 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #9
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !2

90:                                               ; preds = %81
  tail call void @llvm.trap() #9, !noalias !6
  unreachable

91:                                               ; preds = %81
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %82, align 4, !noalias !6
  br label %93

93:                                               ; preds = %69, %76, %91
  %94 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSInterpolationEnvironment7ResolveERKNS_14PropertyHandleEPKNS_8CSSValueE(%"class.blink::CSSInterpolationEnvironment"* %15, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %7, %"class.blink::CSSValue"* nonnull %14) #9
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #9
  br label %110

110:                                              ; preds = %93, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #9
  %111 = bitcast %"class.std::__1::unique_ptr.1390"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #9
  %112 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1, i32 1, i32 0
  %113 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %112, align 8
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8, !noalias !9
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %144, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4, !noalias !9
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %133

123:                                              ; preds = %116
  %124 = zext i32 %122 to i33
  %125 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %124, i33 1) #9
  %126 = extractvalue { i33, i1 } %125, 1
  %127 = extractvalue { i33, i1 } %125, 0
  %128 = icmp slt i33 %127, 0
  %129 = or i1 %126, %128
  br i1 %129, label %130, label %131, !prof !2

130:                                              ; preds = %123
  call void @llvm.trap() #9, !noalias !9
  unreachable

131:                                              ; preds = %123
  %132 = trunc i33 %127 to i32
  store i32 %132, i32* %121, align 4, !noalias !9
  br label %133

133:                                              ; preds = %131, %116
  %134 = phi i32 [ %132, %131 ], [ %122, %116 ]
  %135 = load atomic i32, i32* %117 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = add i32 %134, -1
  store i32 %139, i32* %121, align 4
  br label %140

140:                                              ; preds = %138, %133
  %141 = phi i32 [ %139, %138 ], [ %134, %133 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #9
  br label %144

144:                                              ; preds = %110, %140, %143
  %145 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %113, i64 0, i32 1
  %146 = load i32, i32* %145, align 8
  %147 = call noalias i8* @malloc(i64 56) #9
  %148 = bitcast i8* %147 to %"class.blink::ResolvedVariableChecker"*
  call void @_ZN5blink23ResolvedVariableCheckerC2ENS_13CSSPropertyIDEPKNS_8CSSValueES4_(%"class.blink::ResolvedVariableChecker"* %148, i32 %146, %"class.blink::CSSValue"* nonnull %14, %"class.blink::CSSValue"* %94) #9
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.1390", %"class.std::__1::unique_ptr.1390"* %8, i64 0, i32 0, i32 0, i32 0
  %150 = bitcast %"class.std::__1::unique_ptr.1390"* %8 to i8**
  store i8* %147, i8** %150, align 8
  %151 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %5, i64 0, i32 0, i32 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %5, i64 0, i32 0, i32 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = icmp eq i32 %152, %154
  br i1 %155, label %165, label %156, !prof !2

156:                                              ; preds = %144
  %157 = ptrtoint i8* %147 to i64
  %158 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %5, i64 0, i32 0, i32 0, i32 0
  %159 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %158, align 8
  %160 = zext i32 %152 to i64
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %159, i64 %160
  store %"class.blink::ResolvedVariableChecker"* null, %"class.blink::ResolvedVariableChecker"** %149, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.225"* %161 to i64*
  store i64 %157, i64* %162, align 8
  %163 = load i32, i32* %151, align 4
  %164 = add i32 %163, 1
  store i32 %164, i32* %151, align 4
  br label %166

165:                                              ; preds = %144
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23ResolvedVariableCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.222"* %5, %"class.std::__1::unique_ptr.1390"* nonnull dereferenceable(8) %8) #9
  br label %166

166:                                              ; preds = %156, %165
  %167 = load %"class.blink::ResolvedVariableChecker"*, %"class.blink::ResolvedVariableChecker"** %149, align 8
  store %"class.blink::ResolvedVariableChecker"* null, %"class.blink::ResolvedVariableChecker"** %149, align 8
  %168 = icmp eq %"class.blink::ResolvedVariableChecker"* %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %166
  %170 = bitcast %"class.blink::ResolvedVariableChecker"* %167 to void (%"class.blink::ResolvedVariableChecker"*)***
  %171 = load void (%"class.blink::ResolvedVariableChecker"*)**, void (%"class.blink::ResolvedVariableChecker"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.blink::ResolvedVariableChecker"*)*, void (%"class.blink::ResolvedVariableChecker"*)** %171, i64 1
  %173 = load void (%"class.blink::ResolvedVariableChecker"*)*, void (%"class.blink::ResolvedVariableChecker"*)** %172, align 8
  call void %173(%"class.blink::ResolvedVariableChecker"* nonnull %167) #9
  br label %174

174:                                              ; preds = %166, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #9
  %175 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %94, i64 0, i32 2
  %176 = load i8, i8* %175, align 1
  br label %177

177:                                              ; preds = %66, %174
  %178 = phi i8 [ %176, %174 ], [ %68, %66 ]
  %179 = phi %"class.blink::CSSValue"* [ %94, %174 ], [ %14, %66 ]
  %180 = icmp eq i8 %178, 35
  br i1 %180, label %181, label %290

181:                                              ; preds = %177
  %182 = bitcast %"class.blink::PropertyHandle"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #9
  %183 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1
  %184 = bitcast %"class.blink::PropertyHandle"* %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %182, i8* align 8 %184, i64 16, i1 false) #9
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8, !noalias !12
  %186 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %186, align 8, !alias.scope !12
  %187 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %187, label %205, label %188

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4, !noalias !12
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %205

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 0
  %195 = load i32, i32* %194, align 4, !noalias !12
  %196 = zext i32 %195 to i33
  %197 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %196, i33 1) #9
  %198 = extractvalue { i33, i1 } %197, 1
  %199 = extractvalue { i33, i1 } %197, 0
  %200 = icmp slt i33 %199, 0
  %201 = or i1 %198, %200
  br i1 %201, label %202, label %203, !prof !2

202:                                              ; preds = %193
  call void @llvm.trap() #9, !noalias !12
  unreachable

203:                                              ; preds = %193
  %204 = trunc i33 %199 to i32
  store i32 %204, i32* %194, align 4, !noalias !12
  br label %205

205:                                              ; preds = %181, %188, %203
  %206 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSInterpolationEnvironment7ResolveERKNS_14PropertyHandleEPKNS_8CSSValueE(%"class.blink::CSSInterpolationEnvironment"* %15, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %9, %"class.blink::CSSValue"* %179) #9
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #9
  br label %222

222:                                              ; preds = %205, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #9
  %223 = bitcast %"class.std::__1::unique_ptr.1398"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #9
  %224 = bitcast %"class.blink::PropertyHandle"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %224, i8* align 8 %184, i64 16, i1 false) #9
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8, !noalias !15
  %226 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %225, %"class.WTF::StringImpl"** %226, align 8, !alias.scope !15
  %227 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %227, label %245, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4, !noalias !15
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %245

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %235 = load i32, i32* %234, align 4, !noalias !15
  %236 = zext i32 %235 to i33
  %237 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %236, i33 1) #9
  %238 = extractvalue { i33, i1 } %237, 1
  %239 = extractvalue { i33, i1 } %237, 0
  %240 = icmp slt i33 %239, 0
  %241 = or i1 %238, %240
  br i1 %241, label %242, label %243, !prof !2

242:                                              ; preds = %233
  call void @llvm.trap() #9, !noalias !15
  unreachable

243:                                              ; preds = %233
  %244 = trunc i33 %239 to i32
  store i32 %244, i32* %234, align 4, !noalias !15
  br label %245

245:                                              ; preds = %222, %228, %243
  %246 = call noalias i8* @malloc(i64 56) #9
  %247 = bitcast i8* %246 to %"class.blink::RevertChecker"*
  call void @_ZN5blink13RevertCheckerC2ERKNS_14PropertyHandleEPKNS_8CSSValueE(%"class.blink::RevertChecker"* %247, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %11, %"class.blink::CSSValue"* %206) #9
  %248 = getelementptr inbounds %"class.std::__1::unique_ptr.1398", %"class.std::__1::unique_ptr.1398"* %10, i64 0, i32 0, i32 0, i32 0
  %249 = bitcast %"class.std::__1::unique_ptr.1398"* %10 to i8**
  store i8* %246, i8** %249, align 8
  %250 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %5, i64 0, i32 0, i32 0, i32 2
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %5, i64 0, i32 0, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %251, %253
  br i1 %254, label %264, label %255, !prof !2

255:                                              ; preds = %245
  %256 = ptrtoint i8* %246 to i64
  %257 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %5, i64 0, i32 0, i32 0, i32 0
  %258 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %257, align 8
  %259 = zext i32 %251 to i64
  %260 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %258, i64 %259
  store %"class.blink::RevertChecker"* null, %"class.blink::RevertChecker"** %248, align 8
  %261 = bitcast %"class.std::__1::unique_ptr.225"* %260 to i64*
  store i64 %256, i64* %261, align 8
  %262 = load i32, i32* %250, align 4
  %263 = add i32 %262, 1
  store i32 %263, i32* %250, align 4
  br label %265

264:                                              ; preds = %245
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_13RevertCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.222"* %5, %"class.std::__1::unique_ptr.1398"* nonnull dereferenceable(8) %10) #9
  br label %265

265:                                              ; preds = %255, %264
  %266 = load %"class.blink::RevertChecker"*, %"class.blink::RevertChecker"** %248, align 8
  store %"class.blink::RevertChecker"* null, %"class.blink::RevertChecker"** %248, align 8
  %267 = icmp eq %"class.blink::RevertChecker"* %266, null
  br i1 %267, label %273, label %268

268:                                              ; preds = %265
  %269 = bitcast %"class.blink::RevertChecker"* %266 to void (%"class.blink::RevertChecker"*)***
  %270 = load void (%"class.blink::RevertChecker"*)**, void (%"class.blink::RevertChecker"*)*** %269, align 8
  %271 = getelementptr inbounds void (%"class.blink::RevertChecker"*)*, void (%"class.blink::RevertChecker"*)** %270, i64 1
  %272 = load void (%"class.blink::RevertChecker"*)*, void (%"class.blink::RevertChecker"*)** %271, align 8
  call void %272(%"class.blink::RevertChecker"* nonnull %266) #9
  br label %273

273:                                              ; preds = %265, %268
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #9
  br label %289

289:                                              ; preds = %273, %285, %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #9
  br label %290

290:                                              ; preds = %289, %177
  %291 = phi %"class.blink::CSSValue"* [ %206, %289 ], [ %179, %177 ]
  %292 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1, i32 1, i32 0
  %293 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %292, align 8
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8, !noalias !18
  %295 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %295, label %324, label %296

296:                                              ; preds = %290
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = load atomic i32, i32* %297 monotonic, align 4, !noalias !18
  %299 = and i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %302 = load i32, i32* %301, align 4
  br i1 %300, label %303, label %313

303:                                              ; preds = %296
  %304 = zext i32 %302 to i33
  %305 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %304, i33 1) #9
  %306 = extractvalue { i33, i1 } %305, 1
  %307 = extractvalue { i33, i1 } %305, 0
  %308 = icmp slt i33 %307, 0
  %309 = or i1 %306, %308
  br i1 %309, label %310, label %311, !prof !2

310:                                              ; preds = %303
  call void @llvm.trap() #9, !noalias !18
  unreachable

311:                                              ; preds = %303
  %312 = trunc i33 %307 to i32
  store i32 %312, i32* %301, align 4, !noalias !18
  br label %313

313:                                              ; preds = %311, %296
  %314 = phi i32 [ %312, %311 ], [ %302, %296 ]
  %315 = load atomic i32, i32* %297 monotonic, align 4
  %316 = and i32 %315, 2
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %320

318:                                              ; preds = %313
  %319 = add i32 %314, -1
  store i32 %319, i32* %301, align 4
  br label %320

320:                                              ; preds = %318, %313
  %321 = phi i32 [ %319, %318 ], [ %314, %313 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %294) #9
  br label %324

324:                                              ; preds = %290, %320, %323
  %325 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %293, i64 0, i32 2
  %326 = load i32, i32* %325, align 4
  %327 = and i32 %326, 64
  %328 = icmp ne i32 %327, 0
  %329 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %291, i64 0, i32 2
  %330 = load i8, i8* %329, align 1
  %331 = icmp eq i8 %330, 33
  br i1 %331, label %335, label %332

332:                                              ; preds = %324
  %333 = icmp ne i8 %330, 34
  %334 = or i1 %333, %328
  br i1 %334, label %340, label %335

335:                                              ; preds = %332, %324
  %336 = bitcast %"class.blink::CSSInterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)***
  %337 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*** %336, align 8
  %338 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)** %337, i64 9
  %339 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)** %338, align 8
  call void %339(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSInterpolationType"* %1, %"class.blink::StyleResolverState"* dereferenceable(600) %18, %"class.WTF::Vector.222"* dereferenceable(16) %5) #9
  br label %355

340:                                              ; preds = %332
  %341 = icmp ne i8 %330, 32
  %342 = xor i1 %328, true
  %343 = or i1 %333, %342
  %344 = and i1 %341, %343
  br i1 %344, label %350, label %345

345:                                              ; preds = %340
  %346 = bitcast %"class.blink::CSSInterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)***
  %347 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*** %346, align 8
  %348 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)** %347, i64 10
  %349 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)** %348, align 8
  call void %349(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSInterpolationType"* %1, %"class.blink::StyleResolverState"* dereferenceable(600) %18, %"class.WTF::Vector.222"* dereferenceable(16) %5) #9
  br label %355

350:                                              ; preds = %340
  %351 = bitcast %"class.blink::CSSInterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)***
  %352 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*** %351, align 8
  %353 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)** %352, i64 11
  %354 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)** %353, align 8
  call void %354(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSInterpolationType"* %1, %"class.blink::CSSValue"* dereferenceable(3) %291, %"class.blink::StyleResolverState"* %18, %"class.WTF::Vector.222"* dereferenceable(16) %5) #9
  br label %355

355:                                              ; preds = %335, %345, %350, %64, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20CSSInterpolationType37MaybeConvertCustomPropertyDeclarationERKNS_28CSSCustomPropertyDeclarationERKNS_24InterpolationEnvironmentERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSCustomPropertyDeclaration"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"class.WTF::Vector.222"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::PropertyHandle", align 8
  %7 = alloca %"class.std::__1::unique_ptr.1398", align 8
  %8 = alloca %"class.blink::PropertyHandle", align 8
  %9 = alloca %"class.std::__1::unique_ptr.1404", align 8
  %10 = alloca %"class.std::__1::unique_ptr.1412", align 8
  %11 = bitcast %"class.blink::InterpolationEnvironment"* %3 to %"class.blink::CSSInterpolationEnvironment"*
  %12 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %3, i64 1
  %13 = bitcast %"class.blink::InterpolationEnvironment"* %12 to %"class.blink::StyleResolverState"**
  %14 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %2, i64 0, i32 2
  %16 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %2, i64 0, i32 0
  %17 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1
  %19 = bitcast %"class.blink::PropertyHandle"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %19, i64 16, i1 false) #9
  %20 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8, !noalias !21
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %22, align 8, !alias.scope !21
  %23 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4, !noalias !21
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %31 = load i32, i32* %30, align 4, !noalias !21
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #9
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  tail call void @llvm.trap() #9, !noalias !21
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4, !noalias !21
  br label %41

41:                                               ; preds = %5, %24, %39
  %42 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSInterpolationEnvironment7ResolveERKNS_14PropertyHandleEPKNS_8CSSValueE(%"class.blink::CSSInterpolationEnvironment"* %11, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %6, %"class.blink::CSSValue"* %16) #9
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #9
  br label %58

58:                                               ; preds = %41, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  %59 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %2, i64 0, i32 4
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 748
  br i1 %61, label %62, label %130

62:                                               ; preds = %58
  %63 = bitcast %"class.std::__1::unique_ptr.1398"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9
  %64 = bitcast %"class.blink::PropertyHandle"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %19, i64 16, i1 false) #9
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8, !noalias !24
  %66 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %66, align 8, !alias.scope !24
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4, !noalias !24
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %75 = load i32, i32* %74, align 4, !noalias !24
  %76 = zext i32 %75 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #9
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %73
  call void @llvm.trap() #9, !noalias !24
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4, !noalias !24
  br label %85

85:                                               ; preds = %62, %68, %83
  %86 = call noalias i8* @malloc(i64 56) #9
  %87 = bitcast i8* %86 to %"class.blink::RevertChecker"*
  call void @_ZN5blink13RevertCheckerC2ERKNS_14PropertyHandleEPKNS_8CSSValueE(%"class.blink::RevertChecker"* %87, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8, %"class.blink::CSSValue"* %42) #9
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.1398", %"class.std::__1::unique_ptr.1398"* %7, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr.1398"* %7 to i8**
  store i8* %86, i8** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %4, i64 0, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %4, i64 0, i32 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %91, %93
  br i1 %94, label %104, label %95, !prof !2

95:                                               ; preds = %85
  %96 = ptrtoint i8* %86 to i64
  %97 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %4, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %97, align 8
  %99 = zext i32 %91 to i64
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %98, i64 %99
  store %"class.blink::RevertChecker"* null, %"class.blink::RevertChecker"** %88, align 8
  %101 = bitcast %"class.std::__1::unique_ptr.225"* %100 to i64*
  store i64 %96, i64* %101, align 8
  %102 = load i32, i32* %90, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %90, align 4
  br label %105

104:                                              ; preds = %85
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_13RevertCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.222"* %4, %"class.std::__1::unique_ptr.1398"* nonnull dereferenceable(8) %7) #9
  br label %105

105:                                              ; preds = %95, %104
  %106 = load %"class.blink::RevertChecker"*, %"class.blink::RevertChecker"** %88, align 8
  store %"class.blink::RevertChecker"* null, %"class.blink::RevertChecker"** %88, align 8
  %107 = icmp eq %"class.blink::RevertChecker"* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %105
  %109 = bitcast %"class.blink::RevertChecker"* %106 to void (%"class.blink::RevertChecker"*)***
  %110 = load void (%"class.blink::RevertChecker"*)**, void (%"class.blink::RevertChecker"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.blink::RevertChecker"*)*, void (%"class.blink::RevertChecker"*)** %110, i64 1
  %112 = load void (%"class.blink::RevertChecker"*)*, void (%"class.blink::RevertChecker"*)** %111, align 8
  call void %112(%"class.blink::RevertChecker"* nonnull %106) #9
  br label %113

113:                                              ; preds = %105, %108
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #9
  br label %129

129:                                              ; preds = %113, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9
  br label %130

130:                                              ; preds = %129, %58
  %131 = icmp eq %"class.blink::CSSValue"* %42, null
  br i1 %131, label %186, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %42, i64 0, i32 2
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %134, 43
  %136 = bitcast %"class.blink::CSSValue"* %42 to %"class.blink::CSSCustomPropertyDeclaration"*
  %137 = select i1 %135, %"class.blink::CSSCustomPropertyDeclaration"* %136, %"class.blink::CSSCustomPropertyDeclaration"* null
  %138 = icmp eq %"class.blink::CSSCustomPropertyDeclaration"* %137, null
  %139 = icmp eq %"class.blink::CSSCustomPropertyDeclaration"* %137, %2
  %140 = or i1 %138, %139
  br i1 %140, label %178, label %141

141:                                              ; preds = %132
  %142 = bitcast %"class.std::__1::unique_ptr.1404"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #9
  %143 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %137, i64 0, i32 3, i32 0
  %144 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %143, align 8
  %145 = call noalias i8* @malloc(i64 40) #9
  %146 = bitcast i8* %145 to %"class.blink::ResolvedRegisteredCustomPropertyChecker"*
  %147 = icmp eq %"class.blink::CSSVariableData"* %144, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %144, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %149) #9
  br label %150

150:                                              ; preds = %141, %148
  call void @_ZN5blink39ResolvedRegisteredCustomPropertyCheckerC2ERKNS_28CSSCustomPropertyDeclarationE13scoped_refptrINS_15CSSVariableDataEE(%"class.blink::ResolvedRegisteredCustomPropertyChecker"* %146, %"class.blink::CSSCustomPropertyDeclaration"* dereferenceable(32) %2, %"class.blink::CSSVariableData"* %144) #9
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.1404", %"class.std::__1::unique_ptr.1404"* %9, i64 0, i32 0, i32 0, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.1404"* %9 to i8**
  store i8* %145, i8** %152, align 8
  %153 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %4, i64 0, i32 0, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %4, i64 0, i32 0, i32 0, i32 1
  %156 = load i32, i32* %155, align 8
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %167, label %158, !prof !2

158:                                              ; preds = %150
  %159 = ptrtoint i8* %145 to i64
  %160 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %4, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %160, align 8
  %162 = zext i32 %154 to i64
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %161, i64 %162
  store %"class.blink::ResolvedRegisteredCustomPropertyChecker"* null, %"class.blink::ResolvedRegisteredCustomPropertyChecker"** %151, align 8
  %164 = bitcast %"class.std::__1::unique_ptr.225"* %163 to i64*
  store i64 %159, i64* %164, align 8
  %165 = load i32, i32* %153, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %153, align 4
  br label %168

167:                                              ; preds = %150
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_39ResolvedRegisteredCustomPropertyCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.222"* %4, %"class.std::__1::unique_ptr.1404"* nonnull dereferenceable(8) %9) #9
  br label %168

168:                                              ; preds = %158, %167
  %169 = load %"class.blink::ResolvedRegisteredCustomPropertyChecker"*, %"class.blink::ResolvedRegisteredCustomPropertyChecker"** %151, align 8
  store %"class.blink::ResolvedRegisteredCustomPropertyChecker"* null, %"class.blink::ResolvedRegisteredCustomPropertyChecker"** %151, align 8
  %170 = icmp eq %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %168
  %172 = bitcast %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %169 to void (%"class.blink::ResolvedRegisteredCustomPropertyChecker"*)***
  %173 = load void (%"class.blink::ResolvedRegisteredCustomPropertyChecker"*)**, void (%"class.blink::ResolvedRegisteredCustomPropertyChecker"*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.blink::ResolvedRegisteredCustomPropertyChecker"*)*, void (%"class.blink::ResolvedRegisteredCustomPropertyChecker"*)** %173, i64 1
  %175 = load void (%"class.blink::ResolvedRegisteredCustomPropertyChecker"*)*, void (%"class.blink::ResolvedRegisteredCustomPropertyChecker"*)** %174, align 8
  call void %175(%"class.blink::ResolvedRegisteredCustomPropertyChecker"* nonnull %169) #9
  br label %176

176:                                              ; preds = %168, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #9
  %177 = load i8, i8* %133, align 1
  br label %178

178:                                              ; preds = %132, %176
  %179 = phi i8 [ %134, %132 ], [ %177, %176 ]
  %180 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 1, i32 0, i32 0
  %181 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %181, i64 0, i32 1
  %183 = load i8, i8* %182, align 8, !range !27
  %184 = icmp ne i8 %183, 0
  %185 = icmp eq i8 %179, 43
  br i1 %185, label %192, label %211

186:                                              ; preds = %130
  %187 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 1, i32 0, i32 0
  %188 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %188, i64 0, i32 1
  %190 = load i8, i8* %189, align 8, !range !27
  %191 = icmp ne i8 %190, 0
  br label %211

192:                                              ; preds = %178
  %193 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %42, i64 8
  %194 = bitcast %"class.blink::CSSValue"* %193 to i32*
  %195 = load i32, i32* %194, align 8
  %196 = icmp eq i32 %195, 2
  br i1 %196, label %201, label %197

197:                                              ; preds = %192
  %198 = icmp eq i32 %195, 749
  %199 = xor i1 %184, true
  %200 = and i1 %198, %199
  br i1 %200, label %201, label %204

201:                                              ; preds = %192, %197
  %202 = call %"class.blink::CSSInitialValue"* @_ZN5blink15CSSInitialValue6CreateEv() #9
  %203 = getelementptr inbounds %"class.blink::CSSInitialValue", %"class.blink::CSSInitialValue"* %202, i64 0, i32 0
  br label %211

204:                                              ; preds = %197
  %205 = icmp eq i32 %195, 1
  %206 = and i1 %184, %198
  %207 = or i1 %205, %206
  br i1 %207, label %208, label %211

208:                                              ; preds = %204
  %209 = call %"class.blink::CSSInheritedValue"* @_ZN5blink17CSSInheritedValue6CreateEv() #9
  %210 = getelementptr inbounds %"class.blink::CSSInheritedValue", %"class.blink::CSSInheritedValue"* %209, i64 0, i32 0
  br label %211

211:                                              ; preds = %178, %204, %186, %201, %208
  %212 = phi %"class.blink::PropertyRegistration"** [ %180, %201 ], [ %180, %208 ], [ %187, %186 ], [ %180, %178 ], [ %180, %204 ]
  %213 = phi i1 [ %184, %201 ], [ %184, %208 ], [ %191, %186 ], [ %184, %178 ], [ %184, %204 ]
  %214 = phi i8 [ %183, %201 ], [ %183, %208 ], [ %190, %186 ], [ %183, %178 ], [ %183, %204 ]
  %215 = phi %"class.blink::CSSValue"* [ %203, %201 ], [ %210, %208 ], [ null, %186 ], [ %42, %178 ], [ %42, %204 ]
  %216 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %215, i64 0, i32 2
  %217 = load i8, i8* %216, align 1
  %218 = icmp eq i8 %217, 33
  br i1 %218, label %223, label %219

219:                                              ; preds = %211
  %220 = icmp eq i8 %217, 34
  %221 = icmp eq i8 %214, 0
  %222 = and i1 %221, %220
  br i1 %222, label %223, label %227

223:                                              ; preds = %219, %211
  %224 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %212, align 8
  %225 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %224, i64 0, i32 3, i32 0, i32 0
  %226 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %225, align 8
  br label %270

227:                                              ; preds = %219
  %228 = icmp ne i8 %217, 32
  %229 = xor i1 %220, true
  %230 = or i1 %221, %229
  %231 = and i1 %228, %230
  br i1 %231, label %270, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %14, i64 0, i32 4, i32 0
  %234 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %233, align 8
  %235 = call %"class.blink::CSSValue"* @_ZNK5blink13ComputedStyle16GetVariableValueERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"* %234, %"class.WTF::AtomicString"* dereferenceable(8) %15, i1 zeroext %213) #9
  %236 = icmp eq %"class.blink::CSSValue"* %235, null
  %237 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %212, align 8
  %238 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %237, i64 0, i32 3, i32 0, i32 0
  %239 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %238, align 8
  %240 = select i1 %236, %"class.blink::CSSValue"* %239, %"class.blink::CSSValue"* %235
  %241 = bitcast %"class.std::__1::unique_ptr.1412"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #9
  %242 = call noalias i8* @malloc(i64 64) #9
  %243 = bitcast i8* %242 to %"class.blink::InheritedCustomPropertyChecker"*
  call void @_ZN5blink30InheritedCustomPropertyCheckerC2ERKN3WTF12AtomicStringEbPKNS_8CSSValueES7_(%"class.blink::InheritedCustomPropertyChecker"* %243, %"class.WTF::AtomicString"* dereferenceable(8) %15, i1 zeroext %213, %"class.blink::CSSValue"* %240, %"class.blink::CSSValue"* %239) #9
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.1412", %"class.std::__1::unique_ptr.1412"* %10, i64 0, i32 0, i32 0, i32 0
  %245 = bitcast %"class.std::__1::unique_ptr.1412"* %10 to i8**
  store i8* %242, i8** %245, align 8
  %246 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %4, i64 0, i32 0, i32 0, i32 2
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %4, i64 0, i32 0, i32 0, i32 1
  %249 = load i32, i32* %248, align 8
  %250 = icmp eq i32 %247, %249
  br i1 %250, label %260, label %251, !prof !2

251:                                              ; preds = %232
  %252 = ptrtoint i8* %242 to i64
  %253 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %4, i64 0, i32 0, i32 0, i32 0
  %254 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %253, align 8
  %255 = zext i32 %247 to i64
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %254, i64 %255
  store %"class.blink::InheritedCustomPropertyChecker"* null, %"class.blink::InheritedCustomPropertyChecker"** %244, align 8
  %257 = bitcast %"class.std::__1::unique_ptr.225"* %256 to i64*
  store i64 %252, i64* %257, align 8
  %258 = load i32, i32* %246, align 4
  %259 = add i32 %258, 1
  store i32 %259, i32* %246, align 4
  br label %261

260:                                              ; preds = %232
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30InheritedCustomPropertyCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.222"* %4, %"class.std::__1::unique_ptr.1412"* nonnull dereferenceable(8) %10) #9
  br label %261

261:                                              ; preds = %251, %260
  %262 = load %"class.blink::InheritedCustomPropertyChecker"*, %"class.blink::InheritedCustomPropertyChecker"** %244, align 8
  store %"class.blink::InheritedCustomPropertyChecker"* null, %"class.blink::InheritedCustomPropertyChecker"** %244, align 8
  %263 = icmp eq %"class.blink::InheritedCustomPropertyChecker"* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %261
  %265 = bitcast %"class.blink::InheritedCustomPropertyChecker"* %262 to void (%"class.blink::InheritedCustomPropertyChecker"*)***
  %266 = load void (%"class.blink::InheritedCustomPropertyChecker"*)**, void (%"class.blink::InheritedCustomPropertyChecker"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.blink::InheritedCustomPropertyChecker"*)*, void (%"class.blink::InheritedCustomPropertyChecker"*)** %266, i64 1
  %268 = load void (%"class.blink::InheritedCustomPropertyChecker"*)*, void (%"class.blink::InheritedCustomPropertyChecker"*)** %267, align 8
  call void %268(%"class.blink::InheritedCustomPropertyChecker"* nonnull %262) #9
  br label %269

269:                                              ; preds = %261, %264
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #9
  br label %270

270:                                              ; preds = %227, %269, %223
  %271 = phi %"class.blink::CSSValue"* [ %226, %223 ], [ %240, %269 ], [ %215, %227 ]
  %272 = icmp eq %"class.blink::CSSValue"* %271, null
  br i1 %272, label %293, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %271, i64 0, i32 2
  %275 = load i8, i8* %274, align 1
  %276 = icmp eq i8 %275, 43
  br i1 %276, label %277, label %293

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %271, i64 5, i32 1
  %279 = bitcast i8* %278 to %"class.blink::CSSVariableData"**
  %280 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %279, align 8
  %281 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 1, i32 0, i32 0
  %282 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %281, align 8
  %283 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %282, i64 0, i32 0
  %284 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %14, i64 0, i32 1
  %285 = load %"class.blink::Document"*, %"class.blink::Document"** %284, align 8
  %286 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %285) #9
  %287 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %286, i64 0, i32 6, i32 11
  %288 = load i32, i32* %287, align 8
  %289 = call %"class.blink::CSSValue"* @_ZNK5blink15CSSVariableData14ParseForSyntaxERKNS_19CSSSyntaxDefinitionENS_17SecureContextModeE(%"class.blink::CSSVariableData"* %280, %"class.blink::CSSSyntaxDefinition"* dereferenceable(16) %283, i32 %288) #9
  %290 = icmp eq %"class.blink::CSSValue"* %289, null
  br i1 %290, label %291, label %293

291:                                              ; preds = %277
  %292 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %292, i8 0, i64 16, i1 false) #9
  br label %299

293:                                              ; preds = %273, %270, %277
  %294 = phi %"class.blink::CSSValue"* [ %289, %277 ], [ %271, %273 ], [ null, %270 ]
  %295 = bitcast %"class.blink::CSSInterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)***
  %296 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*** %295, align 8
  %297 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)** %296, i64 11
  %298 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)** %297, align 8
  call void %298(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSInterpolationType"* %1, %"class.blink::CSSValue"* dereferenceable(3) %294, %"class.blink::StyleResolverState"* %14, %"class.WTF::Vector.222"* dereferenceable(16) %4) #9
  br label %299

299:                                              ; preds = %291, %293
  ret void
}

declare %"class.blink::CSSValue"* @_ZNK5blink27CSSInterpolationEnvironment7ResolveERKNS_14PropertyHandleEPKNS_8CSSValueE(%"class.blink::CSSInterpolationEnvironment"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::CSSValue"*) local_unnamed_addr #2

declare %"class.blink::CSSInitialValue"* @_ZN5blink15CSSInitialValue6CreateEv() local_unnamed_addr #2

declare %"class.blink::CSSInheritedValue"* @_ZN5blink17CSSInheritedValue6CreateEv() local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZNK5blink13ComputedStyle16GetVariableValueERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZNK5blink15CSSVariableData14ParseForSyntaxERKNS_19CSSSyntaxDefinitionENS_17SecureContextModeE(%"class.blink::CSSVariableData"*, %"class.blink::CSSSyntaxDefinition"* dereferenceable(16), i32) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.WTF::Vector.222", align 8
  %6 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %2, i64 1, i32 1
  %7 = bitcast %"class.blink::InterpolationTypesMap"** %6 to %"class.blink::ComputedStyle"**
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8, !noalias !28
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4, !noalias !29
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %33

21:                                               ; preds = %14
  %22 = zext i32 %20 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #9
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %21
  tail call void @llvm.trap() #9, !noalias !29
  unreachable

29:                                               ; preds = %21
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %19, align 4, !noalias !29
  br label %33

31:                                               ; preds = %3
  %32 = icmp eq i32 %10, 3
  br i1 %32, label %54, label %47

33:                                               ; preds = %14, %29
  %34 = phi i32 [ %30, %29 ], [ %20, %14 ]
  %35 = icmp eq i32 %10, 3
  %36 = load atomic i32, i32* %15 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %41 = add i32 %34, -1
  store i32 %41, i32* %40, align 4
  br label %42

42:                                               ; preds = %39, %33
  %43 = phi i32 [ %41, %39 ], [ %34, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #9
  br i1 %35, label %52, label %47

46:                                               ; preds = %42
  br i1 %35, label %52, label %47

47:                                               ; preds = %45, %31, %46
  %48 = bitcast %"class.blink::CSSInterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::ComputedStyle"*)***
  %49 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::ComputedStyle"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::ComputedStyle"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::ComputedStyle"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::ComputedStyle"*)** %49, i64 14
  %51 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::ComputedStyle"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::ComputedStyle"*)** %50, align 8
  tail call void %51(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSInterpolationType"* %1, %"class.blink::ComputedStyle"* dereferenceable(104) %8) #9
  br label %142

52:                                               ; preds = %46, %45
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8, !noalias !32
  br label %54

54:                                               ; preds = %52, %31
  %55 = phi %"class.WTF::StringImpl"* [ %53, %52 ], [ null, %31 ]
  %56 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #9
  %57 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 0, i32 1
  %58 = bitcast %"class.blink::PropertyHandle"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %58, i64 16, i1 false) #9
  %59 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %59, align 8, !alias.scope !32
  %60 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4, !noalias !32
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %68 = load i32, i32* %67, align 4, !noalias !32
  %69 = zext i32 %68 to i33
  %70 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #9
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  tail call void @llvm.trap() #9, !noalias !32
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4, !noalias !32
  br label %78

78:                                               ; preds = %54, %61, %76
  %79 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2
  %80 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %1, i64 0, i32 1, i32 0, i32 0
  %81 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %81, i64 0, i32 1
  %83 = load i8, i8* %82, align 8, !range !27
  %84 = icmp ne i8 %83, 0
  %85 = call %"class.blink::CSSValue"* @_ZNK5blink13ComputedStyle16GetVariableValueERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"* %8, %"class.WTF::AtomicString"* dereferenceable(8) %79, i1 zeroext %84) #9
  %86 = icmp eq %"class.blink::CSSValue"* %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %78
  %88 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #9
  br label %125

89:                                               ; preds = %78
  %90 = bitcast %"class.WTF::Vector.222"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #9
  %91 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %5, i64 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 16, i1 false) #9
  %93 = bitcast %"class.blink::CSSInterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)***
  %94 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)** %94, i64 11
  %96 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.222"*)** %95, align 8
  call void %96(%"struct.blink::InterpolationValue"* sret %0, %"class.blink::CSSInterpolationType"* %1, %"class.blink::CSSValue"* nonnull dereferenceable(3) %85, %"class.blink::StyleResolverState"* null, %"class.WTF::Vector.222"* nonnull dereferenceable(16) %5) #9
  %97 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %91, align 8
  %98 = icmp eq %"class.std::__1::unique_ptr.225"* %97, null
  br i1 %98, label %124, label %99, !prof !35

99:                                               ; preds = %89
  %100 = bitcast %"class.std::__1::unique_ptr.225"* %97 to i8*
  %101 = load i32, i32* %92, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %122, label %103, !prof !2

103:                                              ; preds = %99
  %104 = zext i32 %101 to i64
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %97, i64 %104
  br label %106

106:                                              ; preds = %116, %103
  %107 = phi %"class.std::__1::unique_ptr.225"* [ %117, %116 ], [ %97, %103 ]
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::InterpolationType::ConversionChecker"*, %"class.blink::InterpolationType::ConversionChecker"** %108, align 8
  store %"class.blink::InterpolationType::ConversionChecker"* null, %"class.blink::InterpolationType::ConversionChecker"** %108, align 8
  %110 = icmp eq %"class.blink::InterpolationType::ConversionChecker"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %106
  %112 = bitcast %"class.blink::InterpolationType::ConversionChecker"* %109 to void (%"class.blink::InterpolationType::ConversionChecker"*)***
  %113 = load void (%"class.blink::InterpolationType::ConversionChecker"*)**, void (%"class.blink::InterpolationType::ConversionChecker"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %113, i64 1
  %115 = load void (%"class.blink::InterpolationType::ConversionChecker"*)*, void (%"class.blink::InterpolationType::ConversionChecker"*)** %114, align 8
  call void %115(%"class.blink::InterpolationType::ConversionChecker"* nonnull %109) #9
  br label %116

116:                                              ; preds = %111, %106
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %107, i64 1
  %118 = icmp eq %"class.std::__1::unique_ptr.225"* %117, %105
  br i1 %118, label %119, label %106

119:                                              ; preds = %116
  store i32 0, i32* %92, align 4
  %120 = bitcast %"class.WTF::Vector.222"* %5 to i8**
  %121 = load i8*, i8** %120, align 8
  br label %122

122:                                              ; preds = %119, %99
  %123 = phi i8* [ %121, %119 ], [ %100, %99 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %123) #9
  store %"class.std::__1::unique_ptr.225"* null, %"class.std::__1::unique_ptr.225"** %91, align 8
  br label %124

124:                                              ; preds = %89, %122
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #9
  br label %125

125:                                              ; preds = %124, %87
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #9
  br label %141

141:                                              ; preds = %125, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #9
  br label %142

142:                                              ; preds = %141, %47
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %3, i64 1
  %6 = bitcast %"class.blink::InterpolationEnvironment"* %5 to %"class.blink::StyleResolverState"**
  %7 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8, !noalias !36
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4, !noalias !36
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %32

20:                                               ; preds = %13
  %21 = zext i32 %19 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #9
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %20
  tail call void @llvm.trap() #9, !noalias !36
  unreachable

28:                                               ; preds = %20
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %18, align 4, !noalias !36
  br label %32

30:                                               ; preds = %4
  %31 = icmp eq i32 %9, 3
  br i1 %31, label %46, label %47

32:                                               ; preds = %13, %28
  %33 = phi i32 [ %29, %28 ], [ %19, %13 ]
  %34 = icmp eq i32 %9, 3
  %35 = load atomic i32, i32* %14 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %40 = add i32 %33, -1
  store i32 %40, i32* %39, align 4
  br label %41

41:                                               ; preds = %38, %32
  %42 = phi i32 [ %40, %38 ], [ %33, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #9
  br i1 %34, label %46, label %47

45:                                               ; preds = %41
  br i1 %34, label %46, label %47

46:                                               ; preds = %44, %30, %45
  tail call void @_ZNK5blink20CSSInterpolationType24ApplyCustomPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSInterpolationType"* %0, %"class.blink::InterpolableValue"* dereferenceable(8) %1, %"class.blink::NonInterpolableValue"* %2, %"class.blink::StyleResolverState"* dereferenceable(600) %7)
  br label %52

47:                                               ; preds = %44, %30, %45
  %48 = bitcast %"class.blink::CSSInterpolationType"* %0 to void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)***
  %49 = load void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)**, void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)** %49, i64 15
  %51 = load void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)*, void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)** %50, align 8
  tail call void %51(%"class.blink::CSSInterpolationType"* %0, %"class.blink::InterpolableValue"* dereferenceable(8) %1, %"class.blink::NonInterpolableValue"* %2, %"class.blink::StyleResolverState"* dereferenceable(600) %7) #9
  br label %52

52:                                               ; preds = %47, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20CSSInterpolationType24ApplyCustomPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::CSSTokenizer", align 8
  %7 = alloca %"class.WTF::Vector.1423", align 8
  %8 = alloca %"struct.blink::CSSTokenizedValue", align 8
  %9 = alloca %"class.blink::KURL", align 8
  %10 = alloca %"class.WTF::TextEncoding", align 8
  %11 = alloca %"class.blink::CSSPropertyName", align 8
  %12 = alloca %"class.blink::ScopedCSSValue", align 8
  %13 = bitcast %"class.blink::CSSInterpolationType"* %0 to %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)***
  %14 = load %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)** %14, i64 12
  %16 = load %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)** %15, align 8
  %17 = tail call %"class.blink::CSSValue"* %16(%"class.blink::CSSInterpolationType"* %0, %"class.blink::InterpolableValue"* dereferenceable(8) %1, %"class.blink::NonInterpolableValue"* %2, %"class.blink::StyleResolverState"* dereferenceable(600) %3) #9
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %20 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %17) #9
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %19, align 8
  %21 = bitcast %"class.blink::CSSTokenizer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %21) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 0) #9
  %22 = bitcast %"class.WTF::Vector.1423"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %22) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 784, i1 false)
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.1423"* nonnull sret %7, %"class.blink::CSSTokenizer"* nonnull %6) #9
  %23 = bitcast %"struct.blink::CSSTokenizedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #9
  %24 = bitcast %"class.WTF::Vector.1423"* %7 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"struct.blink::CSSTokenizedValue"* %8 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %8, i64 0, i32 0, i32 1
  %28 = inttoptr i64 %25 to %"class.blink::CSSParserToken"*
  %29 = getelementptr inbounds %"class.WTF::Vector.1423", %"class.WTF::Vector.1423"* %7, i64 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %28, i64 %31
  store %"class.blink::CSSParserToken"* %32, %"class.blink::CSSParserToken"** %27, align 8
  %33 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %8, i64 0, i32 1
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %4
  %37 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %8, i64 0, i32 1, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %33 to i64*
  store i64 %38, i64* %39, align 8
  br label %47

40:                                               ; preds = %4
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %45 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %8, i64 0, i32 1, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  br label %47

47:                                               ; preds = %36, %40
  %48 = phi i32 [ %43, %40 ], [ 0, %36 ]
  %49 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %8, i64 0, i32 1, i32 2
  store i32 %48, i32* %49, align 8
  %50 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %50) #9
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %9) #9
  %51 = bitcast %"class.WTF::TextEncoding"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  %52 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %10, i64 0, i32 0
  store i8* null, i8** %52, align 8
  %53 = call noalias i8* @malloc(i64 72) #9
  %54 = bitcast i8* %53 to %"class.blink::CSSVariableData"*
  call void @_ZN5blink15CSSVariableDataC1ERKNS_17CSSTokenizedValueEbbRKNS_4KURLERKN3WTF12TextEncodingE(%"class.blink::CSSVariableData"* %54, %"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %8, i1 zeroext true, i1 zeroext false, %"class.blink::KURL"* nonnull dereferenceable(112) %9, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %10) #9
  %55 = ptrtoint i8* %53 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %50) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #9
  %56 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8, !noalias !39
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %76, label %59

59:                                               ; preds = %47
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4, !noalias !39
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %66 = load i32, i32* %65, align 4, !noalias !39
  %67 = zext i32 %66 to i33
  %68 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %67, i33 1) #9
  %69 = extractvalue { i33, i1 } %68, 1
  %70 = extractvalue { i33, i1 } %68, 0
  %71 = icmp slt i33 %70, 0
  %72 = or i1 %69, %71
  br i1 %72, label %73, label %74, !prof !2

73:                                               ; preds = %64
  call void @llvm.trap() #9, !noalias !39
  unreachable

74:                                               ; preds = %64
  %75 = trunc i33 %70 to i32
  store i32 %75, i32* %65, align 4, !noalias !39
  br label %76

76:                                               ; preds = %47, %59, %74
  %77 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64 32) #9
  store i8 0, i8* %77, align 1
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = and i8 %79, -8
  store i8 %80, i8* %78, align 1
  %81 = getelementptr inbounds i8, i8* %77, i64 2
  store i8 43, i8* %81, align 1
  %82 = getelementptr inbounds i8, i8* %77, i64 8
  %83 = bitcast i8* %82 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %83, align 8
  br i1 %58, label %101, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %101

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #9
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %89
  call void @llvm.trap() #9
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4
  br label %101

101:                                              ; preds = %76, %84, %99
  %102 = getelementptr inbounds i8, i8* %77, i64 16
  %103 = bitcast i8* %102 to i64*
  store i64 %55, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %77, i64 24
  %105 = bitcast i8* %104 to i32*
  store i32 0, i32* %105, align 8
  %106 = getelementptr inbounds i8, i8* %77, i64 -4
  %107 = bitcast i8* %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = or i16 %108, 1
  store atomic i16 %109, i16* %107 release, align 2
  %110 = bitcast %"class.blink::CSSPropertyName"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #9
  %111 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %114 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %113, align 8
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8, !noalias !42
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %134, label %117

117:                                              ; preds = %101
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4, !noalias !42
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %134

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %124 = load i32, i32* %123, align 4, !noalias !42
  %125 = zext i32 %124 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #9
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !2

131:                                              ; preds = %122
  call void @llvm.trap() #9, !noalias !42
  unreachable

132:                                              ; preds = %122
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %123, align 4, !noalias !42
  br label %134

134:                                              ; preds = %101, %117, %132
  %135 = icmp eq i32 %112, 3
  br i1 %135, label %136, label %154

136:                                              ; preds = %134
  br i1 %116, label %157, label %137

137:                                              ; preds = %136
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %157

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #9
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !2

151:                                              ; preds = %142
  call void @llvm.trap() #9
  unreachable

152:                                              ; preds = %142
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %143, align 4
  br label %157

154:                                              ; preds = %134
  %155 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %114, i64 0, i32 1
  %156 = load i32, i32* %155, align 8
  br label %157

157:                                              ; preds = %136, %137, %152, %154
  %158 = phi %"class.WTF::StringImpl"* [ null, %154 ], [ null, %136 ], [ %115, %137 ], [ %115, %152 ]
  %159 = phi i32 [ %156, %154 ], [ 1, %136 ], [ 1, %137 ], [ 1, %152 ]
  %160 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %11, i64 0, i32 0
  store i32 %159, i32* %160, align 8
  %161 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %161, align 8
  %162 = bitcast %"class.blink::ScopedCSSValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #9
  %163 = bitcast %"class.blink::ScopedCSSValue"* %12 to i8**
  store i8* %77, i8** %163, align 8
  %164 = getelementptr inbounds %"class.blink::ScopedCSSValue", %"class.blink::ScopedCSSValue"* %12, i64 0, i32 1
  store %"class.blink::TreeScope"* null, %"class.blink::TreeScope"** %164, align 8
  call void @_ZN5blink12StyleBuilder13ApplyPropertyERKNS_15CSSPropertyNameERNS_18StyleResolverStateERKNS_14ScopedCSSValueE(%"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %11, %"class.blink::StyleResolverState"* dereferenceable(600) %3, %"class.blink::ScopedCSSValue"* nonnull dereferenceable(16) %12) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #9
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %157
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #9
  br label %180

180:                                              ; preds = %157, %176, %179
  br i1 %116, label %194, label %181

181:                                              ; preds = %180
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #9
  br label %194

194:                                              ; preds = %180, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #9
  br i1 %58, label %208, label %195

195:                                              ; preds = %194
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #9
  br label %208

208:                                              ; preds = %207, %204, %194
  %209 = load i32, i32* %29, align 4
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %212, label %211, !prof !2

211:                                              ; preds = %208
  store i32 0, i32* %29, align 4
  br label %212

212:                                              ; preds = %211, %208
  %213 = getelementptr inbounds %"class.WTF::Vector.1423", %"class.WTF::Vector.1423"* %7, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %213, align 8
  %215 = getelementptr inbounds %"class.WTF::Vector.1423", %"class.WTF::Vector.1423"* %7, i64 0, i32 0, i32 1, i64 0
  %216 = bitcast i8* %215 to %"class.blink::CSSParserToken"*
  %217 = icmp eq %"class.blink::CSSParserToken"* %214, %216
  br i1 %217, label %220, label %218, !prof !35

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.WTF::Vector.1423", %"class.WTF::Vector.1423"* %7, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1424"* nonnull %219, %"class.blink::CSSParserToken"* %214) #9
  br label %220

220:                                              ; preds = %212, %218
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %22) #9
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %21) #9
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #9
  br label %236

236:                                              ; preds = %220, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

declare void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.1423"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZN5blink12StyleBuilder13ApplyPropertyERKNS_15CSSPropertyNameERNS_18StyleResolverStateERKNS_14ScopedCSSValueE(%"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::StyleResolverState"* dereferenceable(600), %"class.blink::ScopedCSSValue"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !35

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #9
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.7"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !2

45:                                               ; preds = %40
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %"class.WTF::Vector.1418", %"class.WTF::Vector.1418"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !35

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.1418", %"class.WTF::Vector.1418"* %41, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1419"* %53, i32* %48) #9
  br label %54

54:                                               ; preds = %46, %52
  store i32* null, i32** %47, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 0, i32 2, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #9
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CSSInterpolationTypeD2Ev(%"class.blink::CSSInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %25, %38, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CSSInterpolationTypeD0Ev(%"class.blink::CSSInterpolationType"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.222"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.222"* dereferenceable(16) %6) #9
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #9
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.222"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.222"* dereferenceable(16) %6) #9
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #9
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #9
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #9
  %45 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.221"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.221"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #9
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #9
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #9
  %70 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted.221", %"class.base::RefCounted.221"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted.221"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted.221"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #9
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #9
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.213"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr.219* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #9
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #9
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.WTF::Vector.222"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %10, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink15CSSVariableDataC1ERKNS_17CSSTokenizedValueEbbRKNS_4KURLERKN3WTF12TextEncodingE(%"class.blink::CSSVariableData"*, %"struct.blink::CSSTokenizedValue"* dereferenceable(40), i1 zeroext, i1 zeroext, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1424"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1419"*, i32*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #9
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #9
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !35

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #9
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !35

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !2

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #9
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.7"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_20PropertyRegistrationELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseIKNS_20PropertyRegistrationELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseIKNS_20PropertyRegistrationELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PropertyRegistration"**
  %4 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %3, align 8
  %5 = icmp eq %"class.blink::PropertyRegistration"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %4, i64 -1, i32 6
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::PropertyRegistration"* null, %"class.blink::PropertyRegistration"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #9
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #9
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23ResolvedVariableCheckerC2ENS_13CSSPropertyIDEPKNS_8CSSValueES4_(%"class.blink::ResolvedVariableChecker"*, i32, %"class.blink::CSSValue"*, %"class.blink::CSSValue"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 0, i32 1
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink23ResolvedVariableCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::Persistent.1393", %"class.blink::Persistent.1393"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::Persistent.1393", %"class.blink::Persistent.1393"* %8, i64 0, i32 0, i32 0
  store %"class.blink::CSSValue"* %2, %"class.blink::CSSValue"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  %12 = ptrtoint %"class.blink::CSSValue"* %2 to i64
  switch i64 %12, label %13 [
    i64 0, label %39
    i64 -1, label %39
  ]

13:                                               ; preds = %4
  %14 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %15 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %14, i64 0, i32 1
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #9
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %13
  %19 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %19) #9
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8* [ %19, %18 ], [ %16, %13 ]
  %22 = bitcast i8* %21 to %"class.blink::ThreadState"**
  %23 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  %28 = icmp eq %"class.blink::PersistentNode"* %27, null
  br i1 %28, label %29, label %32, !prof !2

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %30) #9
  %31 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi %"class.blink::PersistentNode"* [ %31, %29 ], [ %27, %20 ]
  %34 = bitcast %"class.blink::PersistentNode"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::PersistentRegion"* %25 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"class.blink::PersistentNode"* %33 to %"class.blink::PersistentBase.1394"**
  store %"class.blink::PersistentBase.1394"* %9, %"class.blink::PersistentBase.1394"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %33, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8CSSValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %38, align 8
  store %"class.blink::PersistentNode"* %33, %"class.blink::PersistentNode"** %11, align 8
  br label %39

39:                                               ; preds = %4, %4, %32
  %40 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.blink::Persistent.1393", %"class.blink::Persistent.1393"* %40, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::Persistent.1393", %"class.blink::Persistent.1393"* %40, i64 0, i32 0, i32 0
  store %"class.blink::CSSValue"* %3, %"class.blink::CSSValue"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  %44 = ptrtoint %"class.blink::CSSValue"* %3 to i64
  switch i64 %44, label %45 [
    i64 0, label %71
    i64 -1, label %71
  ]

45:                                               ; preds = %39
  %46 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %47 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %46, i64 0, i32 1
  %48 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %47) #9
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %52, !prof !2

50:                                               ; preds = %45
  %51 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %47, i8* %51) #9
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi i8* [ %51, %50 ], [ %48, %45 ]
  %54 = bitcast i8* %53 to %"class.blink::ThreadState"**
  %55 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %58, align 8
  %60 = icmp eq %"class.blink::PersistentNode"* %59, null
  br i1 %60, label %61, label %64, !prof !2

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %57, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %62) #9
  %63 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %58, align 8
  br label %64

64:                                               ; preds = %61, %52
  %65 = phi %"class.blink::PersistentNode"* [ %63, %61 ], [ %59, %52 ]
  %66 = bitcast %"class.blink::PersistentNode"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blink::PersistentRegion"* %57 to i64*
  store i64 %67, i64* %68, align 8
  %69 = bitcast %"class.blink::PersistentNode"* %65 to %"class.blink::PersistentBase.1394"**
  store %"class.blink::PersistentBase.1394"* %41, %"class.blink::PersistentBase.1394"** %69, align 8
  %70 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %65, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8CSSValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %70, align 8
  store %"class.blink::PersistentNode"* %65, %"class.blink::PersistentNode"** %43, align 8
  br label %71

71:                                               ; preds = %39, %39, %64
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23ResolvedVariableCheckerD2Ev(%"class.blink::ResolvedVariableChecker"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink23ResolvedVariableCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  %28 = icmp eq %"class.blink::PersistentNode"* %27, null
  br i1 %28, label %48, label %29

29:                                               ; preds = %25
  %30 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %31 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %30, i64 0, i32 1
  %32 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %31) #9
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %29
  %35 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %31, i8* %35) #9
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i8* [ %35, %34 ], [ %32, %29 ]
  %38 = bitcast i8* %37 to %"class.blink::ThreadState"**
  %39 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %40, align 8
  %42 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  %43 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %41, i64 0, i32 0, i32 0
  %44 = bitcast %"class.blink::PersistentRegion"* %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::PersistentNode"* %42 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %42, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %47, align 8
  store %"class.blink::PersistentNode"* %42, %"class.blink::PersistentNode"** %43, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %26, align 8
  br label %48

48:                                               ; preds = %25, %36
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23ResolvedVariableCheckerD0Ev(%"class.blink::ResolvedVariableChecker"*) unnamed_addr #4 comdat align 2 {
  tail call void @_ZN5blink23ResolvedVariableCheckerD2Ev(%"class.blink::ResolvedVariableChecker"* %0) #9
  %2 = bitcast %"class.blink::ResolvedVariableChecker"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23ResolvedVariableChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::ResolvedVariableChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = bitcast %"class.blink::InterpolationEnvironment"* %1 to %"class.blink::CSSInterpolationEnvironment"*
  %6 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %8) #9
  %10 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  store i32 2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %9, %"class.blink::CSSProperty"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %13, align 8
  %15 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSInterpolationEnvironment7ResolveERKNS_14PropertyHandleEPKNS_8CSSValueE(%"class.blink::CSSInterpolationEnvironment"* %5, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4, %"class.blink::CSSValue"* %14) #9
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #9
  br label %31

31:                                               ; preds = %3, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  %32 = getelementptr inbounds %"class.blink::ResolvedVariableChecker", %"class.blink::ResolvedVariableChecker"* %0, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %32, align 8
  %34 = icmp eq %"class.blink::CSSValue"* %33, %15
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = icmp ne %"class.blink::CSSValue"* %33, null
  %37 = icmp ne %"class.blink::CSSValue"* %15, null
  %38 = and i1 %37, %36
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %33, %"class.blink::CSSValue"* nonnull dereferenceable(3) %15) #9
  br label %41

41:                                               ; preds = %31, %35, %39
  %42 = phi i1 [ %40, %39 ], [ true, %31 ], [ false, %35 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8CSSValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::CSSValue"**
  %5 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::CSSValue"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23ResolvedVariableCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.222"*, %"class.std::__1::unique_ptr.1390"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %16, align 8
  br i1 %15, label %18, label %45, !prof !35

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.225"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.222"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.225"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.225"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !35

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.222"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.222"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.225"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.225"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1390", %"class.std::__1::unique_ptr.1390"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1390"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::ResolvedVariableChecker"* null, %"class.blink::ResolvedVariableChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.225"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13RevertCheckerC2ERKNS_14PropertyHandleEPKNS_8CSSValueE(%"class.blink::RevertChecker"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::CSSValue"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 0, i32 1
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink13RevertCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  %8 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false) #9
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #9
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #9
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %3, %13, %28
  %31 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 2
  %32 = getelementptr inbounds %"class.blink::Persistent.1393", %"class.blink::Persistent.1393"* %31, i64 0, i32 0
  %33 = getelementptr inbounds %"class.blink::Persistent.1393", %"class.blink::Persistent.1393"* %31, i64 0, i32 0, i32 0
  store %"class.blink::CSSValue"* %2, %"class.blink::CSSValue"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %34, align 8
  %35 = ptrtoint %"class.blink::CSSValue"* %2 to i64
  switch i64 %35, label %36 [
    i64 0, label %62
    i64 -1, label %62
  ]

36:                                               ; preds = %30
  %37 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %38 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %37, i64 0, i32 1
  %39 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %38) #9
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43, !prof !2

41:                                               ; preds = %36
  %42 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %38, i8* %42) #9
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi i8* [ %42, %41 ], [ %39, %36 ]
  %45 = bitcast i8* %44 to %"class.blink::ThreadState"**
  %46 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8
  %51 = icmp eq %"class.blink::PersistentNode"* %50, null
  br i1 %51, label %52, label %55, !prof !2

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %48, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %53) #9
  %54 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8
  br label %55

55:                                               ; preds = %52, %43
  %56 = phi %"class.blink::PersistentNode"* [ %54, %52 ], [ %50, %43 ]
  %57 = bitcast %"class.blink::PersistentNode"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.blink::PersistentRegion"* %48 to i64*
  store i64 %58, i64* %59, align 8
  %60 = bitcast %"class.blink::PersistentNode"* %56 to %"class.blink::PersistentBase.1394"**
  store %"class.blink::PersistentBase.1394"* %32, %"class.blink::PersistentBase.1394"** %60, align 8
  %61 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8CSSValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %61, align 8
  store %"class.blink::PersistentNode"* %56, %"class.blink::PersistentNode"** %34, align 8
  br label %62

62:                                               ; preds = %30, %30, %55
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13RevertCheckerD2Ev(%"class.blink::RevertChecker"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink13RevertCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %25, %38, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13RevertCheckerD0Ev(%"class.blink::RevertChecker"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink13RevertCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  %26 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::RevertChecker"* %0 to i8*
  tail call void @free(i8* %43) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13RevertChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::RevertChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::InterpolationEnvironment"* %1 to %"class.blink::CSSInterpolationEnvironment"*
  %5 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 1
  %6 = tail call %"class.blink::cssvalue::CSSRevertValue"* @_ZN5blink8cssvalue14CSSRevertValue6CreateEv() #9
  %7 = getelementptr inbounds %"class.blink::cssvalue::CSSRevertValue", %"class.blink::cssvalue::CSSRevertValue"* %6, i64 0, i32 0
  %8 = tail call %"class.blink::CSSValue"* @_ZNK5blink27CSSInterpolationEnvironment7ResolveERKNS_14PropertyHandleEPKNS_8CSSValueE(%"class.blink::CSSInterpolationEnvironment"* %4, %"class.blink::PropertyHandle"* dereferenceable(24) %5, %"class.blink::CSSValue"* %7) #9
  %9 = getelementptr inbounds %"class.blink::RevertChecker", %"class.blink::RevertChecker"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %9, align 8
  %11 = icmp eq %"class.blink::CSSValue"* %10, %8
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = icmp ne %"class.blink::CSSValue"* %10, null
  %14 = icmp ne %"class.blink::CSSValue"* %8, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %10, %"class.blink::CSSValue"* nonnull dereferenceable(3) %8) #9
  br label %18

18:                                               ; preds = %3, %12, %16
  %19 = phi i1 [ %17, %16 ], [ true, %3 ], [ false, %12 ]
  ret i1 %19
}

declare %"class.blink::cssvalue::CSSRevertValue"* @_ZN5blink8cssvalue14CSSRevertValue6CreateEv() local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_13RevertCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.222"*, %"class.std::__1::unique_ptr.1398"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %16, align 8
  br i1 %15, label %18, label %45, !prof !35

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.225"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.222"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.225"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.225"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !35

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.222"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.222"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.225"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.225"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1398", %"class.std::__1::unique_ptr.1398"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1398"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::RevertChecker"* null, %"class.blink::RevertChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.225"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink39ResolvedRegisteredCustomPropertyCheckerC2ERKNS_28CSSCustomPropertyDeclarationE13scoped_refptrINS_15CSSVariableDataEE(%"class.blink::ResolvedRegisteredCustomPropertyChecker"*, %"class.blink::CSSCustomPropertyDeclaration"* dereferenceable(32), %"class.blink::CSSVariableData"*) unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.blink::CSSVariableData"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 0, i32 1
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink39ResolvedRegisteredCustomPropertyCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::Persistent.1407", %"class.blink::Persistent.1407"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::Persistent.1407", %"class.blink::Persistent.1407"* %7, i64 0, i32 0, i32 0
  store %"class.blink::CSSCustomPropertyDeclaration"* %1, %"class.blink::CSSCustomPropertyDeclaration"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8
  %11 = ptrtoint %"class.blink::CSSCustomPropertyDeclaration"* %1 to i64
  switch i64 %11, label %12 [
    i64 0, label %38
    i64 -1, label %38
  ]

12:                                               ; preds = %3
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #9
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #9
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* [ %18, %17 ], [ %15, %12 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %28, label %31, !prof !2

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %29) #9
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  br label %31

31:                                               ; preds = %28, %19
  %32 = phi %"class.blink::PersistentNode"* [ %30, %28 ], [ %26, %19 ]
  %33 = bitcast %"class.blink::PersistentNode"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::PersistentRegion"* %24 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"class.blink::PersistentNode"* %32 to %"class.blink::PersistentBase.1408"**
  store %"class.blink::PersistentBase.1408"* %8, %"class.blink::PersistentBase.1408"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %32, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_28CSSCustomPropertyDeclarationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %32, %"class.blink::PersistentNode"** %10, align 8
  br label %38

38:                                               ; preds = %31, %3, %3
  %39 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 2
  %40 = bitcast %class.scoped_refptr.4* %39 to i64*
  store i64 %4, i64* %40, align 8
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink39ResolvedRegisteredCustomPropertyCheckerD2Ev(%"class.blink::ResolvedRegisteredCustomPropertyChecker"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink39ResolvedRegisteredCustomPropertyCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %3, align 8
  %5 = icmp eq %"class.blink::CSSVariableData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #9
  %8 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %4) #9
  %12 = bitcast %"class.blink::CSSVariableData"* %4 to i8*
  tail call void @free(i8* %12) #9
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #9
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #9
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink39ResolvedRegisteredCustomPropertyCheckerD0Ev(%"class.blink::ResolvedRegisteredCustomPropertyChecker"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink39ResolvedRegisteredCustomPropertyCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %3, align 8
  %5 = icmp eq %"class.blink::CSSVariableData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #9
  %8 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %4) #9
  %12 = bitcast %"class.blink::CSSVariableData"* %4 to i8*
  tail call void @free(i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6, %1
  %14 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #9
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #9
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = bitcast %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0 to i8*
  tail call void @free(i8* %37) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink39ResolvedRegisteredCustomPropertyChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::ResolvedRegisteredCustomPropertyChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = bitcast %"class.blink::InterpolationEnvironment"* %1 to %"class.blink::CSSInterpolationEnvironment"*
  %6 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::CSSCustomPropertyDeclaration"*, %"class.blink::CSSCustomPropertyDeclaration"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  store i32 3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1, i32 0
  %11 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() #9
  store %"class.blink::CSSProperty"* %11, %"class.blink::CSSProperty"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #9
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %21
  tail call void @llvm.trap() #9
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %3, %16, %31
  %34 = load %"class.blink::CSSCustomPropertyDeclaration"*, %"class.blink::CSSCustomPropertyDeclaration"** %7, align 8
  %35 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %34, i64 0, i32 0
  %36 = call %"class.blink::CSSValue"* @_ZNK5blink27CSSInterpolationEnvironment7ResolveERKNS_14PropertyHandleEPKNS_8CSSValueE(%"class.blink::CSSInterpolationEnvironment"* %5, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4, %"class.blink::CSSValue"* %35) #9
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #9
  br label %52

52:                                               ; preds = %33, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  %53 = icmp eq %"class.blink::CSSValue"* %36, null
  br i1 %53, label %65, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %36, i64 0, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 43
  br i1 %57, label %58, label %65

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %36, i64 5, i32 1
  %60 = bitcast i8* %59 to %"class.blink::CSSVariableData"**
  %61 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %60, align 8
  %62 = icmp eq %"class.blink::CSSVariableData"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %61, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %64) #9
  br label %65

65:                                               ; preds = %63, %58, %54, %52
  %66 = phi %"class.blink::CSSVariableData"* [ null, %54 ], [ null, %52 ], [ null, %58 ], [ %61, %63 ]
  %67 = getelementptr inbounds %"class.blink::ResolvedRegisteredCustomPropertyChecker", %"class.blink::ResolvedRegisteredCustomPropertyChecker"* %0, i64 0, i32 2, i32 0
  %68 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %67, align 8
  %69 = icmp eq %"class.blink::CSSVariableData"* %66, %68
  br i1 %69, label %76, label %70

70:                                               ; preds = %65
  %71 = icmp ne %"class.blink::CSSVariableData"* %66, null
  %72 = icmp ne %"class.blink::CSSVariableData"* %68, null
  %73 = and i1 %71, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = call zeroext i1 @_ZNK5blink15CSSVariableDataeqERKS0_(%"class.blink::CSSVariableData"* nonnull %66, %"class.blink::CSSVariableData"* nonnull dereferenceable(72) %68) #9
  br label %79

76:                                               ; preds = %65, %70
  %77 = phi i1 [ true, %65 ], [ false, %70 ]
  %78 = icmp eq %"class.blink::CSSVariableData"* %66, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %74, %76
  %80 = phi i1 [ %75, %74 ], [ %77, %76 ]
  %81 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %66, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %81) #9
  %82 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %66, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %79
  call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %66) #9
  %86 = bitcast %"class.blink::CSSVariableData"* %66 to i8*
  call void @free(i8* %86) #9
  br label %87

87:                                               ; preds = %76, %79, %85
  %88 = phi i1 [ %77, %76 ], [ %80, %79 ], [ %80, %85 ]
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_28CSSCustomPropertyDeclarationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::CSSCustomPropertyDeclaration"**
  %5 = load %"class.blink::CSSCustomPropertyDeclaration"*, %"class.blink::CSSCustomPropertyDeclaration"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::CSSCustomPropertyDeclaration"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %5, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_28CSSCustomPropertyDeclarationEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_28CSSCustomPropertyDeclarationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink15CSSVariableDataeqERKS0_(%"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_39ResolvedRegisteredCustomPropertyCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.222"*, %"class.std::__1::unique_ptr.1404"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %16, align 8
  br i1 %15, label %18, label %45, !prof !35

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.225"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.222"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.225"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.225"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !35

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.222"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.222"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.225"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.225"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1404", %"class.std::__1::unique_ptr.1404"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1404"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::ResolvedRegisteredCustomPropertyChecker"* null, %"class.blink::ResolvedRegisteredCustomPropertyChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.225"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30InheritedCustomPropertyCheckerC2ERKN3WTF12AtomicStringEbPKNS_8CSSValueES7_(%"class.blink::InheritedCustomPropertyChecker"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, %"class.blink::CSSValue"*, %"class.blink::CSSValue"*) unnamed_addr #0 comdat align 2 {
  %6 = zext i1 %2 to i8
  %7 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 0, i32 0, i32 1
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink30InheritedCustomPropertyCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 1
  store %"class.WTF::AtomicString"* %1, %"class.WTF::AtomicString"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 2
  store i8 %6, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::Persistent.1393", %"class.blink::Persistent.1393"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::Persistent.1393", %"class.blink::Persistent.1393"* %11, i64 0, i32 0, i32 0
  store %"class.blink::CSSValue"* %3, %"class.blink::CSSValue"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  %15 = ptrtoint %"class.blink::CSSValue"* %3 to i64
  switch i64 %15, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %5
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #9
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #9
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #9
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.1394"**
  store %"class.blink::PersistentBase.1394"* %12, %"class.blink::PersistentBase.1394"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8CSSValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %14, align 8
  br label %42

42:                                               ; preds = %5, %5, %35
  %43 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 4
  %44 = getelementptr inbounds %"class.blink::Persistent.1393", %"class.blink::Persistent.1393"* %43, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::Persistent.1393", %"class.blink::Persistent.1393"* %43, i64 0, i32 0, i32 0
  store %"class.blink::CSSValue"* %4, %"class.blink::CSSValue"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %46, align 8
  %47 = ptrtoint %"class.blink::CSSValue"* %4 to i64
  switch i64 %47, label %48 [
    i64 0, label %74
    i64 -1, label %74
  ]

48:                                               ; preds = %42
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #9
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %48
  %54 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #9
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %61, align 8
  %63 = icmp eq %"class.blink::PersistentNode"* %62, null
  br i1 %63, label %64, label %67, !prof !2

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %65) #9
  %66 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %61, align 8
  br label %67

67:                                               ; preds = %64, %55
  %68 = phi %"class.blink::PersistentNode"* [ %66, %64 ], [ %62, %55 ]
  %69 = bitcast %"class.blink::PersistentNode"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.blink::PersistentRegion"* %60 to i64*
  store i64 %70, i64* %71, align 8
  %72 = bitcast %"class.blink::PersistentNode"* %68 to %"class.blink::PersistentBase.1394"**
  store %"class.blink::PersistentBase.1394"* %44, %"class.blink::PersistentBase.1394"** %72, align 8
  %73 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %68, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8CSSValueELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %73, align 8
  store %"class.blink::PersistentNode"* %68, %"class.blink::PersistentNode"** %46, align 8
  br label %74

74:                                               ; preds = %42, %42, %67
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30InheritedCustomPropertyCheckerD2Ev(%"class.blink::InheritedCustomPropertyChecker"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink30InheritedCustomPropertyCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 4, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  %28 = icmp eq %"class.blink::PersistentNode"* %27, null
  br i1 %28, label %48, label %29

29:                                               ; preds = %25
  %30 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %31 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %30, i64 0, i32 1
  %32 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %31) #9
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %29
  %35 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %31, i8* %35) #9
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i8* [ %35, %34 ], [ %32, %29 ]
  %38 = bitcast i8* %37 to %"class.blink::ThreadState"**
  %39 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %40, align 8
  %42 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  %43 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %41, i64 0, i32 0, i32 0
  %44 = bitcast %"class.blink::PersistentRegion"* %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::PersistentNode"* %42 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %42, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %47, align 8
  store %"class.blink::PersistentNode"* %42, %"class.blink::PersistentNode"** %43, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %26, align 8
  br label %48

48:                                               ; preds = %25, %36
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30InheritedCustomPropertyCheckerD0Ev(%"class.blink::InheritedCustomPropertyChecker"*) unnamed_addr #4 comdat align 2 {
  tail call void @_ZN5blink30InheritedCustomPropertyCheckerD2Ev(%"class.blink::InheritedCustomPropertyChecker"* %0) #9
  %2 = bitcast %"class.blink::InheritedCustomPropertyChecker"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %5 = bitcast %"class.blink::InterpolationEnvironment"* %4 to %"class.blink::StyleResolverState"**
  %6 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %5, align 8
  %7 = bitcast %"class.blink::CSSInterpolationType::CSSConversionChecker"* %0 to i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)***
  %8 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)**, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %8, i64 3
  %10 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::CSSInterpolationType::CSSConversionChecker"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %6, %"struct.blink::InterpolationValue"* dereferenceable(16) %2) #9
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink30InheritedCustomPropertyChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::InheritedCustomPropertyChecker"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 4, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 1
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !27
  %10 = icmp ne i8 %9, 0
  %11 = tail call %"class.blink::CSSValue"* @_ZNK5blink13ComputedStyle16GetVariableValueERKN3WTF12AtomicStringEb(%"class.blink::ComputedStyle"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %7, i1 zeroext %10) #9
  %12 = icmp eq %"class.blink::CSSValue"* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %14, align 8
  br label %16

16:                                               ; preds = %3, %13
  %17 = phi %"class.blink::CSSValue"* [ %11, %3 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::InheritedCustomPropertyChecker", %"class.blink::InheritedCustomPropertyChecker"* %0, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %18, align 8
  %20 = icmp eq %"class.blink::CSSValue"* %19, %17
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = icmp ne %"class.blink::CSSValue"* %19, null
  %23 = icmp ne %"class.blink::CSSValue"* %17, null
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %19, %"class.blink::CSSValue"* nonnull dereferenceable(3) %17) #9
  br label %27

27:                                               ; preds = %16, %21, %25
  %28 = phi i1 [ %26, %25 ], [ true, %16 ], [ false, %21 ]
  ret i1 %28
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30InheritedCustomPropertyCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.222"*, %"class.std::__1::unique_ptr.1412"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.222", %"class.WTF::Vector.222"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %16, align 8
  br i1 %15, label %18, label %45, !prof !35

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.225"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.222"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.225"*, %"class.std::__1::unique_ptr.225"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.225"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.225"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !35

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.222"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.222"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.225"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.225"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.225"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1412", %"class.std::__1::unique_ptr.1412"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1412"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::InheritedCustomPropertyChecker"* null, %"class.blink::InheritedCustomPropertyChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.225"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #9
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #9
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!26 = distinct !{!26, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!27 = !{i8 0, i8 2}
!28 = !{}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!35 = !{!"branch_weights", i32 2000, i32 1}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!38 = distinct !{!38, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!41 = distinct !{!41, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!44 = distinct !{!44, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
