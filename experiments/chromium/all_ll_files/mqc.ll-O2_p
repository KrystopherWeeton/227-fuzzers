; ModuleID = '../../third_party/pdfium/third_party/libopenjpeg20/mqc.c'
source_filename = "../../third_party/pdfium/third_party/libopenjpeg20/mqc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.opj_mqc_state = type { i32, i32, %struct.opj_mqc_state*, %struct.opj_mqc_state* }
%struct.opj_mqc = type { i32, i32, i32, i32, i8*, i8*, i8*, [19 x %struct.opj_mqc_state*], %struct.opj_mqc_state**, i8*, [2 x i8] }

@mqc_states = internal constant [94 x %struct.opj_mqc_state] [%struct.opj_mqc_state { i32 22017, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 48) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 72) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 22017, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 72) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 48) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 13313, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 96) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 288) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 13313, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 120) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 312) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 6145, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 144) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 432) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 6145, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 168) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 456) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 2753, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 192) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 576) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 2753, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 216) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 600) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 1313, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 240) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1392) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 1313, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 264) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1416) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 545, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1824) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1584) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 545, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1848) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1608) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 22017, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 336) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 312) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 22017, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 360) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 288) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 21505, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 384) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 672) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 21505, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 408) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 696) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 18433, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 432) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 672) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 18433, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 456) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 696) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 14337, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 480) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 672) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 14337, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 504) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 696) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 12289, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 528) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 816) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 12289, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 552) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 840) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 9217, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 576) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 864) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 9217, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 600) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 888) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 7169, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 624) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 960) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 7169, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 648) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 984) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 5633, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1392) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1008) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 5633, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1416) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1032) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 22017, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 720) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 696) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 22017, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 744) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 672) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 21505, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 768) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 672) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 21505, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 792) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 696) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 20737, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 816) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 720) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 20737, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 840) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 744) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 18433, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 864) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 768) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 18433, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 888) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 792) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 14337, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 912) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 816) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 14337, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 936) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 840) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 13313, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 960) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 864) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 13313, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 984) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 888) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 12289, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1008) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 912) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 12289, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1032) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 936) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 10241, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1056) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 912) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 10241, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1080) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 936) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 9217, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1104) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 960) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 9217, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1128) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 984) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 8705, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1152) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1008) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 8705, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1176) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1032) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 7169, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1200) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1056) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 7169, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1224) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1080) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 6145, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1248) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1104) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 6145, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1272) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1128) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 5633, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1296) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1152) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 5633, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1320) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1176) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 5121, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1344) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1200) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 5121, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1368) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1224) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 4609, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1392) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1248) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 4609, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1416) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1272) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 4353, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1440) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1296) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 4353, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1464) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1320) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 2753, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1488) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1344) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 2753, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1512) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1368) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 2497, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1536) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1392) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 2497, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1560) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1416) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 2209, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1584) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1440) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 2209, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1608) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1464) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 1313, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1632) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1488) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 1313, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1656) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1512) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 1089, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1680) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1536) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 1089, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1704) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1560) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 673, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1728) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1584) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 673, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1752) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1608) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 545, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1776) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1632) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 545, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1800) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1656) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 321, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1824) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1680) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 321, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1848) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1704) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 273, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1872) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1728) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 273, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1896) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1752) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 133, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1920) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1776) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 133, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1944) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1800) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 73, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1968) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1824) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 73, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1992) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1848) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 37, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2016) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1872) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 37, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2040) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1896) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 21, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2064) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1920) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 21, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2088) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1944) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 9, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2112) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1968) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 9, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2136) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 1992) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 5, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2160) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2016) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 5, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2184) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2040) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 1, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2160) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2064) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 1, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2184) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2088) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 22017, i32 0, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2208) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2208) to %struct.opj_mqc_state*) }, %struct.opj_mqc_state { i32 22017, i32 1, %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2232) to %struct.opj_mqc_state*), %struct.opj_mqc_state* bitcast (i8* getelementptr (i8, i8* bitcast ([94 x %struct.opj_mqc_state]* @mqc_states to i8*), i64 2232) to %struct.opj_mqc_state*) }], align 16

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @opj_mqc_numbytes(%struct.opj_mqc* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 5
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %4, %7
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @opj_mqc_init_enc(%struct.opj_mqc*, i8*) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 0
  %4 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 8
  store %struct.opj_mqc_state** %3, %struct.opj_mqc_state*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 -1
  %6 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 5
  store i8* %1, i8** %7, align 8
  %8 = bitcast %struct.opj_mqc* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 32768, i32 12, i32 0>, <4 x i32>* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @opj_mqc_flush(%struct.opj_mqc* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, %3
  %7 = or i32 %3, 65535
  %8 = icmp ult i32 %7, %6
  %9 = add nsw i32 %7, -32768
  %10 = select i1 %8, i32 %7, i32 %9
  %11 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = shl i32 %10, %12
  store i32 %13, i32* %2, align 8
  %14 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %15 = load i8*, i8** %14, align 8
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, -1
  br i1 %17, label %18, label %21

18:                                               ; preds = %1
  %19 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %19, i8** %14, align 8
  %20 = lshr i32 %13, 20
  br label %41

21:                                               ; preds = %1
  %22 = and i32 %13, 134217728
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %25, i8** %14, align 8
  %26 = lshr i32 %13, 19
  br label %41

27:                                               ; preds = %21
  %28 = add nuw i8 %16, 1
  store i8 %28, i8* %15, align 1
  %29 = load i8*, i8** %14, align 8
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, -1
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = load i32, i32* %2, align 8
  %34 = and i32 %33, 134217727
  store i32 %34, i32* %2, align 8
  %35 = getelementptr inbounds i8, i8* %29, i64 1
  store i8* %35, i8** %14, align 8
  %36 = lshr i32 %34, 20
  br label %41

37:                                               ; preds = %27
  %38 = getelementptr inbounds i8, i8* %29, i64 1
  store i8* %38, i8** %14, align 8
  %39 = load i32, i32* %2, align 8
  %40 = lshr i32 %39, 19
  br label %41

41:                                               ; preds = %18, %24, %32, %37
  %42 = phi i32 [ %20, %18 ], [ %26, %24 ], [ %36, %32 ], [ %40, %37 ]
  %43 = phi i8* [ %19, %18 ], [ %25, %24 ], [ %35, %32 ], [ %38, %37 ]
  %44 = phi i32 [ 1048575, %18 ], [ 524287, %24 ], [ 1048575, %32 ], [ 524287, %37 ]
  %45 = phi i32 [ 7, %18 ], [ 8, %24 ], [ 7, %32 ], [ 8, %37 ]
  %46 = trunc i32 %42 to i8
  store i8 %46, i8* %43, align 1
  %47 = load i32, i32* %2, align 8
  %48 = and i32 %47, %44
  store i32 %48, i32* %2, align 8
  store i32 %45, i32* %11, align 8
  %49 = shl i32 %48, %45
  store i32 %49, i32* %2, align 8
  %50 = load i8*, i8** %14, align 8
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, -1
  br i1 %52, label %53, label %56

53:                                               ; preds = %41
  %54 = getelementptr inbounds i8, i8* %50, i64 1
  store i8* %54, i8** %14, align 8
  %55 = lshr i32 %49, 20
  br label %76

56:                                               ; preds = %41
  %57 = and i32 %49, 134217728
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = getelementptr inbounds i8, i8* %50, i64 1
  store i8* %60, i8** %14, align 8
  %61 = lshr i32 %49, 19
  br label %76

62:                                               ; preds = %56
  %63 = add nuw i8 %51, 1
  store i8 %63, i8* %50, align 1
  %64 = load i8*, i8** %14, align 8
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, -1
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = load i32, i32* %2, align 8
  %69 = and i32 %68, 134217727
  store i32 %69, i32* %2, align 8
  %70 = getelementptr inbounds i8, i8* %64, i64 1
  store i8* %70, i8** %14, align 8
  %71 = lshr i32 %69, 20
  br label %76

72:                                               ; preds = %62
  %73 = getelementptr inbounds i8, i8* %64, i64 1
  store i8* %73, i8** %14, align 8
  %74 = load i32, i32* %2, align 8
  %75 = lshr i32 %74, 19
  br label %76

76:                                               ; preds = %53, %59, %67, %72
  %77 = phi i32 [ %55, %53 ], [ %61, %59 ], [ %71, %67 ], [ %75, %72 ]
  %78 = phi i8* [ %54, %53 ], [ %60, %59 ], [ %70, %67 ], [ %73, %72 ]
  %79 = phi i32 [ 1048575, %53 ], [ 524287, %59 ], [ 1048575, %67 ], [ 524287, %72 ]
  %80 = phi i32 [ 7, %53 ], [ 8, %59 ], [ 7, %67 ], [ 8, %72 ]
  %81 = trunc i32 %77 to i8
  store i8 %81, i8* %78, align 1
  %82 = load i32, i32* %2, align 8
  %83 = and i32 %82, %79
  store i32 %83, i32* %2, align 8
  store i32 %80, i32* %11, align 8
  %84 = load i8*, i8** %14, align 8
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -1
  br i1 %86, label %89, label %87

87:                                               ; preds = %76
  %88 = getelementptr inbounds i8, i8* %84, i64 1
  store i8* %88, i8** %14, align 8
  br label %89

89:                                               ; preds = %76, %87
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @opj_mqc_byteout(%struct.opj_mqc* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %7, i8** %2, align 8
  %8 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 20
  br label %33

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 134217728
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %17, i8** %2, align 8
  %18 = lshr i32 %13, 19
  br label %33

19:                                               ; preds = %11
  %20 = add nuw i8 %4, 1
  store i8 %20, i8* %3, align 1
  %21 = load i8*, i8** %2, align 8
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, -1
  br i1 %23, label %24, label %29

24:                                               ; preds = %19
  %25 = load i32, i32* %12, align 8
  %26 = and i32 %25, 134217727
  store i32 %26, i32* %12, align 8
  %27 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %27, i8** %2, align 8
  %28 = lshr i32 %26, 20
  br label %33

29:                                               ; preds = %19
  %30 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %30, i8** %2, align 8
  %31 = load i32, i32* %12, align 8
  %32 = lshr i32 %31, 19
  br label %33

33:                                               ; preds = %16, %29, %24, %6
  %34 = phi i32 [ %18, %16 ], [ %32, %29 ], [ %28, %24 ], [ %10, %6 ]
  %35 = phi i8* [ %17, %16 ], [ %30, %29 ], [ %27, %24 ], [ %7, %6 ]
  %36 = phi i32* [ %12, %16 ], [ %12, %29 ], [ %12, %24 ], [ %8, %6 ]
  %37 = phi i32 [ 524287, %16 ], [ 524287, %29 ], [ 1048575, %24 ], [ 1048575, %6 ]
  %38 = phi i32 [ 8, %16 ], [ 8, %29 ], [ 7, %24 ], [ 7, %6 ]
  %39 = trunc i32 %34 to i8
  store i8 %39, i8* %35, align 1
  %40 = load i32, i32* %36, align 8
  %41 = and i32 %40, %37
  store i32 %41, i32* %36, align 8
  %42 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  store i32 %38, i32* %42, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @opj_mqc_bypass_init_enc(%struct.opj_mqc* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  store i32 -559038737, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @opj_mqc_bypass_enc(%struct.opj_mqc* nocapture, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -559038737
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i32 8, i32* %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = phi i32 [ 8, %6 ], [ %4, %2 ]
  %9 = add i32 %8, -1
  store i32 %9, i32* %3, align 8
  %10 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = shl i32 %1, %9
  %13 = add i32 %11, %12
  store i32 %13, i32* %10, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %7
  %16 = trunc i32 %13 to i8
  %17 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %18 = load i8*, i8** %17, align 8
  store i8 %16, i8* %18, align 1
  store i32 8, i32* %3, align 8
  %19 = load i8*, i8** %17, align 8
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, -1
  %22 = select i1 %21, i32 7, i32 8
  store i32 %22, i32* %3, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %23, i8** %17, align 8
  store i32 0, i32* %10, align 8
  br label %24

24:                                               ; preds = %15, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @opj_mqc_bypass_get_extra_bytes(%struct.opj_mqc* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 7
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %4, 7
  br i1 %7, label %8, label %17

8:                                                ; preds = %6
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 -1
  %14 = load i8, i8* %13, align 1
  %15 = icmp ne i8 %14, -1
  %16 = zext i1 %15 to i32
  br label %17

17:                                               ; preds = %8, %6, %10, %2
  %18 = phi i32 [ 1, %2 ], [ 0, %6 ], [ 1, %8 ], [ %16, %10 ]
  ret i32 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @opj_mqc_bypass_flush_enc(%struct.opj_mqc* nocapture, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 7
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %4, 7
  br i1 %7, label %8, label %83

8:                                                ; preds = %6
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 -1
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, -1
  br i1 %15, label %82, label %21

16:                                               ; preds = %2
  %17 = icmp eq i32 %4, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  br label %75

21:                                               ; preds = %8, %10, %16
  %22 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %4, -1
  %25 = and i32 %4, 3
  %26 = icmp ult i32 %24, 3
  br i1 %26, label %55, label %27

27:                                               ; preds = %21
  %28 = sub i32 %4, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i32 [ %23, %27 ], [ %51, %29 ]
  %31 = phi i32 [ %4, %27 ], [ %48, %29 ]
  %32 = phi i32 [ 0, %27 ], [ %52, %29 ]
  %33 = phi i32 [ %28, %27 ], [ %53, %29 ]
  %34 = add i32 %31, -1
  %35 = and i32 %32, 255
  %36 = shl i32 %35, %34
  %37 = add i32 %30, %36
  %38 = sub nsw i32 1, %32
  %39 = add i32 %31, -2
  %40 = and i32 %38, 255
  %41 = shl i32 %40, %39
  %42 = add i32 %37, %41
  %43 = add i32 %31, -3
  %44 = and i32 %32, 255
  %45 = shl i32 %44, %43
  %46 = add i32 %42, %45
  %47 = sub nsw i32 1, %32
  %48 = add i32 %31, -4
  %49 = and i32 %47, 255
  %50 = shl i32 %49, %48
  %51 = add i32 %46, %50
  %52 = sub nsw i32 1, %49
  %53 = add i32 %33, -4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %29

55:                                               ; preds = %29, %21
  %56 = phi i32 [ undef, %21 ], [ %51, %29 ]
  %57 = phi i32 [ %23, %21 ], [ %51, %29 ]
  %58 = phi i32 [ %4, %21 ], [ %48, %29 ]
  %59 = phi i32 [ 0, %21 ], [ %52, %29 ]
  %60 = icmp eq i32 %25, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %55, %61
  %62 = phi i32 [ %69, %61 ], [ %57, %55 ]
  %63 = phi i32 [ %66, %61 ], [ %58, %55 ]
  %64 = phi i32 [ %70, %61 ], [ %59, %55 ]
  %65 = phi i32 [ %71, %61 ], [ %25, %55 ]
  %66 = add i32 %63, -1
  %67 = and i32 %64, 255
  %68 = shl i32 %67, %66
  %69 = add i32 %62, %68
  %70 = sub nsw i32 1, %67
  %71 = add i32 %65, -1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %61, !llvm.loop !2

73:                                               ; preds = %61, %55
  %74 = phi i32 [ %56, %55 ], [ %69, %61 ]
  store i32 0, i32* %3, align 8
  store i32 %74, i32* %22, align 8
  br label %75

75:                                               ; preds = %18, %73
  %76 = phi i32 [ %20, %18 ], [ %74, %73 ]
  %77 = trunc i32 %76 to i8
  %78 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %79 = load i8*, i8** %78, align 8
  store i8 %77, i8* %79, align 1
  %80 = load i8*, i8** %78, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  store i8* %81, i8** %78, align 8
  br label %98

82:                                               ; preds = %10
  store i8* %13, i8** %11, align 8
  br label %98

83:                                               ; preds = %6
  %84 = icmp ne i32 %4, 8
  %85 = icmp ne i32 %1, 0
  %86 = or i1 %85, %84
  br i1 %86, label %98, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 -1
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 127
  br i1 %92, label %93, label %98

93:                                               ; preds = %87
  %94 = getelementptr inbounds i8, i8* %89, i64 -2
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, -1
  br i1 %96, label %97, label %98

97:                                               ; preds = %93
  store i8* %94, i8** %88, align 8
  br label %98

98:                                               ; preds = %82, %83, %97, %93, %87, %75
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @opj_mqc_reset_enc(%struct.opj_mqc*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 0
  %3 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 1
  %4 = bitcast %struct.opj_mqc_state** %3 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %4, align 8
  %5 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 3
  %6 = bitcast %struct.opj_mqc_state** %5 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %6, align 8
  %7 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 5
  %8 = bitcast %struct.opj_mqc_state** %7 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %8, align 8
  %9 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 7
  %10 = bitcast %struct.opj_mqc_state** %9 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %10, align 8
  %11 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 9
  %12 = bitcast %struct.opj_mqc_state** %11 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %12, align 8
  %13 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 11
  %14 = bitcast %struct.opj_mqc_state** %13 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %14, align 8
  %15 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 13
  %16 = bitcast %struct.opj_mqc_state** %15 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %16, align 8
  %17 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 15
  %18 = bitcast %struct.opj_mqc_state** %17 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %18, align 8
  %19 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 17
  %20 = bitcast %struct.opj_mqc_state** %19 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 6), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 92)>, <2 x %struct.opj_mqc_state*>* %20, align 8
  store %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 8), %struct.opj_mqc_state** %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @opj_mqc_resetstates(%struct.opj_mqc* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 0
  %3 = bitcast %struct.opj_mqc_state** %2 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %3, align 8
  %4 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 2
  %5 = bitcast %struct.opj_mqc_state** %4 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %5, align 8
  %6 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 4
  %7 = bitcast %struct.opj_mqc_state** %6 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %7, align 8
  %8 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 6
  %9 = bitcast %struct.opj_mqc_state** %8 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %9, align 8
  %10 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 8
  %11 = bitcast %struct.opj_mqc_state** %10 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %11, align 8
  %12 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 10
  %13 = bitcast %struct.opj_mqc_state** %12 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %13, align 8
  %14 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 12
  %15 = bitcast %struct.opj_mqc_state** %14 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %15, align 8
  %16 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 14
  %17 = bitcast %struct.opj_mqc_state** %16 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %17, align 8
  %18 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 16
  %19 = bitcast %struct.opj_mqc_state** %18 to <2 x %struct.opj_mqc_state*>*
  store <2 x %struct.opj_mqc_state*> <%struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0)>, <2 x %struct.opj_mqc_state*>* %19, align 8
  %20 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 18
  store %struct.opj_mqc_state* getelementptr inbounds ([94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 0), %struct.opj_mqc_state** %20, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @opj_mqc_setstate(%struct.opj_mqc* nocapture, i32, i32, i32) local_unnamed_addr #1 {
  %5 = shl i32 %3, 1
  %6 = add i32 %5, %2
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds [94 x %struct.opj_mqc_state], [94 x %struct.opj_mqc_state]* @mqc_states, i64 0, i64 %7
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 %9
  store %struct.opj_mqc_state* %8, %struct.opj_mqc_state** %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @opj_mqc_restart_init_enc(%struct.opj_mqc* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 1
  store i32 32768, i32* %2, align 4
  %3 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  store i32 12, i32* %4, align 8
  %5 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 -1
  store i8* %7, i8** %5, align 8
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, -1
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  store i32 13, i32* %4, align 8
  br label %11

11:                                               ; preds = %10, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @opj_mqc_erterm_enc(%struct.opj_mqc* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = sub i32 12, %3
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %51

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  %8 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %9 = load i32, i32* %7, align 8
  br label %10

10:                                               ; preds = %6, %41
  %11 = phi i32 [ %9, %6 ], [ %48, %41 ]
  %12 = phi i32 [ %3, %6 ], [ %45, %41 ]
  %13 = phi i32 [ %4, %6 ], [ %49, %41 ]
  %14 = shl i32 %11, %12
  store i32 %14, i32* %7, align 8
  store i32 0, i32* %2, align 8
  %15 = load i8*, i8** %8, align 8
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, -1
  br i1 %17, label %18, label %21

18:                                               ; preds = %10
  %19 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %19, i8** %8, align 8
  %20 = lshr i32 %14, 20
  br label %41

21:                                               ; preds = %10
  %22 = and i32 %14, 134217728
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %25, i8** %8, align 8
  %26 = lshr i32 %14, 19
  br label %41

27:                                               ; preds = %21
  %28 = add nuw i8 %16, 1
  store i8 %28, i8* %15, align 1
  %29 = load i8*, i8** %8, align 8
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, -1
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = load i32, i32* %7, align 8
  %34 = and i32 %33, 134217727
  store i32 %34, i32* %7, align 8
  %35 = getelementptr inbounds i8, i8* %29, i64 1
  store i8* %35, i8** %8, align 8
  %36 = lshr i32 %34, 20
  br label %41

37:                                               ; preds = %27
  %38 = getelementptr inbounds i8, i8* %29, i64 1
  store i8* %38, i8** %8, align 8
  %39 = load i32, i32* %7, align 8
  %40 = lshr i32 %39, 19
  br label %41

41:                                               ; preds = %18, %24, %32, %37
  %42 = phi i32 [ %20, %18 ], [ %26, %24 ], [ %36, %32 ], [ %40, %37 ]
  %43 = phi i8* [ %19, %18 ], [ %25, %24 ], [ %35, %32 ], [ %38, %37 ]
  %44 = phi i32 [ 1048575, %18 ], [ 524287, %24 ], [ 1048575, %32 ], [ 524287, %37 ]
  %45 = phi i32 [ 7, %18 ], [ 8, %24 ], [ 7, %32 ], [ 8, %37 ]
  %46 = trunc i32 %42 to i8
  store i8 %46, i8* %43, align 1
  %47 = load i32, i32* %7, align 8
  %48 = and i32 %47, %44
  store i32 %48, i32* %7, align 8
  store i32 %45, i32* %2, align 8
  %49 = sub nsw i32 %13, %45
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %10, label %51

51:                                               ; preds = %41, %1
  %52 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %53 = load i8*, i8** %52, align 8
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, -1
  br i1 %55, label %86, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 134217728
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = getelementptr inbounds i8, i8* %53, i64 1
  store i8* %62, i8** %52, align 8
  %63 = lshr i32 %58, 19
  br label %78

64:                                               ; preds = %56
  %65 = add nuw i8 %54, 1
  store i8 %65, i8* %53, align 1
  %66 = load i8*, i8** %52, align 8
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, -1
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = load i32, i32* %57, align 8
  %71 = and i32 %70, 134217727
  store i32 %71, i32* %57, align 8
  %72 = getelementptr inbounds i8, i8* %66, i64 1
  store i8* %72, i8** %52, align 8
  %73 = lshr i32 %71, 20
  br label %78

74:                                               ; preds = %64
  %75 = getelementptr inbounds i8, i8* %66, i64 1
  store i8* %75, i8** %52, align 8
  %76 = load i32, i32* %57, align 8
  %77 = lshr i32 %76, 19
  br label %78

78:                                               ; preds = %61, %69, %74
  %79 = phi i32 [ %77, %74 ], [ %73, %69 ], [ %63, %61 ]
  %80 = phi i8* [ %75, %74 ], [ %72, %69 ], [ %62, %61 ]
  %81 = phi i32 [ 524287, %74 ], [ 1048575, %69 ], [ 524287, %61 ]
  %82 = phi i32 [ 8, %74 ], [ 7, %69 ], [ 8, %61 ]
  %83 = trunc i32 %79 to i8
  store i8 %83, i8* %80, align 1
  %84 = load i32, i32* %57, align 8
  %85 = and i32 %84, %81
  store i32 %85, i32* %57, align 8
  store i32 %82, i32* %2, align 8
  br label %86

86:                                               ; preds = %78, %51
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @opj_mqc_segmark_enc(%struct.opj_mqc*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 18
  %3 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 8
  store %struct.opj_mqc_state** %2, %struct.opj_mqc_state*** %3, align 8
  %4 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 1
  %5 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  %8 = load i32, i32* %4, align 4
  br label %9

9:                                                ; preds = %179, %1
  %10 = phi i32 [ %8, %1 ], [ %176, %179 ]
  %11 = phi %struct.opj_mqc_state** [ %2, %1 ], [ %180, %179 ]
  %12 = phi i32 [ 1, %1 ], [ %177, %179 ]
  %13 = and i32 %12, 1
  %14 = load %struct.opj_mqc_state*, %struct.opj_mqc_state** %11, align 8
  %15 = getelementptr inbounds %struct.opj_mqc_state, %struct.opj_mqc_state* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %13
  %18 = getelementptr inbounds %struct.opj_mqc_state, %struct.opj_mqc_state* %14, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = sub i32 %10, %19
  store i32 %20, i32* %4, align 4
  br i1 %17, label %21, label %101

21:                                               ; preds = %9
  %22 = trunc i32 %20 to i16
  %23 = icmp sgt i16 %22, -1
  %24 = load %struct.opj_mqc_state*, %struct.opj_mqc_state** %11, align 8
  %25 = getelementptr inbounds %struct.opj_mqc_state, %struct.opj_mqc_state* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  br i1 %23, label %27, label %98

27:                                               ; preds = %21
  %28 = icmp ult i32 %20, %26
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  store i32 %26, i32* %4, align 4
  br label %33

30:                                               ; preds = %27
  %31 = load i32, i32* %5, align 8
  %32 = add i32 %31, %26
  store i32 %32, i32* %5, align 8
  br label %33

33:                                               ; preds = %30, %29
  %34 = load %struct.opj_mqc_state*, %struct.opj_mqc_state** %11, align 8
  %35 = getelementptr inbounds %struct.opj_mqc_state, %struct.opj_mqc_state* %34, i64 0, i32 2
  %36 = bitcast %struct.opj_mqc_state** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %struct.opj_mqc_state** %11 to i64*
  store i64 %37, i64* %38, align 8
  %39 = load i32, i32* %4, align 4
  %40 = load i32, i32* %5, align 8
  %41 = load i32, i32* %6, align 8
  br label %42

42:                                               ; preds = %92, %33
  %43 = phi i32 [ %93, %92 ], [ %41, %33 ]
  %44 = phi i32 [ %94, %92 ], [ %40, %33 ]
  %45 = phi i32 [ %95, %92 ], [ %39, %33 ]
  %46 = shl i32 %45, 1
  store i32 %46, i32* %4, align 4
  %47 = shl i32 %44, 1
  store i32 %47, i32* %5, align 8
  %48 = add i32 %43, -1
  store i32 %48, i32* %6, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %92

50:                                               ; preds = %42
  %51 = load i8*, i8** %7, align 8
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, -1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = getelementptr inbounds i8, i8* %51, i64 1
  store i8* %55, i8** %7, align 8
  %56 = lshr i32 %44, 19
  %57 = trunc i32 %56 to i8
  store i8 %57, i8* %55, align 1
  %58 = load i32, i32* %5, align 8
  %59 = and i32 %58, 1048575
  br label %89

60:                                               ; preds = %50
  %61 = and i32 %44, 67108864
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %60
  %64 = getelementptr inbounds i8, i8* %51, i64 1
  store i8* %64, i8** %7, align 8
  %65 = lshr i32 %44, 18
  %66 = trunc i32 %65 to i8
  store i8 %66, i8* %64, align 1
  %67 = load i32, i32* %5, align 8
  %68 = and i32 %67, 524287
  br label %89

69:                                               ; preds = %60
  %70 = add nuw i8 %52, 1
  store i8 %70, i8* %51, align 1
  %71 = load i8*, i8** %7, align 8
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, -1
  br i1 %73, label %74, label %82

74:                                               ; preds = %69
  %75 = load i32, i32* %5, align 8
  %76 = and i32 %75, 134217727
  store i32 %76, i32* %5, align 8
  %77 = getelementptr inbounds i8, i8* %71, i64 1
  store i8* %77, i8** %7, align 8
  %78 = lshr i32 %76, 20
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %77, align 1
  %80 = load i32, i32* %5, align 8
  %81 = and i32 %80, 1048575
  br label %89

82:                                               ; preds = %69
  %83 = getelementptr inbounds i8, i8* %71, i64 1
  store i8* %83, i8** %7, align 8
  %84 = load i32, i32* %5, align 8
  %85 = lshr i32 %84, 19
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %83, align 1
  %87 = load i32, i32* %5, align 8
  %88 = and i32 %87, 524287
  br label %89

89:                                               ; preds = %54, %63, %74, %82
  %90 = phi i32 [ %88, %82 ], [ %81, %74 ], [ %68, %63 ], [ %59, %54 ]
  %91 = phi i32 [ 8, %82 ], [ 7, %74 ], [ 8, %63 ], [ 7, %54 ]
  store i32 %90, i32* %5, align 8
  store i32 %91, i32* %6, align 8
  br label %92

92:                                               ; preds = %89, %42
  %93 = phi i32 [ %48, %42 ], [ %91, %89 ]
  %94 = phi i32 [ %47, %42 ], [ %90, %89 ]
  %95 = load i32, i32* %4, align 4
  %96 = trunc i32 %95 to i16
  %97 = icmp sgt i16 %96, -1
  br i1 %97, label %42, label %175

98:                                               ; preds = %21
  %99 = load i32, i32* %5, align 8
  %100 = add i32 %99, %26
  store i32 %100, i32* %5, align 8
  br label %175

101:                                              ; preds = %9
  %102 = load %struct.opj_mqc_state*, %struct.opj_mqc_state** %11, align 8
  %103 = getelementptr inbounds %struct.opj_mqc_state, %struct.opj_mqc_state* %102, i64 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = icmp ult i32 %20, %104
  br i1 %105, label %106, label %109

106:                                              ; preds = %101
  %107 = load i32, i32* %5, align 8
  %108 = add i32 %107, %104
  store i32 %108, i32* %5, align 8
  br label %110

109:                                              ; preds = %101
  store i32 %104, i32* %4, align 4
  br label %110

110:                                              ; preds = %109, %106
  %111 = load %struct.opj_mqc_state*, %struct.opj_mqc_state** %11, align 8
  %112 = getelementptr inbounds %struct.opj_mqc_state, %struct.opj_mqc_state* %111, i64 0, i32 3
  %113 = bitcast %struct.opj_mqc_state** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %struct.opj_mqc_state** %11 to i64*
  store i64 %114, i64* %115, align 8
  %116 = load i32, i32* %4, align 4
  %117 = load i32, i32* %5, align 8
  %118 = load i32, i32* %6, align 8
  br label %119

119:                                              ; preds = %169, %110
  %120 = phi i32 [ %170, %169 ], [ %118, %110 ]
  %121 = phi i32 [ %171, %169 ], [ %117, %110 ]
  %122 = phi i32 [ %172, %169 ], [ %116, %110 ]
  %123 = shl i32 %122, 1
  store i32 %123, i32* %4, align 4
  %124 = shl i32 %121, 1
  store i32 %124, i32* %5, align 8
  %125 = add i32 %120, -1
  store i32 %125, i32* %6, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %169

127:                                              ; preds = %119
  %128 = load i8*, i8** %7, align 8
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, -1
  br i1 %130, label %131, label %137

131:                                              ; preds = %127
  %132 = getelementptr inbounds i8, i8* %128, i64 1
  store i8* %132, i8** %7, align 8
  %133 = lshr i32 %121, 19
  %134 = trunc i32 %133 to i8
  store i8 %134, i8* %132, align 1
  %135 = load i32, i32* %5, align 8
  %136 = and i32 %135, 1048575
  br label %166

137:                                              ; preds = %127
  %138 = and i32 %121, 67108864
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %146

140:                                              ; preds = %137
  %141 = getelementptr inbounds i8, i8* %128, i64 1
  store i8* %141, i8** %7, align 8
  %142 = lshr i32 %121, 18
  %143 = trunc i32 %142 to i8
  store i8 %143, i8* %141, align 1
  %144 = load i32, i32* %5, align 8
  %145 = and i32 %144, 524287
  br label %166

146:                                              ; preds = %137
  %147 = add nuw i8 %129, 1
  store i8 %147, i8* %128, align 1
  %148 = load i8*, i8** %7, align 8
  %149 = load i8, i8* %148, align 1
  %150 = icmp eq i8 %149, -1
  br i1 %150, label %151, label %159

151:                                              ; preds = %146
  %152 = load i32, i32* %5, align 8
  %153 = and i32 %152, 134217727
  store i32 %153, i32* %5, align 8
  %154 = getelementptr inbounds i8, i8* %148, i64 1
  store i8* %154, i8** %7, align 8
  %155 = lshr i32 %153, 20
  %156 = trunc i32 %155 to i8
  store i8 %156, i8* %154, align 1
  %157 = load i32, i32* %5, align 8
  %158 = and i32 %157, 1048575
  br label %166

159:                                              ; preds = %146
  %160 = getelementptr inbounds i8, i8* %148, i64 1
  store i8* %160, i8** %7, align 8
  %161 = load i32, i32* %5, align 8
  %162 = lshr i32 %161, 19
  %163 = trunc i32 %162 to i8
  store i8 %163, i8* %160, align 1
  %164 = load i32, i32* %5, align 8
  %165 = and i32 %164, 524287
  br label %166

166:                                              ; preds = %131, %140, %151, %159
  %167 = phi i32 [ %165, %159 ], [ %158, %151 ], [ %145, %140 ], [ %136, %131 ]
  %168 = phi i32 [ 8, %159 ], [ 7, %151 ], [ 8, %140 ], [ 7, %131 ]
  store i32 %167, i32* %5, align 8
  store i32 %168, i32* %6, align 8
  br label %169

169:                                              ; preds = %166, %119
  %170 = phi i32 [ %125, %119 ], [ %168, %166 ]
  %171 = phi i32 [ %124, %119 ], [ %167, %166 ]
  %172 = load i32, i32* %4, align 4
  %173 = trunc i32 %172 to i16
  %174 = icmp sgt i16 %173, -1
  br i1 %174, label %119, label %175

175:                                              ; preds = %169, %92, %98
  %176 = phi i32 [ %20, %98 ], [ %95, %92 ], [ %172, %169 ]
  %177 = add nuw nsw i32 %12, 1
  %178 = icmp eq i32 %177, 5
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = load %struct.opj_mqc_state**, %struct.opj_mqc_state*** %3, align 8
  br label %9

181:                                              ; preds = %175
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @opj_mqc_init_dec(%struct.opj_mqc*, i8*, i32, i32) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 5
  store i8* %1, i8** %5, align 8
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds i8, i8* %1, i64 %6
  %8 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 6
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 10, i64 0
  %10 = bitcast i8* %7 to i16*
  %11 = bitcast i8* %9 to i16*
  %12 = load i16, i16* %10, align 1
  store i16 %12, i16* %11, align 8
  store i8 -1, i8* %7, align 1
  %13 = load i8*, i8** %8, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 1
  store i8 -1, i8* %14, align 1
  %15 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 7, i64 0
  %17 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 8
  store %struct.opj_mqc_state** %16, %struct.opj_mqc_state*** %17, align 8
  %18 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 3
  store i32 0, i32* %18, align 4
  %19 = icmp eq i32 %2, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %4
  %21 = load i8, i8* %1, align 1
  %22 = zext i8 %21 to i32
  %23 = shl nuw nsw i32 %22, 16
  br label %24

24:                                               ; preds = %4, %20
  %25 = phi i32 [ %23, %20 ], [ 16711680, %4 ]
  %26 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %1, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = load i8, i8* %1, align 1
  %31 = icmp eq i8 %30, -1
  br i1 %31, label %32, label %41

32:                                               ; preds = %24
  %33 = icmp ugt i8 %28, -113
  br i1 %33, label %34, label %37

34:                                               ; preds = %32
  %35 = or i32 %25, 65280
  store i32 %35, i32* %26, align 8
  %36 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  store i32 8, i32* %36, align 8
  store i32 1, i32* %18, align 4
  br label %45

37:                                               ; preds = %32
  store i8* %27, i8** %15, align 8
  %38 = shl nuw nsw i32 %29, 9
  %39 = add nuw nsw i32 %25, %38
  store i32 %39, i32* %26, align 8
  %40 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  store i32 7, i32* %40, align 8
  br label %45

41:                                               ; preds = %24
  store i8* %27, i8** %15, align 8
  %42 = shl nuw nsw i32 %29, 8
  %43 = or i32 %25, %42
  store i32 %43, i32* %26, align 8
  %44 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  store i32 8, i32* %44, align 8
  br label %45

45:                                               ; preds = %34, %37, %41
  %46 = phi i32 [ 1, %34 ], [ 0, %37 ], [ 1, %41 ]
  %47 = phi i32 [ %35, %34 ], [ %39, %37 ], [ %43, %41 ]
  %48 = shl i32 %47, 7
  store i32 %48, i32* %26, align 8
  %49 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  store i32 %46, i32* %49, align 8
  %50 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 1
  store i32 32768, i32* %50, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @opj_mqc_raw_init_dec(%struct.opj_mqc* nocapture, i8*, i32, i32) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 5
  store i8* %1, i8** %5, align 8
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds i8, i8* %1, i64 %6
  %8 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 6
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 10, i64 0
  %10 = bitcast i8* %7 to i16*
  %11 = bitcast i8* %9 to i16*
  %12 = load i16, i16* %10, align 1
  store i16 %12, i16* %11, align 8
  store i8 -1, i8* %7, align 1
  %13 = load i8*, i8** %8, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 1
  store i8 -1, i8* %14, align 1
  %15 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 4
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 0
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 2
  store i32 0, i32* %17, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @opq_mqc_finish_dec(%struct.opj_mqc* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 6
  %3 = bitcast i8** %2 to i16**
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds %struct.opj_mqc, %struct.opj_mqc* %0, i64 0, i32 10, i64 0
  %6 = bitcast i8* %5 to i16*
  %7 = load i16, i16* %6, align 8
  store i16 %7, i16* %4, align 1
  ret void
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
