; ModuleID = '../../net/quic/quic_transport_client.cc'
source_filename = "../../net/quic/quic_transport_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::QuicTransportClient" = type { %"class.net::WebTransportClient", %"class.quic::WebTransportVisitor", %"class.net::QuicChromiumPacketReader::Visitor", %"class.net::QuicChromiumPacketWriter::Delegate", %"class.quic::QuicSession::Visitor", %class.GURL, %"class.url::Origin", %"class.net::NetworkIsolationKey", %"class.net::URLRequestContext"*, %"class.net::WebTransportClientVisitor"*, %"class.net::ClientSocketFactory"*, %"class.net::QuicContext"*, %"class.net::NetLogWithSource", %"class.base::SequencedTaskRunner"*, %"class.std::__1::vector.202", %"class.std::__1::unique_ptr.233", %"class.quic::QuicCryptoClientConfig", i32, i32, %"struct.net::WebTransportError", i8, %"class.net::ProxyInfo", %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.770", %"class.std::__1::unique_ptr.778", %"class.base::WeakPtrFactory.784" }
%"class.net::WebTransportClient" = type { i32 (...)** }
%"class.quic::WebTransportVisitor" = type { i32 (...)** }
%"class.net::QuicChromiumPacketReader::Visitor" = type { i32 (...)** }
%"class.net::QuicChromiumPacketWriter::Delegate" = type { i32 (...)** }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.5", %"class.absl::optional.5" }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.net::ClientSocketFactory" = type { i32 (...)** }
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.196", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.202", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.209", %"class.std::__1::vector.219", %"class.std::__1::vector.219", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::set.209" = type { %"class.std::__1::__tree.210" }
%"class.std::__1::__tree.210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i64 }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { i32*, i32*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { i32* }
%"class.base::TimeDelta" = type { i64 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.15" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.10" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.17" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.204" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.net::QuicChromiumAlarmFactory"* }
%"class.net::QuicChromiumAlarmFactory" = type { %"class.quic::QuicAlarmFactory", %"class.base::TaskRunner"*, %"class.quic::QuicClock"*, %"class.base::WeakPtrFactory.236" }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.base::WeakPtrFactory.236" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.91 }
%class.scoped_refptr.91 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.92", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.92" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.93" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i8 }
%"class.quic::QuicCryptoClientConfig" = type <{ %"class.quic::QuicCryptoConfig", %"class.std::__1::map.240", %"class.std::__1::map.251", %"class.std::__1::vector.108", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.278", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.quic::QuicCryptoConfig" = type { %"class.std::__1::vector.219", %"class.std::__1::vector.219", %"class.quic::CommonCertSets"* }
%"class.quic::CommonCertSets" = type opaque
%"class.std::__1::map.240" = type { %"class.std::__1::__tree.241" }
%"class.std::__1::__tree.241" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::map.251" = type { %"class.std::__1::__tree.252" }
%"class.std::__1::__tree.252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.quic::ProofVerifier"* }
%"class.quic::ProofVerifier" = type { i32 (...)** }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.quic::SessionCache"* }
%"class.quic::SessionCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.quic::ProofSource"* }
%"class.quic::ProofSource" = type { i32 (...)** }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type opaque
%"struct.net::WebTransportError" = type <{ i32, i32, %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.net::ProxyInfo" = type { %"class.net::ProxyList", %"class.std::__1::map.289", %"struct.net::MutableNetworkTrafficAnnotationTag", i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyList" = type { %"class.std::__1::vector.282" }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.284" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.net::ProxyServer"* }
%"class.std::__1::map.289" = type { %"class.std::__1::__tree.290" }
%"class.std::__1::__tree.290" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.net::ProxyResolutionRequest"* }
%"class.net::ProxyResolutionRequest" = type { i32 (...)** }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.net::HostResolver::ResolveHostRequest"* }
%"class.net::HostResolver::ResolveHostRequest" = type { i32 (...)** }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.net::DatagramClientSocket"* }
%"class.net::DatagramClientSocket" = type { %"class.net::DatagramSocket", %"class.net::Socket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.108" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.quic::QuicConnection"* }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque", i64, i64, %"class.std::__1::unique_ptr.370", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector.202", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array.337", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.499", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.521", %"class.quiche::QuicheCircularDeque.527", %"class.quiche::QuicheCircularDeque.530", %"class.std::__1::vector.533", %"class.absl::optional.540", %"class.quic::QuicConnectionId", %"class.absl::optional.540", %"class.std::__1::list.545", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector.202", [4 x %"class.std::__1::unique_ptr.322"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.328"], i8, i8, %"struct.std::__1::array.334", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.322", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array.334" = type { [32 x i8] }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array.334"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array.337", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.364" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.359" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.353", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.353"*, i64 }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.std::__1::vector.373"* }
%"class.std::__1::vector.373" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.377", %"class.absl::optional.377", %"class.absl::optional.377" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.377" = type { %"class.absl::optional_internal::optional_data.378" }
%"class.absl::optional_internal::optional_data.378" = type { %"class.absl::optional_internal::optional_data_base.379" }
%"class.absl::optional_internal::optional_data_base.379" = type { %"class.absl::optional_internal::optional_data_dtor_base.380" }
%"class.absl::optional_internal::optional_data_dtor_base.380" = type { i8, %union.anon.381 }
%union.anon.381 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.382", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector.382" = type { %"class.std::__1::__vector_base.383" }
%"class.std::__1::__vector_base.383" = type { %"struct.std::__1::pair.384"*, %"struct.std::__1::pair.384"*, %"class.std::__1::__compressed_pair.385" }
%"struct.std::__1::pair.384" = type opaque
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::pair.384"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet" }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.393" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.393" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array.334", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.394", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.394" = type { %"class.std::__1::__vector_base.395" }
%"class.std::__1::__vector_base.395" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.423" }
%"struct.quic::QuicFrame" = type { %union.anon.396 }
%union.anon.396 = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.394", %"class.std::__1::vector.394", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.338", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.447", %"class.std::__1::vector.454", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.461", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.428", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.428" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.394", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.431", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.437", %"class.absl::optional.442" }
%"class.absl::optional.437" = type { %"class.absl::optional_internal::optional_data.438" }
%"class.absl::optional_internal::optional_data.438" = type { %"class.absl::optional_internal::optional_data_base.439" }
%"class.absl::optional_internal::optional_data_base.439" = type { %"class.absl::optional_internal::optional_data_dtor_base.440" }
%"class.absl::optional_internal::optional_data_dtor_base.440" = type { i8, %union.anon.441 }
%union.anon.441 = type { i32 }
%"class.absl::optional.442" = type { %"class.absl::optional_internal::optional_data.443" }
%"class.absl::optional_internal::optional_data.443" = type { %"class.absl::optional_internal::optional_data_base.444" }
%"class.absl::optional_internal::optional_data_base.444" = type { %"class.absl::optional_internal::optional_data_dtor_base.445" }
%"class.absl::optional_internal::optional_data_dtor_base.445" = type { i8, %union.anon.446 }
%union.anon.446 = type { i64 }
%"class.std::__1::vector.447" = type { %"class.std::__1::__vector_base.448" }
%"class.std::__1::__vector_base.448" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.449" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.454" = type { %"class.std::__1::__vector_base.455" }
%"class.std::__1::__vector_base.455" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.456" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.461" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.464"*, i64 }
%"struct.std::__1::pair.464" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.335, i32 }
%union.anon.335 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.336 }
%union.anon.336 = type { [4 x i32] }
%"struct.std::__1::array.337" = type { [16 x i8] }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.468", %"class.std::__1::vector.475", %"class.std::__1::vector.475", %"class.std::__1::vector.475", %"class.quic::QuicIntervalSet.482", i64 }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.471", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.471" = type { i8* }
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.477" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array.337" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.quic::QuicIntervalSet.482" = type { %"class.absl::btree_set.483" }
%"class.absl::btree_set.483" = type { %"class.absl::container_internal::btree_set_container.484" }
%"class.absl::container_internal::btree_set_container.484" = type { %"class.absl::container_internal::btree_container.485" }
%"class.absl::container_internal::btree_container.485" = type { %"class.absl::container_internal::btree.486" }
%"class.absl::container_internal::btree.486" = type { %"class.absl::container_internal::CompressedTuple.487", %"class.absl::container_internal::btree_node.494"*, i64 }
%"class.absl::container_internal::CompressedTuple.487" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.488" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.488" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.493" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.493" = type { %"class.absl::container_internal::btree_node.494"* }
%"class.absl::container_internal::btree_node.494" = type { i8 }
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.502", %"class.std::__1::vector.510", %"class.std::__1::unique_ptr.468", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.502" = type { %"class.std::__1::__vector_base.503" }
%"class.std::__1::__vector_base.503" = type { %"struct.std::__1::pair.504"*, %"struct.std::__1::pair.504"*, %"class.std::__1::__compressed_pair.505" }
%"struct.std::__1::pair.504" = type opaque
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"struct.std::__1::pair.504"* }
%"class.std::__1::vector.510" = type { %"class.std::__1::__vector_base.511" }
%"class.std::__1::__vector_base.511" = type { %"struct.std::__1::pair.512"*, %"struct.std::__1::pair.512"*, %"class.std::__1::__compressed_pair.513" }
%"struct.std::__1::pair.512" = type opaque
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::pair.512"* }
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::array.413"* }
%"struct.std::__1::array.413" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.527" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.413"*, i64 }
%"class.quiche::QuicheCircularDeque.530" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.413", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.533" = type { %"class.std::__1::__vector_base.534" }
%"class.std::__1::__vector_base.534" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.319 }
%union.anon.319 = type { %struct.anon.321 }
%struct.anon.321 = type { i8, i8* }
%"class.absl::optional.540" = type { %"class.absl::optional_internal::optional_data.541" }
%"class.absl::optional_internal::optional_data.541" = type { %"class.absl::optional_internal::optional_data_base.542" }
%"class.absl::optional_internal::optional_data_base.542" = type { %"class.absl::optional_internal::optional_data_dtor_base.543" }
%"class.absl::optional_internal::optional_data_dtor_base.543" = type { i8, %union.anon.544 }
%union.anon.544 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list.545" = type { %"class.std::__1::__list_imp.546" }
%"class.std::__1::__list_imp.546" = type { %"struct.std::__1::__list_node_base.547", %"class.std::__1::__compressed_pair.548" }
%"struct.std::__1::__list_node_base.547" = type { %"struct.std::__1::__list_node_base.547"*, %"struct.std::__1::__list_node_base.547"* }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.552" }
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.558", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.568", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.558" = type { %"class.std::__1::__vector_base.559" }
%"class.std::__1::__vector_base.559" = type { %"struct.std::__1::array.413"*, %"struct.std::__1::array.413"*, %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array.337", i8, i8, i64, i64, %"class.std::__1::unique_ptr.338", %"class.absl::optional.344" }
%"class.absl::optional.344" = type { %"class.absl::optional_internal::optional_data.345" }
%"class.absl::optional_internal::optional_data.345" = type { %"class.absl::optional_internal::optional_data_base.346" }
%"class.absl::optional_internal::optional_data_base.346" = type { %"class.absl::optional_internal::optional_data_dtor_base.347" }
%"class.absl::optional_internal::optional_data_dtor_base.347" = type { i8, [7 x i8], %union.anon.348 }
%union.anon.348 = type { %"class.quic::RttStats" }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.quic::QuicTransportClientSession"* }
%"class.quic::QuicTransportClientSession" = type { %"class.quic::QuicSession.base", %"class.quic::WebTransportSession", %"class.quic::QuicTransportSessionInterface", %"class.quic::QuicCryptoClientStream::ProofHandler", %"class.std::__1::unique_ptr.745", %class.GURL, %"class.url::Origin", %"class.quic::WebTransportVisitor"*, i8, i8, i8, %"class.quiche::QuicheCircularDeque.758", %"class.quiche::QuicheCircularDeque.758" }
%"class.quic::QuicSession.base" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.628", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.684", %"class.absl::flat_hash_map.693", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.468", %"class.std::__1::vector.202", %"class.absl::optional.740", i8, i8, i8, i8 }>
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple.580" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple.580" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.581" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.582" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.582" = type { i64 }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.590", i64 }
%"class.std::__1::deque.590" = type { %"class.std::__1::__deque_base.591" }
%"class.std::__1::__deque_base.591" = type { %"struct.std::__1::__split_buffer.592", i64, %"class.std::__1::__compressed_pair.598" }
%"struct.std::__1::__split_buffer.592" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.593" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.602", %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.615", %"class.std::__1::__compressed_pair.618", [4 x i8] }>
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604", %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.606" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.621" }
%"class.std::__1::vector.621" = type { %"class.std::__1::__vector_base.622" }
%"class.std::__1::__vector_base.622" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.623" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.628" = type { %"class.std::__1::__vector_base.629" }
%"class.std::__1::__vector_base.629" = type { %"class.std::__1::unique_ptr.630"*, %"class.std::__1::unique_ptr.630"*, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.640", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr.633", i64, %"class.quic::QuicIntervalSet.482" }
%"class.std::__1::unique_ptr.633" = type { %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.628", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.684", %"class.absl::flat_hash_map.693", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.468", %"class.std::__1::vector.202", %"class.absl::optional.740", i8, i8, i8, i8, [4 x i8] }>
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.639 }
%union.anon.639 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.640" = type { %"class.absl::optional_internal::optional_data.641" }
%"class.absl::optional_internal::optional_data.641" = type { %"class.absl::optional_internal::optional_data_base.642" }
%"class.absl::optional_internal::optional_data_base.642" = type { %"class.absl::optional_internal::optional_data_dtor_base.643" }
%"class.absl::optional_internal::optional_data_dtor_base.643" = type { i8, %union.anon.644 }
%union.anon.644 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet.482", %"class.quic::QuicIntervalSet.482", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.647", %"class.absl::optional.442" }
%"class.quiche::QuicheCircularDeque.647" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr.416, i64 }
%class.scoped_refptr.416 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.417", i8* }
%"class.base::RefCountedThreadSafe.417" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.std::__1::unique_ptr.630"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.658", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.663", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.219", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.540", %"class.absl::optional.540", %"class.absl::optional.540", %"class.absl::optional.540", %"class.absl::optional.540", %"class.absl::optional.540", %"class.absl::flat_hash_map.669", %"class.absl::flat_hash_map.669" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.219", %"class.std::__1::vector.219" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.658" = type { %"class.absl::optional_internal::optional_data.659" }
%"class.absl::optional_internal::optional_data.659" = type { %"class.absl::optional_internal::optional_data_base.660" }
%"class.absl::optional_internal::optional_data_base.660" = type { %"class.absl::optional_internal::optional_data_dtor_base.661" }
%"class.absl::optional_internal::optional_data_dtor_base.661" = type { i8, %union.anon.662 }
%union.anon.662 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.663" = type { %"class.absl::optional_internal::optional_data.664" }
%"class.absl::optional_internal::optional_data.664" = type { %"class.absl::optional_internal::optional_data_base.665" }
%"class.absl::optional_internal::optional_data_base.665" = type { %"class.absl::optional_internal::optional_data_dtor_base.666" }
%"class.absl::optional_internal::optional_data_dtor_base.666" = type { i8, %union.anon.667 }
%union.anon.667 = type { %"struct.std::__1::pair.668" }
%"struct.std::__1::pair.668" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.337" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.337", %"struct.std::__1::array.337", i8 }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.669" = type { %"class.absl::container_internal::raw_hash_map.670" }
%"class.absl::container_internal::raw_hash_map.670" = type { %"class.absl::container_internal::raw_hash_set.671" }
%"class.absl::container_internal::raw_hash_set.671" = type { i8*, %"union.absl::container_internal::map_slot_type.672"*, i64, i64, %"class.absl::container_internal::CompressedTuple.673" }
%"union.absl::container_internal::map_slot_type.672" = type opaque
%"class.absl::container_internal::CompressedTuple.673" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.674" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.674" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.582" }
%"class.absl::flat_hash_map.684" = type { %"class.absl::container_internal::raw_hash_map.685" }
%"class.absl::container_internal::raw_hash_map.685" = type { %"class.absl::container_internal::raw_hash_set.686" }
%"class.absl::container_internal::raw_hash_set.686" = type { i8*, %"union.absl::container_internal::map_slot_type.687"*, i64, i64, %"class.absl::container_internal::CompressedTuple.688" }
%"union.absl::container_internal::map_slot_type.687" = type opaque
%"class.absl::container_internal::CompressedTuple.688" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.689" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.689" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.582" }
%"class.absl::flat_hash_map.693" = type { %"class.absl::container_internal::raw_hash_map.694" }
%"class.absl::container_internal::raw_hash_map.694" = type { %"class.absl::container_internal::raw_hash_set.695" }
%"class.absl::container_internal::raw_hash_set.695" = type { i8*, %"union.absl::container_internal::map_slot_type.696"*, i64, i64, %"class.absl::container_internal::CompressedTuple.697" }
%"union.absl::container_internal::map_slot_type.696" = type opaque
%"class.absl::container_internal::CompressedTuple.697" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.698" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.698" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.582" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.702" }
%"class.absl::container_internal::raw_hash_set.702" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.703" }
%"class.absl::container_internal::CompressedTuple.703" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.704" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.704" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.582" }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque.706", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map.722" }
%"class.quiche::QuicheCircularDeque.706" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"class.absl::flat_hash_map.722" = type { %"class.absl::container_internal::raw_hash_map.723" }
%"class.absl::container_internal::raw_hash_map.723" = type { %"class.absl::container_internal::raw_hash_set.724" }
%"class.absl::container_internal::raw_hash_set.724" = type { i8*, %"union.absl::container_internal::map_slot_type.725"*, i64, i64, %"class.absl::container_internal::CompressedTuple.726" }
%"union.absl::container_internal::map_slot_type.725" = type opaque
%"class.absl::container_internal::CompressedTuple.726" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.727" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.727" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.582" }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.731", %"class.std::__1::unique_ptr.734" }
%"class.quiche::QuicheCircularDeque.731" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list.715" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map.707" }
%"class.absl::container_internal::raw_hash_map.707" = type { %"class.absl::container_internal::raw_hash_set.708" }
%"class.absl::container_internal::raw_hash_set.708" = type { i8*, %"struct.std::__1::pair.709"**, i64, i64, %"class.absl::container_internal::CompressedTuple.710" }
%"struct.std::__1::pair.709" = type opaque
%"class.absl::container_internal::CompressedTuple.710" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.711" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.711" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.582" }
%"class.std::__1::list.715" = type { %"class.std::__1::__list_imp.716" }
%"class.std::__1::__list_imp.716" = type { %"struct.std::__1::__list_node_base.717", %"class.std::__1::__compressed_pair.718" }
%"struct.std::__1::__list_node_base.717" = type { %"struct.std::__1::__list_node_base.717"*, %"struct.std::__1::__list_node_base.717"* }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.absl::optional.740" = type { %"class.absl::optional_internal::optional_data.741" }
%"class.absl::optional_internal::optional_data.741" = type { %"class.absl::optional_internal::optional_data_base.742" }
%"class.absl::optional_internal::optional_data_base.742" = type { %"class.absl::optional_internal::optional_data_dtor_base.743" }
%"class.absl::optional_internal::optional_data_dtor_base.743" = type { i8, %union.anon.744 }
%union.anon.744 = type { %"class.std::__1::basic_string" }
%"class.quic::WebTransportSession" = type { i32 (...)** }
%"class.quic::QuicTransportSessionInterface" = type { i32 (...)** }
%"class.quic::QuicCryptoClientStream::ProofHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.quic::QuicCryptoClientStream"* }
%"class.quic::QuicCryptoClientStream" = type { %"class.quic::QuicCryptoClientStreamBase", %"class.std::__1::unique_ptr.749" }
%"class.quic::QuicCryptoClientStreamBase" = type { %"class.quic::QuicCryptoStream" }
%"class.quic::QuicCryptoStream" = type { %"class.quic::QuicStream.base", [4 x %"class.quic::QuicIntervalSet.482"], %"struct.std::__1::array.748" }
%"class.quic::QuicStream.base" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.640", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8 }>
%"struct.std::__1::array.748" = type { [4 x %"struct.quic::QuicCryptoStream::CryptoSubstream"] }
%"struct.quic::QuicCryptoStream::CryptoSubstream" = type { %"class.quic::QuicStreamSequencer", %"class.quic::QuicStreamSendBuffer" }
%"class.std::__1::unique_ptr.749" = type { %"class.std::__1::__compressed_pair.750" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.751" }
%"struct.std::__1::__compressed_pair_elem.751" = type { %"class.quic::QuicCryptoClientStream::HandshakerInterface"* }
%"class.quic::QuicCryptoClientStream::HandshakerInterface" = type { i32 (...)** }
%"class.quiche::QuicheCircularDeque.758" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransportStream *, 3, std::__1::allocator<quic::QuicTransportStream *> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransportStream *, 3, std::__1::allocator<quic::QuicTransportStream *> >::AllocatorAndData" = type { %"class.quic::QuicTransportStream"**, i64 }
%"class.quic::QuicTransportStream" = type { %"class.quic::QuicStream.base", %"class.quic::WebTransportStream", %"class.quic::WebTransportStreamAdapter", %"class.quic::QuicTransportSessionInterface"* }
%"class.quic::WebTransportStream" = type { i32 (...)** }
%"class.quic::WebTransportStreamAdapter" = type <{ %"class.quic::WebTransportStream", %"class.quic::QuicSession"*, %"class.quic::QuicStream"*, %"class.quic::QuicStreamSequencer"*, %"class.std::__1::unique_ptr.761", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.761" = type { %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.quic::WebTransportStreamVisitor"* }
%"class.quic::WebTransportStreamVisitor" = type { i32 (...)** }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"class.net::QuicChromiumPacketReader"* }
%"class.net::QuicChromiumPacketReader" = type { i32 (...)**, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketReader::Visitor"*, i8, i32, %"class.quic::QuicClock"*, i32, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %class.scoped_refptr.773, %"class.net::NetLogWithSource", %"class.base::WeakPtrFactory.774" }
%class.scoped_refptr.773 = type { %"class.net::IOBufferWithSize"* }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%"class.base::WeakPtrFactory.774" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.net::QuicEventLogger"* }
%"class.net::QuicEventLogger" = type <{ %"class.quic::QuicConnectionDebugVisitor", %"class.quic::QuicPacketCreator::DebugDelegate", %"class.quic::QuicSession"*, %"class.net::NetLogWithSource", %"class.net::IPEndPoint", [4 x i8] }>
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::WeakPtrFactory.784" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::WebTransportClientVisitor" = type { i32 (...)** }
%"class.net::URLRequestContext" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::SSLConfigService"*, %"class.net::NetworkDelegate"*, %"class.net::HttpServerProperties"*, %"class.net::HttpUserAgentSettings"*, %"class.net::CookieStore"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::HttpTransactionFactory"*, %"class.net::URLRequestJobFactory"*, %"class.net::URLRequestThrottlerManager"*, %"class.net::QuicContext"*, %"class.net::NetworkQualityEstimator"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::FtpAuthCache"*, %"class.std::__1::unique_ptr.226", i8, i8, i8, %"class.std::__1::basic_string" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::ProxyResolutionService" = type { i32 (...)** }
%"class.net::ProxyDelegate" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.22", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.24" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr.29", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector.108", %"class.base::MRUCache.115", %"class.base::flat_map.135", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.47", %"class.std::__1::map.54", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.100" }
%"class.std::__1::list.47" = type { %"class.std::__1::__list_imp.48" }
%"class.std::__1::__list_imp.48" = type { %"struct.std::__1::__list_node_base.49", %"class.std::__1::__compressed_pair.50" }
%"struct.std::__1::__list_node_base.49" = type { %"struct.std::__1::__list_node_base.49"*, %"struct.std::__1::__list_node_base.49"* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::map.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.72" }
%"class.base::MRUCache.72" = type { %"class.base::MRUCacheBase.73" }
%"class.base::MRUCacheBase.73" = type { i32 (...)**, %"class.std::__1::list.74", %"class.std::__1::map.81", i64 }
%"class.std::__1::list.74" = type { %"class.std::__1::__list_imp.75" }
%"class.std::__1::__list_imp.75" = type { %"struct.std::__1::__list_node_base.76", %"class.std::__1::__compressed_pair.77" }
%"struct.std::__1::__list_node_base.76" = type { %"struct.std::__1::__list_node_base.76"*, %"struct.std::__1::__list_node_base.76"* }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::map.81" = type { %"class.std::__1::__tree.82" }
%"class.std::__1::__tree.82" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.base::WeakPtrFactory.100" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.101" }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.103" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::pair"* }
%"class.base::MRUCache.115" = type { %"class.base::MRUCacheBase.116" }
%"class.base::MRUCacheBase.116" = type { i32 (...)**, %"class.std::__1::list.117", %"class.std::__1::map.124", i64 }
%"class.std::__1::list.117" = type { %"class.std::__1::__list_imp.118" }
%"class.std::__1::__list_imp.118" = type { %"struct.std::__1::__list_node_base.119", %"class.std::__1::__compressed_pair.120" }
%"struct.std::__1::__list_node_base.119" = type { %"struct.std::__1::__list_node_base.119"*, %"struct.std::__1::__list_node_base.119"* }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::map.124" = type { %"class.std::__1::__tree.125" }
%"class.std::__1::__tree.125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.base::flat_map.135" = type { %"class.base::internal::flat_tree.136" }
%"class.base::internal::flat_tree.136" = type { %"class.std::__1::vector.137" }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"struct.std::__1::pair.139"*, %"struct.std::__1::pair.139"*, %"class.std::__1::__compressed_pair.140" }
%"struct.std::__1::pair.139" = type opaque
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::pair.139"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.98 }
%class.scoped_refptr.98 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.99", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.99" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::CookieStore" = type opaque
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.145", %"class.std::__1::map.156", %"class.std::__1::map.165", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set.188", i8, [7 x i8] }>
%"class.std::__1::map.145" = type { %"class.std::__1::__tree.146" }
%"class.std::__1::__tree.146" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::map.156" = type { %"class.std::__1::__tree.157" }
%"class.std::__1::__tree.157" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::map.165" = type { %"class.std::__1::__tree.166" }
%"class.std::__1::__tree.166" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.176", %"struct.std::__1::less.185", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.176" = type { %"class.std::__1::__tree.177" }
%"class.std::__1::__tree.177" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::less.185" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.187" }
%"class.base::time_internal::TimeBase.187" = type { i64 }
%"class.std::__1::set.188" = type { %"class.std::__1::__tree.189" }
%"class.std::__1::__tree.189" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::HttpTransactionFactory" = type opaque
%"class.net::URLRequestJobFactory" = type opaque
%"class.net::URLRequestThrottlerManager" = type opaque
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.net::FtpAuthCache" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.std::__1::set.229"* }
%"class.std::__1::set.229" = type opaque
%"struct.net::WebTransportParameters" = type { i8, i8, i8, %"class.std::__1::vector.785" }
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.quic::CertificateFingerprint"*, %"struct.quic::CertificateFingerprint"*, %"class.std::__1::__compressed_pair.787" }
%"struct.quic::CertificateFingerprint" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.quic::CertificateFingerprint"* }
%class.scoped_refptr.792 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.net::ProofVerifierChromium" = type { %"class.quic::ProofVerifier", %"class.std::__1::map.829", %"class.net::CertVerifier"*, %"class.net::CTPolicyEnforcer"*, %"class.net::TransportSecurityState"*, %"class.net::SCTAuditingDelegate"*, %"class.std::__1::set.188", %"class.net::NetworkIsolationKey" }
%"class.std::__1::map.829" = type { %"class.std::__1::__tree.830" }
%"class.std::__1::__tree.830" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.831", %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"class.std::__1::__tree_node.855" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"class.net::HostPortPair" }
%"class.quic::WebTransportFingerprintProofVerifier" = type { %"class.quic::ProofVerifier", %"class.quic::QuicClock"*, i32, %"class.quic::QuicTime::Delta", %"class.std::__1::vector.785" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::OnceCallback.793" = type { %"class.base::internal::CallbackBase" }
%"struct.net::HostResolver::ResolveHostParameters" = type { i32, i32, i32, i32, i8, i8, i8, i8, i32 }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"struct.net::HostResolver::ResolveHostParameters" }
%"class.absl::optional.800" = type { %"class.absl::optional_internal::optional_data.801" }
%"class.absl::optional_internal::optional_data.801" = type { %"class.absl::optional_internal::optional_data_base.802" }
%"class.absl::optional_internal::optional_data_base.802" = type { %"class.absl::optional_internal::optional_data_dtor_base.803" }
%"class.absl::optional_internal::optional_data_dtor_base.803" = type { i8, %union.anon.804 }
%union.anon.804 = type { %"class.net::AddressList" }
%"class.net::AddressList" = type { %"class.std::__1::vector.805", %"class.std::__1::vector.108" }
%"class.std::__1::vector.805" = type { %"class.std::__1::__vector_base.806" }
%"class.std::__1::__vector_base.806" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.net::IPEndPoint"* }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr = type { i16, [14 x i8] }
%"class.net::QuicChromiumPacketWriter" = type { %"class.quic::QuicPacketWriter", %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter::Delegate"*, %class.scoped_refptr.812, i8, i8, i32, %"class.base::OneShotTimer", %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.813" }
%class.scoped_refptr.812 = type { %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"* }
%"class.net::QuicChromiumPacketWriter::ReusableIOBuffer" = type { %"class.net::IOBuffer", i64, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.813" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.quic::QuicReceivedPacket" = type <{ %"class.quic::QuicEncryptedPacket.base", [7 x i8], %"class.quic::QuicTime", i32, [4 x i8], i8*, i32, i8, [3 x i8] }>
%"class.quic::QuicEncryptedPacket.base" = type { %"class.quic::QuicData.base" }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.820 }
%class.scoped_refptr.820 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.net::QuicTransportClient::DatagramObserverProxy" = type { %"class.quic::QuicDatagramQueue::Observer", %"class.net::QuicTransportClient"* }
%"struct.quic::QuicRstStreamFrame" = type { i32, i32, i32, i64, i64 }
%"struct.quic::QuicStopSendingFrame" = type { i32, i32, i32, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4quic17QuicDatagramQueue8ObserverD2Ev = comdat any

$_ZN3net19QuicTransportClient21DatagramObserverProxyD0Ev = comdat any

$_ZN3net19QuicTransportClient14OnWriteBlockedEPN4quic26QuicBlockedWriterInterfaceE = comdat any

$_ZN3net19QuicTransportClient19OnRstStreamReceivedERKN4quic18QuicRstStreamFrameE = comdat any

$_ZN3net19QuicTransportClient21OnStopSendingReceivedERKN4quic20QuicStopSendingFrameE = comdat any

$_ZN3net19QuicTransportClient21OnNewConnectionIdSentERKN4quic16QuicConnectionIdES4_ = comdat any

$_ZN3net19QuicTransportClient21OnConnectionIdRetiredERKN4quic16QuicConnectionIdE = comdat any

$_ZThn32_N3net19QuicTransportClient14OnWriteBlockedEPN4quic26QuicBlockedWriterInterfaceE = comdat any

$_ZThn32_N3net19QuicTransportClient19OnRstStreamReceivedERKN4quic18QuicRstStreamFrameE = comdat any

$_ZThn32_N3net19QuicTransportClient21OnStopSendingReceivedERKN4quic20QuicStopSendingFrameE = comdat any

$_ZThn32_N3net19QuicTransportClient21OnNewConnectionIdSentERKN4quic16QuicConnectionIdES4_ = comdat any

$_ZThn32_N3net19QuicTransportClient21OnConnectionIdRetiredERKN4quic16QuicConnectionIdE = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE30__emplace_hint_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEENS_21__tree_const_iteratorIS2_SG_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SA_EElEERPNS_15__tree_end_nodeISC_EESD_RKT_ = comdat any

$_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@_ZTVN3net19QuicTransportClientE = hidden unnamed_addr constant { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClientD2Ev to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClientD0Ev to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClient7ConnectEv to i8*), i8* bitcast (%"class.quic::WebTransportSession"* (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClient7sessionEv to i8*), i8* bitcast (%"struct.net::WebTransportError"* (%"class.net::QuicTransportClient"*)* @_ZNK3net19QuicTransportClient5errorEv to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClient14OnSessionReadyEv to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClient38OnIncomingBidirectionalStreamAvailableEv to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClient39OnIncomingUnidirectionalStreamAvailableEv to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, i8*, i64)* @_ZN3net19QuicTransportClient18OnDatagramReceivedEN4absl11string_viewE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClient41OnCanCreateNewOutgoingBidirectionalStreamEv to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClient42OnCanCreateNewOutgoingUnidirectionalStreamEv to i8*), i8* bitcast (i1 (%"class.net::QuicTransportClient"*, i32, %"class.net::DatagramClientSocket"*)* @_ZN3net19QuicTransportClient11OnReadErrorEiPKNS_20DatagramClientSocketE to i8*), i8* bitcast (i1 (%"class.net::QuicTransportClient"*, %"class.quic::QuicReceivedPacket"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*)* @_ZN3net19QuicTransportClient8OnPacketERKN4quic18QuicReceivedPacketERKNS1_17QuicSocketAddressES7_ to i8*), i8* bitcast (i32 (%"class.net::QuicTransportClient"*, i32, %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"*)* @_ZN3net19QuicTransportClient16HandleWriteErrorEi13scoped_refptrINS_24QuicChromiumPacketWriter16ReusableIOBufferEE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, i32)* @_ZN3net19QuicTransportClient12OnWriteErrorEi to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClient16OnWriteUnblockedEv to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"*, i32, %"class.std::__1::basic_string"*, i32)* @_ZN3net19QuicTransportClient18OnConnectionClosedEN4quic16QuicConnectionIdENS1_13QuicErrorCodeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_21ConnectionCloseSourceE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"class.quic::QuicBlockedWriterInterface"*)* @_ZN3net19QuicTransportClient14OnWriteBlockedEPN4quic26QuicBlockedWriterInterfaceE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"struct.quic::QuicRstStreamFrame"*)* @_ZN3net19QuicTransportClient19OnRstStreamReceivedERKN4quic18QuicRstStreamFrameE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"struct.quic::QuicStopSendingFrame"*)* @_ZN3net19QuicTransportClient21OnStopSendingReceivedERKN4quic20QuicStopSendingFrameE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*)* @_ZN3net19QuicTransportClient21OnNewConnectionIdSentERKN4quic16QuicConnectionIdES4_ to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"*)* @_ZN3net19QuicTransportClient21OnConnectionIdRetiredERKN4quic16QuicConnectionIdE to i8*)], [10 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn8_N3net19QuicTransportClientD1Ev to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn8_N3net19QuicTransportClientD0Ev to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn8_N3net19QuicTransportClient14OnSessionReadyEv to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn8_N3net19QuicTransportClient38OnIncomingBidirectionalStreamAvailableEv to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn8_N3net19QuicTransportClient39OnIncomingUnidirectionalStreamAvailableEv to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, i8*, i64)* @_ZThn8_N3net19QuicTransportClient18OnDatagramReceivedEN4absl11string_viewE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn8_N3net19QuicTransportClient41OnCanCreateNewOutgoingBidirectionalStreamEv to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn8_N3net19QuicTransportClient42OnCanCreateNewOutgoingUnidirectionalStreamEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn16_N3net19QuicTransportClientD1Ev to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn16_N3net19QuicTransportClientD0Ev to i8*), i8* bitcast (i1 (%"class.net::QuicTransportClient"*, i32, %"class.net::DatagramClientSocket"*)* @_ZThn16_N3net19QuicTransportClient11OnReadErrorEiPKNS_20DatagramClientSocketE to i8*), i8* bitcast (i1 (%"class.net::QuicTransportClient"*, %"class.quic::QuicReceivedPacket"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*)* @_ZThn16_N3net19QuicTransportClient8OnPacketERKN4quic18QuicReceivedPacketERKNS1_17QuicSocketAddressES7_ to i8*)], [5 x i8*] [i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (i32 (%"class.net::QuicTransportClient"*, i32, %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"*)* @_ZThn24_N3net19QuicTransportClient16HandleWriteErrorEi13scoped_refptrINS_24QuicChromiumPacketWriter16ReusableIOBufferEE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, i32)* @_ZThn24_N3net19QuicTransportClient12OnWriteErrorEi to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn24_N3net19QuicTransportClient16OnWriteUnblockedEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn32_N3net19QuicTransportClientD1Ev to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*)* @_ZThn32_N3net19QuicTransportClientD0Ev to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"*, i32, %"class.std::__1::basic_string"*, i32)* @_ZThn32_N3net19QuicTransportClient18OnConnectionClosedEN4quic16QuicConnectionIdENS1_13QuicErrorCodeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_21ConnectionCloseSourceE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"class.quic::QuicBlockedWriterInterface"*)* @_ZThn32_N3net19QuicTransportClient14OnWriteBlockedEPN4quic26QuicBlockedWriterInterfaceE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"struct.quic::QuicRstStreamFrame"*)* @_ZThn32_N3net19QuicTransportClient19OnRstStreamReceivedERKN4quic18QuicRstStreamFrameE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"struct.quic::QuicStopSendingFrame"*)* @_ZThn32_N3net19QuicTransportClient21OnStopSendingReceivedERKN4quic20QuicStopSendingFrameE to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*)* @_ZThn32_N3net19QuicTransportClient21OnNewConnectionIdSentERKN4quic16QuicConnectionIdES4_ to i8*), i8* bitcast (void (%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"*)* @_ZThn32_N3net19QuicTransportClient21OnConnectionIdRetiredERKN4quic16QuicConnectionIdE to i8*)] }, align 8
@_ZN3url20kQuicTransportSchemeE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [8 x i8] c"CONNECT\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"Net.QuicTransportClient.FailedAtState\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"Net.QuicTransportClient.Error\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"Net.QuicTransportClient.FailedAtConnectState\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"Net.QuicTransportClient.ConnectionError\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"OnConnectionClosed\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"../../net/quic/quic_transport_client.cc\00", align 1
@.str.7 = private unnamed_addr constant [50 x i8] c"Net.QuicTransportClient.ConnectionCloseCodeClient\00", align 1
@.str.8 = private unnamed_addr constant [50 x i8] c"Net.QuicTransportClient.ConnectionCloseCodeServer\00", align 1
@_ZTVN3net19QuicTransportClient21DatagramObserverProxyE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QuicDatagramQueue::Observer"*)* @_ZN4quic17QuicDatagramQueue8ObserverD2Ev to i8*), i8* bitcast (void (%"class.net::QuicTransportClient::DatagramObserverProxy"*)* @_ZN3net19QuicTransportClient21DatagramObserverProxyD0Ev to i8*), i8* bitcast (void (%"class.net::QuicTransportClient::DatagramObserverProxy"*, i64)* @_ZN3net19QuicTransportClient21DatagramObserverProxy19OnDatagramProcessedEN4absl8optionalIN4quic13MessageStatusEEE to i8*)] }, align 8
@.str.12 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3net19QuicTransportClientC1ERK4GURLRKN3url6OriginEPNS_25WebTransportClientVisitorERKNS_19NetworkIsolationKeyEPNS_17URLRequestContextERKNS_22WebTransportParametersE = hidden unnamed_addr alias void (%"class.net::QuicTransportClient"*, %class.GURL*, %"class.url::Origin"*, %"class.net::WebTransportClientVisitor"*, %"class.net::NetworkIsolationKey"*, %"class.net::URLRequestContext"*, %"struct.net::WebTransportParameters"*), void (%"class.net::QuicTransportClient"*, %class.GURL*, %"class.url::Origin"*, %"class.net::WebTransportClientVisitor"*, %"class.net::NetworkIsolationKey"*, %"class.net::URLRequestContext"*, %"struct.net::WebTransportParameters"*)* @_ZN3net19QuicTransportClientC2ERK4GURLRKN3url6OriginEPNS_25WebTransportClientVisitorERKNS_19NetworkIsolationKeyEPNS_17URLRequestContextERKNS_22WebTransportParametersE
@_ZN3net19QuicTransportClientD1Ev = hidden unnamed_addr alias void (%"class.net::QuicTransportClient"*), void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClientD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClientC2ERK4GURLRKN3url6OriginEPNS_25WebTransportClientVisitorERKNS_19NetworkIsolationKeyEPNS_17URLRequestContextERKNS_22WebTransportParametersE(%"class.net::QuicTransportClient"*, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), %"class.net::WebTransportClientVisitor"*, %"class.net::NetworkIsolationKey"* dereferenceable(184), %"class.net::URLRequestContext"*, %"struct.net::WebTransportParameters"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::set.188", align 8
  %9 = alloca %"class.std::__1::set.188", align 8
  %10 = alloca %"class.std::__1::set.209", align 8
  %11 = alloca %"struct.quic::CertificateFingerprint", align 8
  %12 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 4, i32 0
  %14 = bitcast %"class.net::QuicTransportClient"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }, { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN3net19QuicTransportClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }, { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN3net19QuicTransportClientE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %14, align 8
  %15 = bitcast i32 (...)*** %12 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }, { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN3net19QuicTransportClientE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }, { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN3net19QuicTransportClientE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }, { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN3net19QuicTransportClientE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %16 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 5
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %16, %class.GURL* dereferenceable(120) %1) #15
  %17 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 6
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %17, %"class.url::Origin"* dereferenceable(80) %2) #15
  %18 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 7
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %18, %"class.net::NetworkIsolationKey"* dereferenceable(184) %4) #15
  %19 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 8
  store %"class.net::URLRequestContext"* %5, %"class.net::URLRequestContext"** %19, align 8
  %20 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  store %"class.net::WebTransportClientVisitor"* %3, %"class.net::WebTransportClientVisitor"** %20, align 8
  %21 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 10
  %22 = tail call %"class.net::ClientSocketFactory"* @_ZN3net19ClientSocketFactory17GetDefaultFactoryEv() #15
  store %"class.net::ClientSocketFactory"* %22, %"class.net::ClientSocketFactory"** %21, align 8
  %23 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 11
  %24 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %5, i64 0, i32 18
  %25 = bitcast %"class.net::QuicContext"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.net::QuicContext"** %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 12
  %29 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %5, i64 0, i32 1
  %30 = load %"class.net::NetLog"*, %"class.net::NetLog"** %29, align 8
  tail call void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret %28, %"class.net::NetLog"* %30, i32 33) #15
  %31 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 13
  %32 = tail call dereferenceable(8) %class.scoped_refptr.792* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #15
  %33 = bitcast %class.scoped_refptr.792* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.base::SequencedTaskRunner"** %31 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 14
  %37 = bitcast %"class.std::__1::vector.202"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #15
  %38 = load %"class.net::QuicContext"*, %"class.net::QuicContext"** %23, align 8
  %39 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicConnectionHelperInterface"** %39, align 8
  %41 = bitcast %"class.quic::QuicConnectionHelperInterface"* %40 to %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)***
  %42 = load %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)**, %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)** %42, i64 2
  %44 = load %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)** %43, align 8
  %45 = tail call %"class.quic::QuicClock"* %44(%"class.quic::QuicConnectionHelperInterface"* %40) #15
  %46 = tail call i8* @_Znwm(i64 40) #16
  %47 = bitcast i8* %46 to %"class.net::QuicChromiumAlarmFactory"*
  %48 = bitcast %"class.base::SequencedTaskRunner"** %31 to %"class.base::TaskRunner"**
  %49 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %48, align 8
  tail call void @_ZN3net24QuicChromiumAlarmFactoryC1EPN4base10TaskRunnerEPKN4quic9QuicClockE(%"class.net::QuicChromiumAlarmFactory"* nonnull %47, %"class.base::TaskRunner"* %49, %"class.quic::QuicClock"* %45) #15
  %50 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %51 = bitcast %"class.net::QuicChromiumAlarmFactory"** %50 to i8**
  store i8* %46, i8** %51, align 8
  %52 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 16
  %53 = bitcast %"class.std::__1::set.209"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53)
  %54 = bitcast %"struct.quic::CertificateFingerprint"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %54)
  %55 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %6, i64 0, i32 3, i32 0, i32 0
  %56 = load %"struct.quic::CertificateFingerprint"*, %"struct.quic::CertificateFingerprint"** %55, align 8
  %57 = getelementptr inbounds %"struct.net::WebTransportParameters", %"struct.net::WebTransportParameters"* %6, i64 0, i32 3, i32 0, i32 1
  %58 = load %"struct.quic::CertificateFingerprint"*, %"struct.quic::CertificateFingerprint"** %57, align 8
  %59 = icmp eq %"struct.quic::CertificateFingerprint"* %56, %58
  br i1 %59, label %60, label %199

60:                                               ; preds = %7
  %61 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %5, i64 0, i32 3
  %62 = load %"class.net::CertVerifier"*, %"class.net::CertVerifier"** %61, align 8
  %63 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %5, i64 0, i32 13
  %64 = load %"class.net::CTPolicyEnforcer"*, %"class.net::CTPolicyEnforcer"** %63, align 8
  %65 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %5, i64 0, i32 12
  %66 = load %"class.net::TransportSecurityState"*, %"class.net::TransportSecurityState"** %65, align 8
  %67 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %5, i64 0, i32 14
  %68 = load %"class.net::SCTAuditingDelegate"*, %"class.net::SCTAuditingDelegate"** %67, align 8
  %69 = bitcast %"class.std::__1::set.188"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #15
  %70 = load %"class.net::QuicContext"*, %"class.net::QuicContext"** %24, align 8
  %71 = getelementptr inbounds %"class.std::__1::set.209", %"class.std::__1::set.209"* %10, i64 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::set.209", %"class.std::__1::set.209"* %10, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::set.209", %"class.std::__1::set.209"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %74 = getelementptr inbounds %"class.std::__1::set.209", %"class.std::__1::set.209"* %10, i64 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::__compressed_pair.211"* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #15
  store %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"** %72, align 8
  %76 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %70, i64 0, i32 1, i32 4, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %70, i64 0, i32 1, i32 4, i32 0, i32 1, i32 0, i32 0
  %79 = icmp eq %"class.std::__1::__tree_end_node"* %77, %78
  br i1 %79, label %117, label %80

80:                                               ; preds = %60, %112
  %81 = phi %"class.std::__1::__tree_end_node"* [ %113, %112 ], [ %77, %60 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 4
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.net::HostPortPair"*
  %84 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE30__emplace_hint_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEENS_21__tree_const_iteratorIS2_SG_lEERKT_DpOT0_(%"class.std::__1::__tree.210"* nonnull %71, %"class.std::__1::__tree_end_node"* %73, %"class.net::HostPortPair"* dereferenceable(32) %83, %"class.net::HostPortPair"* dereferenceable(32) %83) #15
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 1, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, null
  br i1 %87, label %88, label %96

88:                                               ; preds = %80
  %89 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node_base"*
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 2
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_end_node"**
  %92 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %92, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, %89
  br i1 %95, label %112, label %103

96:                                               ; preds = %80, %96
  %97 = phi %"class.std::__1::__tree_node_base"* [ %99, %96 ], [ %86, %80 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %101, label %96

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 0
  br label %112

103:                                              ; preds = %88, %103
  %104 = phi %"class.std::__1::__tree_end_node"** [ %107, %103 ], [ %91, %88 ]
  %105 = bitcast %"class.std::__1::__tree_end_node"** %104 to %"class.std::__1::__tree_node_base"**
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 0, i32 2
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, %106
  br i1 %111, label %112, label %103

112:                                              ; preds = %103, %101, %88
  %113 = phi %"class.std::__1::__tree_end_node"* [ %102, %101 ], [ %92, %88 ], [ %108, %103 ]
  %114 = icmp eq %"class.std::__1::__tree_end_node"* %113, %78
  br i1 %114, label %115, label %80

115:                                              ; preds = %112
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8, !noalias !2
  br label %117

117:                                              ; preds = %115, %60
  %118 = phi %"class.std::__1::__tree_end_node"* [ %116, %115 ], [ %73, %60 ]
  %119 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %9, i64 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %122 = bitcast %"class.std::__1::__tree_node_base"** %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 16, i1 false) #15, !alias.scope !2
  store %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"** %119, align 8, !alias.scope !2
  %123 = icmp eq %"class.std::__1::__tree_end_node"* %118, %73
  br i1 %123, label %124, label %126

124:                                              ; preds = %117
  %125 = ptrtoint %"class.std::__1::__tree_end_node"* %121 to i64
  br label %171

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %9, i64 0, i32 0
  br label %128

128:                                              ; preds = %160, %126
  %129 = phi %"class.std::__1::__tree_end_node"* [ %118, %126 ], [ %161, %160 ]
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 4
  %131 = bitcast %"class.std::__1::__tree_end_node"* %130 to %"class.std::__1::basic_string"*
  %132 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.189"* nonnull %127, %"class.std::__1::basic_string"* dereferenceable(24) %131, %"class.std::__1::basic_string"* dereferenceable(24) %131) #15
  %133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 1, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, null
  br i1 %135, label %136, label %144

136:                                              ; preds = %128
  %137 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"class.std::__1::__tree_node_base"*
  %138 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %129, i64 2
  %139 = bitcast %"class.std::__1::__tree_end_node"* %138 to %"class.std::__1::__tree_end_node"**
  %140 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %140, i64 0, i32 0
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, %137
  br i1 %143, label %160, label %151

144:                                              ; preds = %128, %144
  %145 = phi %"class.std::__1::__tree_node_base"* [ %147, %144 ], [ %134, %128 ]
  %146 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %144

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 0
  br label %160

151:                                              ; preds = %136, %151
  %152 = phi %"class.std::__1::__tree_end_node"** [ %155, %151 ], [ %139, %136 ]
  %153 = bitcast %"class.std::__1::__tree_end_node"** %152 to %"class.std::__1::__tree_node_base"**
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %154, i64 0, i32 2
  %156 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %156, i64 0, i32 0
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node_base"* %158, %154
  br i1 %159, label %160, label %151

160:                                              ; preds = %151, %149, %136
  %161 = phi %"class.std::__1::__tree_end_node"* [ %150, %149 ], [ %140, %136 ], [ %156, %151 ]
  %162 = icmp eq %"class.std::__1::__tree_end_node"* %161, %73
  br i1 %162, label %163, label %128

163:                                              ; preds = %160
  %164 = bitcast %"class.std::__1::set.188"* %9 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %9, i64 0, i32 0, i32 1
  %167 = bitcast %"class.std::__1::__compressed_pair.190"* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %170 = load i64, i64* %169, align 8
  br label %171

171:                                              ; preds = %163, %124
  %172 = phi i64 [ %170, %163 ], [ 0, %124 ]
  %173 = phi i64 [ %168, %163 ], [ 0, %124 ]
  %174 = phi i64 [ %165, %163 ], [ %125, %124 ]
  %175 = bitcast %"class.std::__1::set.188"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #15
  %176 = call i8* @_Znwm(i64 272) #16
  %177 = bitcast i8* %176 to %"class.net::ProofVerifierChromium"*
  %178 = bitcast %"class.std::__1::set.188"* %8 to i64*
  store i64 %174, i64* %178, align 8
  %179 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %8, i64 0, i32 0, i32 1
  %180 = bitcast %"class.std::__1::__compressed_pair.190"* %179 to i64*
  store i64 %173, i64* %180, align 8
  %181 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 %172, i64* %181, align 8
  %182 = icmp eq i64 %172, 0
  %183 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %182, label %184, label %186

184:                                              ; preds = %171
  %185 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %8, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %183, %"class.std::__1::__tree_end_node"** %185, align 8
  br label %190

186:                                              ; preds = %171
  %187 = inttoptr i64 %173 to %"class.std::__1::__tree_node_base"*
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %183, %"class.std::__1::__tree_end_node"** %188, align 8
  store %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"** %119, align 8
  %189 = bitcast %"class.std::__1::__tree_end_node"* %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 16, i1 false) #15
  br label %190

190:                                              ; preds = %186, %184
  call void @_ZN3net21ProofVerifierChromiumC1EPNS_12CertVerifierEPNS_16CTPolicyEnforcerEPNS_22TransportSecurityStateEPNS_19SCTAuditingDelegateENSt3__13setINS9_12basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEENS9_4lessISG_EENSE_ISG_EEEERKNS_19NetworkIsolationKeyE(%"class.net::ProofVerifierChromium"* nonnull %177, %"class.net::CertVerifier"* %62, %"class.net::CTPolicyEnforcer"* %64, %"class.net::TransportSecurityState"* %66, %"class.net::SCTAuditingDelegate"* %68, %"class.std::__1::set.188"* nonnull %8, %"class.net::NetworkIsolationKey"* dereferenceable(184) %18) #15
  %191 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %8, i64 0, i32 0
  %192 = bitcast %"class.std::__1::__tree_end_node"* %183 to %"class.std::__1::__tree_node.855"**
  %193 = load %"class.std::__1::__tree_node.855"*, %"class.std::__1::__tree_node.855"** %192, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.189"* nonnull %191, %"class.std::__1::__tree_node.855"* %193) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #15
  %194 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %9, i64 0, i32 0
  %195 = bitcast %"class.std::__1::__tree_end_node"* %121 to %"class.std::__1::__tree_node.855"**
  %196 = load %"class.std::__1::__tree_node.855"*, %"class.std::__1::__tree_node.855"** %195, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.189"* nonnull %194, %"class.std::__1::__tree_node.855"* %196) #15
  %197 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"class.std::__1::__tree_node"**
  %198 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %197, align 8
  call void @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.210"* nonnull %71, %"class.std::__1::__tree_node"* %198) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #15
  br label %263

199:                                              ; preds = %7
  %200 = load %"class.net::QuicContext"*, %"class.net::QuicContext"** %24, align 8
  %201 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %200, i64 0, i32 0, i32 0, i32 0, i32 0
  %202 = load %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicConnectionHelperInterface"** %201, align 8
  %203 = bitcast %"class.quic::QuicConnectionHelperInterface"* %202 to %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)***
  %204 = load %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)**, %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)*** %203, align 8
  %205 = getelementptr inbounds %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)** %204, i64 2
  %206 = load %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)** %205, align 8
  %207 = tail call %"class.quic::QuicClock"* %206(%"class.quic::QuicConnectionHelperInterface"* %202) #15
  %208 = tail call i8* @_Znwm(i64 56) #16
  %209 = bitcast i8* %208 to %"class.quic::WebTransportFingerprintProofVerifier"*
  tail call void @_ZN4quic36WebTransportFingerprintProofVerifierC1EPKNS_9QuicClockEi(%"class.quic::WebTransportFingerprintProofVerifier"* nonnull %209, %"class.quic::QuicClock"* %207, i32 14) #15
  %210 = load %"struct.quic::CertificateFingerprint"*, %"struct.quic::CertificateFingerprint"** %55, align 8
  %211 = load %"struct.quic::CertificateFingerprint"*, %"struct.quic::CertificateFingerprint"** %57, align 8
  %212 = icmp eq %"struct.quic::CertificateFingerprint"* %210, %211
  br i1 %212, label %263, label %213

213:                                              ; preds = %199
  %214 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %11, i64 0, i32 0
  %215 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %11, i64 0, i32 1
  %216 = bitcast %"class.std::__1::basic_string"* %215 to i8*
  %217 = bitcast %"class.std::__1::basic_string"* %215 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %217, i64 0, i32 1, i32 0
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %215, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = bitcast %"struct.quic::CertificateFingerprint"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %223

223:                                              ; preds = %260, %213
  %224 = phi %"struct.quic::CertificateFingerprint"* [ %210, %213 ], [ %261, %260 ]
  %225 = bitcast %"struct.quic::CertificateFingerprint"* %224 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %226 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %225, i64 0, i32 1, i32 0
  %227 = load i8, i8* %226, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %223
  %230 = bitcast %"struct.quic::CertificateFingerprint"* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 %230, i64 24, i1 false) #15
  br label %236

231:                                              ; preds = %223
  %232 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i8*, i8** %232, align 8
  %234 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %235 = load i64, i64* %234, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %214, i8* %233, i64 %235) #15
  br label %236

236:                                              ; preds = %231, %229
  %237 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %224, i64 0, i32 1
  %238 = bitcast %"class.std::__1::basic_string"* %237 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %244, label %242

242:                                              ; preds = %236
  %243 = bitcast %"class.std::__1::basic_string"* %237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %243, i64 24, i1 false) #15
  br label %249

244:                                              ; preds = %236
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %224, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %248 = load i64, i64* %247, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %215, i8* %246, i64 %248) #15
  br label %249

249:                                              ; preds = %244, %242
  %250 = call zeroext i1 @_ZN4quic36WebTransportFingerprintProofVerifier14AddFingerprintENS_22CertificateFingerprintE(%"class.quic::WebTransportFingerprintProofVerifier"* nonnull %209, %"struct.quic::CertificateFingerprint"* nonnull %11) #15
  %251 = load i8, i8* %218, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %249
  %254 = load i8*, i8** %219, align 8
  call void @_ZdlPv(i8* %254) #16
  br label %255

255:                                              ; preds = %253, %249
  %256 = load i8, i8* %221, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %260

258:                                              ; preds = %255
  %259 = load i8*, i8** %222, align 8
  call void @_ZdlPv(i8* %259) #16
  br label %260

260:                                              ; preds = %258, %255
  %261 = getelementptr inbounds %"struct.quic::CertificateFingerprint", %"struct.quic::CertificateFingerprint"* %224, i64 1
  %262 = icmp eq %"struct.quic::CertificateFingerprint"* %261, %211
  br i1 %262, label %263, label %223

263:                                              ; preds = %260, %190, %199
  %264 = phi i8* [ %176, %190 ], [ %208, %199 ], [ %208, %260 ]
  %265 = bitcast i8* %264 to %"class.quic::ProofVerifier"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %54)
  call void @_ZN4quic22QuicCryptoClientConfigC1ENSt3__110unique_ptrINS_13ProofVerifierENS1_14default_deleteIS3_EEEENS2_INS_12SessionCacheENS4_IS7_EEEE(%"class.quic::QuicCryptoClientConfig"* %52, %"class.quic::ProofVerifier"* %265, %"class.quic::SessionCache"* null) #15
  %266 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 17
  %267 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 20
  store i8 0, i8* %267, align 8
  %268 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 21
  %269 = bitcast i32* %266 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 41, i1 false)
  call void @_ZN3net9ProxyInfoC1Ev(%"class.net::ProxyInfo"* %268) #15
  %270 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 22
  %271 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 29, i32 0
  %272 = ptrtoint %"class.net::QuicTransportClient"* %0 to i64
  %273 = bitcast %"class.std::__1::unique_ptr.298"* %270 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %273, i8 0, i64 56, i1 false)
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %271, i64 %272) #15
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

declare %"class.net::ClientSocketFactory"* @_ZN3net19ClientSocketFactory17GetDefaultFactoryEv() local_unnamed_addr #1

declare void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret, %"class.net::NetLog"*, i32) local_unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr.792* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4quic22QuicCryptoClientConfigC1ENSt3__110unique_ptrINS_13ProofVerifierENS1_14default_deleteIS3_EEEENS2_INS_12SessionCacheENS4_IS7_EEEE(%"class.quic::QuicCryptoClientConfig"*, %"class.quic::ProofVerifier"*, %"class.quic::SessionCache"*) unnamed_addr #1

declare void @_ZN3net9ProxyInfoC1Ev(%"class.net::ProxyInfo"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClientD2Ev(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.net::QuicTransportClient"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }, { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN3net19QuicTransportClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }, { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN3net19QuicTransportClientE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 2, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }, { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN3net19QuicTransportClientE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }, { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN3net19QuicTransportClientE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 4, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }, { [24 x i8*], [10 x i8*], [6 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN3net19QuicTransportClientE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 29, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %6) #15
  %7 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %8 = load %"class.net::QuicEventLogger"*, %"class.net::QuicEventLogger"** %7, align 8
  store %"class.net::QuicEventLogger"* null, %"class.net::QuicEventLogger"** %7, align 8
  %9 = icmp eq %"class.net::QuicEventLogger"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.net::QuicEventLogger"* %8 to void (%"class.net::QuicEventLogger"*)***
  %12 = load void (%"class.net::QuicEventLogger"*)**, void (%"class.net::QuicEventLogger"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.net::QuicEventLogger"*)*, void (%"class.net::QuicEventLogger"*)** %12, i64 1
  %14 = load void (%"class.net::QuicEventLogger"*)*, void (%"class.net::QuicEventLogger"*)** %13, align 8
  tail call void %14(%"class.net::QuicEventLogger"* nonnull %8) #15
  br label %15

15:                                               ; preds = %1, %10
  %16 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 27, i32 0, i32 0, i32 0
  %17 = load %"class.net::QuicChromiumPacketReader"*, %"class.net::QuicChromiumPacketReader"** %16, align 8
  store %"class.net::QuicChromiumPacketReader"* null, %"class.net::QuicChromiumPacketReader"** %16, align 8
  %18 = icmp eq %"class.net::QuicChromiumPacketReader"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.net::QuicChromiumPacketReader"* %17 to void (%"class.net::QuicChromiumPacketReader"*)***
  %21 = load void (%"class.net::QuicChromiumPacketReader"*)**, void (%"class.net::QuicChromiumPacketReader"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %21, i64 1
  %23 = load void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %22, align 8
  tail call void %23(%"class.net::QuicChromiumPacketReader"* nonnull %17) #15
  br label %24

24:                                               ; preds = %15, %19
  %25 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %26 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %25, align 8
  store %"class.quic::QuicTransportClientSession"* null, %"class.quic::QuicTransportClientSession"** %25, align 8
  %27 = icmp eq %"class.quic::QuicTransportClientSession"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.quic::QuicTransportClientSession"* %26 to void (%"class.quic::QuicTransportClientSession"*)***
  %30 = load void (%"class.quic::QuicTransportClientSession"*)**, void (%"class.quic::QuicTransportClientSession"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.quic::QuicTransportClientSession"*)*, void (%"class.quic::QuicTransportClientSession"*)** %30, i64 1
  %32 = load void (%"class.quic::QuicTransportClientSession"*)*, void (%"class.quic::QuicTransportClientSession"*)** %31, align 8
  tail call void %32(%"class.quic::QuicTransportClientSession"* nonnull %26) #15
  br label %33

33:                                               ; preds = %24, %28
  %34 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %35 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %34, align 8
  store %"class.quic::QuicConnection"* null, %"class.quic::QuicConnection"** %34, align 8
  %36 = icmp eq %"class.quic::QuicConnection"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.quic::QuicConnection"* %35 to void (%"class.quic::QuicConnection"*)***
  %39 = load void (%"class.quic::QuicConnection"*)**, void (%"class.quic::QuicConnection"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.quic::QuicConnection"*)*, void (%"class.quic::QuicConnection"*)** %39, i64 1
  %41 = load void (%"class.quic::QuicConnection"*)*, void (%"class.quic::QuicConnection"*)** %40, align 8
  tail call void %41(%"class.quic::QuicConnection"* nonnull %35) #15
  br label %42

42:                                               ; preds = %33, %37
  %43 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %44 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %43, align 8
  store %"class.net::DatagramClientSocket"* null, %"class.net::DatagramClientSocket"** %43, align 8
  %45 = icmp eq %"class.net::DatagramClientSocket"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.net::DatagramClientSocket"* %44 to void (%"class.net::DatagramClientSocket"*)***
  %48 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %48, i64 1
  %50 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %49, align 8
  tail call void %50(%"class.net::DatagramClientSocket"* nonnull %44) #15
  br label %51

51:                                               ; preds = %42, %46
  %52 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %53 = load %"class.net::HostResolver::ResolveHostRequest"*, %"class.net::HostResolver::ResolveHostRequest"** %52, align 8
  store %"class.net::HostResolver::ResolveHostRequest"* null, %"class.net::HostResolver::ResolveHostRequest"** %52, align 8
  %54 = icmp eq %"class.net::HostResolver::ResolveHostRequest"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.net::HostResolver::ResolveHostRequest"* %53 to void (%"class.net::HostResolver::ResolveHostRequest"*)***
  %57 = load void (%"class.net::HostResolver::ResolveHostRequest"*)**, void (%"class.net::HostResolver::ResolveHostRequest"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.net::HostResolver::ResolveHostRequest"*)*, void (%"class.net::HostResolver::ResolveHostRequest"*)** %57, i64 1
  %59 = load void (%"class.net::HostResolver::ResolveHostRequest"*)*, void (%"class.net::HostResolver::ResolveHostRequest"*)** %58, align 8
  tail call void %59(%"class.net::HostResolver::ResolveHostRequest"* nonnull %53) #15
  br label %60

60:                                               ; preds = %51, %55
  %61 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %62 = load %"class.net::ProxyResolutionRequest"*, %"class.net::ProxyResolutionRequest"** %61, align 8
  store %"class.net::ProxyResolutionRequest"* null, %"class.net::ProxyResolutionRequest"** %61, align 8
  %63 = icmp eq %"class.net::ProxyResolutionRequest"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.net::ProxyResolutionRequest"* %62 to void (%"class.net::ProxyResolutionRequest"*)***
  %66 = load void (%"class.net::ProxyResolutionRequest"*)**, void (%"class.net::ProxyResolutionRequest"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.net::ProxyResolutionRequest"*)*, void (%"class.net::ProxyResolutionRequest"*)** %66, i64 1
  %68 = load void (%"class.net::ProxyResolutionRequest"*)*, void (%"class.net::ProxyResolutionRequest"*)** %67, align 8
  tail call void %68(%"class.net::ProxyResolutionRequest"* nonnull %62) #15
  br label %69

69:                                               ; preds = %60, %64
  %70 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 21
  tail call void @_ZN3net9ProxyInfoD1Ev(%"class.net::ProxyInfo"* %70) #15
  %71 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 2
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #16
  br label %79

79:                                               ; preds = %69, %76
  %80 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 16
  tail call void @_ZN4quic22QuicCryptoClientConfigD1Ev(%"class.quic::QuicCryptoClientConfig"* %80) #15
  %81 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %82 = load %"class.net::QuicChromiumAlarmFactory"*, %"class.net::QuicChromiumAlarmFactory"** %81, align 8
  store %"class.net::QuicChromiumAlarmFactory"* null, %"class.net::QuicChromiumAlarmFactory"** %81, align 8
  %83 = icmp eq %"class.net::QuicChromiumAlarmFactory"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %79
  %85 = bitcast %"class.net::QuicChromiumAlarmFactory"* %82 to void (%"class.net::QuicChromiumAlarmFactory"*)***
  %86 = load void (%"class.net::QuicChromiumAlarmFactory"*)**, void (%"class.net::QuicChromiumAlarmFactory"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.net::QuicChromiumAlarmFactory"*)*, void (%"class.net::QuicChromiumAlarmFactory"*)** %86, i64 1
  %88 = load void (%"class.net::QuicChromiumAlarmFactory"*)*, void (%"class.net::QuicChromiumAlarmFactory"*)** %87, align 8
  tail call void %88(%"class.net::QuicChromiumAlarmFactory"* nonnull %82) #15
  br label %89

89:                                               ; preds = %79, %84
  %90 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 14, i32 0, i32 0
  %91 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %90, align 8
  %92 = icmp eq %"struct.quic::ParsedQuicVersion"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = ptrtoint %"struct.quic::ParsedQuicVersion"* %91 to i64
  %95 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 14, i32 0, i32 1
  %96 = bitcast %"struct.quic::ParsedQuicVersion"** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast %"struct.quic::ParsedQuicVersion"* %91 to i8*
  tail call void @_ZdlPv(i8* %97) #16
  br label %98

98:                                               ; preds = %89, %93
  %99 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 12
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %99) #15
  %100 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 7
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %100) #15
  %101 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 6
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %101) #15
  %102 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 5
  tail call void @_ZN4GURLD1Ev(%class.GURL* %102) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net9ProxyInfoD1Ev(%"class.net::ProxyInfo"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4quic22QuicCryptoClientConfigD1Ev(%"class.quic::QuicCryptoClientConfig"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net19QuicTransportClientD1Ev(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::QuicTransportClient"*
  tail call void @_ZN3net19QuicTransportClientD2Ev(%"class.net::QuicTransportClient"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net19QuicTransportClientD1Ev(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29
  %3 = bitcast %"class.base::WeakPtrFactory.784"* %2 to %"class.net::QuicTransportClient"*
  tail call void @_ZN3net19QuicTransportClientD2Ev(%"class.net::QuicTransportClient"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N3net19QuicTransportClientD1Ev(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 27
  %3 = bitcast %"class.std::__1::unique_ptr.770"* %2 to %"class.net::QuicTransportClient"*
  tail call void @_ZN3net19QuicTransportClientD2Ev(%"class.net::QuicTransportClient"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClientD0Ev(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net19QuicTransportClientD2Ev(%"class.net::QuicTransportClient"* %0) #15
  %2 = bitcast %"class.net::QuicTransportClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net19QuicTransportClientD0Ev(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::QuicTransportClient"*
  tail call void @_ZN3net19QuicTransportClientD2Ev(%"class.net::QuicTransportClient"* %3) #15
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N3net19QuicTransportClientD0Ev(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29
  %3 = bitcast %"class.base::WeakPtrFactory.784"* %2 to %"class.net::QuicTransportClient"*
  tail call void @_ZN3net19QuicTransportClientD2Ev(%"class.net::QuicTransportClient"* %3) #15
  %4 = bitcast %"class.base::WeakPtrFactory.784"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N3net19QuicTransportClientD0Ev(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 27
  %3 = bitcast %"class.std::__1::unique_ptr.770"* %2 to %"class.net::QuicTransportClient"*
  tail call void @_ZN3net19QuicTransportClientD2Ev(%"class.net::QuicTransportClient"* %3) #15
  %4 = bitcast %"class.std::__1::unique_ptr.770"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient7ConnectEv(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 18
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i32 1, i32* %2, align 8
  store i32 1, i32* %6, align 4
  tail call void @_ZN3net19QuicTransportClient6DoLoopEi(%"class.net::QuicTransportClient"* %0, i32 0)
  br label %10

10:                                               ; preds = %5, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient17TransitionToStateENS_17WebTransportStateE(%"class.net::QuicTransportClient"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 17
  %5 = load i32, i32* %4, align 8
  store i32 %1, i32* %4, align 8
  switch i32 %1, label %77 [
    i32 4, label %20
    i32 2, label %6
    i32 3, label %13
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %8 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %7, align 8
  %9 = bitcast %"class.net::WebTransportClientVisitor"* %8 to void (%"class.net::WebTransportClientVisitor"*)***
  %10 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %10, i64 2
  %12 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %11, align 8
  tail call void %12(%"class.net::WebTransportClientVisitor"* %8) #15
  br label %77

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %15 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %14, align 8
  %16 = bitcast %"class.net::WebTransportClientVisitor"* %15 to void (%"class.net::WebTransportClientVisitor"*)***
  %17 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %17, i64 4
  %19 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %18, align 8
  tail call void %19(%"class.net::WebTransportClientVisitor"* %15) #15
  br label %77

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %22 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %21, align 8
  %23 = icmp eq %"class.quic::QuicTransportClientSession"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.quic::QuicTransportClientSession", %"class.quic::QuicTransportClientSession"* %22, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !5
  %27 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 3
  store i8 %26, i8* %27, align 8
  br label %28

28:                                               ; preds = %20, %24
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 %5, i32 5) #15
  %29 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %30, 0
  %32 = sub nsw i32 0, %30
  %33 = select i1 %31, i32 %32, i32 %30
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i32 %33) #15
  %34 = icmp eq i32 %5, 1
  br i1 %34, label %35, label %42

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 18
  %37 = load i32, i32* %36, align 4
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 %37, i32 8) #15
  %38 = load i32, i32* %29, align 8
  %39 = icmp slt i32 %38, 0
  %40 = sub nsw i32 0, %38
  %41 = select i1 %39, i32 %40, i32 %38
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i32 %41) #15
  br label %42

42:                                               ; preds = %35, %28
  %43 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 2
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  br label %53

51:                                               ; preds = %42
  %52 = zext i8 %46 to i64
  br label %53

53:                                               ; preds = %48, %51
  %54 = phi i64 [ %50, %48 ], [ %52, %51 ]
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %53
  %57 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #15
  %58 = load i32, i32* %29, align 8
  call void @_ZN3net13ErrorToStringEi(%"class.std::__1::basic_string"* nonnull sret %3, i32 %58) #15
  %59 = load i8, i8* %45, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #16
  br label %64

64:                                               ; preds = %61, %56
  %65 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* nonnull align 8 %57, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #15
  br label %66

66:                                               ; preds = %64, %53
  %67 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %68 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %67, align 8
  %69 = bitcast %"class.net::WebTransportClientVisitor"* %68 to void (%"class.net::WebTransportClientVisitor"*)***
  %70 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %69, align 8
  br i1 %34, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %70, i64 3
  %73 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %72, align 8
  call void %73(%"class.net::WebTransportClientVisitor"* %68) #15
  br label %77

74:                                               ; preds = %66
  %75 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %70, i64 5
  %76 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %75, align 8
  call void %76(%"class.net::WebTransportClientVisitor"* %68) #15
  br label %77

77:                                               ; preds = %2, %74, %71, %13, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient6DoLoopEi(%"class.net::QuicTransportClient"*, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 18
  %4 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 17
  %7 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %8 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 21, i32 0
  %9 = load i32, i32* %3, align 4
  br label %10

10:                                               ; preds = %57, %2
  %11 = phi i32 [ %9, %2 ], [ %58, %57 ]
  %12 = phi i32 [ %1, %2 ], [ 0, %57 ]
  store i32 0, i32* %3, align 4
  switch i32 %11, label %65 [
    i32 1, label %13
    i32 2, label %15
    i32 3, label %17
    i32 4, label %27
    i32 5, label %29
    i32 6, label %32
    i32 7, label %34
  ]

13:                                               ; preds = %10
  %14 = tail call i32 @_ZN3net19QuicTransportClient6DoInitEv(%"class.net::QuicTransportClient"* %0)
  br label %52

15:                                               ; preds = %10
  %16 = tail call i32 @_ZN3net19QuicTransportClient12DoCheckProxyEv(%"class.net::QuicTransportClient"* %0)
  br label %52

17:                                               ; preds = %10
  %18 = icmp eq i32 %12, 0
  br i1 %18, label %19, label %61

19:                                               ; preds = %17
  %20 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %8) #15
  br i1 %20, label %65, label %21

21:                                               ; preds = %19
  %22 = tail call dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net9ProxyList3GetEv(%"class.net::ProxyList"* %8) #15
  %23 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %65

26:                                               ; preds = %21
  store i32 4, i32* %3, align 4
  br label %57

27:                                               ; preds = %10
  %28 = tail call i32 @_ZN3net19QuicTransportClient13DoResolveHostEv(%"class.net::QuicTransportClient"* %0)
  br label %52

29:                                               ; preds = %10
  %30 = icmp eq i32 %12, 0
  br i1 %30, label %31, label %61

31:                                               ; preds = %29
  store i32 6, i32* %3, align 4
  br label %57

32:                                               ; preds = %10
  %33 = tail call i32 @_ZN3net19QuicTransportClient9DoConnectEv(%"class.net::QuicTransportClient"* %0)
  br label %52

34:                                               ; preds = %10
  %35 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %4, align 8
  %36 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %35, i64 0, i32 83
  %37 = load i8, i8* %36, align 2, !range !5
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %34
  %40 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %5, align 8
  %41 = bitcast %"class.quic::QuicTransportClientSession"* %40 to i1 (%"class.quic::QuicTransportClientSession"*)***
  %42 = load i1 (%"class.quic::QuicTransportClientSession"*)**, i1 (%"class.quic::QuicTransportClientSession"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.quic::QuicTransportClientSession"*)*, i1 (%"class.quic::QuicTransportClientSession"*)** %42, i64 113
  %44 = load i1 (%"class.quic::QuicTransportClientSession"*)*, i1 (%"class.quic::QuicTransportClientSession"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.quic::QuicTransportClientSession"* %40) #15
  br i1 %45, label %46, label %65

46:                                               ; preds = %39
  store i32 2, i32* %6, align 8
  %47 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %7, align 8
  %48 = bitcast %"class.net::WebTransportClientVisitor"* %47 to void (%"class.net::WebTransportClientVisitor"*)***
  %49 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %49, i64 2
  %51 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %50, align 8
  tail call void %51(%"class.net::WebTransportClientVisitor"* %47) #15
  br label %55

52:                                               ; preds = %32, %27, %15, %13
  %53 = phi i32 [ %33, %32 ], [ %28, %27 ], [ %16, %15 ], [ %14, %13 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %52, %46
  %56 = load i32, i32* %3, align 4
  br label %57

57:                                               ; preds = %55, %31, %26
  %58 = phi i32 [ %56, %55 ], [ 6, %31 ], [ 4, %26 ]
  %59 = phi i32 [ %56, %55 ], [ 6, %31 ], [ 6, %26 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %72, label %10

61:                                               ; preds = %29, %17, %52
  %62 = phi i32 [ %53, %52 ], [ %12, %29 ], [ %12, %17 ]
  %63 = add i32 %62, 1
  %64 = icmp ult i32 %63, 2
  br i1 %64, label %72, label %65

65:                                               ; preds = %10, %21, %19, %39, %34, %61
  %66 = phi i32 [ %62, %61 ], [ -356, %34 ], [ -356, %39 ], [ -111, %19 ], [ -111, %21 ], [ -2, %10 ]
  %67 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %65
  store i32 %66, i32* %67, align 8
  br label %71

71:                                               ; preds = %70, %65
  tail call void @_ZN3net19QuicTransportClient17TransitionToStateENS_17WebTransportStateE(%"class.net::QuicTransportClient"* %0, i32 4)
  br label %72

72:                                               ; preds = %57, %61, %71
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(40) %"struct.net::WebTransportError"* @_ZNK3net19QuicTransportClient5errorEv(%"class.net::QuicTransportClient"* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19
  ret %"struct.net::WebTransportError"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::WebTransportSession"* @_ZN3net19QuicTransportClient7sessionEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %2, align 8
  %4 = icmp eq %"class.quic::QuicTransportClientSession"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.quic::QuicTransportClientSession"* %3 to i1 (%"class.quic::QuicTransportClientSession"*)***
  %7 = load i1 (%"class.quic::QuicTransportClientSession"*)**, i1 (%"class.quic::QuicTransportClientSession"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.quic::QuicTransportClientSession"*)*, i1 (%"class.quic::QuicTransportClientSession"*)** %7, i64 113
  %9 = load i1 (%"class.quic::QuicTransportClientSession"*)*, i1 (%"class.quic::QuicTransportClientSession"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.quic::QuicTransportClientSession"* nonnull %3) #15
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %2, align 8
  br label %13

13:                                               ; preds = %1, %5, %11
  %14 = phi %"class.quic::QuicTransportClientSession"* [ %12, %11 ], [ null, %5 ], [ null, %1 ]
  %15 = icmp eq %"class.quic::QuicTransportClientSession"* %14, null
  %16 = getelementptr inbounds %"class.quic::QuicTransportClientSession", %"class.quic::QuicTransportClientSession"* %14, i64 0, i32 1
  %17 = select i1 %15, %"class.quic::WebTransportSession"* null, %"class.quic::WebTransportSession"* %16
  ret %"class.quic::WebTransportSession"* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::QuicTransportClientSession"* @_ZN3net19QuicTransportClient12quic_sessionEv(%"class.net::QuicTransportClient"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %2, align 8
  %4 = icmp eq %"class.quic::QuicTransportClientSession"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.quic::QuicTransportClientSession"* %3 to i1 (%"class.quic::QuicTransportClientSession"*)***
  %7 = load i1 (%"class.quic::QuicTransportClientSession"*)**, i1 (%"class.quic::QuicTransportClientSession"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.quic::QuicTransportClientSession"*)*, i1 (%"class.quic::QuicTransportClientSession"*)** %7, i64 113
  %9 = load i1 (%"class.quic::QuicTransportClientSession"*)*, i1 (%"class.quic::QuicTransportClientSession"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.quic::QuicTransportClientSession"* nonnull %3) #15
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %2, align 8
  br label %13

13:                                               ; preds = %1, %5, %11
  %14 = phi %"class.quic::QuicTransportClientSession"* [ %12, %11 ], [ null, %5 ], [ null, %1 ]
  ret %"class.quic::QuicTransportClientSession"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19QuicTransportClient6DoInitEv(%"class.net::QuicTransportClient"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 5, i32 1
  %4 = load i8, i8* %3, align 8, !range !5
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %223, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 5, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %27, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 5, i32 2, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = bitcast %class.GURL* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  br label %23

21:                                               ; preds = %10
  %22 = bitcast %class.GURL* %2 to i8*
  br label %23

23:                                               ; preds = %21, %18
  %24 = phi i8* [ %20, %18 ], [ %22, %21 ]
  %25 = getelementptr inbounds i8, i8* %24, i64 %13
  %26 = sext i32 %8 to i64
  br label %27

27:                                               ; preds = %6, %23
  %28 = phi i8* [ %25, %23 ], [ null, %6 ]
  %29 = phi i64 [ %26, %23 ], [ 0, %6 ]
  %30 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url20kQuicTransportSchemeE, i64 0, i64 0)) #15
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %32, label %223

32:                                               ; preds = %27
  %33 = tail call i32 @bcmp(i8* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url20kQuicTransportSchemeE, i64 0, i64 0), i64 %29) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %223

35:                                               ; preds = %32
  %36 = tail call i8* @_Znwm(i64 8) #16, !noalias !6
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 8
  %39 = ptrtoint i8* %38 to i64
  %40 = bitcast i8* %36 to i32*
  store i32 2, i32* %40, align 4, !noalias !6
  %41 = getelementptr inbounds i8, i8* %36, i64 4
  %42 = bitcast i8* %41 to i32*
  store i32 73, i32* %42, align 4, !noalias !6
  %43 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 14
  %44 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %43, i64 0, i32 0, i32 0
  %45 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %44, align 8
  %46 = icmp eq %"struct.quic::ParsedQuicVersion"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %35
  %48 = ptrtoint %"struct.quic::ParsedQuicVersion"* %45 to i64
  %49 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 14, i32 0, i32 1
  %50 = bitcast %"struct.quic::ParsedQuicVersion"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"struct.quic::ParsedQuicVersion"* %45 to i8*
  tail call void @_ZdlPv(i8* %51) #16
  %52 = bitcast %"class.std::__1::vector.202"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #15
  br label %53

53:                                               ; preds = %35, %47
  %54 = bitcast %"class.std::__1::vector.202"* %43 to i64*
  store i64 %37, i64* %54, align 8
  %55 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 14, i32 0, i32 1
  %56 = bitcast %"struct.quic::ParsedQuicVersion"** %55 to i64*
  store i64 %39, i64* %56, align 8
  %57 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"struct.quic::ParsedQuicVersion"** %57 to i64*
  store i64 %39, i64* %58, align 8
  %59 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 11
  %60 = load %"class.net::QuicContext"*, %"class.net::QuicContext"** %59, align 8
  %61 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %61, align 8
  %63 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %60, i64 0, i32 1, i32 0, i32 0, i32 1
  %64 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %63, align 8
  %65 = icmp eq %"struct.quic::ParsedQuicVersion"* %62, %64
  br i1 %65, label %221, label %70

66:                                               ; preds = %218
  %67 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %44, align 8
  %68 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %55, align 8
  %69 = icmp eq %"struct.quic::ParsedQuicVersion"* %67, %68
  br i1 %69, label %223, label %221

70:                                               ; preds = %53, %218
  %71 = phi %"struct.quic::ParsedQuicVersion"* [ %219, %218 ], [ %62, %53 ]
  %72 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %71, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, 51
  %75 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %71, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 2
  %78 = and i1 %74, %77
  br i1 %78, label %79, label %218

79:                                               ; preds = %70
  %80 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %44, align 8
  %81 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %55, align 8
  %82 = icmp eq %"struct.quic::ParsedQuicVersion"* %80, %81
  %83 = ptrtoint %"struct.quic::ParsedQuicVersion"* %81 to i64
  %84 = ptrtoint %"struct.quic::ParsedQuicVersion"* %80 to i64
  br i1 %82, label %97, label %85

85:                                               ; preds = %79, %94
  %86 = phi %"struct.quic::ParsedQuicVersion"* [ %95, %94 ], [ %80, %79 ]
  %87 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 2
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %86, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, %73
  br i1 %93, label %97, label %94

94:                                               ; preds = %90, %85
  %95 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %86, i64 1
  %96 = icmp eq %"struct.quic::ParsedQuicVersion"* %95, %81
  br i1 %96, label %100, label %85

97:                                               ; preds = %90, %79
  %98 = phi %"struct.quic::ParsedQuicVersion"* [ %80, %79 ], [ %86, %90 ]
  %99 = icmp eq %"struct.quic::ParsedQuicVersion"* %98, %81
  br i1 %99, label %100, label %218

100:                                              ; preds = %94, %97
  %101 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %57, align 8
  %102 = icmp eq %"struct.quic::ParsedQuicVersion"* %81, %101
  %103 = ptrtoint %"struct.quic::ParsedQuicVersion"* %101 to i64
  br i1 %102, label %109, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %81, i64 0, i32 0
  store i32 2, i32* %105, align 4
  %106 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %81, i64 0, i32 1
  store i32 %73, i32* %106, align 4
  %107 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %81, i64 1
  %108 = ptrtoint %"struct.quic::ParsedQuicVersion"* %107 to i64
  store i64 %108, i64* %56, align 8
  br label %218

109:                                              ; preds = %100
  %110 = sub i64 %83, %84
  %111 = ashr exact i64 %110, 3
  %112 = add nsw i64 %111, 1
  %113 = icmp ugt i64 %112, 2305843009213693951
  br i1 %113, label %114, label %116

114:                                              ; preds = %109
  %115 = bitcast %"class.std::__1::vector.202"* %43 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %115) #17
  unreachable

116:                                              ; preds = %109
  %117 = sub i64 %103, %84
  %118 = ashr exact i64 %117, 3
  %119 = icmp ult i64 %118, 1152921504606846975
  br i1 %119, label %120, label %128

120:                                              ; preds = %116
  %121 = ashr exact i64 %117, 2
  %122 = icmp ult i64 %121, %112
  %123 = select i1 %122, i64 %112, i64 %121
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %135, label %125

125:                                              ; preds = %120
  %126 = icmp ugt i64 %123, 2305843009213693951
  br i1 %126, label %127, label %128

127:                                              ; preds = %125
  tail call void @abort() #17
  unreachable

128:                                              ; preds = %125, %116
  %129 = phi i64 [ %123, %125 ], [ 2305843009213693951, %116 ]
  %130 = shl i64 %129, 3
  %131 = tail call i8* @_Znwm(i64 %130) #16
  %132 = bitcast i8* %131 to %"struct.quic::ParsedQuicVersion"*
  %133 = load i32, i32* %75, align 4
  %134 = load i32, i32* %72, align 4
  br label %135

135:                                              ; preds = %128, %120
  %136 = phi i32 [ %134, %128 ], [ %73, %120 ]
  %137 = phi i32 [ %133, %128 ], [ 2, %120 ]
  %138 = phi i64 [ %129, %128 ], [ 0, %120 ]
  %139 = phi %"struct.quic::ParsedQuicVersion"* [ %132, %128 ], [ null, %120 ]
  %140 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %139, i64 %111
  %141 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %139, i64 %138
  %142 = ptrtoint %"struct.quic::ParsedQuicVersion"* %141 to i64
  %143 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %140, i64 0, i32 0
  store i32 %137, i32* %143, align 4
  %144 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %139, i64 %111, i32 1
  store i32 %136, i32* %144, align 4
  %145 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %140, i64 1
  %146 = ptrtoint %"struct.quic::ParsedQuicVersion"* %145 to i64
  %147 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %44, align 8
  %148 = ptrtoint %"struct.quic::ParsedQuicVersion"* %147 to i64
  %149 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %55, align 8
  %150 = icmp eq %"struct.quic::ParsedQuicVersion"* %149, %147
  br i1 %150, label %211, label %151

151:                                              ; preds = %135
  %152 = getelementptr %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %149, i64 -1
  %153 = ptrtoint %"struct.quic::ParsedQuicVersion"* %152 to i64
  %154 = sub i64 %153, %148
  %155 = lshr i64 %154, 3
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %173, label %159

159:                                              ; preds = %151, %159
  %160 = phi %"struct.quic::ParsedQuicVersion"* [ %170, %159 ], [ %140, %151 ]
  %161 = phi %"struct.quic::ParsedQuicVersion"* [ %163, %159 ], [ %149, %151 ]
  %162 = phi i64 [ %171, %159 ], [ %157, %151 ]
  %163 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %161, i64 -1
  %164 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %161, i64 -1, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %160, i64 -1, i32 0
  store i32 %165, i32* %168, align 4
  %169 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %160, i64 -1, i32 1
  store i32 %167, i32* %169, align 4
  %170 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %160, i64 -1
  %171 = add i64 %162, -1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %159, !llvm.loop !9

173:                                              ; preds = %159, %151
  %174 = phi %"struct.quic::ParsedQuicVersion"* [ undef, %151 ], [ %170, %159 ]
  %175 = phi %"struct.quic::ParsedQuicVersion"* [ %140, %151 ], [ %170, %159 ]
  %176 = phi %"struct.quic::ParsedQuicVersion"* [ %149, %151 ], [ %163, %159 ]
  %177 = icmp ult i64 %154, 24
  br i1 %177, label %208, label %178

178:                                              ; preds = %173, %178
  %179 = phi %"struct.quic::ParsedQuicVersion"* [ %206, %178 ], [ %175, %173 ]
  %180 = phi %"struct.quic::ParsedQuicVersion"* [ %199, %178 ], [ %176, %173 ]
  %181 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %180, i64 -1, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %180, i64 -1, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %179, i64 -1, i32 0
  store i32 %182, i32* %185, align 4
  %186 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %179, i64 -1, i32 1
  store i32 %184, i32* %186, align 4
  %187 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %180, i64 -2, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %180, i64 -2, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %179, i64 -2, i32 0
  store i32 %188, i32* %191, align 4
  %192 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %179, i64 -2, i32 1
  store i32 %190, i32* %192, align 4
  %193 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %180, i64 -3, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %180, i64 -3, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %179, i64 -3, i32 0
  store i32 %194, i32* %197, align 4
  %198 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %179, i64 -3, i32 1
  store i32 %196, i32* %198, align 4
  %199 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %180, i64 -4
  %200 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %199, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %180, i64 -4, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %179, i64 -4, i32 0
  store i32 %201, i32* %204, align 4
  %205 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %179, i64 -4, i32 1
  store i32 %203, i32* %205, align 4
  %206 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %179, i64 -4
  %207 = icmp eq %"struct.quic::ParsedQuicVersion"* %199, %147
  br i1 %207, label %208, label %178

208:                                              ; preds = %178, %173
  %209 = phi %"struct.quic::ParsedQuicVersion"* [ %174, %173 ], [ %206, %178 ]
  %210 = load i64, i64* %54, align 8
  br label %211

211:                                              ; preds = %135, %208
  %212 = phi %"struct.quic::ParsedQuicVersion"* [ %209, %208 ], [ %140, %135 ]
  %213 = phi i64 [ %210, %208 ], [ %148, %135 ]
  %214 = ptrtoint %"struct.quic::ParsedQuicVersion"* %212 to i64
  store i64 %214, i64* %54, align 8
  store i64 %146, i64* %56, align 8
  store i64 %142, i64* %58, align 8
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %211
  %217 = inttoptr i64 %213 to i8*
  tail call void @_ZdlPv(i8* %217) #16
  br label %218

218:                                              ; preds = %97, %104, %211, %216, %70
  %219 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %71, i64 1
  %220 = icmp eq %"struct.quic::ParsedQuicVersion"* %219, %64
  br i1 %220, label %66, label %70

221:                                              ; preds = %53, %66
  %222 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 18
  store i32 2, i32* %222, align 4
  br label %223

223:                                              ; preds = %32, %1, %27, %66, %221
  %224 = phi i32 [ 0, %221 ], [ -300, %1 ], [ -301, %32 ], [ -11, %66 ], [ -301, %27 ]
  ret i32 %224
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19QuicTransportClient12DoCheckProxyEv(%"class.net::QuicTransportClient"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::OnceCallback.793", align 8
  %4 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 18
  store i32 3, i32* %4, align 4
  %5 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 8
  %6 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %5, align 8
  %7 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %6, i64 0, i32 5
  %8 = load %"class.net::ProxyResolutionService"*, %"class.net::ProxyResolutionService"** %7, align 8
  %9 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 5
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 7, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7, i1 false) #15
  %13 = getelementptr inbounds i8, i8* %10, i64 7
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 7
  %15 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 21
  %16 = ptrtoint %"class.net::QuicTransportClient"* %0 to i64
  %17 = tail call i8* @_Znwm(i64 56) #16, !noalias !11
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !11
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::QuicTransportClient"*, i32)* @_ZN3net19QuicTransportClient6DoLoopEi to i64), i64 0>, <2 x i64>* %20, align 8, !noalias !11
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %16, i64* %22, align 8, !noalias !11
  %23 = bitcast %"class.base::OnceCallback.793"* %3 to i8**
  store i8* %17, i8** %23, align 8, !alias.scope !11
  %24 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 22
  %25 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 12
  %26 = bitcast %"class.net::ProxyResolutionService"* %8 to i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.793"*, %"class.std::__1::unique_ptr.298"*, %"class.net::NetLogWithSource"*)***
  %27 = load i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.793"*, %"class.std::__1::unique_ptr.298"*, %"class.net::NetLogWithSource"*)**, i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.793"*, %"class.std::__1::unique_ptr.298"*, %"class.net::NetLogWithSource"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.793"*, %"class.std::__1::unique_ptr.298"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.793"*, %"class.std::__1::unique_ptr.298"*, %"class.net::NetLogWithSource"*)** %27, i64 2
  %29 = load i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.793"*, %"class.std::__1::unique_ptr.298"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.793"*, %"class.std::__1::unique_ptr.298"*, %"class.net::NetLogWithSource"*)** %28, align 8
  %30 = call i32 %29(%"class.net::ProxyResolutionService"* %8, %class.GURL* dereferenceable(120) %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.net::NetworkIsolationKey"* dereferenceable(184) %14, %"class.net::ProxyInfo"* %15, %"class.base::OnceCallback.793"* nonnull %3, %"class.std::__1::unique_ptr.298"* %24, %"class.net::NetLogWithSource"* dereferenceable(24) %25) #15
  %31 = getelementptr inbounds %"class.base::OnceCallback.793", %"class.base::OnceCallback.793"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #15
  %32 = load i8, i8* %12, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #16
  br label %37

37:                                               ; preds = %1, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19QuicTransportClient20DoCheckProxyCompleteEi(%"class.net::QuicTransportClient"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 21, i32 0
  %6 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %5) #15
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = tail call dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net9ProxyList3GetEv(%"class.net::ProxyList"* %5) #15
  %9 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 18
  store i32 4, i32* %13, align 4
  br label %14

14:                                               ; preds = %4, %7, %2, %12
  %15 = phi i32 [ 0, %12 ], [ %1, %2 ], [ -111, %7 ], [ -111, %4 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19QuicTransportClient13DoResolveHostEv(%"class.net::QuicTransportClient"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.net::HostResolver::ResolveHostParameters", align 4
  %3 = alloca %"class.net::HostPortPair", align 8
  %4 = alloca %"class.absl::optional.794", align 4
  %5 = alloca %"class.base::OnceCallback.793", align 8
  %6 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 18
  store i32 5, i32* %6, align 4
  %7 = bitcast %"struct.net::HostResolver::ResolveHostParameters"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = bitcast %"struct.net::HostResolver::ResolveHostParameters"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 24, i1 false)
  call void @_ZN3net12HostResolver21ResolveHostParametersC1Ev(%"struct.net::HostResolver::ResolveHostParameters"* nonnull %2) #15
  %9 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 8
  %10 = load %"class.net::URLRequestContext"*, %"class.net::URLRequestContext"** %9, align 8
  %11 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %10, i64 0, i32 2
  %12 = load %"class.net::HostResolver"*, %"class.net::HostResolver"** %11, align 8
  %13 = bitcast %"class.net::HostPortPair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 5
  call void @_ZN3net12HostPortPair7FromURLERK4GURL(%"class.net::HostPortPair"* nonnull sret %3, %class.GURL* dereferenceable(120) %14) #15
  %15 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 7
  %16 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 12
  %17 = getelementptr inbounds %"class.absl::optional.794", %"class.absl::optional.794"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %17) #15
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.absl::optional.794", %"class.absl::optional.794"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %union.anon.798* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 24, i1 false) #15
  %20 = bitcast %"class.net::HostResolver"* %12 to %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.794"*)***
  %21 = load %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.794"*)**, %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.794"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.794"*)*, %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.794"*)** %21, i64 3
  %23 = load %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.794"*)*, %"class.net::HostResolver::ResolveHostRequest"* (%"class.net::HostResolver"*, %"class.net::HostPortPair"*, %"class.net::NetworkIsolationKey"*, %"class.net::NetLogWithSource"*, %"class.absl::optional.794"*)** %22, align 8
  %24 = call %"class.net::HostResolver::ResolveHostRequest"* %23(%"class.net::HostResolver"* %12, %"class.net::HostPortPair"* nonnull dereferenceable(32) %3, %"class.net::NetworkIsolationKey"* dereferenceable(184) %15, %"class.net::NetLogWithSource"* dereferenceable(24) %16, %"class.absl::optional.794"* nonnull dereferenceable(28) %4) #15
  %25 = ptrtoint %"class.net::HostResolver::ResolveHostRequest"* %24 to i64
  %26 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 23
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.304"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.net::HostResolver::ResolveHostRequest"*, %"class.net::HostResolver::ResolveHostRequest"** %27, align 8
  %29 = bitcast %"class.std::__1::unique_ptr.304"* %26 to i64*
  store i64 %25, i64* %29, align 8
  %30 = icmp eq %"class.net::HostResolver::ResolveHostRequest"* %28, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %1
  %32 = bitcast %"class.net::HostResolver::ResolveHostRequest"* %28 to void (%"class.net::HostResolver::ResolveHostRequest"*)***
  %33 = load void (%"class.net::HostResolver::ResolveHostRequest"*)**, void (%"class.net::HostResolver::ResolveHostRequest"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.net::HostResolver::ResolveHostRequest"*)*, void (%"class.net::HostResolver::ResolveHostRequest"*)** %33, i64 1
  %35 = load void (%"class.net::HostResolver::ResolveHostRequest"*)*, void (%"class.net::HostResolver::ResolveHostRequest"*)** %34, align 8
  call void %35(%"class.net::HostResolver::ResolveHostRequest"* nonnull %28) #15
  br label %36

36:                                               ; preds = %31, %1
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %17) #15
  %37 = bitcast %"class.net::HostPortPair"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #16
  br label %44

44:                                               ; preds = %36, %41
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #15
  %45 = load %"class.net::HostResolver::ResolveHostRequest"*, %"class.net::HostResolver::ResolveHostRequest"** %27, align 8
  %46 = ptrtoint %"class.net::QuicTransportClient"* %0 to i64
  %47 = call i8* @_Znwm(i64 56) #16, !noalias !16
  %48 = bitcast i8* %47 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %48, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #15, !noalias !16
  %49 = getelementptr inbounds i8, i8* %47, i64 32
  %50 = bitcast i8* %49 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::QuicTransportClient"*, i32)* @_ZN3net19QuicTransportClient6DoLoopEi to i64), i64 0>, <2 x i64>* %50, align 8, !noalias !16
  %51 = getelementptr inbounds i8, i8* %47, i64 48
  %52 = bitcast i8* %51 to i64*
  store i64 %46, i64* %52, align 8, !noalias !16
  %53 = bitcast %"class.base::OnceCallback.793"* %5 to i8**
  store i8* %47, i8** %53, align 8, !alias.scope !16
  %54 = bitcast %"class.net::HostResolver::ResolveHostRequest"* %45 to i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.793"*)***
  %55 = load i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.793"*)**, i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.793"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.793"*)*, i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.793"*)** %55, i64 2
  %57 = load i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.793"*)*, i32 (%"class.net::HostResolver::ResolveHostRequest"*, %"class.base::OnceCallback.793"*)** %56, align 8
  %58 = call i32 %57(%"class.net::HostResolver::ResolveHostRequest"* %45, %"class.base::OnceCallback.793"* nonnull %5) #15
  %59 = getelementptr inbounds %"class.base::OnceCallback.793", %"class.base::OnceCallback.793"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %59) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret i32 %58
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN3net19QuicTransportClient21DoResolveHostCompleteEi(%"class.net::QuicTransportClient"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 18
  store i32 6, i32* %5, align 4
  br label %6

6:                                                ; preds = %2, %4
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19QuicTransportClient9DoConnectEv(%"class.net::QuicTransportClient"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.net::IPEndPoint", align 2
  %3 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 10
  %4 = load %"class.net::ClientSocketFactory"*, %"class.net::ClientSocketFactory"** %3, align 8
  %5 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 12
  %6 = tail call %"class.net::NetLog"* @_ZNK3net16NetLogWithSource7net_logEv(%"class.net::NetLogWithSource"* %5) #15
  %7 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %5, i64 0, i32 0
  %8 = bitcast %"class.net::ClientSocketFactory"* %4 to %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)***
  %9 = load %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)**, %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)*, %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)** %9, i64 2
  %11 = load %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)*, %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)** %10, align 8
  %12 = tail call %"class.net::DatagramClientSocket"* %11(%"class.net::ClientSocketFactory"* %4, i32 1, %"class.net::NetLog"* %6, %"struct.net::NetLogSource"* dereferenceable(16) %7) #15
  %13 = ptrtoint %"class.net::DatagramClientSocket"* %12 to i64
  %14 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 24
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.310"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.net::DatagramClientSocket"* %16, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.net::DatagramClientSocket"* %16 to void (%"class.net::DatagramClientSocket"*)***
  %21 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %21, i64 1
  %23 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %22, align 8
  tail call void %23(%"class.net::DatagramClientSocket"* nonnull %16) #15
  br label %24

24:                                               ; preds = %19, %1
  %25 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 11
  %26 = load %"class.net::QuicContext"*, %"class.net::QuicContext"** %25, align 8
  %27 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %26, i64 0, i32 1, i32 7
  %28 = load i8, i8* %27, align 8, !range !5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %15, align 8
  %32 = bitcast %"class.net::DatagramClientSocket"* %31 to void (%"class.net::DatagramClientSocket"*)***
  %33 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %33, i64 14
  %35 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %34, align 8
  tail call void %35(%"class.net::DatagramClientSocket"* %31) #15
  br label %36

36:                                               ; preds = %24, %30
  %37 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %15, align 8
  %38 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %37, i64 0, i32 0
  %39 = bitcast %"class.net::DatagramClientSocket"* %37 to void (%"class.net::DatagramSocket"*)***
  %40 = load void (%"class.net::DatagramSocket"*)**, void (%"class.net::DatagramSocket"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.net::DatagramSocket"*)*, void (%"class.net::DatagramSocket"*)** %40, i64 5
  %42 = load void (%"class.net::DatagramSocket"*)*, void (%"class.net::DatagramSocket"*)** %41, align 8
  tail call void %42(%"class.net::DatagramSocket"* %38) #15
  %43 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %43) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %43, i8 -86, i64 20, i1 false)
  %44 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %45 = load %"class.net::HostResolver::ResolveHostRequest"*, %"class.net::HostResolver::ResolveHostRequest"** %44, align 8
  %46 = bitcast %"class.net::HostResolver::ResolveHostRequest"* %45 to %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)***
  %47 = load %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)**, %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)*, %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)** %47, i64 3
  %49 = load %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)*, %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)** %48, align 8
  %50 = tail call dereferenceable(56) %"class.absl::optional.800"* %49(%"class.net::HostResolver::ResolveHostRequest"* %45) #15
  %51 = getelementptr inbounds %"class.absl::optional.800", %"class.absl::optional.800"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8, i8* %51, align 8, !range !5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %55, !prof !21

54:                                               ; preds = %36
  tail call void @llvm.trap() #15
  unreachable

55:                                               ; preds = %36
  %56 = getelementptr inbounds %"class.absl::optional.800", %"class.absl::optional.800"* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %56, align 8
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %2, %"class.net::IPEndPoint"* dereferenceable(20) %57) #15
  %58 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %15, align 8
  %59 = bitcast %"class.net::DatagramClientSocket"* %58 to i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)***
  %60 = load i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)*** %59, align 8
  %61 = getelementptr inbounds i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)** %60, i64 9
  %62 = load i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)** %61, align 8
  %63 = call i32 %62(%"class.net::DatagramClientSocket"* %58, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %2) #15
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %96

65:                                               ; preds = %55
  %66 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %15, align 8
  %67 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %66, i64 0, i32 1
  %68 = bitcast %"class.net::Socket"* %67 to i32 (%"class.net::Socket"*, i32)***
  %69 = load i32 (%"class.net::Socket"*, i32)**, i32 (%"class.net::Socket"*, i32)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %69, i64 6
  %71 = load i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %70, align 8
  %72 = call i32 %71(%"class.net::Socket"* %67, i32 1048576) #15
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %96

74:                                               ; preds = %65
  %75 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %15, align 8
  %76 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %75, i64 0, i32 0
  %77 = bitcast %"class.net::DatagramClientSocket"* %75 to i32 (%"class.net::DatagramSocket"*)***
  %78 = load i32 (%"class.net::DatagramSocket"*)**, i32 (%"class.net::DatagramSocket"*)*** %77, align 8
  %79 = getelementptr inbounds i32 (%"class.net::DatagramSocket"*)*, i32 (%"class.net::DatagramSocket"*)** %78, i64 6
  %80 = load i32 (%"class.net::DatagramSocket"*)*, i32 (%"class.net::DatagramSocket"*)** %79, align 8
  %81 = call i32 %80(%"class.net::DatagramSocket"* %76) #15
  %82 = icmp eq i32 %81, -11
  %83 = select i1 %82, i32 0, i32 %81
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %96

85:                                               ; preds = %74
  %86 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %15, align 8
  %87 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %86, i64 0, i32 1
  %88 = bitcast %"class.net::Socket"* %87 to i32 (%"class.net::Socket"*, i32)***
  %89 = load i32 (%"class.net::Socket"*, i32)**, i32 (%"class.net::Socket"*, i32)*** %88, align 8
  %90 = getelementptr inbounds i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %89, i64 7
  %91 = load i32 (%"class.net::Socket"*, i32)*, i32 (%"class.net::Socket"*, i32)** %90, align 8
  %92 = call i32 %91(%"class.net::Socket"* %87, i32 29040) #15
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %85
  call void @_ZN3net19QuicTransportClient16CreateConnectionEv(%"class.net::QuicTransportClient"* %0)
  %95 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 18
  store i32 7, i32* %95, align 4
  br label %96

96:                                               ; preds = %85, %74, %65, %55, %94
  %97 = phi i32 [ -1, %94 ], [ %63, %55 ], [ %72, %65 ], [ %83, %74 ], [ %92, %85 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %43) #15
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19QuicTransportClient19DoConfirmConnectionEv(%"class.net::QuicTransportClient"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %2, align 8
  %4 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %3, i64 0, i32 83
  %5 = load i8, i8* %4, align 2, !range !5
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %9 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %8, align 8
  %10 = bitcast %"class.quic::QuicTransportClientSession"* %9 to i1 (%"class.quic::QuicTransportClientSession"*)***
  %11 = load i1 (%"class.quic::QuicTransportClientSession"*)**, i1 (%"class.quic::QuicTransportClientSession"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.quic::QuicTransportClientSession"*)*, i1 (%"class.quic::QuicTransportClientSession"*)** %11, i64 113
  %13 = load i1 (%"class.quic::QuicTransportClientSession"*)*, i1 (%"class.quic::QuicTransportClientSession"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.quic::QuicTransportClientSession"* %9) #15
  br i1 %14, label %15, label %23

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 17
  store i32 2, i32* %16, align 8
  %17 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %18 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %17, align 8
  %19 = bitcast %"class.net::WebTransportClientVisitor"* %18 to void (%"class.net::WebTransportClientVisitor"*)***
  %20 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %20, i64 2
  %22 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %21, align 8
  tail call void %22(%"class.net::WebTransportClientVisitor"* %18) #15
  br label %23

23:                                               ; preds = %1, %7, %15
  %24 = phi i32 [ 0, %15 ], [ -356, %7 ], [ -356, %1 ]
  ret i32 %24
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN3net12HostResolver21ResolveHostParametersC1Ev(%"struct.net::HostResolver::ResolveHostParameters"*) unnamed_addr #1

declare void @_ZN3net12HostPortPair7FromURLERK4GURL(%"class.net::HostPortPair"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare %"class.net::NetLog"* @_ZNK3net16NetLogWithSource7net_logEv(%"class.net::NetLogWithSource"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient16CreateConnectionEv(%"class.net::QuicTransportClient"*) #0 align 2 {
  %2 = alloca %"class.url::Origin", align 8
  %3 = alloca %"class.quic::QuicConnectionId", align 8
  %4 = alloca %struct.sockaddr_storage, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.net::IPEndPoint", align 2
  %7 = alloca %"class.quic::QuicConnectionId", align 8
  %8 = alloca %"class.quic::QuicSocketAddress", align 8
  %9 = alloca %"class.quic::QuicSocketAddress", align 8
  %10 = alloca %"class.net::IPEndPoint", align 2
  %11 = alloca %"class.quic::QuicConfig", align 8
  %12 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 27
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.770", %"class.std::__1::unique_ptr.770"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.net::QuicChromiumPacketReader"*, %"class.net::QuicChromiumPacketReader"** %13, align 8
  store %"class.net::QuicChromiumPacketReader"* null, %"class.net::QuicChromiumPacketReader"** %13, align 8
  %15 = icmp eq %"class.net::QuicChromiumPacketReader"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.net::QuicChromiumPacketReader"* %14 to void (%"class.net::QuicChromiumPacketReader"*)***
  %18 = load void (%"class.net::QuicChromiumPacketReader"*)**, void (%"class.net::QuicChromiumPacketReader"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %18, i64 1
  %20 = load void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %19, align 8
  tail call void %20(%"class.net::QuicChromiumPacketReader"* nonnull %14) #15
  br label %21

21:                                               ; preds = %1, %16
  %22 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 26
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.577", %"class.std::__1::unique_ptr.577"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %23, align 8
  store %"class.quic::QuicTransportClientSession"* null, %"class.quic::QuicTransportClientSession"** %23, align 8
  %25 = icmp eq %"class.quic::QuicTransportClientSession"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.quic::QuicTransportClientSession"* %24 to void (%"class.quic::QuicTransportClientSession"*)***
  %28 = load void (%"class.quic::QuicTransportClientSession"*)**, void (%"class.quic::QuicTransportClientSession"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.quic::QuicTransportClientSession"*)*, void (%"class.quic::QuicTransportClientSession"*)** %28, i64 1
  %30 = load void (%"class.quic::QuicTransportClientSession"*)*, void (%"class.quic::QuicTransportClientSession"*)** %29, align 8
  tail call void %30(%"class.quic::QuicTransportClientSession"* nonnull %24) #15
  br label %31

31:                                               ; preds = %21, %26
  %32 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 25
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.316"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %33, align 8
  store %"class.quic::QuicConnection"* null, %"class.quic::QuicConnection"** %33, align 8
  %35 = icmp eq %"class.quic::QuicConnection"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.quic::QuicConnection"* %34 to void (%"class.quic::QuicConnection"*)***
  %38 = load void (%"class.quic::QuicConnection"*)**, void (%"class.quic::QuicConnection"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.quic::QuicConnection"*)*, void (%"class.quic::QuicConnection"*)** %38, i64 1
  %40 = load void (%"class.quic::QuicConnection"*)*, void (%"class.quic::QuicConnection"*)** %39, align 8
  tail call void %40(%"class.quic::QuicConnection"* nonnull %34) #15
  br label %41

41:                                               ; preds = %31, %36
  %42 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %42) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %42, i8 -86, i64 20, i1 false)
  %43 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 23, i32 0, i32 0, i32 0
  %44 = load %"class.net::HostResolver::ResolveHostRequest"*, %"class.net::HostResolver::ResolveHostRequest"** %43, align 8
  %45 = bitcast %"class.net::HostResolver::ResolveHostRequest"* %44 to %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)***
  %46 = load %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)**, %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)*, %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)** %46, i64 3
  %48 = load %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)*, %"class.absl::optional.800"* (%"class.net::HostResolver::ResolveHostRequest"*)** %47, align 8
  %49 = tail call dereferenceable(56) %"class.absl::optional.800"* %48(%"class.net::HostResolver::ResolveHostRequest"* %44) #15
  %50 = getelementptr inbounds %"class.absl::optional.800", %"class.absl::optional.800"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !5
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %54, !prof !21

53:                                               ; preds = %41
  tail call void @llvm.trap() #15
  unreachable

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.absl::optional.800", %"class.absl::optional.800"* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %55, align 8
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %6, %"class.net::IPEndPoint"* dereferenceable(20) %56) #15
  %57 = getelementptr inbounds %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId"* %7, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 16, i1 false)
  %58 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 11
  %59 = load %"class.net::QuicContext"*, %"class.net::QuicContext"** %58, align 8
  %60 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicConnectionHelperInterface"** %60, align 8
  %62 = bitcast %"class.quic::QuicConnectionHelperInterface"* %61 to %"class.quic::QuicRandom"* (%"class.quic::QuicConnectionHelperInterface"*)***
  %63 = load %"class.quic::QuicRandom"* (%"class.quic::QuicConnectionHelperInterface"*)**, %"class.quic::QuicRandom"* (%"class.quic::QuicConnectionHelperInterface"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.quic::QuicRandom"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicRandom"* (%"class.quic::QuicConnectionHelperInterface"*)** %63, i64 3
  %65 = load %"class.quic::QuicRandom"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicRandom"* (%"class.quic::QuicConnectionHelperInterface"*)** %64, align 8
  %66 = call %"class.quic::QuicRandom"* %65(%"class.quic::QuicConnectionHelperInterface"* %61) #15
  call void @_ZN4quic9QuicUtils24CreateRandomConnectionIdEPNS_10QuicRandomE(%"class.quic::QuicConnectionId"* nonnull sret %7, %"class.quic::QuicRandom"* %66) #15
  %67 = bitcast %"class.quic::QuicSocketAddress"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #15
  %68 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %8, i64 0, i32 0
  call void @_ZN4quic13QuicIpAddressC1Ev(%"class.quic::QuicIpAddress"* nonnull %68) #15
  %69 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %8, i64 0, i32 1
  store i16 0, i16* %69, align 4
  %70 = bitcast %"class.quic::QuicSocketAddress"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #15
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %10, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %6) #15
  %71 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %10, i64 0, i32 0, i32 0, i32 1
  %72 = load i8, i8* %71, align 2, !noalias !22
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %54
  %75 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %9, i64 0, i32 0
  call void @_ZN4quic13QuicIpAddressC1Ev(%"class.quic::QuicIpAddress"* nonnull %75) #15
  %76 = getelementptr inbounds %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress"* %9, i64 0, i32 1
  store i16 0, i16* %76, align 4, !alias.scope !22
  br label %82

77:                                               ; preds = %54
  %78 = bitcast %struct.sockaddr_storage* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %78) #15, !noalias !22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 128, i1 false) #15, !noalias !22
  %79 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #15, !noalias !22
  store i32 128, i32* %5, align 4, !noalias !22
  %80 = bitcast %struct.sockaddr_storage* %4 to %struct.sockaddr*
  %81 = call zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"* nonnull %10, %struct.sockaddr* nonnull %80, i32* nonnull %5) #15
  call void @_ZN4quic17QuicSocketAddressC1ERK16sockaddr_storage(%"class.quic::QuicSocketAddress"* nonnull %9, %struct.sockaddr_storage* nonnull dereferenceable(128) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #15, !noalias !22
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %78) #15, !noalias !22
  br label %82

82:                                               ; preds = %74, %77
  %83 = load %"class.net::QuicContext"*, %"class.net::QuicContext"** %58, align 8
  %84 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicConnectionHelperInterface"** %84, align 8
  %86 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %87 = bitcast %"class.net::QuicChromiumAlarmFactory"** %86 to %"class.quic::QuicAlarmFactory"**
  %88 = load %"class.quic::QuicAlarmFactory"*, %"class.quic::QuicAlarmFactory"** %87, align 8
  %89 = call i8* @_Znwm(i64 192) #16
  %90 = bitcast i8* %89 to %"class.net::QuicChromiumPacketWriter"*
  %91 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %92 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %91, align 8
  %93 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 13
  %94 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %93, align 8
  call void @_ZN3net24QuicChromiumPacketWriterC1EPNS_20DatagramClientSocketEPN4base19SequencedTaskRunnerE(%"class.net::QuicChromiumPacketWriter"* nonnull %90, %"class.net::DatagramClientSocket"* %92, %"class.base::SequencedTaskRunner"* %94) #15
  %95 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 14
  %96 = getelementptr inbounds %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96)
  %97 = call i8* @_Znwm(i64 6352) #16
  %98 = bitcast i8* %97 to %"class.quic::QuicConnection"*
  call void @_ZN4quic16QuicConnectionIdC1ERKS0_(%"class.quic::QuicConnectionId"* nonnull %3, %"class.quic::QuicConnectionId"* nonnull dereferenceable(16) %7) #15
  %99 = bitcast i8* %89 to %"class.quic::QuicPacketWriter"*
  call void @_ZN4quic14QuicConnectionC1ENS_16QuicConnectionIdENS_17QuicSocketAddressES2_PNS_29QuicConnectionHelperInterfaceEPNS_16QuicAlarmFactoryEPNS_16QuicPacketWriterEbNS_11PerspectiveERKNSt3__16vectorINS_17ParsedQuicVersionENSA_9allocatorISC_EEEE(%"class.quic::QuicConnection"* nonnull %98, %"class.quic::QuicConnectionId"* nonnull %3, %"class.quic::QuicSocketAddress"* nonnull byval(%"class.quic::QuicSocketAddress") align 8 %8, %"class.quic::QuicSocketAddress"* nonnull byval(%"class.quic::QuicSocketAddress") align 8 %9, %"class.quic::QuicConnectionHelperInterface"* %85, %"class.quic::QuicAlarmFactory"* %88, %"class.quic::QuicPacketWriter"* nonnull %99, i1 zeroext true, i8 zeroext 1, %"class.std::__1::vector.202"* dereferenceable(24) %95) #15
  call void @_ZN4quic16QuicConnectionIdD1Ev(%"class.quic::QuicConnectionId"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96)
  %100 = ptrtoint i8* %97 to i64
  %101 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %33, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.316"* %32 to i64*
  store i64 %100, i64* %102, align 8
  %103 = icmp eq %"class.quic::QuicConnection"* %101, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %82
  %105 = bitcast %"class.quic::QuicConnection"* %101 to void (%"class.quic::QuicConnection"*)***
  %106 = load void (%"class.quic::QuicConnection"*)**, void (%"class.quic::QuicConnection"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.quic::QuicConnection"*)*, void (%"class.quic::QuicConnection"*)** %106, i64 1
  %108 = load void (%"class.quic::QuicConnection"*)*, void (%"class.quic::QuicConnection"*)** %107, align 8
  call void %108(%"class.quic::QuicConnection"* nonnull %101) #15
  br label %109

109:                                              ; preds = %104, %82
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #15
  %110 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %33, align 8
  %111 = load %"class.net::QuicContext"*, %"class.net::QuicContext"** %58, align 8
  %112 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %111, i64 0, i32 1, i32 2
  %113 = load i64, i64* %112, align 8
  call void @_ZN4quic14QuicConnection18SetMaxPacketLengthEm(%"class.quic::QuicConnection"* %110, i64 %113) #15
  %114 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %33, align 8
  %115 = getelementptr inbounds %"class.quic::QuicConfig", %"class.quic::QuicConfig"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1112, i8* nonnull %115) #15
  %116 = load %"class.net::QuicContext"*, %"class.net::QuicContext"** %58, align 8
  %117 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %116, i64 0, i32 1
  call void @_ZN3net20InitializeQuicConfigERKNS_10QuicParamsE(%"class.quic::QuicConfig"* nonnull sret %11, %"struct.net::QuicParams"* dereferenceable(240) %117) #15
  %118 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 5
  %119 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 16
  %120 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 6
  %121 = ptrtoint %"class.net::QuicTransportClient"* %0 to i64
  %122 = call i8* @_Znwm(i64 16) #16
  %123 = bitcast i8* %122 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net19QuicTransportClient21DatagramObserverProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 8
  %125 = bitcast i8* %124 to i64*
  store i64 %121, i64* %125, align 8
  %126 = ptrtoint i8* %122 to i64
  %127 = bitcast %"class.url::Origin"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %127)
  %128 = call i8* @_Znwm(i64 3176) #16
  %129 = bitcast i8* %128 to %"class.quic::QuicTransportClientSession"*
  %130 = icmp eq %"class.net::QuicTransportClient"* %0, null
  %131 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 4
  %132 = select i1 %130, %"class.quic::QuicSession::Visitor"* null, %"class.quic::QuicSession::Visitor"* %131
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %2, %"class.url::Origin"* dereferenceable(80) %120) #15
  %133 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 1
  %134 = select i1 %130, %"class.quic::WebTransportVisitor"* null, %"class.quic::WebTransportVisitor"* %133
  call void @_ZN4quic26QuicTransportClientSessionC1EPNS_14QuicConnectionEPNS_11QuicSession7VisitorERKNS_10QuicConfigERKNSt3__16vectorINS_17ParsedQuicVersionENS9_9allocatorISB_EEEERK4GURLPNS_22QuicCryptoClientConfigEN3url6OriginEPNS_19WebTransportVisitorENS9_10unique_ptrINS_17QuicDatagramQueue8ObserverENS9_14default_deleteISS_EEEE(%"class.quic::QuicTransportClientSession"* nonnull %129, %"class.quic::QuicConnection"* %114, %"class.quic::QuicSession::Visitor"* %132, %"class.quic::QuicConfig"* nonnull dereferenceable(1112) %11, %"class.std::__1::vector.202"* dereferenceable(24) %95, %class.GURL* dereferenceable(120) %118, %"class.quic::QuicCryptoClientConfig"* %119, %"class.url::Origin"* nonnull %2, %"class.quic::WebTransportVisitor"* %134, i64 %126) #15
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %127)
  %135 = ptrtoint i8* %128 to i64
  %136 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %23, align 8
  %137 = bitcast %"class.std::__1::unique_ptr.577"* %22 to i64*
  store i64 %135, i64* %137, align 8
  %138 = icmp eq %"class.quic::QuicTransportClientSession"* %136, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %109
  %140 = bitcast %"class.quic::QuicTransportClientSession"* %136 to void (%"class.quic::QuicTransportClientSession"*)***
  %141 = load void (%"class.quic::QuicTransportClientSession"*)**, void (%"class.quic::QuicTransportClientSession"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.quic::QuicTransportClientSession"*)*, void (%"class.quic::QuicTransportClientSession"*)** %141, i64 1
  %143 = load void (%"class.quic::QuicTransportClientSession"*)*, void (%"class.quic::QuicTransportClientSession"*)** %142, align 8
  call void %143(%"class.quic::QuicTransportClientSession"* nonnull %136) #15
  br label %144

144:                                              ; preds = %109, %139
  call void @_ZN4quic10QuicConfigD1Ev(%"class.quic::QuicConfig"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 1112, i8* nonnull %115) #15
  %145 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %91, align 8
  %146 = load %"class.net::QuicContext"*, %"class.net::QuicContext"** %58, align 8
  %147 = getelementptr inbounds %"class.net::QuicContext", %"class.net::QuicContext"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicConnectionHelperInterface"** %147, align 8
  %149 = bitcast %"class.quic::QuicConnectionHelperInterface"* %148 to %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)***
  %150 = load %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)**, %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)*** %149, align 8
  %151 = getelementptr inbounds %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)** %150, i64 2
  %152 = load %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)*, %"class.quic::QuicClock"* (%"class.quic::QuicConnectionHelperInterface"*)** %151, align 8
  %153 = call %"class.quic::QuicClock"* %152(%"class.quic::QuicConnectionHelperInterface"* %148) #15
  %154 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 12
  %155 = call i8* @_Znwm(i64 112) #16
  %156 = bitcast i8* %155 to %"class.net::QuicChromiumPacketReader"*
  %157 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 2
  %158 = select i1 %130, %"class.net::QuicChromiumPacketReader::Visitor"* null, %"class.net::QuicChromiumPacketReader::Visitor"* %157
  call void @_ZN3net24QuicChromiumPacketReaderC1EPNS_20DatagramClientSocketEPKN4quic9QuicClockEPNS0_7VisitorEiNS3_8QuicTime5DeltaERKNS_16NetLogWithSourceE(%"class.net::QuicChromiumPacketReader"* nonnull %156, %"class.net::DatagramClientSocket"* %145, %"class.quic::QuicClock"* %153, %"class.net::QuicChromiumPacketReader::Visitor"* %158, i32 32, i64 2000, %"class.net::NetLogWithSource"* dereferenceable(24) %154) #15
  %159 = ptrtoint i8* %155 to i64
  %160 = load %"class.net::QuicChromiumPacketReader"*, %"class.net::QuicChromiumPacketReader"** %13, align 8
  %161 = bitcast %"class.std::__1::unique_ptr.770"* %12 to i64*
  store i64 %159, i64* %161, align 8
  %162 = icmp eq %"class.net::QuicChromiumPacketReader"* %160, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %144
  %164 = bitcast %"class.net::QuicChromiumPacketReader"* %160 to void (%"class.net::QuicChromiumPacketReader"*)***
  %165 = load void (%"class.net::QuicChromiumPacketReader"*)**, void (%"class.net::QuicChromiumPacketReader"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %165, i64 1
  %167 = load void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %166, align 8
  call void %167(%"class.net::QuicChromiumPacketReader"* nonnull %160) #15
  br label %168

168:                                              ; preds = %163, %144
  %169 = bitcast %"class.std::__1::unique_ptr.577"* %22 to %"class.quic::QuicSession"**
  %170 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %169, align 8
  %171 = call i8* @_Znwm(i64 72) #16
  %172 = bitcast i8* %171 to %"class.net::QuicEventLogger"*
  call void @_ZN3net15QuicEventLoggerC1EPN4quic11QuicSessionERKNS_16NetLogWithSourceE(%"class.net::QuicEventLogger"* nonnull %172, %"class.quic::QuicSession"* %170, %"class.net::NetLogWithSource"* dereferenceable(24) %154) #15
  %173 = ptrtoint i8* %171 to i64
  %174 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 28
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %174, i64 0, i32 0, i32 0, i32 0
  %176 = load %"class.net::QuicEventLogger"*, %"class.net::QuicEventLogger"** %175, align 8
  %177 = bitcast %"class.std::__1::unique_ptr.778"* %174 to i64*
  store i64 %173, i64* %177, align 8
  %178 = icmp eq %"class.net::QuicEventLogger"* %176, null
  %179 = bitcast i8* %171 to %"class.net::QuicEventLogger"*
  br i1 %178, label %186, label %180

180:                                              ; preds = %168
  %181 = bitcast %"class.net::QuicEventLogger"* %176 to void (%"class.net::QuicEventLogger"*)***
  %182 = load void (%"class.net::QuicEventLogger"*)**, void (%"class.net::QuicEventLogger"*)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.net::QuicEventLogger"*)*, void (%"class.net::QuicEventLogger"*)** %182, i64 1
  %184 = load void (%"class.net::QuicEventLogger"*)*, void (%"class.net::QuicEventLogger"*)** %183, align 8
  call void %184(%"class.net::QuicEventLogger"* nonnull %176) #15
  %185 = load %"class.net::QuicEventLogger"*, %"class.net::QuicEventLogger"** %175, align 8
  br label %186

186:                                              ; preds = %180, %168
  %187 = phi %"class.net::QuicEventLogger"* [ %185, %180 ], [ %179, %168 ]
  %188 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %33, align 8
  %189 = getelementptr inbounds %"class.net::QuicEventLogger", %"class.net::QuicEventLogger"* %187, i64 0, i32 0
  %190 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %188, i64 0, i32 77
  store %"class.quic::QuicConnectionDebugVisitor"* %189, %"class.quic::QuicConnectionDebugVisitor"** %190, align 8
  %191 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %188, i64 0, i32 80
  %192 = getelementptr inbounds %"class.net::QuicEventLogger", %"class.net::QuicEventLogger"* %187, i64 0, i32 0, i32 0
  call void @_ZN4quic21QuicSentPacketManager16SetDebugDelegateEPNS0_13DebugDelegateE(%"class.quic::QuicSentPacketManager"* %191, %"class.quic::QuicSentPacketManager::DebugDelegate"* %192) #15
  %193 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %33, align 8
  %194 = load %"class.net::QuicEventLogger"*, %"class.net::QuicEventLogger"** %175, align 8
  %195 = icmp eq %"class.net::QuicEventLogger"* %194, null
  %196 = getelementptr inbounds %"class.net::QuicEventLogger", %"class.net::QuicEventLogger"* %194, i64 0, i32 1
  %197 = select i1 %195, %"class.quic::QuicPacketCreator::DebugDelegate"* null, %"class.quic::QuicPacketCreator::DebugDelegate"* %196
  %198 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %193, i64 0, i32 78, i32 1
  store %"class.quic::QuicPacketCreator::DebugDelegate"* %197, %"class.quic::QuicPacketCreator::DebugDelegate"** %198, align 8
  %199 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %23, align 8
  %200 = bitcast %"class.quic::QuicTransportClientSession"* %199 to %"class.quic::QuicSession"*
  %201 = bitcast %"class.quic::QuicTransportClientSession"* %199 to void (%"class.quic::QuicSession"*)***
  %202 = load void (%"class.quic::QuicSession"*)**, void (%"class.quic::QuicSession"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.quic::QuicSession"*)*, void (%"class.quic::QuicSession"*)** %202, i64 46
  %204 = load void (%"class.quic::QuicSession"*)*, void (%"class.quic::QuicSession"*)** %203, align 8
  call void %204(%"class.quic::QuicSession"* %200) #15
  %205 = load %"class.net::QuicChromiumPacketReader"*, %"class.net::QuicChromiumPacketReader"** %13, align 8
  call void @_ZN3net24QuicChromiumPacketReader12StartReadingEv(%"class.net::QuicChromiumPacketReader"* %205) #15
  %206 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %23, align 8
  %207 = getelementptr inbounds %"class.quic::QuicTransportClientSession", %"class.quic::QuicTransportClientSession"* %206, i64 0, i32 4, i32 0, i32 0, i32 0
  %208 = load %"class.quic::QuicCryptoClientStream"*, %"class.quic::QuicCryptoClientStream"** %207, align 8
  %209 = bitcast %"class.quic::QuicCryptoClientStream"* %208 to i1 (%"class.quic::QuicCryptoClientStream"*)***
  %210 = load i1 (%"class.quic::QuicCryptoClientStream"*)**, i1 (%"class.quic::QuicCryptoClientStream"*)*** %209, align 8
  %211 = getelementptr inbounds i1 (%"class.quic::QuicCryptoClientStream"*)*, i1 (%"class.quic::QuicCryptoClientStream"*)** %210, i64 50
  %212 = load i1 (%"class.quic::QuicCryptoClientStream"*)*, i1 (%"class.quic::QuicCryptoClientStream"*)** %211, align 8
  %213 = call zeroext i1 %212(%"class.quic::QuicCryptoClientStream"* %208) #15
  call void @_ZN4quic16QuicConnectionIdD1Ev(%"class.quic::QuicConnectionId"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #15
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %42) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

declare void @_ZN4quic9QuicUtils24CreateRandomConnectionIdEPNS_10QuicRandomE(%"class.quic::QuicConnectionId"* sret, %"class.quic::QuicRandom"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN3net24QuicChromiumPacketWriterC1EPNS_20DatagramClientSocketEPN4base19SequencedTaskRunnerE(%"class.net::QuicChromiumPacketWriter"*, %"class.net::DatagramClientSocket"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #1

declare void @_ZN4quic14QuicConnection18SetMaxPacketLengthEm(%"class.quic::QuicConnection"*, i64) local_unnamed_addr #1

declare void @_ZN3net20InitializeQuicConfigERKNS_10QuicParamsE(%"class.quic::QuicConfig"* sret, %"struct.net::QuicParams"* dereferenceable(240)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic10QuicConfigD1Ev(%"class.quic::QuicConfig"*) unnamed_addr #3

declare void @_ZN3net24QuicChromiumPacketReader12StartReadingEv(%"class.net::QuicChromiumPacketReader"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic16QuicConnectionIdD1Ev(%"class.quic::QuicConnectionId"*) unnamed_addr #3

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN3net13ErrorToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient14OnSessionReadyEv(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net19QuicTransportClient6DoLoopEi(%"class.net::QuicTransportClient"* %0, i32 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net19QuicTransportClient14OnSessionReadyEv(%"class.net::QuicTransportClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::QuicTransportClient"*
  tail call void @_ZN3net19QuicTransportClient6DoLoopEi(%"class.net::QuicTransportClient"* %3, i32 0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient38OnIncomingBidirectionalStreamAvailableEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %3 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %2, align 8
  %4 = bitcast %"class.net::WebTransportClientVisitor"* %3 to void (%"class.net::WebTransportClientVisitor"*)***
  %5 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %5, i64 6
  %7 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %6, align 8
  tail call void %7(%"class.net::WebTransportClientVisitor"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net19QuicTransportClient38OnIncomingBidirectionalStreamAvailableEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 54
  %4 = bitcast i64* %3 to %"class.net::WebTransportClientVisitor"**
  %5 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %4, align 8
  %6 = bitcast %"class.net::WebTransportClientVisitor"* %5 to void (%"class.net::WebTransportClientVisitor"*)***
  %7 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %7, i64 6
  %9 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %8, align 8
  tail call void %9(%"class.net::WebTransportClientVisitor"* %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient39OnIncomingUnidirectionalStreamAvailableEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %3 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %2, align 8
  %4 = bitcast %"class.net::WebTransportClientVisitor"* %3 to void (%"class.net::WebTransportClientVisitor"*)***
  %5 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %5, i64 7
  %7 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %6, align 8
  tail call void %7(%"class.net::WebTransportClientVisitor"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net19QuicTransportClient39OnIncomingUnidirectionalStreamAvailableEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 54
  %4 = bitcast i64* %3 to %"class.net::WebTransportClientVisitor"**
  %5 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %4, align 8
  %6 = bitcast %"class.net::WebTransportClientVisitor"* %5 to void (%"class.net::WebTransportClientVisitor"*)***
  %7 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %7, i64 7
  %9 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %8, align 8
  tail call void %9(%"class.net::WebTransportClientVisitor"* %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient18OnDatagramReceivedEN4absl11string_viewE(%"class.net::QuicTransportClient"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %5 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %4, align 8
  %6 = bitcast %"class.net::WebTransportClientVisitor"* %5 to void (%"class.net::WebTransportClientVisitor"*, i8*, i64)***
  %7 = load void (%"class.net::WebTransportClientVisitor"*, i8*, i64)**, void (%"class.net::WebTransportClientVisitor"*, i8*, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*, i8*, i64)*, void (%"class.net::WebTransportClientVisitor"*, i8*, i64)** %7, i64 8
  %9 = load void (%"class.net::WebTransportClientVisitor"*, i8*, i64)*, void (%"class.net::WebTransportClientVisitor"*, i8*, i64)** %8, align 8
  tail call void %9(%"class.net::WebTransportClientVisitor"* %5, i8* %1, i64 %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net19QuicTransportClient18OnDatagramReceivedEN4absl11string_viewE(%"class.net::QuicTransportClient"* nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29, i32 0, i32 1
  %5 = getelementptr inbounds i64, i64* %4, i64 54
  %6 = bitcast i64* %5 to %"class.net::WebTransportClientVisitor"**
  %7 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %6, align 8
  %8 = bitcast %"class.net::WebTransportClientVisitor"* %7 to void (%"class.net::WebTransportClientVisitor"*, i8*, i64)***
  %9 = load void (%"class.net::WebTransportClientVisitor"*, i8*, i64)**, void (%"class.net::WebTransportClientVisitor"*, i8*, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*, i8*, i64)*, void (%"class.net::WebTransportClientVisitor"*, i8*, i64)** %9, i64 8
  %11 = load void (%"class.net::WebTransportClientVisitor"*, i8*, i64)*, void (%"class.net::WebTransportClientVisitor"*, i8*, i64)** %10, align 8
  tail call void %11(%"class.net::WebTransportClientVisitor"* %7, i8* %1, i64 %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient41OnCanCreateNewOutgoingBidirectionalStreamEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %3 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %2, align 8
  %4 = bitcast %"class.net::WebTransportClientVisitor"* %3 to void (%"class.net::WebTransportClientVisitor"*)***
  %5 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %5, i64 9
  %7 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %6, align 8
  tail call void %7(%"class.net::WebTransportClientVisitor"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net19QuicTransportClient41OnCanCreateNewOutgoingBidirectionalStreamEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 54
  %4 = bitcast i64* %3 to %"class.net::WebTransportClientVisitor"**
  %5 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %4, align 8
  %6 = bitcast %"class.net::WebTransportClientVisitor"* %5 to void (%"class.net::WebTransportClientVisitor"*)***
  %7 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %7, i64 9
  %9 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %8, align 8
  tail call void %9(%"class.net::WebTransportClientVisitor"* %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient42OnCanCreateNewOutgoingUnidirectionalStreamEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %3 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %2, align 8
  %4 = bitcast %"class.net::WebTransportClientVisitor"* %3 to void (%"class.net::WebTransportClientVisitor"*)***
  %5 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %5, i64 10
  %7 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %6, align 8
  tail call void %7(%"class.net::WebTransportClientVisitor"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net19QuicTransportClient42OnCanCreateNewOutgoingUnidirectionalStreamEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 54
  %4 = bitcast i64* %3 to %"class.net::WebTransportClientVisitor"**
  %5 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %4, align 8
  %6 = bitcast %"class.net::WebTransportClientVisitor"* %5 to void (%"class.net::WebTransportClientVisitor"*)***
  %7 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %7, i64 10
  %9 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %8, align 8
  tail call void %9(%"class.net::WebTransportClientVisitor"* %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19QuicTransportClient11OnReadErrorEiPKNS_20DatagramClientSocketE(%"class.net::QuicTransportClient"* nocapture, i32, %"class.net::DatagramClientSocket"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %7 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #15
  call void @_ZN3net13ErrorToStringEi(%"class.std::__1::basic_string"* nonnull sret %4, i32 %1) #15
  %9 = bitcast %"class.quic::QuicConnection"* %7 to void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)***
  %10 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)**, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %10, i64 55
  %12 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %11, align 8
  call void %12(%"class.quic::QuicConnection"* %7, i32 51, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 0) #15
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %3, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #15
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn16_N3net19QuicTransportClient11OnReadErrorEiPKNS_20DatagramClientSocketE(%"class.net::QuicTransportClient"* nocapture, i32, %"class.net::DatagramClientSocket"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29
  %6 = getelementptr inbounds %"class.base::WeakPtrFactory.784", %"class.base::WeakPtrFactory.784"* %5, i64 48
  %7 = bitcast %"class.base::WeakPtrFactory.784"* %6 to i32*
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.base::WeakPtrFactory.784", %"class.base::WeakPtrFactory.784"* %5, i64 57
  %9 = bitcast %"class.base::WeakPtrFactory.784"* %8 to %"class.quic::QuicConnection"**
  %10 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #15
  call void @_ZN3net13ErrorToStringEi(%"class.std::__1::basic_string"* nonnull sret %4, i32 %1) #15
  %12 = bitcast %"class.quic::QuicConnection"* %10 to void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)***
  %13 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)**, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %13, i64 55
  %15 = load void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)*, void (%"class.quic::QuicConnection"*, i32, %"class.std::__1::basic_string"*, i32)** %14, align 8
  call void %15(%"class.quic::QuicConnection"* %10, i32 51, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 0) #15
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #16
  br label %23

23:                                               ; preds = %3, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #15
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19QuicTransportClient8OnPacketERKN4quic18QuicReceivedPacketERKNS1_17QuicSocketAddressES7_(%"class.net::QuicTransportClient"* nocapture readonly, %"class.quic::QuicReceivedPacket"* dereferenceable(64), %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %6 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %5, align 8
  %7 = bitcast %"class.quic::QuicTransportClientSession"* %6 to %"class.quic::QuicSession"*
  %8 = bitcast %"class.quic::QuicTransportClientSession"* %6 to void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)***
  %9 = load void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)**, void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)*, void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)** %9, i64 59
  %11 = load void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)*, void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)** %10, align 8
  tail call void %11(%"class.quic::QuicSession"* %7, %"class.quic::QuicSocketAddress"* dereferenceable(24) %2, %"class.quic::QuicSocketAddress"* dereferenceable(24) %3, %"class.quic::QuicReceivedPacket"* dereferenceable(64) %1) #15
  %12 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %13 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %12, align 8
  %14 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %13, i64 0, i32 83
  %15 = load i8, i8* %14, align 2, !range !5
  %16 = icmp ne i8 %15, 0
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn16_N3net19QuicTransportClient8OnPacketERKN4quic18QuicReceivedPacketERKNS1_17QuicSocketAddressES7_(%"class.net::QuicTransportClient"* nocapture readonly, %"class.quic::QuicReceivedPacket"* dereferenceable(64), %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 29
  %6 = getelementptr inbounds %"class.base::WeakPtrFactory.784", %"class.base::WeakPtrFactory.784"* %5, i64 57, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.quic::QuicTransportClientSession"**
  %8 = load %"class.quic::QuicTransportClientSession"*, %"class.quic::QuicTransportClientSession"** %7, align 8
  %9 = bitcast %"class.quic::QuicTransportClientSession"* %8 to %"class.quic::QuicSession"*
  %10 = bitcast %"class.quic::QuicTransportClientSession"* %8 to void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)***
  %11 = load void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)**, void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)*, void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)** %11, i64 59
  %13 = load void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)*, void (%"class.quic::QuicSession"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicReceivedPacket"*)** %12, align 8
  tail call void %13(%"class.quic::QuicSession"* %9, %"class.quic::QuicSocketAddress"* dereferenceable(24) %2, %"class.quic::QuicSocketAddress"* dereferenceable(24) %3, %"class.quic::QuicReceivedPacket"* dereferenceable(64) %1) #15
  %14 = getelementptr inbounds %"class.base::WeakPtrFactory.784", %"class.base::WeakPtrFactory.784"* %5, i64 57
  %15 = bitcast %"class.base::WeakPtrFactory.784"* %14 to %"class.quic::QuicConnection"**
  %16 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %15, align 8
  %17 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %16, i64 0, i32 83
  %18 = load i8, i8* %17, align 2, !range !5
  %19 = icmp ne i8 %18, 0
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net19QuicTransportClient16HandleWriteErrorEi13scoped_refptrINS_24QuicChromiumPacketWriter16ReusableIOBufferEE(%"class.net::QuicTransportClient"* nocapture readnone, i32 returned, %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"* %2, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer", %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe.417"* %11 to %"class.net::IOBuffer"*
  %13 = bitcast %"class.base::RefCountedThreadSafe.417"* %11 to void (%"class.net::IOBuffer"*)***
  %14 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %14, i64 1
  %16 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %15, align 8
  tail call void %16(%"class.net::IOBuffer"* nonnull %12) #15
  br label %17

17:                                               ; preds = %3, %5, %10
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn24_N3net19QuicTransportClient16HandleWriteErrorEi13scoped_refptrINS_24QuicChromiumPacketWriter16ReusableIOBufferEE(%"class.net::QuicTransportClient"* nocapture readnone, i32 returned, %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"* %2, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer", %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe.417", %"class.base::RefCountedThreadSafe.417"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe.417"* %11 to %"class.net::IOBuffer"*
  %13 = bitcast %"class.base::RefCountedThreadSafe.417"* %11 to void (%"class.net::IOBuffer"*)***
  %14 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %14, i64 1
  %16 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %15, align 8
  tail call void %16(%"class.net::IOBuffer"* nonnull %12) #15
  br label %17

17:                                               ; preds = %3, %5, %10
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient12OnWriteErrorEi(%"class.net::QuicTransportClient"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %5 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %4, align 8
  tail call void @_ZN4quic14QuicConnection12OnWriteErrorEi(%"class.quic::QuicConnection"* %5, i32 %1) #15
  ret void
}

declare void @_ZN4quic14QuicConnection12OnWriteErrorEi(%"class.quic::QuicConnection"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N3net19QuicTransportClient12OnWriteErrorEi(%"class.net::QuicTransportClient"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 28
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %3, i64 96
  %5 = bitcast %"class.std::__1::unique_ptr.778"* %4 to i32*
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %3, i64 114
  %7 = bitcast %"class.std::__1::unique_ptr.778"* %6 to %"class.quic::QuicConnection"**
  %8 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %7, align 8
  tail call void @_ZN4quic14QuicConnection12OnWriteErrorEi(%"class.quic::QuicConnection"* %8, i32 %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient16OnWriteUnblockedEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %2, align 8
  %4 = bitcast %"class.quic::QuicConnection"* %3 to void (%"class.quic::QuicConnection"*)***
  %5 = load void (%"class.quic::QuicConnection"*)**, void (%"class.quic::QuicConnection"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.quic::QuicConnection"*)*, void (%"class.quic::QuicConnection"*)** %5, i64 60
  %7 = load void (%"class.quic::QuicConnection"*)*, void (%"class.quic::QuicConnection"*)** %6, align 8
  tail call void %7(%"class.quic::QuicConnection"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N3net19QuicTransportClient16OnWriteUnblockedEv(%"class.net::QuicTransportClient"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 28
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %2, i64 114
  %4 = bitcast %"class.std::__1::unique_ptr.778"* %3 to %"class.quic::QuicConnection"**
  %5 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %4, align 8
  %6 = bitcast %"class.quic::QuicConnection"* %5 to void (%"class.quic::QuicConnection"*)***
  %7 = load void (%"class.quic::QuicConnection"*)**, void (%"class.quic::QuicConnection"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.quic::QuicConnection"*)*, void (%"class.quic::QuicConnection"*)** %7, i64 60
  %9 = load void (%"class.quic::QuicConnection"*)*, void (%"class.quic::QuicConnection"*)** %8, align 8
  tail call void %9(%"class.quic::QuicConnection"* %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient18OnConnectionClosedEN4quic16QuicConnectionIdENS1_13QuicErrorCodeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_21ConnectionCloseSourceE(%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"* nocapture readnone, i32, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::internal::WeakReference", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 20
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %157

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %16 = bitcast %"class.quic::QuicTransportClientSession"** %15 to %"class.quic::QuicSession"**
  %17 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %16, align 8
  %18 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %17, i64 0, i32 23, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 20
  br i1 %20, label %21, label %157

21:                                               ; preds = %14
  store i8 1, i8* %11, align 8
  %22 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 14, i32 0, i32 0
  %23 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %22, align 8
  %24 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 14, i32 0, i32 1
  %25 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %24, align 8
  %26 = icmp eq %"struct.quic::ParsedQuicVersion"* %23, %25
  br i1 %26, label %62, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %17, i64 0, i32 8
  %29 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %28, align 8
  %30 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %29, i64 0, i32 91, i32 0, i32 0
  %31 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %30, align 8
  %32 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %29, i64 0, i32 91, i32 0, i32 1
  %33 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %32, align 8
  %34 = icmp eq %"struct.quic::ParsedQuicVersion"* %31, %33
  br label %35

35:                                               ; preds = %57, %27
  %36 = phi %"struct.quic::ParsedQuicVersion"* [ %23, %27 ], [ %58, %57 ]
  br i1 %34, label %54, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %36, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %36, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %51, %37
  %43 = phi %"struct.quic::ParsedQuicVersion"* [ %31, %37 ], [ %52, %51 ]
  %44 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %39
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %43, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %41
  br i1 %50, label %54, label %51

51:                                               ; preds = %47, %42
  %52 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %43, i64 1
  %53 = icmp eq %"struct.quic::ParsedQuicVersion"* %52, %33
  br i1 %53, label %62, label %42

54:                                               ; preds = %47, %35
  %55 = phi %"struct.quic::ParsedQuicVersion"* [ %31, %35 ], [ %43, %47 ]
  %56 = icmp eq %"struct.quic::ParsedQuicVersion"* %55, %33
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %36, i64 1
  %59 = icmp eq %"struct.quic::ParsedQuicVersion"* %58, %25
  br i1 %59, label %60, label %35

60:                                               ; preds = %57
  %61 = ptrtoint %"struct.quic::ParsedQuicVersion"* %25 to i64
  br label %122

62:                                               ; preds = %54, %51, %21
  %63 = phi %"struct.quic::ParsedQuicVersion"* [ %23, %21 ], [ %36, %51 ], [ %36, %54 ]
  %64 = ptrtoint %"struct.quic::ParsedQuicVersion"* %63 to i64
  %65 = icmp eq %"struct.quic::ParsedQuicVersion"* %63, %25
  br i1 %65, label %122, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %63, i64 1
  %68 = icmp eq %"struct.quic::ParsedQuicVersion"* %67, %25
  br i1 %68, label %122, label %69

69:                                               ; preds = %66, %118
  %70 = phi %"class.quic::QuicSession"* [ %119, %118 ], [ %17, %66 ]
  %71 = phi %"struct.quic::ParsedQuicVersion"* [ %116, %118 ], [ %67, %66 ]
  %72 = phi %"struct.quic::ParsedQuicVersion"* [ %71, %118 ], [ %63, %66 ]
  %73 = phi i64 [ %115, %118 ], [ %64, %66 ]
  %74 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %70, i64 0, i32 8
  %75 = load %"class.quic::QuicConnection"*, %"class.quic::QuicConnection"** %74, align 8
  %76 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %75, i64 0, i32 91, i32 0, i32 0
  %77 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %76, align 8
  %78 = getelementptr inbounds %"class.quic::QuicConnection", %"class.quic::QuicConnection"* %75, i64 0, i32 91, i32 0, i32 1
  %79 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %78, align 8
  %80 = icmp eq %"struct.quic::ParsedQuicVersion"* %77, %79
  br i1 %80, label %98, label %81

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %71, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %72, i64 1, i32 1
  %85 = load i32, i32* %84, align 4
  br label %86

86:                                               ; preds = %95, %81
  %87 = phi %"struct.quic::ParsedQuicVersion"* [ %77, %81 ], [ %96, %95 ]
  %88 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, %83
  br i1 %90, label %91, label %95

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %87, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %85
  br i1 %94, label %98, label %95

95:                                               ; preds = %91, %86
  %96 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %87, i64 1
  %97 = icmp eq %"struct.quic::ParsedQuicVersion"* %96, %79
  br i1 %97, label %114, label %86

98:                                               ; preds = %91, %69
  %99 = phi %"struct.quic::ParsedQuicVersion"* [ %77, %69 ], [ %87, %91 ]
  %100 = icmp eq %"struct.quic::ParsedQuicVersion"* %99, %79
  br i1 %100, label %114, label %101

101:                                              ; preds = %98
  %102 = inttoptr i64 %73 to %"struct.quic::ParsedQuicVersion"*
  %103 = icmp eq %"struct.quic::ParsedQuicVersion"* %71, %102
  br i1 %103, label %111, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %71, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %102, i64 0, i32 0
  store i32 %106, i32* %107, align 4
  %108 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %72, i64 1, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %102, i64 0, i32 1
  store i32 %109, i32* %110, align 4
  br label %111

111:                                              ; preds = %104, %101
  %112 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %102, i64 1
  %113 = ptrtoint %"struct.quic::ParsedQuicVersion"* %112 to i64
  br label %114

114:                                              ; preds = %95, %111, %98
  %115 = phi i64 [ %73, %98 ], [ %113, %111 ], [ %73, %95 ]
  %116 = getelementptr inbounds %"struct.quic::ParsedQuicVersion", %"struct.quic::ParsedQuicVersion"* %71, i64 1
  %117 = icmp eq %"struct.quic::ParsedQuicVersion"* %116, %25
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = load %"class.quic::QuicSession"*, %"class.quic::QuicSession"** %16, align 8
  br label %69

120:                                              ; preds = %114
  %121 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %24, align 8
  br label %122

122:                                              ; preds = %120, %66, %62, %60
  %123 = phi %"struct.quic::ParsedQuicVersion"* [ %25, %62 ], [ %25, %60 ], [ %25, %66 ], [ %121, %120 ]
  %124 = phi i64 [ %64, %62 ], [ %61, %60 ], [ %64, %66 ], [ %115, %120 ]
  %125 = inttoptr i64 %124 to %"struct.quic::ParsedQuicVersion"*
  %126 = icmp eq %"struct.quic::ParsedQuicVersion"* %123, %125
  br i1 %126, label %128, label %127

127:                                              ; preds = %122
  store %"struct.quic::ParsedQuicVersion"* %125, %"struct.quic::ParsedQuicVersion"** %24, align 8
  br label %128

128:                                              ; preds = %122, %127
  %129 = phi %"struct.quic::ParsedQuicVersion"* [ %123, %122 ], [ %125, %127 ]
  %130 = load %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"** %22, align 8
  %131 = icmp eq %"struct.quic::ParsedQuicVersion"* %130, %129
  br i1 %131, label %157, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 13
  %134 = bitcast %"class.base::SequencedTaskRunner"** %133 to %"class.base::TaskRunner"**
  %135 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %134, align 8
  %136 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %136) #15
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0), i32 449) #15
  %137 = bitcast %"class.base::WeakPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #15
  %138 = bitcast %"class.base::internal::WeakReference"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #15, !noalias !25
  %139 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 29, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %6, %"class.base::internal::WeakReferenceOwner"* %139) #15, !noalias !25
  %140 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 29, i32 0, i32 1
  %141 = load i64, i64* %140, align 8, !noalias !25
  %142 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %142, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %6, i64 %141) #15
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #15, !noalias !25
  %143 = call i8* @_Znwm(i64 64) #16, !noalias !28
  %144 = bitcast i8* %143 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %144, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #15, !noalias !28
  %145 = getelementptr inbounds i8, i8* %143, i64 32
  %146 = bitcast i8* %145 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::QuicTransportClient"*)* @_ZN3net19QuicTransportClient16CreateConnectionEv to i64), i64 0>, <2 x i64>* %146, align 8, !noalias !28
  %147 = getelementptr inbounds i8, i8* %143, i64 48
  %148 = bitcast i8* %147 to %"class.base::internal::WeakReference"*
  %149 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %148, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %149) #15, !noalias !28
  %150 = getelementptr inbounds i8, i8* %143, i64 56
  %151 = bitcast i8* %150 to i64*
  %152 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 1
  %153 = load i64, i64* %152, align 8, !noalias !28
  store i64 %153, i64* %151, align 8, !noalias !28
  %154 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %143, i8** %154, align 8, !alias.scope !28
  %155 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %135, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %8) #15
  %156 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %156) #15
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %142) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %136) #15
  br label %226

157:                                              ; preds = %5, %128, %14
  %158 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #15
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 0, i64 24, i1 false) #15
  switch i32 %4, label %164 [
    i32 1, label %161
    i32 0, label %160
  ]

160:                                              ; preds = %157
  br label %161

161:                                              ; preds = %157, %160
  %162 = phi i8* [ getelementptr inbounds ([50 x i8], [50 x i8]* @.str.8, i64 0, i64 0), %160 ], [ getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7, i64 0, i64 0), %157 ]
  %163 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %162, i64 49) #15
  br label %164

164:                                              ; preds = %161, %157
  call void @_ZN4base18UmaHistogramSparseERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i32 %2) #15
  %165 = icmp eq i32 %2, 0
  br i1 %165, label %166, label %174

166:                                              ; preds = %164
  %167 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 17
  store i32 3, i32* %167, align 8
  %168 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 9
  %169 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %168, align 8
  %170 = bitcast %"class.net::WebTransportClientVisitor"* %169 to void (%"class.net::WebTransportClientVisitor"*)***
  %171 = load void (%"class.net::WebTransportClientVisitor"*)**, void (%"class.net::WebTransportClientVisitor"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %171, i64 4
  %173 = load void (%"class.net::WebTransportClientVisitor"*)*, void (%"class.net::WebTransportClientVisitor"*)** %172, align 8
  call void %173(%"class.net::WebTransportClientVisitor"* %169) #15
  br label %218

174:                                              ; preds = %164
  %175 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 0
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %174
  store i32 -356, i32* %175, align 8
  br label %179

179:                                              ; preds = %178, %174
  %180 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 1
  store i32 %2, i32* %180, align 4
  %181 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 19, i32 2
  %182 = icmp eq %"class.std::__1::basic_string"* %181, %3
  br i1 %182, label %212, label %183

183:                                              ; preds = %179
  %184 = bitcast %"class.std::__1::basic_string"* %181 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  %188 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %188, i64 0, i32 1, i32 0
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %187, label %202, label %192

192:                                              ; preds = %183
  br i1 %191, label %196, label %193

193:                                              ; preds = %192
  %194 = bitcast %"class.std::__1::basic_string"* %181 to i8*
  %195 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 8 %195, i64 24, i1 false) #15
  br label %212

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8
  %201 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %181, i8* %198, i64 %200) #15
  br label %212

202:                                              ; preds = %183
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %208 = zext i8 %190 to i64
  %209 = select i1 %191, i8* %204, i8* %207
  %210 = select i1 %191, i64 %206, i64 %208
  %211 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %181, i8* %209, i64 %210) #15
  br label %212

212:                                              ; preds = %179, %193, %196, %202
  %213 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 0, i32 17
  %214 = load i32, i32* %213, align 8
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %216, label %217

216:                                              ; preds = %212
  call void @_ZN3net19QuicTransportClient6DoLoopEi(%"class.net::QuicTransportClient"* %0, i32 0)
  br label %218

217:                                              ; preds = %212
  call void @_ZN3net19QuicTransportClient17TransitionToStateENS_17WebTransportStateE(%"class.net::QuicTransportClient"* %0, i32 4)
  br label %218

218:                                              ; preds = %217, %216, %166
  %219 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %225

223:                                              ; preds = %218
  %224 = load i8*, i8** %159, align 8
  call void @_ZdlPv(i8* %224) #16
  br label %225

225:                                              ; preds = %218, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #15
  br label %226

226:                                              ; preds = %225, %132
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare void @_ZN4base18UmaHistogramSparseERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N3net19QuicTransportClient18OnConnectionClosedEN4quic16QuicConnectionIdENS1_13QuicErrorCodeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_21ConnectionCloseSourceE(%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"* nocapture readnone, i32, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %0, i64 -1, i32 27
  %7 = bitcast %"class.std::__1::unique_ptr.770"* %6 to %"class.net::QuicTransportClient"*
  tail call void @_ZN3net19QuicTransportClient18OnConnectionClosedEN4quic16QuicConnectionIdENS1_13QuicErrorCodeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_21ConnectionCloseSourceE(%"class.net::QuicTransportClient"* %7, %"class.quic::QuicConnectionId"* undef, i32 %2, %"class.std::__1::basic_string"* dereferenceable(24) %3, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net19QuicTransportClient21DatagramObserverProxy19OnDatagramProcessedEN4absl8optionalIN4quic13MessageStatusEEE(%"class.net::QuicTransportClient::DatagramObserverProxy"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = trunc i64 %1 to i8
  %4 = and i64 %1, -4294967296
  %5 = getelementptr inbounds %"class.net::QuicTransportClient::DatagramObserverProxy", %"class.net::QuicTransportClient::DatagramObserverProxy"* %0, i64 0, i32 1
  %6 = load %"class.net::QuicTransportClient"*, %"class.net::QuicTransportClient"** %5, align 8
  %7 = getelementptr inbounds %"class.net::QuicTransportClient", %"class.net::QuicTransportClient"* %6, i64 0, i32 9
  %8 = load %"class.net::WebTransportClientVisitor"*, %"class.net::WebTransportClientVisitor"** %7, align 8
  %9 = icmp ne i8 %3, 0
  %10 = zext i1 %9 to i64
  %11 = or i64 %4, %10
  %12 = bitcast %"class.net::WebTransportClientVisitor"* %8 to void (%"class.net::WebTransportClientVisitor"*, i64)***
  %13 = load void (%"class.net::WebTransportClientVisitor"*, i64)**, void (%"class.net::WebTransportClientVisitor"*, i64)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.net::WebTransportClientVisitor"*, i64)*, void (%"class.net::WebTransportClientVisitor"*, i64)** %13, i64 11
  %15 = load void (%"class.net::WebTransportClientVisitor"*, i64)*, void (%"class.net::WebTransportClientVisitor"*, i64)** %14, align 8
  tail call void %15(%"class.net::WebTransportClientVisitor"* %8, i64 %11) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic17QuicDatagramQueue8ObserverD2Ev(%"class.quic::QuicDatagramQueue::Observer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19QuicTransportClient21DatagramObserverProxyD0Ev(%"class.net::QuicTransportClient::DatagramObserverProxy"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"class.net::QuicTransportClient::DatagramObserverProxy"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19QuicTransportClient14OnWriteBlockedEPN4quic26QuicBlockedWriterInterfaceE(%"class.net::QuicTransportClient"*, %"class.quic::QuicBlockedWriterInterface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19QuicTransportClient19OnRstStreamReceivedERKN4quic18QuicRstStreamFrameE(%"class.net::QuicTransportClient"*, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19QuicTransportClient21OnStopSendingReceivedERKN4quic20QuicStopSendingFrameE(%"class.net::QuicTransportClient"*, %"struct.quic::QuicStopSendingFrame"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19QuicTransportClient21OnNewConnectionIdSentERKN4quic16QuicConnectionIdES4_(%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"* dereferenceable(16), %"class.quic::QuicConnectionId"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net19QuicTransportClient21OnConnectionIdRetiredERKN4quic16QuicConnectionIdE(%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N3net19QuicTransportClient14OnWriteBlockedEPN4quic26QuicBlockedWriterInterfaceE(%"class.net::QuicTransportClient"*, %"class.quic::QuicBlockedWriterInterface"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N3net19QuicTransportClient19OnRstStreamReceivedERKN4quic18QuicRstStreamFrameE(%"class.net::QuicTransportClient"*, %"struct.quic::QuicRstStreamFrame"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N3net19QuicTransportClient21OnStopSendingReceivedERKN4quic20QuicStopSendingFrameE(%"class.net::QuicTransportClient"*, %"struct.quic::QuicStopSendingFrame"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N3net19QuicTransportClient21OnNewConnectionIdSentERKN4quic16QuicConnectionIdES4_(%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"* dereferenceable(16), %"class.quic::QuicConnectionId"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N3net19QuicTransportClient21OnConnectionIdRetiredERKN4quic16QuicConnectionIdE(%"class.net::QuicTransportClient"*, %"class.quic::QuicConnectionId"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare zeroext i1 @_ZN4quic36WebTransportFingerprintProofVerifier14AddFingerprintENS_22CertificateFingerprintE(%"class.quic::WebTransportFingerprintProofVerifier"*, %"struct.quic::CertificateFingerprint"*) local_unnamed_addr #1

declare void @_ZN3net21ProofVerifierChromiumC1EPNS_12CertVerifierEPNS_16CTPolicyEnforcerEPNS_22TransportSecurityStateEPNS_19SCTAuditingDelegateENSt3__13setINS9_12basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEENS9_4lessISG_EENSE_ISG_EEEERKNS_19NetworkIsolationKeyE(%"class.net::ProofVerifierChromium"*, %"class.net::CertVerifier"*, %"class.net::CTPolicyEnforcer"*, %"class.net::TransportSecurityState"*, %"class.net::SCTAuditingDelegate"*, %"class.std::__1::set.188"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.189"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.189"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node.855"**
  %8 = load %"class.std::__1::__tree_node.855"*, %"class.std::__1::__tree_node.855"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.855"* %8, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 56) #16, !noalias !33
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !noalias !33
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #15, !noalias !33
  br label %25

19:                                               ; preds = %10
  %20 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !33
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !33
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %22, i64 %24) #15, !noalias !33
  br label %25

25:                                               ; preds = %17, %19
  %26 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %11 to %"class.std::__1::__tree_node.855"*
  %29 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #15
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree.189", %"class.std::__1::__tree.189"* %0, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %25
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %36 to i64
  %40 = bitcast %"class.std::__1::__tree.189"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %42

42:                                               ; preds = %38, %25
  %43 = phi %"class.std::__1::__tree_node_base"* [ %29, %25 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree.189", %"class.std::__1::__tree.189"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %43) #15
  %46 = getelementptr inbounds %"class.std::__1::__tree.189", %"class.std::__1::__tree.189"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i8 [ 1, %42 ], [ 0, %3 ]
  %51 = phi %"class.std::__1::__tree_node.855"* [ %28, %42 ], [ %8, %3 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node.855", %"class.std::__1::__tree_node.855"* %51, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %53 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %53, i8 %50, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.189"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.189", %"class.std::__1::__tree.189"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.855"**
  %6 = load %"class.std::__1::__tree_node.855"*, %"class.std::__1::__tree_node.855"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.855"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.189", %"class.std::__1::__tree.189"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node.855"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.855", %"class.std::__1::__tree_node.855"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.855", %"class.std::__1::__tree_node.855"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #15
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.855", %"class.std::__1::__tree_node.855"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.855", %"class.std::__1::__tree_node.855"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #15
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.855", %"class.std::__1::__tree_node.855"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.855", %"class.std::__1::__tree_node.855"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.855", %"class.std::__1::__tree_node.855"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.855"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE30__emplace_hint_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEENS_21__tree_const_iteratorIS2_SG_lEERKT_DpOT0_(%"class.std::__1::__tree.210"*, %"class.std::__1::__tree_end_node"*, %"class.net::HostPortPair"* dereferenceable(32), %"class.net::HostPortPair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %6, align 8
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SA_EElEERPNS_15__tree_end_nodeISC_EESD_RKT_(%"class.std::__1::__tree.210"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, %"class.net::HostPortPair"* dereferenceable(32) %2)
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %13, label %56

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 64) #16, !noalias !36
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast %"class.net::HostPortPair"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !36
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.net::HostPortPair"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %21, i64 24, i1 false) #15, !noalias !36
  br label %28

22:                                               ; preds = %13
  %23 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !36
  %26 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !36
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %23, i8* %25, i64 %27) #15, !noalias !36
  br label %28

28:                                               ; preds = %20, %22
  %29 = getelementptr inbounds i8, i8* %14, i64 56
  %30 = bitcast i8* %29 to i16*
  %31 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 1
  %32 = load i16, i16* %31, align 8, !noalias !36
  store i16 %32, i16* %30, align 8, !noalias !36
  %33 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast i8* %14 to %"class.std::__1::__tree_node"*
  %36 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #15
  %38 = bitcast i8* %37 to i64*
  store i64 %34, i64* %38, align 8
  %39 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8**
  store i8* %14, i8** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree.210", %"class.std::__1::__tree.210"* %0, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %28
  %46 = ptrtoint %"class.std::__1::__tree_node_base"* %43 to i64
  %47 = bitcast %"class.std::__1::__tree.210"* %0 to i64*
  store i64 %46, i64* %47, align 8
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br label %49

49:                                               ; preds = %45, %28
  %50 = phi %"class.std::__1::__tree_node_base"* [ %36, %28 ], [ %48, %45 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree.210", %"class.std::__1::__tree.210"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %52, %"class.std::__1::__tree_node_base"* %50) #15
  %53 = getelementptr inbounds %"class.std::__1::__tree.210", %"class.std::__1::__tree.210"* %0, i64 0, i32 2, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %53, align 8
  br label %56

56:                                               ; preds = %49, %4
  %57 = phi i8 [ 1, %49 ], [ 0, %4 ]
  %58 = phi %"class.std::__1::__tree_node"* [ %35, %49 ], [ %11, %4 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %58, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %60 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %59, 0
  %61 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %60, i8 %57, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SA_EElEERPNS_15__tree_end_nodeISC_EESD_RKT_(%"class.std::__1::__tree.210"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.net::HostPortPair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.210", %"class.std::__1::__tree.210"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %55, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 7
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to i16*
  %14 = load i16, i16* %11, align 2
  %15 = load i16, i16* %13, align 2
  %16 = icmp ult i16 %14, %15
  br i1 %16, label %55, label %17

17:                                               ; preds = %9
  %18 = icmp ult i16 %15, %14
  br i1 %18, label %174, label %19

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %22 to i64
  %28 = select i1 %23, i64 %26, i64 %27
  %29 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %31 to i64
  %36 = select i1 %32, i64 %34, i64 %35
  %37 = icmp ult i64 %28, %36
  %38 = select i1 %37, i64 %28, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %19
  %41 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.net::HostPortPair"* %4 to i8*
  %44 = select i1 %32, i8* %42, i8* %43
  %45 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %48 = select i1 %23, i8* %46, i8* %47
  %49 = tail call i32 @memcmp(i8* %44, i8* %48, i64 %38) #15
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %40, %19
  %52 = icmp ult i64 %36, %28
  br i1 %52, label %55, label %138

53:                                               ; preds = %40
  %54 = icmp slt i32 %49, 0
  br i1 %54, label %55, label %138

55:                                               ; preds = %9, %5, %51, %53
  %56 = getelementptr inbounds %"class.std::__1::__tree.210", %"class.std::__1::__tree.210"* %0, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %57, %1
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br i1 %58, label %127, label %61

61:                                               ; preds = %55
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %61, %63
  %64 = phi %"class.std::__1::__tree_node_base"* [ %66, %63 ], [ %60, %61 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %79, label %63

68:                                               ; preds = %61, %68
  %69 = phi %"class.std::__1::__tree_end_node"* [ %73, %68 ], [ %1, %61 ]
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 2
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::__tree_end_node"**
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, %70
  br i1 %76, label %68, label %77

77:                                               ; preds = %68
  %78 = bitcast %"class.std::__1::__tree_end_node"* %73 to %"class.std::__1::__tree_node_base"*
  br label %79

79:                                               ; preds = %63, %77
  %80 = phi %"class.std::__1::__tree_node_base"* [ %78, %77 ], [ %64, %63 ]
  %81 = ptrtoint %"class.std::__1::__tree_node_base"* %80 to i64
  %82 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 1
  %83 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 1, i32 3
  %84 = bitcast i8* %83 to i16*
  %85 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 1
  %86 = load i16, i16* %84, align 2
  %87 = load i16, i16* %85, align 2
  %88 = icmp ult i16 %86, %87
  br i1 %88, label %127, label %89

89:                                               ; preds = %79
  %90 = icmp ult i16 %87, %86
  br i1 %90, label %136, label %91

91:                                               ; preds = %89
  %92 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %94 to i64
  %99 = select i1 %95, i64 %97, i64 %98
  %100 = bitcast %"class.std::__1::__tree_node_base"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 1, i32 1
  %105 = bitcast %"class.std::__1::__tree_node_base"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %102 to i64
  %108 = select i1 %103, i64 %106, i64 %107
  %109 = icmp ult i64 %99, %108
  %110 = select i1 %109, i64 %99, i64 %108
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %123, label %112

112:                                              ; preds = %91
  %113 = bitcast %"class.std::__1::__tree_node_base"* %82 to i8**
  %114 = load i8*, i8** %113, align 8
  %115 = bitcast %"class.std::__1::__tree_node_base"* %82 to i8*
  %116 = select i1 %103, i8* %114, i8* %115
  %117 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = bitcast %"class.net::HostPortPair"* %4 to i8*
  %120 = select i1 %95, i8* %118, i8* %119
  %121 = tail call i32 @memcmp(i8* %116, i8* %120, i64 %110) #15
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %112, %91
  %124 = icmp ult i64 %108, %99
  br i1 %124, label %127, label %136

125:                                              ; preds = %112
  %126 = icmp slt i32 %121, 0
  br i1 %126, label %127, label %136

127:                                              ; preds = %55, %79, %123, %125
  %128 = phi i64 [ %81, %125 ], [ %81, %123 ], [ %81, %79 ], [ %6, %55 ]
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %259

132:                                              ; preds = %127
  %133 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %128, i64* %133, align 8
  %134 = inttoptr i64 %128 to %"class.std::__1::__tree_node_base"*
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %134, i64 0, i32 1
  br label %259

136:                                              ; preds = %89, %123, %125
  %137 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_(%"class.std::__1::__tree.210"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.net::HostPortPair"* dereferenceable(32) %4)
  br label %259

138:                                              ; preds = %51, %53
  %139 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  %143 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = zext i8 %141 to i64
  %146 = select i1 %142, i64 %144, i64 %145
  %147 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %152 = bitcast %"class.std::__1::__tree_end_node"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = zext i8 %149 to i64
  %155 = select i1 %150, i64 %153, i64 %154
  %156 = icmp ult i64 %146, %155
  %157 = select i1 %156, i64 %146, i64 %155
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %138
  %160 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %161 = load i8*, i8** %160, align 8
  %162 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %163 = select i1 %150, i8* %161, i8* %162
  %164 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = bitcast %"class.net::HostPortPair"* %4 to i8*
  %167 = select i1 %142, i8* %165, i8* %166
  %168 = tail call i32 @memcmp(i8* %163, i8* %167, i64 %157) #15
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %159, %138
  %171 = icmp ult i64 %155, %146
  br i1 %171, label %174, label %256

172:                                              ; preds = %159
  %173 = icmp slt i32 %168, 0
  br i1 %173, label %174, label %256

174:                                              ; preds = %17, %170, %172
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, null
  br i1 %177, label %178, label %186

178:                                              ; preds = %174
  %179 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %181 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_end_node"**
  %182 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 0, i32 0
  %184 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %183, align 8
  %185 = icmp eq %"class.std::__1::__tree_node_base"* %184, %179
  br i1 %185, label %202, label %193

186:                                              ; preds = %174, %186
  %187 = phi %"class.std::__1::__tree_node_base"* [ %189, %186 ], [ %176, %174 ]
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 0, i32 0
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  %190 = icmp eq %"class.std::__1::__tree_node_base"* %189, null
  br i1 %190, label %191, label %186

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 0
  br label %202

193:                                              ; preds = %178, %193
  %194 = phi %"class.std::__1::__tree_end_node"** [ %197, %193 ], [ %181, %178 ]
  %195 = bitcast %"class.std::__1::__tree_end_node"** %194 to %"class.std::__1::__tree_node_base"**
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %196, i64 0, i32 2
  %198 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %199 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %198, i64 0, i32 0
  %200 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %199, align 8
  %201 = icmp eq %"class.std::__1::__tree_node_base"* %200, %196
  br i1 %201, label %202, label %193

202:                                              ; preds = %193, %191, %178
  %203 = phi %"class.std::__1::__tree_end_node"* [ %192, %191 ], [ %182, %178 ], [ %198, %193 ]
  %204 = icmp eq %"class.std::__1::__tree_end_node"* %203, %7
  br i1 %204, label %249, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 4
  %207 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 7
  %208 = bitcast %"class.std::__1::__tree_end_node"* %207 to i16*
  %209 = load i16, i16* %208, align 2
  %210 = icmp ult i16 %14, %209
  br i1 %210, label %249, label %211

211:                                              ; preds = %205
  %212 = icmp ult i16 %209, %14
  br i1 %212, label %254, label %213

213:                                              ; preds = %211
  %214 = bitcast %"class.std::__1::__tree_end_node"* %206 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %214, i64 0, i32 1, i32 0
  %216 = load i8, i8* %215, align 1
  %217 = icmp slt i8 %216, 0
  %218 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 5
  %219 = bitcast %"class.std::__1::__tree_end_node"* %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = zext i8 %216 to i64
  %222 = select i1 %217, i64 %220, i64 %221
  %223 = bitcast %"class.net::HostPortPair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  %225 = load i8, i8* %224, align 1
  %226 = icmp slt i8 %225, 0
  %227 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %228 = load i64, i64* %227, align 8
  %229 = zext i8 %225 to i64
  %230 = select i1 %226, i64 %228, i64 %229
  %231 = icmp ult i64 %222, %230
  %232 = select i1 %231, i64 %222, i64 %230
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %245, label %234

234:                                              ; preds = %213
  %235 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  %237 = bitcast %"class.net::HostPortPair"* %4 to i8*
  %238 = select i1 %226, i8* %236, i8* %237
  %239 = bitcast %"class.std::__1::__tree_end_node"* %206 to i8**
  %240 = load i8*, i8** %239, align 8
  %241 = bitcast %"class.std::__1::__tree_end_node"* %206 to i8*
  %242 = select i1 %217, i8* %240, i8* %241
  %243 = tail call i32 @memcmp(i8* %238, i8* %242, i64 %232) #15
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %234, %213
  %246 = icmp ult i64 %230, %222
  br i1 %246, label %249, label %254

247:                                              ; preds = %234
  %248 = icmp slt i32 %243, 0
  br i1 %248, label %249, label %254

249:                                              ; preds = %205, %202, %245, %247
  br i1 %177, label %250, label %252

250:                                              ; preds = %249
  %251 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %251, align 8
  br label %259

252:                                              ; preds = %249
  store %"class.std::__1::__tree_end_node"* %203, %"class.std::__1::__tree_end_node"** %2, align 8
  %253 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 0, i32 0
  br label %259

254:                                              ; preds = %211, %245, %247
  %255 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_(%"class.std::__1::__tree.210"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.net::HostPortPair"* dereferenceable(32) %4)
  br label %259

256:                                              ; preds = %170, %172
  %257 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %257, align 8
  %258 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %258, align 8
  br label %259

259:                                              ; preds = %250, %252, %254, %130, %132, %136, %256
  %260 = phi %"class.std::__1::__tree_node_base"** [ %3, %256 ], [ %131, %130 ], [ %135, %132 ], [ %137, %136 ], [ %175, %250 ], [ %253, %252 ], [ %255, %254 ]
  ret %"class.std::__1::__tree_node_base"** %260
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISC_EERKT_(%"class.std::__1::__tree.210"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.net::HostPortPair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.210", %"class.std::__1::__tree.210"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %101, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.210", %"class.std::__1::__tree.210"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 1
  %11 = load i16, i16* %10, align 2
  %12 = bitcast %"class.net::HostPortPair"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = zext i8 %14 to i64
  %18 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.net::HostPortPair"* %2 to i8*
  br label %20

20:                                               ; preds = %8, %97
  %21 = phi %"class.std::__1::__tree_node"* [ %100, %97 ], [ %6, %8 ]
  %22 = phi %"class.std::__1::__tree_node_base"** [ %99, %97 ], [ %9, %8 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = icmp ult i16 %11, %25
  br i1 %26, label %56, label %27

27:                                               ; preds = %20
  %28 = icmp ult i16 %25, %11
  br i1 %28, label %89, label %29

29:                                               ; preds = %27
  %30 = bitcast %"class.net::HostPortPair"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %32 to i64
  %37 = select i1 %33, i64 %35, i64 %36
  %38 = load i64, i64* %16, align 8
  %39 = select i1 %15, i64 %38, i64 %17
  %40 = icmp ult i64 %37, %39
  %41 = select i1 %40, i64 %37, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %29
  %44 = load i8*, i8** %18, align 8
  %45 = select i1 %15, i8* %44, i8* %19
  %46 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast %"class.net::HostPortPair"* %23 to i8*
  %49 = select i1 %33, i8* %47, i8* %48
  %50 = tail call i32 @memcmp(i8* %45, i8* %49, i64 %41) #15
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %43, %29
  %53 = icmp ult i64 %39, %37
  br i1 %53, label %56, label %62

54:                                               ; preds = %43
  %55 = icmp slt i32 %50, 0
  br i1 %55, label %56, label %62

56:                                               ; preds = %20, %52, %54
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %97

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %61, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %103

62:                                               ; preds = %52, %54
  %63 = load i64, i64* %16, align 8
  %64 = select i1 %15, i64 %63, i64 %17
  %65 = bitcast %"class.net::HostPortPair"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %67 to i64
  %72 = select i1 %68, i64 %70, i64 %71
  %73 = icmp ult i64 %64, %72
  %74 = select i1 %73, i64 %64, i64 %72
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %85, label %76

76:                                               ; preds = %62
  %77 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.net::HostPortPair"* %23 to i8*
  %80 = select i1 %68, i8* %78, i8* %79
  %81 = load i8*, i8** %18, align 8
  %82 = select i1 %15, i8* %81, i8* %19
  %83 = tail call i32 @memcmp(i8* %80, i8* %82, i64 %74) #15
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %76, %62
  %86 = icmp ult i64 %72, %64
  br i1 %86, label %89, label %95

87:                                               ; preds = %76
  %88 = icmp slt i32 %83, 0
  br i1 %88, label %89, label %95

89:                                               ; preds = %27, %85, %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 1
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, null
  br i1 %92, label %93, label %97

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %94, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %103

95:                                               ; preds = %85, %87
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %96, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %103

97:                                               ; preds = %89, %56
  %98 = phi %"class.std::__1::__tree_node_base"* [ %58, %56 ], [ %91, %89 ]
  %99 = phi %"class.std::__1::__tree_node_base"** [ %57, %56 ], [ %90, %89 ]
  %100 = bitcast %"class.std::__1::__tree_node_base"* %98 to %"class.std::__1::__tree_node"*
  br label %20

101:                                              ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %103

103:                                              ; preds = %101, %95, %93, %60
  %104 = phi %"class.std::__1::__tree_node_base"** [ %57, %60 ], [ %90, %93 ], [ %22, %95 ], [ %102, %101 ]
  ret %"class.std::__1::__tree_node_base"** %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.189"*, %"class.std::__1::__tree_node.855"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.855"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.855"* %1 to %"class.std::__1::__tree_node.855"**
  %6 = load %"class.std::__1::__tree_node.855"*, %"class.std::__1::__tree_node.855"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.189"* %0, %"class.std::__1::__tree_node.855"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.855", %"class.std::__1::__tree_node.855"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.855"**
  %9 = load %"class.std::__1::__tree_node.855"*, %"class.std::__1::__tree_node.855"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.189"* %0, %"class.std::__1::__tree_node.855"* %9) #15
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.855", %"class.std::__1::__tree_node.855"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #16
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.855"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.210"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.210"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.210"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 2
  %11 = bitcast %"class.net::HostPortPair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #16
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

declare void @_ZN4quic36WebTransportFingerprintProofVerifierC1EPKNS_9QuicClockEi(%"class.quic::WebTransportFingerprintProofVerifier"*, %"class.quic::QuicClock"*, i32) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

declare dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net9ProxyList3GetEv(%"class.net::ProxyList"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4quic13QuicIpAddressC1Ev(%"class.quic::QuicIpAddress"*) unnamed_addr #1

declare zeroext i1 @_ZNK3net10IPEndPoint10ToSockAddrEP8sockaddrPj(%"class.net::IPEndPoint"*, %struct.sockaddr*, i32*) local_unnamed_addr #1

declare void @_ZN4quic17QuicSocketAddressC1ERK16sockaddr_storage(%"class.quic::QuicSocketAddress"*, %struct.sockaddr_storage* dereferenceable(128)) unnamed_addr #1

declare void @_ZN4quic21QuicSentPacketManager16SetDebugDelegateEPNS0_13DebugDelegateE(%"class.quic::QuicSentPacketManager"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN3net24QuicChromiumAlarmFactoryC1EPN4base10TaskRunnerEPKN4quic9QuicClockE(%"class.net::QuicChromiumAlarmFactory"*, %"class.base::TaskRunner"*, %"class.quic::QuicClock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::QuicTransportClient"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::QuicTransportClient"*, i32)**
  %22 = load void (%"class.net::QuicTransportClient"*, i32)*, void (%"class.net::QuicTransportClient"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::QuicTransportClient"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::QuicTransportClient"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::QuicTransportClient"* %13, i32 %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN4quic16QuicConnectionIdC1ERKS0_(%"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic14QuicConnectionC1ENS_16QuicConnectionIdENS_17QuicSocketAddressES2_PNS_29QuicConnectionHelperInterfaceEPNS_16QuicAlarmFactoryEPNS_16QuicPacketWriterEbNS_11PerspectiveERKNSt3__16vectorINS_17ParsedQuicVersionENSA_9allocatorISC_EEEE(%"class.quic::QuicConnection"*, %"class.quic::QuicConnectionId"*, %"class.quic::QuicSocketAddress"* byval(%"class.quic::QuicSocketAddress") align 8, %"class.quic::QuicSocketAddress"* byval(%"class.quic::QuicSocketAddress") align 8, %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"class.quic::QuicPacketWriter"*, i1 zeroext, i8 zeroext, %"class.std::__1::vector.202"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic26QuicTransportClientSessionC1EPNS_14QuicConnectionEPNS_11QuicSession7VisitorERKNS_10QuicConfigERKNSt3__16vectorINS_17ParsedQuicVersionENS9_9allocatorISB_EEEERK4GURLPNS_22QuicCryptoClientConfigEN3url6OriginEPNS_19WebTransportVisitorENS9_10unique_ptrINS_17QuicDatagramQueue8ObserverENS9_14default_deleteISS_EEEE(%"class.quic::QuicTransportClientSession"*, %"class.quic::QuicConnection"*, %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicConfig"* dereferenceable(1112), %"class.std::__1::vector.202"* dereferenceable(24), %class.GURL* dereferenceable(120), %"class.quic::QuicCryptoClientConfig"*, %"class.url::Origin"*, %"class.quic::WebTransportVisitor"*, i64) unnamed_addr #1

declare void @_ZN3net24QuicChromiumPacketReaderC1EPNS_20DatagramClientSocketEPKN4quic9QuicClockEPNS0_7VisitorEiNS3_8QuicTime5DeltaERKNS_16NetLogWithSourceE(%"class.net::QuicChromiumPacketReader"*, %"class.net::DatagramClientSocket"*, %"class.quic::QuicClock"*, %"class.net::QuicChromiumPacketReader::Visitor"*, i32, i64, %"class.net::NetLogWithSource"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN3net15QuicEventLoggerC1EPN4quic11QuicSessionERKNS_16NetLogWithSourceE(%"class.net::QuicEventLogger"*, %"class.quic::QuicSession"*, %"class.net::NetLogWithSource"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #15
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.net::QuicTransportClient"**
  %10 = load %"class.net::QuicTransportClient"*, %"class.net::QuicTransportClient"** %9, align 8
  %11 = icmp eq %"class.net::QuicTransportClient"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #15
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0)) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #15
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.net::QuicTransportClient"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.net::QuicTransportClient"*)**
  %37 = load void (%"class.net::QuicTransportClient"*)*, void (%"class.net::QuicTransportClient"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.net::QuicTransportClient"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.net::QuicTransportClient"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.net::QuicTransportClient"* %28) #15
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #15
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #16
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #15
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::QuicTransportClient"**
  %9 = load %"class.net::QuicTransportClient"*, %"class.net::QuicTransportClient"** %8, align 8
  %10 = icmp ne %"class.net::QuicTransportClient"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #15
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3net12_GLOBAL__N_116HostsFromOriginsENSt3__13setINS_12HostPortPairENS1_4lessIS3_EENS1_9allocatorIS3_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN3net12_GLOBAL__N_116HostsFromOriginsENSt3__13setINS_12HostPortPairENS1_4lessIS3_EENS1_9allocatorIS3_EEEE"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3net19QuicTransportClient38QuicVersionsForWebTransportOriginTrialEv: argument 0"}
!8 = distinct !{!8, !"_ZN3net19QuicTransportClient38QuicVersionsForWebTransportOriginTrialEv"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN3net19QuicTransportClientEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN3net19QuicTransportClientEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19QuicTransportClientEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIMN3net19QuicTransportClientEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIMN3net19QuicTransportClientEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!21 = !{!"branch_weights", i32 1, i32 2000}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3net19ToQuicSocketAddressENS_10IPEndPointE: argument 0"}
!24 = distinct !{!24, !"_ZN3net19ToQuicSocketAddressENS_10IPEndPointE"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK4base14WeakPtrFactoryIN3net19QuicTransportClientEE10GetWeakPtrEv: argument 0"}
!27 = distinct !{!27, !"_ZNK4base14WeakPtrFactoryIN3net19QuicTransportClientEE10GetWeakPtrEv"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!31 = distinct !{!31, !32, !"_ZN4base8BindOnceIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8BindOnceIMN3net19QuicTransportClientEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16__treeIN3net12HostPortPairENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
