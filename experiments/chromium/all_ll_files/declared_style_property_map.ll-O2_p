; ModuleID = '../../third_party/blink/renderer/core/css/cssom/declared_style_property_map.cc'
source_filename = "../../third_party/blink/renderer/core/css/cssom/declared_style_property_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.202", i32, [4 x i8], %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.338", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.354", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.372", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.379", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.318", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.238" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__atomic_base.240" }
%"struct.std::__1::__atomic_base.240" = type { %"struct.std::__1::__cxx_atomic_impl.241" }
%"struct.std::__1::__cxx_atomic_impl.241" = type { %"struct.std::__1::__cxx_atomic_base_impl.242" }
%"struct.std::__1::__cxx_atomic_base_impl.242" = type { i64 }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::Worklist.249"* }
%"class.blink::Worklist.249" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.238" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::Worklist.256"* }
%"class.blink::Worklist.256" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.238" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::Worklist.263"* }
%"class.blink::Worklist.263" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.238" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::Worklist.270"* }
%"class.blink::Worklist.270" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.238" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::Worklist.277"* }
%"class.blink::Worklist.277" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.238" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::Worklist.284"* }
%"class.blink::Worklist.284" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.238" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::Worklist.291"* }
%"class.blink::Worklist.291" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.238" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.298", %"class.std::__1::__compressed_pair.305", %"class.std::__1::__compressed_pair.310", %"class.std::__1::__compressed_pair.312", [4 x i8] }>
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300", %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { i64 }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { float }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.321", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.330" }
%"class.WTF::Vector.330" = type { %"class.WTF::VectorBuffer.331" }
%"class.WTF::VectorBuffer.331" = type { %"class.WTF::VectorBufferBase.332" }
%"class.WTF::VectorBufferBase.332" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.360" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.249"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.256"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.263"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.270"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.277"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.385" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.378 }
%class.scoped_refptr.378 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.379" = type { %"struct.std::__1::__atomic_base.380" }
%"struct.std::__1::__atomic_base.380" = type { %"struct.std::__1::__cxx_atomic_impl.381" }
%"struct.std::__1::__cxx_atomic_impl.381" = type { %"struct.std::__1::__cxx_atomic_base_impl.382" }
%"struct.std::__1::__cxx_atomic_base_impl.382" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.189", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.189" = type { %"class.base::RefCounted.190" }
%"class.base::RefCounted.190" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.193" }
%"class.blink::HeapHashMap.193" = type { %"class.WTF::HashMap.196" }
%"class.WTF::HashMap.196" = type { %"class.WTF::HashTable.197" }
%"class.WTF::HashTable.197" = type <{ %"struct.WTF::KeyValuePair.199"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.199" = type { %"class.blink::WeakMember.200", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::DeclaredStylePropertyMap" = type { %"class.blink::StylePropertyMap", %"class.blink::WeakMember" }
%"class.blink::StylePropertyMap" = type { %"class.blink::StylePropertyMapReadOnlyMainThread" }
%"class.blink::StylePropertyMapReadOnlyMainThread" = type { %"class.blink::StylePropertyMapReadOnly" }
%"class.blink::StylePropertyMapReadOnly" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSStyleRule"* }
%"class.blink::CSSStyleRule" = type { %"class.blink::CSSRule", %"class.blink::Member.1", %"class.blink::Member.25", %"class.blink::Member.27" }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase.0" }
%"class.blink::MemberBase.0" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.17", %"class.blink::Member.21" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::StyleRuleCSSStyleDeclaration"* }
%"class.blink::StyleRuleCSSStyleDeclaration" = type opaque
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::StylePropertyMap"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.31", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.33, %"class.WTF::Vector.48", %"class.WTF::Vector.48", %"class.blink::Member.53", %"class.blink::Member.55", %"class.blink::HeapHashSet", %"class.blink::Member.61", %"class.WTF::HashSet.63", %"class.WTF::TextPosition", %"class.blink::Member.67", %"class.blink::HeapVector", %"class.blink::Member.77" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.33 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.34", %"class.WTF::Vector.36" }
%"class.WTF::RefCounted.34" = type { %"class.base::RefCounted.35" }
%"class.base::RefCounted.35" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.37"*, i32, i32 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.40", %"class.WTF::String" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type opaque
%"class.WTF::Vector.48" = type { %"class.WTF::VectorBuffer.49" }
%"class.WTF::VectorBuffer.49" = type { %"class.WTF::VectorBufferBase.50" }
%"class.WTF::VectorBufferBase.50" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::Node"* }
%"class.blink::Node" = type opaque
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::CSSRule"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.60"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.60" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.410", %"class.blink::Member.61", %"class.blink::Member.412", %"class.blink::Member.413", %"class.blink::Member.413", %"class.blink::Member.437", %"class.blink::Member.439", %"class.blink::Member.441", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.446", %"class.blink::HeapVector.448" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.412" = type { %"class.blink::MemberBase.409" }
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.417" }
%"class.blink::HeapHashMap.417" = type { %"class.WTF::HashMap.420" }
%"class.WTF::HashMap.420" = type { %"class.WTF::HashTable.421" }
%"class.WTF::HashTable.421" = type <{ %"struct.WTF::KeyValuePair.423"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.423" = type { %"class.WTF::AtomicString", %"class.blink::Member.424" }
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.428", i32, %"class.blink::HeapVector.430" }
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.430" = type { %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::Member.428"*, i32, i32 }
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.443" }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::HeapHashMap.445"* }
%"class.blink::HeapHashMap.445" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.448" = type { %"class.WTF::Vector.451" }
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.WTF::HashSet.63" = type { %"class.WTF::HashTable.64" }
%"class.WTF::HashTable.64" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.33, %"class.blink::Member.69", %"class.blink::Member.55" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.73" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.blink::Member.55"*, i32, i32 }
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.79", %"class.blink::HeapVector.85", i8, [7 x i8] }>
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.83" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.81" }
%"class.blink::WeakMember.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.132", i32, i8, [3 x i8], %"class.blink::HeapVector.134", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.142", %"class.blink::Member.144", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.153", %"class.blink::Member.159", %"class.blink::Member.161", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.106" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.99" }
%"class.blink::HeapHashSet.99" = type { %"class.WTF::HashSet.102" }
%"class.WTF::HashSet.102" = type { %"class.WTF::HashTable.103" }
%"class.WTF::HashTable.103" = type <{ %"class.blink::WeakMember.105"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.105" = type opaque
%"class.blink::Supplementable.106" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.107" }
%"class.blink::HeapHashMap.107" = type { %"class.WTF::HashMap.110" }
%"class.WTF::HashMap.110" = type { %"class.WTF::HashTable.111" }
%"class.WTF::HashTable.111" = type <{ %"struct.WTF::KeyValuePair.113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.113" = type { i8*, %"class.blink::Member.405" }
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.407" }
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.114, %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.121", %"class.blink::Member.127", i32, [4 x i8], %"class.WTF::HashSet.128", i32, i32 }
%class.scoped_refptr.114 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.82" }
%"class.WTF::HashSet.128" = type { %"class.WTF::HashTable.129" }
%"class.WTF::HashTable.129" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.134" = type { %"class.WTF::Vector.137" }
%"class.WTF::Vector.137" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"class.blink::Member.140"*, i32, i32 }
%"class.blink::Member.140" = type opaque
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.146", i32, i32 }
%"class.blink::HeapHashMap.146" = type { %"class.WTF::HashMap.149" }
%"class.WTF::HashMap.149" = type { %"class.WTF::HashTable.150" }
%"class.WTF::HashTable.150" = type <{ %"struct.WTF::KeyValuePair.152"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.152" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.159" = type { %"class.blink::MemberBase.160" }
%"class.blink::MemberBase.160" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.161" = type { %"class.blink::MemberBase.162" }
%"class.blink::MemberBase.162" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.85" = type { %"class.WTF::Vector.88" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90", [96 x i8] }
%"class.WTF::VectorBufferBase.90" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.91" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.163", %"class.WTF::Vector.165", %"class.WTF::Vector.170", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.163" = type { %"class.base::RefCounted.164" }
%"class.base::RefCounted.164" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.170" = type { %"class.WTF::VectorBuffer.171" }
%"class.WTF::VectorBuffer.171" = type { %"class.WTF::VectorBufferBase.172" }
%"class.WTF::VectorBufferBase.172" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.173 }
%union.anon.173 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)* }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.blink::ImmutableCSSPropertyValueSet" = type { %"class.blink::CSSPropertyValueSet", [4 x i8] }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::StylePropertySerializer" = type { %"class.blink::StylePropertySerializer::CSSPropertyValueSetForSerializer" }
%"class.blink::StylePropertySerializer::CSSPropertyValueSetForSerializer" = type <{ %"class.blink::Member.391", i32, [4 x i8], %"class.std::__1::bitset", i8, [7 x i8] }>
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [10 x i64] }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.397, %"class.blink::Member.398", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.397 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.400" }
%"class.blink::Persistent.400" = type { %"class.blink::PersistentBase.401" }
%"class.blink::PersistentBase.401" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.402" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.402" = type { %"class.v8::TracedReference.403" }
%"class.v8::TracedReference.403" = type { %"class.v8::BasicTracedReference.404" }
%"class.v8::BasicTracedReference.404" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.458 }
%union.anon.458 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink24DeclaredStylePropertyMapD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink24DeclaredStylePropertyMap5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink16StylePropertyMap18GetWrapperTypeInfoEv = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_12CSSStyleRuleEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink24DeclaredStylePropertyMapE = hidden unnamed_addr constant { [26 x i8*], [3 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::DeclaredStylePropertyMap"*)* @_ZN5blink24DeclaredStylePropertyMapD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DeclaredStylePropertyMap"*, %"class.blink::Visitor"*)* @_ZNK5blink24DeclaredStylePropertyMap5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::StylePropertyMap"*)* @_ZNK5blink16StylePropertyMap18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.blink::CSSStyleValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3getEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void ()* @_ZNK5blink34StylePropertyMapReadOnlyMainThread6getAllEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3hasEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (i32 (%"class.blink::DeclaredStylePropertyMap"*)* @_ZNK5blink24DeclaredStylePropertyMap4sizeEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::DeclaredStylePropertyMap"*, i32)* @_ZNK5blink24DeclaredStylePropertyMap11GetPropertyENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::DeclaredStylePropertyMap"*, %"class.WTF::StringImpl"*)* @_ZNK5blink24DeclaredStylePropertyMap17GetCustomPropertyEN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::DeclaredStylePropertyMap"*, %"class.std::__1::function"*)* @_ZN5blink24DeclaredStylePropertyMap15ForEachPropertyERKNSt3__18functionIFvRKNS_15CSSPropertyNameERKNS_8CSSValueEEEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::DeclaredStylePropertyMap"*, %"class.blink::CSSProperty"*)* @_ZNK5blink24DeclaredStylePropertyMap25SerializationForShorthandERKNS_11CSSPropertyE to i8*), i8* bitcast (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::DeclaredStylePropertyMap"*, i32, %"class.blink::CSSValue"*)* @_ZN5blink24DeclaredStylePropertyMap11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueE to i8*), i8* bitcast (i1 (%"class.blink::DeclaredStylePropertyMap"*, i32, %"class.WTF::String"*, i32)* @_ZN5blink24DeclaredStylePropertyMap20SetShorthandPropertyENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeE to i8*), i8* bitcast (void (%"class.blink::DeclaredStylePropertyMap"*, %"class.WTF::AtomicString"*, %"class.blink::CSSValue"*)* @_ZN5blink24DeclaredStylePropertyMap17SetCustomPropertyERKN3WTF12AtomicStringERKNS_8CSSValueE to i8*), i8* bitcast (void (%"class.blink::DeclaredStylePropertyMap"*, i32)* @_ZN5blink24DeclaredStylePropertyMap14RemovePropertyENS_13CSSPropertyIDE to i8*), i8* bitcast (void (%"class.blink::DeclaredStylePropertyMap"*, %"class.WTF::AtomicString"*)* @_ZN5blink24DeclaredStylePropertyMap20RemoveCustomPropertyERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::DeclaredStylePropertyMap"*)* @_ZN5blink24DeclaredStylePropertyMap19RemoveAllPropertiesEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZThn16_N5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE to i8*)] }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink16StylePropertyMap18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink24DeclaredStylePropertyMapC1EPNS_12CSSStyleRuleE = hidden unnamed_addr alias void (%"class.blink::DeclaredStylePropertyMap"*, %"class.blink::CSSStyleRule"*), void (%"class.blink::DeclaredStylePropertyMap"*, %"class.blink::CSSStyleRule"*)* @_ZN5blink24DeclaredStylePropertyMapC2EPNS_12CSSStyleRuleE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DeclaredStylePropertyMapC2EPNS_12CSSStyleRuleE(%"class.blink::DeclaredStylePropertyMap"* nocapture, %"class.blink::CSSStyleRule"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.blink::TraceWrapperV8Reference"* %5 to i64*
  store i64 0, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [3 x i8*] }, { [26 x i8*], [3 x i8*] }* @_ZTVN5blink24DeclaredStylePropertyMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*], [3 x i8*] }, { [26 x i8*], [3 x i8*] }* @_ZTVN5blink24DeclaredStylePropertyMapE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSStyleRule"* %1, %"class.blink::CSSStyleRule"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink24DeclaredStylePropertyMap4sizeEv(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %2, align 8
  %4 = icmp eq %"class.blink::CSSStyleRule"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %3, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %6, align 8
  %8 = icmp eq %"class.blink::StyleRule"* %7, null
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = tail call dereferenceable(4) %"class.blink::CSSPropertyValueSet"* @_ZNK5blink9StyleRule10PropertiesEv(%"class.blink::StyleRule"* nonnull %7) #8
  %11 = icmp eq %"class.blink::CSSPropertyValueSet"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = load i32, i32* null, align 536870912
  br label %21

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %10, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %10, i64 7, i32 0
  %20 = load i32, i32* %19, align 4
  br label %24

21:                                               ; preds = %14, %12
  %22 = phi i32 [ %13, %12 ], [ %16, %14 ]
  %23 = and i32 %22, 268435455
  br label %24

24:                                               ; preds = %1, %21, %18, %5
  %25 = phi i32 [ 0, %5 ], [ %23, %21 ], [ %20, %18 ], [ 0, %1 ]
  ret i32 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::StyleRule"* @_ZNK5blink24DeclaredStylePropertyMap12GetStyleRuleEv(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %2, align 8
  %4 = icmp eq %"class.blink::CSSStyleRule"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %3, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::StyleRule"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::StyleRule"* %9
}

declare dereferenceable(4) %"class.blink::CSSPropertyValueSet"* @_ZNK5blink9StyleRule10PropertiesEv(%"class.blink::StyleRule"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink24DeclaredStylePropertyMap11GetPropertyENS_13CSSPropertyIDE(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %3, align 8
  %5 = icmp eq %"class.blink::CSSStyleRule"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %7, align 8
  %9 = icmp eq %"class.blink::StyleRule"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = tail call dereferenceable(4) %"class.blink::CSSPropertyValueSet"* @_ZNK5blink9StyleRule10PropertiesEv(%"class.blink::StyleRule"* nonnull %8) #8
  %12 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %11, i32 %1) #8
  br label %13

13:                                               ; preds = %2, %6, %10
  %14 = phi %"class.blink::CSSValue"* [ %12, %10 ], [ null, %6 ], [ null, %2 ]
  ret %"class.blink::CSSValue"* %14
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink24DeclaredStylePropertyMap17GetCustomPropertyEN3WTF12AtomicStringE(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly, %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %3, align 8
  %5 = icmp eq %"class.blink::CSSStyleRule"* %4, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %7, align 8
  %9 = icmp eq %"class.blink::StyleRule"* %8, null
  br i1 %9, label %32, label %10

10:                                               ; preds = %6
  %11 = tail call dereferenceable(4) %"class.blink::CSSPropertyValueSet"* @_ZNK5blink9StyleRule10PropertiesEv(%"class.blink::StyleRule"* nonnull %8) #8
  %12 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #8
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #8
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %10, %13, %28
  %31 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueIN3WTF12AtomicStringEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %11, %"class.WTF::StringImpl"* %1) #8
  br label %32

32:                                               ; preds = %2, %6, %30
  %33 = phi %"class.blink::CSSValue"* [ %31, %30 ], [ null, %6 ], [ null, %2 ]
  %34 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #8
  br label %48

48:                                               ; preds = %32, %44, %47
  ret %"class.blink::CSSValue"* %33
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueIN3WTF12AtomicStringEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DeclaredStylePropertyMap11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly, i32, %"class.blink::CSSValue"* dereferenceable(3)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %4, align 8
  %6 = icmp eq %"class.blink::CSSStyleRule"* %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %5, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %8, align 8
  %10 = icmp eq %"class.blink::StyleRule"* %9, null
  br i1 %10, label %52, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %5, i64 0, i32 0, i32 1
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %15, label %33, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %17, %24
  %20 = phi %"class.blink::ScriptWrappable"** [ %32, %24 ], [ %16, %17 ]
  %21 = phi %"class.blink::CSSRule"* [ %27, %24 ], [ %18, %17 ]
  %22 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %20, align 8
  %23 = icmp eq %"class.blink::ScriptWrappable"* %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %21, i64 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.blink::ScriptWrappable"** %25 to %"class.blink::CSSRule"**
  %27 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %27, i64 0, i32 1
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, 2
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %27, i64 0, i32 2, i32 0, i32 0
  br i1 %31, label %33, label %19

33:                                               ; preds = %24, %11
  %34 = phi %"class.blink::ScriptWrappable"** [ %16, %11 ], [ %32, %24 ]
  %35 = bitcast %"class.blink::ScriptWrappable"** %34 to %"class.blink::CSSStyleSheet"**
  %36 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %35, align 8
  %37 = icmp eq %"class.blink::CSSStyleSheet"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  tail call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* nonnull %36) #8
  %39 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %4, align 8
  br label %40

40:                                               ; preds = %19, %33, %38
  %41 = phi %"class.blink::CSSStyleRule"* [ %5, %33 ], [ %39, %38 ], [ %5, %19 ]
  %42 = phi %"class.blink::CSSStyleSheet"* [ null, %33 ], [ %36, %38 ], [ null, %19 ]
  %43 = icmp eq %"class.blink::CSSStyleRule"* %41, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %41, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %45, align 8
  br label %47

47:                                               ; preds = %40, %44
  %48 = phi %"class.blink::StyleRule"* [ %46, %44 ], [ null, %40 ]
  %49 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink9StyleRule17MutablePropertiesEv(%"class.blink::StyleRule"* %48) #8
  tail call void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"* %49, i32 %1, %"class.blink::CSSValue"* dereferenceable(3) %2, i1 zeroext false) #8
  %50 = icmp eq %"class.blink::CSSStyleSheet"* %42, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  tail call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %42, i32 1) #8
  br label %52

52:                                               ; preds = %3, %51, %47, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink9StyleRule17MutablePropertiesEv(%"class.blink::StyleRule"*) local_unnamed_addr #2

declare void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3), i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24DeclaredStylePropertyMap20SetShorthandPropertyENS_13CSSPropertyIDERKN3WTF6StringENS_17SecureContextModeE(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly, i32, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %5, align 8
  %7 = icmp eq %"class.blink::CSSStyleRule"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8
  %11 = and i8 %10, 2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %12, label %30, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %6, i64 0, i32 0
  br label %16

16:                                               ; preds = %14, %21
  %17 = phi %"class.blink::ScriptWrappable"** [ %29, %21 ], [ %13, %14 ]
  %18 = phi %"class.blink::CSSRule"* [ %24, %21 ], [ %15, %14 ]
  %19 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %17, align 8
  %20 = icmp eq %"class.blink::ScriptWrappable"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %18, i64 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.blink::ScriptWrappable"** %22 to %"class.blink::CSSRule"**
  %24 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 2
  %28 = icmp eq i8 %27, 0
  %29 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %24, i64 0, i32 2, i32 0, i32 0
  br i1 %28, label %30, label %16

30:                                               ; preds = %21, %8
  %31 = phi %"class.blink::ScriptWrappable"** [ %13, %8 ], [ %29, %21 ]
  %32 = bitcast %"class.blink::ScriptWrappable"** %31 to %"class.blink::CSSStyleSheet"**
  %33 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %32, align 8
  %34 = icmp eq %"class.blink::CSSStyleSheet"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  tail call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* nonnull %33) #8
  %36 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %5, align 8
  br label %37

37:                                               ; preds = %16, %30, %35
  %38 = phi %"class.blink::CSSStyleRule"* [ %6, %30 ], [ %36, %35 ], [ %6, %16 ]
  %39 = phi %"class.blink::CSSStyleSheet"* [ null, %30 ], [ %33, %35 ], [ null, %16 ]
  %40 = icmp eq %"class.blink::CSSStyleRule"* %38, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %38, i64 0, i32 1, i32 0, i32 0
  %43 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %42, align 8
  br label %44

44:                                               ; preds = %4, %37, %41
  %45 = phi %"class.blink::CSSStyleSheet"* [ %39, %41 ], [ %39, %37 ], [ null, %4 ]
  %46 = phi %"class.blink::StyleRule"* [ %43, %41 ], [ null, %37 ], [ null, %4 ]
  %47 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink9StyleRule17MutablePropertiesEv(%"class.blink::StyleRule"* %46) #8
  %48 = tail call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %47, i32 %1, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext false, i32 %3, %"class.blink::StyleSheetContents"* null) #8
  %49 = and i16 %48, 1
  %50 = icmp ne i16 %49, 0
  %51 = icmp eq %"class.blink::CSSStyleSheet"* %45, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %44
  tail call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %45, i32 1) #8
  br label %53

53:                                               ; preds = %44, %52
  ret i1 %50
}

declare i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DeclaredStylePropertyMap17SetCustomPropertyERKN3WTF12AtomicStringERKNS_8CSSValueE(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::CSSValue"* nocapture readonly dereferenceable(3)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %4, align 8
  %6 = icmp eq %"class.blink::CSSStyleRule"* %5, null
  br i1 %6, label %97, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %5, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %8, align 8
  %10 = icmp eq %"class.blink::StyleRule"* %9, null
  br i1 %10, label %97, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %5, i64 0, i32 0, i32 1
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %15, label %33, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %17, %24
  %20 = phi %"class.blink::ScriptWrappable"** [ %32, %24 ], [ %16, %17 ]
  %21 = phi %"class.blink::CSSRule"* [ %27, %24 ], [ %18, %17 ]
  %22 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %20, align 8
  %23 = icmp eq %"class.blink::ScriptWrappable"* %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %21, i64 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.blink::ScriptWrappable"** %25 to %"class.blink::CSSRule"**
  %27 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %27, i64 0, i32 1
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, 2
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %27, i64 0, i32 2, i32 0, i32 0
  br i1 %31, label %33, label %19

33:                                               ; preds = %24, %11
  %34 = phi %"class.blink::ScriptWrappable"** [ %16, %11 ], [ %32, %24 ]
  %35 = bitcast %"class.blink::ScriptWrappable"** %34 to %"class.blink::CSSStyleSheet"**
  %36 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %35, align 8
  %37 = icmp eq %"class.blink::CSSStyleSheet"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  tail call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* nonnull %36) #8
  %39 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %4, align 8
  br label %40

40:                                               ; preds = %19, %33, %38
  %41 = phi %"class.blink::CSSStyleRule"* [ %5, %33 ], [ %39, %38 ], [ %5, %19 ]
  %42 = phi %"class.blink::CSSStyleSheet"* [ null, %33 ], [ %36, %38 ], [ null, %19 ]
  %43 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %44 = bitcast i8* %43 to %"class.blink::CSSVariableData"**
  %45 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %44, align 8
  %46 = icmp eq %"class.blink::CSSStyleRule"* %41, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %41, i64 0, i32 1, i32 0, i32 0
  %49 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %48, align 8
  br label %50

50:                                               ; preds = %40, %47
  %51 = phi %"class.blink::StyleRule"* [ %49, %47 ], [ null, %40 ]
  %52 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink9StyleRule17MutablePropertiesEv(%"class.blink::StyleRule"* %51) #8
  %53 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64 32) #8
  %54 = icmp eq %"class.blink::CSSVariableData"* %45, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %56) #8
  br label %57

57:                                               ; preds = %55, %50
  %58 = ptrtoint %"class.blink::CSSVariableData"* %45 to i64
  store i8 0, i8* %53, align 1
  %59 = getelementptr inbounds i8, i8* %53, i64 1
  %60 = load i8, i8* %59, align 1
  %61 = and i8 %60, -8
  store i8 %61, i8* %59, align 1
  %62 = getelementptr inbounds i8, i8* %53, i64 2
  store i8 43, i8* %62, align 1
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds i8, i8* %53, i64 8
  %66 = bitcast i8* %65 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %66, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #8
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %73
  tail call void @llvm.trap() #8
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %85

85:                                               ; preds = %57, %68, %83
  %86 = getelementptr inbounds i8, i8* %53, i64 16
  %87 = bitcast i8* %86 to i64*
  store i64 %58, i64* %87, align 8
  %88 = getelementptr inbounds i8, i8* %53, i64 24
  %89 = bitcast i8* %88 to i32*
  store i32 0, i32* %89, align 8
  %90 = getelementptr inbounds i8, i8* %53, i64 -4
  %91 = bitcast i8* %90 to i16*
  %92 = load atomic i16, i16* %91 monotonic, align 2
  %93 = or i16 %92, 1
  store atomic i16 %93, i16* %91 release, align 2
  %94 = bitcast i8* %53 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKNS_8CSSValueEb(%"class.blink::MutableCSSPropertyValueSet"* %52, i32 1, %"class.blink::CSSValue"* dereferenceable(3) %94, i1 zeroext false) #8
  %95 = icmp eq %"class.blink::CSSStyleSheet"* %42, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %85
  tail call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %42, i32 1) #8
  br label %97

97:                                               ; preds = %3, %96, %85, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DeclaredStylePropertyMap14RemovePropertyENS_13CSSPropertyIDE(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %3, align 8
  %5 = icmp eq %"class.blink::CSSStyleRule"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %7, align 8
  %9 = icmp eq %"class.blink::StyleRule"* %8, null
  br i1 %9, label %52, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %14, label %32, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 0, i32 0
  br label %18

18:                                               ; preds = %16, %23
  %19 = phi %"class.blink::ScriptWrappable"** [ %31, %23 ], [ %15, %16 ]
  %20 = phi %"class.blink::CSSRule"* [ %26, %23 ], [ %17, %16 ]
  %21 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %19, align 8
  %22 = icmp eq %"class.blink::ScriptWrappable"* %21, null
  br i1 %22, label %39, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %20, i64 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.blink::ScriptWrappable"** %24 to %"class.blink::CSSRule"**
  %26 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %26, i64 0, i32 1
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 2
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %26, i64 0, i32 2, i32 0, i32 0
  br i1 %30, label %32, label %18

32:                                               ; preds = %23, %10
  %33 = phi %"class.blink::ScriptWrappable"** [ %15, %10 ], [ %31, %23 ]
  %34 = bitcast %"class.blink::ScriptWrappable"** %33 to %"class.blink::CSSStyleSheet"**
  %35 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %34, align 8
  %36 = icmp eq %"class.blink::CSSStyleSheet"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  tail call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* nonnull %35) #8
  %38 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %3, align 8
  br label %39

39:                                               ; preds = %18, %32, %37
  %40 = phi %"class.blink::CSSStyleRule"* [ %4, %32 ], [ %38, %37 ], [ %4, %18 ]
  %41 = phi %"class.blink::CSSStyleSheet"* [ null, %32 ], [ %35, %37 ], [ null, %18 ]
  %42 = icmp eq %"class.blink::CSSStyleRule"* %40, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %40, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %44, align 8
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi %"class.blink::StyleRule"* [ %45, %43 ], [ null, %39 ]
  %48 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink9StyleRule17MutablePropertiesEv(%"class.blink::StyleRule"* %47) #8
  %49 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %48, i32 %1, %"class.WTF::String"* null) #8
  %50 = icmp eq %"class.blink::CSSStyleSheet"* %41, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  tail call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %41, i32 1) #8
  br label %52

52:                                               ; preds = %2, %51, %46, %6
  ret void
}

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DeclaredStylePropertyMap20RemoveCustomPropertyERKN3WTF12AtomicStringE(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %3, align 8
  %5 = icmp eq %"class.blink::CSSStyleRule"* %4, null
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %7, align 8
  %9 = icmp eq %"class.blink::StyleRule"* %8, null
  br i1 %9, label %73, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %14, label %32, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 0, i32 0
  br label %18

18:                                               ; preds = %16, %23
  %19 = phi %"class.blink::ScriptWrappable"** [ %31, %23 ], [ %15, %16 ]
  %20 = phi %"class.blink::CSSRule"* [ %26, %23 ], [ %17, %16 ]
  %21 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %19, align 8
  %22 = icmp eq %"class.blink::ScriptWrappable"* %21, null
  br i1 %22, label %39, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %20, i64 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.blink::ScriptWrappable"** %24 to %"class.blink::CSSRule"**
  %26 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %26, i64 0, i32 1
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 2
  %30 = icmp eq i8 %29, 0
  %31 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %26, i64 0, i32 2, i32 0, i32 0
  br i1 %30, label %32, label %18

32:                                               ; preds = %23, %10
  %33 = phi %"class.blink::ScriptWrappable"** [ %15, %10 ], [ %31, %23 ]
  %34 = bitcast %"class.blink::ScriptWrappable"** %33 to %"class.blink::CSSStyleSheet"**
  %35 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %34, align 8
  %36 = icmp eq %"class.blink::CSSStyleSheet"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  tail call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* nonnull %35) #8
  %38 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %3, align 8
  br label %39

39:                                               ; preds = %18, %32, %37
  %40 = phi %"class.blink::CSSStyleRule"* [ %4, %32 ], [ %38, %37 ], [ %4, %18 ]
  %41 = phi %"class.blink::CSSStyleSheet"* [ null, %32 ], [ %35, %37 ], [ null, %18 ]
  %42 = icmp eq %"class.blink::CSSStyleRule"* %40, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %40, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %44, align 8
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi %"class.blink::StyleRule"* [ %45, %43 ], [ null, %39 ]
  %48 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink9StyleRule17MutablePropertiesEv(%"class.blink::StyleRule"* %47) #8
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #8
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %57
  tail call void @llvm.trap() #8
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %69

69:                                               ; preds = %46, %52, %67
  %70 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyIN3WTF12AtomicStringEEEbT_PNS2_6StringE(%"class.blink::MutableCSSPropertyValueSet"* %48, %"class.WTF::StringImpl"* %50, %"class.WTF::String"* null) #8
  %71 = icmp eq %"class.blink::CSSStyleSheet"* %41, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  tail call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %41, i32 1) #8
  br label %73

73:                                               ; preds = %2, %72, %69, %6
  ret void
}

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyIN3WTF12AtomicStringEEEbT_PNS2_6StringE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::StringImpl"*, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DeclaredStylePropertyMap19RemoveAllPropertiesEv(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %2, align 8
  %4 = icmp eq %"class.blink::CSSStyleRule"* %3, null
  br i1 %4, label %50, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %3, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %6, align 8
  %8 = icmp eq %"class.blink::StyleRule"* %7, null
  br i1 %8, label %50, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %3, i64 0, i32 0, i32 1
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, 2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %13, label %31, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %3, i64 0, i32 0
  br label %17

17:                                               ; preds = %15, %22
  %18 = phi %"class.blink::ScriptWrappable"** [ %30, %22 ], [ %14, %15 ]
  %19 = phi %"class.blink::CSSRule"* [ %25, %22 ], [ %16, %15 ]
  %20 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %18, align 8
  %21 = icmp eq %"class.blink::ScriptWrappable"* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %19, i64 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.blink::ScriptWrappable"** %23 to %"class.blink::CSSRule"**
  %25 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %25, i64 0, i32 1
  %27 = load i8, i8* %26, align 8
  %28 = and i8 %27, 2
  %29 = icmp eq i8 %28, 0
  %30 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %25, i64 0, i32 2, i32 0, i32 0
  br i1 %29, label %31, label %17

31:                                               ; preds = %22, %9
  %32 = phi %"class.blink::ScriptWrappable"** [ %14, %9 ], [ %30, %22 ]
  %33 = bitcast %"class.blink::ScriptWrappable"** %32 to %"class.blink::CSSStyleSheet"**
  %34 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %33, align 8
  %35 = icmp eq %"class.blink::CSSStyleSheet"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  tail call void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"* nonnull %34) #8
  %37 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %2, align 8
  br label %38

38:                                               ; preds = %17, %31, %36
  %39 = phi %"class.blink::CSSStyleRule"* [ %3, %31 ], [ %37, %36 ], [ %3, %17 ]
  %40 = phi %"class.blink::CSSStyleSheet"* [ null, %31 ], [ %34, %36 ], [ null, %17 ]
  %41 = icmp eq %"class.blink::CSSStyleRule"* %39, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %39, i64 0, i32 1, i32 0, i32 0
  %44 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %43, align 8
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi %"class.blink::StyleRule"* [ %44, %42 ], [ null, %38 ]
  %47 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink9StyleRule17MutablePropertiesEv(%"class.blink::StyleRule"* %46) #8
  tail call void @_ZN5blink26MutableCSSPropertyValueSet5ClearEv(%"class.blink::MutableCSSPropertyValueSet"* %47) #8
  %48 = icmp eq %"class.blink::CSSStyleSheet"* %40, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  tail call void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"* nonnull %40, i32 1) #8
  br label %50

50:                                               ; preds = %1, %49, %45, %5
  ret void
}

declare void @_ZN5blink26MutableCSSPropertyValueSet5ClearEv(%"class.blink::MutableCSSPropertyValueSet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24DeclaredStylePropertyMap15ForEachPropertyERKNSt3__18functionIFvRKNS_15CSSPropertyNameERKNS_8CSSValueEEEE(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly, %"class.std::__1::function"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSPropertyName", align 8
  %4 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %4, align 8
  %6 = icmp eq %"class.blink::CSSStyleRule"* %5, null
  br i1 %6, label %94, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %5, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %8, align 8
  %10 = icmp eq %"class.blink::StyleRule"* %9, null
  br i1 %10, label %94, label %11

11:                                               ; preds = %7
  %12 = tail call dereferenceable(4) %"class.blink::CSSPropertyValueSet"* @_ZNK5blink9StyleRule10PropertiesEv(%"class.blink::StyleRule"* nonnull %9) #8
  %13 = icmp eq %"class.blink::CSSPropertyValueSet"* %12, null
  %14 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %12, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %12, i64 7, i32 0
  %16 = bitcast %"class.blink::CSSPropertyName"* %3 to i8*
  %17 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %12, i64 4
  %18 = bitcast %"class.blink::CSSPropertyValueSet"* %17 to %"class.WTF::Vector.88"*
  %19 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %12, i64 2
  %20 = bitcast %"class.blink::CSSPropertyValueSet"* %19 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %21 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = bitcast %"class.blink::CSSPropertyValueSet"* %19 to %"class.blink::Member.91"*
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %92, %11
  %27 = phi i64 [ %93, %92 ], [ 0, %11 ]
  br i1 %13, label %28, label %30

28:                                               ; preds = %26
  %29 = load i32, i32* null, align 536870912
  br label %35

30:                                               ; preds = %26
  %31 = load i32, i32* %14, align 4
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = load i32, i32* %15, align 4
  br label %38

35:                                               ; preds = %30, %28
  %36 = phi i32 [ %29, %28 ], [ %31, %30 ]
  %37 = and i32 %36, 268435455
  br label %38

38:                                               ; preds = %33, %35
  %39 = phi i32 [ %37, %35 ], [ %34, %33 ]
  %40 = zext i32 %39 to i64
  %41 = icmp ult i64 %27, %40
  br i1 %41, label %42, label %94

42:                                               ; preds = %38
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  br i1 %13, label %43, label %45

43:                                               ; preds = %42
  %44 = load i32, i32* %14, align 8
  br label %52

45:                                               ; preds = %42
  %46 = load i32, i32* %14, align 4
  %47 = icmp sgt i32 %46, -1
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = trunc i64 %27 to i32
  %50 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.88"* %18, i32 %49) #8
  %51 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %50, i64 0, i32 0
  br label %59

52:                                               ; preds = %45, %43
  %53 = phi i32 [ %44, %43 ], [ %46, %45 ]
  %54 = and i32 %53, 268435455
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %20, i64 %55
  %57 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %56 to %"struct.blink::CSSPropertyValueMetadata"*
  %58 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %57, i64 %27
  br label %59

59:                                               ; preds = %48, %52
  %60 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %58, %52 ], [ %51, %48 ]
  %61 = call { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"* %60) #8
  %62 = extractvalue { i32, %"class.WTF::StringImpl"* } %61, 0
  store i32 %62, i32* %21, align 8
  %63 = extractvalue { i32, %"class.WTF::StringImpl"* } %61, 1
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %22, align 8
  %64 = load i32, i32* %14, align 4
  %65 = icmp sgt i32 %64, -1
  %66 = or i1 %13, %65
  br i1 %66, label %71, label %67

67:                                               ; preds = %59
  %68 = trunc i64 %27 to i32
  %69 = call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.88"* %18, i32 %68) #8
  %70 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %69, i64 0, i32 1, i32 0, i32 0
  br label %73

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.blink::Member.91", %"class.blink::Member.91"* %23, i64 %27, i32 0, i32 0
  br label %73

73:                                               ; preds = %67, %71
  %74 = phi %"class.blink::CSSValue"** [ %72, %71 ], [ %70, %67 ]
  %75 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %74, align 8
  %76 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)** %24, align 8
  call void %76(%"union.std::__1::__function::__policy_storage"* %25, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %3, %"class.blink::CSSValue"* dereferenceable(3) %75) #8
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #8
  br label %92

92:                                               ; preds = %73, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  %93 = add nuw nsw i64 %27, 1
  br label %26

94:                                               ; preds = %38, %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink24DeclaredStylePropertyMap25SerializationForShorthandERKNS_11CSSPropertyE(%"class.blink::DeclaredStylePropertyMap"* nocapture readonly, %"class.blink::CSSProperty"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::StylePropertySerializer", align 8
  %5 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %5, align 8
  %7 = icmp eq %"class.blink::CSSStyleRule"* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %6, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %9, align 8
  %11 = icmp eq %"class.blink::StyleRule"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::StylePropertySerializer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %13) #8
  %14 = tail call dereferenceable(4) %"class.blink::CSSPropertyValueSet"* @_ZNK5blink9StyleRule10PropertiesEv(%"class.blink::StyleRule"* nonnull %10) #8
  call void @_ZN5blink23StylePropertySerializerC1ERKNS_19CSSPropertyValueSetE(%"class.blink::StylePropertySerializer"* nonnull %4, %"class.blink::CSSPropertyValueSet"* dereferenceable(4) %14) #8
  %15 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = call %"class.WTF::StringImpl"* @_ZNK5blink23StylePropertySerializer18SerializeShorthandENS_13CSSPropertyIDE(%"class.blink::StylePropertySerializer"* nonnull %4, i32 %16) #8
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %13) #8
  br label %22

19:                                               ; preds = %2, %8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #8
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  br label %22

22:                                               ; preds = %12, %19
  %23 = phi %"class.WTF::StringImpl"* [ %17, %12 ], [ %21, %19 ]
  ret %"class.WTF::StringImpl"* %23
}

declare void @_ZN5blink23StylePropertySerializerC1ERKNS_19CSSPropertyValueSetE(%"class.blink::StylePropertySerializer"*, %"class.blink::CSSPropertyValueSet"* dereferenceable(4)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink23StylePropertySerializer18SerializeShorthandENS_13CSSPropertyIDE(%"class.blink::StylePropertySerializer"*, i32) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24DeclaredStylePropertyMapD0Ev(%"class.blink::DeclaredStylePropertyMap"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink24DeclaredStylePropertyMap5TraceEPNS_7VisitorE(%"class.blink::DeclaredStylePropertyMap"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WeakMember"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::WeakMember"* %3 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %11, i64 6
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %9, i8* %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_12CSSStyleRuleEEEvRKNS_14LivenessBrokerEPKv) #8
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::DeclaredStylePropertyMap", %"class.blink::DeclaredStylePropertyMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %15, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16StylePropertyMap18GetWrapperTypeInfoEv(%"class.blink::StylePropertyMap"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16StylePropertyMap18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.blink::CSSStyleValue"* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3getEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare void @_ZNK5blink34StylePropertyMapReadOnlyMainThread6getAllEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE() unnamed_addr

declare zeroext i1 @_ZNK5blink34StylePropertyMapReadOnlyMainThread3hasEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* @_ZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* @_ZThn16_N5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink13CSSStyleSheet15WillMutateRulesEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #2

declare void @_ZN5blink13CSSStyleSheet9DidMutateENS0_8MutationE(%"class.blink::CSSStyleSheet"*, i32) local_unnamed_addr #2

declare { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.88"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.88", %"class.WTF::Vector.88"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_12CSSStyleRuleEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleRule"**
  %4 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %3, align 8
  %5 = ptrtoint %"class.blink::CSSStyleRule"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %4, i64 -1, i32 3
  %20 = bitcast %"class.blink::Member.27"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleRule"*
  tail call void @_ZNK5blink12CSSStyleRule5TraceEPNS_7VisitorE(%"class.blink::CSSStyleRule"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink12CSSStyleRule5TraceEPNS_7VisitorE(%"class.blink::CSSStyleRule"*, %"class.blink::Visitor"*) unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_28CSSCustomPropertyDeclarationEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
