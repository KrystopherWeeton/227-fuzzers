; ModuleID = '../../v8/src/compiler/loop-analysis.cc'
source_filename = "../../v8/src/compiler/loop-analysis.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::LoopTree" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.18", %"class.v8::internal::ZoneVector.25" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::LoopTree::Loop" = type { %"class.v8::internal::compiler::LoopTree::Loop"*, i32, %"class.v8::internal::ZoneVector", i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::LoopTree::Loop"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.11" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::compiler::LoopTree::Loop"* }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::ZoneAllocator.17" }
%"class.v8::internal::ZoneAllocator.17" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.18" = type { %"class.std::__1::vector.19" }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { i32*, i32*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.v8::internal::ZoneAllocator.24" }
%"class.v8::internal::ZoneAllocator.24" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.25" = type { %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.28" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29", %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.v8::internal::ZoneAllocator.31" }
%"class.v8::internal::ZoneAllocator.31" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector.32" }
%"class.v8::internal::ZoneVector.32" = type { %"class.std::__1::vector.33" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.35" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.v8::internal::ZoneAllocator.38" }
%"class.v8::internal::ZoneAllocator.38" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::LoopFinderImpl" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneDeque", %"class.v8::internal::compiler::NodeMarker", %"class.v8::internal::ZoneVector.47", %"class.v8::internal::ZoneVector.54", %"class.v8::internal::ZoneVector.18", %"class.v8::internal::compiler::LoopTree"*, i32, i32, i32*, i32*, %"class.v8::internal::TickCounter"* }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.43" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.v8::internal::compiler::Node"*** }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.42", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.42" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.v8::internal::RecyclingZoneAllocator.46" }
%"class.v8::internal::RecyclingZoneAllocator.46" = type { %"class.v8::internal::ZoneAllocator.31", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, i64 }
%"class.v8::internal::compiler::NodeMarker" = type { %"class.v8::internal::compiler::NodeMarkerBase" }
%"class.v8::internal::compiler::NodeMarkerBase" = type { i32, i32 }
%"class.v8::internal::ZoneVector.47" = type { %"class.std::__1::vector.48" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"*, %"class.std::__1::__compressed_pair.50" }
%"struct.v8::internal::compiler::NodeInfo" = type { %"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::NodeInfo"*, i8 }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.v8::internal::compiler::NodeInfo"* }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.v8::internal::ZoneAllocator.53" }
%"class.v8::internal::ZoneAllocator.53" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.54" = type { %"class.std::__1::vector.55" }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"*, %"class.std::__1::__compressed_pair.57" }
%"struct.v8::internal::compiler::TempLoopInfo" = type { %"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"*, %"class.v8::internal::compiler::LoopTree::Loop"* }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.v8::internal::compiler::TempLoopInfo"* }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.v8::internal::ZoneAllocator.60" }
%"class.v8::internal::ZoneAllocator.60" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::ZoneUnorderedSet" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.61", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.74", [4 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63", %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.v8::internal::ZoneAllocator.67" }
%"class.v8::internal::ZoneAllocator.67" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69", %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.v8::internal::ZoneAllocator.71" }
%"class.v8::internal::ZoneAllocator.71" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { float }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.v8::internal::compiler::Node"* }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.v8::internal::compiler::NodeCopier" = type <{ %"class.v8::internal::compiler::NodeMarker.81", %"class.v8::internal::ZoneVector.25"*, i32, [4 x i8] }>
%"class.v8::internal::compiler::NodeMarker.81" = type { %"class.v8::internal::compiler::NodeMarkerBase" }
%"struct.std::__1::__split_buffer.83" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.v8::internal::RecyclingZoneAllocator"* }

$_ZN2v88internal8compiler14LoopFinderImplC2EPNS1_5GraphEPNS1_8LoopTreeEPNS0_11TickCounterEPNS0_4ZoneE = comdat any

$_ZN2v88internal8compiler14LoopFinderImpl5PrintEv = comdat any

$_ZN2v88internal8compiler14LoopFinderImplD2Ev = comdat any

$_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPKS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS5_EEE4typeESD_SF_SF_ = comdat any

$_ZN2v88internal8compiler14LoopFinderImpl17PropagateBackwardEv = comdat any

$_ZN2v88internal8compiler14LoopFinderImpl16PropagateForwardEv = comdat any

$_ZN2v88internal8compiler14LoopFinderImpl14FinishLoopTreeEv = comdat any

$_ZN2v88internal8compiler14LoopFinderImpl14CreateLoopInfoEPNS1_4NodeE = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZN2v88internal8compiler14LoopFinderImpl24SetLoopMarkForLoopHeaderEPNS1_4NodeEi = comdat any

$_ZNSt3__16vectorIN2v88internal8compiler8LoopTree4LoopENS2_13ZoneAllocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZN2v88internal8compiler14LoopFinderImpl16FinishSingleLoopEv = comdat any

$_ZN2v88internal8compiler14LoopFinderImpl15ConnectLoopTreeEi = comdat any

$_ZN2v88internal8compiler14LoopFinderImpl13SerializeLoopEPNS1_8LoopTree4LoopE = comdat any

$_ZN2v88internal8compiler14LoopFinderImpl9PrintLoopEPNS1_8LoopTree4LoopE = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

@_ZN2v88internal21FLAG_trace_turbo_loopE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [137 x i8] c"Floating control detected in wasm turbofan graph: Node #%d:%s is inside loop headed by #%d, but its control dependency #%d:%s is outside\00", align 1
@.str.1 = private unnamed_addr constant [116 x i8] c"Cannot peel loop %i. Loop exit without explicit mark: Node %i (%s) is inside loop, but its use %i (%s) is outside.\0A\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ni.node->opcode() != IrOpcode::kReturn\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c" #%d:%s\0A\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"Loop %d headed at #%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"Loop depth = %d \00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c" H#%d\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c" B#%d\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c" E#%d\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.18 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LoopTree"* @_ZN2v88internal8compiler10LoopFinder13BuildLoopTreeEPNS1_5GraphEPNS0_11TickCounterEPNS0_4ZoneE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LoopFinderImpl", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %11
  %15 = icmp ult i64 %14, 136
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %3
  %17 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 136) #9
  br label %20

18:                                               ; preds = %3
  %19 = add i64 %11, 136
  store i64 %19, i64* %10, align 8
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi i64 [ %17, %16 ], [ %11, %18 ]
  %22 = inttoptr i64 %21 to %"class.v8::internal::compiler::LoopTree"*
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 0
  store %"class.v8::internal::Zone"* %6, %"class.v8::internal::Zone"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 1
  %25 = ptrtoint %"class.v8::internal::Zone"* %6 to i64
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %27 = bitcast %"struct.std::__1::__compressed_pair_elem.10"* %26 to i64*
  %28 = bitcast %"class.v8::internal::ZoneVector"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #9
  store i64 %25, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 2
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %31 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %30 to i64*
  %32 = bitcast %"class.v8::internal::ZoneVector.11"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #9
  store i64 %25, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 3
  %34 = shl nuw i64 %9, 32
  %35 = sext i32 %8 to i64
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1
  %37 = bitcast %"struct.std::__1::__compressed_pair_elem.23"* %36 to i64*
  %38 = bitcast %"class.v8::internal::ZoneVector.18"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #9
  store i64 %25, i64* %37, align 8
  %39 = icmp eq i32 %8, 0
  br i1 %39, label %66, label %40

40:                                               ; preds = %20
  %41 = icmp ugt i32 %8, 536870911
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::ZoneVector.18"* %33 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %43) #10
  unreachable

44:                                               ; preds = %40
  %45 = ashr exact i64 %34, 30
  %46 = add nuw nsw i64 %45, 7
  %47 = and i64 %46, -8
  %48 = load i64, i64* %10, align 8
  %49 = load i64, i64* %12, align 8
  %50 = sub i64 %49, %48
  %51 = icmp ugt i64 %47, %50
  br i1 %51, label %52, label %54, !prof !2

52:                                               ; preds = %44
  %53 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %47) #9
  br label %56

54:                                               ; preds = %44
  %55 = add i64 %48, %47
  store i64 %55, i64* %10, align 8
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi i64 [ %53, %52 ], [ %48, %54 ]
  %58 = inttoptr i64 %57 to i32*
  %59 = inttoptr i64 %57 to i8*
  %60 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 3, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.v8::internal::ZoneVector.18", %"class.v8::internal::ZoneVector.18"* %33, i64 0, i32 0, i32 0, i32 0
  store i32* %58, i32** %61, align 8
  %62 = getelementptr inbounds i32, i32* %58, i64 %35
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %62, i32** %63, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 -1, i64 %45, i1 false) #9
  %64 = bitcast i32** %60 to i64*
  %65 = ptrtoint i32* %62 to i64
  store i64 %65, i64* %64, align 8
  br label %66

66:                                               ; preds = %20, %56
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 4
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %22, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %69 = bitcast %"struct.std::__1::__compressed_pair_elem.30"* %68 to i64*
  %70 = bitcast %"class.v8::internal::ZoneVector.25"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #9
  store i64 %25, i64* %69, align 8
  %71 = bitcast %"class.v8::internal::compiler::LoopFinderImpl"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %71) #9
  call void @_ZN2v88internal8compiler14LoopFinderImplC2EPNS1_5GraphEPNS1_8LoopTreeEPNS0_11TickCounterEPNS0_4ZoneE(%"class.v8::internal::compiler::LoopFinderImpl"* nonnull %4, %"class.v8::internal::compiler::Graph"* %0, %"class.v8::internal::compiler::LoopTree"* %22, %"class.v8::internal::TickCounter"* %1, %"class.v8::internal::Zone"* %2)
  call void @_ZN2v88internal8compiler14LoopFinderImpl17PropagateBackwardEv(%"class.v8::internal::compiler::LoopFinderImpl"* nonnull %4) #9
  call void @_ZN2v88internal8compiler14LoopFinderImpl16PropagateForwardEv(%"class.v8::internal::compiler::LoopFinderImpl"* nonnull %4) #9
  call void @_ZN2v88internal8compiler14LoopFinderImpl14FinishLoopTreeEv(%"class.v8::internal::compiler::LoopFinderImpl"* nonnull %4) #9
  %72 = load i8, i8* @_ZN2v88internal21FLAG_trace_turbo_loopE, align 1, !range !3
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %75, label %74

74:                                               ; preds = %66
  call void @_ZN2v88internal8compiler14LoopFinderImpl5PrintEv(%"class.v8::internal::compiler::LoopFinderImpl"* nonnull %4)
  br label %75

75:                                               ; preds = %66, %74
  call void @_ZN2v88internal8compiler14LoopFinderImplD2Ev(%"class.v8::internal::compiler::LoopFinderImpl"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %71) #9
  ret %"class.v8::internal::compiler::LoopTree"* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14LoopFinderImplC2EPNS1_5GraphEPNS1_8LoopTreeEPNS0_11TickCounterEPNS0_4ZoneE(%"class.v8::internal::compiler::LoopFinderImpl"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*) unnamed_addr #0 comdat align 2 {
  %6 = alloca { %"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::NodeInfo"* }, align 8
  %7 = alloca [7 x i8], align 1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 0
  store %"class.v8::internal::Zone"* %4, %"class.v8::internal::Zone"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %1, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::compiler::Node"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::compiler::Node"** %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2
  %15 = ptrtoint %"class.v8::internal::Zone"* %4 to i64
  %16 = bitcast %"class.v8::internal::ZoneDeque"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #9
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 3, i32 1
  %18 = bitcast %"struct.std::__1::__compressed_pair_elem.41"* %17 to i64*
  store i64 %15, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %20 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #9
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %22 = bitcast %"struct.std::__1::__compressed_pair_elem.45"* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"* %24, %"class.v8::internal::compiler::Graph"* %1, i32 2) #9
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %1, i64 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = bitcast { %"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::NodeInfo"* }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29)
  %30 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %30)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %30, i8 0, i64 7, i1 false)
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.52"* %31 to i64*
  %33 = bitcast %"class.v8::internal::ZoneVector.47"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #9
  store i64 %15, i64* %32, align 8
  %34 = icmp eq i32 %27, 0
  br i1 %34, label %68, label %35

35:                                               ; preds = %5
  %36 = icmp ugt i32 %27, 89478485
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast %"class.v8::internal::ZoneVector.47"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #10
  unreachable

39:                                               ; preds = %35
  %40 = mul nuw nsw i64 %28, 24
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %44, %42
  %46 = icmp ugt i64 %40, %45
  br i1 %46, label %47, label %49, !prof !2

47:                                               ; preds = %39
  %48 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 %40) #9
  br label %51

49:                                               ; preds = %39
  %50 = add i64 %42, %40
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi i64 [ %48, %47 ], [ %42, %49 ]
  %53 = inttoptr i64 %52 to %"struct.v8::internal::compiler::NodeInfo"*
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store %"struct.v8::internal::compiler::NodeInfo"* %53, %"struct.v8::internal::compiler::NodeInfo"** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::ZoneVector.47", %"class.v8::internal::ZoneVector.47"* %25, i64 0, i32 0, i32 0, i32 0
  store %"struct.v8::internal::compiler::NodeInfo"* %53, %"struct.v8::internal::compiler::NodeInfo"** %55, align 8
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %53, i64 %28
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.v8::internal::compiler::NodeInfo"* %56, %"struct.v8::internal::compiler::NodeInfo"** %57, align 8
  br label %58

58:                                               ; preds = %58, %51
  %59 = phi %"struct.v8::internal::compiler::NodeInfo"* [ %53, %51 ], [ %63, %58 ]
  %60 = bitcast %"struct.v8::internal::compiler::NodeInfo"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* nonnull align 8 %29, i64 16, i1 false)
  %61 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %59, i64 0, i32 2
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* nonnull align 1 %30, i64 7, i1 false)
  %63 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %59, i64 1
  %64 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %63, %56
  br i1 %64, label %65, label %58

65:                                               ; preds = %58
  %66 = bitcast %"struct.v8::internal::compiler::NodeInfo"** %54 to i64*
  %67 = ptrtoint %"struct.v8::internal::compiler::NodeInfo"* %56 to i64
  store i64 %67, i64* %66, align 8
  br label %68

68:                                               ; preds = %5, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %30)
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5
  %70 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1
  %71 = bitcast %"struct.std::__1::__compressed_pair_elem.59"* %70 to i64*
  %72 = bitcast %"class.v8::internal::ZoneVector.54"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #9
  store i64 %15, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 6
  %74 = load i32, i32* %26, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 1
  %77 = bitcast %"struct.std::__1::__compressed_pair_elem.23"* %76 to i64*
  %78 = bitcast %"class.v8::internal::ZoneVector.18"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #9
  store i64 %15, i64* %77, align 8
  %79 = icmp eq i32 %74, 0
  br i1 %79, label %108, label %80

80:                                               ; preds = %68
  %81 = icmp ugt i32 %74, 536870911
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = bitcast %"class.v8::internal::ZoneVector.18"* %73 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %83) #10
  unreachable

84:                                               ; preds = %80
  %85 = shl nuw nsw i64 %75, 2
  %86 = add nuw nsw i64 %85, 7
  %87 = and i64 %86, 34359738360
  %88 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %91, %89
  %93 = icmp ugt i64 %87, %92
  br i1 %93, label %94, label %96, !prof !2

94:                                               ; preds = %84
  %95 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 %87) #9
  br label %98

96:                                               ; preds = %84
  %97 = add i64 %89, %87
  store i64 %97, i64* %88, align 8
  br label %98

98:                                               ; preds = %96, %94
  %99 = phi i64 [ %95, %94 ], [ %89, %96 ]
  %100 = inttoptr i64 %99 to i32*
  %101 = inttoptr i64 %99 to i8*
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.v8::internal::ZoneVector.18", %"class.v8::internal::ZoneVector.18"* %73, i64 0, i32 0, i32 0, i32 0
  store i32* %100, i32** %103, align 8
  %104 = getelementptr inbounds i32, i32* %100, i64 %75
  %105 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %104, i32** %105, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %101, i8 -1, i64 %85, i1 false)
  %106 = bitcast i32** %102 to i64*
  %107 = ptrtoint i32* %104 to i64
  store i64 %107, i64* %106, align 8
  br label %108

108:                                              ; preds = %68, %98
  %109 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  store %"class.v8::internal::compiler::LoopTree"* %2, %"class.v8::internal::compiler::LoopTree"** %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 12
  %112 = bitcast i32* %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false)
  store %"class.v8::internal::TickCounter"* %3, %"class.v8::internal::TickCounter"** %111, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14LoopFinderImpl5PrintEv(%"class.v8::internal::compiler::LoopFinderImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %5 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %4, align 8
  %6 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %3, %5
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 9
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 11
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 10
  br label %18

12:                                               ; preds = %67, %1
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %16 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %15, align 8
  %17 = icmp eq %"struct.v8::internal::compiler::TempLoopInfo"* %14, %16
  br i1 %17, label %70, label %78

18:                                               ; preds = %7, %67
  %19 = phi %"struct.v8::internal::compiler::NodeInfo"* [ %3, %7 ], [ %68, %67 ]
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %19, i64 0, i32 0
  %21 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %20, align 8
  %22 = icmp eq %"class.v8::internal::compiler::Node"* %21, null
  br i1 %22, label %67, label %23

23:                                               ; preds = %18
  %24 = load i32, i32* %8, align 8
  %25 = icmp slt i32 %24, 1
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %21, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 16777215
  br i1 %25, label %29, label %36

29:                                               ; preds = %36, %23
  %30 = phi %"class.v8::internal::compiler::Node"* [ %21, %23 ], [ %63, %36 ]
  %31 = phi i32 [ %28, %23 ], [ %66, %36 ]
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %30, i64 0, i32 0
  %33 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %33, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i32 %31, i8* %35) #9
  br label %67

36:                                               ; preds = %23, %36
  %37 = phi i32 [ %66, %36 ], [ %28, %23 ]
  %38 = phi i32 [ %60, %36 ], [ 1, %23 ]
  %39 = load i32, i32* %9, align 4
  %40 = mul i32 %39, %37
  %41 = lshr i32 %38, 5
  %42 = add i32 %40, %41
  %43 = load i32*, i32** %10, align 8
  %44 = sext i32 %42 to i64
  %45 = getelementptr inbounds i32, i32* %43, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %38, 31
  %48 = shl i32 1, %47
  %49 = and i32 %46, %48
  %50 = icmp ne i32 %49, 0
  %51 = load i32*, i32** %11, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 %44
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, %48
  %55 = icmp ne i32 %54, 0
  %56 = and i1 %50, %55
  %57 = select i1 %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)
  %58 = select i1 %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0)
  %59 = select i1 %50, i8* %57, i8* %58
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* %59) #9
  %60 = add nuw nsw i32 %38, 1
  %61 = load i32, i32* %8, align 8
  %62 = icmp slt i32 %38, %61
  %63 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %20, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %63, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 16777215
  br i1 %62, label %36, label %29

67:                                               ; preds = %18, %29
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %19, i64 1
  %69 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %68, %5
  br i1 %69, label %12, label %18

70:                                               ; preds = %78, %12
  %71 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %72 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %72, i64 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %72, i64 0, i32 1, i32 0, i32 0, i32 1
  %76 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %75, align 8
  %77 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %74, %76
  br i1 %77, label %89, label %90

78:                                               ; preds = %12, %78
  %79 = phi i32 [ %86, %78 ], [ 0, %12 ]
  %80 = phi %"struct.v8::internal::compiler::TempLoopInfo"* [ %87, %78 ], [ %14, %12 ]
  %81 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %80, i64 0, i32 0
  %82 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %82, i64 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i32 %79, i32 %85) #9
  %86 = add nuw nsw i32 %79, 1
  %87 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %80, i64 1
  %88 = icmp eq %"struct.v8::internal::compiler::TempLoopInfo"* %87, %16
  br i1 %88, label %70, label %78

89:                                               ; preds = %90, %70
  ret void

90:                                               ; preds = %70, %90
  %91 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %93, %90 ], [ %74, %70 ]
  %92 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %91, align 8
  tail call void @_ZN2v88internal8compiler14LoopFinderImpl9PrintLoopEPNS1_8LoopTree4LoopE(%"class.v8::internal::compiler::LoopFinderImpl"* %0, %"class.v8::internal::compiler::LoopTree::Loop"* %92)
  %93 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %91, i64 1
  %94 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %93, %76
  br i1 %94, label %89, label %90
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14LoopFinderImplD2Ev(%"class.v8::internal::compiler::LoopFinderImpl"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %10, align 8
  %12 = icmp eq %"struct.v8::internal::compiler::TempLoopInfo"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = ptrtoint %"struct.v8::internal::compiler::TempLoopInfo"* %11 to i64
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.v8::internal::compiler::TempLoopInfo"** %15 to i64*
  store i64 %14, i64* %16, align 8
  br label %17

17:                                               ; preds = %9, %13
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %18, align 8
  %20 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = ptrtoint %"struct.v8::internal::compiler::NodeInfo"* %19 to i64
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.v8::internal::compiler::NodeInfo"** %23 to i64*
  store i64 %22, i64* %24, align 8
  br label %25

25:                                               ; preds = %17, %21
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %27 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %29, 9
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %27, i64 %30
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %32, align 8
  %34 = icmp eq %"class.v8::internal::compiler::Node"*** %33, %27
  %35 = ptrtoint %"class.v8::internal::compiler::Node"*** %33 to i64
  %36 = ptrtoint %"class.v8::internal::compiler::Node"*** %27 to i64
  br i1 %34, label %37, label %39

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %52

39:                                               ; preds = %25
  %40 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %31, align 8
  %41 = and i64 %29, 511
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 %41
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, %29
  %46 = lshr i64 %45, 9
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %27, i64 %46
  %48 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %47, align 8
  %49 = and i64 %45, 511
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, i64 %49
  %51 = icmp eq %"class.v8::internal::compiler::Node"** %50, %42
  br i1 %51, label %52, label %63

52:                                               ; preds = %76, %39, %37
  %53 = phi i64* [ %38, %37 ], [ %43, %39 ], [ %43, %76 ]
  store i64 0, i64* %53, align 8
  %54 = bitcast %"class.v8::internal::compiler::Node"**** %32 to i64*
  %55 = sub i64 %35, %36
  %56 = ashr exact i64 %55, 3
  %57 = icmp ugt i64 %56, 2
  br i1 %57, label %58, label %111

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %60 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %59 to i64*
  %61 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %59 to %"class.v8::internal::compiler::Node"***
  %62 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %59, align 8
  br label %81

63:                                               ; preds = %39, %76
  %64 = phi %"class.v8::internal::compiler::Node"** [ %79, %76 ], [ %42, %39 ]
  %65 = phi %"class.v8::internal::compiler::Node"*** [ %77, %76 ], [ %31, %39 ]
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, i64 1
  %67 = ptrtoint %"class.v8::internal::compiler::Node"** %66 to i64
  %68 = bitcast %"class.v8::internal::compiler::Node"*** %65 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = icmp eq i64 %70, 4096
  br i1 %71, label %72, label %76

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %65, i64 1
  %74 = bitcast %"class.v8::internal::compiler::Node"*** %73 to i64*
  %75 = load i64, i64* %74, align 8
  br label %76

76:                                               ; preds = %72, %63
  %77 = phi %"class.v8::internal::compiler::Node"*** [ %73, %72 ], [ %65, %63 ]
  %78 = phi i64 [ %75, %72 ], [ %67, %63 ]
  %79 = inttoptr i64 %78 to %"class.v8::internal::compiler::Node"**
  %80 = icmp eq %"class.v8::internal::compiler::Node"** %50, %79
  br i1 %80, label %52, label %63

81:                                               ; preds = %101, %58
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %33, %58 ], [ %102, %101 ]
  %83 = phi i64 [ %35, %58 ], [ %103, %101 ]
  %84 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %62, %58 ], [ %105, %101 ]
  %85 = phi %"class.v8::internal::compiler::Node"*** [ %27, %58 ], [ %106, %101 ]
  %86 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %85, align 8
  %87 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %84, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %84, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp ugt i64 %90, 512
  br i1 %91, label %101, label %92

92:                                               ; preds = %88, %81
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %86, i64 1
  %94 = bitcast %"class.v8::internal::compiler::Node"** %93 to i64*
  store i64 512, i64* %94, align 8
  %95 = load i64, i64* %60, align 8
  %96 = bitcast %"class.v8::internal::compiler::Node"** %86 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.v8::internal::compiler::Node"** %86, %"class.v8::internal::compiler::Node"*** %61, align 8
  %97 = bitcast %"class.v8::internal::compiler::Node"** %86 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  %98 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %26, align 8
  %99 = load i64, i64* %54, align 8
  %100 = inttoptr i64 %99 to %"class.v8::internal::compiler::Node"***
  br label %101

101:                                              ; preds = %92, %88
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %82, %88 ], [ %100, %92 ]
  %103 = phi i64 [ %83, %88 ], [ %99, %92 ]
  %104 = phi %"class.v8::internal::compiler::Node"*** [ %85, %88 ], [ %98, %92 ]
  %105 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %84, %88 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %104, i64 1
  store %"class.v8::internal::compiler::Node"*** %106, %"class.v8::internal::compiler::Node"**** %26, align 8
  %107 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  %108 = sub i64 %103, %107
  %109 = ashr exact i64 %108, 3
  %110 = icmp ugt i64 %109, 2
  br i1 %110, label %81, label %111

111:                                              ; preds = %101, %52
  %112 = phi %"class.v8::internal::compiler::Node"*** [ %33, %52 ], [ %102, %101 ]
  %113 = phi %"class.v8::internal::compiler::Node"*** [ %27, %52 ], [ %106, %101 ]
  %114 = phi i64 [ %56, %52 ], [ %109, %101 ]
  %115 = ptrtoint %"class.v8::internal::compiler::Node"*** %113 to i64
  switch i64 %114, label %119 [
    i64 1, label %117
    i64 2, label %116
  ]

116:                                              ; preds = %111
  br label %117

117:                                              ; preds = %111, %116
  %118 = phi i64 [ 512, %116 ], [ 256, %111 ]
  store i64 %118, i64* %28, align 8
  br label %119

119:                                              ; preds = %117, %111
  %120 = icmp eq %"class.v8::internal::compiler::Node"*** %113, %112
  br i1 %120, label %183, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %123 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %122 to i64*
  %124 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %122 to %"class.v8::internal::compiler::Node"***
  %125 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %122, align 8
  %126 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %112, i64 -1
  %127 = ptrtoint %"class.v8::internal::compiler::Node"*** %126 to i64
  %128 = sub i64 %127, %115
  %129 = and i64 %128, 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %147

131:                                              ; preds = %121
  %132 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %113, align 8
  %133 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %125, null
  br i1 %133, label %138, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %125, i64 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = icmp ugt i64 %136, 512
  br i1 %137, label %144, label %138

138:                                              ; preds = %134, %131
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 1
  %140 = bitcast %"class.v8::internal::compiler::Node"** %139 to i64*
  store i64 512, i64* %140, align 8
  %141 = load i64, i64* %123, align 8
  %142 = bitcast %"class.v8::internal::compiler::Node"** %132 to i64*
  store i64 %141, i64* %142, align 8
  store %"class.v8::internal::compiler::Node"** %132, %"class.v8::internal::compiler::Node"*** %124, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"** %132 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %144

144:                                              ; preds = %138, %134
  %145 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %125, %134 ], [ %143, %138 ]
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %113, i64 1
  br label %147

147:                                              ; preds = %144, %121
  %148 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %125, %121 ], [ %145, %144 ]
  %149 = phi %"class.v8::internal::compiler::Node"*** [ %113, %121 ], [ %146, %144 ]
  %150 = icmp ult i64 %128, 8
  br i1 %150, label %171, label %151

151:                                              ; preds = %147, %221
  %152 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %222, %221 ], [ %148, %147 ]
  %153 = phi %"class.v8::internal::compiler::Node"*** [ %223, %221 ], [ %149, %147 ]
  %154 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %153, align 8
  %155 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %152, null
  br i1 %155, label %160, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %152, i64 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = icmp ugt i64 %158, 512
  br i1 %159, label %166, label %160

160:                                              ; preds = %156, %151
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, i64 1
  %162 = bitcast %"class.v8::internal::compiler::Node"** %161 to i64*
  store i64 512, i64* %162, align 8
  %163 = load i64, i64* %123, align 8
  %164 = bitcast %"class.v8::internal::compiler::Node"** %154 to i64*
  store i64 %163, i64* %164, align 8
  store %"class.v8::internal::compiler::Node"** %154, %"class.v8::internal::compiler::Node"*** %124, align 8
  %165 = bitcast %"class.v8::internal::compiler::Node"** %154 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %166

166:                                              ; preds = %160, %156
  %167 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %152, %156 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %153, i64 1
  %169 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %168, align 8
  %170 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %167, null
  br i1 %170, label %215, label %211

171:                                              ; preds = %221, %147
  %172 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %26, align 8
  %173 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %32, align 8
  %174 = icmp eq %"class.v8::internal::compiler::Node"*** %173, %172
  br i1 %174, label %183, label %175

175:                                              ; preds = %171
  %176 = ptrtoint %"class.v8::internal::compiler::Node"*** %172 to i64
  %177 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 -1
  %178 = ptrtoint %"class.v8::internal::compiler::Node"*** %177 to i64
  %179 = sub i64 %178, %176
  %180 = lshr i64 %179, 3
  %181 = xor i64 %180, -1
  %182 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 %181
  store %"class.v8::internal::compiler::Node"*** %182, %"class.v8::internal::compiler::Node"**** %32, align 8
  br label %183

183:                                              ; preds = %175, %171, %119
  %184 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %185 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %184, align 8
  %186 = icmp eq %"class.v8::internal::compiler::Node"*** %185, null
  br i1 %186, label %210, label %187

187:                                              ; preds = %183
  %188 = ptrtoint %"class.v8::internal::compiler::Node"*** %185 to i64
  %189 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %190 = bitcast %"class.v8::internal::compiler::Node"**** %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = sub i64 %191, %188
  %193 = ashr exact i64 %192, 3
  %194 = icmp ult i64 %192, 16
  br i1 %194, label %210, label %195

195:                                              ; preds = %187
  %196 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %197 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %196, align 8
  %198 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %197, null
  br i1 %198, label %203, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %197, i64 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = icmp ugt i64 %201, %193
  br i1 %202, label %210, label %203

203:                                              ; preds = %199, %195
  %204 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %185, i64 1
  %205 = bitcast %"class.v8::internal::compiler::Node"*** %204 to i64*
  store i64 %193, i64* %205, align 8
  %206 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %196 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %207, i64* %208, align 8
  %209 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %196 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %185, %"class.v8::internal::compiler::Node"**** %209, align 8
  br label %210

210:                                              ; preds = %183, %187, %199, %203
  ret void

211:                                              ; preds = %166
  %212 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %167, i64 0, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = icmp ugt i64 %213, 512
  br i1 %214, label %221, label %215

215:                                              ; preds = %211, %166
  %216 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 1
  %217 = bitcast %"class.v8::internal::compiler::Node"** %216 to i64*
  store i64 512, i64* %217, align 8
  %218 = load i64, i64* %123, align 8
  %219 = bitcast %"class.v8::internal::compiler::Node"** %169 to i64*
  store i64 %218, i64* %219, align 8
  store %"class.v8::internal::compiler::Node"** %169, %"class.v8::internal::compiler::Node"*** %124, align 8
  %220 = bitcast %"class.v8::internal::compiler::Node"** %169 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*
  br label %221

221:                                              ; preds = %215, %211
  %222 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* [ %167, %211 ], [ %220, %215 ]
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %153, i64 2
  %224 = icmp eq %"class.v8::internal::compiler::Node"*** %223, %112
  br i1 %224, label %171, label %151
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ZoneUnorderedSet"* @_ZN2v88internal8compiler10LoopFinder26FindUnnestedLoopFromHeaderEPNS1_4NodeEPNS0_4ZoneEm(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::Zone"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.77", align 8
  %5 = alloca %"class.v8::internal::compiler::Node"*, align 8
  %6 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %7 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ult i64 %12, 56
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %3
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 56) #9
  br label %18

16:                                               ; preds = %3
  %17 = add i64 %9, 56
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to i8*
  %21 = inttoptr i64 %19 to %"class.v8::internal::ZoneUnorderedSet"*
  %22 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %21, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %24 = bitcast %"struct.std::__1::__compressed_pair_elem.66"* %23 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  store i64 %7, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %21, i64 0, i32 0, i32 0, i32 1, i32 1
  %27 = bitcast %"struct.std::__1::__compressed_pair_elem.70"* %26 to i64*
  store i64 %7, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %21, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %21, i64 0, i32 0, i32 0, i32 3
  %30 = bitcast %"class.std::__1::__compressed_pair.74"* %29 to i32*
  store i32 1065353216, i32* %30, align 4
  %31 = tail call i64 @_ZNSt3__112__next_primeEm(i64 100) #9
  %32 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp ugt i64 %31, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %18
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %22, i64 %31) #9
  br label %65

36:                                               ; preds = %18
  %37 = icmp ult i64 %31, %33
  br i1 %37, label %38, label %65

38:                                               ; preds = %36
  %39 = icmp ugt i64 %33, 2
  %40 = tail call i64 @llvm.ctpop.i64(i64 %33) #9, !range !4
  %41 = icmp ult i64 %40, 2
  %42 = and i1 %39, %41
  %43 = load i64, i64* %28, align 8
  %44 = uitofp i64 %43 to float
  %45 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %21, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = fdiv float %44, %46
  %48 = tail call float @llvm.ceil.f32(float %47) #9
  %49 = fptoui float %48 to i64
  br i1 %42, label %50, label %57

50:                                               ; preds = %38
  %51 = icmp ult i64 %49, 2
  br i1 %51, label %59, label %52

52:                                               ; preds = %50
  %53 = add i64 %49, -1
  %54 = tail call i64 @llvm.ctlz.i64(i64 %53, i1 true) #9, !range !4
  %55 = sub nuw nsw i64 64, %54
  %56 = shl i64 1, %55
  br label %59

57:                                               ; preds = %38
  %58 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %49) #9
  br label %59

59:                                               ; preds = %57, %52, %50
  %60 = phi i64 [ %58, %57 ], [ %56, %52 ], [ %49, %50 ]
  %61 = icmp ult i64 %31, %60
  %62 = select i1 %61, i64 %60, i64 %31
  %63 = icmp ult i64 %62, %33
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %22, i64 %62) #9
  br label %65

65:                                               ; preds = %35, %36, %59, %64
  %66 = bitcast %"class.std::__1::vector.77"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #9
  %67 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %4, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.v8::internal::compiler::Node"*** %67 to i64*
  %70 = bitcast %"class.std::__1::vector.77"* %4 to i64*
  %71 = bitcast %"class.v8::internal::compiler::Node"*** %68 to i64*
  %72 = tail call i8* @_Znwm(i64 8) #11
  %73 = getelementptr inbounds i8, i8* %72, i64 8
  %74 = ptrtoint i8* %73 to i64
  %75 = bitcast i8* %72 to i64*
  store i64 %6, i64* %75, align 8
  %76 = ptrtoint i8* %72 to i64
  store i64 %76, i64* %70, align 8
  store i64 %74, i64* %69, align 8
  store i64 %74, i64* %71, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %4, i64 0, i32 0, i32 0
  %78 = bitcast i8* %73 to %"class.v8::internal::compiler::Node"**
  %79 = bitcast %"class.v8::internal::compiler::Node"** %5 to i8*
  %80 = bitcast %"class.v8::internal::compiler::Node"** %5 to i64*
  %81 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.v8::internal::compiler::Node"*** %67 to i64*
  %83 = bitcast %"class.std::__1::vector.77"* %4 to i64*
  %84 = bitcast %"class.v8::internal::compiler::Node"*** %68 to i64*
  br label %85

85:                                               ; preds = %65, %407
  %86 = phi %"class.v8::internal::compiler::Node"** [ %78, %65 ], [ %409, %407 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #9
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %86, i64 -1
  %88 = bitcast %"class.v8::internal::compiler::Node"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %80, align 8
  store %"class.v8::internal::compiler::Node"** %87, %"class.v8::internal::compiler::Node"*** %67, align 8
  %90 = inttoptr i64 %89 to %"class.v8::internal::compiler::Node"*
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %90, i64 0, i32 0
  %92 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %92, i64 0, i32 2
  %94 = load i16, i16* %93, align 8
  %95 = icmp eq i16 %94, 19
  br i1 %95, label %407, label %96

96:                                               ; preds = %85
  %97 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %22, %"class.v8::internal::compiler::Node"** nonnull dereferenceable(8) %5, %"class.v8::internal::compiler::Node"** nonnull dereferenceable(8) %5) #9
  %98 = load i64, i64* %28, align 8
  %99 = icmp ugt i64 %98, %2
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #9
  br label %553

101:                                              ; preds = %96
  %102 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %5, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %102, i64 0, i32 0
  %104 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %104, i64 0, i32 2
  %106 = load i16, i16* %105, align 8
  switch i16 %106, label %261 [
    i16 52, label %107
    i16 54, label %407
    i16 53, label %407
  ]

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %102, i64 0, i32 4
  %109 = bitcast %"struct.v8::internal::compiler::Node::Use"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %407, label %112

112:                                              ; preds = %107, %257
  %113 = phi i64 [ %259, %257 ], [ %110, %107 ]
  %114 = inttoptr i64 %113 to %"struct.v8::internal::compiler::Node::Use"*
  %115 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %114, i64 1
  %116 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %114, i64 0, i32 2
  %117 = load i32, i32* %116, align 8
  %118 = lshr i32 %117, 1
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %115, i64 %119
  %121 = and i32 %117, 1
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %112
  %124 = bitcast %"struct.v8::internal::compiler::Node::Use"* %120 to %"class.v8::internal::compiler::Node"*
  br label %128

125:                                              ; preds = %112
  %126 = bitcast %"struct.v8::internal::compiler::Node::Use"* %120 to %"class.v8::internal::compiler::Node"**
  %127 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, align 8
  br label %128

128:                                              ; preds = %123, %125
  %129 = phi %"class.v8::internal::compiler::Node"* [ %124, %123 ], [ %127, %125 ]
  %130 = ptrtoint %"class.v8::internal::compiler::Node"* %129 to i64
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %129, i64 0, i32 0
  %132 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %132, i64 0, i32 2
  %134 = load i16, i16* %133, align 8
  %135 = zext i16 %134 to i32
  %136 = add nsw i32 %135, -53
  %137 = icmp ult i32 %136, 2
  br i1 %137, label %138, label %257

138:                                              ; preds = %128
  %139 = call i64 @_ZN2v84base10hash_valueEm(i64 %130) #9
  %140 = load i64, i64* %32, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %204, label %142

142:                                              ; preds = %138
  %143 = call i64 @llvm.ctpop.i64(i64 %140) #9, !range !4
  %144 = icmp ugt i64 %143, 1
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = add i64 %140, -1
  %147 = and i64 %146, %139
  br label %152

148:                                              ; preds = %142
  %149 = icmp ult i64 %139, %140
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %139, %140
  br label %152

152:                                              ; preds = %150, %148, %145
  %153 = phi i64 [ %147, %145 ], [ %151, %150 ], [ %139, %148 ]
  %154 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %81, align 8
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %154, i64 %153
  %156 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %155, align 8
  %157 = icmp eq %"struct.std::__1::__hash_node_base"* %156, null
  br i1 %157, label %204, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %156, i64 0, i32 0
  %160 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %159, align 8
  %161 = icmp eq %"struct.std::__1::__hash_node_base"* %160, null
  br i1 %161, label %204, label %162

162:                                              ; preds = %158
  %163 = add i64 %140, -1
  br i1 %144, label %164, label %186

164:                                              ; preds = %162, %182
  %165 = phi %"struct.std::__1::__hash_node_base"* [ %184, %182 ], [ %160, %162 ]
  %166 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %165, i64 1
  %167 = bitcast %"struct.std::__1::__hash_node_base"* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = icmp eq i64 %139, %168
  br i1 %169, label %177, label %170

170:                                              ; preds = %164
  %171 = icmp ult i64 %168, %140
  br i1 %171, label %174, label %172

172:                                              ; preds = %170
  %173 = urem i64 %168, %140
  br label %174

174:                                              ; preds = %172, %170
  %175 = phi i64 [ %173, %172 ], [ %168, %170 ]
  %176 = icmp eq i64 %175, %153
  br i1 %176, label %182, label %204

177:                                              ; preds = %164
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %165, i64 2
  %179 = bitcast %"struct.std::__1::__hash_node_base"* %178 to %"class.v8::internal::compiler::Node"**
  %180 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, align 8
  %181 = icmp eq %"class.v8::internal::compiler::Node"* %180, %129
  br i1 %181, label %257, label %182

182:                                              ; preds = %177, %174
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %165, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %204, label %164

186:                                              ; preds = %162, %200
  %187 = phi %"struct.std::__1::__hash_node_base"* [ %202, %200 ], [ %160, %162 ]
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %187, i64 1
  %189 = bitcast %"struct.std::__1::__hash_node_base"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = icmp eq i64 %139, %190
  br i1 %191, label %195, label %192

192:                                              ; preds = %186
  %193 = and i64 %190, %163
  %194 = icmp eq i64 %193, %153
  br i1 %194, label %200, label %204

195:                                              ; preds = %186
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %187, i64 2
  %197 = bitcast %"struct.std::__1::__hash_node_base"* %196 to %"class.v8::internal::compiler::Node"**
  %198 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, align 8
  %199 = icmp eq %"class.v8::internal::compiler::Node"* %198, %129
  br i1 %199, label %257, label %200

200:                                              ; preds = %195, %192
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %187, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %201, align 8
  %203 = icmp eq %"struct.std::__1::__hash_node_base"* %202, null
  br i1 %203, label %204, label %186

204:                                              ; preds = %200, %192, %182, %174, %152, %138, %158
  %205 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %67, align 8
  %206 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %68, align 8
  %207 = icmp eq %"class.v8::internal::compiler::Node"** %205, %206
  %208 = ptrtoint %"class.v8::internal::compiler::Node"** %206 to i64
  br i1 %207, label %213, label %209

209:                                              ; preds = %204
  %210 = bitcast %"class.v8::internal::compiler::Node"** %205 to i64*
  store i64 %130, i64* %210, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 1
  %212 = ptrtoint %"class.v8::internal::compiler::Node"** %211 to i64
  store i64 %212, i64* %82, align 8
  br label %257

213:                                              ; preds = %204
  %214 = ptrtoint %"class.v8::internal::compiler::Node"** %205 to i64
  %215 = load i64, i64* %83, align 8
  %216 = sub i64 %214, %215
  %217 = ashr exact i64 %216, 3
  %218 = add nsw i64 %217, 1
  %219 = icmp ugt i64 %218, 2305843009213693951
  br i1 %219, label %220, label %222

220:                                              ; preds = %213
  %221 = bitcast %"class.std::__1::vector.77"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %221) #10
  unreachable

222:                                              ; preds = %213
  %223 = sub i64 %208, %215
  %224 = ashr exact i64 %223, 3
  %225 = icmp ult i64 %224, 1152921504606846975
  br i1 %225, label %226, label %234

226:                                              ; preds = %222
  %227 = ashr exact i64 %223, 2
  %228 = icmp ult i64 %227, %218
  %229 = select i1 %228, i64 %218, i64 %227
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %239, label %231

231:                                              ; preds = %226
  %232 = icmp ugt i64 %229, 2305843009213693951
  br i1 %232, label %233, label %234

233:                                              ; preds = %231
  call void @abort() #10
  unreachable

234:                                              ; preds = %231, %222
  %235 = phi i64 [ %229, %231 ], [ 2305843009213693951, %222 ]
  %236 = shl i64 %235, 3
  %237 = call i8* @_Znwm(i64 %236) #11
  %238 = bitcast i8* %237 to %"class.v8::internal::compiler::Node"**
  br label %239

239:                                              ; preds = %234, %226
  %240 = phi i64 [ %235, %234 ], [ 0, %226 ]
  %241 = phi i8* [ %237, %234 ], [ null, %226 ]
  %242 = phi %"class.v8::internal::compiler::Node"** [ %238, %234 ], [ null, %226 ]
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %242, i64 %217
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %242, i64 %240
  %245 = ptrtoint %"class.v8::internal::compiler::Node"** %244 to i64
  %246 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  store i64 %130, i64* %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %243, i64 1
  %248 = ptrtoint %"class.v8::internal::compiler::Node"** %247 to i64
  %249 = ptrtoint %"class.v8::internal::compiler::Node"** %242 to i64
  %250 = icmp sgt i64 %216, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %239
  %252 = inttoptr i64 %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %252, i64 %216, i1 false) #9
  br label %253

253:                                              ; preds = %251, %239
  store i64 %249, i64* %83, align 8
  store i64 %248, i64* %82, align 8
  store i64 %245, i64* %84, align 8
  %254 = icmp eq i64 %215, 0
  br i1 %254, label %257, label %255

255:                                              ; preds = %253
  %256 = inttoptr i64 %215 to i8*
  call void @_ZdlPv(i8* %256) #11
  br label %257

257:                                              ; preds = %195, %177, %128, %255, %253, %209
  %258 = inttoptr i64 %113 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %407, label %112

261:                                              ; preds = %101
  %262 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %102, i64 0, i32 4
  %263 = bitcast %"struct.v8::internal::compiler::Node::Use"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %407, label %266

266:                                              ; preds = %261, %403
  %267 = phi i64 [ %405, %403 ], [ %264, %261 ]
  %268 = inttoptr i64 %267 to %"struct.v8::internal::compiler::Node::Use"*
  %269 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %268, i64 1
  %270 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %268, i64 0, i32 2
  %271 = load i32, i32* %270, align 8
  %272 = lshr i32 %271, 1
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %269, i64 %273
  %275 = and i32 %271, 1
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %279, label %277

277:                                              ; preds = %266
  %278 = bitcast %"struct.v8::internal::compiler::Node::Use"* %274 to %"class.v8::internal::compiler::Node"*
  br label %282

279:                                              ; preds = %266
  %280 = bitcast %"struct.v8::internal::compiler::Node::Use"* %274 to %"class.v8::internal::compiler::Node"**
  %281 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %280, align 8
  br label %282

282:                                              ; preds = %277, %279
  %283 = phi %"class.v8::internal::compiler::Node"* [ %278, %277 ], [ %281, %279 ]
  %284 = ptrtoint %"class.v8::internal::compiler::Node"* %283 to i64
  %285 = call i64 @_ZN2v84base10hash_valueEm(i64 %284) #9
  %286 = load i64, i64* %32, align 8
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %350, label %288

288:                                              ; preds = %282
  %289 = call i64 @llvm.ctpop.i64(i64 %286) #9, !range !4
  %290 = icmp ugt i64 %289, 1
  br i1 %290, label %294, label %291

291:                                              ; preds = %288
  %292 = add i64 %286, -1
  %293 = and i64 %292, %285
  br label %298

294:                                              ; preds = %288
  %295 = icmp ult i64 %285, %286
  br i1 %295, label %298, label %296

296:                                              ; preds = %294
  %297 = urem i64 %285, %286
  br label %298

298:                                              ; preds = %296, %294, %291
  %299 = phi i64 [ %293, %291 ], [ %297, %296 ], [ %285, %294 ]
  %300 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %81, align 8
  %301 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %300, i64 %299
  %302 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %301, align 8
  %303 = icmp eq %"struct.std::__1::__hash_node_base"* %302, null
  br i1 %303, label %350, label %304

304:                                              ; preds = %298
  %305 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %302, i64 0, i32 0
  %306 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %305, align 8
  %307 = icmp eq %"struct.std::__1::__hash_node_base"* %306, null
  br i1 %307, label %350, label %308

308:                                              ; preds = %304
  %309 = add i64 %286, -1
  br i1 %290, label %310, label %332

310:                                              ; preds = %308, %328
  %311 = phi %"struct.std::__1::__hash_node_base"* [ %330, %328 ], [ %306, %308 ]
  %312 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %311, i64 1
  %313 = bitcast %"struct.std::__1::__hash_node_base"* %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = icmp eq i64 %285, %314
  br i1 %315, label %323, label %316

316:                                              ; preds = %310
  %317 = icmp ult i64 %314, %286
  br i1 %317, label %320, label %318

318:                                              ; preds = %316
  %319 = urem i64 %314, %286
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i64 [ %319, %318 ], [ %314, %316 ]
  %322 = icmp eq i64 %321, %299
  br i1 %322, label %328, label %350

323:                                              ; preds = %310
  %324 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %311, i64 2
  %325 = bitcast %"struct.std::__1::__hash_node_base"* %324 to %"class.v8::internal::compiler::Node"**
  %326 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %325, align 8
  %327 = icmp eq %"class.v8::internal::compiler::Node"* %326, %283
  br i1 %327, label %403, label %328

328:                                              ; preds = %323, %320
  %329 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %311, i64 0, i32 0
  %330 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %329, align 8
  %331 = icmp eq %"struct.std::__1::__hash_node_base"* %330, null
  br i1 %331, label %350, label %310

332:                                              ; preds = %308, %346
  %333 = phi %"struct.std::__1::__hash_node_base"* [ %348, %346 ], [ %306, %308 ]
  %334 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %333, i64 1
  %335 = bitcast %"struct.std::__1::__hash_node_base"* %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = icmp eq i64 %285, %336
  br i1 %337, label %341, label %338

338:                                              ; preds = %332
  %339 = and i64 %336, %309
  %340 = icmp eq i64 %339, %299
  br i1 %340, label %346, label %350

341:                                              ; preds = %332
  %342 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %333, i64 2
  %343 = bitcast %"struct.std::__1::__hash_node_base"* %342 to %"class.v8::internal::compiler::Node"**
  %344 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %343, align 8
  %345 = icmp eq %"class.v8::internal::compiler::Node"* %344, %283
  br i1 %345, label %403, label %346

346:                                              ; preds = %341, %338
  %347 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %333, i64 0, i32 0
  %348 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %347, align 8
  %349 = icmp eq %"struct.std::__1::__hash_node_base"* %348, null
  br i1 %349, label %350, label %332

350:                                              ; preds = %346, %338, %328, %320, %298, %282, %304
  %351 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %67, align 8
  %352 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %68, align 8
  %353 = icmp eq %"class.v8::internal::compiler::Node"** %351, %352
  %354 = ptrtoint %"class.v8::internal::compiler::Node"** %352 to i64
  br i1 %353, label %359, label %355

355:                                              ; preds = %350
  %356 = bitcast %"class.v8::internal::compiler::Node"** %351 to i64*
  store i64 %284, i64* %356, align 8
  %357 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %351, i64 1
  %358 = ptrtoint %"class.v8::internal::compiler::Node"** %357 to i64
  store i64 %358, i64* %82, align 8
  br label %403

359:                                              ; preds = %350
  %360 = ptrtoint %"class.v8::internal::compiler::Node"** %351 to i64
  %361 = load i64, i64* %83, align 8
  %362 = sub i64 %360, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, 1
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.77"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %367) #10
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %354, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %372, label %380

372:                                              ; preds = %368
  %373 = ashr exact i64 %369, 2
  %374 = icmp ult i64 %373, %364
  %375 = select i1 %374, i64 %364, i64 %373
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %372
  %378 = icmp ugt i64 %375, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %377
  call void @abort() #10
  unreachable

380:                                              ; preds = %377, %368
  %381 = phi i64 [ %375, %377 ], [ 2305843009213693951, %368 ]
  %382 = shl i64 %381, 3
  %383 = call i8* @_Znwm(i64 %382) #11
  %384 = bitcast i8* %383 to %"class.v8::internal::compiler::Node"**
  br label %385

385:                                              ; preds = %380, %372
  %386 = phi i64 [ %381, %380 ], [ 0, %372 ]
  %387 = phi i8* [ %383, %380 ], [ null, %372 ]
  %388 = phi %"class.v8::internal::compiler::Node"** [ %384, %380 ], [ null, %372 ]
  %389 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %388, i64 %363
  %390 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %388, i64 %386
  %391 = ptrtoint %"class.v8::internal::compiler::Node"** %390 to i64
  %392 = bitcast %"class.v8::internal::compiler::Node"** %389 to i64*
  store i64 %284, i64* %392, align 8
  %393 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %389, i64 1
  %394 = ptrtoint %"class.v8::internal::compiler::Node"** %393 to i64
  %395 = ptrtoint %"class.v8::internal::compiler::Node"** %388 to i64
  %396 = icmp sgt i64 %362, 0
  br i1 %396, label %397, label %399

397:                                              ; preds = %385
  %398 = inttoptr i64 %361 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %387, i8* align 8 %398, i64 %362, i1 false) #9
  br label %399

399:                                              ; preds = %397, %385
  store i64 %395, i64* %83, align 8
  store i64 %394, i64* %82, align 8
  store i64 %391, i64* %84, align 8
  %400 = icmp eq i64 %361, 0
  br i1 %400, label %403, label %401

401:                                              ; preds = %399
  %402 = inttoptr i64 %361 to i8*
  call void @_ZdlPv(i8* %402) #11
  br label %403

403:                                              ; preds = %341, %323, %401, %399, %355
  %404 = inttoptr i64 %267 to i64*
  %405 = load i64, i64* %404, align 8
  %406 = icmp eq i64 %405, 0
  br i1 %406, label %407, label %266

407:                                              ; preds = %257, %403, %107, %261, %101, %101, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #9
  %408 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, align 8
  %409 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %67, align 8
  %410 = icmp eq %"class.v8::internal::compiler::Node"** %408, %409
  br i1 %410, label %411, label %85

411:                                              ; preds = %407
  %412 = bitcast %"struct.std::__1::__hash_node_base"** %25 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %553, label %415

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %417

417:                                              ; preds = %415, %549
  %418 = phi i64 [ %413, %415 ], [ %551, %549 ]
  %419 = inttoptr i64 %418 to %"struct.std::__1::__hash_node"*
  %420 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %419, i64 0, i32 2
  %421 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %420, align 8
  %422 = icmp eq %"class.v8::internal::compiler::Node"* %421, %0
  br i1 %422, label %549, label %423

423:                                              ; preds = %417
  %424 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %421, i64 0, i32 3
  %425 = load i32, i32* %424, align 4, !noalias !5
  %426 = lshr i32 %425, 24
  %427 = and i32 %426, 15
  %428 = icmp eq i32 %427, 15
  %429 = ptrtoint %"class.v8::internal::compiler::Node"* %421 to i64
  %430 = add i64 %429, 32
  br i1 %428, label %434, label %431

431:                                              ; preds = %423
  %432 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %421, i64 -1, i32 1
  %433 = bitcast %"class.v8::internal::compiler::Type"* %432 to %"struct.v8::internal::compiler::Node::Use"*
  br label %443

434:                                              ; preds = %423
  %435 = inttoptr i64 %430 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %436 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %435, align 8, !noalias !5
  %437 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %436 to i64
  %438 = add i64 %437, 16
  %439 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %436, i64 -2, i32 1
  %440 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %436, i64 0, i32 1
  %441 = load i32, i32* %440, align 8, !noalias !5
  %442 = bitcast i32* %439 to %"struct.v8::internal::compiler::Node::Use"*
  br label %443

443:                                              ; preds = %431, %434
  %444 = phi %"struct.v8::internal::compiler::Node::Use"* [ %442, %434 ], [ %433, %431 ]
  %445 = phi i64 [ %438, %434 ], [ %430, %431 ]
  %446 = phi i32 [ %441, %434 ], [ %427, %431 ]
  %447 = inttoptr i64 %445 to %"class.v8::internal::compiler::Node"**
  %448 = sext i32 %446 to i64
  %449 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %447, i64 %448
  %450 = icmp eq i32 %446, 0
  br i1 %450, label %549, label %451

451:                                              ; preds = %443, %545
  %452 = phi %"class.v8::internal::compiler::Node"** [ %546, %545 ], [ %447, %443 ]
  %453 = phi %"struct.v8::internal::compiler::Node::Use"* [ %547, %545 ], [ %444, %443 ]
  %454 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, align 8
  %455 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* %453, %"class.v8::internal::compiler::Node"** %452) #9
  br i1 %455, label %456, label %545

456:                                              ; preds = %451
  %457 = ptrtoint %"class.v8::internal::compiler::Node"* %454 to i64
  %458 = call i64 @_ZN2v84base10hash_valueEm(i64 %457) #9
  %459 = load i64, i64* %32, align 8
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %523, label %461

461:                                              ; preds = %456
  %462 = call i64 @llvm.ctpop.i64(i64 %459) #9, !range !4
  %463 = icmp ugt i64 %462, 1
  br i1 %463, label %467, label %464

464:                                              ; preds = %461
  %465 = add i64 %459, -1
  %466 = and i64 %465, %458
  br label %471

467:                                              ; preds = %461
  %468 = icmp ult i64 %458, %459
  br i1 %468, label %471, label %469

469:                                              ; preds = %467
  %470 = urem i64 %458, %459
  br label %471

471:                                              ; preds = %469, %467, %464
  %472 = phi i64 [ %466, %464 ], [ %470, %469 ], [ %458, %467 ]
  %473 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %416, align 8
  %474 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %473, i64 %472
  %475 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %474, align 8
  %476 = icmp eq %"struct.std::__1::__hash_node_base"* %475, null
  br i1 %476, label %523, label %477

477:                                              ; preds = %471
  %478 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %475, i64 0, i32 0
  %479 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %478, align 8
  %480 = icmp eq %"struct.std::__1::__hash_node_base"* %479, null
  br i1 %480, label %523, label %481

481:                                              ; preds = %477
  %482 = add i64 %459, -1
  br i1 %463, label %483, label %505

483:                                              ; preds = %481, %501
  %484 = phi %"struct.std::__1::__hash_node_base"* [ %503, %501 ], [ %479, %481 ]
  %485 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %484, i64 1
  %486 = bitcast %"struct.std::__1::__hash_node_base"* %485 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = icmp eq i64 %458, %487
  br i1 %488, label %496, label %489

489:                                              ; preds = %483
  %490 = icmp ult i64 %487, %459
  br i1 %490, label %493, label %491

491:                                              ; preds = %489
  %492 = urem i64 %487, %459
  br label %493

493:                                              ; preds = %491, %489
  %494 = phi i64 [ %492, %491 ], [ %487, %489 ]
  %495 = icmp eq i64 %494, %472
  br i1 %495, label %501, label %523

496:                                              ; preds = %483
  %497 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %484, i64 2
  %498 = bitcast %"struct.std::__1::__hash_node_base"* %497 to %"class.v8::internal::compiler::Node"**
  %499 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %498, align 8
  %500 = icmp eq %"class.v8::internal::compiler::Node"* %499, %454
  br i1 %500, label %545, label %501

501:                                              ; preds = %496, %493
  %502 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %484, i64 0, i32 0
  %503 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %502, align 8
  %504 = icmp eq %"struct.std::__1::__hash_node_base"* %503, null
  br i1 %504, label %523, label %483

505:                                              ; preds = %481, %519
  %506 = phi %"struct.std::__1::__hash_node_base"* [ %521, %519 ], [ %479, %481 ]
  %507 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %506, i64 1
  %508 = bitcast %"struct.std::__1::__hash_node_base"* %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = icmp eq i64 %458, %509
  br i1 %510, label %514, label %511

511:                                              ; preds = %505
  %512 = and i64 %509, %482
  %513 = icmp eq i64 %512, %472
  br i1 %513, label %519, label %523

514:                                              ; preds = %505
  %515 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %506, i64 2
  %516 = bitcast %"struct.std::__1::__hash_node_base"* %515 to %"class.v8::internal::compiler::Node"**
  %517 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %516, align 8
  %518 = icmp eq %"class.v8::internal::compiler::Node"* %517, %454
  br i1 %518, label %545, label %519

519:                                              ; preds = %514, %511
  %520 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %506, i64 0, i32 0
  %521 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %520, align 8
  %522 = icmp eq %"struct.std::__1::__hash_node_base"* %521, null
  br i1 %522, label %523, label %505

523:                                              ; preds = %519, %511, %501, %493, %471, %456, %477
  %524 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %454, i64 0, i32 0
  %525 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %524, align 8
  %526 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %525, i64 0, i32 2
  %527 = load i16, i16* %526, align 8
  %528 = icmp eq i16 %527, 0
  br i1 %528, label %545, label %529

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %421, i64 0, i32 3
  %531 = load i32, i32* %530, align 4
  %532 = and i32 %531, 16777215
  %533 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %421, i64 0, i32 0
  %534 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %533, align 8
  %535 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %534, i64 0, i32 1
  %536 = load i8*, i8** %535, align 8
  %537 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %538 = load i32, i32* %537, align 4
  %539 = and i32 %538, 16777215
  %540 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %454, i64 0, i32 3
  %541 = load i32, i32* %540, align 4
  %542 = and i32 %541, 16777215
  %543 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %525, i64 0, i32 1
  %544 = load i8*, i8** %543, align 8
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str, i64 0, i64 0), i32 %532, i8* %536, i32 %539, i32 %542, i8* %544) #10
  unreachable

545:                                              ; preds = %514, %496, %523, %451
  %546 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, i64 1
  %547 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %453, i64 -1
  %548 = icmp eq %"class.v8::internal::compiler::Node"** %546, %449
  br i1 %548, label %549, label %451

549:                                              ; preds = %545, %443, %417
  %550 = inttoptr i64 %418 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %553, label %417

553:                                              ; preds = %549, %411, %100
  %554 = phi %"class.v8::internal::ZoneUnorderedSet"* [ null, %100 ], [ %21, %411 ], [ %21, %549 ]
  %555 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, align 8
  %556 = icmp eq %"class.v8::internal::compiler::Node"** %555, null
  br i1 %556, label %561, label %557

557:                                              ; preds = %553
  %558 = ptrtoint %"class.v8::internal::compiler::Node"** %555 to i64
  %559 = bitcast %"class.v8::internal::compiler::Node"*** %67 to i64*
  store i64 %558, i64* %559, align 8
  %560 = bitcast %"class.v8::internal::compiler::Node"** %555 to i8*
  call void @_ZdlPv(i8* %560) #11
  br label %561

561:                                              ; preds = %553, %557
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #9
  ret %"class.v8::internal::ZoneUnorderedSet"* %554
}

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler10LoopFinder14HasMarkedExitsEPNS1_8LoopTreeEPKNS3_4LoopE(%"class.v8::internal::compiler::LoopTree"* nocapture readonly, %"class.v8::internal::compiler::LoopTree::Loop"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, i64 %9
  %11 = icmp eq i32 %6, %8
  br i1 %11, label %26, label %12

12:                                               ; preds = %2
  %13 = sext i32 %6 to i64
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, i64 %13
  br label %17

15:                                               ; preds = %17
  %16 = icmp eq %"class.v8::internal::compiler::Node"** %25, %10
  br i1 %16, label %26, label %17

17:                                               ; preds = %15, %12
  %18 = phi %"class.v8::internal::compiler::Node"** [ %25, %15 ], [ %14, %12 ]
  %19 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %19, i64 0, i32 0
  %21 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %21, i64 0, i32 2
  %23 = load i16, i16* %22, align 8
  %24 = icmp eq i16 %23, 1
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 1
  br i1 %24, label %27, label %15

26:                                               ; preds = %15, %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0)) #10
  unreachable

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 6
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, i64 %30
  %32 = icmp eq i32 %6, %29
  br i1 %32, label %182, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %0, i64 0, i32 3, i32 0
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %36 = bitcast i32** %35 to i64*
  %37 = bitcast %"class.std::__1::vector.19"* %34 to i64*
  %38 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %33, %179
  %40 = phi %"class.v8::internal::compiler::Node"** [ %14, %33 ], [ %180, %179 ]
  %41 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 4
  %43 = bitcast %"struct.v8::internal::compiler::Node::Use"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %179, label %46

46:                                               ; preds = %39
  %47 = load i64, i64* %36, align 8
  %48 = load i64, i64* %37, align 8
  %49 = sub i64 %47, %48
  %50 = ashr exact i64 %49, 2
  %51 = inttoptr i64 %48 to i32*
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 3
  %54 = ptrtoint %"class.v8::internal::compiler::Node"* %41 to i64
  %55 = add i64 %54, 32
  %56 = inttoptr i64 %55 to i64*
  br label %57

57:                                               ; preds = %46, %175
  %58 = phi i64 [ %44, %46 ], [ %177, %175 ]
  %59 = inttoptr i64 %58 to %"struct.v8::internal::compiler::Node::Use"*
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %59, i64 1
  %61 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %59, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = lshr i32 %62, 1
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %60, i64 %64
  %66 = and i32 %62, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %57
  %69 = bitcast %"struct.v8::internal::compiler::Node::Use"* %65 to %"class.v8::internal::compiler::Node"*
  br label %73

70:                                               ; preds = %57
  %71 = bitcast %"struct.v8::internal::compiler::Node::Use"* %65 to %"class.v8::internal::compiler::Node"**
  %72 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %71, align 8
  br label %73

73:                                               ; preds = %68, %70
  %74 = phi %"class.v8::internal::compiler::Node"* [ %69, %68 ], [ %72, %70 ]
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %74, i64 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 16777215
  %78 = zext i32 %77 to i64
  %79 = icmp ugt i64 %50, %78
  br i1 %79, label %80, label %97

80:                                               ; preds = %73
  %81 = getelementptr inbounds i32, i32* %51, i64 %78
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %84, label %97

84:                                               ; preds = %80
  %85 = add nsw i32 %82, -1
  %86 = sext i32 %85 to i64
  %87 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %38, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %87, i64 %86
  %89 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"* %88, null
  br i1 %89, label %97, label %90

90:                                               ; preds = %84, %93
  %91 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %95, %93 ], [ %88, %84 ]
  %92 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"* %91, %1
  br i1 %92, label %175, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %91, i64 0, i32 0
  %95 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %94, align 8
  %96 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"* %95, null
  br i1 %96, label %97, label %90

97:                                               ; preds = %93, %84, %73, %80
  %98 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %52, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %98, i64 0, i32 2
  %100 = load i16, i16* %99, align 8
  switch i16 %100, label %136 [
    i16 52, label %101
    i16 53, label %108
    i16 54, label %108
  ]

101:                                              ; preds = %97
  %102 = load i32, i32* %53, align 4
  %103 = and i32 %102, 251658240
  %104 = icmp eq i32 %103, 251658240
  br i1 %104, label %105, label %142

105:                                              ; preds = %101
  %106 = load i64, i64* %56, align 8
  %107 = add i64 %106, 16
  br label %142

108:                                              ; preds = %97, %97
  %109 = load i32, i32* %53, align 4
  %110 = and i32 %109, 251658240
  %111 = icmp eq i32 %110, 251658240
  br i1 %111, label %112, label %115

112:                                              ; preds = %108
  %113 = load i64, i64* %56, align 8
  %114 = add i64 %113, 16
  br label %115

115:                                              ; preds = %108, %112
  %116 = phi i64 [ %114, %112 ], [ %55, %108 ]
  %117 = inttoptr i64 %116 to %"class.v8::internal::compiler::Node"**
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %117, i64 1
  %119 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %119, i64 0, i32 3
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 251658240
  %123 = icmp eq i32 %122, 251658240
  %124 = ptrtoint %"class.v8::internal::compiler::Node"* %119 to i64
  %125 = add i64 %124, 32
  br i1 %123, label %126, label %130

126:                                              ; preds = %115
  %127 = inttoptr i64 %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 16
  br label %130

130:                                              ; preds = %115, %126
  %131 = phi i64 [ %129, %126 ], [ %125, %115 ]
  %132 = inttoptr i64 %131 to %"class.v8::internal::compiler::Node"**
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 1
  %134 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, align 8
  %135 = icmp eq %"class.v8::internal::compiler::Node"* %134, %19
  br i1 %135, label %175, label %148

136:                                              ; preds = %97
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %74, i64 0, i32 0
  %138 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %138, i64 0, i32 2
  %140 = load i16, i16* %139, align 8
  %141 = icmp eq i16 %140, 19
  br i1 %141, label %175, label %148

142:                                              ; preds = %101, %105
  %143 = phi i64 [ %107, %105 ], [ %55, %101 ]
  %144 = inttoptr i64 %143 to %"class.v8::internal::compiler::Node"**
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 1
  %146 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, align 8
  %147 = icmp eq %"class.v8::internal::compiler::Node"* %146, %19
  br i1 %147, label %175, label %148

148:                                              ; preds = %136, %142, %130
  %149 = load i8, i8* @_ZN2v88internal21FLAG_trace_turbo_loopE, align 1, !range !3
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %182, label %153

151:                                              ; preds = %153
  %152 = icmp eq %"class.v8::internal::compiler::Node"** %161, %10
  br i1 %152, label %162, label %153

153:                                              ; preds = %148, %151
  %154 = phi %"class.v8::internal::compiler::Node"** [ %161, %151 ], [ %14, %148 ]
  %155 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %155, i64 0, i32 0
  %157 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %157, i64 0, i32 2
  %159 = load i16, i16* %158, align 8
  %160 = icmp eq i16 %159, 1
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, i64 1
  br i1 %160, label %163, label %151

162:                                              ; preds = %151
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0)) #10
  unreachable

163:                                              ; preds = %153
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %155, i64 0, i32 3
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 16777215
  %167 = load i32, i32* %53, align 4
  %168 = and i32 %167, 16777215
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %98, i64 0, i32 1
  %170 = load i8*, i8** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %74, i64 0, i32 0
  %172 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %172, i64 0, i32 1
  %174 = load i8*, i8** %173, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.1, i64 0, i64 0), i32 %166, i32 %168, i8* %170, i32 %77, i8* %174) #9
  br label %182

175:                                              ; preds = %90, %136, %142, %130
  %176 = inttoptr i64 %58 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %57

179:                                              ; preds = %175, %39
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, i64 1
  %181 = icmp eq %"class.v8::internal::compiler::Node"** %180, %31
  br i1 %181, label %182, label %39

182:                                              ; preds = %179, %27, %163, %148
  %183 = phi i1 [ false, %148 ], [ false, %163 ], [ true, %27 ], [ true, %179 ]
  ret i1 %183
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler8LoopTree10HeaderNodeEPKNS2_4LoopE(%"class.v8::internal::compiler::LoopTree"* nocapture readonly, %"class.v8::internal::compiler::LoopTree::Loop"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, i64 %7
  %9 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %9, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 2
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i16 %13, 1
  br i1 %14, label %50, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 7
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %20, label %19, !prof !8

19:                                               ; preds = %15
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0)) #10
  unreachable

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %11) #9
  %24 = zext i1 %23 to i32
  %25 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %26 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %25) #9
  %27 = zext i1 %26 to i32
  %28 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %28, i64 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %22, %24
  %32 = add i32 %31, %27
  %33 = add i32 %32, %30
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %9, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 251658240
  %37 = icmp eq i32 %36, 251658240
  %38 = ptrtoint %"class.v8::internal::compiler::Node"* %9 to i64
  %39 = add i64 %38, 32
  br i1 %37, label %40, label %44

40:                                               ; preds = %20
  %41 = inttoptr i64 %39 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 16
  br label %44

44:                                               ; preds = %20, %40
  %45 = phi i64 [ %43, %40 ], [ %39, %20 ]
  %46 = inttoptr i64 %45 to %"class.v8::internal::compiler::Node"**
  %47 = sext i32 %33 to i64
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %46, i64 %47
  %49 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %48, align 8
  br label %50

50:                                               ; preds = %2, %44
  %51 = phi %"class.v8::internal::compiler::Node"* [ %49, %44 ], [ %9, %2 ]
  ret %"class.v8::internal::compiler::Node"* %51
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nocapture readonly, %"class.v8::internal::compiler::Node"* readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @llvm.usub.sat.i32(i32 %5, i32 %7) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %3
  %11 = zext i32 %8 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %0, i64 0, i32 1
  %13 = bitcast %"class.v8::internal::ZoneVector.25"** %12 to %"class.std::__1::vector.26"**
  %14 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %13, align 8
  %15 = zext i32 %2 to i64
  %16 = add nuw nsw i64 %11, %15
  %17 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %14, i64 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.26"* %14 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp ugt i64 %23, %16
  br i1 %24, label %27, label %25

25:                                               ; preds = %10
  %26 = bitcast %"class.std::__1::vector.26"* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %26) #10
  unreachable

27:                                               ; preds = %10
  %28 = inttoptr i64 %21 to %"class.v8::internal::compiler::Node"**
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, i64 %16
  %30 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, align 8
  br label %31

31:                                               ; preds = %3, %27
  %32 = phi %"class.v8::internal::compiler::Node"* [ %30, %27 ], [ %1, %3 ]
  ret %"class.v8::internal::compiler::Node"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10NodeCopier6InsertEPNS1_4NodeERKNS0_10ZoneVectorIS4_EE(%"class.v8::internal::compiler::NodeCopier"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector.25"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %0, i64 0, i32 1
  %6 = bitcast %"class.v8::internal::ZoneVector.25"** %5 to %"class.std::__1::vector.26"**
  %7 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::compiler::Node"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.26"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  %19 = add i32 %18, %15
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 2
  store i32 %19, i32* %20, align 8
  %21 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %6, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %21, i64 0, i32 0, i32 1
  %23 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %21, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, align 8
  %26 = icmp eq %"class.v8::internal::compiler::Node"** %23, %25
  %27 = ptrtoint %"class.v8::internal::compiler::Node"** %25 to i64
  br i1 %26, label %33, label %28

28:                                               ; preds = %3
  %29 = bitcast %"class.v8::internal::compiler::Node"** %23 to i64*
  store i64 %4, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %23, i64 1
  %31 = ptrtoint %"class.v8::internal::compiler::Node"** %30 to i64
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %22 to i64*
  store i64 %31, i64* %32, align 8
  br label %258

33:                                               ; preds = %3
  %34 = ptrtoint %"class.v8::internal::compiler::Node"** %23 to i64
  %35 = bitcast %"class.v8::internal::compiler::Node"*** %22 to i64*
  %36 = bitcast %"class.std::__1::vector.26"* %21 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = ashr exact i64 %38, 3
  %40 = add nsw i64 %39, 1
  %41 = icmp ugt i64 %40, 268435455
  br i1 %41, label %42, label %44

42:                                               ; preds = %33
  %43 = bitcast %"class.std::__1::vector.26"* %21 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %43) #10
  unreachable

44:                                               ; preds = %33
  %45 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i64*
  %46 = sub i64 %27, %37
  %47 = ashr exact i64 %46, 3
  %48 = icmp ult i64 %47, 134217727
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = ashr exact i64 %46, 2
  %51 = icmp ult i64 %50, %40
  %52 = select i1 %51, i64 %40, i64 %50
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %72, label %54

54:                                               ; preds = %49, %44
  %55 = phi i64 [ %52, %49 ], [ 268435455, %44 ]
  %56 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %21, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %57 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %56, align 8
  %58 = shl i64 %55, 3
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ugt i64 %58, %63
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %54
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %57, i64 %58) #9
  br label %69

67:                                               ; preds = %54
  %68 = add i64 %60, %58
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %69, %49
  %73 = phi i64 [ %55, %69 ], [ 0, %49 ]
  %74 = phi %"class.v8::internal::compiler::Node"** [ %71, %69 ], [ null, %49 ]
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 %39
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 %73
  %77 = ptrtoint %"class.v8::internal::compiler::Node"** %76 to i64
  %78 = bitcast %"class.v8::internal::compiler::Node"** %75 to i64*
  store i64 %4, i64* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 1
  %80 = ptrtoint %"class.v8::internal::compiler::Node"** %79 to i64
  %81 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %21, i64 0, i32 0, i32 0
  %82 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %81, align 8
  %83 = ptrtoint %"class.v8::internal::compiler::Node"** %82 to i64
  %84 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %22, align 8
  %85 = icmp eq %"class.v8::internal::compiler::Node"** %84, %82
  br i1 %85, label %255, label %86

86:                                               ; preds = %72
  %87 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  %88 = ptrtoint %"class.v8::internal::compiler::Node"** %87 to i64
  %89 = sub i64 %88, %83
  %90 = lshr i64 %89, 3
  %91 = add nuw nsw i64 %90, 1
  %92 = icmp ult i64 %91, 4
  br i1 %92, label %185, label %93

93:                                               ; preds = %86
  %94 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  %95 = ptrtoint %"class.v8::internal::compiler::Node"** %94 to i64
  %96 = sub i64 %95, %83
  %97 = lshr i64 %96, 3
  %98 = xor i64 %97, -1
  %99 = add nsw i64 %39, %98
  %100 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 %99
  %101 = xor i64 %97, -1
  %102 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 %101
  %103 = icmp ult %"class.v8::internal::compiler::Node"** %100, %84
  %104 = icmp ult %"class.v8::internal::compiler::Node"** %102, %75
  %105 = and i1 %103, %104
  br i1 %105, label %185, label %106

106:                                              ; preds = %93
  %107 = and i64 %91, 4611686018427387900
  %108 = sub nsw i64 0, %107
  %109 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 %108
  %110 = sub nsw i64 0, %107
  %111 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 %110
  %112 = add nsw i64 %107, -4
  %113 = lshr exact i64 %112, 2
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %112, 0
  br i1 %116, label %163, label %117

117:                                              ; preds = %106
  %118 = sub nuw nsw i64 %114, %115
  %119 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 -1
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  %121 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 -1
  %122 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  br label %123

123:                                              ; preds = %123, %117
  %124 = phi i64 [ 0, %117 ], [ %158, %123 ]
  %125 = phi i64 [ %118, %117 ], [ %159, %123 ]
  %126 = sub i64 0, %124
  %127 = sub i64 0, %124
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, i64 %126
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, i64 %127
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, i64 -1
  %131 = bitcast %"class.v8::internal::compiler::Node"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !9
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, i64 -2
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 -1
  %135 = bitcast %"class.v8::internal::compiler::Node"** %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8, !alias.scope !9
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 -1
  %138 = bitcast %"class.v8::internal::compiler::Node"** %137 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %138, align 8, !alias.scope !12, !noalias !9
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 -2
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 -1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %141, align 8, !alias.scope !12, !noalias !9
  %142 = sub nuw nsw i64 -4, %124
  %143 = sub nuw nsw i64 -4, %124
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %121, i64 %142
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 %143
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 -1
  %147 = bitcast %"class.v8::internal::compiler::Node"** %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8, !alias.scope !9
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 -2
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 -1
  %151 = bitcast %"class.v8::internal::compiler::Node"** %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !9
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 -1
  %154 = bitcast %"class.v8::internal::compiler::Node"** %153 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %154, align 8, !alias.scope !12, !noalias !9
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 -2
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %155, i64 -1
  %157 = bitcast %"class.v8::internal::compiler::Node"** %156 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %157, align 8, !alias.scope !12, !noalias !9
  %158 = add i64 %124, 8
  %159 = add i64 %125, -2
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %123, !llvm.loop !14

161:                                              ; preds = %123
  %162 = sub nuw nsw i64 -8, %124
  br label %163

163:                                              ; preds = %161, %106
  %164 = phi i64 [ 0, %106 ], [ %162, %161 ]
  %165 = icmp eq i64 %115, 0
  br i1 %165, label %183, label %166

166:                                              ; preds = %163
  %167 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 -1
  %168 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %84, i64 -1
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 %164
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 %164
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, i64 -1
  %172 = bitcast %"class.v8::internal::compiler::Node"** %171 to <2 x i64>*
  %173 = load <2 x i64>, <2 x i64>* %172, align 8, !alias.scope !9
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, i64 -2
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, i64 -1
  %176 = bitcast %"class.v8::internal::compiler::Node"** %175 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8, !alias.scope !9
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -1
  %179 = bitcast %"class.v8::internal::compiler::Node"** %178 to <2 x i64>*
  store <2 x i64> %173, <2 x i64>* %179, align 8, !alias.scope !12, !noalias !9
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -2
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %182 = bitcast %"class.v8::internal::compiler::Node"** %181 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %182, align 8, !alias.scope !12, !noalias !9
  br label %183

183:                                              ; preds = %163, %166
  %184 = icmp eq i64 %91, %107
  br i1 %184, label %255, label %185

185:                                              ; preds = %183, %93, %86
  %186 = phi %"class.v8::internal::compiler::Node"** [ %75, %93 ], [ %75, %86 ], [ %109, %183 ]
  %187 = phi %"class.v8::internal::compiler::Node"** [ %84, %93 ], [ %84, %86 ], [ %111, %183 ]
  %188 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %187, i64 -1
  %189 = ptrtoint %"class.v8::internal::compiler::Node"** %188 to i64
  %190 = sub i64 %189, %83
  %191 = lshr i64 %190, 3
  %192 = add nuw nsw i64 %191, 1
  %193 = and i64 %192, 7
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %206, label %195

195:                                              ; preds = %185, %195
  %196 = phi %"class.v8::internal::compiler::Node"** [ %199, %195 ], [ %186, %185 ]
  %197 = phi %"class.v8::internal::compiler::Node"** [ %200, %195 ], [ %187, %185 ]
  %198 = phi i64 [ %204, %195 ], [ %193, %185 ]
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -1
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -1
  %201 = bitcast %"class.v8::internal::compiler::Node"** %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.v8::internal::compiler::Node"** %199 to i64*
  store i64 %202, i64* %203, align 8
  %204 = add i64 %198, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %195, !llvm.loop !16

206:                                              ; preds = %195, %185
  %207 = phi %"class.v8::internal::compiler::Node"** [ undef, %185 ], [ %199, %195 ]
  %208 = phi %"class.v8::internal::compiler::Node"** [ %186, %185 ], [ %199, %195 ]
  %209 = phi %"class.v8::internal::compiler::Node"** [ %187, %185 ], [ %200, %195 ]
  %210 = icmp ult i64 %190, 56
  br i1 %210, label %255, label %211

211:                                              ; preds = %206, %211
  %212 = phi %"class.v8::internal::compiler::Node"** [ %249, %211 ], [ %208, %206 ]
  %213 = phi %"class.v8::internal::compiler::Node"** [ %250, %211 ], [ %209, %206 ]
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -1
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -1
  %216 = bitcast %"class.v8::internal::compiler::Node"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.v8::internal::compiler::Node"** %214 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -2
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -2
  %221 = bitcast %"class.v8::internal::compiler::Node"** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.v8::internal::compiler::Node"** %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -3
  %225 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -3
  %226 = bitcast %"class.v8::internal::compiler::Node"** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.v8::internal::compiler::Node"** %224 to i64*
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -4
  %230 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -4
  %231 = bitcast %"class.v8::internal::compiler::Node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.v8::internal::compiler::Node"** %229 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -5
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -5
  %236 = bitcast %"class.v8::internal::compiler::Node"** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.v8::internal::compiler::Node"** %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -6
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -6
  %241 = bitcast %"class.v8::internal::compiler::Node"** %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.v8::internal::compiler::Node"** %239 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -7
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -7
  %246 = bitcast %"class.v8::internal::compiler::Node"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.v8::internal::compiler::Node"** %244 to i64*
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, i64 -8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -8
  %251 = bitcast %"class.v8::internal::compiler::Node"** %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.v8::internal::compiler::Node"** %249 to i64*
  store i64 %252, i64* %253, align 8
  %254 = icmp eq %"class.v8::internal::compiler::Node"** %250, %82
  br i1 %254, label %255, label %211, !llvm.loop !18

255:                                              ; preds = %206, %211, %183, %72
  %256 = phi %"class.v8::internal::compiler::Node"** [ %75, %72 ], [ %109, %183 ], [ %207, %206 ], [ %249, %211 ]
  %257 = ptrtoint %"class.v8::internal::compiler::Node"** %256 to i64
  store i64 %257, i64* %36, align 8
  store i64 %80, i64* %35, align 8
  store i64 %77, i64* %45, align 8
  br label %258

258:                                              ; preds = %28, %255
  %259 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %6, align 8
  %260 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %259, i64 0, i32 0, i32 1
  %261 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %260, align 8
  %262 = getelementptr inbounds %"class.v8::internal::ZoneVector.25", %"class.v8::internal::ZoneVector.25"* %2, i64 0, i32 0, i32 0, i32 0
  %263 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %262, align 8
  %264 = getelementptr inbounds %"class.v8::internal::ZoneVector.25", %"class.v8::internal::ZoneVector.25"* %2, i64 0, i32 0, i32 0, i32 1
  %265 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %264, align 8
  %266 = tail call %"class.v8::internal::compiler::Node"** @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPKS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS5_EEE4typeESD_SF_SF_(%"class.std::__1::vector.26"* %259, %"class.v8::internal::compiler::Node"** %261, %"class.v8::internal::compiler::Node"** %263, %"class.v8::internal::compiler::Node"** %265)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::Node"** @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPKS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS5_EEE4typeESD_SF_SF_(%"class.std::__1::vector.26"*, %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::compiler::Node"** %1 to i8*
  %6 = ptrtoint %"class.v8::internal::compiler::Node"** %1 to i64
  %7 = ptrtoint %"class.v8::internal::compiler::Node"** %2 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint %"class.v8::internal::compiler::Node"** %3 to i64
  %10 = sub i64 %9, %7
  %11 = ashr exact i64 %10, 3
  %12 = icmp sgt i64 %10, 0
  br i1 %12, label %13, label %846

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::compiler::Node"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, align 8
  %19 = ptrtoint %"class.v8::internal::compiler::Node"** %18 to i64
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp sgt i64 %11, %21
  %23 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  br i1 %22, label %359, label %24

24:                                               ; preds = %13
  %25 = sub i64 %19, %6
  %26 = ashr exact i64 %25, 3
  %27 = icmp sgt i64 %11, %26
  br i1 %27, label %28, label %213

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, i64 %26
  %30 = icmp eq %"class.v8::internal::compiler::Node"** %29, %3
  br i1 %30, label %208, label %31

31:                                               ; preds = %28
  %32 = xor i64 %26, -1
  %33 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3, i64 %32
  %34 = ptrtoint %"class.v8::internal::compiler::Node"** %33 to i64
  %35 = sub i64 %34, %7
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %134, label %39

39:                                               ; preds = %31
  %40 = xor i64 %26, -1
  %41 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3, i64 %40
  %42 = ptrtoint %"class.v8::internal::compiler::Node"** %41 to i64
  %43 = sub i64 %42, %7
  %44 = lshr i64 %43, 3
  %45 = add nuw nsw i64 %44, 1
  %46 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %45
  %47 = add nsw i64 %26, %44
  %48 = add nsw i64 %47, 1
  %49 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, i64 %48
  %50 = icmp ult %"class.v8::internal::compiler::Node"** %18, %49
  %51 = icmp ult %"class.v8::internal::compiler::Node"** %29, %46
  %52 = and i1 %50, %51
  br i1 %52, label %134, label %53

53:                                               ; preds = %39
  %54 = and i64 %37, 4611686018427387900
  %55 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %54
  %56 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %54
  %57 = add nsw i64 %54, -4
  %58 = lshr exact i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 12
  br i1 %61, label %113, label %62

62:                                               ; preds = %53
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %65
  %68 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %65
  %69 = bitcast %"class.v8::internal::compiler::Node"** %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !19
  %71 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 2
  %72 = bitcast %"class.v8::internal::compiler::Node"** %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8, !alias.scope !19
  %74 = bitcast %"class.v8::internal::compiler::Node"** %67 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 8, !alias.scope !22, !noalias !19
  %75 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 2
  %76 = bitcast %"class.v8::internal::compiler::Node"** %75 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %76, align 8, !alias.scope !22, !noalias !19
  %77 = or i64 %65, 4
  %78 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %77
  %79 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %77
  %80 = bitcast %"class.v8::internal::compiler::Node"** %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !19
  %82 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %79, i64 2
  %83 = bitcast %"class.v8::internal::compiler::Node"** %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8, !alias.scope !19
  %85 = bitcast %"class.v8::internal::compiler::Node"** %78 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 8, !alias.scope !22, !noalias !19
  %86 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 2
  %87 = bitcast %"class.v8::internal::compiler::Node"** %86 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %87, align 8, !alias.scope !22, !noalias !19
  %88 = or i64 %65, 8
  %89 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %88
  %90 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %88
  %91 = bitcast %"class.v8::internal::compiler::Node"** %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !19
  %93 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %90, i64 2
  %94 = bitcast %"class.v8::internal::compiler::Node"** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !19
  %96 = bitcast %"class.v8::internal::compiler::Node"** %89 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 8, !alias.scope !22, !noalias !19
  %97 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 2
  %98 = bitcast %"class.v8::internal::compiler::Node"** %97 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %98, align 8, !alias.scope !22, !noalias !19
  %99 = or i64 %65, 12
  %100 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %99
  %101 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %99
  %102 = bitcast %"class.v8::internal::compiler::Node"** %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !19
  %104 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, i64 2
  %105 = bitcast %"class.v8::internal::compiler::Node"** %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !19
  %107 = bitcast %"class.v8::internal::compiler::Node"** %100 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 8, !alias.scope !22, !noalias !19
  %108 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, i64 2
  %109 = bitcast %"class.v8::internal::compiler::Node"** %108 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %109, align 8, !alias.scope !22, !noalias !19
  %110 = add i64 %65, 16
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !24

113:                                              ; preds = %64, %53
  %114 = phi i64 [ 0, %53 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %117
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %29, i64 %117
  %121 = bitcast %"class.v8::internal::compiler::Node"** %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !19
  %123 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, i64 2
  %124 = bitcast %"class.v8::internal::compiler::Node"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !19
  %126 = bitcast %"class.v8::internal::compiler::Node"** %119 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %126, align 8, !alias.scope !22, !noalias !19
  %127 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, i64 2
  %128 = bitcast %"class.v8::internal::compiler::Node"** %127 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %128, align 8, !alias.scope !22, !noalias !19
  %129 = add i64 %117, 4
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !25

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %37, %54
  br i1 %133, label %205, label %134

134:                                              ; preds = %132, %39, %31
  %135 = phi %"class.v8::internal::compiler::Node"** [ %18, %39 ], [ %18, %31 ], [ %55, %132 ]
  %136 = phi %"class.v8::internal::compiler::Node"** [ %29, %39 ], [ %29, %31 ], [ %56, %132 ]
  %137 = ptrtoint %"class.v8::internal::compiler::Node"** %136 to i64
  %138 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %3, i64 -1
  %139 = ptrtoint %"class.v8::internal::compiler::Node"** %138 to i64
  %140 = sub i64 %139, %137
  %141 = lshr i64 %140, 3
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %134, %145
  %146 = phi %"class.v8::internal::compiler::Node"** [ %153, %145 ], [ %135, %134 ]
  %147 = phi %"class.v8::internal::compiler::Node"** [ %152, %145 ], [ %136, %134 ]
  %148 = phi i64 [ %154, %145 ], [ %143, %134 ]
  %149 = bitcast %"class.v8::internal::compiler::Node"** %146 to i64*
  %150 = bitcast %"class.v8::internal::compiler::Node"** %147 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %147, i64 1
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, i64 1
  %154 = add i64 %148, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !26

156:                                              ; preds = %145, %134
  %157 = phi %"class.v8::internal::compiler::Node"** [ undef, %134 ], [ %153, %145 ]
  %158 = phi %"class.v8::internal::compiler::Node"** [ %135, %134 ], [ %153, %145 ]
  %159 = phi %"class.v8::internal::compiler::Node"** [ %136, %134 ], [ %152, %145 ]
  %160 = icmp ult i64 %140, 56
  br i1 %160, label %205, label %161

161:                                              ; preds = %156, %161
  %162 = phi %"class.v8::internal::compiler::Node"** [ %203, %161 ], [ %158, %156 ]
  %163 = phi %"class.v8::internal::compiler::Node"** [ %202, %161 ], [ %159, %156 ]
  %164 = bitcast %"class.v8::internal::compiler::Node"** %162 to i64*
  %165 = bitcast %"class.v8::internal::compiler::Node"** %163 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %164, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 1
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 1
  %169 = bitcast %"class.v8::internal::compiler::Node"** %168 to i64*
  %170 = bitcast %"class.v8::internal::compiler::Node"** %167 to i64*
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %169, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 2
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 2
  %174 = bitcast %"class.v8::internal::compiler::Node"** %173 to i64*
  %175 = bitcast %"class.v8::internal::compiler::Node"** %172 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %174, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 3
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 3
  %179 = bitcast %"class.v8::internal::compiler::Node"** %178 to i64*
  %180 = bitcast %"class.v8::internal::compiler::Node"** %177 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %179, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 4
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 4
  %184 = bitcast %"class.v8::internal::compiler::Node"** %183 to i64*
  %185 = bitcast %"class.v8::internal::compiler::Node"** %182 to i64*
  %186 = load i64, i64* %185, align 8
  store i64 %186, i64* %184, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 5
  %188 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 5
  %189 = bitcast %"class.v8::internal::compiler::Node"** %188 to i64*
  %190 = bitcast %"class.v8::internal::compiler::Node"** %187 to i64*
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 6
  %193 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 6
  %194 = bitcast %"class.v8::internal::compiler::Node"** %193 to i64*
  %195 = bitcast %"class.v8::internal::compiler::Node"** %192 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 7
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 7
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  %200 = bitcast %"class.v8::internal::compiler::Node"** %197 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %199, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 8
  %204 = icmp eq %"class.v8::internal::compiler::Node"** %202, %3
  br i1 %204, label %205, label %161, !llvm.loop !27

205:                                              ; preds = %156, %161, %132
  %206 = phi %"class.v8::internal::compiler::Node"** [ %55, %132 ], [ %157, %156 ], [ %203, %161 ]
  %207 = ptrtoint %"class.v8::internal::compiler::Node"** %206 to i64
  br label %208

208:                                              ; preds = %205, %28
  %209 = phi i64 [ %19, %28 ], [ %207, %205 ]
  store i64 %209, i64* %23, align 8
  %210 = icmp sgt i64 %25, 0
  br i1 %210, label %211, label %846

211:                                              ; preds = %208
  %212 = inttoptr i64 %209 to %"class.v8::internal::compiler::Node"**
  br label %213

213:                                              ; preds = %211, %24
  %214 = phi i64 [ %209, %211 ], [ %19, %24 ]
  %215 = phi %"class.v8::internal::compiler::Node"** [ %212, %211 ], [ %18, %24 ]
  %216 = phi %"class.v8::internal::compiler::Node"** [ %29, %211 ], [ %3, %24 ]
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %11
  %218 = ptrtoint %"class.v8::internal::compiler::Node"** %217 to i64
  %219 = sub i64 %214, %218
  %220 = ashr exact i64 %219, 3
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %220
  %222 = icmp ult %"class.v8::internal::compiler::Node"** %221, %18
  br i1 %222, label %223, label %336

223:                                              ; preds = %213
  %224 = sub nsw i64 0, %220
  %225 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %224
  %226 = bitcast %"class.v8::internal::compiler::Node"** %225 to i8*
  %227 = xor i64 %6, -1
  %228 = getelementptr i8, i8* %226, i64 %227
  %229 = ptrtoint i8* %228 to i64
  %230 = lshr i64 %229, 3
  %231 = add nuw nsw i64 %230, 1
  %232 = icmp ult i64 %231, 4
  br i1 %232, label %233, label %236

233:                                              ; preds = %331, %236, %223
  %234 = phi %"class.v8::internal::compiler::Node"** [ %215, %236 ], [ %215, %223 ], [ %254, %331 ]
  %235 = phi %"class.v8::internal::compiler::Node"** [ %221, %236 ], [ %221, %223 ], [ %255, %331 ]
  br label %344

236:                                              ; preds = %223
  %237 = sub nsw i64 0, %220
  %238 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %18, i64 %237
  %239 = bitcast %"class.v8::internal::compiler::Node"** %238 to i8*
  %240 = xor i64 %6, -1
  %241 = getelementptr i8, i8* %239, i64 %240
  %242 = ptrtoint i8* %241 to i64
  %243 = lshr i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %244
  %246 = add nsw i64 %220, %243
  %247 = add nsw i64 %246, 1
  %248 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %247
  %249 = icmp ult %"class.v8::internal::compiler::Node"** %215, %248
  %250 = icmp ult %"class.v8::internal::compiler::Node"** %221, %245
  %251 = and i1 %249, %250
  br i1 %251, label %233, label %252

252:                                              ; preds = %236
  %253 = and i64 %231, 4611686018427387900
  %254 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %253
  %255 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %253
  %256 = add nsw i64 %253, -4
  %257 = lshr exact i64 %256, 2
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 3
  %260 = icmp ult i64 %256, 12
  br i1 %260, label %312, label %261

261:                                              ; preds = %252
  %262 = sub nsw i64 %258, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 0, %261 ], [ %309, %263 ]
  %265 = phi i64 [ %262, %261 ], [ %310, %263 ]
  %266 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %264
  %267 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %264
  %268 = bitcast %"class.v8::internal::compiler::Node"** %267 to <2 x i64>*
  %269 = load <2 x i64>, <2 x i64>* %268, align 8, !alias.scope !28
  %270 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %267, i64 2
  %271 = bitcast %"class.v8::internal::compiler::Node"** %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8, !alias.scope !28
  %273 = bitcast %"class.v8::internal::compiler::Node"** %266 to <2 x i64>*
  store <2 x i64> %269, <2 x i64>* %273, align 8, !alias.scope !31, !noalias !28
  %274 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %266, i64 2
  %275 = bitcast %"class.v8::internal::compiler::Node"** %274 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %275, align 8, !alias.scope !31, !noalias !28
  %276 = or i64 %264, 4
  %277 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %276
  %278 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %276
  %279 = bitcast %"class.v8::internal::compiler::Node"** %278 to <2 x i64>*
  %280 = load <2 x i64>, <2 x i64>* %279, align 8, !alias.scope !28
  %281 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %278, i64 2
  %282 = bitcast %"class.v8::internal::compiler::Node"** %281 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !28
  %284 = bitcast %"class.v8::internal::compiler::Node"** %277 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %284, align 8, !alias.scope !31, !noalias !28
  %285 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %277, i64 2
  %286 = bitcast %"class.v8::internal::compiler::Node"** %285 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %286, align 8, !alias.scope !31, !noalias !28
  %287 = or i64 %264, 8
  %288 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %287
  %289 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %287
  %290 = bitcast %"class.v8::internal::compiler::Node"** %289 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8, !alias.scope !28
  %292 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %289, i64 2
  %293 = bitcast %"class.v8::internal::compiler::Node"** %292 to <2 x i64>*
  %294 = load <2 x i64>, <2 x i64>* %293, align 8, !alias.scope !28
  %295 = bitcast %"class.v8::internal::compiler::Node"** %288 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %295, align 8, !alias.scope !31, !noalias !28
  %296 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %288, i64 2
  %297 = bitcast %"class.v8::internal::compiler::Node"** %296 to <2 x i64>*
  store <2 x i64> %294, <2 x i64>* %297, align 8, !alias.scope !31, !noalias !28
  %298 = or i64 %264, 12
  %299 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %298
  %300 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %298
  %301 = bitcast %"class.v8::internal::compiler::Node"** %300 to <2 x i64>*
  %302 = load <2 x i64>, <2 x i64>* %301, align 8, !alias.scope !28
  %303 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %300, i64 2
  %304 = bitcast %"class.v8::internal::compiler::Node"** %303 to <2 x i64>*
  %305 = load <2 x i64>, <2 x i64>* %304, align 8, !alias.scope !28
  %306 = bitcast %"class.v8::internal::compiler::Node"** %299 to <2 x i64>*
  store <2 x i64> %302, <2 x i64>* %306, align 8, !alias.scope !31, !noalias !28
  %307 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %299, i64 2
  %308 = bitcast %"class.v8::internal::compiler::Node"** %307 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %308, align 8, !alias.scope !31, !noalias !28
  %309 = add i64 %264, 16
  %310 = add i64 %265, -4
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %263, !llvm.loop !33

312:                                              ; preds = %263, %252
  %313 = phi i64 [ 0, %252 ], [ %309, %263 ]
  %314 = icmp eq i64 %259, 0
  br i1 %314, label %331, label %315

315:                                              ; preds = %312, %315
  %316 = phi i64 [ %328, %315 ], [ %313, %312 ]
  %317 = phi i64 [ %329, %315 ], [ %259, %312 ]
  %318 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %316
  %319 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 %316
  %320 = bitcast %"class.v8::internal::compiler::Node"** %319 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 8, !alias.scope !28
  %322 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %319, i64 2
  %323 = bitcast %"class.v8::internal::compiler::Node"** %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 8, !alias.scope !28
  %325 = bitcast %"class.v8::internal::compiler::Node"** %318 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 8, !alias.scope !31, !noalias !28
  %326 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 2
  %327 = bitcast %"class.v8::internal::compiler::Node"** %326 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %327, align 8, !alias.scope !31, !noalias !28
  %328 = add i64 %316, 4
  %329 = add i64 %317, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %315, !llvm.loop !34

331:                                              ; preds = %315, %312
  %332 = icmp eq i64 %231, %253
  br i1 %332, label %333, label %233

333:                                              ; preds = %344, %331
  %334 = phi %"class.v8::internal::compiler::Node"** [ %254, %331 ], [ %351, %344 ]
  %335 = ptrtoint %"class.v8::internal::compiler::Node"** %334 to i64
  br label %336

336:                                              ; preds = %333, %213
  %337 = phi i64 [ %335, %333 ], [ %214, %213 ]
  store i64 %337, i64* %23, align 8
  %338 = icmp eq i64 %219, 0
  br i1 %338, label %353, label %339

339:                                              ; preds = %336
  %340 = sub nsw i64 0, %220
  %341 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %340
  %342 = bitcast %"class.v8::internal::compiler::Node"** %341 to i8*
  %343 = bitcast %"class.v8::internal::compiler::Node"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %342, i8* align 8 %343, i64 %219, i1 false) #9
  br label %353

344:                                              ; preds = %233, %344
  %345 = phi %"class.v8::internal::compiler::Node"** [ %351, %344 ], [ %234, %233 ]
  %346 = phi %"class.v8::internal::compiler::Node"** [ %350, %344 ], [ %235, %233 ]
  %347 = bitcast %"class.v8::internal::compiler::Node"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.v8::internal::compiler::Node"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 1
  %351 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %345, i64 1
  %352 = icmp ult %"class.v8::internal::compiler::Node"** %350, %18
  br i1 %352, label %344, label %333, !llvm.loop !35

353:                                              ; preds = %336, %339
  %354 = ptrtoint %"class.v8::internal::compiler::Node"** %216 to i64
  %355 = sub i64 %354, %7
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %846, label %357

357:                                              ; preds = %353
  %358 = bitcast %"class.v8::internal::compiler::Node"** %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %358, i64 %355, i1 false) #9
  br label %846

359:                                              ; preds = %13
  %360 = bitcast %"class.std::__1::vector.26"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %19, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %11
  %365 = icmp ugt i64 %364, 268435455
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.26"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #10
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %16, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 134217727
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %6, %361
  %374 = ashr exact i64 %373, 3
  br label %382

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %6, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %401, label %382

382:                                              ; preds = %372, %375
  %383 = phi i64 [ %374, %372 ], [ %380, %375 ]
  %384 = phi i64 [ 268435455, %372 ], [ %378, %375 ]
  %385 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %386 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %385, align 8
  %387 = shl i64 %384, 3
  %388 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 2
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 3
  %391 = load i64, i64* %390, align 8
  %392 = sub i64 %391, %389
  %393 = icmp ugt i64 %387, %392
  br i1 %393, label %394, label %396, !prof !2

394:                                              ; preds = %382
  %395 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %386, i64 %387) #9
  br label %398

396:                                              ; preds = %382
  %397 = add i64 %389, %387
  store i64 %397, i64* %388, align 8
  br label %398

398:                                              ; preds = %396, %394
  %399 = phi i64 [ %395, %394 ], [ %389, %396 ]
  %400 = inttoptr i64 %399 to %"class.v8::internal::compiler::Node"**
  br label %401

401:                                              ; preds = %398, %375
  %402 = phi i64 [ %383, %398 ], [ %380, %375 ]
  %403 = phi i64 [ %384, %398 ], [ 0, %375 ]
  %404 = phi %"class.v8::internal::compiler::Node"** [ %400, %398 ], [ null, %375 ]
  %405 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %402
  %406 = ptrtoint %"class.v8::internal::compiler::Node"** %405 to i64
  %407 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %403
  %408 = ptrtoint %"class.v8::internal::compiler::Node"** %407 to i64
  %409 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 %11
  %410 = add i64 %10, -8
  %411 = lshr i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %430, label %415

415:                                              ; preds = %401, %415
  %416 = phi %"class.v8::internal::compiler::Node"** [ %423, %415 ], [ %405, %401 ]
  %417 = phi i64 [ %424, %415 ], [ %406, %401 ]
  %418 = phi %"class.v8::internal::compiler::Node"** [ %425, %415 ], [ %2, %401 ]
  %419 = phi i64 [ %426, %415 ], [ %413, %401 ]
  %420 = bitcast %"class.v8::internal::compiler::Node"** %418 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = inttoptr i64 %417 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %416, i64 1
  %424 = ptrtoint %"class.v8::internal::compiler::Node"** %423 to i64
  %425 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %418, i64 1
  %426 = add i64 %419, -1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %415, !llvm.loop !36

428:                                              ; preds = %415
  %429 = ptrtoint %"class.v8::internal::compiler::Node"** %423 to i64
  br label %430

430:                                              ; preds = %401, %428
  %431 = phi %"class.v8::internal::compiler::Node"** [ %405, %401 ], [ %423, %428 ]
  %432 = phi i64 [ %406, %401 ], [ %429, %428 ]
  %433 = phi %"class.v8::internal::compiler::Node"** [ %2, %401 ], [ %425, %428 ]
  %434 = icmp ult i64 %410, 56
  br i1 %434, label %481, label %435

435:                                              ; preds = %430, %435
  %436 = phi %"class.v8::internal::compiler::Node"** [ %477, %435 ], [ %431, %430 ]
  %437 = phi i64 [ %478, %435 ], [ %432, %430 ]
  %438 = phi %"class.v8::internal::compiler::Node"** [ %479, %435 ], [ %433, %430 ]
  %439 = bitcast %"class.v8::internal::compiler::Node"** %438 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = inttoptr i64 %437 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 1
  %443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 1
  %444 = bitcast %"class.v8::internal::compiler::Node"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.v8::internal::compiler::Node"** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 2
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 2
  %449 = bitcast %"class.v8::internal::compiler::Node"** %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = bitcast %"class.v8::internal::compiler::Node"** %447 to i64*
  store i64 %450, i64* %451, align 8
  %452 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 3
  %453 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 3
  %454 = bitcast %"class.v8::internal::compiler::Node"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.v8::internal::compiler::Node"** %452 to i64*
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 4
  %458 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 4
  %459 = bitcast %"class.v8::internal::compiler::Node"** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.v8::internal::compiler::Node"** %457 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 5
  %463 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 5
  %464 = bitcast %"class.v8::internal::compiler::Node"** %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.v8::internal::compiler::Node"** %462 to i64*
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 6
  %468 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 6
  %469 = bitcast %"class.v8::internal::compiler::Node"** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.v8::internal::compiler::Node"** %467 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 7
  %473 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 7
  %474 = bitcast %"class.v8::internal::compiler::Node"** %473 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = bitcast %"class.v8::internal::compiler::Node"** %472 to i64*
  store i64 %475, i64* %476, align 8
  %477 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 8
  %478 = ptrtoint %"class.v8::internal::compiler::Node"** %477 to i64
  %479 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 8
  %480 = icmp eq %"class.v8::internal::compiler::Node"** %409, %477
  br i1 %480, label %481, label %435

481:                                              ; preds = %435, %430
  %482 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %8, align 8
  %483 = ptrtoint %"class.v8::internal::compiler::Node"** %482 to i64
  %484 = icmp eq %"class.v8::internal::compiler::Node"** %482, %1
  br i1 %484, label %657, label %485

485:                                              ; preds = %481
  %486 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %487 = ptrtoint %"class.v8::internal::compiler::Node"** %486 to i64
  %488 = sub i64 %487, %483
  %489 = lshr i64 %488, 3
  %490 = add nuw nsw i64 %489, 1
  %491 = icmp ult i64 %490, 4
  br i1 %491, label %584, label %492

492:                                              ; preds = %485
  %493 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %494 = ptrtoint %"class.v8::internal::compiler::Node"** %493 to i64
  %495 = sub i64 %494, %483
  %496 = lshr i64 %495, 3
  %497 = xor i64 %496, -1
  %498 = add nsw i64 %402, %497
  %499 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %498
  %500 = xor i64 %496, -1
  %501 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %500
  %502 = icmp ult %"class.v8::internal::compiler::Node"** %499, %1
  %503 = icmp ult %"class.v8::internal::compiler::Node"** %501, %405
  %504 = and i1 %502, %503
  br i1 %504, label %584, label %505

505:                                              ; preds = %492
  %506 = and i64 %490, 4611686018427387900
  %507 = sub nsw i64 0, %506
  %508 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 %507
  %509 = sub nsw i64 0, %506
  %510 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %509
  %511 = add nsw i64 %506, -4
  %512 = lshr exact i64 %511, 2
  %513 = add nuw nsw i64 %512, 1
  %514 = and i64 %513, 1
  %515 = icmp eq i64 %511, 0
  br i1 %515, label %560, label %516

516:                                              ; preds = %505
  %517 = sub nuw nsw i64 %513, %514
  %518 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %519 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %520 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %521 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  br label %522

522:                                              ; preds = %522, %516
  %523 = phi i64 [ 0, %516 ], [ %557, %522 ]
  %524 = phi i64 [ %517, %516 ], [ %558, %522 ]
  %525 = sub i64 0, %523
  %526 = sub i64 0, %523
  %527 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %518, i64 %525
  %528 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %519, i64 %526
  %529 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -1
  %530 = bitcast %"class.v8::internal::compiler::Node"** %529 to <2 x i64>*
  %531 = load <2 x i64>, <2 x i64>* %530, align 8, !alias.scope !37
  %532 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %528, i64 -2
  %533 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %532, i64 -1
  %534 = bitcast %"class.v8::internal::compiler::Node"** %533 to <2 x i64>*
  %535 = load <2 x i64>, <2 x i64>* %534, align 8, !alias.scope !37
  %536 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -1
  %537 = bitcast %"class.v8::internal::compiler::Node"** %536 to <2 x i64>*
  store <2 x i64> %531, <2 x i64>* %537, align 8, !alias.scope !40, !noalias !37
  %538 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %527, i64 -2
  %539 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %538, i64 -1
  %540 = bitcast %"class.v8::internal::compiler::Node"** %539 to <2 x i64>*
  store <2 x i64> %535, <2 x i64>* %540, align 8, !alias.scope !40, !noalias !37
  %541 = sub nuw nsw i64 -4, %523
  %542 = sub nuw nsw i64 -4, %523
  %543 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %520, i64 %541
  %544 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %521, i64 %542
  %545 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %544, i64 -1
  %546 = bitcast %"class.v8::internal::compiler::Node"** %545 to <2 x i64>*
  %547 = load <2 x i64>, <2 x i64>* %546, align 8, !alias.scope !37
  %548 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %544, i64 -2
  %549 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %548, i64 -1
  %550 = bitcast %"class.v8::internal::compiler::Node"** %549 to <2 x i64>*
  %551 = load <2 x i64>, <2 x i64>* %550, align 8, !alias.scope !37
  %552 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %543, i64 -1
  %553 = bitcast %"class.v8::internal::compiler::Node"** %552 to <2 x i64>*
  store <2 x i64> %547, <2 x i64>* %553, align 8, !alias.scope !40, !noalias !37
  %554 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %543, i64 -2
  %555 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %554, i64 -1
  %556 = bitcast %"class.v8::internal::compiler::Node"** %555 to <2 x i64>*
  store <2 x i64> %551, <2 x i64>* %556, align 8, !alias.scope !40, !noalias !37
  %557 = add i64 %523, 8
  %558 = add i64 %524, -2
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %560, label %522, !llvm.loop !42

560:                                              ; preds = %522, %505
  %561 = phi i64 [ 0, %505 ], [ %557, %522 ]
  %562 = icmp eq i64 %514, 0
  br i1 %562, label %582, label %563

563:                                              ; preds = %560
  %564 = sub i64 0, %561
  %565 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %566 = sub i64 0, %561
  %567 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 -1
  %568 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %565, i64 %564
  %569 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %567, i64 %566
  %570 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %569, i64 -1
  %571 = bitcast %"class.v8::internal::compiler::Node"** %570 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 8, !alias.scope !37
  %573 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %569, i64 -2
  %574 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %573, i64 -1
  %575 = bitcast %"class.v8::internal::compiler::Node"** %574 to <2 x i64>*
  %576 = load <2 x i64>, <2 x i64>* %575, align 8, !alias.scope !37
  %577 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %568, i64 -1
  %578 = bitcast %"class.v8::internal::compiler::Node"** %577 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %578, align 8, !alias.scope !40, !noalias !37
  %579 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %568, i64 -2
  %580 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %579, i64 -1
  %581 = bitcast %"class.v8::internal::compiler::Node"** %580 to <2 x i64>*
  store <2 x i64> %576, <2 x i64>* %581, align 8, !alias.scope !40, !noalias !37
  br label %582

582:                                              ; preds = %560, %563
  %583 = icmp eq i64 %490, %506
  br i1 %583, label %654, label %584

584:                                              ; preds = %582, %492, %485
  %585 = phi %"class.v8::internal::compiler::Node"** [ %405, %492 ], [ %405, %485 ], [ %508, %582 ]
  %586 = phi %"class.v8::internal::compiler::Node"** [ %1, %492 ], [ %1, %485 ], [ %510, %582 ]
  %587 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %586, i64 -1
  %588 = ptrtoint %"class.v8::internal::compiler::Node"** %587 to i64
  %589 = sub i64 %588, %483
  %590 = lshr i64 %589, 3
  %591 = add nuw nsw i64 %590, 1
  %592 = and i64 %591, 7
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %605, label %594

594:                                              ; preds = %584, %594
  %595 = phi %"class.v8::internal::compiler::Node"** [ %598, %594 ], [ %585, %584 ]
  %596 = phi %"class.v8::internal::compiler::Node"** [ %599, %594 ], [ %586, %584 ]
  %597 = phi i64 [ %603, %594 ], [ %592, %584 ]
  %598 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %595, i64 -1
  %599 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %596, i64 -1
  %600 = bitcast %"class.v8::internal::compiler::Node"** %599 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = bitcast %"class.v8::internal::compiler::Node"** %598 to i64*
  store i64 %601, i64* %602, align 8
  %603 = add i64 %597, -1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %594, !llvm.loop !43

605:                                              ; preds = %594, %584
  %606 = phi %"class.v8::internal::compiler::Node"** [ undef, %584 ], [ %598, %594 ]
  %607 = phi %"class.v8::internal::compiler::Node"** [ %585, %584 ], [ %598, %594 ]
  %608 = phi %"class.v8::internal::compiler::Node"** [ %586, %584 ], [ %599, %594 ]
  %609 = icmp ult i64 %589, 56
  br i1 %609, label %654, label %610

610:                                              ; preds = %605, %610
  %611 = phi %"class.v8::internal::compiler::Node"** [ %648, %610 ], [ %607, %605 ]
  %612 = phi %"class.v8::internal::compiler::Node"** [ %649, %610 ], [ %608, %605 ]
  %613 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -1
  %614 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -1
  %615 = bitcast %"class.v8::internal::compiler::Node"** %614 to i64*
  %616 = load i64, i64* %615, align 8
  %617 = bitcast %"class.v8::internal::compiler::Node"** %613 to i64*
  store i64 %616, i64* %617, align 8
  %618 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -2
  %619 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -2
  %620 = bitcast %"class.v8::internal::compiler::Node"** %619 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = bitcast %"class.v8::internal::compiler::Node"** %618 to i64*
  store i64 %621, i64* %622, align 8
  %623 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -3
  %624 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -3
  %625 = bitcast %"class.v8::internal::compiler::Node"** %624 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = bitcast %"class.v8::internal::compiler::Node"** %623 to i64*
  store i64 %626, i64* %627, align 8
  %628 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -4
  %629 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -4
  %630 = bitcast %"class.v8::internal::compiler::Node"** %629 to i64*
  %631 = load i64, i64* %630, align 8
  %632 = bitcast %"class.v8::internal::compiler::Node"** %628 to i64*
  store i64 %631, i64* %632, align 8
  %633 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -5
  %634 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -5
  %635 = bitcast %"class.v8::internal::compiler::Node"** %634 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = bitcast %"class.v8::internal::compiler::Node"** %633 to i64*
  store i64 %636, i64* %637, align 8
  %638 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -6
  %639 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -6
  %640 = bitcast %"class.v8::internal::compiler::Node"** %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = bitcast %"class.v8::internal::compiler::Node"** %638 to i64*
  store i64 %641, i64* %642, align 8
  %643 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -7
  %644 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -7
  %645 = bitcast %"class.v8::internal::compiler::Node"** %644 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = bitcast %"class.v8::internal::compiler::Node"** %643 to i64*
  store i64 %646, i64* %647, align 8
  %648 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, i64 -8
  %649 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %612, i64 -8
  %650 = bitcast %"class.v8::internal::compiler::Node"** %649 to i64*
  %651 = load i64, i64* %650, align 8
  %652 = bitcast %"class.v8::internal::compiler::Node"** %648 to i64*
  store i64 %651, i64* %652, align 8
  %653 = icmp eq %"class.v8::internal::compiler::Node"** %649, %482
  br i1 %653, label %654, label %610, !llvm.loop !44

654:                                              ; preds = %605, %610, %582
  %655 = phi %"class.v8::internal::compiler::Node"** [ %508, %582 ], [ %606, %605 ], [ %648, %610 ]
  %656 = ptrtoint %"class.v8::internal::compiler::Node"** %655 to i64
  br label %657

657:                                              ; preds = %654, %481
  %658 = phi i64 [ %406, %481 ], [ %656, %654 ]
  %659 = phi %"class.v8::internal::compiler::Node"** [ %405, %481 ], [ %655, %654 ]
  %660 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, align 8
  %661 = icmp eq %"class.v8::internal::compiler::Node"** %660, %1
  br i1 %661, label %662, label %664

662:                                              ; preds = %657
  %663 = ptrtoint %"class.v8::internal::compiler::Node"** %659 to i64
  br label %842

664:                                              ; preds = %657
  %665 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -1
  %666 = ptrtoint %"class.v8::internal::compiler::Node"** %665 to i64
  %667 = sub i64 %666, %6
  %668 = lshr i64 %667, 3
  %669 = add nuw nsw i64 %668, 1
  %670 = icmp ult i64 %669, 4
  br i1 %670, label %767, label %671

671:                                              ; preds = %664
  %672 = add nsw i64 %402, %11
  %673 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -1
  %674 = ptrtoint %"class.v8::internal::compiler::Node"** %673 to i64
  %675 = sub i64 %674, %6
  %676 = lshr i64 %675, 3
  %677 = add nsw i64 %672, %676
  %678 = add nsw i64 %677, 1
  %679 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %678
  %680 = add nuw nsw i64 %676, 1
  %681 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %680
  %682 = icmp ult %"class.v8::internal::compiler::Node"** %409, %681
  %683 = icmp ugt %"class.v8::internal::compiler::Node"** %679, %1
  %684 = and i1 %682, %683
  br i1 %684, label %767, label %685

685:                                              ; preds = %671
  %686 = and i64 %669, 4611686018427387900
  %687 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %686
  %688 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %686
  %689 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %686
  %690 = add nsw i64 %686, -4
  %691 = lshr exact i64 %690, 2
  %692 = add nuw nsw i64 %691, 1
  %693 = and i64 %692, 3
  %694 = icmp ult i64 %690, 12
  br i1 %694, label %746, label %695

695:                                              ; preds = %685
  %696 = sub nsw i64 %692, %693
  br label %697

697:                                              ; preds = %697, %695
  %698 = phi i64 [ 0, %695 ], [ %743, %697 ]
  %699 = phi i64 [ %696, %695 ], [ %744, %697 ]
  %700 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %698
  %701 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %698
  %702 = bitcast %"class.v8::internal::compiler::Node"** %701 to <2 x i64>*
  %703 = load <2 x i64>, <2 x i64>* %702, align 8, !alias.scope !45
  %704 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %701, i64 2
  %705 = bitcast %"class.v8::internal::compiler::Node"** %704 to <2 x i64>*
  %706 = load <2 x i64>, <2 x i64>* %705, align 8, !alias.scope !45
  %707 = bitcast %"class.v8::internal::compiler::Node"** %700 to <2 x i64>*
  store <2 x i64> %703, <2 x i64>* %707, align 8, !alias.scope !48, !noalias !45
  %708 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %700, i64 2
  %709 = bitcast %"class.v8::internal::compiler::Node"** %708 to <2 x i64>*
  store <2 x i64> %706, <2 x i64>* %709, align 8, !alias.scope !48, !noalias !45
  %710 = or i64 %698, 4
  %711 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %710
  %712 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %710
  %713 = bitcast %"class.v8::internal::compiler::Node"** %712 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !45
  %715 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %712, i64 2
  %716 = bitcast %"class.v8::internal::compiler::Node"** %715 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8, !alias.scope !45
  %718 = bitcast %"class.v8::internal::compiler::Node"** %711 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %718, align 8, !alias.scope !48, !noalias !45
  %719 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %711, i64 2
  %720 = bitcast %"class.v8::internal::compiler::Node"** %719 to <2 x i64>*
  store <2 x i64> %717, <2 x i64>* %720, align 8, !alias.scope !48, !noalias !45
  %721 = or i64 %698, 8
  %722 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %721
  %723 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %721
  %724 = bitcast %"class.v8::internal::compiler::Node"** %723 to <2 x i64>*
  %725 = load <2 x i64>, <2 x i64>* %724, align 8, !alias.scope !45
  %726 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %723, i64 2
  %727 = bitcast %"class.v8::internal::compiler::Node"** %726 to <2 x i64>*
  %728 = load <2 x i64>, <2 x i64>* %727, align 8, !alias.scope !45
  %729 = bitcast %"class.v8::internal::compiler::Node"** %722 to <2 x i64>*
  store <2 x i64> %725, <2 x i64>* %729, align 8, !alias.scope !48, !noalias !45
  %730 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %722, i64 2
  %731 = bitcast %"class.v8::internal::compiler::Node"** %730 to <2 x i64>*
  store <2 x i64> %728, <2 x i64>* %731, align 8, !alias.scope !48, !noalias !45
  %732 = or i64 %698, 12
  %733 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %732
  %734 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %732
  %735 = bitcast %"class.v8::internal::compiler::Node"** %734 to <2 x i64>*
  %736 = load <2 x i64>, <2 x i64>* %735, align 8, !alias.scope !45
  %737 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %734, i64 2
  %738 = bitcast %"class.v8::internal::compiler::Node"** %737 to <2 x i64>*
  %739 = load <2 x i64>, <2 x i64>* %738, align 8, !alias.scope !45
  %740 = bitcast %"class.v8::internal::compiler::Node"** %733 to <2 x i64>*
  store <2 x i64> %736, <2 x i64>* %740, align 8, !alias.scope !48, !noalias !45
  %741 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %733, i64 2
  %742 = bitcast %"class.v8::internal::compiler::Node"** %741 to <2 x i64>*
  store <2 x i64> %739, <2 x i64>* %742, align 8, !alias.scope !48, !noalias !45
  %743 = add i64 %698, 16
  %744 = add i64 %699, -4
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %697, !llvm.loop !50

746:                                              ; preds = %697, %685
  %747 = phi i64 [ 0, %685 ], [ %743, %697 ]
  %748 = icmp eq i64 %693, 0
  br i1 %748, label %765, label %749

749:                                              ; preds = %746, %749
  %750 = phi i64 [ %762, %749 ], [ %747, %746 ]
  %751 = phi i64 [ %763, %749 ], [ %693, %746 ]
  %752 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 %750
  %753 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %750
  %754 = bitcast %"class.v8::internal::compiler::Node"** %753 to <2 x i64>*
  %755 = load <2 x i64>, <2 x i64>* %754, align 8, !alias.scope !45
  %756 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %753, i64 2
  %757 = bitcast %"class.v8::internal::compiler::Node"** %756 to <2 x i64>*
  %758 = load <2 x i64>, <2 x i64>* %757, align 8, !alias.scope !45
  %759 = bitcast %"class.v8::internal::compiler::Node"** %752 to <2 x i64>*
  store <2 x i64> %755, <2 x i64>* %759, align 8, !alias.scope !48, !noalias !45
  %760 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %752, i64 2
  %761 = bitcast %"class.v8::internal::compiler::Node"** %760 to <2 x i64>*
  store <2 x i64> %758, <2 x i64>* %761, align 8, !alias.scope !48, !noalias !45
  %762 = add i64 %750, 4
  %763 = add i64 %751, -1
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %765, label %749, !llvm.loop !51

765:                                              ; preds = %749, %746
  %766 = icmp eq i64 %669, %686
  br i1 %766, label %842, label %767

767:                                              ; preds = %765, %671, %664
  %768 = phi %"class.v8::internal::compiler::Node"** [ %409, %671 ], [ %409, %664 ], [ %687, %765 ]
  %769 = phi %"class.v8::internal::compiler::Node"** [ %409, %671 ], [ %409, %664 ], [ %688, %765 ]
  %770 = phi %"class.v8::internal::compiler::Node"** [ %1, %671 ], [ %1, %664 ], [ %689, %765 ]
  %771 = ptrtoint %"class.v8::internal::compiler::Node"** %770 to i64
  %772 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -1
  %773 = ptrtoint %"class.v8::internal::compiler::Node"** %772 to i64
  %774 = sub i64 %773, %771
  %775 = lshr i64 %774, 3
  %776 = add nuw nsw i64 %775, 1
  %777 = and i64 %776, 7
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %791, label %779

779:                                              ; preds = %767, %779
  %780 = phi %"class.v8::internal::compiler::Node"** [ %788, %779 ], [ %768, %767 ]
  %781 = phi %"class.v8::internal::compiler::Node"** [ %788, %779 ], [ %769, %767 ]
  %782 = phi %"class.v8::internal::compiler::Node"** [ %787, %779 ], [ %770, %767 ]
  %783 = phi i64 [ %789, %779 ], [ %777, %767 ]
  %784 = bitcast %"class.v8::internal::compiler::Node"** %781 to i64*
  %785 = bitcast %"class.v8::internal::compiler::Node"** %782 to i64*
  %786 = load i64, i64* %785, align 8
  store i64 %786, i64* %784, align 8
  %787 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %782, i64 1
  %788 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %780, i64 1
  %789 = add i64 %783, -1
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %791, label %779, !llvm.loop !52

791:                                              ; preds = %779, %767
  %792 = phi %"class.v8::internal::compiler::Node"** [ undef, %767 ], [ %788, %779 ]
  %793 = phi %"class.v8::internal::compiler::Node"** [ %768, %767 ], [ %788, %779 ]
  %794 = phi %"class.v8::internal::compiler::Node"** [ %769, %767 ], [ %788, %779 ]
  %795 = phi %"class.v8::internal::compiler::Node"** [ %770, %767 ], [ %787, %779 ]
  %796 = icmp ult i64 %774, 56
  br i1 %796, label %842, label %797

797:                                              ; preds = %791, %797
  %798 = phi %"class.v8::internal::compiler::Node"** [ %840, %797 ], [ %793, %791 ]
  %799 = phi %"class.v8::internal::compiler::Node"** [ %840, %797 ], [ %794, %791 ]
  %800 = phi %"class.v8::internal::compiler::Node"** [ %839, %797 ], [ %795, %791 ]
  %801 = bitcast %"class.v8::internal::compiler::Node"** %799 to i64*
  %802 = bitcast %"class.v8::internal::compiler::Node"** %800 to i64*
  %803 = load i64, i64* %802, align 8
  store i64 %803, i64* %801, align 8
  %804 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 1
  %805 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 1
  %806 = bitcast %"class.v8::internal::compiler::Node"** %805 to i64*
  %807 = bitcast %"class.v8::internal::compiler::Node"** %804 to i64*
  %808 = load i64, i64* %807, align 8
  store i64 %808, i64* %806, align 8
  %809 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 2
  %810 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 2
  %811 = bitcast %"class.v8::internal::compiler::Node"** %810 to i64*
  %812 = bitcast %"class.v8::internal::compiler::Node"** %809 to i64*
  %813 = load i64, i64* %812, align 8
  store i64 %813, i64* %811, align 8
  %814 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 3
  %815 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 3
  %816 = bitcast %"class.v8::internal::compiler::Node"** %815 to i64*
  %817 = bitcast %"class.v8::internal::compiler::Node"** %814 to i64*
  %818 = load i64, i64* %817, align 8
  store i64 %818, i64* %816, align 8
  %819 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 4
  %820 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 4
  %821 = bitcast %"class.v8::internal::compiler::Node"** %820 to i64*
  %822 = bitcast %"class.v8::internal::compiler::Node"** %819 to i64*
  %823 = load i64, i64* %822, align 8
  store i64 %823, i64* %821, align 8
  %824 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 5
  %825 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 5
  %826 = bitcast %"class.v8::internal::compiler::Node"** %825 to i64*
  %827 = bitcast %"class.v8::internal::compiler::Node"** %824 to i64*
  %828 = load i64, i64* %827, align 8
  store i64 %828, i64* %826, align 8
  %829 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 6
  %830 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 6
  %831 = bitcast %"class.v8::internal::compiler::Node"** %830 to i64*
  %832 = bitcast %"class.v8::internal::compiler::Node"** %829 to i64*
  %833 = load i64, i64* %832, align 8
  store i64 %833, i64* %831, align 8
  %834 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 7
  %835 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 7
  %836 = bitcast %"class.v8::internal::compiler::Node"** %835 to i64*
  %837 = bitcast %"class.v8::internal::compiler::Node"** %834 to i64*
  %838 = load i64, i64* %837, align 8
  store i64 %838, i64* %836, align 8
  %839 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %800, i64 8
  %840 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %798, i64 8
  %841 = icmp eq %"class.v8::internal::compiler::Node"** %839, %660
  br i1 %841, label %842, label %797, !llvm.loop !53

842:                                              ; preds = %791, %797, %765, %662
  %843 = phi %"class.v8::internal::compiler::Node"** [ %409, %662 ], [ %687, %765 ], [ %792, %791 ], [ %840, %797 ]
  %844 = phi i64 [ %663, %662 ], [ %658, %765 ], [ %658, %797 ], [ %658, %791 ]
  %845 = ptrtoint %"class.v8::internal::compiler::Node"** %843 to i64
  store i64 %844, i64* %360, align 8
  store i64 %845, i64* %23, align 8
  store i64 %408, i64* %15, align 8
  ret %"class.v8::internal::compiler::Node"** %405

846:                                              ; preds = %208, %353, %357, %4
  ret %"class.v8::internal::compiler::Node"** %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10NodeCopier6InsertEPNS1_4NodeES4_(%"class.v8::internal::compiler::NodeCopier"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %5 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::ZoneVector.25"** %6 to %"class.std::__1::vector.26"**
  %8 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %8, i64 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.26"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  %20 = add i32 %19, %16
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  %22 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %7, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %22, i64 0, i32 0, i32 1
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::Node"** %24, %26
  %28 = ptrtoint %"class.v8::internal::compiler::Node"** %26 to i64
  br i1 %27, label %34, label %29

29:                                               ; preds = %3
  %30 = bitcast %"class.v8::internal::compiler::Node"** %24 to i64*
  store i64 %4, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 1
  %32 = ptrtoint %"class.v8::internal::compiler::Node"** %31 to i64
  %33 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i64*
  store i64 %32, i64* %33, align 8
  br label %259

34:                                               ; preds = %3
  %35 = ptrtoint %"class.v8::internal::compiler::Node"** %24 to i64
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i64*
  %37 = bitcast %"class.std::__1::vector.26"* %22 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %35, %38
  %40 = ashr exact i64 %39, 3
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 268435455
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  %44 = bitcast %"class.std::__1::vector.26"* %22 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #10
  unreachable

45:                                               ; preds = %34
  %46 = bitcast %"class.v8::internal::compiler::Node"*** %25 to i64*
  %47 = sub i64 %28, %38
  %48 = ashr exact i64 %47, 3
  %49 = icmp ult i64 %48, 134217727
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = ashr exact i64 %47, 2
  %52 = icmp ult i64 %51, %41
  %53 = select i1 %52, i64 %41, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %73, label %55

55:                                               ; preds = %50, %45
  %56 = phi i64 [ %53, %50 ], [ 268435455, %45 ]
  %57 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %22, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = shl i64 %56, 3
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %63, %61
  %65 = icmp ugt i64 %59, %64
  br i1 %65, label %66, label %68, !prof !2

66:                                               ; preds = %55
  %67 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 %59) #9
  br label %70

68:                                               ; preds = %55
  %69 = add i64 %61, %59
  store i64 %69, i64* %60, align 8
  br label %70

70:                                               ; preds = %68, %66
  %71 = phi i64 [ %67, %66 ], [ %61, %68 ]
  %72 = inttoptr i64 %71 to %"class.v8::internal::compiler::Node"**
  br label %73

73:                                               ; preds = %70, %50
  %74 = phi i64 [ %56, %70 ], [ 0, %50 ]
  %75 = phi %"class.v8::internal::compiler::Node"** [ %72, %70 ], [ null, %50 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 %40
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 %74
  %78 = ptrtoint %"class.v8::internal::compiler::Node"** %77 to i64
  %79 = bitcast %"class.v8::internal::compiler::Node"** %76 to i64*
  store i64 %4, i64* %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 1
  %81 = ptrtoint %"class.v8::internal::compiler::Node"** %80 to i64
  %82 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %22, i64 0, i32 0, i32 0
  %83 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, align 8
  %84 = ptrtoint %"class.v8::internal::compiler::Node"** %83 to i64
  %85 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %86 = icmp eq %"class.v8::internal::compiler::Node"** %85, %83
  br i1 %86, label %256, label %87

87:                                               ; preds = %73
  %88 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  %89 = ptrtoint %"class.v8::internal::compiler::Node"** %88 to i64
  %90 = sub i64 %89, %84
  %91 = lshr i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = icmp ult i64 %92, 4
  br i1 %93, label %186, label %94

94:                                               ; preds = %87
  %95 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  %96 = ptrtoint %"class.v8::internal::compiler::Node"** %95 to i64
  %97 = sub i64 %96, %84
  %98 = lshr i64 %97, 3
  %99 = xor i64 %98, -1
  %100 = add nsw i64 %40, %99
  %101 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 %100
  %102 = xor i64 %98, -1
  %103 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 %102
  %104 = icmp ult %"class.v8::internal::compiler::Node"** %101, %85
  %105 = icmp ult %"class.v8::internal::compiler::Node"** %103, %76
  %106 = and i1 %104, %105
  br i1 %106, label %186, label %107

107:                                              ; preds = %94
  %108 = and i64 %92, 4611686018427387900
  %109 = sub nsw i64 0, %108
  %110 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 %109
  %111 = sub nsw i64 0, %108
  %112 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 %111
  %113 = add nsw i64 %108, -4
  %114 = lshr exact i64 %113, 2
  %115 = add nuw nsw i64 %114, 1
  %116 = and i64 %115, 1
  %117 = icmp eq i64 %113, 0
  br i1 %117, label %162, label %118

118:                                              ; preds = %107
  %119 = sub nuw nsw i64 %115, %116
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 -1
  %121 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  %122 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 -1
  %123 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  br label %124

124:                                              ; preds = %124, %118
  %125 = phi i64 [ 0, %118 ], [ %159, %124 ]
  %126 = phi i64 [ %119, %118 ], [ %160, %124 ]
  %127 = sub i64 0, %125
  %128 = sub i64 0, %125
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, i64 %127
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %121, i64 %128
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %130, i64 -1
  %132 = bitcast %"class.v8::internal::compiler::Node"** %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !54
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %130, i64 -2
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %134, i64 -1
  %136 = bitcast %"class.v8::internal::compiler::Node"** %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !54
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, i64 -1
  %139 = bitcast %"class.v8::internal::compiler::Node"** %138 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %139, align 8, !alias.scope !57, !noalias !54
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, i64 -2
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %140, i64 -1
  %142 = bitcast %"class.v8::internal::compiler::Node"** %141 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %142, align 8, !alias.scope !57, !noalias !54
  %143 = sub nuw nsw i64 -4, %125
  %144 = sub nuw nsw i64 -4, %125
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 %143
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %123, i64 %144
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, i64 -1
  %148 = bitcast %"class.v8::internal::compiler::Node"** %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !54
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, i64 -2
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 -1
  %152 = bitcast %"class.v8::internal::compiler::Node"** %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !54
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::Node"** %154 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %155, align 8, !alias.scope !57, !noalias !54
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 -2
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, i64 -1
  %158 = bitcast %"class.v8::internal::compiler::Node"** %157 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %158, align 8, !alias.scope !57, !noalias !54
  %159 = add i64 %125, 8
  %160 = add i64 %126, -2
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %124, !llvm.loop !59

162:                                              ; preds = %124, %107
  %163 = phi i64 [ 0, %107 ], [ %159, %124 ]
  %164 = icmp eq i64 %116, 0
  br i1 %164, label %184, label %165

165:                                              ; preds = %162
  %166 = sub i64 0, %163
  %167 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 -1
  %168 = sub i64 0, %163
  %169 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %85, i64 -1
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 %166
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 %168
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %171, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::Node"** %172 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8, !alias.scope !54
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %171, i64 -2
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %175, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::Node"** %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !54
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, i64 -1
  %180 = bitcast %"class.v8::internal::compiler::Node"** %179 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %180, align 8, !alias.scope !57, !noalias !54
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, i64 -2
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 -1
  %183 = bitcast %"class.v8::internal::compiler::Node"** %182 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %183, align 8, !alias.scope !57, !noalias !54
  br label %184

184:                                              ; preds = %162, %165
  %185 = icmp eq i64 %92, %108
  br i1 %185, label %256, label %186

186:                                              ; preds = %184, %94, %87
  %187 = phi %"class.v8::internal::compiler::Node"** [ %76, %94 ], [ %76, %87 ], [ %110, %184 ]
  %188 = phi %"class.v8::internal::compiler::Node"** [ %85, %94 ], [ %85, %87 ], [ %112, %184 ]
  %189 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %188, i64 -1
  %190 = ptrtoint %"class.v8::internal::compiler::Node"** %189 to i64
  %191 = sub i64 %190, %84
  %192 = lshr i64 %191, 3
  %193 = add nuw nsw i64 %192, 1
  %194 = and i64 %193, 7
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %207, label %196

196:                                              ; preds = %186, %196
  %197 = phi %"class.v8::internal::compiler::Node"** [ %200, %196 ], [ %187, %186 ]
  %198 = phi %"class.v8::internal::compiler::Node"** [ %201, %196 ], [ %188, %186 ]
  %199 = phi i64 [ %205, %196 ], [ %194, %186 ]
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -1
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, i64 -1
  %202 = bitcast %"class.v8::internal::compiler::Node"** %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast %"class.v8::internal::compiler::Node"** %200 to i64*
  store i64 %203, i64* %204, align 8
  %205 = add i64 %199, -1
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %196, !llvm.loop !60

207:                                              ; preds = %196, %186
  %208 = phi %"class.v8::internal::compiler::Node"** [ undef, %186 ], [ %200, %196 ]
  %209 = phi %"class.v8::internal::compiler::Node"** [ %187, %186 ], [ %200, %196 ]
  %210 = phi %"class.v8::internal::compiler::Node"** [ %188, %186 ], [ %201, %196 ]
  %211 = icmp ult i64 %191, 56
  br i1 %211, label %256, label %212

212:                                              ; preds = %207, %212
  %213 = phi %"class.v8::internal::compiler::Node"** [ %250, %212 ], [ %209, %207 ]
  %214 = phi %"class.v8::internal::compiler::Node"** [ %251, %212 ], [ %210, %207 ]
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -1
  %216 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -1
  %217 = bitcast %"class.v8::internal::compiler::Node"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.v8::internal::compiler::Node"** %215 to i64*
  store i64 %218, i64* %219, align 8
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -2
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -2
  %222 = bitcast %"class.v8::internal::compiler::Node"** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.v8::internal::compiler::Node"** %220 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -3
  %226 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -3
  %227 = bitcast %"class.v8::internal::compiler::Node"** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.v8::internal::compiler::Node"** %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -4
  %231 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -4
  %232 = bitcast %"class.v8::internal::compiler::Node"** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.v8::internal::compiler::Node"** %230 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -5
  %236 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -5
  %237 = bitcast %"class.v8::internal::compiler::Node"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = bitcast %"class.v8::internal::compiler::Node"** %235 to i64*
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -6
  %241 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -6
  %242 = bitcast %"class.v8::internal::compiler::Node"** %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = bitcast %"class.v8::internal::compiler::Node"** %240 to i64*
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -7
  %246 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -7
  %247 = bitcast %"class.v8::internal::compiler::Node"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.v8::internal::compiler::Node"** %245 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %213, i64 -8
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %214, i64 -8
  %252 = bitcast %"class.v8::internal::compiler::Node"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %"class.v8::internal::compiler::Node"** %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = icmp eq %"class.v8::internal::compiler::Node"** %251, %83
  br i1 %255, label %256, label %212, !llvm.loop !61

256:                                              ; preds = %207, %212, %184, %73
  %257 = phi %"class.v8::internal::compiler::Node"** [ %76, %73 ], [ %110, %184 ], [ %208, %207 ], [ %250, %212 ]
  %258 = ptrtoint %"class.v8::internal::compiler::Node"** %257 to i64
  store i64 %258, i64* %37, align 8
  store i64 %81, i64* %36, align 8
  store i64 %78, i64* %46, align 8
  br label %259

259:                                              ; preds = %29, %256
  %260 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %7, align 8
  %261 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %260, i64 0, i32 0, i32 1
  %262 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %261, align 8
  %263 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %260, i64 0, i32 0, i32 2, i32 0, i32 0
  %264 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %263, align 8
  %265 = icmp eq %"class.v8::internal::compiler::Node"** %262, %264
  %266 = ptrtoint %"class.v8::internal::compiler::Node"** %264 to i64
  br i1 %265, label %272, label %267

267:                                              ; preds = %259
  %268 = bitcast %"class.v8::internal::compiler::Node"** %262 to i64*
  store i64 %5, i64* %268, align 8
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %262, i64 1
  %270 = ptrtoint %"class.v8::internal::compiler::Node"** %269 to i64
  %271 = bitcast %"class.v8::internal::compiler::Node"*** %261 to i64*
  store i64 %270, i64* %271, align 8
  br label %497

272:                                              ; preds = %259
  %273 = ptrtoint %"class.v8::internal::compiler::Node"** %262 to i64
  %274 = bitcast %"class.v8::internal::compiler::Node"*** %261 to i64*
  %275 = bitcast %"class.std::__1::vector.26"* %260 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = sub i64 %273, %276
  %278 = ashr exact i64 %277, 3
  %279 = add nsw i64 %278, 1
  %280 = icmp ugt i64 %279, 268435455
  br i1 %280, label %281, label %283

281:                                              ; preds = %272
  %282 = bitcast %"class.std::__1::vector.26"* %260 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %282) #10
  unreachable

283:                                              ; preds = %272
  %284 = bitcast %"class.v8::internal::compiler::Node"*** %263 to i64*
  %285 = sub i64 %266, %276
  %286 = ashr exact i64 %285, 3
  %287 = icmp ult i64 %286, 134217727
  br i1 %287, label %288, label %293

288:                                              ; preds = %283
  %289 = ashr exact i64 %285, 2
  %290 = icmp ult i64 %289, %279
  %291 = select i1 %290, i64 %279, i64 %289
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %311, label %293

293:                                              ; preds = %288, %283
  %294 = phi i64 [ %291, %288 ], [ 268435455, %283 ]
  %295 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %260, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %296 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %295, align 8
  %297 = shl i64 %294, 3
  %298 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %296, i64 0, i32 2
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %296, i64 0, i32 3
  %301 = load i64, i64* %300, align 8
  %302 = sub i64 %301, %299
  %303 = icmp ugt i64 %297, %302
  br i1 %303, label %304, label %306, !prof !2

304:                                              ; preds = %293
  %305 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %296, i64 %297) #9
  br label %308

306:                                              ; preds = %293
  %307 = add i64 %299, %297
  store i64 %307, i64* %298, align 8
  br label %308

308:                                              ; preds = %306, %304
  %309 = phi i64 [ %305, %304 ], [ %299, %306 ]
  %310 = inttoptr i64 %309 to %"class.v8::internal::compiler::Node"**
  br label %311

311:                                              ; preds = %308, %288
  %312 = phi i64 [ %294, %308 ], [ 0, %288 ]
  %313 = phi %"class.v8::internal::compiler::Node"** [ %310, %308 ], [ null, %288 ]
  %314 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %313, i64 %278
  %315 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %313, i64 %312
  %316 = ptrtoint %"class.v8::internal::compiler::Node"** %315 to i64
  %317 = bitcast %"class.v8::internal::compiler::Node"** %314 to i64*
  store i64 %5, i64* %317, align 8
  %318 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %314, i64 1
  %319 = ptrtoint %"class.v8::internal::compiler::Node"** %318 to i64
  %320 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %260, i64 0, i32 0, i32 0
  %321 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %320, align 8
  %322 = ptrtoint %"class.v8::internal::compiler::Node"** %321 to i64
  %323 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %261, align 8
  %324 = icmp eq %"class.v8::internal::compiler::Node"** %323, %321
  br i1 %324, label %494, label %325

325:                                              ; preds = %311
  %326 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, i64 -1
  %327 = ptrtoint %"class.v8::internal::compiler::Node"** %326 to i64
  %328 = sub i64 %327, %322
  %329 = lshr i64 %328, 3
  %330 = add nuw nsw i64 %329, 1
  %331 = icmp ult i64 %330, 4
  br i1 %331, label %424, label %332

332:                                              ; preds = %325
  %333 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, i64 -1
  %334 = ptrtoint %"class.v8::internal::compiler::Node"** %333 to i64
  %335 = sub i64 %334, %322
  %336 = lshr i64 %335, 3
  %337 = xor i64 %336, -1
  %338 = add nsw i64 %278, %337
  %339 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %313, i64 %338
  %340 = xor i64 %336, -1
  %341 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, i64 %340
  %342 = icmp ult %"class.v8::internal::compiler::Node"** %339, %323
  %343 = icmp ult %"class.v8::internal::compiler::Node"** %341, %314
  %344 = and i1 %342, %343
  br i1 %344, label %424, label %345

345:                                              ; preds = %332
  %346 = and i64 %330, 4611686018427387900
  %347 = sub nsw i64 0, %346
  %348 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %314, i64 %347
  %349 = sub nsw i64 0, %346
  %350 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, i64 %349
  %351 = add nsw i64 %346, -4
  %352 = lshr exact i64 %351, 2
  %353 = add nuw nsw i64 %352, 1
  %354 = and i64 %353, 1
  %355 = icmp eq i64 %351, 0
  br i1 %355, label %402, label %356

356:                                              ; preds = %345
  %357 = sub nuw nsw i64 %353, %354
  %358 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %314, i64 -1
  %359 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, i64 -1
  %360 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %314, i64 -1
  %361 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, i64 -1
  br label %362

362:                                              ; preds = %362, %356
  %363 = phi i64 [ 0, %356 ], [ %397, %362 ]
  %364 = phi i64 [ %357, %356 ], [ %398, %362 ]
  %365 = sub i64 0, %363
  %366 = sub i64 0, %363
  %367 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %358, i64 %365
  %368 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %359, i64 %366
  %369 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %368, i64 -1
  %370 = bitcast %"class.v8::internal::compiler::Node"** %369 to <2 x i64>*
  %371 = load <2 x i64>, <2 x i64>* %370, align 8, !alias.scope !62
  %372 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %368, i64 -2
  %373 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %372, i64 -1
  %374 = bitcast %"class.v8::internal::compiler::Node"** %373 to <2 x i64>*
  %375 = load <2 x i64>, <2 x i64>* %374, align 8, !alias.scope !62
  %376 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %367, i64 -1
  %377 = bitcast %"class.v8::internal::compiler::Node"** %376 to <2 x i64>*
  store <2 x i64> %371, <2 x i64>* %377, align 8, !alias.scope !65, !noalias !62
  %378 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %367, i64 -2
  %379 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %378, i64 -1
  %380 = bitcast %"class.v8::internal::compiler::Node"** %379 to <2 x i64>*
  store <2 x i64> %375, <2 x i64>* %380, align 8, !alias.scope !65, !noalias !62
  %381 = sub nuw nsw i64 -4, %363
  %382 = sub nuw nsw i64 -4, %363
  %383 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %360, i64 %381
  %384 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %361, i64 %382
  %385 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %384, i64 -1
  %386 = bitcast %"class.v8::internal::compiler::Node"** %385 to <2 x i64>*
  %387 = load <2 x i64>, <2 x i64>* %386, align 8, !alias.scope !62
  %388 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %384, i64 -2
  %389 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %388, i64 -1
  %390 = bitcast %"class.v8::internal::compiler::Node"** %389 to <2 x i64>*
  %391 = load <2 x i64>, <2 x i64>* %390, align 8, !alias.scope !62
  %392 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %383, i64 -1
  %393 = bitcast %"class.v8::internal::compiler::Node"** %392 to <2 x i64>*
  store <2 x i64> %387, <2 x i64>* %393, align 8, !alias.scope !65, !noalias !62
  %394 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %383, i64 -2
  %395 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %394, i64 -1
  %396 = bitcast %"class.v8::internal::compiler::Node"** %395 to <2 x i64>*
  store <2 x i64> %391, <2 x i64>* %396, align 8, !alias.scope !65, !noalias !62
  %397 = add i64 %363, 8
  %398 = add i64 %364, -2
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %400, label %362, !llvm.loop !67

400:                                              ; preds = %362
  %401 = sub nuw nsw i64 -8, %363
  br label %402

402:                                              ; preds = %400, %345
  %403 = phi i64 [ 0, %345 ], [ %401, %400 ]
  %404 = icmp eq i64 %354, 0
  br i1 %404, label %422, label %405

405:                                              ; preds = %402
  %406 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %314, i64 -1
  %407 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, i64 -1
  %408 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %406, i64 %403
  %409 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %407, i64 %403
  %410 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 -1
  %411 = bitcast %"class.v8::internal::compiler::Node"** %410 to <2 x i64>*
  %412 = load <2 x i64>, <2 x i64>* %411, align 8, !alias.scope !62
  %413 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %409, i64 -2
  %414 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %413, i64 -1
  %415 = bitcast %"class.v8::internal::compiler::Node"** %414 to <2 x i64>*
  %416 = load <2 x i64>, <2 x i64>* %415, align 8, !alias.scope !62
  %417 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %408, i64 -1
  %418 = bitcast %"class.v8::internal::compiler::Node"** %417 to <2 x i64>*
  store <2 x i64> %412, <2 x i64>* %418, align 8, !alias.scope !65, !noalias !62
  %419 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %408, i64 -2
  %420 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %419, i64 -1
  %421 = bitcast %"class.v8::internal::compiler::Node"** %420 to <2 x i64>*
  store <2 x i64> %416, <2 x i64>* %421, align 8, !alias.scope !65, !noalias !62
  br label %422

422:                                              ; preds = %402, %405
  %423 = icmp eq i64 %330, %346
  br i1 %423, label %494, label %424

424:                                              ; preds = %422, %332, %325
  %425 = phi %"class.v8::internal::compiler::Node"** [ %314, %332 ], [ %314, %325 ], [ %348, %422 ]
  %426 = phi %"class.v8::internal::compiler::Node"** [ %323, %332 ], [ %323, %325 ], [ %350, %422 ]
  %427 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %426, i64 -1
  %428 = ptrtoint %"class.v8::internal::compiler::Node"** %427 to i64
  %429 = sub i64 %428, %322
  %430 = lshr i64 %429, 3
  %431 = add nuw nsw i64 %430, 1
  %432 = and i64 %431, 7
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %445, label %434

434:                                              ; preds = %424, %434
  %435 = phi %"class.v8::internal::compiler::Node"** [ %438, %434 ], [ %425, %424 ]
  %436 = phi %"class.v8::internal::compiler::Node"** [ %439, %434 ], [ %426, %424 ]
  %437 = phi i64 [ %443, %434 ], [ %432, %424 ]
  %438 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %435, i64 -1
  %439 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, i64 -1
  %440 = bitcast %"class.v8::internal::compiler::Node"** %439 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = bitcast %"class.v8::internal::compiler::Node"** %438 to i64*
  store i64 %441, i64* %442, align 8
  %443 = add i64 %437, -1
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %445, label %434, !llvm.loop !68

445:                                              ; preds = %434, %424
  %446 = phi %"class.v8::internal::compiler::Node"** [ undef, %424 ], [ %438, %434 ]
  %447 = phi %"class.v8::internal::compiler::Node"** [ %425, %424 ], [ %438, %434 ]
  %448 = phi %"class.v8::internal::compiler::Node"** [ %426, %424 ], [ %439, %434 ]
  %449 = icmp ult i64 %429, 56
  br i1 %449, label %494, label %450

450:                                              ; preds = %445, %450
  %451 = phi %"class.v8::internal::compiler::Node"** [ %488, %450 ], [ %447, %445 ]
  %452 = phi %"class.v8::internal::compiler::Node"** [ %489, %450 ], [ %448, %445 ]
  %453 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -1
  %454 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, i64 -1
  %455 = bitcast %"class.v8::internal::compiler::Node"** %454 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = bitcast %"class.v8::internal::compiler::Node"** %453 to i64*
  store i64 %456, i64* %457, align 8
  %458 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -2
  %459 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, i64 -2
  %460 = bitcast %"class.v8::internal::compiler::Node"** %459 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = bitcast %"class.v8::internal::compiler::Node"** %458 to i64*
  store i64 %461, i64* %462, align 8
  %463 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -3
  %464 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, i64 -3
  %465 = bitcast %"class.v8::internal::compiler::Node"** %464 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = bitcast %"class.v8::internal::compiler::Node"** %463 to i64*
  store i64 %466, i64* %467, align 8
  %468 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -4
  %469 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, i64 -4
  %470 = bitcast %"class.v8::internal::compiler::Node"** %469 to i64*
  %471 = load i64, i64* %470, align 8
  %472 = bitcast %"class.v8::internal::compiler::Node"** %468 to i64*
  store i64 %471, i64* %472, align 8
  %473 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -5
  %474 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, i64 -5
  %475 = bitcast %"class.v8::internal::compiler::Node"** %474 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = bitcast %"class.v8::internal::compiler::Node"** %473 to i64*
  store i64 %476, i64* %477, align 8
  %478 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -6
  %479 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, i64 -6
  %480 = bitcast %"class.v8::internal::compiler::Node"** %479 to i64*
  %481 = load i64, i64* %480, align 8
  %482 = bitcast %"class.v8::internal::compiler::Node"** %478 to i64*
  store i64 %481, i64* %482, align 8
  %483 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -7
  %484 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, i64 -7
  %485 = bitcast %"class.v8::internal::compiler::Node"** %484 to i64*
  %486 = load i64, i64* %485, align 8
  %487 = bitcast %"class.v8::internal::compiler::Node"** %483 to i64*
  store i64 %486, i64* %487, align 8
  %488 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -8
  %489 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, i64 -8
  %490 = bitcast %"class.v8::internal::compiler::Node"** %489 to i64*
  %491 = load i64, i64* %490, align 8
  %492 = bitcast %"class.v8::internal::compiler::Node"** %488 to i64*
  store i64 %491, i64* %492, align 8
  %493 = icmp eq %"class.v8::internal::compiler::Node"** %489, %321
  br i1 %493, label %494, label %450, !llvm.loop !69

494:                                              ; preds = %445, %450, %422, %311
  %495 = phi %"class.v8::internal::compiler::Node"** [ %314, %311 ], [ %348, %422 ], [ %446, %445 ], [ %488, %450 ]
  %496 = ptrtoint %"class.v8::internal::compiler::Node"** %495 to i64
  store i64 %496, i64* %275, align 8
  store i64 %319, i64* %274, align 8
  store i64 %316, i64* %284, align 8
  br label %497

497:                                              ; preds = %267, %494
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"*, %"class.v8::internal::compiler::Graph"*, i32) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14LoopFinderImpl17PropagateBackwardEv(%"class.v8::internal::compiler::LoopFinderImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %6 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %6, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %6, i64 0, i32 3, i32 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.19"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 2
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %16, align 8
  %18 = mul nsw i32 %4, %15
  %19 = sext i32 %18 to i64
  %20 = shl nsw i64 %19, 2
  %21 = add nsw i64 %20, 7
  %22 = and i64 %21, -8
  %23 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %17, i64 0, i32 3
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %24
  %28 = icmp ugt i64 %22, %27
  br i1 %28, label %29, label %31, !prof !2

29:                                               ; preds = %1
  %30 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %17, i64 %22) #9
  br label %33

31:                                               ; preds = %1
  %32 = add i64 %22, %24
  store i64 %32, i64* %23, align 8
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i64 [ %30, %29 ], [ %24, %31 ]
  %35 = inttoptr i64 %34 to i32*
  %36 = inttoptr i64 %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 %20, i1 false) #9
  %37 = load i32, i32* %2, align 4
  %38 = icmp sgt i32 %37, 0
  %39 = icmp sgt i32 %15, 0
  %40 = and i1 %39, %38
  br i1 %40, label %41, label %68

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 10
  %43 = sext i32 %4 to i64
  %44 = and i64 %14, 4294967295
  br label %45

45:                                               ; preds = %55, %41
  %46 = phi i32 [ %37, %41 ], [ %56, %55 ]
  %47 = phi i64 [ 0, %41 ], [ %57, %55 ]
  %48 = mul nsw i64 %47, %43
  %49 = getelementptr inbounds i32, i32* %35, i64 %48
  %50 = load i32*, i32** %42, align 8
  %51 = sext i32 %46 to i64
  %52 = mul nsw i64 %47, %51
  %53 = getelementptr inbounds i32, i32* %50, i64 %52
  %54 = icmp sgt i32 %46, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %59, %45
  %56 = phi i32 [ %46, %45 ], [ %65, %59 ]
  %57 = add nuw nsw i64 %47, 1
  %58 = icmp eq i64 %57, %44
  br i1 %58, label %68, label %45

59:                                               ; preds = %45, %59
  %60 = phi i64 [ %64, %59 ], [ 0, %45 ]
  %61 = getelementptr inbounds i32, i32* %53, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds i32, i32* %49, i64 %60
  store i32 %62, i32* %63, align 4
  %64 = add nuw nsw i64 %60, 1
  %65 = load i32, i32* %2, align 4
  %66 = sext i32 %65 to i64
  %67 = icmp slt i64 %64, %66
  br i1 %67, label %59, label %55

68:                                               ; preds = %55, %33
  store i32 %4, i32* %2, align 4
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 10
  store i32* %35, i32** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 1
  %71 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %71, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 16777215
  %75 = mul i32 %74, %4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %35, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = or i32 %78, 1
  store i32 %79, i32* %77, align 4
  %80 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, align 8
  %81 = ptrtoint %"class.v8::internal::compiler::Node"* %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %80, i64 0, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = tail call i32 @llvm.usub.sat.i32(i32 %83, i32 %85) #9
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %133

88:                                               ; preds = %68
  %89 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %90 = bitcast %"class.v8::internal::compiler::Node"**** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.v8::internal::compiler::Node"**** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %91, %94
  %96 = icmp eq i64 %95, 0
  %97 = shl i64 %95, 6
  %98 = add i64 %97, -1
  %99 = select i1 %96, i64 0, i64 %98
  %100 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, %101
  %105 = icmp eq i64 %99, %104
  %106 = inttoptr i64 %94 to %"class.v8::internal::compiler::Node"***
  %107 = inttoptr i64 %91 to %"class.v8::internal::compiler::Node"***
  br i1 %105, label %108, label %115

108:                                              ; preds = %88
  %109 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %109) #9
  %110 = load i64, i64* %102, align 8
  %111 = load i64, i64* %100, align 8
  %112 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %92, align 8
  %113 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %89, align 8
  %114 = add i64 %111, %110
  br label %115

115:                                              ; preds = %108, %88
  %116 = phi i64 [ %114, %108 ], [ %104, %88 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %113, %108 ], [ %107, %88 ]
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %112, %108 ], [ %106, %88 ]
  %119 = icmp eq %"class.v8::internal::compiler::Node"*** %117, %118
  br i1 %119, label %127, label %120

120:                                              ; preds = %115
  %121 = lshr i64 %116, 9
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 %121
  %123 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, align 8
  %124 = and i64 %116, 511
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %123, i64 %124
  %126 = bitcast %"class.v8::internal::compiler::Node"** %125 to i64*
  br label %127

127:                                              ; preds = %120, %115
  %128 = phi i64* [ %126, %120 ], [ null, %115 ]
  store i64 %81, i64* %128, align 8
  %129 = load i64, i64* %102, align 8
  %130 = add i64 %129, 1
  store i64 %130, i64* %102, align 8
  %131 = load i32, i32* %84, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %82, align 8
  br label %133

133:                                              ; preds = %68, %127
  %134 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0
  %135 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %560, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 12
  %140 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %141 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %144 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %143 to i64*
  %145 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %143 to %"class.v8::internal::compiler::Node"***
  %146 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %147 = bitcast %"class.v8::internal::compiler::Node"**** %146 to i64*
  %148 = bitcast %"class.v8::internal::compiler::Node"**** %140 to i64*
  %149 = bitcast i64* %141 to <2 x i64>*
  %150 = bitcast i64* %141 to <2 x i64>*
  br label %154

151:                                              ; preds = %338
  %152 = load i64, i64* %135, align 8
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %560, label %154

154:                                              ; preds = %138, %151
  %155 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %139, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %155) #9
  %156 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %140, align 8
  %157 = load i64, i64* %141, align 8
  %158 = lshr i64 %157, 9
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %156, i64 %158
  %160 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %159, align 8
  %161 = and i64 %157, 511
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %160, i64 %161
  %163 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %163, i64 0, i32 3
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 16777215
  %167 = zext i32 %166 to i64
  %168 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %142, align 8
  %169 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %168, i64 %167, i32 0
  %170 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, align 8
  %171 = icmp eq %"class.v8::internal::compiler::Node"* %170, null
  br i1 %171, label %172, label %173

172:                                              ; preds = %154
  store %"class.v8::internal::compiler::Node"* %163, %"class.v8::internal::compiler::Node"** %169, align 8
  br label %173

173:                                              ; preds = %154, %172
  %174 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %168, i64 %167, i32 2
  store i8 1, i8* %174, align 8
  %175 = load <2 x i64>, <2 x i64>* %149, align 8
  %176 = add <2 x i64> %175, <i64 1, i64 -1>
  store <2 x i64> %176, <2 x i64>* %150, align 8
  %177 = extractelement <2 x i64> %176, i32 0
  %178 = icmp ult i64 %177, 1024
  br i1 %178, label %200, label %179

179:                                              ; preds = %173
  %180 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %140, align 8
  %181 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %180, align 8
  %182 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %143, align 8
  %183 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %182, null
  br i1 %183, label %188, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %182, i64 0, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = icmp ugt i64 %186, 512
  br i1 %187, label %195, label %188

188:                                              ; preds = %184, %179
  %189 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 1
  %190 = bitcast %"class.v8::internal::compiler::Node"** %189 to i64*
  store i64 512, i64* %190, align 8
  %191 = load i64, i64* %144, align 8
  %192 = bitcast %"class.v8::internal::compiler::Node"** %181 to i64*
  store i64 %191, i64* %192, align 8
  store %"class.v8::internal::compiler::Node"** %181, %"class.v8::internal::compiler::Node"*** %145, align 8
  %193 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %140, align 8
  %194 = load i64, i64* %141, align 8
  br label %195

195:                                              ; preds = %188, %184
  %196 = phi i64 [ %177, %184 ], [ %194, %188 ]
  %197 = phi %"class.v8::internal::compiler::Node"*** [ %180, %184 ], [ %193, %188 ]
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %197, i64 1
  store %"class.v8::internal::compiler::Node"*** %198, %"class.v8::internal::compiler::Node"**** %140, align 8
  %199 = add i64 %196, -512
  store i64 %199, i64* %141, align 8
  br label %200

200:                                              ; preds = %173, %195
  %201 = load i32, i32* %84, align 4
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %163, i64 0, i32 2
  store i32 %201, i32* %202, align 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %163, i64 0, i32 0
  %204 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %204, i64 0, i32 2
  %206 = load i16, i16* %205, align 8
  %207 = icmp eq i16 %206, 1
  br i1 %207, label %208, label %210

208:                                              ; preds = %200
  %209 = tail call i32 @_ZN2v88internal8compiler14LoopFinderImpl14CreateLoopInfoEPNS1_4NodeE(%"class.v8::internal::compiler::LoopFinderImpl"* %0, %"class.v8::internal::compiler::Node"* %163)
  br label %315

210:                                              ; preds = %200
  %211 = zext i16 %206 to i32
  %212 = add nsw i32 %211, -35
  %213 = icmp ult i32 %212, 2
  br i1 %213, label %214, label %248

214:                                              ; preds = %210
  %215 = load i32, i32* %164, align 4
  %216 = and i32 %215, 251658240
  %217 = icmp eq i32 %216, 251658240
  br i1 %217, label %223, label %218

218:                                              ; preds = %214
  %219 = lshr i32 %215, 24
  %220 = and i32 %219, 15
  %221 = ptrtoint %"class.v8::internal::compiler::Node"* %163 to i64
  %222 = add i64 %221, 32
  br label %233

223:                                              ; preds = %214
  %224 = ptrtoint %"class.v8::internal::compiler::Node"* %163 to i64
  %225 = add i64 %224, 32
  %226 = inttoptr i64 %225 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %227 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %226, align 8
  %228 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %227, i64 0, i32 1
  %229 = load i32, i32* %228, align 8
  %230 = inttoptr i64 %225 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = add i64 %231, 16
  br label %233

233:                                              ; preds = %218, %223
  %234 = phi i64 [ %222, %218 ], [ %232, %223 ]
  %235 = phi i32 [ %220, %218 ], [ %229, %223 ]
  %236 = add nsw i32 %235, -1
  %237 = inttoptr i64 %234 to %"class.v8::internal::compiler::Node"**
  %238 = sext i32 %236 to i64
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %237, i64 %238
  %240 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %239, align 8
  %241 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %240, i64 0, i32 0
  %242 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %241, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %242, i64 0, i32 2
  %244 = load i16, i16* %243, align 8
  %245 = icmp eq i16 %244, 1
  br i1 %245, label %246, label %315

246:                                              ; preds = %233
  %247 = tail call i32 @_ZN2v88internal8compiler14LoopFinderImpl14CreateLoopInfoEPNS1_4NodeE(%"class.v8::internal::compiler::LoopFinderImpl"* %0, %"class.v8::internal::compiler::Node"* %240)
  br label %315

248:                                              ; preds = %210
  switch i16 %206, label %315 [
    i16 52, label %249
    i16 53, label %265
    i16 54, label %265
  ]

249:                                              ; preds = %248
  %250 = load i32, i32* %164, align 4
  %251 = and i32 %250, 251658240
  %252 = icmp eq i32 %251, 251658240
  %253 = ptrtoint %"class.v8::internal::compiler::Node"* %163 to i64
  %254 = add i64 %253, 32
  br i1 %252, label %255, label %259

255:                                              ; preds = %249
  %256 = inttoptr i64 %254 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = add i64 %257, 16
  br label %259

259:                                              ; preds = %249, %255
  %260 = phi i64 [ %258, %255 ], [ %254, %249 ]
  %261 = inttoptr i64 %260 to %"class.v8::internal::compiler::Node"**
  %262 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %261, i64 1
  %263 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %262, align 8
  %264 = tail call i32 @_ZN2v88internal8compiler14LoopFinderImpl14CreateLoopInfoEPNS1_4NodeE(%"class.v8::internal::compiler::LoopFinderImpl"* %0, %"class.v8::internal::compiler::Node"* %263)
  br label %315

265:                                              ; preds = %248, %248
  %266 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %204, i64 0, i32 7
  %267 = load i32, i32* %266, align 4
  %268 = icmp sgt i32 %267, 0
  br i1 %268, label %270, label %269, !prof !8

269:                                              ; preds = %265
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0)) #10
  unreachable

270:                                              ; preds = %265
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %204, i64 0, i32 5
  %272 = load i32, i32* %271, align 4
  %273 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %204) #9
  %274 = zext i1 %273 to i32
  %275 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %203, align 8
  %276 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %275) #9
  %277 = zext i1 %276 to i32
  %278 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %203, align 8
  %279 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %278, i64 0, i32 6
  %280 = load i32, i32* %279, align 8
  %281 = add i32 %272, %274
  %282 = add i32 %281, %277
  %283 = add i32 %282, %280
  %284 = load i32, i32* %164, align 4
  %285 = and i32 %284, 251658240
  %286 = icmp eq i32 %285, 251658240
  %287 = ptrtoint %"class.v8::internal::compiler::Node"* %163 to i64
  %288 = add i64 %287, 32
  br i1 %286, label %289, label %293

289:                                              ; preds = %270
  %290 = inttoptr i64 %288 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = add i64 %291, 16
  br label %293

293:                                              ; preds = %270, %289
  %294 = phi i64 [ %292, %289 ], [ %288, %270 ]
  %295 = inttoptr i64 %294 to %"class.v8::internal::compiler::Node"**
  %296 = sext i32 %283 to i64
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %295, i64 %296
  %298 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %297, align 8
  %299 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %298, i64 0, i32 3
  %300 = load i32, i32* %299, align 4
  %301 = and i32 %300, 251658240
  %302 = icmp eq i32 %301, 251658240
  %303 = ptrtoint %"class.v8::internal::compiler::Node"* %298 to i64
  %304 = add i64 %303, 32
  br i1 %302, label %305, label %309

305:                                              ; preds = %293
  %306 = inttoptr i64 %304 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = add i64 %307, 16
  br label %309

309:                                              ; preds = %293, %305
  %310 = phi i64 [ %308, %305 ], [ %304, %293 ]
  %311 = inttoptr i64 %310 to %"class.v8::internal::compiler::Node"**
  %312 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %311, i64 1
  %313 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %312, align 8
  %314 = tail call i32 @_ZN2v88internal8compiler14LoopFinderImpl14CreateLoopInfoEPNS1_4NodeE(%"class.v8::internal::compiler::LoopFinderImpl"* %0, %"class.v8::internal::compiler::Node"* %313)
  br label %315

315:                                              ; preds = %248, %233, %246, %309, %259, %208
  %316 = phi i32 [ %209, %208 ], [ -1, %259 ], [ -1, %309 ], [ %247, %246 ], [ -1, %233 ], [ -1, %248 ]
  %317 = ptrtoint %"class.v8::internal::compiler::Node"* %163 to i64
  %318 = add i64 %317, 32
  %319 = inttoptr i64 %318 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %320 = inttoptr i64 %318 to i64*
  %321 = ashr i32 %316, 5
  %322 = and i32 %316, 31
  %323 = shl i32 1, %322
  %324 = xor i32 %323, -1
  %325 = zext i32 %321 to i64
  br label %326

326:                                              ; preds = %558, %315
  %327 = phi i64 [ %559, %558 ], [ 0, %315 ]
  %328 = load i32, i32* %164, align 4
  %329 = and i32 %328, 251658240
  %330 = icmp eq i32 %329, 251658240
  br i1 %330, label %334, label %331

331:                                              ; preds = %326
  %332 = lshr i32 %328, 24
  %333 = and i32 %332, 15
  br label %338

334:                                              ; preds = %326
  %335 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %319, align 8
  %336 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %335, i64 0, i32 1
  %337 = load i32, i32* %336, align 8
  br label %338

338:                                              ; preds = %331, %334
  %339 = phi i32 [ %333, %331 ], [ %337, %334 ]
  %340 = sext i32 %339 to i64
  %341 = icmp slt i64 %327, %340
  br i1 %341, label %342, label %151

342:                                              ; preds = %338
  br i1 %330, label %343, label %346

343:                                              ; preds = %342
  %344 = load i64, i64* %320, align 8
  %345 = add i64 %344, 16
  br label %346

346:                                              ; preds = %342, %343
  %347 = phi i64 [ %345, %343 ], [ %318, %342 ]
  %348 = inttoptr i64 %347 to %"class.v8::internal::compiler::Node"**
  %349 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %348, i64 %327
  %350 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %349, align 8
  %351 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %5, align 8
  %352 = and i32 %328, 16777215
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %351, i64 0, i32 3, i32 0, i32 0, i32 0
  %355 = load i32*, i32** %354, align 8
  %356 = getelementptr inbounds i32, i32* %355, i64 %353
  %357 = load i32, i32* %356, align 4
  %358 = icmp slt i32 %357, 1
  br i1 %358, label %459, label %359

359:                                              ; preds = %346
  %360 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %203, align 8
  %361 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %360, i64 0, i32 2
  %362 = load i16, i16* %361, align 8
  %363 = zext i16 %362 to i32
  %364 = add nsw i32 %363, -35
  %365 = icmp ult i32 %364, 2
  br i1 %365, label %370, label %366

366:                                              ; preds = %359
  %367 = icmp eq i16 %362, 1
  %368 = icmp ne i64 %327, 0
  %369 = and i1 %368, %367
  br i1 %369, label %388, label %459

370:                                              ; preds = %359
  %371 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %360, i64 0, i32 5
  %372 = load i32, i32* %371, align 4
  %373 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %360) #9
  %374 = zext i1 %373 to i32
  %375 = add nsw i32 %372, %374
  %376 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %203, align 8
  %377 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %376) #9
  %378 = zext i1 %377 to i32
  %379 = add nsw i32 %375, %378
  %380 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %203, align 8
  %381 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %380, i64 0, i32 6
  %382 = load i32, i32* %381, align 8
  %383 = add nsw i32 %379, %382
  %384 = zext i32 %383 to i64
  %385 = icmp ne i64 %327, %384
  %386 = icmp ne i64 %327, 0
  %387 = and i1 %386, %385
  br i1 %387, label %388, label %459

388:                                              ; preds = %366, %370
  %389 = load i32*, i32** %69, align 8
  %390 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %350, i64 0, i32 3
  %391 = load i32, i32* %390, align 4
  %392 = and i32 %391, 16777215
  %393 = load i32, i32* %2, align 4
  %394 = mul i32 %392, %393
  %395 = add i32 %394, %321
  %396 = zext i32 %395 to i64
  %397 = getelementptr inbounds i32, i32* %389, i64 %396
  %398 = load i32, i32* %397, align 4
  %399 = or i32 %398, %323
  store i32 %399, i32* %397, align 4
  %400 = icmp eq i32 %399, %398
  br i1 %400, label %401, label %414

401:                                              ; preds = %388
  %402 = load i32, i32* %390, align 4
  %403 = and i32 %402, 16777215
  %404 = zext i32 %403 to i64
  %405 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %142, align 8
  %406 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %405, i64 %404, i32 0
  %407 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %406, align 8
  %408 = icmp eq %"class.v8::internal::compiler::Node"* %407, null
  br i1 %408, label %409, label %410

409:                                              ; preds = %401
  store %"class.v8::internal::compiler::Node"* %350, %"class.v8::internal::compiler::Node"** %406, align 8
  br label %410

410:                                              ; preds = %401, %409
  %411 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %405, i64 %404, i32 2
  %412 = load i8, i8* %411, align 8, !range !3
  %413 = icmp eq i8 %412, 0
  br i1 %413, label %414, label %558

414:                                              ; preds = %388, %410
  %415 = ptrtoint %"class.v8::internal::compiler::Node"* %350 to i64
  %416 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %350, i64 0, i32 2
  %417 = load i32, i32* %416, align 8
  %418 = load i32, i32* %84, align 4
  %419 = tail call i32 @llvm.usub.sat.i32(i32 %417, i32 %418) #9
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %558

421:                                              ; preds = %414
  %422 = load i64, i64* %147, align 8
  %423 = load i64, i64* %148, align 8
  %424 = sub i64 %422, %423
  %425 = icmp eq i64 %424, 0
  %426 = shl i64 %424, 6
  %427 = add i64 %426, -1
  %428 = select i1 %425, i64 0, i64 %427
  %429 = load i64, i64* %141, align 8
  %430 = load i64, i64* %135, align 8
  %431 = add i64 %430, %429
  %432 = icmp eq i64 %428, %431
  %433 = inttoptr i64 %423 to %"class.v8::internal::compiler::Node"***
  %434 = inttoptr i64 %422 to %"class.v8::internal::compiler::Node"***
  br i1 %432, label %435, label %441

435:                                              ; preds = %421
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %134) #9
  %436 = load i64, i64* %135, align 8
  %437 = load i64, i64* %141, align 8
  %438 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %140, align 8
  %439 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %146, align 8
  %440 = add i64 %437, %436
  br label %441

441:                                              ; preds = %435, %421
  %442 = phi i64 [ %440, %435 ], [ %431, %421 ]
  %443 = phi %"class.v8::internal::compiler::Node"*** [ %439, %435 ], [ %434, %421 ]
  %444 = phi %"class.v8::internal::compiler::Node"*** [ %438, %435 ], [ %433, %421 ]
  %445 = icmp eq %"class.v8::internal::compiler::Node"*** %443, %444
  br i1 %445, label %453, label %446

446:                                              ; preds = %441
  %447 = lshr i64 %442, 9
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %444, i64 %447
  %449 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %448, align 8
  %450 = and i64 %442, 511
  %451 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %449, i64 %450
  %452 = bitcast %"class.v8::internal::compiler::Node"** %451 to i64*
  br label %453

453:                                              ; preds = %446, %441
  %454 = phi i64* [ %452, %446 ], [ null, %441 ]
  store i64 %415, i64* %454, align 8
  %455 = load i64, i64* %135, align 8
  %456 = add i64 %455, 1
  store i64 %456, i64* %135, align 8
  %457 = load i32, i32* %84, align 4
  %458 = add i32 %457, 1
  store i32 %458, i32* %416, align 8
  br label %558

459:                                              ; preds = %346, %366, %370
  %460 = icmp eq %"class.v8::internal::compiler::Node"* %163, %350
  br i1 %460, label %499, label %461

461:                                              ; preds = %459
  %462 = load i32*, i32** %69, align 8
  %463 = load i32, i32* %164, align 4
  %464 = and i32 %463, 16777215
  %465 = load i32, i32* %2, align 4
  %466 = mul i32 %464, %465
  %467 = zext i32 %466 to i64
  %468 = getelementptr inbounds i32, i32* %462, i64 %467
  %469 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %350, i64 0, i32 3
  %470 = load i32, i32* %469, align 4
  %471 = and i32 %470, 16777215
  %472 = mul i32 %471, %465
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds i32, i32* %462, i64 %473
  %475 = icmp sgt i32 %465, 0
  br i1 %475, label %476, label %499

476:                                              ; preds = %461, %476
  %477 = phi i64 [ %492, %476 ], [ 0, %461 ]
  %478 = phi i8 [ %491, %476 ], [ 0, %461 ]
  %479 = icmp eq i64 %477, %325
  %480 = select i1 %479, i32 %324, i32 -1
  %481 = getelementptr inbounds i32, i32* %474, i64 %477
  %482 = load i32, i32* %481, align 4
  %483 = getelementptr inbounds i32, i32* %468, i64 %477
  %484 = load i32, i32* %483, align 4
  %485 = and i32 %484, %480
  %486 = or i32 %485, %482
  store i32 %486, i32* %481, align 4
  %487 = and i8 %478, 1
  %488 = icmp ne i8 %487, 0
  %489 = icmp eq i32 %482, %486
  %490 = or i1 %488, %489
  %491 = select i1 %490, i8 %478, i8 1
  %492 = add nuw nsw i64 %477, 1
  %493 = load i32, i32* %2, align 4
  %494 = sext i32 %493 to i64
  %495 = icmp slt i64 %492, %494
  br i1 %495, label %476, label %496

496:                                              ; preds = %476
  %497 = and i8 %491, 1
  %498 = icmp eq i8 %497, 0
  br i1 %498, label %499, label %513

499:                                              ; preds = %496, %461, %459
  %500 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %350, i64 0, i32 3
  %501 = load i32, i32* %500, align 4
  %502 = and i32 %501, 16777215
  %503 = zext i32 %502 to i64
  %504 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %142, align 8
  %505 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %504, i64 %503, i32 0
  %506 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %505, align 8
  %507 = icmp eq %"class.v8::internal::compiler::Node"* %506, null
  br i1 %507, label %508, label %509

508:                                              ; preds = %499
  store %"class.v8::internal::compiler::Node"* %350, %"class.v8::internal::compiler::Node"** %505, align 8
  br label %509

509:                                              ; preds = %499, %508
  %510 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %504, i64 %503, i32 2
  %511 = load i8, i8* %510, align 8, !range !3
  %512 = icmp eq i8 %511, 0
  br i1 %512, label %513, label %558

513:                                              ; preds = %496, %509
  %514 = ptrtoint %"class.v8::internal::compiler::Node"* %350 to i64
  %515 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %350, i64 0, i32 2
  %516 = load i32, i32* %515, align 8
  %517 = load i32, i32* %84, align 4
  %518 = tail call i32 @llvm.usub.sat.i32(i32 %516, i32 %517) #9
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %558

520:                                              ; preds = %513
  %521 = load i64, i64* %147, align 8
  %522 = load i64, i64* %148, align 8
  %523 = sub i64 %521, %522
  %524 = icmp eq i64 %523, 0
  %525 = shl i64 %523, 6
  %526 = add i64 %525, -1
  %527 = select i1 %524, i64 0, i64 %526
  %528 = load i64, i64* %141, align 8
  %529 = load i64, i64* %135, align 8
  %530 = add i64 %529, %528
  %531 = icmp eq i64 %527, %530
  %532 = inttoptr i64 %522 to %"class.v8::internal::compiler::Node"***
  %533 = inttoptr i64 %521 to %"class.v8::internal::compiler::Node"***
  br i1 %531, label %534, label %540

534:                                              ; preds = %520
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %134) #9
  %535 = load i64, i64* %135, align 8
  %536 = load i64, i64* %141, align 8
  %537 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %140, align 8
  %538 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %146, align 8
  %539 = add i64 %536, %535
  br label %540

540:                                              ; preds = %534, %520
  %541 = phi i64 [ %539, %534 ], [ %530, %520 ]
  %542 = phi %"class.v8::internal::compiler::Node"*** [ %538, %534 ], [ %533, %520 ]
  %543 = phi %"class.v8::internal::compiler::Node"*** [ %537, %534 ], [ %532, %520 ]
  %544 = icmp eq %"class.v8::internal::compiler::Node"*** %542, %543
  br i1 %544, label %552, label %545

545:                                              ; preds = %540
  %546 = lshr i64 %541, 9
  %547 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %543, i64 %546
  %548 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %547, align 8
  %549 = and i64 %541, 511
  %550 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %548, i64 %549
  %551 = bitcast %"class.v8::internal::compiler::Node"** %550 to i64*
  br label %552

552:                                              ; preds = %545, %540
  %553 = phi i64* [ %551, %545 ], [ null, %540 ]
  store i64 %514, i64* %553, align 8
  %554 = load i64, i64* %135, align 8
  %555 = add i64 %554, 1
  store i64 %555, i64* %135, align 8
  %556 = load i32, i32* %84, align 4
  %557 = add i32 %556, 1
  store i32 %557, i32* %515, align 8
  br label %558

558:                                              ; preds = %552, %513, %453, %414, %410, %509
  %559 = add nuw nsw i64 %327, 1
  br label %326

560:                                              ; preds = %151, %133
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14LoopFinderImpl16PropagateForwardEv(%"class.v8::internal::compiler::LoopFinderImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %3 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %3, i64 0, i32 3, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %3, i64 0, i32 3, i32 0, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.19"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = lshr exact i64 %10, 2
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 9
  %16 = load i32, i32* %15, align 4
  %17 = mul nsw i32 %16, %12
  %18 = sext i32 %17 to i64
  %19 = shl nsw i64 %18, 2
  %20 = add nsw i64 %19, 7
  %21 = and i64 %20, -8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %23
  %27 = icmp ugt i64 %21, %26
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %1
  %29 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %21) #9
  br label %32

30:                                               ; preds = %1
  %31 = add i64 %21, %23
  store i64 %31, i64* %22, align 8
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi i64 [ %29, %28 ], [ %23, %30 ]
  %34 = inttoptr i64 %33 to i32*
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 11
  store i32* %34, i32** %35, align 8
  %36 = inttoptr i64 %33 to i8*
  %37 = load i32, i32* %15, align 4
  %38 = mul nsw i32 %37, %12
  %39 = sext i32 %38 to i64
  %40 = shl nsw i64 %39, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 %40, i1 false) #9
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %42 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %44 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %43, align 8
  %45 = icmp eq %"struct.v8::internal::compiler::TempLoopInfo"* %42, %44
  br i1 %45, label %55, label %46

46:                                               ; preds = %32
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %49 = bitcast %"class.v8::internal::compiler::Node"**** %48 to i64*
  %50 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast %"class.v8::internal::compiler::Node"**** %50 to i64*
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0
  br label %74

55:                                               ; preds = %143, %32
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %341, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 12
  %62 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %65 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %64 to i64*
  %66 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %64 to %"class.v8::internal::compiler::Node"***
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 10
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %70 = bitcast %"class.v8::internal::compiler::Node"**** %69 to i64*
  %71 = bitcast %"class.v8::internal::compiler::Node"**** %62 to i64*
  %72 = bitcast i64* %63 to <2 x i64>*
  %73 = bitcast i64* %63 to <2 x i64>*
  br label %149

74:                                               ; preds = %46, %143
  %75 = phi %"struct.v8::internal::compiler::TempLoopInfo"* [ %42, %46 ], [ %144, %143 ]
  %76 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %75, i64 0, i32 0
  %77 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, align 8
  %78 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %2, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %77, i64 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, 16777215
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 %82
  %86 = load i32, i32* %85, align 4
  %87 = load i32*, i32** %35, align 8
  %88 = load i32, i32* %15, align 4
  %89 = mul i32 %88, %81
  %90 = ashr i32 %86, 5
  %91 = add i32 %89, %90
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %87, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %86, 31
  %96 = shl i32 1, %95
  %97 = or i32 %94, %96
  store i32 %97, i32* %93, align 4
  %98 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, align 8
  %99 = ptrtoint %"class.v8::internal::compiler::Node"* %98 to i64
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %98, i64 0, i32 2
  %101 = load i32, i32* %100, align 8
  %102 = load i32, i32* %47, align 4
  %103 = tail call i32 @llvm.usub.sat.i32(i32 %101, i32 %102) #9
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %143

105:                                              ; preds = %74
  %106 = load i64, i64* %49, align 8
  %107 = load i64, i64* %51, align 8
  %108 = sub i64 %106, %107
  %109 = icmp eq i64 %108, 0
  %110 = shl i64 %108, 6
  %111 = add i64 %110, -1
  %112 = select i1 %109, i64 0, i64 %111
  %113 = load i64, i64* %52, align 8
  %114 = load i64, i64* %53, align 8
  %115 = add i64 %114, %113
  %116 = icmp eq i64 %112, %115
  %117 = inttoptr i64 %107 to %"class.v8::internal::compiler::Node"***
  %118 = inttoptr i64 %106 to %"class.v8::internal::compiler::Node"***
  br i1 %116, label %119, label %125

119:                                              ; preds = %105
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %54) #9
  %120 = load i64, i64* %53, align 8
  %121 = load i64, i64* %52, align 8
  %122 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %50, align 8
  %123 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %48, align 8
  %124 = add i64 %121, %120
  br label %125

125:                                              ; preds = %119, %105
  %126 = phi i64 [ %124, %119 ], [ %115, %105 ]
  %127 = phi %"class.v8::internal::compiler::Node"*** [ %123, %119 ], [ %118, %105 ]
  %128 = phi %"class.v8::internal::compiler::Node"*** [ %122, %119 ], [ %117, %105 ]
  %129 = icmp eq %"class.v8::internal::compiler::Node"*** %127, %128
  br i1 %129, label %137, label %130

130:                                              ; preds = %125
  %131 = lshr i64 %126, 9
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %128, i64 %131
  %133 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, align 8
  %134 = and i64 %126, 511
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %133, i64 %134
  %136 = bitcast %"class.v8::internal::compiler::Node"** %135 to i64*
  br label %137

137:                                              ; preds = %130, %125
  %138 = phi i64* [ %136, %130 ], [ null, %125 ]
  store i64 %99, i64* %138, align 8
  %139 = load i64, i64* %53, align 8
  %140 = add i64 %139, 1
  store i64 %140, i64* %53, align 8
  %141 = load i32, i32* %47, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %100, align 8
  br label %143

143:                                              ; preds = %74, %137
  %144 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %75, i64 1
  %145 = icmp eq %"struct.v8::internal::compiler::TempLoopInfo"* %144, %44
  br i1 %145, label %55, label %74

146:                                              ; preds = %339, %183
  %147 = load i64, i64* %57, align 8
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %341, label %149

149:                                              ; preds = %60, %146
  %150 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %61, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %150) #9
  %151 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %62, align 8
  %152 = load <2 x i64>, <2 x i64>* %72, align 8
  %153 = extractelement <2 x i64> %152, i32 0
  %154 = lshr i64 %153, 9
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %151, i64 %154
  %156 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %155, align 8
  %157 = and i64 %153, 511
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, i64 %157
  %159 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %158, align 8
  %160 = add <2 x i64> %152, <i64 1, i64 -1>
  store <2 x i64> %160, <2 x i64>* %73, align 8
  %161 = extractelement <2 x i64> %160, i32 0
  %162 = icmp ult i64 %161, 1024
  br i1 %162, label %183, label %163

163:                                              ; preds = %149
  %164 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %151, align 8
  %165 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %64, align 8
  %166 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %165, null
  br i1 %166, label %171, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %165, i64 0, i32 1
  %169 = load i64, i64* %168, align 8
  %170 = icmp ugt i64 %169, 512
  br i1 %170, label %178, label %171

171:                                              ; preds = %167, %163
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 1
  %173 = bitcast %"class.v8::internal::compiler::Node"** %172 to i64*
  store i64 512, i64* %173, align 8
  %174 = load i64, i64* %65, align 8
  %175 = bitcast %"class.v8::internal::compiler::Node"** %164 to i64*
  store i64 %174, i64* %175, align 8
  store %"class.v8::internal::compiler::Node"** %164, %"class.v8::internal::compiler::Node"*** %66, align 8
  %176 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %62, align 8
  %177 = load i64, i64* %63, align 8
  br label %178

178:                                              ; preds = %171, %167
  %179 = phi i64 [ %161, %167 ], [ %177, %171 ]
  %180 = phi %"class.v8::internal::compiler::Node"*** [ %151, %167 ], [ %176, %171 ]
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %180, i64 1
  store %"class.v8::internal::compiler::Node"*** %181, %"class.v8::internal::compiler::Node"**** %62, align 8
  %182 = add i64 %179, -512
  store i64 %182, i64* %63, align 8
  br label %183

183:                                              ; preds = %149, %178
  %184 = load i32, i32* %67, align 4
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %159, i64 0, i32 2
  store i32 %184, i32* %185, align 8
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %159, i64 0, i32 4
  %187 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %186, align 8
  %188 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %187, null
  br i1 %188, label %146, label %189

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %159, i64 0, i32 3
  br label %191

191:                                              ; preds = %339, %189
  %192 = phi %"struct.v8::internal::compiler::Node::Use"* [ %187, %189 ], [ %194, %339 ]
  %193 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %192, i64 0, i32 0
  %194 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %193, align 8
  %195 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %192, i64 0, i32 2
  %196 = load i32, i32* %195, align 8
  %197 = lshr i32 %196, 1
  %198 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %192, i64 1
  %199 = zext i32 %197 to i64
  %200 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %198, i64 %199
  %201 = and i32 %196, 1
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %191
  %204 = bitcast %"struct.v8::internal::compiler::Node::Use"* %200 to %"class.v8::internal::compiler::Node"*
  br label %208

205:                                              ; preds = %191
  %206 = bitcast %"struct.v8::internal::compiler::Node::Use"* %200 to %"class.v8::internal::compiler::Node"**
  %207 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, align 8
  br label %208

208:                                              ; preds = %203, %205
  %209 = phi %"class.v8::internal::compiler::Node"* [ %204, %203 ], [ %207, %205 ]
  %210 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %2, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %209, i64 0, i32 3
  %212 = load i32, i32* %211, align 4
  %213 = and i32 %212, 16777215
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %210, i64 0, i32 3, i32 0, i32 0, i32 0
  %216 = load i32*, i32** %215, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %214
  %218 = load i32, i32* %217, align 4
  %219 = icmp slt i32 %218, 1
  br i1 %219, label %253, label %220

220:                                              ; preds = %208
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %209, i64 0, i32 0
  %222 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %222, i64 0, i32 2
  %224 = load i16, i16* %223, align 8
  %225 = zext i16 %224 to i32
  %226 = add nsw i32 %225, -35
  %227 = icmp ult i32 %226, 2
  br i1 %227, label %234, label %228

228:                                              ; preds = %220
  %229 = icmp eq i16 %224, 1
  %230 = icmp ne i32 %197, 0
  %231 = and i1 %230, %229
  %232 = icmp eq %"class.v8::internal::compiler::Node"* %159, %209
  %233 = or i1 %232, %231
  br i1 %233, label %339, label %255

234:                                              ; preds = %220
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %222, i64 0, i32 5
  %236 = load i32, i32* %235, align 4
  %237 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %222) #9
  %238 = zext i1 %237 to i32
  %239 = add nsw i32 %236, %238
  %240 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %221, align 8
  %241 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %240) #9
  %242 = zext i1 %241 to i32
  %243 = add nsw i32 %239, %242
  %244 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %221, align 8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %244, i64 0, i32 6
  %246 = load i32, i32* %245, align 8
  %247 = add nsw i32 %243, %246
  %248 = icmp ne i32 %247, %197
  %249 = icmp ne i32 %197, 0
  %250 = and i1 %249, %248
  %251 = icmp eq %"class.v8::internal::compiler::Node"* %159, %209
  %252 = or i1 %251, %250
  br i1 %252, label %339, label %255

253:                                              ; preds = %208
  %254 = icmp eq %"class.v8::internal::compiler::Node"* %159, %209
  br i1 %254, label %339, label %255

255:                                              ; preds = %234, %228, %253
  %256 = load i32, i32* %15, align 4
  %257 = icmp sgt i32 %256, 0
  br i1 %257, label %258, label %339

258:                                              ; preds = %255
  %259 = load i32, i32* %211, align 4
  %260 = and i32 %259, 16777215
  %261 = mul i32 %260, %256
  %262 = load i32, i32* %190, align 4
  %263 = and i32 %262, 16777215
  %264 = mul i32 %263, %256
  %265 = sext i32 %264 to i64
  %266 = sext i32 %261 to i64
  br label %267

267:                                              ; preds = %267, %258
  %268 = phi i64 [ 0, %258 ], [ %287, %267 ]
  %269 = phi i8 [ 0, %258 ], [ %286, %267 ]
  %270 = load i32*, i32** %68, align 8
  %271 = add nsw i64 %268, %266
  %272 = getelementptr inbounds i32, i32* %270, i64 %271
  %273 = load i32, i32* %272, align 4
  %274 = load i32*, i32** %35, align 8
  %275 = add nsw i64 %268, %265
  %276 = getelementptr inbounds i32, i32* %274, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = and i32 %277, %273
  %279 = getelementptr inbounds i32, i32* %274, i64 %271
  %280 = load i32, i32* %279, align 4
  %281 = or i32 %280, %278
  store i32 %281, i32* %279, align 4
  %282 = and i8 %269, 1
  %283 = icmp ne i8 %282, 0
  %284 = icmp eq i32 %280, %281
  %285 = or i1 %283, %284
  %286 = select i1 %285, i8 %269, i8 1
  %287 = add nuw nsw i64 %268, 1
  %288 = load i32, i32* %15, align 4
  %289 = sext i32 %288 to i64
  %290 = icmp slt i64 %287, %289
  br i1 %290, label %267, label %291

291:                                              ; preds = %267
  %292 = and i8 %286, 1
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %339, label %294

294:                                              ; preds = %291
  %295 = ptrtoint %"class.v8::internal::compiler::Node"* %209 to i64
  %296 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %209, i64 0, i32 2
  %297 = load i32, i32* %296, align 8
  %298 = load i32, i32* %67, align 4
  %299 = tail call i32 @llvm.usub.sat.i32(i32 %297, i32 %298) #9
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %339

301:                                              ; preds = %294
  %302 = load i64, i64* %70, align 8
  %303 = load i64, i64* %71, align 8
  %304 = sub i64 %302, %303
  %305 = icmp eq i64 %304, 0
  %306 = shl i64 %304, 6
  %307 = add i64 %306, -1
  %308 = select i1 %305, i64 0, i64 %307
  %309 = load i64, i64* %63, align 8
  %310 = load i64, i64* %57, align 8
  %311 = add i64 %310, %309
  %312 = icmp eq i64 %308, %311
  %313 = inttoptr i64 %303 to %"class.v8::internal::compiler::Node"***
  %314 = inttoptr i64 %302 to %"class.v8::internal::compiler::Node"***
  br i1 %312, label %315, label %321

315:                                              ; preds = %301
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %56) #9
  %316 = load i64, i64* %57, align 8
  %317 = load i64, i64* %63, align 8
  %318 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %62, align 8
  %319 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %69, align 8
  %320 = add i64 %317, %316
  br label %321

321:                                              ; preds = %315, %301
  %322 = phi i64 [ %320, %315 ], [ %311, %301 ]
  %323 = phi %"class.v8::internal::compiler::Node"*** [ %319, %315 ], [ %314, %301 ]
  %324 = phi %"class.v8::internal::compiler::Node"*** [ %318, %315 ], [ %313, %301 ]
  %325 = icmp eq %"class.v8::internal::compiler::Node"*** %323, %324
  br i1 %325, label %333, label %326

326:                                              ; preds = %321
  %327 = lshr i64 %322, 9
  %328 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %324, i64 %327
  %329 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %328, align 8
  %330 = and i64 %322, 511
  %331 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %329, i64 %330
  %332 = bitcast %"class.v8::internal::compiler::Node"** %331 to i64*
  br label %333

333:                                              ; preds = %326, %321
  %334 = phi i64* [ %332, %326 ], [ null, %321 ]
  store i64 %295, i64* %334, align 8
  %335 = load i64, i64* %57, align 8
  %336 = add i64 %335, 1
  store i64 %336, i64* %57, align 8
  %337 = load i32, i32* %67, align 4
  %338 = add i32 %337, 1
  store i32 %338, i32* %296, align 8
  br label %339

339:                                              ; preds = %291, %255, %253, %333, %294, %228, %234
  %340 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %194, null
  br i1 %340, label %146, label %191

341:                                              ; preds = %146, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14LoopFinderImpl14FinishLoopTreeEv(%"class.v8::internal::compiler::LoopFinderImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %4 [
    i32 0, label %363
    i32 1, label %6
  ]

4:                                                ; preds = %1
  %5 = icmp slt i32 %3, 1
  br i1 %5, label %7, label %19

6:                                                ; preds = %1
  tail call void @_ZN2v88internal8compiler14LoopFinderImpl16FinishSingleLoopEv(%"class.v8::internal::compiler::LoopFinderImpl"* %0)
  br label %363

7:                                                ; preds = %19, %4
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %11 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %10, align 8
  %12 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %9, %11
  br i1 %12, label %25, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 9
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 10
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 11
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  br label %251

19:                                               ; preds = %4, %19
  %20 = phi i32 [ %22, %19 ], [ 1, %4 ]
  %21 = tail call %"class.v8::internal::compiler::LoopTree::Loop"* @_ZN2v88internal8compiler14LoopFinderImpl15ConnectLoopTreeEi(%"class.v8::internal::compiler::LoopFinderImpl"* %0, i32 %20)
  %22 = add nuw nsw i32 %20, 1
  %23 = load i32, i32* %2, align 8
  %24 = icmp slt i32 %20, %23
  br i1 %24, label %19, label %7

25:                                               ; preds = %354, %7
  %26 = phi i64 [ 0, %7 ], [ %355, %354 ]
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %28 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %28, i64 0, i32 4, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %28, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.26"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, %26
  br i1 %37, label %38, label %244

38:                                               ; preds = %25
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %28, i64 0, i32 4, i32 0, i32 0, i32 1
  %40 = bitcast %"class.v8::internal::compiler::Node"*** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %41, %34
  %43 = ashr exact i64 %42, 3
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %28, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %45 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %44, align 8
  %46 = shl i64 %26, 3
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %45, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %45, i64 0, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %50, %48
  %52 = icmp ugt i64 %46, %51
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %38
  %54 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %45, i64 %46) #9
  br label %57

55:                                               ; preds = %38
  %56 = add i64 %48, %46
  store i64 %56, i64* %47, align 8
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ %54, %53 ], [ %48, %55 ]
  %59 = inttoptr i64 %58 to %"class.v8::internal::compiler::Node"**
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, i64 %43
  %61 = ptrtoint %"class.v8::internal::compiler::Node"** %60 to i64
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, i64 %26
  %63 = ptrtoint %"class.v8::internal::compiler::Node"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %29, i64 0, i32 0, i32 0
  %65 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %64, align 8
  %66 = ptrtoint %"class.v8::internal::compiler::Node"** %65 to i64
  %67 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %39, align 8
  %68 = icmp eq %"class.v8::internal::compiler::Node"** %67, %65
  br i1 %68, label %241, label %69

69:                                               ; preds = %57
  %70 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 -1
  %71 = ptrtoint %"class.v8::internal::compiler::Node"** %70 to i64
  %72 = sub i64 %71, %66
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i64 %74, 4
  br i1 %75, label %168, label %76

76:                                               ; preds = %69
  %77 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 -1
  %78 = ptrtoint %"class.v8::internal::compiler::Node"** %77 to i64
  %79 = sub i64 %78, %66
  %80 = lshr i64 %79, 3
  %81 = xor i64 %80, -1
  %82 = add nsw i64 %43, %81
  %83 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, i64 %82
  %84 = xor i64 %80, -1
  %85 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %84
  %86 = icmp ult %"class.v8::internal::compiler::Node"** %83, %67
  %87 = icmp ult %"class.v8::internal::compiler::Node"** %85, %60
  %88 = and i1 %86, %87
  br i1 %88, label %168, label %89

89:                                               ; preds = %76
  %90 = and i64 %74, 4611686018427387900
  %91 = sub nsw i64 0, %90
  %92 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, i64 %91
  %93 = sub nsw i64 0, %90
  %94 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %93
  %95 = add nsw i64 %90, -4
  %96 = lshr exact i64 %95, 2
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %95, 0
  br i1 %99, label %146, label %100

100:                                              ; preds = %89
  %101 = sub nuw nsw i64 %97, %98
  %102 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, i64 -1
  %103 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 -1
  %104 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, i64 -1
  %105 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 -1
  br label %106

106:                                              ; preds = %106, %100
  %107 = phi i64 [ 0, %100 ], [ %141, %106 ]
  %108 = phi i64 [ %101, %100 ], [ %142, %106 ]
  %109 = sub i64 0, %107
  %110 = sub i64 0, %107
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %102, i64 %109
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %103, i64 %110
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, i64 -1
  %114 = bitcast %"class.v8::internal::compiler::Node"** %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !70
  %116 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, i64 -2
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, i64 -1
  %118 = bitcast %"class.v8::internal::compiler::Node"** %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !70
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -1
  %121 = bitcast %"class.v8::internal::compiler::Node"** %120 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %121, align 8, !alias.scope !73, !noalias !70
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -2
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 -1
  %124 = bitcast %"class.v8::internal::compiler::Node"** %123 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %124, align 8, !alias.scope !73, !noalias !70
  %125 = sub nuw nsw i64 -4, %107
  %126 = sub nuw nsw i64 -4, %107
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, i64 %125
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %105, i64 %126
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 -1
  %130 = bitcast %"class.v8::internal::compiler::Node"** %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !70
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 -2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 -1
  %134 = bitcast %"class.v8::internal::compiler::Node"** %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !70
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -1
  %137 = bitcast %"class.v8::internal::compiler::Node"** %136 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %137, align 8, !alias.scope !73, !noalias !70
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -2
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 -1
  %140 = bitcast %"class.v8::internal::compiler::Node"** %139 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %140, align 8, !alias.scope !73, !noalias !70
  %141 = add i64 %107, 8
  %142 = add i64 %108, -2
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %106, !llvm.loop !75

144:                                              ; preds = %106
  %145 = sub nuw nsw i64 -8, %107
  br label %146

146:                                              ; preds = %144, %89
  %147 = phi i64 [ 0, %89 ], [ %145, %144 ]
  %148 = icmp eq i64 %98, 0
  br i1 %148, label %166, label %149

149:                                              ; preds = %146
  %150 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, i64 -1
  %151 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 -1
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 %147
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %151, i64 %147
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::Node"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !70
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::Node"** %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !70
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::Node"** %161 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %162, align 8, !alias.scope !73, !noalias !70
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 -2
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::Node"** %164 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %165, align 8, !alias.scope !73, !noalias !70
  br label %166

166:                                              ; preds = %146, %149
  %167 = icmp eq i64 %74, %90
  br i1 %167, label %238, label %168

168:                                              ; preds = %166, %76, %69
  %169 = phi %"class.v8::internal::compiler::Node"** [ %60, %76 ], [ %60, %69 ], [ %92, %166 ]
  %170 = phi %"class.v8::internal::compiler::Node"** [ %67, %76 ], [ %67, %69 ], [ %94, %166 ]
  %171 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, i64 -1
  %172 = ptrtoint %"class.v8::internal::compiler::Node"** %171 to i64
  %173 = sub i64 %172, %66
  %174 = lshr i64 %173, 3
  %175 = add nuw nsw i64 %174, 1
  %176 = and i64 %175, 7
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %168, %178
  %179 = phi %"class.v8::internal::compiler::Node"** [ %182, %178 ], [ %169, %168 ]
  %180 = phi %"class.v8::internal::compiler::Node"** [ %183, %178 ], [ %170, %168 ]
  %181 = phi i64 [ %187, %178 ], [ %176, %168 ]
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 -1
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::Node"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.v8::internal::compiler::Node"** %182 to i64*
  store i64 %185, i64* %186, align 8
  %187 = add i64 %181, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %178, !llvm.loop !76

189:                                              ; preds = %178, %168
  %190 = phi %"class.v8::internal::compiler::Node"** [ undef, %168 ], [ %182, %178 ]
  %191 = phi %"class.v8::internal::compiler::Node"** [ %169, %168 ], [ %182, %178 ]
  %192 = phi %"class.v8::internal::compiler::Node"** [ %170, %168 ], [ %183, %178 ]
  %193 = icmp ult i64 %173, 56
  br i1 %193, label %238, label %194

194:                                              ; preds = %189, %194
  %195 = phi %"class.v8::internal::compiler::Node"** [ %232, %194 ], [ %191, %189 ]
  %196 = phi %"class.v8::internal::compiler::Node"** [ %233, %194 ], [ %192, %189 ]
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -1
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.v8::internal::compiler::Node"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -2
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -2
  %204 = bitcast %"class.v8::internal::compiler::Node"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.v8::internal::compiler::Node"** %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -3
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -3
  %209 = bitcast %"class.v8::internal::compiler::Node"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::internal::compiler::Node"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -4
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -4
  %214 = bitcast %"class.v8::internal::compiler::Node"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::Node"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -5
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -5
  %219 = bitcast %"class.v8::internal::compiler::Node"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::Node"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -6
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -6
  %224 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::Node"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -7
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -7
  %229 = bitcast %"class.v8::internal::compiler::Node"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::Node"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -8
  %234 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::Node"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = icmp eq %"class.v8::internal::compiler::Node"** %233, %65
  br i1 %237, label %238, label %194, !llvm.loop !77

238:                                              ; preds = %189, %194, %166
  %239 = phi %"class.v8::internal::compiler::Node"** [ %92, %166 ], [ %190, %189 ], [ %232, %194 ]
  %240 = ptrtoint %"class.v8::internal::compiler::Node"** %239 to i64
  br label %241

241:                                              ; preds = %238, %57
  %242 = phi i64 [ %240, %238 ], [ %61, %57 ]
  store i64 %242, i64* %33, align 8
  store i64 %61, i64* %40, align 8
  store i64 %63, i64* %31, align 8
  %243 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %27, align 8
  br label %244

244:                                              ; preds = %25, %241
  %245 = phi %"class.v8::internal::compiler::LoopTree"* [ %28, %25 ], [ %243, %241 ]
  %246 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %245, i64 0, i32 1, i32 0, i32 0, i32 0
  %247 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %246, align 8
  %248 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %245, i64 0, i32 1, i32 0, i32 0, i32 1
  %249 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %248, align 8
  %250 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %247, %249
  br i1 %250, label %363, label %358

251:                                              ; preds = %13, %354
  %252 = phi i64 [ 0, %13 ], [ %355, %354 ]
  %253 = phi %"struct.v8::internal::compiler::NodeInfo"* [ %9, %13 ], [ %356, %354 ]
  %254 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %253, i64 0, i32 0
  %255 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %254, align 8
  %256 = icmp eq %"class.v8::internal::compiler::Node"* %255, null
  br i1 %256, label %354, label %257

257:                                              ; preds = %251
  %258 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %255, i64 0, i32 3
  %259 = load i32, i32* %258, align 4
  %260 = and i32 %259, 16777215
  %261 = load i32, i32* %14, align 4
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %263, label %354

263:                                              ; preds = %257
  %264 = mul i32 %260, %261
  %265 = load i32*, i32** %15, align 8
  %266 = load i32*, i32** %16, align 8
  %267 = sext i32 %264 to i64
  %268 = zext i32 %261 to i64
  br label %271

269:                                              ; preds = %284
  %270 = icmp eq %"struct.v8::internal::compiler::TempLoopInfo"* %317, null
  br i1 %270, label %354, label %320

271:                                              ; preds = %284, %263
  %272 = phi i64 [ 0, %263 ], [ %285, %284 ]
  %273 = phi %"struct.v8::internal::compiler::TempLoopInfo"* [ null, %263 ], [ %317, %284 ]
  %274 = phi i32 [ 0, %263 ], [ %316, %284 ]
  %275 = add nsw i64 %272, %267
  %276 = getelementptr inbounds i32, i32* %265, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds i32, i32* %266, i64 %275
  %279 = load i32, i32* %278, align 4
  %280 = and i32 %279, %277
  %281 = trunc i64 %272 to i32
  %282 = shl nsw i32 %281, 5
  %283 = sext i32 %282 to i64
  br label %287

284:                                              ; preds = %315
  %285 = add nuw nsw i64 %272, 1
  %286 = icmp eq i64 %285, %268
  br i1 %286, label %269, label %271

287:                                              ; preds = %315, %271
  %288 = phi i64 [ 0, %271 ], [ %318, %315 ]
  %289 = phi %"struct.v8::internal::compiler::TempLoopInfo"* [ %273, %271 ], [ %317, %315 ]
  %290 = phi i32 [ %274, %271 ], [ %316, %315 ]
  %291 = trunc i64 %288 to i32
  %292 = shl i32 1, %291
  %293 = and i32 %280, %292
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %315, label %295

295:                                              ; preds = %287
  %296 = add nuw nsw i64 %288, %283
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %315, label %298

298:                                              ; preds = %295
  %299 = add nsw i64 %296, -1
  %300 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %17, align 8
  %301 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %300, i64 %299
  %302 = icmp eq %"struct.v8::internal::compiler::TempLoopInfo"* %289, null
  br i1 %302, label %313, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %300, i64 %299, i32 4
  %305 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %304, align 8
  %306 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %305, i64 0, i32 1
  %307 = load i32, i32* %306, align 8
  %308 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %289, i64 0, i32 4
  %309 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %308, align 8
  %310 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %309, i64 0, i32 1
  %311 = load i32, i32* %310, align 8
  %312 = icmp sgt i32 %307, %311
  br i1 %312, label %313, label %315

313:                                              ; preds = %303, %298
  %314 = trunc i64 %296 to i32
  br label %315

315:                                              ; preds = %295, %313, %303, %287
  %316 = phi i32 [ %290, %287 ], [ %290, %295 ], [ %314, %313 ], [ %290, %303 ]
  %317 = phi %"struct.v8::internal::compiler::TempLoopInfo"* [ %289, %287 ], [ %289, %295 ], [ %301, %313 ], [ %289, %303 ]
  %318 = add nuw nsw i64 %288, 1
  %319 = icmp eq i64 %318, 32
  br i1 %319, label %284, label %287

320:                                              ; preds = %269
  %321 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %255, i64 0, i32 0
  %322 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %321, align 8
  %323 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %322, i64 0, i32 2
  %324 = load i16, i16* %323, align 8
  %325 = zext i16 %324 to i32
  %326 = icmp eq i16 %324, 17
  br i1 %326, label %327, label %328, !prof !2

327:                                              ; preds = %320
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #10
  unreachable

328:                                              ; preds = %320
  %329 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %18, align 8
  %330 = zext i32 %260 to i64
  %331 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %329, i64 0, i32 3, i32 0, i32 0, i32 0
  %332 = load i32*, i32** %331, align 8
  %333 = getelementptr inbounds i32, i32* %332, i64 %330
  %334 = load i32, i32* %333, align 4
  %335 = icmp eq i32 %334, %316
  br i1 %335, label %336, label %345

336:                                              ; preds = %328
  %337 = icmp eq i16 %324, 1
  %338 = add nsw i32 %325, -35
  %339 = icmp ult i32 %338, 2
  %340 = or i1 %337, %339
  br i1 %340, label %341, label %343

341:                                              ; preds = %336
  %342 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %317, i64 0, i32 1
  br label %347

343:                                              ; preds = %336
  %344 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %317, i64 0, i32 2
  br label %347

345:                                              ; preds = %328
  %346 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %317, i64 0, i32 3
  br label %347

347:                                              ; preds = %341, %343, %345
  %348 = phi %"struct.v8::internal::compiler::NodeInfo"** [ %342, %341 ], [ %344, %343 ], [ %346, %345 ]
  %349 = bitcast %"struct.v8::internal::compiler::NodeInfo"** %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %253, i64 0, i32 1
  %352 = bitcast %"struct.v8::internal::compiler::NodeInfo"** %351 to i64*
  store i64 %350, i64* %352, align 8
  store %"struct.v8::internal::compiler::NodeInfo"* %253, %"struct.v8::internal::compiler::NodeInfo"** %348, align 8
  %353 = add i64 %252, 1
  br label %354

354:                                              ; preds = %257, %347, %269, %251
  %355 = phi i64 [ %252, %251 ], [ %353, %347 ], [ %252, %269 ], [ %252, %257 ]
  %356 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %253, i64 1
  %357 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %356, %11
  br i1 %357, label %25, label %251

358:                                              ; preds = %244, %358
  %359 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %361, %358 ], [ %247, %244 ]
  %360 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %359, align 8
  tail call void @_ZN2v88internal8compiler14LoopFinderImpl13SerializeLoopEPNS1_8LoopTree4LoopE(%"class.v8::internal::compiler::LoopFinderImpl"* %0, %"class.v8::internal::compiler::LoopTree::Loop"* %360)
  %361 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %359, i64 1
  %362 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %361, %249
  br i1 %362, label %363, label %358

363:                                              ; preds = %358, %244, %1, %6
  ret void
}

declare void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal8compiler14LoopFinderImpl14CreateLoopInfoEPNS1_4NodeE(%"class.v8::internal::compiler::LoopFinderImpl"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::compiler::LoopTree::Loop", align 8
  %4 = alloca { %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"*, %"class.v8::internal::compiler::LoopTree::Loop"* }, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %6 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 16777215
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 %10
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %225, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 8
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = ashr i32 %19, 5
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 9
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %20, %22
  br i1 %23, label %89, label %24

24:                                               ; preds = %16
  %25 = add nsw i32 %22, 1
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %6, i64 0, i32 3, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %6, i64 0, i32 3, i32 0, i32 0, i32 1
  %28 = bitcast i32** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.19"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = lshr exact i64 %32, 2
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 0
  %36 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %35, align 8
  %37 = mul nsw i32 %25, %34
  %38 = sext i32 %37 to i64
  %39 = shl nsw i64 %38, 2
  %40 = add nsw i64 %39, 7
  %41 = and i64 %40, -8
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %36, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %36, i64 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %43
  %47 = icmp ugt i64 %41, %46
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %24
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %36, i64 %41) #9
  br label %52

50:                                               ; preds = %24
  %51 = add i64 %41, %43
  store i64 %51, i64* %42, align 8
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %43, %50 ]
  %54 = inttoptr i64 %53 to i32*
  %55 = inttoptr i64 %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %55, i8 0, i64 %39, i1 false) #9
  %56 = load i32, i32* %21, align 4
  %57 = icmp sgt i32 %56, 0
  %58 = icmp sgt i32 %34, 0
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %87

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 10
  %62 = sext i32 %25 to i64
  %63 = and i64 %33, 4294967295
  br label %64

64:                                               ; preds = %74, %60
  %65 = phi i32 [ %56, %60 ], [ %75, %74 ]
  %66 = phi i64 [ 0, %60 ], [ %76, %74 ]
  %67 = mul nsw i64 %66, %62
  %68 = getelementptr inbounds i32, i32* %54, i64 %67
  %69 = load i32*, i32** %61, align 8
  %70 = sext i32 %65 to i64
  %71 = mul nsw i64 %66, %70
  %72 = getelementptr inbounds i32, i32* %69, i64 %71
  %73 = icmp sgt i32 %65, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %78, %64
  %75 = phi i32 [ %65, %64 ], [ %84, %78 ]
  %76 = add nuw nsw i64 %66, 1
  %77 = icmp eq i64 %76, %63
  br i1 %77, label %87, label %64

78:                                               ; preds = %64, %78
  %79 = phi i64 [ %83, %78 ], [ 0, %64 ]
  %80 = getelementptr inbounds i32, i32* %72, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds i32, i32* %68, i64 %79
  store i32 %81, i32* %82, align 4
  %83 = add nuw nsw i64 %79, 1
  %84 = load i32, i32* %21, align 4
  %85 = sext i32 %84 to i64
  %86 = icmp slt i64 %83, %85
  br i1 %86, label %78, label %74

87:                                               ; preds = %74, %52
  store i32 %25, i32* %21, align 4
  %88 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 10
  store i32* %54, i32** %88, align 8
  br label %89

89:                                               ; preds = %16, %87
  %90 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0
  %91 = bitcast { %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"*, %"class.v8::internal::compiler::LoopTree::Loop"* }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 32, i1 false)
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %93 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %95 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %94, align 8
  %96 = icmp ult %"struct.v8::internal::compiler::TempLoopInfo"* %93, %95
  %97 = ptrtoint %"struct.v8::internal::compiler::TempLoopInfo"* %95 to i64
  br i1 %96, label %98, label %105

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %93, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %99, align 8
  %100 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %93, i64 0, i32 1
  %101 = bitcast %"struct.v8::internal::compiler::NodeInfo"** %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* nonnull align 8 %91, i64 32, i1 false)
  %102 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %93, i64 1
  %103 = ptrtoint %"struct.v8::internal::compiler::TempLoopInfo"* %102 to i64
  %104 = bitcast %"struct.v8::internal::compiler::TempLoopInfo"** %92 to i64*
  store i64 %103, i64* %104, align 8
  br label %170

105:                                              ; preds = %89
  %106 = ptrtoint %"struct.v8::internal::compiler::TempLoopInfo"* %93 to i64
  %107 = bitcast %"struct.v8::internal::compiler::TempLoopInfo"** %92 to i64*
  %108 = bitcast %"class.std::__1::vector.55"* %90 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %106, %109
  %111 = sdiv exact i64 %110, 40
  %112 = add nsw i64 %111, 1
  %113 = icmp ugt i64 %112, 53687091
  br i1 %113, label %114, label %116

114:                                              ; preds = %105
  %115 = bitcast %"class.std::__1::vector.55"* %90 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %115) #10
  unreachable

116:                                              ; preds = %105
  %117 = bitcast %"struct.v8::internal::compiler::TempLoopInfo"** %94 to i64*
  %118 = sub i64 %97, %109
  %119 = sdiv exact i64 %118, 40
  %120 = icmp ult i64 %119, 26843545
  br i1 %120, label %121, label %126

121:                                              ; preds = %116
  %122 = shl nsw i64 %119, 1
  %123 = icmp ult i64 %122, %112
  %124 = select i1 %123, i64 %112, i64 %122
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %144, label %126

126:                                              ; preds = %121, %116
  %127 = phi i64 [ %124, %121 ], [ 53687091, %116 ]
  %128 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %129 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %128, align 8
  %130 = mul i64 %127, 40
  %131 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %129, i64 0, i32 2
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %129, i64 0, i32 3
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %134, %132
  %136 = icmp ugt i64 %130, %135
  br i1 %136, label %137, label %139, !prof !2

137:                                              ; preds = %126
  %138 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %129, i64 %130) #9
  br label %141

139:                                              ; preds = %126
  %140 = add i64 %132, %130
  store i64 %140, i64* %131, align 8
  br label %141

141:                                              ; preds = %139, %137
  %142 = phi i64 [ %138, %137 ], [ %132, %139 ]
  %143 = inttoptr i64 %142 to %"struct.v8::internal::compiler::TempLoopInfo"*
  br label %144

144:                                              ; preds = %141, %121
  %145 = phi i64 [ %127, %141 ], [ 0, %121 ]
  %146 = phi %"struct.v8::internal::compiler::TempLoopInfo"* [ %143, %141 ], [ null, %121 ]
  %147 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %146, i64 %111
  %148 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %146, i64 %145
  %149 = ptrtoint %"struct.v8::internal::compiler::TempLoopInfo"* %148 to i64
  %150 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %147, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %150, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %146, i64 %111, i32 1
  %152 = bitcast %"struct.v8::internal::compiler::NodeInfo"** %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* nonnull align 8 %91, i64 32, i1 false)
  %153 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %147, i64 1
  %154 = ptrtoint %"struct.v8::internal::compiler::TempLoopInfo"* %153 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %90, i64 0, i32 0, i32 0
  %156 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %155, align 8
  %157 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %92, align 8
  %158 = icmp eq %"struct.v8::internal::compiler::TempLoopInfo"* %157, %156
  br i1 %158, label %167, label %159

159:                                              ; preds = %144, %159
  %160 = phi %"struct.v8::internal::compiler::TempLoopInfo"* [ %162, %159 ], [ %147, %144 ]
  %161 = phi %"struct.v8::internal::compiler::TempLoopInfo"* [ %163, %159 ], [ %157, %144 ]
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %160, i64 -1
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %161, i64 -1
  %164 = bitcast %"struct.v8::internal::compiler::TempLoopInfo"* %162 to i8*
  %165 = bitcast %"struct.v8::internal::compiler::TempLoopInfo"* %163 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 40, i1 false) #9
  %166 = icmp eq %"struct.v8::internal::compiler::TempLoopInfo"* %163, %156
  br i1 %166, label %167, label %159

167:                                              ; preds = %159, %144
  %168 = phi %"struct.v8::internal::compiler::TempLoopInfo"* [ %147, %144 ], [ %162, %159 ]
  %169 = ptrtoint %"struct.v8::internal::compiler::TempLoopInfo"* %168 to i64
  store i64 %169, i64* %108, align 8
  store i64 %154, i64* %107, align 8
  store i64 %149, i64* %117, align 8
  br label %170

170:                                              ; preds = %98, %167
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91)
  %171 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %5, align 8
  %172 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %172) #9
  %173 = bitcast %"class.v8::internal::compiler::LoopTree"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %3, i64 0, i32 0
  store %"class.v8::internal::compiler::LoopTree::Loop"* null, %"class.v8::internal::compiler::LoopTree::Loop"** %175, align 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %3, i64 0, i32 1
  store i32 0, i32* %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %3, i64 0, i32 2
  %178 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %3, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %179 = bitcast %"struct.std::__1::__compressed_pair_elem.10"* %178 to i64*
  %180 = bitcast %"class.v8::internal::ZoneVector"* %177 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 24, i1 false) #9
  store i64 %174, i64* %179, align 8
  %181 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %3, i64 0, i32 3
  %182 = bitcast i32* %181 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 -1, i64 16, i1 false) #9
  %183 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %171, i64 0, i32 2, i32 0, i32 0, i32 1
  %184 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %171, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %186 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %185, align 8
  %187 = icmp ult %"class.v8::internal::compiler::LoopTree::Loop"* %184, %186
  br i1 %187, label %188, label %215

188:                                              ; preds = %170
  %189 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* nonnull align 8 %172, i64 12, i1 false) #9
  %190 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %184, i64 0, i32 2
  %191 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %3, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0
  %192 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %184, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %193 = bitcast %"class.v8::internal::ZoneAllocator"* %191 to i64*
  %194 = bitcast %"struct.std::__1::__compressed_pair_elem.10"* %192 to i64*
  %195 = bitcast %"class.v8::internal::ZoneVector"* %190 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 24, i1 false) #9
  %196 = load i64, i64* %193, align 8
  store i64 %196, i64* %194, align 8
  %197 = bitcast %"class.v8::internal::ZoneVector"* %177 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::ZoneVector"* %190 to i64*
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %201 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %184, i64 0, i32 2, i32 0, i32 0, i32 1
  %204 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %203 to i64*
  store i64 %202, i64* %204, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %3, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %206 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %184, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %209 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %208 to i64*
  store i64 %207, i64* %209, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 24, i1 false) #9
  %210 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %184, i64 0, i32 3
  %211 = bitcast i32* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %182, i64 16, i1 false) #9
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %184, i64 1
  %213 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"* %212 to i64
  %214 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %183 to i64*
  store i64 %213, i64* %214, align 8
  br label %224

215:                                              ; preds = %170
  %216 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %171, i64 0, i32 2, i32 0
  call void @_ZNSt3__16vectorIN2v88internal8compiler8LoopTree4LoopENS2_13ZoneAllocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.12"* %216, %"class.v8::internal::compiler::LoopTree::Loop"* nonnull dereferenceable(64) %3) #9
  %217 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %218 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %217, align 8
  %219 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %218, null
  br i1 %219, label %224, label %220

220:                                              ; preds = %215
  %221 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %218 to i64
  %222 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %223 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %222 to i64*
  store i64 %221, i64* %223, align 8
  br label %224

224:                                              ; preds = %188, %215, %220
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %172) #9
  call void @_ZN2v88internal8compiler14LoopFinderImpl24SetLoopMarkForLoopHeaderEPNS1_4NodeEi(%"class.v8::internal::compiler::LoopFinderImpl"* %0, %"class.v8::internal::compiler::Node"* %1, i32 %19)
  br label %225

225:                                              ; preds = %2, %224
  %226 = phi i32 [ %19, %224 ], [ %14, %2 ]
  ret i32 %226
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %3 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %4 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %5 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.83", align 16
  %7 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, i64 1
  store %"class.v8::internal::compiler::Node"*** %21, %"class.v8::internal::compiler::Node"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %15, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::Node"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::Node"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::Node"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to %"class.v8::internal::compiler::Node"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.46", %"class.v8::internal::RecyclingZoneAllocator.46"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #9
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::Node"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::Node"** %73, %"class.v8::internal::compiler::Node"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #9
  %76 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to %"class.v8::internal::compiler::Node"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.46", %"class.v8::internal::RecyclingZoneAllocator.46"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #9
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::Node"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::Node"** %105, %"class.v8::internal::compiler::Node"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #9
  %106 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #9
  %107 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::Node"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %107, i64 1
  store %"class.v8::internal::compiler::Node"*** %111, %"class.v8::internal::compiler::Node"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #9
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.83"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #9
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"*** null, %"class.v8::internal::compiler::Node"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to %"class.v8::internal::compiler::Node"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !2

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #9
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::Node"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::Node"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"*** %150, %"class.v8::internal::compiler::Node"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %116
  store %"class.v8::internal::compiler::Node"*** %155, %"class.v8::internal::compiler::Node"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to %"class.v8::internal::compiler::Node"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.46", %"class.v8::internal::RecyclingZoneAllocator.46"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !2

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #9
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::Node"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::Node"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #9
  store %"class.v8::internal::compiler::Node"** %185, %"class.v8::internal::compiler::Node"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.83"* nonnull %6, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #9
  %187 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::Node"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::Node"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::Node"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.83"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::Node"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.83"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::Node"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::Node"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::Node"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::Node"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::Node"***
  %210 = icmp eq %"class.v8::internal::compiler::Node"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::Node"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::Node"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 %217
  store %"class.v8::internal::compiler::Node"*** %218, %"class.v8::internal::compiler::Node"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::Node"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %211, %"class.v8::internal::compiler::Node"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #9
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::Node"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.83"* nonnull %6, %"class.v8::internal::compiler::Node"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::Node"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #9
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #9
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !78

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #9
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #9
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !79

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #9
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to %"class.v8::internal::compiler::Node"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #9
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  %76 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::Node"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::Node"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::Node"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !80

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::Node"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::Node"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::Node"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::Node"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %173, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::Node"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %200, i64 -1
  store %"class.v8::internal::compiler::Node"*** %201, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.83"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::Node"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #9
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %22
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.83"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to %"class.v8::internal::compiler::Node"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #9
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::Node"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::Node"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::Node"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::Node"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::Node"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !81

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::Node"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::Node"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::Node"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::Node"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::Node"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %170, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %197, i64 1
  store %"class.v8::internal::compiler::Node"*** %198, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.83"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #9
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.83"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.83", %"struct.std::__1::__split_buffer.83"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to %"class.v8::internal::compiler::Node"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !2

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #9
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::Node"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::Node"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::Node"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::Node"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::Node"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !82

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::Node"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::Node"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::Node"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::Node"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::Node"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::Node"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::Node"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %171, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::Node"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %198, i64 -1
  store %"class.v8::internal::compiler::Node"*** %199, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14LoopFinderImpl24SetLoopMarkForLoopHeaderEPNS1_4NodeEi(%"class.v8::internal::compiler::LoopFinderImpl"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %9, i64 %7, i32 0
  %11 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::Node"* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %10, align 8
  %14 = load i32, i32* %4, align 4
  %15 = and i32 %14, 16777215
  br label %16

16:                                               ; preds = %3, %13
  %17 = phi i32 [ %6, %3 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 10
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 9
  %21 = load i32, i32* %20, align 4
  %22 = mul i32 %21, %17
  %23 = ashr i32 %2, 5
  %24 = add i32 %22, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %19, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %2, 31
  %29 = shl i32 1, %28
  %30 = or i32 %27, %29
  store i32 %30, i32* %26, align 4
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %32 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %31, align 8
  %33 = load i32, i32* %4, align 4
  %34 = and i32 %33, 16777215
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 %35
  store i32 %2, i32* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %40 = bitcast %"struct.v8::internal::compiler::Node::Use"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %16
  %44 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %45 = add i64 %44, 32
  %46 = inttoptr i64 %45 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  br label %48

47:                                               ; preds = %212, %16
  ret void

48:                                               ; preds = %43, %212
  %49 = phi i64 [ %41, %43 ], [ %214, %212 ]
  %50 = inttoptr i64 %49 to %"struct.v8::internal::compiler::Node::Use"*
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %50, i64 1
  %52 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %50, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = lshr i32 %53, 1
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %51, i64 %55
  %57 = and i32 %53, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %48
  %60 = bitcast %"struct.v8::internal::compiler::Node::Use"* %56 to %"class.v8::internal::compiler::Node"*
  br label %64

61:                                               ; preds = %48
  %62 = bitcast %"struct.v8::internal::compiler::Node::Use"* %56 to %"class.v8::internal::compiler::Node"**
  %63 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %62, align 8
  br label %64

64:                                               ; preds = %59, %61
  %65 = phi %"class.v8::internal::compiler::Node"* [ %60, %59 ], [ %63, %61 ]
  %66 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %65, i64 0, i32 0
  %67 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %67, i64 0, i32 2
  %69 = load i16, i16* %68, align 8
  %70 = zext i16 %69 to i32
  %71 = add nsw i32 %70, -35
  %72 = icmp ult i32 %71, 2
  br i1 %72, label %73, label %102

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %65, i64 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 16777215
  %77 = zext i32 %76 to i64
  %78 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %8, align 8
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %78, i64 %77, i32 0
  %80 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %79, align 8
  %81 = icmp eq %"class.v8::internal::compiler::Node"* %80, null
  br i1 %81, label %82, label %85

82:                                               ; preds = %73
  store %"class.v8::internal::compiler::Node"* %65, %"class.v8::internal::compiler::Node"** %79, align 8
  %83 = load i32, i32* %74, align 4
  %84 = and i32 %83, 16777215
  br label %85

85:                                               ; preds = %73, %82
  %86 = phi i32 [ %76, %73 ], [ %84, %82 ]
  %87 = load i32*, i32** %18, align 8
  %88 = load i32, i32* %20, align 4
  %89 = mul i32 %88, %86
  %90 = add i32 %89, %23
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %87, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = or i32 %93, %29
  store i32 %94, i32* %92, align 4
  %95 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %31, align 8
  %96 = load i32, i32* %74, align 4
  %97 = and i32 %96, 16777215
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %95, i64 0, i32 3, i32 0, i32 0, i32 0
  %100 = load i32*, i32** %99, align 8
  %101 = getelementptr inbounds i32, i32* %100, i64 %98
  store i32 %2, i32* %101, align 4
  br label %102

102:                                              ; preds = %85, %64
  %103 = load i32, i32* %4, align 4
  %104 = and i32 %103, 251658240
  %105 = icmp eq i32 %104, 251658240
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  %107 = lshr i32 %103, 24
  %108 = and i32 %107, 15
  br label %113

109:                                              ; preds = %102
  %110 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %46, align 8
  %111 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %110, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  br label %113

113:                                              ; preds = %106, %109
  %114 = phi i32 [ %108, %106 ], [ %112, %109 ]
  %115 = icmp slt i32 %114, 2
  br i1 %115, label %212, label %116

116:                                              ; preds = %113
  %117 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %66, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %117, i64 0, i32 2
  %119 = load i16, i16* %118, align 8
  %120 = icmp eq i16 %119, 52
  br i1 %120, label %121, label %212

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %65, i64 0, i32 3
  %123 = load i32, i32* %122, align 4
  %124 = and i32 %123, 16777215
  %125 = zext i32 %124 to i64
  %126 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %8, align 8
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %126, i64 %125, i32 0
  %128 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, align 8
  %129 = icmp eq %"class.v8::internal::compiler::Node"* %128, null
  br i1 %129, label %130, label %133

130:                                              ; preds = %121
  store %"class.v8::internal::compiler::Node"* %65, %"class.v8::internal::compiler::Node"** %127, align 8
  %131 = load i32, i32* %122, align 4
  %132 = and i32 %131, 16777215
  br label %133

133:                                              ; preds = %121, %130
  %134 = phi i32 [ %124, %121 ], [ %132, %130 ]
  %135 = load i32*, i32** %18, align 8
  %136 = load i32, i32* %20, align 4
  %137 = mul i32 %136, %134
  %138 = add i32 %137, %23
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds i32, i32* %135, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = or i32 %141, %29
  store i32 %142, i32* %140, align 4
  %143 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %31, align 8
  %144 = load i32, i32* %122, align 4
  %145 = and i32 %144, 16777215
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %143, i64 0, i32 3, i32 0, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 %146
  store i32 %2, i32* %149, align 4
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %65, i64 0, i32 4
  %151 = bitcast %"struct.v8::internal::compiler::Node::Use"** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %212, label %154

154:                                              ; preds = %133, %208
  %155 = phi i64 [ %210, %208 ], [ %152, %133 ]
  %156 = inttoptr i64 %155 to %"struct.v8::internal::compiler::Node::Use"*
  %157 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %156, i64 1
  %158 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %156, i64 0, i32 2
  %159 = load i32, i32* %158, align 8
  %160 = lshr i32 %159, 1
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %157, i64 %161
  %163 = and i32 %159, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %154
  %166 = bitcast %"struct.v8::internal::compiler::Node::Use"* %162 to %"class.v8::internal::compiler::Node"*
  br label %170

167:                                              ; preds = %154
  %168 = bitcast %"struct.v8::internal::compiler::Node::Use"* %162 to %"class.v8::internal::compiler::Node"**
  %169 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, align 8
  br label %170

170:                                              ; preds = %165, %167
  %171 = phi %"class.v8::internal::compiler::Node"* [ %166, %165 ], [ %169, %167 ]
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %171, i64 0, i32 0
  %173 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %173, i64 0, i32 2
  %175 = load i16, i16* %174, align 8
  %176 = zext i16 %175 to i32
  %177 = add nsw i32 %176, -53
  %178 = icmp ult i32 %177, 2
  br i1 %178, label %179, label %208

179:                                              ; preds = %170
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %171, i64 0, i32 3
  %181 = load i32, i32* %180, align 4
  %182 = and i32 %181, 16777215
  %183 = zext i32 %182 to i64
  %184 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %8, align 8
  %185 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %184, i64 %183, i32 0
  %186 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %185, align 8
  %187 = icmp eq %"class.v8::internal::compiler::Node"* %186, null
  br i1 %187, label %188, label %191

188:                                              ; preds = %179
  store %"class.v8::internal::compiler::Node"* %171, %"class.v8::internal::compiler::Node"** %185, align 8
  %189 = load i32, i32* %180, align 4
  %190 = and i32 %189, 16777215
  br label %191

191:                                              ; preds = %179, %188
  %192 = phi i32 [ %182, %179 ], [ %190, %188 ]
  %193 = load i32*, i32** %18, align 8
  %194 = load i32, i32* %20, align 4
  %195 = mul i32 %194, %192
  %196 = add i32 %195, %23
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds i32, i32* %193, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = or i32 %199, %29
  store i32 %200, i32* %198, align 4
  %201 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %31, align 8
  %202 = load i32, i32* %180, align 4
  %203 = and i32 %202, 16777215
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %201, i64 0, i32 3, i32 0, i32 0, i32 0
  %206 = load i32*, i32** %205, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %204
  store i32 %2, i32* %207, align 4
  br label %208

208:                                              ; preds = %170, %191
  %209 = inttoptr i64 %155 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %154

212:                                              ; preds = %208, %133, %116, %113
  %213 = inttoptr i64 %49 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %47, label %48
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal8compiler8LoopTree4LoopENS2_13ZoneAllocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.12"*, %"class.v8::internal::compiler::LoopTree::Loop"* dereferenceable(64)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 33554431
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 16777215
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 33554431, %14 ]
  %28 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %29 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, align 8
  %30 = shl i64 %27, 6
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ugt i64 %30, %35
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %26
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %29, i64 %30) #9
  br label %41

39:                                               ; preds = %26
  %40 = add i64 %32, %30
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::compiler::LoopTree::Loop"*
  br label %44

44:                                               ; preds = %21, %41
  %45 = phi i64 [ %27, %41 ], [ 0, %21 ]
  %46 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %43, %41 ], [ null, %21 ]
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %46, i64 %9
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %46, i64 %45
  %49 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"* %48 to i64
  %50 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"* %47 to i8*
  %51 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 12, i1 false) #9
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %46, i64 %9, i32 2
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 2
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0
  %55 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %46, i64 %9, i32 2, i32 0, i32 0, i32 2, i32 1
  %56 = bitcast %"class.v8::internal::ZoneAllocator"* %54 to i64*
  %57 = bitcast %"struct.std::__1::__compressed_pair_elem.10"* %55 to i64*
  %58 = bitcast %"class.v8::internal::ZoneVector"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #9
  %59 = load i64, i64* %56, align 8
  store i64 %59, i64* %57, align 8
  %60 = bitcast %"class.v8::internal::ZoneVector"* %53 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.v8::internal::ZoneVector"* %52 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %64 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %46, i64 %9, i32 2, i32 0, i32 0, i32 1
  %67 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %46, i64 %9, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = bitcast %"class.v8::internal::ZoneVector"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #9
  %74 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %46, i64 %9, i32 3
  %75 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 3
  %76 = bitcast i32* %74 to i8*
  %77 = bitcast i32* %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 16, i1 false) #9
  %78 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %47, i64 1
  %79 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"* %78 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %81 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %80, align 8
  %82 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %3, align 8
  %83 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"* %82, %81
  br i1 %83, label %84, label %86

84:                                               ; preds = %44
  %85 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"* %81 to i64
  br label %123

86:                                               ; preds = %44, %86
  %87 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %89, %86 ], [ %47, %44 ]
  %88 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %90, %86 ], [ %82, %44 ]
  %89 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %87, i64 -1
  %90 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %88, i64 -1
  %91 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"* %89 to i8*
  %92 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 12, i1 false) #9
  %93 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %87, i64 -1, i32 2
  %94 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %88, i64 -1, i32 2
  %95 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %88, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0
  %96 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %87, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 1
  %97 = bitcast %"class.v8::internal::ZoneAllocator"* %95 to i64*
  %98 = bitcast %"struct.std::__1::__compressed_pair_elem.10"* %96 to i64*
  %99 = bitcast %"class.v8::internal::ZoneVector"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #9
  %100 = load i64, i64* %97, align 8
  store i64 %100, i64* %98, align 8
  %101 = bitcast %"class.v8::internal::ZoneVector"* %94 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.v8::internal::ZoneVector"* %93 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %88, i64 -1, i32 2, i32 0, i32 0, i32 1
  %105 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %87, i64 -1, i32 2, i32 0, i32 0, i32 1
  %108 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %88, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %110 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %87, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %112 to i64*
  store i64 %111, i64* %113, align 8
  %114 = bitcast %"class.v8::internal::ZoneVector"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 24, i1 false) #9
  %115 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %87, i64 -1, i32 3
  %116 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %88, i64 -1, i32 3
  %117 = bitcast i32* %115 to i8*
  %118 = bitcast i32* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #9
  %119 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"* %90, %81
  br i1 %119, label %120, label %86

120:                                              ; preds = %86
  %121 = load i64, i64* %6, align 8
  %122 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %3, align 8
  br label %123

123:                                              ; preds = %84, %120
  %124 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %81, %84 ], [ %122, %120 ]
  %125 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %47, %84 ], [ %89, %120 ]
  %126 = phi i64 [ %85, %84 ], [ %121, %120 ]
  %127 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"* %125 to i64
  store i64 %127, i64* %6, align 8
  store i64 %79, i64* %4, align 8
  store i64 %49, i64* %16, align 8
  %128 = inttoptr i64 %126 to %"class.v8::internal::compiler::LoopTree::Loop"*
  %129 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"* %124, %128
  br i1 %129, label %170, label %130

130:                                              ; preds = %123
  %131 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %124, i64 -1, i32 0
  %132 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %131 to i8*
  %133 = sub i64 0, %126
  %134 = getelementptr i8, i8* %132, i64 %133
  %135 = ptrtoint i8* %134 to i64
  %136 = lshr i64 %135, 6
  %137 = add nuw nsw i64 %136, 1
  %138 = and i64 %137, 3
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %154, label %140

140:                                              ; preds = %130, %151
  %141 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %143, %151 ], [ %124, %130 ]
  %142 = phi i64 [ %152, %151 ], [ %138, %130 ]
  %143 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %141, i64 -1
  %144 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %141, i64 -1, i32 2, i32 0, i32 0, i32 0
  %145 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %144, align 8
  %146 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %140
  %148 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %145 to i64
  %149 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %141, i64 -1, i32 2, i32 0, i32 0, i32 1
  %150 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %149 to i64*
  store i64 %148, i64* %150, align 8
  br label %151

151:                                              ; preds = %147, %140
  %152 = add i64 %142, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %140, !llvm.loop !83

154:                                              ; preds = %151, %130
  %155 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %124, %130 ], [ %143, %151 ]
  %156 = icmp ult i8* %134, inttoptr (i64 192 to i8*)
  br i1 %156, label %170, label %157

157:                                              ; preds = %154, %192
  %158 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %184, %192 ], [ %155, %154 ]
  %159 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %158, i64 -1, i32 2, i32 0, i32 0, i32 0
  %160 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %159, align 8
  %161 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %160, null
  br i1 %161, label %166, label %162

162:                                              ; preds = %157
  %163 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %160 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %158, i64 -1, i32 2, i32 0, i32 0, i32 1
  %165 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %164 to i64*
  store i64 %163, i64* %165, align 8
  br label %166

166:                                              ; preds = %162, %157
  %167 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %158, i64 -2, i32 2, i32 0, i32 0, i32 0
  %168 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %167, align 8
  %169 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %168, null
  br i1 %169, label %175, label %171

170:                                              ; preds = %154, %192, %123
  ret void

171:                                              ; preds = %166
  %172 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %168 to i64
  %173 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %158, i64 -2, i32 2, i32 0, i32 0, i32 1
  %174 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %173 to i64*
  store i64 %172, i64* %174, align 8
  br label %175

175:                                              ; preds = %171, %166
  %176 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %158, i64 -3, i32 2, i32 0, i32 0, i32 0
  %177 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %176, align 8
  %178 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %177, null
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %177 to i64
  %181 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %158, i64 -3, i32 2, i32 0, i32 0, i32 1
  %182 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %181 to i64*
  store i64 %180, i64* %182, align 8
  br label %183

183:                                              ; preds = %179, %175
  %184 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %158, i64 -4
  %185 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %158, i64 -4, i32 2, i32 0, i32 0, i32 0
  %186 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %185, align 8
  %187 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %186, null
  br i1 %187, label %192, label %188

188:                                              ; preds = %183
  %189 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %186 to i64
  %190 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %158, i64 -4, i32 2, i32 0, i32 0, i32 1
  %191 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %190 to i64*
  store i64 %189, i64* %191, align 8
  br label %192

192:                                              ; preds = %188, %183
  %193 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"* %184, %128
  br i1 %193, label %170, label %157
}

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14LoopFinderImpl16FinishSingleLoopEv(%"class.v8::internal::compiler::LoopFinderImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %5 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %3, i64 0, i32 4
  store %"class.v8::internal::compiler::LoopTree::Loop"* %7, %"class.v8::internal::compiler::LoopTree::Loop"** %8, align 8
  %9 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %4, align 8
  %10 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"* %7 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %9, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %9, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %9, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %14, align 8
  %16 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %15 to i64
  br i1 %16, label %23, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %13 to i64*
  store i64 %10, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %13, i64 1
  %21 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %20 to i64
  %22 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %12 to i64*
  store i64 %21, i64* %22, align 8
  br label %248

23:                                               ; preds = %1
  %24 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %13 to i64
  %25 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %12 to i64*
  %26 = bitcast %"class.std::__1::vector"* %11 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 268435455
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #10
  unreachable

34:                                               ; preds = %23
  %35 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %14 to i64*
  %36 = sub i64 %17, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 134217727
  br i1 %38, label %39, label %44

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %62, label %44

44:                                               ; preds = %39, %34
  %45 = phi i64 [ %42, %39 ], [ 268435455, %34 ]
  %46 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %9, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %47 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %46, align 8
  %48 = shl i64 %45, 3
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %52, %50
  %54 = icmp ugt i64 %48, %53
  br i1 %54, label %55, label %57, !prof !2

55:                                               ; preds = %44
  %56 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %47, i64 %48) #9
  br label %59

57:                                               ; preds = %44
  %58 = add i64 %50, %48
  store i64 %58, i64* %49, align 8
  br label %59

59:                                               ; preds = %57, %55
  %60 = phi i64 [ %56, %55 ], [ %50, %57 ]
  %61 = inttoptr i64 %60 to %"class.v8::internal::compiler::LoopTree::Loop"**
  br label %62

62:                                               ; preds = %59, %39
  %63 = phi i64 [ %45, %59 ], [ 0, %39 ]
  %64 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %61, %59 ], [ null, %39 ]
  %65 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %64, i64 %29
  %66 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %64, i64 %63
  %67 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %66 to i64
  %68 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %65 to i64*
  store i64 %10, i64* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %65, i64 1
  %70 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %72 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %71, align 8
  %73 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %72 to i64
  %74 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %12, align 8
  %75 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %74, %72
  br i1 %75, label %245, label %76

76:                                               ; preds = %62
  %77 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %74, i64 -1
  %78 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %77 to i64
  %79 = sub i64 %78, %73
  %80 = lshr i64 %79, 3
  %81 = add nuw nsw i64 %80, 1
  %82 = icmp ult i64 %81, 4
  br i1 %82, label %175, label %83

83:                                               ; preds = %76
  %84 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %74, i64 -1
  %85 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %84 to i64
  %86 = sub i64 %85, %73
  %87 = lshr i64 %86, 3
  %88 = xor i64 %87, -1
  %89 = add nsw i64 %29, %88
  %90 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %64, i64 %89
  %91 = xor i64 %87, -1
  %92 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %74, i64 %91
  %93 = icmp ult %"class.v8::internal::compiler::LoopTree::Loop"** %90, %74
  %94 = icmp ult %"class.v8::internal::compiler::LoopTree::Loop"** %92, %65
  %95 = and i1 %93, %94
  br i1 %95, label %175, label %96

96:                                               ; preds = %83
  %97 = and i64 %81, 4611686018427387900
  %98 = sub nsw i64 0, %97
  %99 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %65, i64 %98
  %100 = sub nsw i64 0, %97
  %101 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %74, i64 %100
  %102 = add nsw i64 %97, -4
  %103 = lshr exact i64 %102, 2
  %104 = add nuw nsw i64 %103, 1
  %105 = and i64 %104, 1
  %106 = icmp eq i64 %102, 0
  br i1 %106, label %151, label %107

107:                                              ; preds = %96
  %108 = sub nuw nsw i64 %104, %105
  %109 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %65, i64 -1
  %110 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %74, i64 -1
  %111 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %65, i64 -1
  %112 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %74, i64 -1
  br label %113

113:                                              ; preds = %113, %107
  %114 = phi i64 [ 0, %107 ], [ %148, %113 ]
  %115 = phi i64 [ %108, %107 ], [ %149, %113 ]
  %116 = sub i64 0, %114
  %117 = sub i64 0, %114
  %118 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %109, i64 %116
  %119 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %110, i64 %117
  %120 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %119, i64 -1
  %121 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !84
  %123 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %119, i64 -2
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %123, i64 -1
  %125 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !84
  %127 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %118, i64 -1
  %128 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %127 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %128, align 8, !alias.scope !87, !noalias !84
  %129 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %118, i64 -2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %129, i64 -1
  %131 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %130 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %131, align 8, !alias.scope !87, !noalias !84
  %132 = sub nuw nsw i64 -4, %114
  %133 = sub nuw nsw i64 -4, %114
  %134 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %111, i64 %132
  %135 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %112, i64 %133
  %136 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %135, i64 -1
  %137 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %136 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 8, !alias.scope !84
  %139 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %135, i64 -2
  %140 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %139, i64 -1
  %141 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !84
  %143 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %134, i64 -1
  %144 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %143 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %144, align 8, !alias.scope !87, !noalias !84
  %145 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %134, i64 -2
  %146 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %145, i64 -1
  %147 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %146 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %147, align 8, !alias.scope !87, !noalias !84
  %148 = add i64 %114, 8
  %149 = add i64 %115, -2
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %113, !llvm.loop !89

151:                                              ; preds = %113, %96
  %152 = phi i64 [ 0, %96 ], [ %148, %113 ]
  %153 = icmp eq i64 %105, 0
  br i1 %153, label %173, label %154

154:                                              ; preds = %151
  %155 = sub i64 0, %152
  %156 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %65, i64 -1
  %157 = sub i64 0, %152
  %158 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %74, i64 -1
  %159 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %156, i64 %155
  %160 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %158, i64 %157
  %161 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %160, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %161 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8, !alias.scope !84
  %164 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %160, i64 -2
  %165 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %164, i64 -1
  %166 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !84
  %168 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %159, i64 -1
  %169 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %168 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %169, align 8, !alias.scope !87, !noalias !84
  %170 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %159, i64 -2
  %171 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %170, i64 -1
  %172 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %171 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %172, align 8, !alias.scope !87, !noalias !84
  br label %173

173:                                              ; preds = %151, %154
  %174 = icmp eq i64 %81, %97
  br i1 %174, label %245, label %175

175:                                              ; preds = %173, %83, %76
  %176 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %65, %83 ], [ %65, %76 ], [ %99, %173 ]
  %177 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %74, %83 ], [ %74, %76 ], [ %101, %173 ]
  %178 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %177, i64 -1
  %179 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %178 to i64
  %180 = sub i64 %179, %73
  %181 = lshr i64 %180, 3
  %182 = add nuw nsw i64 %181, 1
  %183 = and i64 %182, 7
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %196, label %185

185:                                              ; preds = %175, %185
  %186 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %189, %185 ], [ %176, %175 ]
  %187 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %190, %185 ], [ %177, %175 ]
  %188 = phi i64 [ %194, %185 ], [ %183, %175 ]
  %189 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %186, i64 -1
  %190 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %187, i64 -1
  %191 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %189 to i64*
  store i64 %192, i64* %193, align 8
  %194 = add i64 %188, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %185, !llvm.loop !90

196:                                              ; preds = %185, %175
  %197 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ undef, %175 ], [ %189, %185 ]
  %198 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %176, %175 ], [ %189, %185 ]
  %199 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %177, %175 ], [ %190, %185 ]
  %200 = icmp ult i64 %180, 56
  br i1 %200, label %245, label %201

201:                                              ; preds = %196, %201
  %202 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %239, %201 ], [ %198, %196 ]
  %203 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %240, %201 ], [ %199, %196 ]
  %204 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %202, i64 -1
  %205 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %203, i64 -1
  %206 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %204 to i64*
  store i64 %207, i64* %208, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %202, i64 -2
  %210 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %203, i64 -2
  %211 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %209 to i64*
  store i64 %212, i64* %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %202, i64 -3
  %215 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %203, i64 -3
  %216 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %214 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %202, i64 -4
  %220 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %203, i64 -4
  %221 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %202, i64 -5
  %225 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %203, i64 -5
  %226 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %224 to i64*
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %202, i64 -6
  %230 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %203, i64 -6
  %231 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %229 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %202, i64 -7
  %235 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %203, i64 -7
  %236 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %202, i64 -8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %203, i64 -8
  %241 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %239 to i64*
  store i64 %242, i64* %243, align 8
  %244 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %240, %72
  br i1 %244, label %245, label %201, !llvm.loop !91

245:                                              ; preds = %196, %201, %173, %62
  %246 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %65, %62 ], [ %99, %173 ], [ %197, %196 ], [ %239, %201 ]
  %247 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %246 to i64
  store i64 %247, i64* %26, align 8
  store i64 %70, i64* %25, align 8
  store i64 %67, i64* %35, align 8
  br label %248

248:                                              ; preds = %18, %245
  %249 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %250 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %249, align 8
  %251 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %252 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %251, align 8
  %253 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %250, %252
  br i1 %253, label %261, label %254

254:                                              ; preds = %248
  %255 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 9
  %256 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 10
  %257 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 11
  %258 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %3, i64 0, i32 3
  %259 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %3, i64 0, i32 2
  %260 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %3, i64 0, i32 1
  br label %480

261:                                              ; preds = %533, %248
  %262 = phi i64 [ 0, %248 ], [ %534, %533 ]
  %263 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %4, align 8
  %264 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %263, i64 0, i32 4, i32 0
  %265 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %263, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %266 = bitcast %"class.v8::internal::compiler::Node"*** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.std::__1::vector.26"* %264 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = sub i64 %267, %269
  %271 = ashr exact i64 %270, 3
  %272 = icmp ult i64 %271, %262
  br i1 %272, label %273, label %478

273:                                              ; preds = %261
  %274 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %263, i64 0, i32 4, i32 0, i32 0, i32 1
  %275 = bitcast %"class.v8::internal::compiler::Node"*** %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = sub i64 %276, %269
  %278 = ashr exact i64 %277, 3
  %279 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %263, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %280 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %279, align 8
  %281 = shl i64 %262, 3
  %282 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %280, i64 0, i32 2
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %280, i64 0, i32 3
  %285 = load i64, i64* %284, align 8
  %286 = sub i64 %285, %283
  %287 = icmp ugt i64 %281, %286
  br i1 %287, label %288, label %290, !prof !2

288:                                              ; preds = %273
  %289 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %280, i64 %281) #9
  br label %292

290:                                              ; preds = %273
  %291 = add i64 %283, %281
  store i64 %291, i64* %282, align 8
  br label %292

292:                                              ; preds = %290, %288
  %293 = phi i64 [ %289, %288 ], [ %283, %290 ]
  %294 = inttoptr i64 %293 to %"class.v8::internal::compiler::Node"**
  %295 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %294, i64 %278
  %296 = ptrtoint %"class.v8::internal::compiler::Node"** %295 to i64
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %294, i64 %262
  %298 = ptrtoint %"class.v8::internal::compiler::Node"** %297 to i64
  %299 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %264, i64 0, i32 0, i32 0
  %300 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %299, align 8
  %301 = ptrtoint %"class.v8::internal::compiler::Node"** %300 to i64
  %302 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %274, align 8
  %303 = icmp eq %"class.v8::internal::compiler::Node"** %302, %300
  br i1 %303, label %476, label %304

304:                                              ; preds = %292
  %305 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %302, i64 -1
  %306 = ptrtoint %"class.v8::internal::compiler::Node"** %305 to i64
  %307 = sub i64 %306, %301
  %308 = lshr i64 %307, 3
  %309 = add nuw nsw i64 %308, 1
  %310 = icmp ult i64 %309, 4
  br i1 %310, label %403, label %311

311:                                              ; preds = %304
  %312 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %302, i64 -1
  %313 = ptrtoint %"class.v8::internal::compiler::Node"** %312 to i64
  %314 = sub i64 %313, %301
  %315 = lshr i64 %314, 3
  %316 = xor i64 %315, -1
  %317 = add nsw i64 %278, %316
  %318 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %294, i64 %317
  %319 = xor i64 %315, -1
  %320 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %302, i64 %319
  %321 = icmp ult %"class.v8::internal::compiler::Node"** %318, %302
  %322 = icmp ult %"class.v8::internal::compiler::Node"** %320, %295
  %323 = and i1 %321, %322
  br i1 %323, label %403, label %324

324:                                              ; preds = %311
  %325 = and i64 %309, 4611686018427387900
  %326 = sub nsw i64 0, %325
  %327 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %295, i64 %326
  %328 = sub nsw i64 0, %325
  %329 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %302, i64 %328
  %330 = add nsw i64 %325, -4
  %331 = lshr exact i64 %330, 2
  %332 = add nuw nsw i64 %331, 1
  %333 = and i64 %332, 1
  %334 = icmp eq i64 %330, 0
  br i1 %334, label %381, label %335

335:                                              ; preds = %324
  %336 = sub nuw nsw i64 %332, %333
  %337 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %295, i64 -1
  %338 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %302, i64 -1
  %339 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %295, i64 -1
  %340 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %302, i64 -1
  br label %341

341:                                              ; preds = %341, %335
  %342 = phi i64 [ 0, %335 ], [ %376, %341 ]
  %343 = phi i64 [ %336, %335 ], [ %377, %341 ]
  %344 = sub i64 0, %342
  %345 = sub i64 0, %342
  %346 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %337, i64 %344
  %347 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %338, i64 %345
  %348 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %347, i64 -1
  %349 = bitcast %"class.v8::internal::compiler::Node"** %348 to <2 x i64>*
  %350 = load <2 x i64>, <2 x i64>* %349, align 8, !alias.scope !92
  %351 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %347, i64 -2
  %352 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %351, i64 -1
  %353 = bitcast %"class.v8::internal::compiler::Node"** %352 to <2 x i64>*
  %354 = load <2 x i64>, <2 x i64>* %353, align 8, !alias.scope !92
  %355 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 -1
  %356 = bitcast %"class.v8::internal::compiler::Node"** %355 to <2 x i64>*
  store <2 x i64> %350, <2 x i64>* %356, align 8, !alias.scope !95, !noalias !92
  %357 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 -2
  %358 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %357, i64 -1
  %359 = bitcast %"class.v8::internal::compiler::Node"** %358 to <2 x i64>*
  store <2 x i64> %354, <2 x i64>* %359, align 8, !alias.scope !95, !noalias !92
  %360 = sub nuw nsw i64 -4, %342
  %361 = sub nuw nsw i64 -4, %342
  %362 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %339, i64 %360
  %363 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %340, i64 %361
  %364 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 -1
  %365 = bitcast %"class.v8::internal::compiler::Node"** %364 to <2 x i64>*
  %366 = load <2 x i64>, <2 x i64>* %365, align 8, !alias.scope !92
  %367 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %363, i64 -2
  %368 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %367, i64 -1
  %369 = bitcast %"class.v8::internal::compiler::Node"** %368 to <2 x i64>*
  %370 = load <2 x i64>, <2 x i64>* %369, align 8, !alias.scope !92
  %371 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %362, i64 -1
  %372 = bitcast %"class.v8::internal::compiler::Node"** %371 to <2 x i64>*
  store <2 x i64> %366, <2 x i64>* %372, align 8, !alias.scope !95, !noalias !92
  %373 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %362, i64 -2
  %374 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %373, i64 -1
  %375 = bitcast %"class.v8::internal::compiler::Node"** %374 to <2 x i64>*
  store <2 x i64> %370, <2 x i64>* %375, align 8, !alias.scope !95, !noalias !92
  %376 = add i64 %342, 8
  %377 = add i64 %343, -2
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %341, !llvm.loop !97

379:                                              ; preds = %341
  %380 = sub nuw nsw i64 -8, %342
  br label %381

381:                                              ; preds = %379, %324
  %382 = phi i64 [ 0, %324 ], [ %380, %379 ]
  %383 = icmp eq i64 %333, 0
  br i1 %383, label %401, label %384

384:                                              ; preds = %381
  %385 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %295, i64 -1
  %386 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %302, i64 -1
  %387 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %385, i64 %382
  %388 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %386, i64 %382
  %389 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %388, i64 -1
  %390 = bitcast %"class.v8::internal::compiler::Node"** %389 to <2 x i64>*
  %391 = load <2 x i64>, <2 x i64>* %390, align 8, !alias.scope !92
  %392 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %388, i64 -2
  %393 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %392, i64 -1
  %394 = bitcast %"class.v8::internal::compiler::Node"** %393 to <2 x i64>*
  %395 = load <2 x i64>, <2 x i64>* %394, align 8, !alias.scope !92
  %396 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %387, i64 -1
  %397 = bitcast %"class.v8::internal::compiler::Node"** %396 to <2 x i64>*
  store <2 x i64> %391, <2 x i64>* %397, align 8, !alias.scope !95, !noalias !92
  %398 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %387, i64 -2
  %399 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %398, i64 -1
  %400 = bitcast %"class.v8::internal::compiler::Node"** %399 to <2 x i64>*
  store <2 x i64> %395, <2 x i64>* %400, align 8, !alias.scope !95, !noalias !92
  br label %401

401:                                              ; preds = %381, %384
  %402 = icmp eq i64 %309, %325
  br i1 %402, label %473, label %403

403:                                              ; preds = %401, %311, %304
  %404 = phi %"class.v8::internal::compiler::Node"** [ %295, %311 ], [ %295, %304 ], [ %327, %401 ]
  %405 = phi %"class.v8::internal::compiler::Node"** [ %302, %311 ], [ %302, %304 ], [ %329, %401 ]
  %406 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %407 = ptrtoint %"class.v8::internal::compiler::Node"** %406 to i64
  %408 = sub i64 %407, %301
  %409 = lshr i64 %408, 3
  %410 = add nuw nsw i64 %409, 1
  %411 = and i64 %410, 7
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %424, label %413

413:                                              ; preds = %403, %413
  %414 = phi %"class.v8::internal::compiler::Node"** [ %417, %413 ], [ %404, %403 ]
  %415 = phi %"class.v8::internal::compiler::Node"** [ %418, %413 ], [ %405, %403 ]
  %416 = phi i64 [ %422, %413 ], [ %411, %403 ]
  %417 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %414, i64 -1
  %418 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %415, i64 -1
  %419 = bitcast %"class.v8::internal::compiler::Node"** %418 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = bitcast %"class.v8::internal::compiler::Node"** %417 to i64*
  store i64 %420, i64* %421, align 8
  %422 = add i64 %416, -1
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %424, label %413, !llvm.loop !98

424:                                              ; preds = %413, %403
  %425 = phi %"class.v8::internal::compiler::Node"** [ undef, %403 ], [ %417, %413 ]
  %426 = phi %"class.v8::internal::compiler::Node"** [ %404, %403 ], [ %417, %413 ]
  %427 = phi %"class.v8::internal::compiler::Node"** [ %405, %403 ], [ %418, %413 ]
  %428 = icmp ult i64 %408, 56
  br i1 %428, label %473, label %429

429:                                              ; preds = %424, %429
  %430 = phi %"class.v8::internal::compiler::Node"** [ %467, %429 ], [ %426, %424 ]
  %431 = phi %"class.v8::internal::compiler::Node"** [ %468, %429 ], [ %427, %424 ]
  %432 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -1
  %433 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 -1
  %434 = bitcast %"class.v8::internal::compiler::Node"** %433 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = bitcast %"class.v8::internal::compiler::Node"** %432 to i64*
  store i64 %435, i64* %436, align 8
  %437 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -2
  %438 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 -2
  %439 = bitcast %"class.v8::internal::compiler::Node"** %438 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = bitcast %"class.v8::internal::compiler::Node"** %437 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -3
  %443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 -3
  %444 = bitcast %"class.v8::internal::compiler::Node"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.v8::internal::compiler::Node"** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -4
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 -4
  %449 = bitcast %"class.v8::internal::compiler::Node"** %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = bitcast %"class.v8::internal::compiler::Node"** %447 to i64*
  store i64 %450, i64* %451, align 8
  %452 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -5
  %453 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 -5
  %454 = bitcast %"class.v8::internal::compiler::Node"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.v8::internal::compiler::Node"** %452 to i64*
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -6
  %458 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 -6
  %459 = bitcast %"class.v8::internal::compiler::Node"** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.v8::internal::compiler::Node"** %457 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -7
  %463 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 -7
  %464 = bitcast %"class.v8::internal::compiler::Node"** %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.v8::internal::compiler::Node"** %462 to i64*
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -8
  %468 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 -8
  %469 = bitcast %"class.v8::internal::compiler::Node"** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.v8::internal::compiler::Node"** %467 to i64*
  store i64 %470, i64* %471, align 8
  %472 = icmp eq %"class.v8::internal::compiler::Node"** %468, %300
  br i1 %472, label %473, label %429, !llvm.loop !99

473:                                              ; preds = %424, %429, %401
  %474 = phi %"class.v8::internal::compiler::Node"** [ %327, %401 ], [ %425, %424 ], [ %467, %429 ]
  %475 = ptrtoint %"class.v8::internal::compiler::Node"** %474 to i64
  br label %476

476:                                              ; preds = %473, %292
  %477 = phi i64 [ %475, %473 ], [ %296, %292 ]
  store i64 %477, i64* %268, align 8
  store i64 %296, i64* %275, align 8
  store i64 %298, i64* %266, align 8
  br label %478

478:                                              ; preds = %261, %476
  %479 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %8, align 8
  tail call void @_ZN2v88internal8compiler14LoopFinderImpl13SerializeLoopEPNS1_8LoopTree4LoopE(%"class.v8::internal::compiler::LoopFinderImpl"* %0, %"class.v8::internal::compiler::LoopTree::Loop"* %479)
  ret void

480:                                              ; preds = %254, %533
  %481 = phi i64 [ 0, %254 ], [ %534, %533 ]
  %482 = phi %"struct.v8::internal::compiler::NodeInfo"* [ %250, %254 ], [ %535, %533 ]
  %483 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %482, i64 0, i32 0
  %484 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %483, align 8
  %485 = icmp eq %"class.v8::internal::compiler::Node"* %484, null
  br i1 %485, label %533, label %486

486:                                              ; preds = %480
  %487 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %484, i64 0, i32 3
  %488 = load i32, i32* %487, align 4
  %489 = and i32 %488, 16777215
  %490 = load i32, i32* %255, align 4
  %491 = mul i32 %489, %490
  %492 = load i32*, i32** %256, align 8
  %493 = sext i32 %491 to i64
  %494 = getelementptr inbounds i32, i32* %492, i64 %493
  %495 = load i32, i32* %494, align 4
  %496 = load i32*, i32** %257, align 8
  %497 = getelementptr inbounds i32, i32* %496, i64 %493
  %498 = load i32, i32* %497, align 4
  %499 = and i32 %495, 2
  %500 = and i32 %499, %498
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %533, label %502

502:                                              ; preds = %486
  %503 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %484, i64 0, i32 0
  %504 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %503, align 8
  %505 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %504, i64 0, i32 2
  %506 = load i16, i16* %505, align 8
  %507 = zext i16 %506 to i32
  %508 = icmp eq i16 %506, 17
  br i1 %508, label %509, label %510, !prof !2

509:                                              ; preds = %502
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0)) #10
  unreachable

510:                                              ; preds = %502
  %511 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %4, align 8
  %512 = zext i32 %489 to i64
  %513 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %511, i64 0, i32 3, i32 0, i32 0, i32 0
  %514 = load i32*, i32** %513, align 8
  %515 = getelementptr inbounds i32, i32* %514, i64 %512
  %516 = load i32, i32* %515, align 4
  %517 = icmp eq i32 %516, 1
  br i1 %517, label %518, label %525

518:                                              ; preds = %510
  %519 = icmp eq i16 %506, 1
  %520 = add nsw i32 %507, -35
  %521 = icmp ult i32 %520, 2
  %522 = or i1 %519, %521
  %523 = select i1 %522, %"struct.v8::internal::compiler::NodeInfo"** %260, %"struct.v8::internal::compiler::NodeInfo"** %259
  %524 = select i1 %522, %"struct.v8::internal::compiler::NodeInfo"** %260, %"struct.v8::internal::compiler::NodeInfo"** %259
  br label %525

525:                                              ; preds = %510, %518
  %526 = phi %"struct.v8::internal::compiler::NodeInfo"** [ %523, %518 ], [ %258, %510 ]
  %527 = phi %"struct.v8::internal::compiler::NodeInfo"** [ %524, %518 ], [ %258, %510 ]
  %528 = bitcast %"struct.v8::internal::compiler::NodeInfo"** %526 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %482, i64 0, i32 1
  %531 = bitcast %"struct.v8::internal::compiler::NodeInfo"** %530 to i64*
  store i64 %529, i64* %531, align 8
  store %"struct.v8::internal::compiler::NodeInfo"* %482, %"struct.v8::internal::compiler::NodeInfo"** %527, align 8
  %532 = add i64 %481, 1
  br label %533

533:                                              ; preds = %486, %480, %525
  %534 = phi i64 [ %532, %525 ], [ %481, %486 ], [ %481, %480 ]
  %535 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %482, i64 1
  %536 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %535, %252
  br i1 %536, label %261, label %480
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::LoopTree::Loop"* @_ZN2v88internal8compiler14LoopFinderImpl15ConnectLoopTreeEi(%"class.v8::internal::compiler::LoopFinderImpl"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = add nsw i32 %1, -1
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %6, i64 %4, i32 4
  %8 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"* %8, null
  br i1 %9, label %10, label %565

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %6, i64 %4, i32 0
  %12 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %12, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %17, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %18, i64 %16, i32 0
  %20 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::Node"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %10
  store %"class.v8::internal::compiler::Node"* %12, %"class.v8::internal::compiler::Node"** %19, align 8
  br label %23

23:                                               ; preds = %10, %22
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 8
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 9
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 10
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 11
  br label %525

31:                                               ; preds = %560, %23
  %32 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ null, %23 ], [ %561, %560 ]
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %34 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %34, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %36, i64 %4
  store %"class.v8::internal::compiler::LoopTree::Loop"* %37, %"class.v8::internal::compiler::LoopTree::Loop"** %7, align 8
  %38 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"* %37 to i64
  %39 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"* %32, null
  br i1 %39, label %284, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %32, i64 0, i32 2, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %32, i64 0, i32 2, i32 0, i32 0, i32 1
  %43 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %32, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %44, align 8
  %46 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %43, %45
  %47 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %45 to i64
  br i1 %46, label %53, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %43 to i64*
  store i64 %38, i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %43, i64 1
  %51 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %50 to i64
  %52 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %42 to i64*
  store i64 %51, i64* %52, align 8
  br label %278

53:                                               ; preds = %40
  %54 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %43 to i64
  %55 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %42 to i64*
  %56 = bitcast %"class.std::__1::vector"* %41 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %54, %57
  %59 = ashr exact i64 %58, 3
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 268435455
  br i1 %61, label %62, label %64

62:                                               ; preds = %53
  %63 = bitcast %"class.std::__1::vector"* %41 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #10
  unreachable

64:                                               ; preds = %53
  %65 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %44 to i64*
  %66 = sub i64 %47, %57
  %67 = ashr exact i64 %66, 3
  %68 = icmp ult i64 %67, 134217727
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = ashr exact i64 %66, 2
  %71 = icmp ult i64 %70, %60
  %72 = select i1 %71, i64 %60, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %92, label %74

74:                                               ; preds = %69, %64
  %75 = phi i64 [ %72, %69 ], [ 268435455, %64 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %32, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %77 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %76, align 8
  %78 = shl i64 %75, 3
  %79 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %77, i64 0, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %77, i64 0, i32 3
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %82, %80
  %84 = icmp ugt i64 %78, %83
  br i1 %84, label %85, label %87, !prof !2

85:                                               ; preds = %74
  %86 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %77, i64 %78) #9
  br label %89

87:                                               ; preds = %74
  %88 = add i64 %80, %78
  store i64 %88, i64* %79, align 8
  br label %89

89:                                               ; preds = %87, %85
  %90 = phi i64 [ %86, %85 ], [ %80, %87 ]
  %91 = inttoptr i64 %90 to %"class.v8::internal::compiler::LoopTree::Loop"**
  br label %92

92:                                               ; preds = %89, %69
  %93 = phi i64 [ %75, %89 ], [ 0, %69 ]
  %94 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %91, %89 ], [ null, %69 ]
  %95 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %94, i64 %59
  %96 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %94, i64 %93
  %97 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %96 to i64
  %98 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %95 to i64*
  store i64 %38, i64* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %95, i64 1
  %100 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %99 to i64
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %41, i64 0, i32 0, i32 0
  %102 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %101, align 8
  %103 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %102 to i64
  %104 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %42, align 8
  %105 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %104, %102
  br i1 %105, label %275, label %106

106:                                              ; preds = %92
  %107 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %104, i64 -1
  %108 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %107 to i64
  %109 = sub i64 %108, %103
  %110 = lshr i64 %109, 3
  %111 = add nuw nsw i64 %110, 1
  %112 = icmp ult i64 %111, 4
  br i1 %112, label %205, label %113

113:                                              ; preds = %106
  %114 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %104, i64 -1
  %115 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %114 to i64
  %116 = sub i64 %115, %103
  %117 = lshr i64 %116, 3
  %118 = xor i64 %117, -1
  %119 = add nsw i64 %59, %118
  %120 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %94, i64 %119
  %121 = xor i64 %117, -1
  %122 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %104, i64 %121
  %123 = icmp ult %"class.v8::internal::compiler::LoopTree::Loop"** %120, %104
  %124 = icmp ult %"class.v8::internal::compiler::LoopTree::Loop"** %122, %95
  %125 = and i1 %123, %124
  br i1 %125, label %205, label %126

126:                                              ; preds = %113
  %127 = and i64 %111, 4611686018427387900
  %128 = sub nsw i64 0, %127
  %129 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %95, i64 %128
  %130 = sub nsw i64 0, %127
  %131 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %104, i64 %130
  %132 = add nsw i64 %127, -4
  %133 = lshr exact i64 %132, 2
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 1
  %136 = icmp eq i64 %132, 0
  br i1 %136, label %183, label %137

137:                                              ; preds = %126
  %138 = sub nuw nsw i64 %134, %135
  %139 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %95, i64 -1
  %140 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %104, i64 -1
  %141 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %95, i64 -1
  %142 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %104, i64 -1
  br label %143

143:                                              ; preds = %143, %137
  %144 = phi i64 [ 0, %137 ], [ %178, %143 ]
  %145 = phi i64 [ %138, %137 ], [ %179, %143 ]
  %146 = sub i64 0, %144
  %147 = sub i64 0, %144
  %148 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %139, i64 %146
  %149 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %140, i64 %147
  %150 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %149, i64 -1
  %151 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !100
  %153 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %149, i64 -2
  %154 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !100
  %157 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %148, i64 -1
  %158 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %157 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %158, align 8, !alias.scope !103, !noalias !100
  %159 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %148, i64 -2
  %160 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %159, i64 -1
  %161 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %160 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %161, align 8, !alias.scope !103, !noalias !100
  %162 = sub nuw nsw i64 -4, %144
  %163 = sub nuw nsw i64 -4, %144
  %164 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %141, i64 %162
  %165 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %142, i64 %163
  %166 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %165, i64 -1
  %167 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %166 to <2 x i64>*
  %168 = load <2 x i64>, <2 x i64>* %167, align 8, !alias.scope !100
  %169 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %165, i64 -2
  %170 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %169, i64 -1
  %171 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8, !alias.scope !100
  %173 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %164, i64 -1
  %174 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %173 to <2 x i64>*
  store <2 x i64> %168, <2 x i64>* %174, align 8, !alias.scope !103, !noalias !100
  %175 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %164, i64 -2
  %176 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %175, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %176 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %177, align 8, !alias.scope !103, !noalias !100
  %178 = add i64 %144, 8
  %179 = add i64 %145, -2
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %143, !llvm.loop !105

181:                                              ; preds = %143
  %182 = sub nuw nsw i64 -8, %144
  br label %183

183:                                              ; preds = %181, %126
  %184 = phi i64 [ 0, %126 ], [ %182, %181 ]
  %185 = icmp eq i64 %135, 0
  br i1 %185, label %203, label %186

186:                                              ; preds = %183
  %187 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %95, i64 -1
  %188 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %104, i64 -1
  %189 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %187, i64 %184
  %190 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %188, i64 %184
  %191 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %190, i64 -1
  %192 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %191 to <2 x i64>*
  %193 = load <2 x i64>, <2 x i64>* %192, align 8, !alias.scope !100
  %194 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %190, i64 -2
  %195 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %194, i64 -1
  %196 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 8, !alias.scope !100
  %198 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %189, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %198 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %199, align 8, !alias.scope !103, !noalias !100
  %200 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %189, i64 -2
  %201 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %200, i64 -1
  %202 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %201 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %202, align 8, !alias.scope !103, !noalias !100
  br label %203

203:                                              ; preds = %183, %186
  %204 = icmp eq i64 %111, %127
  br i1 %204, label %275, label %205

205:                                              ; preds = %203, %113, %106
  %206 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %95, %113 ], [ %95, %106 ], [ %129, %203 ]
  %207 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %104, %113 ], [ %104, %106 ], [ %131, %203 ]
  %208 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %207, i64 -1
  %209 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %208 to i64
  %210 = sub i64 %209, %103
  %211 = lshr i64 %210, 3
  %212 = add nuw nsw i64 %211, 1
  %213 = and i64 %212, 7
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %226, label %215

215:                                              ; preds = %205, %215
  %216 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %219, %215 ], [ %206, %205 ]
  %217 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %220, %215 ], [ %207, %205 ]
  %218 = phi i64 [ %224, %215 ], [ %213, %205 ]
  %219 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %216, i64 -1
  %220 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %217, i64 -1
  %221 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = add i64 %218, -1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %215, !llvm.loop !106

226:                                              ; preds = %215, %205
  %227 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ undef, %205 ], [ %219, %215 ]
  %228 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %206, %205 ], [ %219, %215 ]
  %229 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %207, %205 ], [ %220, %215 ]
  %230 = icmp ult i64 %210, 56
  br i1 %230, label %275, label %231

231:                                              ; preds = %226, %231
  %232 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %269, %231 ], [ %228, %226 ]
  %233 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %270, %231 ], [ %229, %226 ]
  %234 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %232, i64 -1
  %235 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %233, i64 -1
  %236 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %232, i64 -2
  %240 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %233, i64 -2
  %241 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %239 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %232, i64 -3
  %245 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %233, i64 -3
  %246 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %244 to i64*
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %232, i64 -4
  %250 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %233, i64 -4
  %251 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %249 to i64*
  store i64 %252, i64* %253, align 8
  %254 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %232, i64 -5
  %255 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %233, i64 -5
  %256 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %254 to i64*
  store i64 %257, i64* %258, align 8
  %259 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %232, i64 -6
  %260 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %233, i64 -6
  %261 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %259 to i64*
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %232, i64 -7
  %265 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %233, i64 -7
  %266 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %264 to i64*
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %232, i64 -8
  %270 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %233, i64 -8
  %271 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %269 to i64*
  store i64 %272, i64* %273, align 8
  %274 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %270, %102
  br i1 %274, label %275, label %231, !llvm.loop !107

275:                                              ; preds = %226, %231, %203, %92
  %276 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %95, %92 ], [ %129, %203 ], [ %227, %226 ], [ %269, %231 ]
  %277 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %276 to i64
  store i64 %277, i64* %56, align 8
  store i64 %100, i64* %55, align 8
  store i64 %97, i64* %65, align 8
  br label %278

278:                                              ; preds = %48, %275
  %279 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %37, i64 0, i32 0
  store %"class.v8::internal::compiler::LoopTree::Loop"* %32, %"class.v8::internal::compiler::LoopTree::Loop"** %279, align 8
  %280 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %32, i64 0, i32 1
  %281 = load i32, i32* %280, align 8
  %282 = add nsw i32 %281, 1
  %283 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %36, i64 %4, i32 1
  store i32 %282, i32* %283, align 8
  br label %523

284:                                              ; preds = %31
  %285 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %33, align 8
  %286 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %285, i64 0, i32 1, i32 0
  %287 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %285, i64 0, i32 1, i32 0, i32 0, i32 1
  %288 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %287, align 8
  %289 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %285, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %290 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %289, align 8
  %291 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %288, %290
  %292 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %290 to i64
  br i1 %291, label %298, label %293

293:                                              ; preds = %284
  %294 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %288 to i64*
  store i64 %38, i64* %294, align 8
  %295 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %288, i64 1
  %296 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %295 to i64
  %297 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %287 to i64*
  store i64 %296, i64* %297, align 8
  br label %523

298:                                              ; preds = %284
  %299 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %288 to i64
  %300 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %287 to i64*
  %301 = bitcast %"class.std::__1::vector"* %286 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = sub i64 %299, %302
  %304 = ashr exact i64 %303, 3
  %305 = add nsw i64 %304, 1
  %306 = icmp ugt i64 %305, 268435455
  br i1 %306, label %307, label %309

307:                                              ; preds = %298
  %308 = bitcast %"class.std::__1::vector"* %286 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %308) #10
  unreachable

309:                                              ; preds = %298
  %310 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"*** %289 to i64*
  %311 = sub i64 %292, %302
  %312 = ashr exact i64 %311, 3
  %313 = icmp ult i64 %312, 134217727
  br i1 %313, label %314, label %319

314:                                              ; preds = %309
  %315 = ashr exact i64 %311, 2
  %316 = icmp ult i64 %315, %305
  %317 = select i1 %316, i64 %305, i64 %315
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %337, label %319

319:                                              ; preds = %314, %309
  %320 = phi i64 [ %317, %314 ], [ 268435455, %309 ]
  %321 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %285, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %322 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %321, align 8
  %323 = shl i64 %320, 3
  %324 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %322, i64 0, i32 2
  %325 = load i64, i64* %324, align 8
  %326 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %322, i64 0, i32 3
  %327 = load i64, i64* %326, align 8
  %328 = sub i64 %327, %325
  %329 = icmp ugt i64 %323, %328
  br i1 %329, label %330, label %332, !prof !2

330:                                              ; preds = %319
  %331 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %322, i64 %323) #9
  br label %334

332:                                              ; preds = %319
  %333 = add i64 %325, %323
  store i64 %333, i64* %324, align 8
  br label %334

334:                                              ; preds = %332, %330
  %335 = phi i64 [ %331, %330 ], [ %325, %332 ]
  %336 = inttoptr i64 %335 to %"class.v8::internal::compiler::LoopTree::Loop"**
  br label %337

337:                                              ; preds = %334, %314
  %338 = phi i64 [ %320, %334 ], [ 0, %314 ]
  %339 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %336, %334 ], [ null, %314 ]
  %340 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %339, i64 %304
  %341 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %339, i64 %338
  %342 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %341 to i64
  %343 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %340 to i64*
  store i64 %38, i64* %343, align 8
  %344 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %340, i64 1
  %345 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %344 to i64
  %346 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %286, i64 0, i32 0, i32 0
  %347 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %346, align 8
  %348 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %347 to i64
  %349 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %287, align 8
  %350 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %349, %347
  br i1 %350, label %520, label %351

351:                                              ; preds = %337
  %352 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %349, i64 -1
  %353 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %352 to i64
  %354 = sub i64 %353, %348
  %355 = lshr i64 %354, 3
  %356 = add nuw nsw i64 %355, 1
  %357 = icmp ult i64 %356, 4
  br i1 %357, label %450, label %358

358:                                              ; preds = %351
  %359 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %349, i64 -1
  %360 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %359 to i64
  %361 = sub i64 %360, %348
  %362 = lshr i64 %361, 3
  %363 = xor i64 %362, -1
  %364 = add nsw i64 %304, %363
  %365 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %339, i64 %364
  %366 = xor i64 %362, -1
  %367 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %349, i64 %366
  %368 = icmp ult %"class.v8::internal::compiler::LoopTree::Loop"** %365, %349
  %369 = icmp ult %"class.v8::internal::compiler::LoopTree::Loop"** %367, %340
  %370 = and i1 %368, %369
  br i1 %370, label %450, label %371

371:                                              ; preds = %358
  %372 = and i64 %356, 4611686018427387900
  %373 = sub nsw i64 0, %372
  %374 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %340, i64 %373
  %375 = sub nsw i64 0, %372
  %376 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %349, i64 %375
  %377 = add nsw i64 %372, -4
  %378 = lshr exact i64 %377, 2
  %379 = add nuw nsw i64 %378, 1
  %380 = and i64 %379, 1
  %381 = icmp eq i64 %377, 0
  br i1 %381, label %428, label %382

382:                                              ; preds = %371
  %383 = sub nuw nsw i64 %379, %380
  %384 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %340, i64 -1
  %385 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %349, i64 -1
  %386 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %340, i64 -1
  %387 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %349, i64 -1
  br label %388

388:                                              ; preds = %388, %382
  %389 = phi i64 [ 0, %382 ], [ %423, %388 ]
  %390 = phi i64 [ %383, %382 ], [ %424, %388 ]
  %391 = sub i64 0, %389
  %392 = sub i64 0, %389
  %393 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %384, i64 %391
  %394 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %385, i64 %392
  %395 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %394, i64 -1
  %396 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %395 to <2 x i64>*
  %397 = load <2 x i64>, <2 x i64>* %396, align 8, !alias.scope !108
  %398 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %394, i64 -2
  %399 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %398, i64 -1
  %400 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %399 to <2 x i64>*
  %401 = load <2 x i64>, <2 x i64>* %400, align 8, !alias.scope !108
  %402 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %393, i64 -1
  %403 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %402 to <2 x i64>*
  store <2 x i64> %397, <2 x i64>* %403, align 8, !alias.scope !111, !noalias !108
  %404 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %393, i64 -2
  %405 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %404, i64 -1
  %406 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %405 to <2 x i64>*
  store <2 x i64> %401, <2 x i64>* %406, align 8, !alias.scope !111, !noalias !108
  %407 = sub nuw nsw i64 -4, %389
  %408 = sub nuw nsw i64 -4, %389
  %409 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %386, i64 %407
  %410 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %387, i64 %408
  %411 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %410, i64 -1
  %412 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %411 to <2 x i64>*
  %413 = load <2 x i64>, <2 x i64>* %412, align 8, !alias.scope !108
  %414 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %410, i64 -2
  %415 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %414, i64 -1
  %416 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %415 to <2 x i64>*
  %417 = load <2 x i64>, <2 x i64>* %416, align 8, !alias.scope !108
  %418 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %409, i64 -1
  %419 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %418 to <2 x i64>*
  store <2 x i64> %413, <2 x i64>* %419, align 8, !alias.scope !111, !noalias !108
  %420 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %409, i64 -2
  %421 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %420, i64 -1
  %422 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %421 to <2 x i64>*
  store <2 x i64> %417, <2 x i64>* %422, align 8, !alias.scope !111, !noalias !108
  %423 = add i64 %389, 8
  %424 = add i64 %390, -2
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %388, !llvm.loop !113

426:                                              ; preds = %388
  %427 = sub nuw nsw i64 -8, %389
  br label %428

428:                                              ; preds = %426, %371
  %429 = phi i64 [ 0, %371 ], [ %427, %426 ]
  %430 = icmp eq i64 %380, 0
  br i1 %430, label %448, label %431

431:                                              ; preds = %428
  %432 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %340, i64 -1
  %433 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %349, i64 -1
  %434 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %432, i64 %429
  %435 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %433, i64 %429
  %436 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %435, i64 -1
  %437 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %436 to <2 x i64>*
  %438 = load <2 x i64>, <2 x i64>* %437, align 8, !alias.scope !108
  %439 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %435, i64 -2
  %440 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %439, i64 -1
  %441 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %440 to <2 x i64>*
  %442 = load <2 x i64>, <2 x i64>* %441, align 8, !alias.scope !108
  %443 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %434, i64 -1
  %444 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %443 to <2 x i64>*
  store <2 x i64> %438, <2 x i64>* %444, align 8, !alias.scope !111, !noalias !108
  %445 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %434, i64 -2
  %446 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %445, i64 -1
  %447 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %446 to <2 x i64>*
  store <2 x i64> %442, <2 x i64>* %447, align 8, !alias.scope !111, !noalias !108
  br label %448

448:                                              ; preds = %428, %431
  %449 = icmp eq i64 %356, %372
  br i1 %449, label %520, label %450

450:                                              ; preds = %448, %358, %351
  %451 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %340, %358 ], [ %340, %351 ], [ %374, %448 ]
  %452 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %349, %358 ], [ %349, %351 ], [ %376, %448 ]
  %453 = getelementptr %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %452, i64 -1
  %454 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %453 to i64
  %455 = sub i64 %454, %348
  %456 = lshr i64 %455, 3
  %457 = add nuw nsw i64 %456, 1
  %458 = and i64 %457, 7
  %459 = icmp eq i64 %458, 0
  br i1 %459, label %471, label %460

460:                                              ; preds = %450, %460
  %461 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %464, %460 ], [ %451, %450 ]
  %462 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %465, %460 ], [ %452, %450 ]
  %463 = phi i64 [ %469, %460 ], [ %458, %450 ]
  %464 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %461, i64 -1
  %465 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %462, i64 -1
  %466 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %465 to i64*
  %467 = load i64, i64* %466, align 8
  %468 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %464 to i64*
  store i64 %467, i64* %468, align 8
  %469 = add i64 %463, -1
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %471, label %460, !llvm.loop !114

471:                                              ; preds = %460, %450
  %472 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ undef, %450 ], [ %464, %460 ]
  %473 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %451, %450 ], [ %464, %460 ]
  %474 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %452, %450 ], [ %465, %460 ]
  %475 = icmp ult i64 %455, 56
  br i1 %475, label %520, label %476

476:                                              ; preds = %471, %476
  %477 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %514, %476 ], [ %473, %471 ]
  %478 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %515, %476 ], [ %474, %471 ]
  %479 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %477, i64 -1
  %480 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %478, i64 -1
  %481 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %480 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %479 to i64*
  store i64 %482, i64* %483, align 8
  %484 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %477, i64 -2
  %485 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %478, i64 -2
  %486 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %485 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %484 to i64*
  store i64 %487, i64* %488, align 8
  %489 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %477, i64 -3
  %490 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %478, i64 -3
  %491 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %490 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %489 to i64*
  store i64 %492, i64* %493, align 8
  %494 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %477, i64 -4
  %495 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %478, i64 -4
  %496 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %495 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %494 to i64*
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %477, i64 -5
  %500 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %478, i64 -5
  %501 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %500 to i64*
  %502 = load i64, i64* %501, align 8
  %503 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %499 to i64*
  store i64 %502, i64* %503, align 8
  %504 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %477, i64 -6
  %505 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %478, i64 -6
  %506 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %504 to i64*
  store i64 %507, i64* %508, align 8
  %509 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %477, i64 -7
  %510 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %478, i64 -7
  %511 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %510 to i64*
  %512 = load i64, i64* %511, align 8
  %513 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %509 to i64*
  store i64 %512, i64* %513, align 8
  %514 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %477, i64 -8
  %515 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %478, i64 -8
  %516 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %515, %347
  br i1 %519, label %520, label %476, !llvm.loop !115

520:                                              ; preds = %471, %476, %448, %337
  %521 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %340, %337 ], [ %374, %448 ], [ %472, %471 ], [ %514, %476 ]
  %522 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"** %521 to i64
  store i64 %522, i64* %301, align 8
  store i64 %345, i64* %300, align 8
  store i64 %342, i64* %310, align 8
  br label %523

523:                                              ; preds = %520, %293, %278
  %524 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %7, align 8
  br label %565

525:                                              ; preds = %560, %27
  %526 = phi i32 [ 1, %27 ], [ %562, %560 ]
  %527 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ null, %27 ], [ %561, %560 ]
  %528 = icmp eq i32 %526, %1
  br i1 %528, label %560, label %529

529:                                              ; preds = %525
  %530 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %531 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %530, i64 0, i32 3
  %532 = load i32, i32* %531, align 4
  %533 = and i32 %532, 16777215
  %534 = load i32, i32* %28, align 4
  %535 = mul i32 %533, %534
  %536 = lshr i32 %526, 5
  %537 = add i32 %535, %536
  %538 = load i32*, i32** %29, align 8
  %539 = sext i32 %537 to i64
  %540 = getelementptr inbounds i32, i32* %538, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = load i32*, i32** %30, align 8
  %543 = getelementptr inbounds i32, i32* %542, i64 %539
  %544 = load i32, i32* %543, align 4
  %545 = and i32 %526, 31
  %546 = shl i32 1, %545
  %547 = and i32 %541, %546
  %548 = and i32 %547, %544
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %560, label %550

550:                                              ; preds = %529
  %551 = tail call %"class.v8::internal::compiler::LoopTree::Loop"* @_ZN2v88internal8compiler14LoopFinderImpl15ConnectLoopTreeEi(%"class.v8::internal::compiler::LoopFinderImpl"* %0, i32 %526)
  %552 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"* %527, null
  br i1 %552, label %559, label %553

553:                                              ; preds = %550
  %554 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %551, i64 0, i32 1
  %555 = load i32, i32* %554, align 8
  %556 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %527, i64 0, i32 1
  %557 = load i32, i32* %556, align 8
  %558 = icmp sgt i32 %555, %557
  br i1 %558, label %559, label %560

559:                                              ; preds = %553, %550
  br label %560

560:                                              ; preds = %529, %553, %559, %525
  %561 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %527, %525 ], [ %527, %529 ], [ %551, %559 ], [ %527, %553 ]
  %562 = add nuw nsw i32 %526, 1
  %563 = load i32, i32* %24, align 8
  %564 = icmp slt i32 %526, %563
  br i1 %564, label %525, label %31

565:                                              ; preds = %2, %523
  %566 = phi %"class.v8::internal::compiler::LoopTree::Loop"* [ %524, %523 ], [ %8, %2 ]
  ret %"class.v8::internal::compiler::LoopTree::Loop"* %566
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14LoopFinderImpl13SerializeLoopEPNS1_8LoopTree4LoopE(%"class.v8::internal::compiler::LoopFinderImpl"*, %"class.v8::internal::compiler::LoopTree::Loop"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %4 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = bitcast %"class.v8::internal::compiler::LoopTree::Loop"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.v8::internal::compiler::LoopTree::Loop"* %1 to i64
  %9 = sub i64 %8, %7
  %10 = lshr exact i64 %9, 6
  %11 = trunc i64 %10 to i32
  %12 = add nsw i32 %11, 1
  %13 = shl i64 %9, 26
  %14 = ashr exact i64 %13, 32
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %16 = load %"struct.v8::internal::compiler::TempLoopInfo"*, %"struct.v8::internal::compiler::TempLoopInfo"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %4, i64 0, i32 4, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %4, i64 0, i32 4, i32 0, i32 0, i32 1
  %19 = bitcast %"class.v8::internal::compiler::Node"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.26"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = lshr exact i64 %23, 3
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 3
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %16, i64 %14, i32 1
  %28 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %27, align 8
  %29 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %28, null
  %30 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %3, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %30, i64 0, i32 4, i32 0
  br i1 %29, label %32, label %47

32:                                               ; preds = %293, %2
  %33 = phi %"class.v8::internal::compiler::LoopTree"* [ %30, %2 ], [ %306, %293 ]
  %34 = phi %"class.std::__1::vector.26"* [ %31, %2 ], [ %307, %293 ]
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %33, i64 0, i32 4, i32 0, i32 0, i32 1
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector.26"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = lshr exact i64 %40, 3
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 4
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %16, i64 %14, i32 3
  %45 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %45, null
  br i1 %46, label %308, label %314

47:                                               ; preds = %2, %293
  %48 = phi %"class.std::__1::vector.26"* [ %307, %293 ], [ %31, %2 ]
  %49 = phi %"class.v8::internal::compiler::LoopTree"* [ %306, %293 ], [ %30, %2 ]
  %50 = phi %"struct.v8::internal::compiler::NodeInfo"* [ %304, %293 ], [ %28, %2 ]
  %51 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %50, i64 0, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %49, i64 0, i32 4, i32 0, i32 0, i32 1
  %53 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %49, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %55 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %54, align 8
  %56 = icmp eq %"class.v8::internal::compiler::Node"** %53, %55
  %57 = ptrtoint %"class.v8::internal::compiler::Node"** %55 to i64
  br i1 %56, label %65, label %58

58:                                               ; preds = %47
  %59 = bitcast %"struct.v8::internal::compiler::NodeInfo"* %50 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.v8::internal::compiler::Node"** %53 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, i64 1
  %63 = ptrtoint %"class.v8::internal::compiler::Node"** %62 to i64
  %64 = bitcast %"class.v8::internal::compiler::Node"*** %52 to i64*
  store i64 %63, i64* %64, align 8
  br label %293

65:                                               ; preds = %47
  %66 = ptrtoint %"class.v8::internal::compiler::Node"** %53 to i64
  %67 = bitcast %"class.v8::internal::compiler::Node"*** %52 to i64*
  %68 = bitcast %"class.std::__1::vector.26"* %48 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %66, %69
  %71 = ashr exact i64 %70, 3
  %72 = add nsw i64 %71, 1
  %73 = icmp ugt i64 %72, 268435455
  br i1 %73, label %74, label %76

74:                                               ; preds = %65
  %75 = bitcast %"class.std::__1::vector.26"* %48 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #10
  unreachable

76:                                               ; preds = %65
  %77 = bitcast %"class.v8::internal::compiler::Node"*** %54 to i64*
  %78 = sub i64 %57, %69
  %79 = ashr exact i64 %78, 3
  %80 = icmp ult i64 %79, 134217727
  br i1 %80, label %81, label %86

81:                                               ; preds = %76
  %82 = ashr exact i64 %78, 2
  %83 = icmp ult i64 %82, %72
  %84 = select i1 %83, i64 %72, i64 %82
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %104, label %86

86:                                               ; preds = %81, %76
  %87 = phi i64 [ %84, %81 ], [ 268435455, %76 ]
  %88 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %49, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %89 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %88, align 8
  %90 = shl i64 %87, 3
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %89, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %89, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ugt i64 %90, %95
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %86
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %89, i64 %90) #9
  br label %101

99:                                               ; preds = %86
  %100 = add i64 %92, %90
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  br label %104

104:                                              ; preds = %101, %81
  %105 = phi i64 [ %87, %101 ], [ 0, %81 ]
  %106 = phi %"class.v8::internal::compiler::Node"** [ %103, %101 ], [ null, %81 ]
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, i64 %71
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, i64 %105
  %109 = ptrtoint %"class.v8::internal::compiler::Node"** %108 to i64
  %110 = bitcast %"struct.v8::internal::compiler::NodeInfo"* %50 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.v8::internal::compiler::Node"** %107 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 1
  %114 = ptrtoint %"class.v8::internal::compiler::Node"** %113 to i64
  %115 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %48, i64 0, i32 0, i32 0
  %116 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %115, align 8
  %117 = ptrtoint %"class.v8::internal::compiler::Node"** %116 to i64
  %118 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %52, align 8
  %119 = icmp eq %"class.v8::internal::compiler::Node"** %118, %116
  br i1 %119, label %290, label %120

120:                                              ; preds = %104
  %121 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  %122 = ptrtoint %"class.v8::internal::compiler::Node"** %121 to i64
  %123 = sub i64 %122, %117
  %124 = lshr i64 %123, 3
  %125 = add nuw nsw i64 %124, 1
  %126 = icmp ult i64 %125, 4
  br i1 %126, label %220, label %127

127:                                              ; preds = %120
  %128 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %106, i64 -1
  %129 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  %130 = ptrtoint %"class.v8::internal::compiler::Node"** %129 to i64
  %131 = sub i64 %130, %117
  %132 = lshr i64 %131, 3
  %133 = sub nsw i64 %71, %132
  %134 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 %133
  %135 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  %136 = sub nsw i64 0, %132
  %137 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 %136
  %138 = icmp ult %"class.v8::internal::compiler::Node"** %134, %118
  %139 = icmp ult %"class.v8::internal::compiler::Node"** %137, %107
  %140 = and i1 %138, %139
  br i1 %140, label %220, label %141

141:                                              ; preds = %127
  %142 = and i64 %125, 4611686018427387900
  %143 = sub nsw i64 0, %142
  %144 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 %143
  %145 = sub nsw i64 0, %142
  %146 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 %145
  %147 = add nsw i64 %142, -4
  %148 = lshr exact i64 %147, 2
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 1
  %151 = icmp eq i64 %147, 0
  br i1 %151, label %196, label %152

152:                                              ; preds = %141
  %153 = sub nuw nsw i64 %149, %150
  %154 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 -1
  %155 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  %156 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 -1
  %157 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  br label %158

158:                                              ; preds = %158, %152
  %159 = phi i64 [ 0, %152 ], [ %193, %158 ]
  %160 = phi i64 [ %153, %152 ], [ %194, %158 ]
  %161 = sub i64 0, %159
  %162 = sub i64 0, %159
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, i64 %161
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %155, i64 %162
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 -1
  %166 = bitcast %"class.v8::internal::compiler::Node"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !116
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 -2
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::Node"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !116
  %172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::Node"** %172 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %173, align 8, !alias.scope !119, !noalias !116
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -2
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, i64 -1
  %176 = bitcast %"class.v8::internal::compiler::Node"** %175 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %176, align 8, !alias.scope !119, !noalias !116
  %177 = sub nuw nsw i64 -4, %159
  %178 = sub nuw nsw i64 -4, %159
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %156, i64 %177
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %157, i64 %178
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %182 = bitcast %"class.v8::internal::compiler::Node"** %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8, !alias.scope !116
  %184 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -2
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %184, i64 -1
  %186 = bitcast %"class.v8::internal::compiler::Node"** %185 to <2 x i64>*
  %187 = load <2 x i64>, <2 x i64>* %186, align 8, !alias.scope !116
  %188 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 -1
  %189 = bitcast %"class.v8::internal::compiler::Node"** %188 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %189, align 8, !alias.scope !119, !noalias !116
  %190 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 -2
  %191 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %190, i64 -1
  %192 = bitcast %"class.v8::internal::compiler::Node"** %191 to <2 x i64>*
  store <2 x i64> %187, <2 x i64>* %192, align 8, !alias.scope !119, !noalias !116
  %193 = add i64 %159, 8
  %194 = add i64 %160, -2
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %158, !llvm.loop !121

196:                                              ; preds = %158, %141
  %197 = phi i64 [ 0, %141 ], [ %193, %158 ]
  %198 = icmp eq i64 %150, 0
  br i1 %198, label %218, label %199

199:                                              ; preds = %196
  %200 = sub i64 0, %197
  %201 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 -1
  %202 = sub i64 0, %197
  %203 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %118, i64 -1
  %204 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %201, i64 %200
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %203, i64 %202
  %206 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -1
  %207 = bitcast %"class.v8::internal::compiler::Node"** %206 to <2 x i64>*
  %208 = load <2 x i64>, <2 x i64>* %207, align 8, !alias.scope !116
  %209 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -2
  %210 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %209, i64 -1
  %211 = bitcast %"class.v8::internal::compiler::Node"** %210 to <2 x i64>*
  %212 = load <2 x i64>, <2 x i64>* %211, align 8, !alias.scope !116
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %204, i64 -1
  %214 = bitcast %"class.v8::internal::compiler::Node"** %213 to <2 x i64>*
  store <2 x i64> %208, <2 x i64>* %214, align 8, !alias.scope !119, !noalias !116
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %204, i64 -2
  %216 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 -1
  %217 = bitcast %"class.v8::internal::compiler::Node"** %216 to <2 x i64>*
  store <2 x i64> %212, <2 x i64>* %217, align 8, !alias.scope !119, !noalias !116
  br label %218

218:                                              ; preds = %196, %199
  %219 = icmp eq i64 %125, %142
  br i1 %219, label %290, label %220

220:                                              ; preds = %218, %127, %120
  %221 = phi %"class.v8::internal::compiler::Node"** [ %107, %127 ], [ %107, %120 ], [ %144, %218 ]
  %222 = phi %"class.v8::internal::compiler::Node"** [ %118, %127 ], [ %118, %120 ], [ %146, %218 ]
  %223 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %222, i64 -1
  %224 = ptrtoint %"class.v8::internal::compiler::Node"** %223 to i64
  %225 = sub i64 %224, %117
  %226 = lshr i64 %225, 3
  %227 = add nuw nsw i64 %226, 1
  %228 = and i64 %227, 7
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %241, label %230

230:                                              ; preds = %220, %230
  %231 = phi %"class.v8::internal::compiler::Node"** [ %234, %230 ], [ %221, %220 ]
  %232 = phi %"class.v8::internal::compiler::Node"** [ %235, %230 ], [ %222, %220 ]
  %233 = phi i64 [ %239, %230 ], [ %228, %220 ]
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %231, i64 -1
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 -1
  %236 = bitcast %"class.v8::internal::compiler::Node"** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.v8::internal::compiler::Node"** %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = add i64 %233, -1
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %230, !llvm.loop !122

241:                                              ; preds = %230, %220
  %242 = phi %"class.v8::internal::compiler::Node"** [ undef, %220 ], [ %234, %230 ]
  %243 = phi %"class.v8::internal::compiler::Node"** [ %221, %220 ], [ %234, %230 ]
  %244 = phi %"class.v8::internal::compiler::Node"** [ %222, %220 ], [ %235, %230 ]
  %245 = icmp ult i64 %225, 56
  br i1 %245, label %290, label %246

246:                                              ; preds = %241, %246
  %247 = phi %"class.v8::internal::compiler::Node"** [ %284, %246 ], [ %243, %241 ]
  %248 = phi %"class.v8::internal::compiler::Node"** [ %285, %246 ], [ %244, %241 ]
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -1
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %248, i64 -1
  %251 = bitcast %"class.v8::internal::compiler::Node"** %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.v8::internal::compiler::Node"** %249 to i64*
  store i64 %252, i64* %253, align 8
  %254 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -2
  %255 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %248, i64 -2
  %256 = bitcast %"class.v8::internal::compiler::Node"** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.v8::internal::compiler::Node"** %254 to i64*
  store i64 %257, i64* %258, align 8
  %259 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -3
  %260 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %248, i64 -3
  %261 = bitcast %"class.v8::internal::compiler::Node"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = bitcast %"class.v8::internal::compiler::Node"** %259 to i64*
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -4
  %265 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %248, i64 -4
  %266 = bitcast %"class.v8::internal::compiler::Node"** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.v8::internal::compiler::Node"** %264 to i64*
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -5
  %270 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %248, i64 -5
  %271 = bitcast %"class.v8::internal::compiler::Node"** %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"class.v8::internal::compiler::Node"** %269 to i64*
  store i64 %272, i64* %273, align 8
  %274 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -6
  %275 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %248, i64 -6
  %276 = bitcast %"class.v8::internal::compiler::Node"** %275 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = bitcast %"class.v8::internal::compiler::Node"** %274 to i64*
  store i64 %277, i64* %278, align 8
  %279 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -7
  %280 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %248, i64 -7
  %281 = bitcast %"class.v8::internal::compiler::Node"** %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.v8::internal::compiler::Node"** %279 to i64*
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %247, i64 -8
  %285 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %248, i64 -8
  %286 = bitcast %"class.v8::internal::compiler::Node"** %285 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.v8::internal::compiler::Node"** %284 to i64*
  store i64 %287, i64* %288, align 8
  %289 = icmp eq %"class.v8::internal::compiler::Node"** %285, %116
  br i1 %289, label %290, label %246, !llvm.loop !123

290:                                              ; preds = %241, %246, %218, %104
  %291 = phi %"class.v8::internal::compiler::Node"** [ %107, %104 ], [ %144, %218 ], [ %242, %241 ], [ %284, %246 ]
  %292 = ptrtoint %"class.v8::internal::compiler::Node"** %291 to i64
  store i64 %292, i64* %68, align 8
  store i64 %114, i64* %67, align 8
  store i64 %109, i64* %77, align 8
  br label %293

293:                                              ; preds = %58, %290
  %294 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %3, align 8
  %295 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, align 8
  %296 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %295, i64 0, i32 3
  %297 = load i32, i32* %296, align 4
  %298 = and i32 %297, 16777215
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %294, i64 0, i32 3, i32 0, i32 0, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = getelementptr inbounds i32, i32* %301, i64 %299
  store i32 %12, i32* %302, align 4
  %303 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %50, i64 0, i32 1
  %304 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %303, align 8
  %305 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %304, null
  %306 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %3, align 8
  %307 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %306, i64 0, i32 4, i32 0
  br i1 %305, label %32, label %47

308:                                              ; preds = %560, %32
  %309 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %310 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %309, align 8
  %311 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %312 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %311, align 8
  %313 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %310, %312
  br i1 %313, label %573, label %590

314:                                              ; preds = %32, %560
  %315 = phi %"struct.v8::internal::compiler::NodeInfo"* [ %571, %560 ], [ %45, %32 ]
  %316 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %3, align 8
  %317 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %316, i64 0, i32 4, i32 0
  %318 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %315, i64 0, i32 0
  %319 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %316, i64 0, i32 4, i32 0, i32 0, i32 1
  %320 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %316, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %322 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %321, align 8
  %323 = icmp eq %"class.v8::internal::compiler::Node"** %320, %322
  %324 = ptrtoint %"class.v8::internal::compiler::Node"** %322 to i64
  br i1 %323, label %332, label %325

325:                                              ; preds = %314
  %326 = bitcast %"struct.v8::internal::compiler::NodeInfo"* %315 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = bitcast %"class.v8::internal::compiler::Node"** %320 to i64*
  store i64 %327, i64* %328, align 8
  %329 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %320, i64 1
  %330 = ptrtoint %"class.v8::internal::compiler::Node"** %329 to i64
  %331 = bitcast %"class.v8::internal::compiler::Node"*** %319 to i64*
  store i64 %330, i64* %331, align 8
  br label %560

332:                                              ; preds = %314
  %333 = ptrtoint %"class.v8::internal::compiler::Node"** %320 to i64
  %334 = bitcast %"class.v8::internal::compiler::Node"*** %319 to i64*
  %335 = bitcast %"class.std::__1::vector.26"* %317 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = sub i64 %333, %336
  %338 = ashr exact i64 %337, 3
  %339 = add nsw i64 %338, 1
  %340 = icmp ugt i64 %339, 268435455
  br i1 %340, label %341, label %343

341:                                              ; preds = %332
  %342 = bitcast %"class.std::__1::vector.26"* %317 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %342) #10
  unreachable

343:                                              ; preds = %332
  %344 = bitcast %"class.v8::internal::compiler::Node"*** %321 to i64*
  %345 = sub i64 %324, %336
  %346 = ashr exact i64 %345, 3
  %347 = icmp ult i64 %346, 134217727
  br i1 %347, label %348, label %353

348:                                              ; preds = %343
  %349 = ashr exact i64 %345, 2
  %350 = icmp ult i64 %349, %339
  %351 = select i1 %350, i64 %339, i64 %349
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %371, label %353

353:                                              ; preds = %348, %343
  %354 = phi i64 [ %351, %348 ], [ 268435455, %343 ]
  %355 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %316, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %356 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %355, align 8
  %357 = shl i64 %354, 3
  %358 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %356, i64 0, i32 2
  %359 = load i64, i64* %358, align 8
  %360 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %356, i64 0, i32 3
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %361, %359
  %363 = icmp ugt i64 %357, %362
  br i1 %363, label %364, label %366, !prof !2

364:                                              ; preds = %353
  %365 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %356, i64 %357) #9
  br label %368

366:                                              ; preds = %353
  %367 = add i64 %359, %357
  store i64 %367, i64* %358, align 8
  br label %368

368:                                              ; preds = %366, %364
  %369 = phi i64 [ %365, %364 ], [ %359, %366 ]
  %370 = inttoptr i64 %369 to %"class.v8::internal::compiler::Node"**
  br label %371

371:                                              ; preds = %368, %348
  %372 = phi i64 [ %354, %368 ], [ 0, %348 ]
  %373 = phi %"class.v8::internal::compiler::Node"** [ %370, %368 ], [ null, %348 ]
  %374 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %373, i64 %338
  %375 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %373, i64 %372
  %376 = ptrtoint %"class.v8::internal::compiler::Node"** %375 to i64
  %377 = bitcast %"struct.v8::internal::compiler::NodeInfo"* %315 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = bitcast %"class.v8::internal::compiler::Node"** %374 to i64*
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %374, i64 1
  %381 = ptrtoint %"class.v8::internal::compiler::Node"** %380 to i64
  %382 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %317, i64 0, i32 0, i32 0
  %383 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %382, align 8
  %384 = ptrtoint %"class.v8::internal::compiler::Node"** %383 to i64
  %385 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %319, align 8
  %386 = icmp eq %"class.v8::internal::compiler::Node"** %385, %383
  br i1 %386, label %557, label %387

387:                                              ; preds = %371
  %388 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %385, i64 -1
  %389 = ptrtoint %"class.v8::internal::compiler::Node"** %388 to i64
  %390 = sub i64 %389, %384
  %391 = lshr i64 %390, 3
  %392 = add nuw nsw i64 %391, 1
  %393 = icmp ult i64 %392, 4
  br i1 %393, label %487, label %394

394:                                              ; preds = %387
  %395 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %373, i64 -1
  %396 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %385, i64 -1
  %397 = ptrtoint %"class.v8::internal::compiler::Node"** %396 to i64
  %398 = sub i64 %397, %384
  %399 = lshr i64 %398, 3
  %400 = sub nsw i64 %338, %399
  %401 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %395, i64 %400
  %402 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %385, i64 -1
  %403 = sub nsw i64 0, %399
  %404 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %402, i64 %403
  %405 = icmp ult %"class.v8::internal::compiler::Node"** %401, %385
  %406 = icmp ult %"class.v8::internal::compiler::Node"** %404, %374
  %407 = and i1 %405, %406
  br i1 %407, label %487, label %408

408:                                              ; preds = %394
  %409 = and i64 %392, 4611686018427387900
  %410 = sub nsw i64 0, %409
  %411 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %374, i64 %410
  %412 = sub nsw i64 0, %409
  %413 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %385, i64 %412
  %414 = add nsw i64 %409, -4
  %415 = lshr exact i64 %414, 2
  %416 = add nuw nsw i64 %415, 1
  %417 = and i64 %416, 1
  %418 = icmp eq i64 %414, 0
  br i1 %418, label %463, label %419

419:                                              ; preds = %408
  %420 = sub nuw nsw i64 %416, %417
  %421 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %374, i64 -1
  %422 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %385, i64 -1
  %423 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %374, i64 -1
  %424 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %385, i64 -1
  br label %425

425:                                              ; preds = %425, %419
  %426 = phi i64 [ 0, %419 ], [ %460, %425 ]
  %427 = phi i64 [ %420, %419 ], [ %461, %425 ]
  %428 = sub i64 0, %426
  %429 = sub i64 0, %426
  %430 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %421, i64 %428
  %431 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %422, i64 %429
  %432 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 -1
  %433 = bitcast %"class.v8::internal::compiler::Node"** %432 to <2 x i64>*
  %434 = load <2 x i64>, <2 x i64>* %433, align 8, !alias.scope !124
  %435 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %431, i64 -2
  %436 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %435, i64 -1
  %437 = bitcast %"class.v8::internal::compiler::Node"** %436 to <2 x i64>*
  %438 = load <2 x i64>, <2 x i64>* %437, align 8, !alias.scope !124
  %439 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -1
  %440 = bitcast %"class.v8::internal::compiler::Node"** %439 to <2 x i64>*
  store <2 x i64> %434, <2 x i64>* %440, align 8, !alias.scope !127, !noalias !124
  %441 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -2
  %442 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %441, i64 -1
  %443 = bitcast %"class.v8::internal::compiler::Node"** %442 to <2 x i64>*
  store <2 x i64> %438, <2 x i64>* %443, align 8, !alias.scope !127, !noalias !124
  %444 = sub nuw nsw i64 -4, %426
  %445 = sub nuw nsw i64 -4, %426
  %446 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %423, i64 %444
  %447 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %424, i64 %445
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %447, i64 -1
  %449 = bitcast %"class.v8::internal::compiler::Node"** %448 to <2 x i64>*
  %450 = load <2 x i64>, <2 x i64>* %449, align 8, !alias.scope !124
  %451 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %447, i64 -2
  %452 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %451, i64 -1
  %453 = bitcast %"class.v8::internal::compiler::Node"** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !124
  %455 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %446, i64 -1
  %456 = bitcast %"class.v8::internal::compiler::Node"** %455 to <2 x i64>*
  store <2 x i64> %450, <2 x i64>* %456, align 8, !alias.scope !127, !noalias !124
  %457 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %446, i64 -2
  %458 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %457, i64 -1
  %459 = bitcast %"class.v8::internal::compiler::Node"** %458 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %459, align 8, !alias.scope !127, !noalias !124
  %460 = add i64 %426, 8
  %461 = add i64 %427, -2
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %425, !llvm.loop !129

463:                                              ; preds = %425, %408
  %464 = phi i64 [ 0, %408 ], [ %460, %425 ]
  %465 = icmp eq i64 %417, 0
  br i1 %465, label %485, label %466

466:                                              ; preds = %463
  %467 = sub i64 0, %464
  %468 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %374, i64 -1
  %469 = sub i64 0, %464
  %470 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %385, i64 -1
  %471 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %468, i64 %467
  %472 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %470, i64 %469
  %473 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %472, i64 -1
  %474 = bitcast %"class.v8::internal::compiler::Node"** %473 to <2 x i64>*
  %475 = load <2 x i64>, <2 x i64>* %474, align 8, !alias.scope !124
  %476 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %472, i64 -2
  %477 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %476, i64 -1
  %478 = bitcast %"class.v8::internal::compiler::Node"** %477 to <2 x i64>*
  %479 = load <2 x i64>, <2 x i64>* %478, align 8, !alias.scope !124
  %480 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %471, i64 -1
  %481 = bitcast %"class.v8::internal::compiler::Node"** %480 to <2 x i64>*
  store <2 x i64> %475, <2 x i64>* %481, align 8, !alias.scope !127, !noalias !124
  %482 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %471, i64 -2
  %483 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %482, i64 -1
  %484 = bitcast %"class.v8::internal::compiler::Node"** %483 to <2 x i64>*
  store <2 x i64> %479, <2 x i64>* %484, align 8, !alias.scope !127, !noalias !124
  br label %485

485:                                              ; preds = %463, %466
  %486 = icmp eq i64 %392, %409
  br i1 %486, label %557, label %487

487:                                              ; preds = %485, %394, %387
  %488 = phi %"class.v8::internal::compiler::Node"** [ %374, %394 ], [ %374, %387 ], [ %411, %485 ]
  %489 = phi %"class.v8::internal::compiler::Node"** [ %385, %394 ], [ %385, %387 ], [ %413, %485 ]
  %490 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %489, i64 -1
  %491 = ptrtoint %"class.v8::internal::compiler::Node"** %490 to i64
  %492 = sub i64 %491, %384
  %493 = lshr i64 %492, 3
  %494 = add nuw nsw i64 %493, 1
  %495 = and i64 %494, 7
  %496 = icmp eq i64 %495, 0
  br i1 %496, label %508, label %497

497:                                              ; preds = %487, %497
  %498 = phi %"class.v8::internal::compiler::Node"** [ %501, %497 ], [ %488, %487 ]
  %499 = phi %"class.v8::internal::compiler::Node"** [ %502, %497 ], [ %489, %487 ]
  %500 = phi i64 [ %506, %497 ], [ %495, %487 ]
  %501 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %498, i64 -1
  %502 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %499, i64 -1
  %503 = bitcast %"class.v8::internal::compiler::Node"** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.v8::internal::compiler::Node"** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = add i64 %500, -1
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %508, label %497, !llvm.loop !130

508:                                              ; preds = %497, %487
  %509 = phi %"class.v8::internal::compiler::Node"** [ undef, %487 ], [ %501, %497 ]
  %510 = phi %"class.v8::internal::compiler::Node"** [ %488, %487 ], [ %501, %497 ]
  %511 = phi %"class.v8::internal::compiler::Node"** [ %489, %487 ], [ %502, %497 ]
  %512 = icmp ult i64 %492, 56
  br i1 %512, label %557, label %513

513:                                              ; preds = %508, %513
  %514 = phi %"class.v8::internal::compiler::Node"** [ %551, %513 ], [ %510, %508 ]
  %515 = phi %"class.v8::internal::compiler::Node"** [ %552, %513 ], [ %511, %508 ]
  %516 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %514, i64 -1
  %517 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 -1
  %518 = bitcast %"class.v8::internal::compiler::Node"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"class.v8::internal::compiler::Node"** %516 to i64*
  store i64 %519, i64* %520, align 8
  %521 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %514, i64 -2
  %522 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 -2
  %523 = bitcast %"class.v8::internal::compiler::Node"** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"class.v8::internal::compiler::Node"** %521 to i64*
  store i64 %524, i64* %525, align 8
  %526 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %514, i64 -3
  %527 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 -3
  %528 = bitcast %"class.v8::internal::compiler::Node"** %527 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = bitcast %"class.v8::internal::compiler::Node"** %526 to i64*
  store i64 %529, i64* %530, align 8
  %531 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %514, i64 -4
  %532 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 -4
  %533 = bitcast %"class.v8::internal::compiler::Node"** %532 to i64*
  %534 = load i64, i64* %533, align 8
  %535 = bitcast %"class.v8::internal::compiler::Node"** %531 to i64*
  store i64 %534, i64* %535, align 8
  %536 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %514, i64 -5
  %537 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 -5
  %538 = bitcast %"class.v8::internal::compiler::Node"** %537 to i64*
  %539 = load i64, i64* %538, align 8
  %540 = bitcast %"class.v8::internal::compiler::Node"** %536 to i64*
  store i64 %539, i64* %540, align 8
  %541 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %514, i64 -6
  %542 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 -6
  %543 = bitcast %"class.v8::internal::compiler::Node"** %542 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = bitcast %"class.v8::internal::compiler::Node"** %541 to i64*
  store i64 %544, i64* %545, align 8
  %546 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %514, i64 -7
  %547 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 -7
  %548 = bitcast %"class.v8::internal::compiler::Node"** %547 to i64*
  %549 = load i64, i64* %548, align 8
  %550 = bitcast %"class.v8::internal::compiler::Node"** %546 to i64*
  store i64 %549, i64* %550, align 8
  %551 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %514, i64 -8
  %552 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %515, i64 -8
  %553 = bitcast %"class.v8::internal::compiler::Node"** %552 to i64*
  %554 = load i64, i64* %553, align 8
  %555 = bitcast %"class.v8::internal::compiler::Node"** %551 to i64*
  store i64 %554, i64* %555, align 8
  %556 = icmp eq %"class.v8::internal::compiler::Node"** %552, %383
  br i1 %556, label %557, label %513, !llvm.loop !131

557:                                              ; preds = %508, %513, %485, %371
  %558 = phi %"class.v8::internal::compiler::Node"** [ %374, %371 ], [ %411, %485 ], [ %509, %508 ], [ %551, %513 ]
  %559 = ptrtoint %"class.v8::internal::compiler::Node"** %558 to i64
  store i64 %559, i64* %335, align 8
  store i64 %381, i64* %334, align 8
  store i64 %376, i64* %344, align 8
  br label %560

560:                                              ; preds = %325, %557
  %561 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %3, align 8
  %562 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, align 8
  %563 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %562, i64 0, i32 3
  %564 = load i32, i32* %563, align 4
  %565 = and i32 %564, 16777215
  %566 = zext i32 %565 to i64
  %567 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %561, i64 0, i32 3, i32 0, i32 0, i32 0
  %568 = load i32*, i32** %567, align 8
  %569 = getelementptr inbounds i32, i32* %568, i64 %566
  store i32 %12, i32* %569, align 4
  %570 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %315, i64 0, i32 1
  %571 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %570, align 8
  %572 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %571, null
  br i1 %572, label %308, label %314

573:                                              ; preds = %590, %308
  %574 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %3, align 8
  %575 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %574, i64 0, i32 4, i32 0
  %576 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %574, i64 0, i32 4, i32 0, i32 0, i32 1
  %577 = bitcast %"class.v8::internal::compiler::Node"*** %576 to i64*
  %578 = load i64, i64* %577, align 8
  %579 = bitcast %"class.std::__1::vector.26"* %575 to i64*
  %580 = load i64, i64* %579, align 8
  %581 = sub i64 %578, %580
  %582 = lshr exact i64 %581, 3
  %583 = trunc i64 %582 to i32
  %584 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 5
  store i32 %583, i32* %584, align 8
  %585 = getelementptr inbounds %"struct.v8::internal::compiler::TempLoopInfo", %"struct.v8::internal::compiler::TempLoopInfo"* %16, i64 %14, i32 2
  %586 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %585, align 8
  %587 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %586, null
  %588 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %3, align 8
  %589 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %588, i64 0, i32 4, i32 0
  br i1 %587, label %595, label %607

590:                                              ; preds = %308, %590
  %591 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %593, %590 ], [ %310, %308 ]
  %592 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %591, align 8
  tail call void @_ZN2v88internal8compiler14LoopFinderImpl13SerializeLoopEPNS1_8LoopTree4LoopE(%"class.v8::internal::compiler::LoopFinderImpl"* %0, %"class.v8::internal::compiler::LoopTree::Loop"* %592)
  %593 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %591, i64 1
  %594 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %593, %312
  br i1 %594, label %573, label %590

595:                                              ; preds = %853, %573
  %596 = phi %"class.v8::internal::compiler::LoopTree"* [ %588, %573 ], [ %866, %853 ]
  %597 = phi %"class.std::__1::vector.26"* [ %589, %573 ], [ %867, %853 ]
  %598 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %596, i64 0, i32 4, i32 0, i32 0, i32 1
  %599 = bitcast %"class.v8::internal::compiler::Node"*** %598 to i64*
  %600 = load i64, i64* %599, align 8
  %601 = bitcast %"class.std::__1::vector.26"* %597 to i64*
  %602 = load i64, i64* %601, align 8
  %603 = sub i64 %600, %602
  %604 = lshr exact i64 %603, 3
  %605 = trunc i64 %604 to i32
  %606 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 6
  store i32 %605, i32* %606, align 4
  ret void

607:                                              ; preds = %573, %853
  %608 = phi %"class.std::__1::vector.26"* [ %867, %853 ], [ %589, %573 ]
  %609 = phi %"class.v8::internal::compiler::LoopTree"* [ %866, %853 ], [ %588, %573 ]
  %610 = phi %"struct.v8::internal::compiler::NodeInfo"* [ %864, %853 ], [ %586, %573 ]
  %611 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %610, i64 0, i32 0
  %612 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %609, i64 0, i32 4, i32 0, i32 0, i32 1
  %613 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %612, align 8
  %614 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %609, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %615 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %614, align 8
  %616 = icmp eq %"class.v8::internal::compiler::Node"** %613, %615
  %617 = ptrtoint %"class.v8::internal::compiler::Node"** %615 to i64
  br i1 %616, label %625, label %618

618:                                              ; preds = %607
  %619 = bitcast %"struct.v8::internal::compiler::NodeInfo"* %610 to i64*
  %620 = load i64, i64* %619, align 8
  %621 = bitcast %"class.v8::internal::compiler::Node"** %613 to i64*
  store i64 %620, i64* %621, align 8
  %622 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %613, i64 1
  %623 = ptrtoint %"class.v8::internal::compiler::Node"** %622 to i64
  %624 = bitcast %"class.v8::internal::compiler::Node"*** %612 to i64*
  store i64 %623, i64* %624, align 8
  br label %853

625:                                              ; preds = %607
  %626 = ptrtoint %"class.v8::internal::compiler::Node"** %613 to i64
  %627 = bitcast %"class.v8::internal::compiler::Node"*** %612 to i64*
  %628 = bitcast %"class.std::__1::vector.26"* %608 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = sub i64 %626, %629
  %631 = ashr exact i64 %630, 3
  %632 = add nsw i64 %631, 1
  %633 = icmp ugt i64 %632, 268435455
  br i1 %633, label %634, label %636

634:                                              ; preds = %625
  %635 = bitcast %"class.std::__1::vector.26"* %608 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %635) #10
  unreachable

636:                                              ; preds = %625
  %637 = bitcast %"class.v8::internal::compiler::Node"*** %614 to i64*
  %638 = sub i64 %617, %629
  %639 = ashr exact i64 %638, 3
  %640 = icmp ult i64 %639, 134217727
  br i1 %640, label %641, label %646

641:                                              ; preds = %636
  %642 = ashr exact i64 %638, 2
  %643 = icmp ult i64 %642, %632
  %644 = select i1 %643, i64 %632, i64 %642
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %664, label %646

646:                                              ; preds = %641, %636
  %647 = phi i64 [ %644, %641 ], [ 268435455, %636 ]
  %648 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %609, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %649 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %648, align 8
  %650 = shl i64 %647, 3
  %651 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %649, i64 0, i32 2
  %652 = load i64, i64* %651, align 8
  %653 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %649, i64 0, i32 3
  %654 = load i64, i64* %653, align 8
  %655 = sub i64 %654, %652
  %656 = icmp ugt i64 %650, %655
  br i1 %656, label %657, label %659, !prof !2

657:                                              ; preds = %646
  %658 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %649, i64 %650) #9
  br label %661

659:                                              ; preds = %646
  %660 = add i64 %652, %650
  store i64 %660, i64* %651, align 8
  br label %661

661:                                              ; preds = %659, %657
  %662 = phi i64 [ %658, %657 ], [ %652, %659 ]
  %663 = inttoptr i64 %662 to %"class.v8::internal::compiler::Node"**
  br label %664

664:                                              ; preds = %661, %641
  %665 = phi i64 [ %647, %661 ], [ 0, %641 ]
  %666 = phi %"class.v8::internal::compiler::Node"** [ %663, %661 ], [ null, %641 ]
  %667 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %666, i64 %631
  %668 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %666, i64 %665
  %669 = ptrtoint %"class.v8::internal::compiler::Node"** %668 to i64
  %670 = bitcast %"struct.v8::internal::compiler::NodeInfo"* %610 to i64*
  %671 = load i64, i64* %670, align 8
  %672 = bitcast %"class.v8::internal::compiler::Node"** %667 to i64*
  store i64 %671, i64* %672, align 8
  %673 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %667, i64 1
  %674 = ptrtoint %"class.v8::internal::compiler::Node"** %673 to i64
  %675 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %608, i64 0, i32 0, i32 0
  %676 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %675, align 8
  %677 = ptrtoint %"class.v8::internal::compiler::Node"** %676 to i64
  %678 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %612, align 8
  %679 = icmp eq %"class.v8::internal::compiler::Node"** %678, %676
  br i1 %679, label %850, label %680

680:                                              ; preds = %664
  %681 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %678, i64 -1
  %682 = ptrtoint %"class.v8::internal::compiler::Node"** %681 to i64
  %683 = sub i64 %682, %677
  %684 = lshr i64 %683, 3
  %685 = add nuw nsw i64 %684, 1
  %686 = icmp ult i64 %685, 4
  br i1 %686, label %780, label %687

687:                                              ; preds = %680
  %688 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %666, i64 -1
  %689 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %678, i64 -1
  %690 = ptrtoint %"class.v8::internal::compiler::Node"** %689 to i64
  %691 = sub i64 %690, %677
  %692 = lshr i64 %691, 3
  %693 = sub nsw i64 %631, %692
  %694 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %688, i64 %693
  %695 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %678, i64 -1
  %696 = sub nsw i64 0, %692
  %697 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %695, i64 %696
  %698 = icmp ult %"class.v8::internal::compiler::Node"** %694, %678
  %699 = icmp ult %"class.v8::internal::compiler::Node"** %697, %667
  %700 = and i1 %698, %699
  br i1 %700, label %780, label %701

701:                                              ; preds = %687
  %702 = and i64 %685, 4611686018427387900
  %703 = sub nsw i64 0, %702
  %704 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %667, i64 %703
  %705 = sub nsw i64 0, %702
  %706 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %678, i64 %705
  %707 = add nsw i64 %702, -4
  %708 = lshr exact i64 %707, 2
  %709 = add nuw nsw i64 %708, 1
  %710 = and i64 %709, 1
  %711 = icmp eq i64 %707, 0
  br i1 %711, label %756, label %712

712:                                              ; preds = %701
  %713 = sub nuw nsw i64 %709, %710
  %714 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %667, i64 -1
  %715 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %678, i64 -1
  %716 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %667, i64 -1
  %717 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %678, i64 -1
  br label %718

718:                                              ; preds = %718, %712
  %719 = phi i64 [ 0, %712 ], [ %753, %718 ]
  %720 = phi i64 [ %713, %712 ], [ %754, %718 ]
  %721 = sub i64 0, %719
  %722 = sub i64 0, %719
  %723 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %714, i64 %721
  %724 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %715, i64 %722
  %725 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %724, i64 -1
  %726 = bitcast %"class.v8::internal::compiler::Node"** %725 to <2 x i64>*
  %727 = load <2 x i64>, <2 x i64>* %726, align 8, !alias.scope !132
  %728 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %724, i64 -2
  %729 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %728, i64 -1
  %730 = bitcast %"class.v8::internal::compiler::Node"** %729 to <2 x i64>*
  %731 = load <2 x i64>, <2 x i64>* %730, align 8, !alias.scope !132
  %732 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %723, i64 -1
  %733 = bitcast %"class.v8::internal::compiler::Node"** %732 to <2 x i64>*
  store <2 x i64> %727, <2 x i64>* %733, align 8, !alias.scope !135, !noalias !132
  %734 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %723, i64 -2
  %735 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %734, i64 -1
  %736 = bitcast %"class.v8::internal::compiler::Node"** %735 to <2 x i64>*
  store <2 x i64> %731, <2 x i64>* %736, align 8, !alias.scope !135, !noalias !132
  %737 = sub nuw nsw i64 -4, %719
  %738 = sub nuw nsw i64 -4, %719
  %739 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %716, i64 %737
  %740 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %717, i64 %738
  %741 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %740, i64 -1
  %742 = bitcast %"class.v8::internal::compiler::Node"** %741 to <2 x i64>*
  %743 = load <2 x i64>, <2 x i64>* %742, align 8, !alias.scope !132
  %744 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %740, i64 -2
  %745 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %744, i64 -1
  %746 = bitcast %"class.v8::internal::compiler::Node"** %745 to <2 x i64>*
  %747 = load <2 x i64>, <2 x i64>* %746, align 8, !alias.scope !132
  %748 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %739, i64 -1
  %749 = bitcast %"class.v8::internal::compiler::Node"** %748 to <2 x i64>*
  store <2 x i64> %743, <2 x i64>* %749, align 8, !alias.scope !135, !noalias !132
  %750 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %739, i64 -2
  %751 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %750, i64 -1
  %752 = bitcast %"class.v8::internal::compiler::Node"** %751 to <2 x i64>*
  store <2 x i64> %747, <2 x i64>* %752, align 8, !alias.scope !135, !noalias !132
  %753 = add i64 %719, 8
  %754 = add i64 %720, -2
  %755 = icmp eq i64 %754, 0
  br i1 %755, label %756, label %718, !llvm.loop !137

756:                                              ; preds = %718, %701
  %757 = phi i64 [ 0, %701 ], [ %753, %718 ]
  %758 = icmp eq i64 %710, 0
  br i1 %758, label %778, label %759

759:                                              ; preds = %756
  %760 = sub i64 0, %757
  %761 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %667, i64 -1
  %762 = sub i64 0, %757
  %763 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %678, i64 -1
  %764 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %761, i64 %760
  %765 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %763, i64 %762
  %766 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %765, i64 -1
  %767 = bitcast %"class.v8::internal::compiler::Node"** %766 to <2 x i64>*
  %768 = load <2 x i64>, <2 x i64>* %767, align 8, !alias.scope !132
  %769 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %765, i64 -2
  %770 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %769, i64 -1
  %771 = bitcast %"class.v8::internal::compiler::Node"** %770 to <2 x i64>*
  %772 = load <2 x i64>, <2 x i64>* %771, align 8, !alias.scope !132
  %773 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %764, i64 -1
  %774 = bitcast %"class.v8::internal::compiler::Node"** %773 to <2 x i64>*
  store <2 x i64> %768, <2 x i64>* %774, align 8, !alias.scope !135, !noalias !132
  %775 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %764, i64 -2
  %776 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %775, i64 -1
  %777 = bitcast %"class.v8::internal::compiler::Node"** %776 to <2 x i64>*
  store <2 x i64> %772, <2 x i64>* %777, align 8, !alias.scope !135, !noalias !132
  br label %778

778:                                              ; preds = %756, %759
  %779 = icmp eq i64 %685, %702
  br i1 %779, label %850, label %780

780:                                              ; preds = %778, %687, %680
  %781 = phi %"class.v8::internal::compiler::Node"** [ %667, %687 ], [ %667, %680 ], [ %704, %778 ]
  %782 = phi %"class.v8::internal::compiler::Node"** [ %678, %687 ], [ %678, %680 ], [ %706, %778 ]
  %783 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %782, i64 -1
  %784 = ptrtoint %"class.v8::internal::compiler::Node"** %783 to i64
  %785 = sub i64 %784, %677
  %786 = lshr i64 %785, 3
  %787 = add nuw nsw i64 %786, 1
  %788 = and i64 %787, 7
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %801, label %790

790:                                              ; preds = %780, %790
  %791 = phi %"class.v8::internal::compiler::Node"** [ %794, %790 ], [ %781, %780 ]
  %792 = phi %"class.v8::internal::compiler::Node"** [ %795, %790 ], [ %782, %780 ]
  %793 = phi i64 [ %799, %790 ], [ %788, %780 ]
  %794 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %791, i64 -1
  %795 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %792, i64 -1
  %796 = bitcast %"class.v8::internal::compiler::Node"** %795 to i64*
  %797 = load i64, i64* %796, align 8
  %798 = bitcast %"class.v8::internal::compiler::Node"** %794 to i64*
  store i64 %797, i64* %798, align 8
  %799 = add i64 %793, -1
  %800 = icmp eq i64 %799, 0
  br i1 %800, label %801, label %790, !llvm.loop !138

801:                                              ; preds = %790, %780
  %802 = phi %"class.v8::internal::compiler::Node"** [ undef, %780 ], [ %794, %790 ]
  %803 = phi %"class.v8::internal::compiler::Node"** [ %781, %780 ], [ %794, %790 ]
  %804 = phi %"class.v8::internal::compiler::Node"** [ %782, %780 ], [ %795, %790 ]
  %805 = icmp ult i64 %785, 56
  br i1 %805, label %850, label %806

806:                                              ; preds = %801, %806
  %807 = phi %"class.v8::internal::compiler::Node"** [ %844, %806 ], [ %803, %801 ]
  %808 = phi %"class.v8::internal::compiler::Node"** [ %845, %806 ], [ %804, %801 ]
  %809 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %807, i64 -1
  %810 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %808, i64 -1
  %811 = bitcast %"class.v8::internal::compiler::Node"** %810 to i64*
  %812 = load i64, i64* %811, align 8
  %813 = bitcast %"class.v8::internal::compiler::Node"** %809 to i64*
  store i64 %812, i64* %813, align 8
  %814 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %807, i64 -2
  %815 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %808, i64 -2
  %816 = bitcast %"class.v8::internal::compiler::Node"** %815 to i64*
  %817 = load i64, i64* %816, align 8
  %818 = bitcast %"class.v8::internal::compiler::Node"** %814 to i64*
  store i64 %817, i64* %818, align 8
  %819 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %807, i64 -3
  %820 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %808, i64 -3
  %821 = bitcast %"class.v8::internal::compiler::Node"** %820 to i64*
  %822 = load i64, i64* %821, align 8
  %823 = bitcast %"class.v8::internal::compiler::Node"** %819 to i64*
  store i64 %822, i64* %823, align 8
  %824 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %807, i64 -4
  %825 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %808, i64 -4
  %826 = bitcast %"class.v8::internal::compiler::Node"** %825 to i64*
  %827 = load i64, i64* %826, align 8
  %828 = bitcast %"class.v8::internal::compiler::Node"** %824 to i64*
  store i64 %827, i64* %828, align 8
  %829 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %807, i64 -5
  %830 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %808, i64 -5
  %831 = bitcast %"class.v8::internal::compiler::Node"** %830 to i64*
  %832 = load i64, i64* %831, align 8
  %833 = bitcast %"class.v8::internal::compiler::Node"** %829 to i64*
  store i64 %832, i64* %833, align 8
  %834 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %807, i64 -6
  %835 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %808, i64 -6
  %836 = bitcast %"class.v8::internal::compiler::Node"** %835 to i64*
  %837 = load i64, i64* %836, align 8
  %838 = bitcast %"class.v8::internal::compiler::Node"** %834 to i64*
  store i64 %837, i64* %838, align 8
  %839 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %807, i64 -7
  %840 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %808, i64 -7
  %841 = bitcast %"class.v8::internal::compiler::Node"** %840 to i64*
  %842 = load i64, i64* %841, align 8
  %843 = bitcast %"class.v8::internal::compiler::Node"** %839 to i64*
  store i64 %842, i64* %843, align 8
  %844 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %807, i64 -8
  %845 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %808, i64 -8
  %846 = bitcast %"class.v8::internal::compiler::Node"** %845 to i64*
  %847 = load i64, i64* %846, align 8
  %848 = bitcast %"class.v8::internal::compiler::Node"** %844 to i64*
  store i64 %847, i64* %848, align 8
  %849 = icmp eq %"class.v8::internal::compiler::Node"** %845, %676
  br i1 %849, label %850, label %806, !llvm.loop !139

850:                                              ; preds = %801, %806, %778, %664
  %851 = phi %"class.v8::internal::compiler::Node"** [ %667, %664 ], [ %704, %778 ], [ %802, %801 ], [ %844, %806 ]
  %852 = ptrtoint %"class.v8::internal::compiler::Node"** %851 to i64
  store i64 %852, i64* %628, align 8
  store i64 %674, i64* %627, align 8
  store i64 %669, i64* %637, align 8
  br label %853

853:                                              ; preds = %618, %850
  %854 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %3, align 8
  %855 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %611, align 8
  %856 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %855, i64 0, i32 3
  %857 = load i32, i32* %856, align 4
  %858 = and i32 %857, 16777215
  %859 = zext i32 %858 to i64
  %860 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %854, i64 0, i32 3, i32 0, i32 0, i32 0
  %861 = load i32*, i32** %860, align 8
  %862 = getelementptr inbounds i32, i32* %861, i64 %859
  store i32 %12, i32* %862, align 4
  %863 = getelementptr inbounds %"struct.v8::internal::compiler::NodeInfo", %"struct.v8::internal::compiler::NodeInfo"* %610, i64 0, i32 1
  %864 = load %"struct.v8::internal::compiler::NodeInfo"*, %"struct.v8::internal::compiler::NodeInfo"** %863, align 8
  %865 = icmp eq %"struct.v8::internal::compiler::NodeInfo"* %864, null
  %866 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %3, align 8
  %867 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %866, i64 0, i32 4, i32 0
  br i1 %865, label %595, label %607
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler14LoopFinderImpl9PrintLoopEPNS1_8LoopTree4LoopE(%"class.v8::internal::compiler::LoopFinderImpl"*, %"class.v8::internal::compiler::LoopTree::Loop"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %16, %2
  %7 = phi i32 [ %4, %2 ], [ %19, %16 ]
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i32 %7) #9
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %9, %11
  br i1 %12, label %13, label %23

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %15 = sext i32 %9 to i64
  br label %31

16:                                               ; preds = %2, %16
  %17 = phi i32 [ %18, %16 ], [ 0, %2 ]
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #9
  %18 = add nuw nsw i32 %17, 1
  %19 = load i32, i32* %3, align 8
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %16, label %6

21:                                               ; preds = %31
  %22 = trunc i64 %34 to i32
  br label %23

23:                                               ; preds = %21, %6
  %24 = phi i32 [ %9, %6 ], [ %22, %21 ]
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %24, %26
  br i1 %27, label %28, label %47

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %30 = sext i32 %24 to i64
  br label %55

31:                                               ; preds = %13, %31
  %32 = phi i64 [ %15, %13 ], [ %34, %31 ]
  %33 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %14, align 8
  %34 = add nsw i64 %32, 1
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %36, i64 %32
  %38 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %38, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i32 %41) #9
  %42 = load i32, i32* %10, align 4
  %43 = sext i32 %42 to i64
  %44 = icmp slt i64 %34, %43
  br i1 %44, label %31, label %21

45:                                               ; preds = %55
  %46 = trunc i64 %58 to i32
  br label %47

47:                                               ; preds = %45, %23
  %48 = phi i32 [ %24, %23 ], [ %46, %45 ]
  %49 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 6
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %48, %50
  br i1 %51, label %52, label %83

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LoopFinderImpl", %"class.v8::internal::compiler::LoopFinderImpl"* %0, i64 0, i32 7
  %54 = sext i32 %48 to i64
  br label %69

55:                                               ; preds = %28, %55
  %56 = phi i64 [ %30, %28 ], [ %58, %55 ]
  %57 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %29, align 8
  %58 = add nsw i64 %56, 1
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, i64 %56
  %62 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %62, i64 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i32 %65) #9
  %66 = load i32, i32* %25, align 8
  %67 = sext i32 %66 to i64
  %68 = icmp slt i64 %58, %67
  br i1 %68, label %55, label %45

69:                                               ; preds = %52, %69
  %70 = phi i64 [ %54, %52 ], [ %72, %69 ]
  %71 = load %"class.v8::internal::compiler::LoopTree"*, %"class.v8::internal::compiler::LoopTree"** %53, align 8
  %72 = add nsw i64 %70, 1
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree", %"class.v8::internal::compiler::LoopTree"* %71, i64 0, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 %70
  %76 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %76, i64 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 16777215
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i32 %79) #9
  %80 = load i32, i32* %49, align 4
  %81 = sext i32 %80 to i64
  %82 = icmp slt i64 %72, %81
  br i1 %82, label %69, label %83

83:                                               ; preds = %69, %47
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #9
  %84 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %85 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop", %"class.v8::internal::compiler::LoopTree::Loop"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %87 = load %"class.v8::internal::compiler::LoopTree::Loop"**, %"class.v8::internal::compiler::LoopTree::Loop"*** %86, align 8
  %88 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %85, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %90, %83
  ret void

90:                                               ; preds = %83, %90
  %91 = phi %"class.v8::internal::compiler::LoopTree::Loop"** [ %93, %90 ], [ %85, %83 ]
  %92 = load %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %91, align 8
  tail call void @_ZN2v88internal8compiler14LoopFinderImpl9PrintLoopEPNS1_8LoopTree4LoopE(%"class.v8::internal::compiler::LoopFinderImpl"* %0, %"class.v8::internal::compiler::LoopTree::Loop"* %92)
  %93 = getelementptr inbounds %"class.v8::internal::compiler::LoopTree::Loop"*, %"class.v8::internal::compiler::LoopTree::Loop"** %91, i64 1
  %94 = icmp eq %"class.v8::internal::compiler::LoopTree::Loop"** %93, %87
  br i1 %94, label %89, label %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %186, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #9
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base"** %20, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !140

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %46, label %188, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !4
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base"* %43, %"struct.std::__1::__hash_node_base"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base"* %82, null
  br i1 %83, label %188, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %138

86:                                               ; preds = %84, %129
  %87 = phi %"struct.std::__1::__hash_node_base"* [ %133, %129 ], [ %82, %84 ]
  %88 = phi i64 [ %131, %129 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base"* [ %130, %129 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %129, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %128, label %135

104:                                              ; preds = %135, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %87, %135 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to %"class.v8::internal::compiler::Node"**
  %112 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, align 8
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, align 8
  %114 = icmp eq %"class.v8::internal::compiler::Node"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %109, %104
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %89 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %97
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %97
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %87, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %129

128:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base"* %89, %"struct.std::__1::__hash_node_base"** %101, align 8
  br label %129

129:                                              ; preds = %128, %115, %96
  %130 = phi %"struct.std::__1::__hash_node_base"* [ %87, %128 ], [ %89, %115 ], [ %87, %96 ]
  %131 = phi i64 [ %97, %128 ], [ %88, %115 ], [ %88, %96 ]
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %130, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base"* %133, null
  br i1 %134, label %188, label %86

135:                                              ; preds = %99
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %87, i64 2
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %136 to %"class.v8::internal::compiler::Node"**
  br label %104

138:                                              ; preds = %84, %180
  %139 = phi %"struct.std::__1::__hash_node_base"* [ %184, %180 ], [ %82, %84 ]
  %140 = phi i64 [ %182, %180 ], [ %78, %84 ]
  %141 = phi %"struct.std::__1::__hash_node_base"* [ %181, %180 ], [ %45, %84 ]
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %139, i64 1
  %143 = bitcast %"struct.std::__1::__hash_node_base"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, %85
  %146 = icmp eq i64 %145, %140
  br i1 %146, label %180, label %147

147:                                              ; preds = %138
  %148 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %148, i64 %145
  %150 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base"* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %139, i64 2
  %154 = bitcast %"struct.std::__1::__hash_node_base"* %153 to %"class.v8::internal::compiler::Node"**
  br label %156

155:                                              ; preds = %147
  store %"struct.std::__1::__hash_node_base"* %141, %"struct.std::__1::__hash_node_base"** %149, align 8
  br label %180

156:                                              ; preds = %152, %161
  %157 = phi %"struct.std::__1::__hash_node_base"* [ %159, %161 ], [ %139, %152 ]
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %157, i64 0, i32 0
  %159 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %158, align 8
  %160 = icmp eq %"struct.std::__1::__hash_node_base"* %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %159, i64 2
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %162 to %"class.v8::internal::compiler::Node"**
  %164 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, align 8
  %165 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, align 8
  %166 = icmp eq %"class.v8::internal::compiler::Node"* %164, %165
  br i1 %166, label %156, label %167

167:                                              ; preds = %156, %161
  %168 = ptrtoint %"struct.std::__1::__hash_node_base"* %159 to i64
  %169 = bitcast %"struct.std::__1::__hash_node_base"* %157 to i64*
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %141 to i64*
  store i64 %168, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, i64 %145
  %173 = bitcast %"struct.std::__1::__hash_node_base"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %169, align 8
  %176 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, i64 %145
  %178 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %139, %"struct.std::__1::__hash_node_base"** %179, align 8
  br label %180

180:                                              ; preds = %138, %167, %155
  %181 = phi %"struct.std::__1::__hash_node_base"* [ %139, %155 ], [ %141, %167 ], [ %139, %138 ]
  %182 = phi i64 [ %145, %155 ], [ %140, %167 ], [ %140, %138 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"* %184, null
  br i1 %185, label %188, label %138

186:                                              ; preds = %2
  %187 = bitcast %"class.std::__1::__hash_table"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 16, i1 false)
  br label %188

188:                                              ; preds = %180, %129, %77, %42, %186
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.v8::internal::compiler::Node"** dereferenceable(8), %"class.v8::internal::compiler::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::compiler::Node"** %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %5) #9
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %70, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #9, !range !4
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %70, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  %29 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, align 8
  br i1 %12, label %30, label %52

30:                                               ; preds = %27, %47
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %47 ], [ %25, %27 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %70, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %6
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = icmp ult i64 %38, %8
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %8
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %21
  br i1 %46, label %47, label %70

47:                                               ; preds = %44, %35
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to %"class.v8::internal::compiler::Node"**
  %50 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, align 8
  %51 = icmp eq %"class.v8::internal::compiler::Node"* %50, %29
  br i1 %51, label %172, label %30

52:                                               ; preds = %27, %65
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %55, %65 ], [ %25, %27 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %6
  %62 = and i64 %60, %28
  %63 = icmp eq i64 %62, %21
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %70

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to %"class.v8::internal::compiler::Node"**
  %68 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, align 8
  %69 = icmp eq %"class.v8::internal::compiler::Node"* %68, %29
  br i1 %69, label %172, label %52

70:                                               ; preds = %57, %52, %44, %30, %20, %3
  %71 = phi i64 [ %21, %20 ], [ undef, %3 ], [ %21, %30 ], [ %21, %44 ], [ %21, %52 ], [ %21, %57 ]
  %72 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %73 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %72, align 8, !noalias !141
  %74 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %73, i64 0, i32 2
  %75 = load i64, i64* %74, align 8, !noalias !141
  %76 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %73, i64 0, i32 3
  %77 = load i64, i64* %76, align 8, !noalias !141
  %78 = sub i64 %77, %75
  %79 = icmp ult i64 %78, 24
  br i1 %79, label %80, label %82, !prof !2

80:                                               ; preds = %70
  %81 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %73, i64 24) #9, !noalias !141
  br label %84

82:                                               ; preds = %70
  %83 = add i64 %75, 24
  store i64 %83, i64* %74, align 8, !noalias !141
  br label %84

84:                                               ; preds = %80, %82
  %85 = phi i64 [ %81, %80 ], [ %75, %82 ]
  %86 = inttoptr i64 %85 to %"struct.std::__1::__hash_node"*
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 2
  %88 = bitcast %"class.v8::internal::compiler::Node"** %2 to i64*
  %89 = load i64, i64* %88, align 8, !noalias !141
  %90 = bitcast %"class.v8::internal::compiler::Node"** %87 to i64*
  store i64 %89, i64* %90, align 8, !noalias !141
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 1
  store i64 %6, i64* %91, align 8, !noalias !141
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %92, align 8, !noalias !141
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 1
  %96 = uitofp i64 %95 to float
  %97 = uitofp i64 %8 to float
  %98 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %99 = load float, float* %98, align 4
  %100 = fmul float %99, %97
  %101 = fcmp olt float %100, %96
  %102 = or i1 %9, %101
  br i1 %102, label %103, label %126

103:                                              ; preds = %84
  %104 = shl i64 %8, 1
  %105 = icmp ult i64 %8, 3
  %106 = tail call i64 @llvm.ctpop.i64(i64 %8) #9, !range !4
  %107 = icmp ugt i64 %106, 1
  %108 = or i1 %105, %107
  %109 = zext i1 %108 to i64
  %110 = or i64 %104, %109
  %111 = fdiv float %96, %99
  %112 = tail call float @llvm.ceil.f32(float %111) #9
  %113 = fptoui float %112 to i64
  %114 = icmp ult i64 %110, %113
  %115 = select i1 %114, i64 %113, i64 %110
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %115)
  %116 = load i64, i64* %7, align 8
  %117 = tail call i64 @llvm.ctpop.i64(i64 %116) #9, !range !4
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %103
  %120 = add i64 %116, -1
  %121 = and i64 %120, %6
  br label %126

122:                                              ; preds = %103
  %123 = icmp ult i64 %6, %116
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %6, %116
  br label %126

126:                                              ; preds = %124, %122, %119, %84
  %127 = phi i64 [ %8, %84 ], [ %116, %119 ], [ %116, %122 ], [ %116, %124 ]
  %128 = phi i64 [ %71, %84 ], [ %121, %119 ], [ %6, %122 ], [ %125, %124 ]
  %129 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %130, i64 %128
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %134, label %162

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %135, i64 0, i32 0
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = inttoptr i64 %85 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %140, %"struct.std::__1::__hash_node_base"** %136, align 8
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %128
  store %"struct.std::__1::__hash_node_base"* %135, %"struct.std::__1::__hash_node_base"** %142, align 8
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %92, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %168, label %145

145:                                              ; preds = %134
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %143, i64 1
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = tail call i64 @llvm.ctpop.i64(i64 %127) #9, !range !4
  %150 = icmp ugt i64 %149, 1
  br i1 %150, label %154, label %151

151:                                              ; preds = %145
  %152 = add i64 %127, -1
  %153 = and i64 %148, %152
  br label %158

154:                                              ; preds = %145
  %155 = icmp ult i64 %148, %127
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = urem i64 %148, %127
  br label %158

158:                                              ; preds = %151, %154, %156
  %159 = phi i64 [ %153, %151 ], [ %157, %156 ], [ %148, %154 ]
  %160 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %129, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %160, i64 %159
  store %"struct.std::__1::__hash_node_base"* %140, %"struct.std::__1::__hash_node_base"** %161, align 8
  br label %168

162:                                              ; preds = %126
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 0, i32 0
  %164 = bitcast %"struct.std::__1::__hash_node_base"* %132 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = inttoptr i64 %85 to i64*
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %167, %"struct.std::__1::__hash_node_base"** %163, align 8
  br label %168

168:                                              ; preds = %134, %158, %162
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %86, i64 0, i32 0
  %170 = load i64, i64* %93, align 8
  %171 = add i64 %170, 1
  store i64 %171, i64* %93, align 8
  br label %172

172:                                              ; preds = %65, %47, %168
  %173 = phi i8 [ 1, %168 ], [ 0, %47 ], [ 0, %65 ]
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %169, %168 ], [ %33, %47 ], [ %55, %65 ]
  %175 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %174, 0
  %176 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %175, i8 %173, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %176
}

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{i64 0, i64 65}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2v88internal8compiler4Node11input_edgesEv: argument 0"}
!7 = distinct !{!7, !"_ZN2v88internal8compiler4Node11input_edgesEv"}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !15}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !15}
!25 = distinct !{!25, !17}
!26 = distinct !{!26, !17}
!27 = distinct !{!27, !15}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !15}
!34 = distinct !{!34, !17}
!35 = distinct !{!35, !15}
!36 = distinct !{!36, !17}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !15}
!43 = distinct !{!43, !17}
!44 = distinct !{!44, !15}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !15}
!51 = distinct !{!51, !17}
!52 = distinct !{!52, !17}
!53 = distinct !{!53, !15}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !15}
!60 = distinct !{!60, !17}
!61 = distinct !{!61, !15}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !15}
!68 = distinct !{!68, !17}
!69 = distinct !{!69, !15}
!70 = !{!71}
!71 = distinct !{!71, !72}
!72 = distinct !{!72, !"LVerDomain"}
!73 = !{!74}
!74 = distinct !{!74, !72}
!75 = distinct !{!75, !15}
!76 = distinct !{!76, !17}
!77 = distinct !{!77, !15}
!78 = distinct !{!78, !17}
!79 = distinct !{!79, !17}
!80 = distinct !{!80, !17}
!81 = distinct !{!81, !17}
!82 = distinct !{!82, !17}
!83 = distinct !{!83, !17}
!84 = !{!85}
!85 = distinct !{!85, !86}
!86 = distinct !{!86, !"LVerDomain"}
!87 = !{!88}
!88 = distinct !{!88, !86}
!89 = distinct !{!89, !15}
!90 = distinct !{!90, !17}
!91 = distinct !{!91, !15}
!92 = !{!93}
!93 = distinct !{!93, !94}
!94 = distinct !{!94, !"LVerDomain"}
!95 = !{!96}
!96 = distinct !{!96, !94}
!97 = distinct !{!97, !15}
!98 = distinct !{!98, !17}
!99 = distinct !{!99, !15}
!100 = !{!101}
!101 = distinct !{!101, !102}
!102 = distinct !{!102, !"LVerDomain"}
!103 = !{!104}
!104 = distinct !{!104, !102}
!105 = distinct !{!105, !15}
!106 = distinct !{!106, !17}
!107 = distinct !{!107, !15}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !15}
!114 = distinct !{!114, !17}
!115 = distinct !{!115, !15}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !15}
!122 = distinct !{!122, !17}
!123 = distinct !{!123, !15}
!124 = !{!125}
!125 = distinct !{!125, !126}
!126 = distinct !{!126, !"LVerDomain"}
!127 = !{!128}
!128 = distinct !{!128, !126}
!129 = distinct !{!129, !15}
!130 = distinct !{!130, !17}
!131 = distinct !{!131, !15}
!132 = !{!133}
!133 = distinct !{!133, !134}
!134 = distinct !{!134, !"LVerDomain"}
!135 = !{!136}
!136 = distinct !{!136, !134}
!137 = distinct !{!137, !15}
!138 = distinct !{!138, !17}
!139 = distinct !{!139, !15}
!140 = distinct !{!140, !17}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSB_ISK_EEEEEEmOT_DpOT0_: argument 0"}
!143 = distinct !{!143, !"_ZNSt3__112__hash_tableIPN2v88internal8compiler4NodeENS1_4base4hashIS5_EENS_8equal_toIS5_EENS2_13ZoneAllocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSB_ISK_EEEEEEmOT_DpOT0_"}
