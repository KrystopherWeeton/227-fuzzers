; ModuleID = '../../third_party/pdfium/core/fpdfapi/render/cpdf_imageloader.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/render/cpdf_imageloader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_ImageLoader = type { i32, i8, %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.140" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBBase* }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.0", %"class.std::__1::vector" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned.273" }
%"class.fxcrt::MaybeOwned.273" = type { %"class.std::__1::unique_ptr.274", %"class.fxcrt::UnownedPtr.277" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { i8* }
%"class.fxcrt::UnownedPtr.277" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_PageRenderCache* }
%class.CPDF_PageRenderCache = type <{ %"class.CPDF_Page::RenderCacheIface", %"class.fxcrt::UnownedPtr.10", %"class.std::__1::map.104", %"class.fxcrt::MaybeOwned", i32, i32, i8, [7 x i8] }>
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.10" = type { %class.CPDF_Page* }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr.51", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.fxcrt::ObservedPtr" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.11", %"class.std::__1::map.29", %"class.std::__1::map.40", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr.11", %"class.fxcrt::UnownedPtr.51", %"class.std::__1::vector.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set" }
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Transparency = type { i8, i8 }
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.15" }
%"class.fxcrt::RetainPtr.15" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.321" }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.324", %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.339", [4 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326", %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.69" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.63"**, %"class.std::__1::unique_ptr.63"**, %"class.std::__1::unique_ptr.63"**, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.141" }
%"class.fxcrt::RetainPtr.141" = type { %"class.std::__1::unique_ptr.142" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.145", %"class.std::__1::vector.152" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.147" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.152" = type { %"class.std::__1::__vector_base.153" }
%"class.std::__1::__vector_base.153" = type { %"class.std::__1::unique_ptr.154"*, %"class.std::__1::unique_ptr.154"*, %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::unique_ptr.154" = type opaque
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.std::__1::unique_ptr.154"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.162" }
%"class.fxcrt::SharedCopyOnWrite.162" = type { %"class.fxcrt::RetainPtr.163" }
%"class.fxcrt::RetainPtr.163" = type { %"class.std::__1::unique_ptr.164" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.167" }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { float*, float*, %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.176" }
%"class.fxcrt::SharedCopyOnWrite.176" = type { %"class.fxcrt::RetainPtr.177" }
%"class.fxcrt::RetainPtr.177" = type { %"class.std::__1::unique_ptr.178" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.167", %"class.std::__1::unique_ptr.181", %"class.fxcrt::RetainPtr.199" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %class.PatternValue* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr.184", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr.184" = type { %"class.std::__1::unique_ptr.185" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.51", %"class.fxcrt::RetainPtr.188", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::Observable" = type { %"class.std::__1::set.94" }
%"class.std::__1::set.94" = type { %"class.std::__1::__tree.95" }
%"class.std::__1::__tree.95" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.fxcrt::RetainPtr.188" = type { %"class.std::__1::unique_ptr.189" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.CPDF_Object* }
%"struct.std::__1::array" = type { [16 x float] }
%"class.fxcrt::RetainPtr.199" = type { %"class.std::__1::unique_ptr.200" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.203", %"class.fxcrt::RetainPtr.204", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.203" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.fxcrt::RetainPtr.204" = type { %"class.std::__1::unique_ptr.205" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.214" }
%"class.fxcrt::SharedCopyOnWrite.214" = type { %"class.fxcrt::RetainPtr.215" }
%"class.fxcrt::RetainPtr.215" = type { %"class.std::__1::unique_ptr.216" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.219", %"class.fxcrt::UnownedPtr.203", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.219" = type { %"class.std::__1::unique_ptr.220" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.227" }
%"class.fxcrt::SharedCopyOnWrite.227" = type { %"class.fxcrt::RetainPtr.228" }
%"class.fxcrt::RetainPtr.228" = type { %"class.std::__1::unique_ptr.229" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.188", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.238", %"class.fxcrt::RetainPtr.244", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.238", %"class.fxcrt::RetainPtr.238", %"class.fxcrt::RetainPtr.238", float, float }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.232" }
%"class.fxcrt::RetainPtr.232" = type { %"class.std::__1::unique_ptr.233" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.244" = type { %"class.std::__1::unique_ptr.245" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.203", i8, %"class.std::__1::vector.248", %"class.std::__1::vector.248", %"class.std::__1::vector.248" }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { i8*, i8*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"class.fxcrt::RetainPtr.238" = type { %"class.std::__1::unique_ptr.239" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %class.CPDF_Object* }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.259" }
%"class.fxcrt::RetainPtr.259" = type { %"class.std::__1::unique_ptr.260" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.263" }
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { %"class.fxcrt::RetainPtr.265"*, %"class.fxcrt::RetainPtr.265"*, %"class.std::__1::__compressed_pair.266" }
%"class.fxcrt::RetainPtr.265" = type opaque
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.fxcrt::RetainPtr.265"* }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.std::__1::unique_ptr.63"** }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.73" }
%"class.std::__1::__tree.73" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%class.CFX_STemplate = type { float, float }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::UnownedPtr.51" = type { %class.CPDF_Document* }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%"class.std::__1::map.104" = type { %"class.std::__1::__tree.105" }
%"class.std::__1::__tree.105" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.115", %"class.fxcrt::UnownedPtr.139" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.CPDF_ImageCacheEntry* }
%class.CPDF_ImageCacheEntry = type { i32, i32, i32, %"class.fxcrt::UnownedPtr.51", %"class.fxcrt::RetainPtr.118", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr.118" = type { %"class.std::__1::unique_ptr.119" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.CPDF_Image* }
%class.CPDF_Image = type { %"class.fxcrt::Retainable", i32, i32, i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.51", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr.122", %"class.fxcrt::RetainPtr.128" }
%"class.fxcrt::RetainPtr.122" = type { %"class.std::__1::unique_ptr.123" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.fxcrt::RetainPtr.128" = type { %"class.std::__1::unique_ptr.129" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::UnownedPtr.139" = type { %class.CPDF_ImageCacheEntry* }
%"class.fxcrt::UnownedPtr.140" = type { %class.CPDF_ImageObject* }
%class.CPDF_ImageObject = type { %class.CPDF_PageObject, %class.CFX_Matrix, %"class.fxcrt::RetainPtr.118" }
%class.CPDF_RenderStatus = type <{ %class.CPDF_RenderOptions, %"class.fxcrt::RetainPtr.128", %"class.fxcrt::RetainPtr.128", %"class.std::__1::vector.295", %"class.fxcrt::UnownedPtr.303", %"class.fxcrt::UnownedPtr.312", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.313", %"class.fxcrt::UnownedPtr.313", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.314", %"class.fxcrt::UnownedPtr.320", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr.278" }
%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr.278" = type { %"class.std::__1::unique_ptr.279" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr.51", i32, %"class.std::__1::map.282" }
%"class.std::__1::map.282" = type { %"class.std::__1::__tree.283" }
%"class.std::__1::__tree.283" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"class.fxcrt::UnownedPtr.297"*, %"class.fxcrt::UnownedPtr.297"*, %"class.std::__1::__compressed_pair.298" }
%"class.fxcrt::UnownedPtr.297" = type opaque
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.fxcrt::UnownedPtr.297"* }
%"class.fxcrt::UnownedPtr.303" = type { %class.CPDF_RenderContext* }
%class.CPDF_RenderContext = type { %"class.fxcrt::UnownedPtr.51", %"class.fxcrt::RetainPtr.11", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.304" }
%"class.std::__1::vector.304" = type { %"class.std::__1::__vector_base.305" }
%"class.std::__1::__vector_base.305" = type { %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__compressed_pair.307" }
%"class.CPDF_RenderContext::Layer" = type { %"class.fxcrt::UnownedPtr.306", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.306" = type { %class.CPDF_PageObjectHolder* }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.CPDF_RenderContext::Layer"* }
%"class.fxcrt::UnownedPtr.312" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"class.fxcrt::UnownedPtr.313" = type { %class.CPDF_PageObject* }
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %class.CPDF_ImageRenderer* }
%class.CPDF_ImageRenderer = type opaque
%"class.fxcrt::UnownedPtr.320" = type { %class.CPDF_Type3Char* }
%class.CPDF_Type3Char = type opaque
%class.PauseIndicatorIface = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }

@_ZN16CPDF_ImageLoaderC1Ev = hidden unnamed_addr alias void (%class.CPDF_ImageLoader*), void (%class.CPDF_ImageLoader*)* @_ZN16CPDF_ImageLoaderC2Ev
@_ZN16CPDF_ImageLoaderD1Ev = hidden unnamed_addr alias void (%class.CPDF_ImageLoader*), void (%class.CPDF_ImageLoader*)* @_ZN16CPDF_ImageLoaderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CPDF_ImageLoaderC2Ev(%class.CPDF_ImageLoader* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 2
  %5 = bitcast %"class.fxcrt::RetainPtr"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageLoaderD2Ev(%class.CPDF_ImageLoader* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %2, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %2, align 8
  %4 = icmp eq %class.CFX_DIBBase* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %3, i64 0, i32 0
  %12 = bitcast %class.CFX_DIBBase* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #4
  br label %16

16:                                               ; preds = %1, %5, %10
  %17 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %17, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %17, align 8
  %19 = icmp eq %class.CFX_DIBBase* %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %18, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %18, i64 0, i32 0
  %27 = bitcast %class.CFX_DIBBase* %18 to void (%"class.fxcrt::Retainable"*)***
  %28 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, i64 1
  %30 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, align 8
  tail call void %30(%"class.fxcrt::Retainable"* nonnull %26) #4
  br label %31

31:                                               ; preds = %16, %20, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CPDF_ImageLoader5StartEPK16CPDF_ImageObjectPK17CPDF_RenderStatusb(%class.CPDF_ImageLoader* nocapture, %class.CPDF_ImageObject*, %class.CPDF_RenderStatus*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr.118", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.118", align 8
  %7 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %2, i64 0, i32 4, i32 0
  %8 = load %class.CPDF_RenderContext*, %class.CPDF_RenderContext** %7, align 8
  %9 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %8, i64 0, i32 2, i32 0
  %10 = load %class.CPDF_PageRenderCache*, %class.CPDF_PageRenderCache** %9, align 8
  %11 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 4, i32 0
  store %class.CPDF_PageRenderCache* %10, %class.CPDF_PageRenderCache** %11, align 8
  %12 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 5, i32 0
  store %class.CPDF_ImageObject* %1, %class.CPDF_ImageObject** %12, align 8
  %13 = icmp eq %class.CPDF_PageRenderCache* %10, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.fxcrt::RetainPtr.118"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #4
  call void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.118"* nonnull sret %5, %class.CPDF_ImageObject* %1) #4
  %16 = call zeroext i1 @_ZN20CPDF_PageRenderCache20StartGetCachedBitmapERKN5fxcrt9RetainPtrI10CPDF_ImageEEPK17CPDF_RenderStatusb(%class.CPDF_PageRenderCache* nonnull %10, %"class.fxcrt::RetainPtr.118"* nonnull dereferenceable(8) %5, %class.CPDF_RenderStatus* %2, i1 zeroext %3) #4
  %17 = getelementptr inbounds %"class.fxcrt::RetainPtr.118", %"class.fxcrt::RetainPtr.118"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CPDF_Image*, %class.CPDF_Image** %17, align 8
  store %class.CPDF_Image* null, %class.CPDF_Image** %17, align 8
  %19 = icmp eq %class.CPDF_Image* %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %18, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %18, i64 0, i32 0
  %27 = bitcast %class.CPDF_Image* %18 to void (%"class.fxcrt::Retainable"*)***
  %28 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, i64 1
  %30 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, align 8
  call void %30(%"class.fxcrt::Retainable"* nonnull %26) #4
  br label %31

31:                                               ; preds = %14, %20, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4
  br i1 %16, label %61, label %60

32:                                               ; preds = %4
  %33 = bitcast %"class.fxcrt::RetainPtr.118"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #4
  call void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.118"* nonnull sret %6, %class.CPDF_ImageObject* %1) #4
  %34 = getelementptr inbounds %"class.fxcrt::RetainPtr.118", %"class.fxcrt::RetainPtr.118"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %class.CPDF_Image*, %class.CPDF_Image** %34, align 8
  %36 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %37 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %36, align 8
  %38 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %39 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %38, align 8
  %40 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %2, i64 0, i32 20
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %2, i64 0, i32 18
  %43 = load i8, i8* %42, align 2, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = call zeroext i1 @_ZN10CPDF_Image16StartLoadDIBBaseEPK15CPDF_DictionaryS2_bN15CPDF_ColorSpace6FamilyEb(%class.CPDF_Image* %35, %class.CPDF_Dictionary* %37, %class.CPDF_Dictionary* %39, i1 zeroext %3, i32 %41, i1 zeroext %44) #4
  %46 = load %class.CPDF_Image*, %class.CPDF_Image** %34, align 8
  store %class.CPDF_Image* null, %class.CPDF_Image** %34, align 8
  %47 = icmp eq %class.CPDF_Image* %46, null
  br i1 %47, label %59, label %48

48:                                               ; preds = %32
  %49 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %46, i64 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = add nsw i64 %50, -1
  store i64 %51, i64* %49, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %46, i64 0, i32 0
  %55 = bitcast %class.CPDF_Image* %46 to void (%"class.fxcrt::Retainable"*)***
  %56 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %56, i64 1
  %58 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %57, align 8
  call void %58(%"class.fxcrt::Retainable"* nonnull %54) #4
  br label %59

59:                                               ; preds = %53, %48, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #4
  br i1 %45, label %61, label %60

60:                                               ; preds = %31, %59
  call void @_ZN16CPDF_ImageLoader13HandleFailureEv(%class.CPDF_ImageLoader* %0)
  br label %61

61:                                               ; preds = %31, %60, %59
  %62 = phi i1 [ true, %31 ], [ false, %60 ], [ true, %59 ]
  ret i1 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN20CPDF_PageRenderCache20StartGetCachedBitmapERKN5fxcrt9RetainPtrI10CPDF_ImageEEPK17CPDF_RenderStatusb(%class.CPDF_PageRenderCache*, %"class.fxcrt::RetainPtr.118"* dereferenceable(8), %class.CPDF_RenderStatus*, i1 zeroext) local_unnamed_addr #3

declare void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.118"* sret, %class.CPDF_ImageObject*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN10CPDF_Image16StartLoadDIBBaseEPK15CPDF_DictionaryS2_bN15CPDF_ColorSpace6FamilyEb(%class.CPDF_Image*, %class.CPDF_Dictionary*, %class.CPDF_Dictionary*, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageLoader13HandleFailureEv(%class.CPDF_ImageLoader* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr", align 8
  %3 = alloca %"class.fxcrt::RetainPtr", align 8
  %4 = alloca %"class.fxcrt::RetainPtr.118", align 8
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 4, i32 0
  %8 = load %class.CPDF_PageRenderCache*, %class.CPDF_PageRenderCache** %7, align 8
  %9 = icmp eq %class.CPDF_PageRenderCache* %8, null
  br i1 %9, label %87, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %8, i64 0, i32 3, i32 1, i32 0
  %12 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %11, align 8
  %13 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 1
  store i8 1, i8* %13, align 4
  %14 = bitcast %"class.fxcrt::RetainPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #4
  call void @_ZN20CPDF_ImageCacheEntry12DetachBitmapEv(%"class.fxcrt::RetainPtr"* nonnull sret %2, %class.CPDF_ImageCacheEntry* %12) #4
  %15 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.fxcrt::RetainPtr"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %16, align 8
  %19 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %19, align 8
  %21 = bitcast %"class.fxcrt::RetainPtr"* %15 to i64*
  store i64 %18, i64* %21, align 8
  %22 = icmp eq %class.CFX_DIBBase* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %10
  %24 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %20, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %10, %23
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %16, align 8
  br label %48

29:                                               ; preds = %23
  %30 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %20, i64 0, i32 0
  %31 = bitcast %class.CFX_DIBBase* %20 to void (%"class.fxcrt::Retainable"*)***
  %32 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, i64 1
  %34 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, align 8
  call void %34(%"class.fxcrt::Retainable"* nonnull %30) #4
  %35 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %16, align 8
  %36 = bitcast %class.CFX_DIBBase* %35 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %16, align 8
  %37 = icmp eq %class.CFX_DIBBase* %35, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %35, i64 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %35, i64 0, i32 0
  %45 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %36, align 8
  %46 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %45, i64 1
  %47 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %46, align 8
  call void %47(%"class.fxcrt::Retainable"* nonnull %44) #4
  br label %48

48:                                               ; preds = %28, %29, %38, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #4
  %49 = bitcast %"class.fxcrt::RetainPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #4
  call void @_ZN20CPDF_ImageCacheEntry10DetachMaskEv(%"class.fxcrt::RetainPtr"* nonnull sret %3, %class.CPDF_ImageCacheEntry* %12) #4
  %50 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 3
  %51 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.fxcrt::RetainPtr"* %3 to i64*
  %53 = load i64, i64* %52, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %51, align 8
  %54 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %54, align 8
  %56 = bitcast %"class.fxcrt::RetainPtr"* %50 to i64*
  store i64 %53, i64* %56, align 8
  %57 = icmp eq %class.CFX_DIBBase* %55, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %55, i64 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = add nsw i64 %60, -1
  store i64 %61, i64* %59, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %48, %58
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %51, align 8
  br label %83

64:                                               ; preds = %58
  %65 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %55, i64 0, i32 0
  %66 = bitcast %class.CFX_DIBBase* %55 to void (%"class.fxcrt::Retainable"*)***
  %67 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %67, i64 1
  %69 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %68, align 8
  call void %69(%"class.fxcrt::Retainable"* nonnull %65) #4
  %70 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %51, align 8
  %71 = bitcast %class.CFX_DIBBase* %70 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %51, align 8
  %72 = icmp eq %class.CFX_DIBBase* %70, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %64
  %74 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %70, i64 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = add nsw i64 %75, -1
  store i64 %76, i64* %74, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %83

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %70, i64 0, i32 0
  %80 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %71, align 8
  %81 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %80, i64 1
  %82 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %81, align 8
  call void %82(%"class.fxcrt::Retainable"* nonnull %79) #4
  br label %83

83:                                               ; preds = %63, %64, %73, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #4
  %84 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %12, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 0
  store i32 %85, i32* %86, align 8
  br label %182

87:                                               ; preds = %1
  %88 = bitcast %"class.fxcrt::RetainPtr.118"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #4
  %89 = getelementptr inbounds %"class.fxcrt::RetainPtr.118", %"class.fxcrt::RetainPtr.118"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Image* inttoptr (i64 -6148914691236517206 to %class.CPDF_Image*), %class.CPDF_Image** %89, align 8
  %90 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 5, i32 0
  %91 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %90, align 8
  call void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.118"* nonnull sret %4, %class.CPDF_ImageObject* %91) #4
  %92 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 1
  store i8 0, i8* %92, align 4
  %93 = bitcast %"class.fxcrt::RetainPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #4
  %94 = load %class.CPDF_Image*, %class.CPDF_Image** %89, align 8
  call void @_ZN10CPDF_Image12DetachBitmapEv(%"class.fxcrt::RetainPtr"* nonnull sret %5, %class.CPDF_Image* %94) #4
  %95 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 2
  %96 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.fxcrt::RetainPtr"* %5 to i64*
  %98 = load i64, i64* %97, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %96, align 8
  %99 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %99, align 8
  %101 = bitcast %"class.fxcrt::RetainPtr"* %95 to i64*
  store i64 %98, i64* %101, align 8
  %102 = icmp eq %class.CFX_DIBBase* %100, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %87
  %104 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %100, i64 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = add nsw i64 %105, -1
  store i64 %106, i64* %104, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %87, %103
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %96, align 8
  br label %128

109:                                              ; preds = %103
  %110 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %100, i64 0, i32 0
  %111 = bitcast %class.CFX_DIBBase* %100 to void (%"class.fxcrt::Retainable"*)***
  %112 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %112, i64 1
  %114 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %113, align 8
  call void %114(%"class.fxcrt::Retainable"* nonnull %110) #4
  %115 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %96, align 8
  %116 = bitcast %class.CFX_DIBBase* %115 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %96, align 8
  %117 = icmp eq %class.CFX_DIBBase* %115, null
  br i1 %117, label %128, label %118

118:                                              ; preds = %109
  %119 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %115, i64 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = add nsw i64 %120, -1
  store i64 %121, i64* %119, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %128

123:                                              ; preds = %118
  %124 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %115, i64 0, i32 0
  %125 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %116, align 8
  %126 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %125, i64 1
  %127 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %126, align 8
  call void %127(%"class.fxcrt::Retainable"* nonnull %124) #4
  br label %128

128:                                              ; preds = %108, %109, %118, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #4
  %129 = bitcast %"class.fxcrt::RetainPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #4
  %130 = load %class.CPDF_Image*, %class.CPDF_Image** %89, align 8
  call void @_ZN10CPDF_Image10DetachMaskEv(%"class.fxcrt::RetainPtr"* nonnull sret %6, %class.CPDF_Image* %130) #4
  %131 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 3
  %132 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  %134 = load i64, i64* %133, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %132, align 8
  %135 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %135, align 8
  %137 = bitcast %"class.fxcrt::RetainPtr"* %131 to i64*
  store i64 %134, i64* %137, align 8
  %138 = icmp eq %class.CFX_DIBBase* %136, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %128
  %140 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %136, i64 0, i32 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = add nsw i64 %141, -1
  store i64 %142, i64* %140, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %145, label %144

144:                                              ; preds = %128, %139
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %132, align 8
  br label %164

145:                                              ; preds = %139
  %146 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %136, i64 0, i32 0
  %147 = bitcast %class.CFX_DIBBase* %136 to void (%"class.fxcrt::Retainable"*)***
  %148 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %148, i64 1
  %150 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %149, align 8
  call void %150(%"class.fxcrt::Retainable"* nonnull %146) #4
  %151 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %132, align 8
  %152 = bitcast %class.CFX_DIBBase* %151 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %132, align 8
  %153 = icmp eq %class.CFX_DIBBase* %151, null
  br i1 %153, label %164, label %154

154:                                              ; preds = %145
  %155 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %151, i64 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = add nsw i64 %156, -1
  store i64 %157, i64* %155, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %164

159:                                              ; preds = %154
  %160 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %151, i64 0, i32 0
  %161 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %152, align 8
  %162 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %161, i64 1
  %163 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %162, align 8
  call void %163(%"class.fxcrt::Retainable"* nonnull %160) #4
  br label %164

164:                                              ; preds = %144, %145, %154, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #4
  %165 = load %class.CPDF_Image*, %class.CPDF_Image** %89, align 8
  %166 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %165, i64 0, i32 3
  %167 = load i32, i32* %166, align 8
  %168 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 0
  store i32 %167, i32* %168, align 8
  store %class.CPDF_Image* null, %class.CPDF_Image** %89, align 8
  %169 = icmp eq %class.CPDF_Image* %165, null
  br i1 %169, label %181, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %165, i64 0, i32 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = add nsw i64 %172, -1
  store i64 %173, i64* %171, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %181

175:                                              ; preds = %170
  %176 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %165, i64 0, i32 0
  %177 = bitcast %class.CPDF_Image* %165 to void (%"class.fxcrt::Retainable"*)***
  %178 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %178, i64 1
  %180 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %179, align 8
  call void %180(%"class.fxcrt::Retainable"* nonnull %176) #4
  br label %181

181:                                              ; preds = %164, %170, %175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #4
  br label %182

182:                                              ; preds = %181, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CPDF_ImageLoader8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_ImageLoader* nocapture, %class.PauseIndicatorIface*, %class.CPDF_RenderStatus*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.118", align 8
  %5 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 4, i32 0
  %6 = load %class.CPDF_PageRenderCache*, %class.CPDF_PageRenderCache** %5, align 8
  %7 = icmp eq %class.CPDF_PageRenderCache* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZN20CPDF_PageRenderCache8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_PageRenderCache* nonnull %6, %class.PauseIndicatorIface* %1, %class.CPDF_RenderStatus* %2) #4
  br i1 %9, label %32, label %31

10:                                               ; preds = %3
  %11 = bitcast %"class.fxcrt::RetainPtr.118"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #4
  %12 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %0, i64 0, i32 5, i32 0
  %13 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %12, align 8
  call void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.118"* nonnull sret %4, %class.CPDF_ImageObject* %13) #4
  %14 = getelementptr inbounds %"class.fxcrt::RetainPtr.118", %"class.fxcrt::RetainPtr.118"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.CPDF_Image*, %class.CPDF_Image** %14, align 8
  %16 = call zeroext i1 @_ZN10CPDF_Image8ContinueEP19PauseIndicatorIface(%class.CPDF_Image* %15, %class.PauseIndicatorIface* %1) #4
  %17 = load %class.CPDF_Image*, %class.CPDF_Image** %14, align 8
  store %class.CPDF_Image* null, %class.CPDF_Image** %14, align 8
  %18 = icmp eq %class.CPDF_Image* %17, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %17, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i64 %21, -1
  store i64 %22, i64* %20, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %17, i64 0, i32 0
  %26 = bitcast %class.CPDF_Image* %17 to void (%"class.fxcrt::Retainable"*)***
  %27 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, i64 1
  %29 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, align 8
  call void %29(%"class.fxcrt::Retainable"* nonnull %25) #4
  br label %30

30:                                               ; preds = %24, %19, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #4
  br i1 %16, label %32, label %31

31:                                               ; preds = %8, %30
  call void @_ZN16CPDF_ImageLoader13HandleFailureEv(%class.CPDF_ImageLoader* %0)
  br label %32

32:                                               ; preds = %8, %31, %30
  %33 = phi i1 [ true, %8 ], [ false, %31 ], [ true, %30 ]
  ret i1 %33
}

declare zeroext i1 @_ZN20CPDF_PageRenderCache8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_PageRenderCache*, %class.PauseIndicatorIface*, %class.CPDF_RenderStatus*) local_unnamed_addr #3

declare zeroext i1 @_ZN10CPDF_Image8ContinueEP19PauseIndicatorIface(%class.CPDF_Image*, %class.PauseIndicatorIface*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ImageLoader14TranslateImageERKN5fxcrt9RetainPtrI17CPDF_TransferFuncEE(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CPDF_ImageLoader*, %"class.fxcrt::RetainPtr.244"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.0", align 8
  %6 = bitcast %"class.fxcrt::RetainPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr.244", %"class.fxcrt::RetainPtr.244"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_TransferFunc*, %class.CPDF_TransferFunc** %7, align 8
  %9 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %1, i64 0, i32 2
  call void @_ZN17CPDF_TransferFunc14TranslateImageERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%"class.fxcrt::RetainPtr"* nonnull sret %4, %class.CPDF_TransferFunc* %8, %"class.fxcrt::RetainPtr"* dereferenceable(8) %9) #4
  %10 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.fxcrt::RetainPtr"* %4 to i64*
  %12 = load i64, i64* %11, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %10, align 8
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %13, align 8
  %15 = bitcast %"class.fxcrt::RetainPtr"* %9 to i64*
  store i64 %12, i64* %15, align 8
  %16 = icmp eq %class.CFX_DIBBase* %14, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %14, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, -1
  store i64 %20, i64* %18, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %3, %17
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %10, align 8
  br label %42

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %14, i64 0, i32 0
  %25 = bitcast %class.CFX_DIBBase* %14 to void (%"class.fxcrt::Retainable"*)***
  %26 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, i64 1
  %28 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, align 8
  call void %28(%"class.fxcrt::Retainable"* nonnull %24) #4
  %29 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %10, align 8
  %30 = bitcast %class.CFX_DIBBase* %29 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %10, align 8
  %31 = icmp eq %class.CFX_DIBBase* %29, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %29, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add nsw i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %29, i64 0, i32 0
  %39 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %30, align 8
  %40 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, i64 1
  %41 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, align 8
  call void %41(%"class.fxcrt::Retainable"* nonnull %38) #4
  br label %42

42:                                               ; preds = %22, %23, %32, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4
  %43 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %1, i64 0, i32 1
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %92, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.CPDF_ImageLoader, %class.CPDF_ImageLoader* %1, i64 0, i32 3
  %48 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %48, align 8
  %50 = icmp eq %class.CFX_DIBBase* %49, null
  br i1 %50, label %92, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.fxcrt::RetainPtr.0"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #4
  call void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.0"* nonnull sret %5, %class.CFX_DIBBase* nonnull %49, %struct.FX_RECT* null) #4
  %53 = getelementptr inbounds %"class.fxcrt::RetainPtr.0", %"class.fxcrt::RetainPtr.0"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %53, align 8
  %55 = ptrtoint %class.CFX_DIBitmap* %54 to i64
  %56 = icmp eq %class.CFX_DIBitmap* %54, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %54, i64 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %59, 1
  store i64 %60, i64* %58, align 8
  br label %61

61:                                               ; preds = %51, %57
  %62 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %48, align 8
  %63 = bitcast %"class.fxcrt::RetainPtr"* %47 to i64*
  store i64 %55, i64* %63, align 8
  %64 = icmp eq %class.CFX_DIBBase* %62, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %62, i64 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i64 %67, -1
  store i64 %68, i64* %66, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %62, i64 0, i32 0
  %72 = bitcast %class.CFX_DIBBase* %62 to void (%"class.fxcrt::Retainable"*)***
  %73 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %73, i64 1
  %75 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %74, align 8
  call void %75(%"class.fxcrt::Retainable"* nonnull %71) #4
  %76 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %53, align 8
  br label %77

77:                                               ; preds = %70, %65, %61
  %78 = phi %class.CFX_DIBitmap* [ %76, %70 ], [ %54, %65 ], [ %54, %61 ]
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %53, align 8
  %79 = icmp eq %class.CFX_DIBitmap* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %78, i64 0, i32 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = add nsw i64 %82, -1
  store i64 %83, i64* %81, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %78, i64 0, i32 0, i32 0
  %87 = bitcast %class.CFX_DIBitmap* %78 to void (%"class.fxcrt::Retainable"*)***
  %88 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %88, i64 1
  %90 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %89, align 8
  call void %90(%"class.fxcrt::Retainable"* nonnull %86) #4
  br label %91

91:                                               ; preds = %77, %80, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #4
  br label %92

92:                                               ; preds = %46, %42, %91
  store i8 0, i8* %43, align 4
  %93 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %13, align 8
  %94 = ptrtoint %class.CFX_DIBBase* %93 to i64
  %95 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %94, i64* %95, align 8
  %96 = icmp eq %class.CFX_DIBBase* %93, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %93, i64 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = add nsw i64 %99, 1
  store i64 %100, i64* %98, align 8
  br label %101

101:                                              ; preds = %92, %97
  ret void
}

declare void @_ZN17CPDF_TransferFunc14TranslateImageERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%"class.fxcrt::RetainPtr"* sret, %class.CPDF_TransferFunc*, %"class.fxcrt::RetainPtr"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.0"* sret, %class.CFX_DIBBase*, %struct.FX_RECT*) local_unnamed_addr #3

declare void @_ZN20CPDF_ImageCacheEntry12DetachBitmapEv(%"class.fxcrt::RetainPtr"* sret, %class.CPDF_ImageCacheEntry*) local_unnamed_addr #3

declare void @_ZN20CPDF_ImageCacheEntry10DetachMaskEv(%"class.fxcrt::RetainPtr"* sret, %class.CPDF_ImageCacheEntry*) local_unnamed_addr #3

declare void @_ZN10CPDF_Image12DetachBitmapEv(%"class.fxcrt::RetainPtr"* sret, %class.CPDF_Image*) local_unnamed_addr #3

declare void @_ZN10CPDF_Image10DetachMaskEv(%"class.fxcrt::RetainPtr"* sret, %class.CPDF_Image*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
