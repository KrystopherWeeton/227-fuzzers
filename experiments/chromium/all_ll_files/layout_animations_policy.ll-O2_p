; ModuleID = '../../third_party/blink/renderer/core/permissions_policy/layout_animations_policy.cc'
source_filename = "../../third_party/blink/renderer/core/permissions_policy/layout_animations_policy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashSet<const blink::CSSProperty *, WTF::PtrHash<const blink::CSSProperty>, WTF::HashTraits<const blink::CSSProperty *>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<const blink::CSSProperty *, WTF::PtrHash<const blink::CSSProperty>, WTF::HashTraits<const blink::CSSProperty *>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::String" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::LayoutAnimationsPolicy" = type { i8 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::CSSProperty"**, i32, i32, i32, [4 x i8] }>
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.50", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.56", %"class.blink::Member.58", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.67", %"class.blink::Member.73", %"class.blink::Member.75", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.9" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.6" }
%"class.WTF::HashSet.6" = type { %"class.WTF::HashTable.7" }
%"class.WTF::HashTable.7" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.9" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.10" }
%"class.blink::HeapHashMap.10" = type { %"class.WTF::HashMap.13" }
%"class.WTF::HashMap.13" = type { %"class.WTF::HashTable.14" }
%"class.WTF::HashTable.14" = type <{ %"struct.WTF::KeyValuePair.16"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.16" = type { i8*, %"class.blink::Member.79" }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.81" }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.46", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.29", %"class.std::__1::map.38"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map.38" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.46" = type { %"class.WTF::HashTable.47" }
%"class.WTF::HashTable.47" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.54"*, i32, i32 }
%"class.blink::Member.54" = type opaque
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.60", i32, i32 }
%"class.blink::HeapHashMap.60" = type { %"class.WTF::HashMap.63" }
%"class.WTF::HashMap.63" = type { %"class.WTF::HashTable.64" }
%"class.WTF::HashTable.64" = type <{ %"struct.WTF::KeyValuePair.66"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.66" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.83" }
%"struct.std::__1::pair" = type { i32, %"struct.blink::DocumentPolicyFeatureInfo" }
%"struct.blink::DocumentPolicyFeatureInfo" = type { %"class.std::__1::basic_string", %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::pair"* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

@_ZZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties = internal global i64 0, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str = private unnamed_addr constant [110 x i8] c"Document policy violation: CSS property '%s' violates document policy '%s' which is disabled in this document\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"../../base/containers/flat_map.h\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"found != tree::cend()\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.4 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink11CSSPropertyEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::CSSProperty *]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1

@_ZN5blink22LayoutAnimationsPolicyC1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutAnimationsPolicy"*), void (%"class.blink::LayoutAnimationsPolicy"*)* @_ZN5blink22LayoutAnimationsPolicyC2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink22LayoutAnimationsPolicyC2Ev(%"class.blink::LayoutAnimationsPolicy"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashSet"* @_ZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEv() local_unnamed_addr #1 align 2 {
  %1 = alloca [6 x %"class.blink::CSSProperty"*], align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %27, !prof !2

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %4
  %8 = bitcast [6 x %"class.blink::CSSProperty"*]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #9
  %9 = getelementptr inbounds [6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* %1, i64 0, i64 0
  %10 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyBottomEv() #9
  store %"class.blink::CSSProperty"* %10, %"class.blink::CSSProperty"** %9, align 8
  %11 = getelementptr inbounds [6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* %1, i64 0, i64 1
  %12 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyHeightEv() #9
  store %"class.blink::CSSProperty"* %12, %"class.blink::CSSProperty"** %11, align 8
  %13 = getelementptr inbounds [6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* %1, i64 0, i64 2
  %14 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink18GetCSSPropertyLeftEv() #9
  store %"class.blink::CSSProperty"* %14, %"class.blink::CSSProperty"** %13, align 8
  %15 = getelementptr inbounds [6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* %1, i64 0, i64 3
  %16 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyRightEv() #9
  store %"class.blink::CSSProperty"* %16, %"class.blink::CSSProperty"** %15, align 8
  %17 = getelementptr inbounds [6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* %1, i64 0, i64 4
  %18 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink17GetCSSPropertyTopEv() #9
  store %"class.blink::CSSProperty"* %18, %"class.blink::CSSProperty"** %17, align 8
  %19 = getelementptr inbounds [6 x %"class.blink::CSSProperty"*], [6 x %"class.blink::CSSProperty"*]* %1, i64 0, i64 5
  %20 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyWidthEv() #9
  store %"class.blink::CSSProperty"* %20, %"class.blink::CSSProperty"** %19, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #9
  tail call void @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties to %"class.WTF::HashTable"*), i32 6) #9
  %21 = call { %"class.blink::CSSProperty"**, i8 } @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties to %"class.WTF::HashTable"*), %"class.blink::CSSProperty"** nonnull dereferenceable(8) %9, %"class.blink::CSSProperty"** nonnull dereferenceable(8) %9) #9
  %22 = call { %"class.blink::CSSProperty"**, i8 } @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties to %"class.WTF::HashTable"*), %"class.blink::CSSProperty"** dereferenceable(8) %11, %"class.blink::CSSProperty"** dereferenceable(8) %11) #9
  %23 = call { %"class.blink::CSSProperty"**, i8 } @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties to %"class.WTF::HashTable"*), %"class.blink::CSSProperty"** dereferenceable(8) %13, %"class.blink::CSSProperty"** dereferenceable(8) %13) #9
  %24 = call { %"class.blink::CSSProperty"**, i8 } @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties to %"class.WTF::HashTable"*), %"class.blink::CSSProperty"** dereferenceable(8) %15, %"class.blink::CSSProperty"** dereferenceable(8) %15) #9
  %25 = call { %"class.blink::CSSProperty"**, i8 } @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties to %"class.WTF::HashTable"*), %"class.blink::CSSProperty"** dereferenceable(8) %17, %"class.blink::CSSProperty"** dereferenceable(8) %17) #9
  %26 = call { %"class.blink::CSSProperty"**, i8 } @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties to %"class.WTF::HashTable"*), %"class.blink::CSSProperty"** dereferenceable(8) %19, %"class.blink::CSSProperty"** dereferenceable(8) %19) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #9
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties) #9
  br label %27

27:                                               ; preds = %4, %7, %0
  ret %"class.WTF::HashSet"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEvE12s_properties to %"class.WTF::HashSet"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22LayoutAnimationsPolicy15ReportViolationERKNS_11CSSPropertyERKNS_16ExecutionContextE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ExecutionContext"* dereferenceable(376)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %0, i64 0, i32 0
  %11 = bitcast %"class.blink::CSSProperty"* %0 to %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)***
  %12 = load %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)**, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)** %12, i64 4
  %14 = load %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)** %13, align 8
  %15 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %14(%"class.blink::CSSUnresolvedProperty"* %10) #9
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #9
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %24
  tail call void @llvm.trap() #9
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %34, %19, %2
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %37, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #9
  %38 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = select i1 %41, i8* %43, i8* %8
  %45 = call dereferenceable(24) %"class.base::flat_map"* @_ZN5blink31GetDocumentPolicyFeatureInfoMapEv() #9
  %46 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %46, align 8
  %48 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %45, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast %"struct.std::__1::pair"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = ptrtoint %"struct.std::__1::pair"* %47 to i64
  %52 = sub i64 %50, %51
  %53 = icmp eq i64 %52, 0
  %54 = inttoptr i64 %50 to %"struct.std::__1::pair"*
  br i1 %53, label %73, label %55

55:                                               ; preds = %36
  %56 = sdiv exact i64 %52, 56
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi %"struct.std::__1::pair"* [ %47, %55 ], [ %69, %57 ]
  %59 = phi i64 [ %56, %55 ], [ %68, %57 ]
  %60 = lshr i64 %59, 1
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 %60
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %63, 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 1
  %66 = xor i64 %60, -1
  %67 = add i64 %59, %66
  %68 = select i1 %64, i64 %67, i64 %60
  %69 = select i1 %64, %"struct.std::__1::pair"* %65, %"struct.std::__1::pair"* %58
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %71, label %57

71:                                               ; preds = %57
  %72 = ptrtoint %"struct.std::__1::pair"* %69 to i64
  br label %73

73:                                               ; preds = %71, %36
  %74 = phi i64 [ %72, %71 ], [ %51, %36 ]
  %75 = phi %"struct.std::__1::pair"* [ %69, %71 ], [ %47, %36 ]
  %76 = icmp eq %"struct.std::__1::pair"* %75, %54
  br i1 %76, label %84, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, 8
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 1
  %83 = ptrtoint %"struct.std::__1::pair"* %82 to i64
  br label %84

84:                                               ; preds = %81, %77, %73
  %85 = phi i64 [ %83, %81 ], [ %74, %73 ], [ %74, %77 ]
  %86 = inttoptr i64 %85 to %"struct.std::__1::pair"*
  %87 = icmp eq %"struct.std::__1::pair"* %75, %86
  %88 = select i1 %87, %"struct.std::__1::pair"* %54, %"struct.std::__1::pair"* %75
  %89 = icmp eq %"struct.std::__1::pair"* %88, %54
  br i1 %89, label %90, label %93

90:                                               ; preds = %84
  %91 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 272, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #9
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #9
  br label %93

93:                                               ; preds = %90, %84
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 0, i32 1, i32 0
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  br label %104

102:                                              ; preds = %93
  %103 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  br label %104

104:                                              ; preds = %102, %99
  %105 = phi i8* [ %101, %99 ], [ %103, %102 ]
  %106 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str, i64 0, i64 0), i8* %44, i8* %105) #9
  %107 = load i8, i8* %39, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %109, %104
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #9
  br label %127

127:                                              ; preds = %111, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %128, align 8
  %129 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %130 = call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"* %1, i32 8, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %129) #9
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #9
  br label %146

146:                                              ; preds = %127, %142, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #4

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #4

declare dereferenceable(24) %"class.base::flat_map"* @_ZN5blink31GetDocumentPolicyFeatureInfoMapEv() local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyBottomEv() local_unnamed_addr #4

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyHeightEv() local_unnamed_addr #4

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink18GetCSSPropertyLeftEv() local_unnamed_addr #4

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyRightEv() local_unnamed_addr #4

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink17GetCSSPropertyTopEv() local_unnamed_addr #4

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyWidthEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #9
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink11CSSPropertyEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #9
  %30 = bitcast i8* %29 to %"class.blink::CSSProperty"**
  %31 = call %"class.blink::CSSProperty"** @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::CSSProperty"** %30, i32 %17, %"class.blink::CSSProperty"** null) #9
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"** @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"*, %"class.blink::CSSProperty"**, i32, %"class.blink::CSSProperty"**) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"class.blink::CSSProperty"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %9, align 8
  %17 = ptrtoint %"class.blink::CSSProperty"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::CSSProperty"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #9
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::CSSProperty"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::CSSProperty"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::CSSProperty"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %34, i64 %37
  %39 = bitcast %"class.blink::CSSProperty"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %1, i64 %62
  %64 = ptrtoint %"class.blink::CSSProperty"** %63 to i64
  %65 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %63, align 8
  %66 = icmp eq %"class.blink::CSSProperty"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::CSSProperty"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::CSSProperty"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::CSSProperty"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::CSSProperty"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::CSSProperty"** %87, null
  %89 = ptrtoint %"class.blink::CSSProperty"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::CSSProperty"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::CSSProperty"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::CSSProperty"* %93, inttoptr (i64 -1 to %"class.blink::CSSProperty"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %1, i64 %104
  %106 = ptrtoint %"class.blink::CSSProperty"** %105 to i64
  %107 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %105, align 8
  %108 = icmp eq %"class.blink::CSSProperty"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::CSSProperty"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %113, i64 %37
  %115 = icmp eq %"class.blink::CSSProperty"** %114, %3
  %116 = select i1 %115, %"class.blink::CSSProperty"** %111, %"class.blink::CSSProperty"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::CSSProperty"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::CSSProperty"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::CSSProperty"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CSSProperty"**, i8 } @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::CSSProperty"** dereferenceable(8), %"class.blink::CSSProperty"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %4, align 8
  %6 = icmp eq %"class.blink::CSSProperty"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::CSSProperty"** @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::CSSProperty"** null)
  %9 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::CSSProperty"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::CSSProperty"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %11, i64 %38
  %40 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %39, align 8
  %41 = icmp eq %"class.blink::CSSProperty"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::CSSProperty"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::CSSProperty"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::CSSProperty"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::CSSProperty"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::CSSProperty"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::CSSProperty"* %58, inttoptr (i64 -1 to %"class.blink::CSSProperty"*)
  %66 = select i1 %65, %"class.blink::CSSProperty"** %59, %"class.blink::CSSProperty"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %11, i64 %70
  %72 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %71, align 8
  %73 = icmp eq %"class.blink::CSSProperty"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::CSSProperty"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::CSSProperty"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::CSSProperty"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::CSSProperty"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::CSSProperty"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::CSSProperty"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::CSSProperty"** @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::CSSProperty"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::CSSProperty"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::CSSProperty"**, i8 } undef, %"class.blink::CSSProperty"** %105, 0
  %107 = insertvalue { %"class.blink::CSSProperty"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::CSSProperty"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSProperty"** @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"*, %"class.blink::CSSProperty"**) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink11CSSPropertyEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"class.blink::CSSProperty"**
  %37 = call %"class.blink::CSSProperty"** @_ZN3WTF9HashTableIPKN5blink11CSSPropertyES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::CSSProperty"** %36, i32 %32, %"class.blink::CSSProperty"** %1) #9
  ret %"class.blink::CSSProperty"** %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
