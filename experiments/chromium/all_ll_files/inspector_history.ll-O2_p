; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_history.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_history.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.168", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.112", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i64 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::Worklist.43"* }
%"class.blink::Worklist.43" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.32" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.92", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.106", [4 x i8] }>
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94", %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i64 }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { float }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.115", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.43"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.172" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.167 }
%class.scoped_refptr.167 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.221" }
%"struct.std::__1::atomic.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__cxx_atomic_impl.224" }
%"struct.std::__1::__cxx_atomic_impl.224" = type { %"struct.std::__1::__cxx_atomic_base_impl.225" }
%"struct.std::__1::__cxx_atomic_base_impl.225" = type { i32 }
%"class.blink::InspectorHistory::Action" = type { i32 (...)**, %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::InspectorHistory" = type <{ %"class.blink::HeapVector", i32, [4 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.181" }
%"class.WTF::Vector.181" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183" }
%"class.WTF::VectorBufferBase.183" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::InspectorHistory::Action"* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::UndoableStateMark" = type { %"class.blink::InspectorHistory::Action" }

$_ZN5blink16InspectorHistory6Action6IsNoopEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16InspectorHistory6ActionEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_16InspectorHistory6ActionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16InspectorHistory6ActionEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16InspectorHistory6ActionEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink16InspectorHistory6ActionE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6ActionD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6ActionD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)* @_ZNK5blink16InspectorHistory6Action5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action8ToStringEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action7MergeIdEv to i8*), i8* bitcast (void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action5MergeEPS1_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action6IsNoopEv to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action19IsUndoableStateMarkEv to i8*)] }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.7 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.10 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16InspectorHistory6ActionEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [189 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::InspectorHistory::Action>, WTF::VectorTraits<blink::Member<blink::InspectorHistory::Action> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16InspectorHistory6ActionEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectorHistory::Action]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16InspectorHistory6ActionEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16InspectorHistory6ActionEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16InspectorHistory6ActionEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [16 x i8] c"[UndoableState]\00", align 1
@_ZTVN5blink12_GLOBAL__N_117UndoableStateMarkE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6ActionD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::UndoableStateMark"*)* @_ZN5blink12_GLOBAL__N_117UndoableStateMarkD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)* @_ZNK5blink16InspectorHistory6Action5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action8ToStringEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action7MergeIdEv to i8*), i8* bitcast (void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action5MergeEPS1_ to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::UndoableStateMark"*, %"class.blink::ExceptionState"*)* @_ZN5blink12_GLOBAL__N_117UndoableStateMark7PerformERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::UndoableStateMark"*, %"class.blink::ExceptionState"*)* @_ZN5blink12_GLOBAL__N_117UndoableStateMark4UndoERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::UndoableStateMark"*, %"class.blink::ExceptionState"*)* @_ZN5blink12_GLOBAL__N_117UndoableStateMark4RedoERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action6IsNoopEv to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::UndoableStateMark"*)* @_ZN5blink12_GLOBAL__N_117UndoableStateMark19IsUndoableStateMarkEv to i8*)] }, align 8

@_ZN5blink16InspectorHistory6ActionD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorHistory::Action"*), void (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6ActionD2Ev
@_ZN5blink16InspectorHistoryC1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorHistory"*), void (%"class.blink::InspectorHistory"*)* @_ZN5blink16InspectorHistoryC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16InspectorHistory6ActionC2ERKN3WTF6StringE(%"class.blink::InspectorHistory::Action"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorHistory::Action", %"class.blink::InspectorHistory::Action"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink16InspectorHistory6ActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorHistory::Action", %"class.blink::InspectorHistory::Action"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #10
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %2, %8, %23
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink16InspectorHistory6ActionD0Ev(%"class.blink::InspectorHistory::Action"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink16InspectorHistory6Action5TraceEPNS_7VisitorE(%"class.blink::InspectorHistory::Action"* nocapture, %"class.blink::Visitor"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink16InspectorHistory6Action8ToStringEv(%"class.blink::InspectorHistory::Action"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorHistory::Action", %"class.blink::InspectorHistory::Action"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #10
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink16InspectorHistory6Action19IsUndoableStateMarkEv(%"class.blink::InspectorHistory::Action"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink16InspectorHistory6Action7MergeIdEv(%"class.blink::InspectorHistory::Action"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #10
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink16InspectorHistory6Action5MergeEPS1_(%"class.blink::InspectorHistory::Action"* nocapture, %"class.blink::InspectorHistory::Action"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16InspectorHistoryC2Ev(%"class.blink::InspectorHistory"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorHistory"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16InspectorHistory7PerformEPNS0_6ActionERNS_14ExceptionStateE(%"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::InspectorHistory::Action"* %1 to i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)***
  %5 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %5, i64 6
  %7 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::InspectorHistory::Action"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN5blink16InspectorHistory21AppendPerformedActionEPNS0_6ActionE(%"class.blink::InspectorHistory"* %0, %"class.blink::InspectorHistory::Action"* %1)
  br label %10

10:                                               ; preds = %3, %9
  %11 = phi i1 [ true, %9 ], [ false, %3 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16InspectorHistory21AppendPerformedActionEPNS0_6ActionE(%"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory::Action"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::InspectorHistory::Action"*, align 8
  store %"class.blink::InspectorHistory::Action"* %1, %"class.blink::InspectorHistory::Action"** %3, align 8
  %4 = bitcast %"class.blink::InspectorHistory::Action"* %1 to %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)**, %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)** %5, i64 4
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::InspectorHistory::Action"* %1) #10
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  br label %157

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %68, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %68, label %22

22:                                               ; preds = %18
  %23 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)**, %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)*** %4, align 8
  %24 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)** %23, i64 4
  %25 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)** %24, align 8
  %26 = tail call %"class.WTF::StringImpl"* %25(%"class.blink::InspectorHistory::Action"* %1) #10
  %27 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0
  %28 = load i32, i32* %19, align 8
  %29 = add i32 %28, -1
  %30 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"* %27, i32 %29) #10
  %31 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"** %31, align 8
  %33 = bitcast %"class.blink::InspectorHistory::Action"* %32 to %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)***
  %34 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)**, %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)** %34, i64 4
  %36 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)** %35, align 8
  %37 = tail call %"class.WTF::StringImpl"* %36(%"class.blink::InspectorHistory::Action"* %32) #10
  %38 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* %37) #10
  %39 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %22
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #10
  br label %53

53:                                               ; preds = %22, %49, %52
  %54 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %68

68:                                               ; preds = %18, %14, %53, %64, %67
  %69 = phi i1 [ %38, %67 ], [ %38, %64 ], [ %38, %53 ], [ false, %14 ], [ false, %18 ]
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %68
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %68
  %79 = phi i32 [ %77, %76 ], [ %75, %68 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %78
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #10
  %82 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  br i1 %69, label %89, label %157

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  br i1 %69, label %89, label %157

89:                                               ; preds = %81, %85
  %90 = phi i32 [ %84, %81 ], [ %88, %85 ]
  %91 = phi i32* [ %83, %81 ], [ %87, %85 ]
  %92 = phi %"class.WTF::Vector.181"* [ %82, %81 ], [ %86, %85 ]
  %93 = add i32 %90, -1
  %94 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"* %92, i32 %93) #10
  %95 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %94, i64 0, i32 0, i32 0
  %96 = load %"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"** %95, align 8
  %97 = load %"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"** %3, align 8
  %98 = bitcast %"class.blink::InspectorHistory::Action"* %96 to void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)***
  %99 = load void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)**, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)*, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)** %99, i64 5
  %101 = load void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)*, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)** %100, align 8
  tail call void %101(%"class.blink::InspectorHistory::Action"* %96, %"class.blink::InspectorHistory::Action"* %97) #10
  %102 = load i32, i32* %91, align 8
  %103 = add i32 %102, -1
  %104 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"* %92, i32 %103) #10
  %105 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"** %105, align 8
  %107 = bitcast %"class.blink::InspectorHistory::Action"* %106 to i1 (%"class.blink::InspectorHistory::Action"*)***
  %108 = load i1 (%"class.blink::InspectorHistory::Action"*)**, i1 (%"class.blink::InspectorHistory::Action"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*)*, i1 (%"class.blink::InspectorHistory::Action"*)** %108, i64 9
  %110 = load i1 (%"class.blink::InspectorHistory::Action"*)*, i1 (%"class.blink::InspectorHistory::Action"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.blink::InspectorHistory::Action"* %106) #10
  %112 = load i32, i32* %91, align 8
  br i1 %111, label %113, label %115

113:                                              ; preds = %89
  %114 = add i32 %112, -1
  store i32 %114, i32* %91, align 8
  br label %115

115:                                              ; preds = %89, %113
  %116 = phi i32 [ %114, %113 ], [ %112, %89 ]
  %117 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %118 = load i32, i32* %117, align 4
  %119 = icmp ult i32 %118, %116
  br i1 %119, label %131, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.blink::Member"*, %"class.blink::Member"** %121, align 8
  %123 = zext i32 %116 to i64
  %124 = zext i32 %118 to i64
  %125 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %122, i64 %123
  %126 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %122, i64 %124
  %127 = bitcast %"class.blink::Member"* %125 to i8*
  %128 = ptrtoint %"class.blink::Member"* %126 to i64
  %129 = ptrtoint %"class.blink::Member"* %125 to i64
  %130 = sub i64 %128, %129
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %127, i64 %130) #10
  br label %156

131:                                              ; preds = %115
  %132 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = icmp ult i32 %133, %116
  br i1 %134, label %135, label %144

135:                                              ; preds = %131
  %136 = lshr i32 %133, 2
  %137 = add nuw i32 %133, 1
  %138 = add i32 %137, %136
  %139 = icmp ugt i32 %138, 4
  %140 = select i1 %139, i32 %138, i32 4
  %141 = icmp ugt i32 %140, %116
  %142 = select i1 %141, i32 %140, i32 %116
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.181"* %92, i32 %142) #10
  %143 = load i32, i32* %117, align 4
  br label %144

144:                                              ; preds = %135, %131
  %145 = phi i32 [ %143, %135 ], [ %118, %131 ]
  %146 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load %"class.blink::Member"*, %"class.blink::Member"** %146, align 8
  %148 = zext i32 %145 to i64
  %149 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %147, i64 %148
  %150 = zext i32 %116 to i64
  %151 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %147, i64 %150
  %152 = bitcast %"class.blink::Member"* %149 to i8*
  %153 = ptrtoint %"class.blink::Member"* %151 to i64
  %154 = ptrtoint %"class.blink::Member"* %149 to i64
  %155 = sub i64 %153, %154
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 %155, i1 false) #10
  br label %156

156:                                              ; preds = %120, %144
  store i32 %116, i32* %117, align 4
  br label %224

157:                                              ; preds = %81, %10, %85
  %158 = phi i32 [ %13, %10 ], [ %88, %85 ], [ %84, %81 ]
  %159 = phi i32* [ %12, %10 ], [ %87, %85 ], [ %83, %81 ]
  %160 = phi %"class.WTF::Vector.181"* [ %11, %10 ], [ %86, %85 ], [ %82, %81 ]
  %161 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = icmp ult i32 %162, %158
  br i1 %163, label %175, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load %"class.blink::Member"*, %"class.blink::Member"** %165, align 8
  %167 = zext i32 %158 to i64
  %168 = zext i32 %162 to i64
  %169 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %166, i64 %167
  %170 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %166, i64 %168
  %171 = bitcast %"class.blink::Member"* %169 to i8*
  %172 = ptrtoint %"class.blink::Member"* %170 to i64
  %173 = ptrtoint %"class.blink::Member"* %169 to i64
  %174 = sub i64 %172, %173
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %171, i64 %174) #10
  br label %200

175:                                              ; preds = %157
  %176 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %177 = load i32, i32* %176, align 8
  %178 = icmp ult i32 %177, %158
  br i1 %178, label %179, label %188

179:                                              ; preds = %175
  %180 = lshr i32 %177, 2
  %181 = add nuw i32 %177, 1
  %182 = add i32 %181, %180
  %183 = icmp ugt i32 %182, 4
  %184 = select i1 %183, i32 %182, i32 4
  %185 = icmp ugt i32 %184, %158
  %186 = select i1 %185, i32 %184, i32 %158
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.181"* %160, i32 %186) #10
  %187 = load i32, i32* %161, align 4
  br label %188

188:                                              ; preds = %179, %175
  %189 = phi i32 [ %187, %179 ], [ %162, %175 ]
  %190 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load %"class.blink::Member"*, %"class.blink::Member"** %190, align 8
  %192 = zext i32 %189 to i64
  %193 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %191, i64 %192
  %194 = zext i32 %158 to i64
  %195 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %191, i64 %194
  %196 = bitcast %"class.blink::Member"* %193 to i8*
  %197 = ptrtoint %"class.blink::Member"* %195 to i64
  %198 = ptrtoint %"class.blink::Member"* %193 to i64
  %199 = sub i64 %197, %198
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 %199, i1 false) #10
  br label %200

200:                                              ; preds = %164, %188
  store i32 %158, i32* %161, align 4
  %201 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %158, %202
  br i1 %203, label %220, label %204, !prof !2

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load %"class.blink::Member"*, %"class.blink::Member"** %205, align 8
  %207 = zext i32 %158 to i64
  %208 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %206, i64 %207
  %209 = bitcast %"class.blink::InspectorHistory::Action"** %3 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.blink::Member"* %208 to i64*
  store atomic i64 %210, i64* %211 monotonic, align 8
  %212 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %217, label %214

214:                                              ; preds = %204
  %215 = inttoptr i64 %210 to i8*
  %216 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %215) #10
  br label %217

217:                                              ; preds = %214, %204
  %218 = load i32, i32* %161, align 4
  %219 = add i32 %218, 1
  store i32 %219, i32* %161, align 4
  br label %221

220:                                              ; preds = %200
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.181"* %160, %"class.blink::InspectorHistory::Action"** nonnull dereferenceable(8) %3) #10
  br label %221

221:                                              ; preds = %217, %220
  %222 = load i32, i32* %159, align 8
  %223 = add i32 %222, 1
  store i32 %223, i32* %159, align 8
  br label %224

224:                                              ; preds = %221, %156
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16InspectorHistory17MarkUndoableStateEv(%"class.blink::InspectorHistory"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64 16) #10
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i64 15) #10
  %6 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink16InspectorHistory6ActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 8
  %10 = bitcast i8* %9 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %11, label %45, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #10
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  call void @llvm.trap() #10
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %45, label %31

31:                                               ; preds = %27, %12
  %32 = phi %"class.WTF::StringImpl"* [ %29, %27 ], [ %8, %12 ]
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %31
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %31
  %42 = phi i32 [ %40, %39 ], [ %38, %31 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #10
  br label %45

45:                                               ; preds = %1, %27, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink12_GLOBAL__N_117UndoableStateMarkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %46 = getelementptr inbounds i8, i8* %4, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  %50 = bitcast i8* %4 to %"class.blink::InspectorHistory::Action"*
  %51 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %51) #10
  %52 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %53, align 8
  %54 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %54, align 2
  %55 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %56 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %57 = bitcast %"class.WTF::StringImpl"** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #10
  %58 = bitcast i8** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 36, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %59 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %60 = bitcast i8* %4 to i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)***
  %61 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*** %60, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %61, i64 6
  %63 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %62, align 8
  %64 = call zeroext i1 %63(%"class.blink::InspectorHistory::Action"* %50, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %59) #10
  br i1 %64, label %65, label %66

65:                                               ; preds = %45
  call void @_ZN5blink16InspectorHistory21AppendPerformedActionEPNS0_6ActionE(%"class.blink::InspectorHistory"* %0, %"class.blink::InspectorHistory::Action"* %50) #10
  br label %66

66:                                               ; preds = %45, %65
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %67 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %59) #10
  br label %71

71:                                               ; preds = %66, %70
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %72 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 3
  %77 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %76, align 8
  %78 = bitcast %"class.v8::Isolate"* %77 to %"class.v8::internal::Isolate"*
  %79 = load i64, i64* %73, align 8
  %80 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %78, i64 %79) #10
  %81 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %77) #10
  br i1 %81, label %85, label %82

82:                                               ; preds = %75
  %83 = bitcast i64* %80 to %"class.v8::Value"*
  %84 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %77, %"class.v8::Value"* %83) #10
  br label %85

85:                                               ; preds = %82, %75, %71
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #10
  br label %101

101:                                              ; preds = %85, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %51) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16InspectorHistory4UndoERNS_14ExceptionStateE(%"class.blink::InspectorHistory"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %6, %19
  %9 = phi i32 [ %4, %6 ], [ %21, %19 ]
  %10 = add i32 %9, -1
  %11 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"* %7, i32 %10) #10
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"** %12, align 8
  %14 = bitcast %"class.blink::InspectorHistory::Action"* %13 to i1 (%"class.blink::InspectorHistory::Action"*)***
  %15 = load i1 (%"class.blink::InspectorHistory::Action"*)**, i1 (%"class.blink::InspectorHistory::Action"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*)*, i1 (%"class.blink::InspectorHistory::Action"*)** %15, i64 10
  %17 = load i1 (%"class.blink::InspectorHistory::Action"*)*, i1 (%"class.blink::InspectorHistory::Action"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::InspectorHistory::Action"* %13) #10
  br i1 %18, label %19, label %23

19:                                               ; preds = %8
  %20 = load i32, i32* %3, align 8
  %21 = add i32 %20, -1
  store i32 %21, i32* %3, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %8

23:                                               ; preds = %8, %19, %2
  %24 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %54, %23
  %26 = load i32, i32* %3, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %62, label %28

28:                                               ; preds = %25
  %29 = add i32 %26, -1
  %30 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"* %24, i32 %29) #10
  %31 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"** %31, align 8
  %33 = bitcast %"class.blink::InspectorHistory::Action"* %32 to i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)***
  %34 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %34, i64 7
  %36 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::InspectorHistory::Action"* %32, %"class.blink::ExceptionState"* dereferenceable(72) %1) #10
  br i1 %37, label %54, label %38

38:                                               ; preds = %28
  store i32 0, i32* %3, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %62, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  %46 = bitcast %"class.blink::InspectorHistory"* %0 to i8**
  br i1 %45, label %51, label %47

47:                                               ; preds = %42
  %48 = load i8*, i8** %46, align 8
  %49 = zext i32 %44 to i64
  %50 = shl nuw nsw i64 %49, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %48, i64 %50) #10
  store i32 0, i32* %43, align 4
  br label %51

51:                                               ; preds = %47, %42
  %52 = load i8*, i8** %46, align 8
  %53 = bitcast %"class.blink::InspectorHistory"* %0 to i64*
  store atomic i64 0, i64* %53 monotonic, align 8
  store i32 0, i32* %39, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %52) #10
  br label %62

54:                                               ; preds = %28
  %55 = load i32, i32* %3, align 8
  %56 = add i32 %55, -1
  store i32 %56, i32* %3, align 8
  %57 = bitcast %"class.blink::InspectorHistory::Action"* %32 to i1 (%"class.blink::InspectorHistory::Action"*)***
  %58 = load i1 (%"class.blink::InspectorHistory::Action"*)**, i1 (%"class.blink::InspectorHistory::Action"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*)*, i1 (%"class.blink::InspectorHistory::Action"*)** %58, i64 10
  %60 = load i1 (%"class.blink::InspectorHistory::Action"*)*, i1 (%"class.blink::InspectorHistory::Action"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::InspectorHistory::Action"* %32) #10
  br i1 %61, label %62, label %25

62:                                               ; preds = %54, %25, %51, %38
  %63 = phi i1 [ false, %38 ], [ false, %51 ], [ true, %25 ], [ true, %54 ]
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16InspectorHistory5ResetEv(%"class.blink::InspectorHistory"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 1
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.blink::InspectorHistory"* %0 to i8**
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  %12 = load i8*, i8** %10, align 8
  %13 = zext i32 %8 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %12, i64 %14) #10
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %11, %6
  %16 = load i8*, i8** %10, align 8
  %17 = bitcast %"class.blink::InspectorHistory"* %0 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %16) #10
  br label %18

18:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16InspectorHistory4RedoERNS_14ExceptionStateE(%"class.blink::InspectorHistory"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %4, %7
  br i1 %8, label %9, label %24

9:                                                ; preds = %2, %19
  %10 = phi i32 [ %21, %19 ], [ %4, %2 ]
  %11 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"* %5, i32 %10) #10
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"** %12, align 8
  %14 = bitcast %"class.blink::InspectorHistory::Action"* %13 to i1 (%"class.blink::InspectorHistory::Action"*)***
  %15 = load i1 (%"class.blink::InspectorHistory::Action"*)**, i1 (%"class.blink::InspectorHistory::Action"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*)*, i1 (%"class.blink::InspectorHistory::Action"*)** %15, i64 10
  %17 = load i1 (%"class.blink::InspectorHistory::Action"*)*, i1 (%"class.blink::InspectorHistory::Action"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::InspectorHistory::Action"* %13) #10
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = load i32, i32* %3, align 8
  %21 = add i32 %20, 1
  store i32 %21, i32* %3, align 8
  %22 = load i32, i32* %6, align 4
  %23 = icmp ult i32 %21, %22
  br i1 %23, label %9, label %24

24:                                               ; preds = %9, %19, %2
  br label %25

25:                                               ; preds = %24, %53
  %26 = load i32, i32* %3, align 8
  %27 = load i32, i32* %6, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %29, label %61

29:                                               ; preds = %25
  %30 = tail call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"* %5, i32 %26) #10
  %31 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"** %31, align 8
  %33 = bitcast %"class.blink::InspectorHistory::Action"* %32 to i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)***
  %34 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %34, i64 8
  %36 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::InspectorHistory::Action"* %32, %"class.blink::ExceptionState"* dereferenceable(72) %1) #10
  br i1 %37, label %53, label %38

38:                                               ; preds = %29
  store i32 0, i32* %3, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorHistory", %"class.blink::InspectorHistory"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %61, label %42

42:                                               ; preds = %38
  %43 = load i32, i32* %6, align 4
  %44 = icmp eq i32 %43, 0
  %45 = bitcast %"class.blink::InspectorHistory"* %0 to i8**
  br i1 %44, label %50, label %46

46:                                               ; preds = %42
  %47 = load i8*, i8** %45, align 8
  %48 = zext i32 %43 to i64
  %49 = shl nuw nsw i64 %48, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %47, i64 %49) #10
  store i32 0, i32* %6, align 4
  br label %50

50:                                               ; preds = %46, %42
  %51 = load i8*, i8** %45, align 8
  %52 = bitcast %"class.blink::InspectorHistory"* %0 to i64*
  store atomic i64 0, i64* %52 monotonic, align 8
  store i32 0, i32* %39, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %51) #10
  br label %61

53:                                               ; preds = %29
  %54 = load i32, i32* %3, align 8
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 8
  %56 = bitcast %"class.blink::InspectorHistory::Action"* %32 to i1 (%"class.blink::InspectorHistory::Action"*)***
  %57 = load i1 (%"class.blink::InspectorHistory::Action"*)**, i1 (%"class.blink::InspectorHistory::Action"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*)*, i1 (%"class.blink::InspectorHistory::Action"*)** %57, i64 10
  %59 = load i1 (%"class.blink::InspectorHistory::Action"*)*, i1 (%"class.blink::InspectorHistory::Action"*)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::InspectorHistory::Action"* %32) #10
  br i1 %60, label %61, label %25

61:                                               ; preds = %53, %25, %50, %38
  %62 = phi i1 [ false, %38 ], [ false, %50 ], [ true, %25 ], [ true, %53 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16InspectorHistory5TraceEPNS_7VisitorE(%"class.blink::InspectorHistory"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::InspectorHistory"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.blink::InspectorHistory"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #10
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16InspectorHistory6Action6IsNoopEv(%"class.blink::InspectorHistory::Action"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #6

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #6

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #6

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #6

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.181"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.181"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16InspectorHistory6ActionEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.181"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.181"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.181"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.181"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.181"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16InspectorHistory6ActionEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.181"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.181"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.181"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16InspectorHistory6ActionEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.7, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([189 x i8], [189 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16InspectorHistory6ActionEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #8 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #6

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #6

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #6

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16InspectorHistory6ActionEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16InspectorHistory6ActionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16InspectorHistory6ActionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorHistory::Action"*
  %4 = bitcast i8* %1 to void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)**, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::InspectorHistory::Action"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #6

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #6

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.181"*, %"class.blink::InspectorHistory::Action"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16InspectorHistory6ActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.181"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::InspectorHistory::Action"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16InspectorHistory6ActionEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16InspectorHistory6ActionEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::InspectorHistory::Action"*
  %3 = bitcast i8* %0 to void (%"class.blink::InspectorHistory::Action"*)***
  %4 = load void (%"class.blink::InspectorHistory::Action"*)**, void (%"class.blink::InspectorHistory::Action"*)*** %3, align 8
  %5 = load void (%"class.blink::InspectorHistory::Action"*)*, void (%"class.blink::InspectorHistory::Action"*)** %4, align 8
  tail call void %5(%"class.blink::InspectorHistory::Action"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16InspectorHistory6ActionEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16InspectorHistory6ActionD2Ev(%"class.blink::InspectorHistory::Action"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorHistory::Action", %"class.blink::InspectorHistory::Action"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink16InspectorHistory6ActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorHistory::Action", %"class.blink::InspectorHistory::Action"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117UndoableStateMarkD0Ev(%"class.blink::(anonymous namespace)::UndoableStateMark"* nocapture) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::UndoableStateMark", %"class.blink::(anonymous namespace)::UndoableStateMark"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink16InspectorHistory6ActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::UndoableStateMark", %"class.blink::(anonymous namespace)::UndoableStateMark"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_117UndoableStateMark7PerformERNS_14ExceptionStateE(%"class.blink::(anonymous namespace)::UndoableStateMark"* nocapture readnone, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_117UndoableStateMark4UndoERNS_14ExceptionStateE(%"class.blink::(anonymous namespace)::UndoableStateMark"* nocapture readnone, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_117UndoableStateMark4RedoERNS_14ExceptionStateE(%"class.blink::(anonymous namespace)::UndoableStateMark"* nocapture readnone, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_117UndoableStateMark19IsUndoableStateMarkEv(%"class.blink::(anonymous namespace)::UndoableStateMark"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
