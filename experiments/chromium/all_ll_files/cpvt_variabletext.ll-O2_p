; ModuleID = '../../third_party/pdfium/core/fpdfdoc/cpvt_variabletext.cpp'
source_filename = "../../third_party/pdfium/core/fpdfdoc/cpvt_variabletext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.CPVT_VariableText::Provider" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::UnownedPtr" = type { %class.IPVT_FontMap* }
%class.IPVT_FontMap = type { i32 (...)** }
%"class.CPVT_VariableText::Iterator" = type { %struct.CPVT_WordPlace, %"class.fxcrt::UnownedPtr.112" }
%struct.CPVT_WordPlace = type { i32, i32, i32 }
%"class.fxcrt::UnownedPtr.112" = type { %class.CPVT_VariableText* }
%class.CPVT_VariableText = type { i8, i8, i8, i8, i16, i32, i32, i32, float, float, float, %"class.std::__1::vector.113", %"class.fxcrt::UnownedPtr.121", %"class.std::__1::unique_ptr.122", %class.CFX_FloatRect, %class.CPVT_FloatRect }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %class.CPVT_Section* }
%class.CPVT_Section = type { %struct.CPVT_WordPlace, %class.CPVT_FloatRect, %"class.std::__1::vector.130", %"class.std::__1::vector.138", %"class.fxcrt::UnownedPtr.146" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"*, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::unique_ptr.132" = type opaque
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::unique_ptr.132"* }
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { %"class.std::__1::unique_ptr.140"*, %"class.std::__1::unique_ptr.140"*, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::unique_ptr.140" = type opaque
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.std::__1::unique_ptr.140"* }
%"class.fxcrt::UnownedPtr.146" = type { %class.CPVT_VariableText* }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::unique_ptr.115"* }
%"class.fxcrt::UnownedPtr.121" = type { %"class.CPVT_VariableText::Provider"* }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.CPVT_VariableText::Iterator"* }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPVT_FloatRect = type { %class.CFX_FloatRect }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.6", %class.CFX_Font, %"class.std::__1::vector.51", %"class.fxcrt::RetainPtr.59", %"class.fxcrt::RetainPtr.98", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.104", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.0", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.fxcrt::UnownedPtr.6" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.7", %"class.std::__1::unique_ptr.12", %"class.fxcrt::RetainPtr.16", %"class.fxcrt::RetainPtr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::vector", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.7" = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.16" = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.20", %"class.fxcrt::RetainPtr.24" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.24" = type { %"class.std::__1::unique_ptr.25" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.32" = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.50", i64 }
%"class.fxcrt::UnownedPtr.50" = type { i8* }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.std::__1::unique_ptr.53"*, %"class.std::__1::unique_ptr.53"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.53" = type opaque
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.53"* }
%"class.fxcrt::RetainPtr.59" = type { %"class.std::__1::unique_ptr.60" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.69", %"class.fxcrt::RetainPtr.90" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.44", %"class.fxcrt::UnownedPtr.50" }
%"class.fxcrt::RetainPtr.69" = type { %"class.std::__1::unique_ptr.70" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.73" }
%"class.fxcrt::RetainPtr.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.162", %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.177", [4 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164", %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.79" }
%"class.std::__1::__tree.79" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.fxcrt::RetainPtr.90" = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.fxcrt::RetainPtr.98" = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.63" }
%"class.fxcrt::RetainPtr.63" = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CPVT_Word = type { i16, i32, %struct.CPVT_WordPlace, %class.CFX_PTemplate, float, float, float, i32, float }
%class.CFX_PTemplate = type { float, float }
%"class.CPVT_Section::Line" = type { %struct.CPVT_WordPlace, %struct.CPVT_LineInfo }
%struct.CPVT_LineInfo = type { i32, i32, i32, float, float, float, float, float }
%struct.CPVT_WordInfo = type { i16, i32, float, float, float, i32 }
%class.CPVT_Line = type { %struct.CPVT_WordPlace, %struct.CPVT_WordPlace, %class.CFX_PTemplate, float, float, float }
%struct.CPVT_WordRange = type { %struct.CPVT_WordPlace, %struct.CPVT_WordPlace }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.150" }
%"class.fxcrt::RetainPtr.150" = type { %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.fxcrt::StringDataTemplate.154"* }
%"class.fxcrt::StringDataTemplate.154" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"*, %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.std::__1::allocator.119"* }
%"class.std::__1::allocator.119" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CFX_STemplate = type { float, float }

$_ZNSt3__16vectorINS_10unique_ptrI12CPVT_SectionNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrI12CPVT_SectionNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

@_ZTVN17CPVT_VariableText8ProviderE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPVT_VariableText::Provider"*)* @_ZN17CPVT_VariableText8ProviderD2Ev to i8*), i8* bitcast (void (%"class.CPVT_VariableText::Provider"*)* @_ZN17CPVT_VariableText8ProviderD0Ev to i8*), i8* bitcast (i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)* @_ZN17CPVT_VariableText8Provider12GetCharWidthEit to i8*), i8* bitcast (i32 (%"class.CPVT_VariableText::Provider"*, i32)* @_ZN17CPVT_VariableText8Provider13GetTypeAscentEi to i8*), i8* bitcast (i32 (%"class.CPVT_VariableText::Provider"*, i32)* @_ZN17CPVT_VariableText8Provider14GetTypeDescentEi to i8*), i8* bitcast (i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)* @_ZN17CPVT_VariableText8Provider16GetWordFontIndexEtii to i8*), i8* bitcast (i32 (%"class.CPVT_VariableText::Provider"*)* @_ZN17CPVT_VariableText8Provider19GetDefaultFontIndexEv to i8*)] }, align 8
@_ZN12_GLOBAL__N_114kFontSizeStepsE = internal unnamed_addr constant [25 x i8] c"\04\06\08\09\0A\0C\0E\12\14\19\1E#(-27<FPZdnx\82\90", align 16

@_ZN17CPVT_VariableText8ProviderC1EP12IPVT_FontMap = hidden unnamed_addr alias void (%"class.CPVT_VariableText::Provider"*, %class.IPVT_FontMap*), void (%"class.CPVT_VariableText::Provider"*, %class.IPVT_FontMap*)* @_ZN17CPVT_VariableText8ProviderC2EP12IPVT_FontMap
@_ZN17CPVT_VariableText8ProviderD1Ev = hidden unnamed_addr alias void (%"class.CPVT_VariableText::Provider"*), void (%"class.CPVT_VariableText::Provider"*)* @_ZN17CPVT_VariableText8ProviderD2Ev
@_ZN17CPVT_VariableText8IteratorC1EPS_ = hidden unnamed_addr alias void (%"class.CPVT_VariableText::Iterator"*, %class.CPVT_VariableText*), void (%"class.CPVT_VariableText::Iterator"*, %class.CPVT_VariableText*)* @_ZN17CPVT_VariableText8IteratorC2EPS_
@_ZN17CPVT_VariableText8IteratorD1Ev = hidden unnamed_addr alias void (%"class.CPVT_VariableText::Iterator"*), void (%"class.CPVT_VariableText::Iterator"*)* @_ZN17CPVT_VariableText8IteratorD2Ev
@_ZN17CPVT_VariableTextC1Ev = hidden unnamed_addr alias void (%class.CPVT_VariableText*), void (%class.CPVT_VariableText*)* @_ZN17CPVT_VariableTextC2Ev
@_ZN17CPVT_VariableTextD1Ev = hidden unnamed_addr alias void (%class.CPVT_VariableText*), void (%class.CPVT_VariableText*)* @_ZN17CPVT_VariableTextD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17CPVT_VariableText8ProviderC2EP12IPVT_FontMap(%"class.CPVT_VariableText::Provider"* nocapture, %class.IPVT_FontMap*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.CPVT_VariableText::Provider", %"class.CPVT_VariableText::Provider"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN17CPVT_VariableText8ProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.CPVT_VariableText::Provider", %"class.CPVT_VariableText::Provider"* %0, i64 0, i32 1, i32 0
  store %class.IPVT_FontMap* %1, %class.IPVT_FontMap** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17CPVT_VariableText8ProviderD2Ev(%"class.CPVT_VariableText::Provider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CPVT_VariableText::Provider", %"class.CPVT_VariableText::Provider"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN17CPVT_VariableText8ProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText8ProviderD0Ev(%"class.CPVT_VariableText::Provider"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.CPVT_VariableText::Provider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN17CPVT_VariableText8Provider12GetCharWidthEit(%"class.CPVT_VariableText::Provider"* nocapture readonly, i32, i16 zeroext) unnamed_addr #1 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr", align 8
  %5 = bitcast %"class.fxcrt::RetainPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %6, align 8
  %7 = getelementptr inbounds %"class.CPVT_VariableText::Provider", %"class.CPVT_VariableText::Provider"* %0, i64 0, i32 1, i32 0
  %8 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %7, align 8
  %9 = bitcast %class.IPVT_FontMap* %8 to void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)***
  %10 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %10, i64 2
  %12 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %11, align 8
  call void %12(%"class.fxcrt::RetainPtr"* nonnull sret %4, %class.IPVT_FontMap* %8, i32 %1) #15
  %13 = load %class.CPDF_Font*, %class.CPDF_Font** %6, align 8
  %14 = icmp eq %class.CPDF_Font* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  store %class.CPDF_Font* null, %class.CPDF_Font** %6, align 8
  br label %46

16:                                               ; preds = %3
  %17 = zext i16 %2 to i32
  %18 = bitcast %class.CPDF_Font* %13 to i32 (%class.CPDF_Font*, i32)***
  %19 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %18, align 8
  %20 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %19, i64 22
  %21 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %20, align 8
  %22 = call i32 %21(%class.CPDF_Font* nonnull %13, i32 signext %17) #15
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %31, label %24

24:                                               ; preds = %16
  %25 = load %class.CPDF_Font*, %class.CPDF_Font** %6, align 8
  %26 = bitcast %class.CPDF_Font* %25 to i32 (%class.CPDF_Font*, i32)***
  %27 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %26, align 8
  %28 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %27, i64 24
  %29 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %28, align 8
  %30 = call i32 %29(%class.CPDF_Font* %25, i32 %22) #15
  br label %31

31:                                               ; preds = %24, %16
  %32 = phi i32 [ 0, %16 ], [ %30, %24 ]
  %33 = load %class.CPDF_Font*, %class.CPDF_Font** %6, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %6, align 8
  %34 = icmp eq %class.CPDF_Font* %33, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %33, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %37, -1
  store i64 %38, i64* %36, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %33, i64 0, i32 0
  %42 = bitcast %class.CPDF_Font* %33 to void (%"class.fxcrt::Retainable"*)***
  %43 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, i64 1
  %45 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, align 8
  call void %45(%"class.fxcrt::Retainable"* nonnull %41) #15
  br label %46

46:                                               ; preds = %15, %31, %35, %40
  %47 = phi i32 [ 0, %15 ], [ %32, %31 ], [ %32, %35 ], [ %32, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret i32 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN17CPVT_VariableText8Provider13GetTypeAscentEi(%"class.CPVT_VariableText::Provider"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr", align 8
  %4 = bitcast %"class.fxcrt::RetainPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %5, align 8
  %6 = getelementptr inbounds %"class.CPVT_VariableText::Provider", %"class.CPVT_VariableText::Provider"* %0, i64 0, i32 1, i32 0
  %7 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %6, align 8
  %8 = bitcast %class.IPVT_FontMap* %7 to void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)***
  %9 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %9, i64 2
  %11 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %10, align 8
  call void %11(%"class.fxcrt::RetainPtr"* nonnull sret %3, %class.IPVT_FontMap* %7, i32 %1) #15
  %12 = load %class.CPDF_Font*, %class.CPDF_Font** %5, align 8
  %13 = icmp eq %class.CPDF_Font* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  store %class.CPDF_Font* null, %class.CPDF_Font** %5, align 8
  br label %28

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %12, i64 0, i32 12
  %17 = load i32, i32* %16, align 4
  store %class.CPDF_Font* null, %class.CPDF_Font** %5, align 8
  %18 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %12, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, -1
  store i64 %20, i64* %18, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %15
  %23 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %12, i64 0, i32 0
  %24 = bitcast %class.CPDF_Font* %12 to void (%"class.fxcrt::Retainable"*)***
  %25 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, i64 1
  %27 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, align 8
  call void %27(%"class.fxcrt::Retainable"* nonnull %23) #15
  br label %28

28:                                               ; preds = %14, %15, %22
  %29 = phi i32 [ 0, %14 ], [ %17, %15 ], [ %17, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN17CPVT_VariableText8Provider14GetTypeDescentEi(%"class.CPVT_VariableText::Provider"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr", align 8
  %4 = bitcast %"class.fxcrt::RetainPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %5, align 8
  %6 = getelementptr inbounds %"class.CPVT_VariableText::Provider", %"class.CPVT_VariableText::Provider"* %0, i64 0, i32 1, i32 0
  %7 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %6, align 8
  %8 = bitcast %class.IPVT_FontMap* %7 to void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)***
  %9 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %9, i64 2
  %11 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %10, align 8
  call void %11(%"class.fxcrt::RetainPtr"* nonnull sret %3, %class.IPVT_FontMap* %7, i32 %1) #15
  %12 = load %class.CPDF_Font*, %class.CPDF_Font** %5, align 8
  %13 = icmp eq %class.CPDF_Font* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  store %class.CPDF_Font* null, %class.CPDF_Font** %5, align 8
  br label %28

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %12, i64 0, i32 13
  %17 = load i32, i32* %16, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %5, align 8
  %18 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %12, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, -1
  store i64 %20, i64* %18, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %15
  %23 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %12, i64 0, i32 0
  %24 = bitcast %class.CPDF_Font* %12 to void (%"class.fxcrt::Retainable"*)***
  %25 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, i64 1
  %27 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, align 8
  call void %27(%"class.fxcrt::Retainable"* nonnull %23) #15
  br label %28

28:                                               ; preds = %14, %15, %22
  %29 = phi i32 [ 0, %14 ], [ %17, %15 ], [ %17, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN17CPVT_VariableText8Provider16GetWordFontIndexEtii(%"class.CPVT_VariableText::Provider"* nocapture readonly, i16 zeroext, i32, i32) unnamed_addr #1 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = bitcast %"class.fxcrt::RetainPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %8, align 8
  %9 = getelementptr inbounds %"class.CPVT_VariableText::Provider", %"class.CPVT_VariableText::Provider"* %0, i64 0, i32 1, i32 0
  %10 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %9, align 8
  %11 = bitcast %class.IPVT_FontMap* %10 to void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)***
  %12 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %12, i64 2
  %14 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %13, align 8
  call void %14(%"class.fxcrt::RetainPtr"* nonnull sret %5, %class.IPVT_FontMap* %10, i32 0) #15
  %15 = load %class.CPDF_Font*, %class.CPDF_Font** %8, align 8
  %16 = icmp eq %class.CPDF_Font* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  store %class.CPDF_Font* null, %class.CPDF_Font** %8, align 8
  br label %53

18:                                               ; preds = %4
  %19 = zext i16 %1 to i32
  %20 = bitcast %class.CPDF_Font* %15 to i32 (%class.CPDF_Font*, i32)***
  %21 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %20, align 8
  %22 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %21, i64 22
  %23 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %22, align 8
  %24 = call i32 %23(%class.CPDF_Font* nonnull %15, i32 signext %19) #15
  %25 = icmp eq i32 %24, -1
  %26 = load %class.CPDF_Font*, %class.CPDF_Font** %8, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %8, align 8
  %27 = icmp eq %class.CPDF_Font* %26, null
  br i1 %25, label %41, label %28

28:                                               ; preds = %18
  br i1 %27, label %40, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %26, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %26, i64 0, i32 0
  %36 = bitcast %class.CPDF_Font* %26 to void (%"class.fxcrt::Retainable"*)***
  %37 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, i64 1
  %39 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, align 8
  call void %39(%"class.fxcrt::Retainable"* nonnull %35) #15
  br label %40

40:                                               ; preds = %28, %29, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret i32 0

41:                                               ; preds = %18
  br i1 %27, label %53, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %26, i64 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %26, i64 0, i32 0
  %49 = bitcast %class.CPDF_Font* %26 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #15
  br label %53

53:                                               ; preds = %17, %41, %42, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %54 = bitcast %"class.fxcrt::RetainPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #15
  %55 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %55, align 8
  %56 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %9, align 8
  %57 = bitcast %class.IPVT_FontMap* %56 to void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)***
  %58 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %58, i64 2
  %60 = load void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr"*, %class.IPVT_FontMap*, i32)** %59, align 8
  call void %60(%"class.fxcrt::RetainPtr"* nonnull sret %6, %class.IPVT_FontMap* %56, i32 1) #15
  %61 = load %class.CPDF_Font*, %class.CPDF_Font** %55, align 8
  %62 = icmp eq %class.CPDF_Font* %61, null
  br i1 %62, label %71, label %63

63:                                               ; preds = %53
  %64 = zext i16 %1 to i32
  %65 = bitcast %class.CPDF_Font* %61 to i32 (%class.CPDF_Font*, i32)***
  %66 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %65, align 8
  %67 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %66, i64 22
  %68 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %67, align 8
  %69 = call i32 %68(%class.CPDF_Font* nonnull %61, i32 signext %64) #15
  %70 = icmp eq i32 %69, -1
  br i1 %70, label %71, label %72

71:                                               ; preds = %53, %63
  br label %72

72:                                               ; preds = %63, %71
  %73 = phi i32 [ -1, %71 ], [ 1, %63 ]
  %74 = load %class.CPDF_Font*, %class.CPDF_Font** %55, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %55, align 8
  %75 = icmp eq %class.CPDF_Font* %74, null
  br i1 %75, label %87, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %74, i64 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %78, -1
  store i64 %79, i64* %77, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %74, i64 0, i32 0
  %83 = bitcast %class.CPDF_Font* %74 to void (%"class.fxcrt::Retainable"*)***
  %84 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %84, i64 1
  %86 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %85, align 8
  call void %86(%"class.fxcrt::Retainable"* nonnull %82) #15
  br label %87

87:                                               ; preds = %72, %76, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #15
  ret i32 %73
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN17CPVT_VariableText8Provider19GetDefaultFontIndexEv(%"class.CPVT_VariableText::Provider"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17CPVT_VariableText8IteratorC2EPS_(%"class.CPVT_VariableText::Iterator"* nocapture, %class.CPVT_VariableText*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 0
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 2
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 1, i32 0
  store %class.CPVT_VariableText* %1, %class.CPVT_VariableText** %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN17CPVT_VariableText8IteratorD2Ev(%"class.CPVT_VariableText::Iterator"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText8Iterator5SetAtEi(%"class.CPVT_VariableText::Iterator"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 1, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %5 = tail call { i64, i32 } @_ZNK17CPVT_VariableText20WordIndexToWordPlaceEi(%class.CPVT_VariableText* %4, i32 %1)
  %6 = extractvalue { i64, i32 } %5, 0
  %7 = extractvalue { i64, i32 } %5, 1
  %8 = bitcast %"class.CPVT_VariableText::Iterator"* %0 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 2
  store i32 %7, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText20WordIndexToWordPlaceEi(%class.CPVT_VariableText* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 8
  %4 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 0
  %5 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = add nsw i8 %7, -1
  %9 = sext i8 %8 to i64
  %10 = bitcast %struct.CPVT_WordPlace* %3 to i64*
  store i64 %9, i64* %10, align 8
  store i32 -1, i32* %5, align 8
  %11 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %12 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.115"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.113"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ult i64 %18, 2147483648
  %20 = inttoptr i64 %16 to %"class.std::__1::unique_ptr.115"*
  br i1 %19, label %22, label %21, !prof !3

21:                                               ; preds = %2
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %2
  %23 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.115"*
  %24 = trunc i64 %18 to i32
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %69

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %11, i64 0, i32 0, i32 0
  %28 = add nuw nsw i64 %18, 4294967295
  %29 = and i64 %28, 4294967295
  %30 = and i64 %18, 4294967295
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %20, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.CPVT_Section*, %class.CPVT_Section** %31, align 8
  %33 = tail call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %32) #15
  %34 = icmp eq i32 %33, %1
  br i1 %34, label %35, label %40

35:                                               ; preds = %55, %26
  %36 = phi %class.CPVT_Section* [ %32, %26 ], [ %61, %55 ]
  %37 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %36) #15
  %38 = extractvalue { i64, i32 } %37, 0
  %39 = extractvalue { i64, i32 } %37, 1
  store i64 %38, i64* %10, align 8
  store i32 %39, i32* %5, align 8
  br label %86

40:                                               ; preds = %26, %55
  %41 = phi i32 [ %63, %55 ], [ %33, %26 ]
  %42 = phi %class.CPVT_Section* [ %61, %55 ], [ %32, %26 ]
  %43 = phi i32 [ %58, %55 ], [ 0, %26 ]
  %44 = phi i64 [ %53, %55 ], [ 0, %26 ]
  %45 = icmp sgt i32 %41, %1
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = trunc i64 %44 to i32
  store i32 %47, i32* %4, align 8
  %48 = xor i32 %43, -1
  %49 = add i32 %48, %1
  store i32 %49, i32* %5, align 8
  call void @_ZNK12CPVT_Section15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_Section* %42, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3) #15
  %50 = load i64, i64* %10, align 8
  %51 = load i32, i32* %5, align 8
  br label %86

52:                                               ; preds = %40
  %53 = add nuw nsw i64 %44, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %65, label %55

55:                                               ; preds = %52
  %56 = icmp ne i64 %44, %29
  %57 = zext i1 %56 to i32
  %58 = add nsw i32 %41, %57
  %59 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %27, align 8
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %59, i64 %53, i32 0, i32 0, i32 0
  %61 = load %class.CPVT_Section*, %class.CPVT_Section** %60, align 8
  %62 = tail call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %61) #15
  %63 = add nsw i32 %62, %58
  %64 = icmp eq i32 %63, %1
  br i1 %64, label %35, label %40

65:                                               ; preds = %52
  %66 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %67 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %66, align 8
  %68 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %12, align 8
  br label %69

69:                                               ; preds = %65, %22
  %70 = phi %"class.std::__1::unique_ptr.115"* [ %68, %65 ], [ %23, %22 ]
  %71 = phi %"class.std::__1::unique_ptr.115"* [ %67, %65 ], [ %20, %22 ]
  %72 = icmp eq %"class.std::__1::unique_ptr.115"* %71, %70
  br i1 %72, label %81, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %70, i64 -1, i32 0, i32 0, i32 0
  %75 = load %class.CPVT_Section*, %class.CPVT_Section** %74, align 8
  %76 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %75) #15
  %77 = extractvalue { i64, i32 } %76, 0
  %78 = extractvalue { i64, i32 } %76, 1
  %79 = and i64 %77, -4294967296
  %80 = and i64 %77, 4294967295
  br label %81

81:                                               ; preds = %69, %73
  %82 = phi i64 [ %80, %73 ], [ 4294967295, %69 ]
  %83 = phi i64 [ %79, %73 ], [ -4294967296, %69 ]
  %84 = phi i32 [ %78, %73 ], [ -1, %69 ]
  %85 = or i64 %83, %82
  store i64 %85, i64* %10, align 8
  store i32 %84, i32* %5, align 8
  br label %86

86:                                               ; preds = %35, %46, %81
  %87 = phi i32 [ %39, %35 ], [ %51, %46 ], [ %84, %81 ]
  %88 = phi i64 [ %38, %35 ], [ %50, %46 ], [ %85, %81 ]
  %89 = insertvalue { i64, i32 } undef, i64 %88, 0
  %90 = insertvalue { i64, i32 } %89, i32 %87, 1
  ret { i64, i32 } %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText8Iterator5SetAtERK14CPVT_WordPlace(%"class.CPVT_VariableText::Iterator"* nocapture, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.CPVT_VariableText::Iterator"* %0 to i8*
  %4 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 4 %4, i64 12, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextWordEv(%"class.CPVT_VariableText::Iterator"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 1, i32 0
  %4 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %4, i64 0, i32 11, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %5, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %4, i64 0, i32 11, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.115"* %6, %8
  br i1 %9, label %19, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %8, i64 -1, i32 0, i32 0, i32 0
  %12 = load %class.CPVT_Section*, %class.CPVT_Section** %11, align 8
  %13 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %12) #15
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  %16 = trunc i64 %14 to i32
  %17 = lshr i64 %14, 32
  %18 = trunc i64 %17 to i32
  br label %19

19:                                               ; preds = %1, %10
  %20 = phi i32 [ %16, %10 ], [ -1, %1 ]
  %21 = phi i32 [ %18, %10 ], [ -1, %1 ]
  %22 = phi i32 [ %15, %10 ], [ -1, %1 ]
  %23 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, %20
  br i1 %25, label %26, label %34

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %21
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %22, %32
  br i1 %33, label %41, label %34

34:                                               ; preds = %19, %26, %30
  %35 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %3, align 8
  %36 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %35, %struct.CPVT_WordPlace* dereferenceable(12) %2)
  %37 = extractvalue { i64, i32 } %36, 0
  %38 = extractvalue { i64, i32 } %36, 1
  %39 = bitcast %"class.CPVT_VariableText::Iterator"* %0 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 2
  store i32 %38, i32* %40, align 8
  br label %41

41:                                               ; preds = %30, %34
  %42 = phi i1 [ true, %34 ], [ false, %30 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText15GetEndWordPlaceEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.115"* %3, %5
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %5, i64 -1, i32 0, i32 0, i32 0
  %9 = load %class.CPVT_Section*, %class.CPVT_Section** %8, align 8
  %10 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %9) #15
  %11 = extractvalue { i64, i32 } %10, 0
  %12 = extractvalue { i64, i32 } %10, 1
  %13 = and i64 %11, -4294967296
  %14 = and i64 %11, 4294967295
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i64 [ %14, %7 ], [ 4294967295, %1 ]
  %17 = phi i64 [ %13, %7 ], [ -4294967296, %1 ]
  %18 = phi i32 [ %12, %7 ], [ -1, %1 ]
  %19 = or i64 %17, %16
  %20 = insertvalue { i64, i32 } undef, i64 %19, 0
  %21 = insertvalue { i64, i32 } %20, i32 %18, 1
  ret { i64, i32 } %21
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = add nsw i8 %8, -1
  %10 = sext i8 %9 to i64
  br label %113

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %13 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.115"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.113"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 2147483648
  %21 = inttoptr i64 %17 to %"class.std::__1::unique_ptr.115"*
  %22 = inttoptr i64 %15 to %"class.std::__1::unique_ptr.115"*
  br i1 %20, label %24, label %23, !prof !3

23:                                               ; preds = %11
  tail call void @llvm.trap() #15
  unreachable

24:                                               ; preds = %11
  %25 = trunc i64 %19 to i32
  %26 = icmp slt i32 %4, %25
  br i1 %26, label %42, label %27

27:                                               ; preds = %24
  %28 = icmp eq %"class.std::__1::unique_ptr.115"* %21, %22
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %22, i64 -1, i32 0, i32 0, i32 0
  %31 = load %class.CPVT_Section*, %class.CPVT_Section** %30, align 8
  %32 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %31) #15
  %33 = extractvalue { i64, i32 } %32, 0
  %34 = extractvalue { i64, i32 } %32, 1
  %35 = and i64 %33, -4294967296
  %36 = and i64 %33, 4294967295
  br label %37

37:                                               ; preds = %27, %29
  %38 = phi i64 [ %36, %29 ], [ 4294967295, %27 ]
  %39 = phi i64 [ %35, %29 ], [ -4294967296, %27 ]
  %40 = phi i32 [ %34, %29 ], [ -1, %27 ]
  %41 = or i64 %39, %38
  br label %113

42:                                               ; preds = %24
  %43 = sext i32 %4 to i64
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %21, i64 %43, i32 0, i32 0, i32 0
  %45 = load %class.CPVT_Section*, %class.CPVT_Section** %44, align 8
  %46 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %45) #15
  %47 = extractvalue { i64, i32 } %46, 0
  %48 = extractvalue { i64, i32 } %46, 1
  %49 = trunc i64 %47 to i32
  %50 = lshr i64 %47, 32
  %51 = trunc i64 %50 to i32
  %52 = load i32, i32* %3, align 4
  %53 = icmp eq i32 %52, %49
  br i1 %53, label %56, label %54

54:                                               ; preds = %42
  %55 = icmp slt i32 %52, %49
  br i1 %55, label %66, label %70

56:                                               ; preds = %42
  %57 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %51
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = icmp slt i32 %58, %51
  br i1 %61, label %66, label %70

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, %48
  br i1 %65, label %66, label %70

66:                                               ; preds = %60, %54, %62
  %67 = tail call { i64, i32 } @_ZNK12CPVT_Section16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_Section* %45, %struct.CPVT_WordPlace* dereferenceable(12) %1) #15
  %68 = extractvalue { i64, i32 } %67, 0
  %69 = extractvalue { i64, i32 } %67, 1
  br label %113

70:                                               ; preds = %60, %54, %62
  %71 = add nsw i32 %52, 1
  %72 = icmp sgt i32 %52, -2
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %75 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %74, align 8
  %76 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %13, align 8
  br label %89

77:                                               ; preds = %70
  %78 = load i64, i64* %14, align 8
  %79 = load i64, i64* %16, align 8
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 3
  %82 = icmp ult i64 %81, 2147483648
  %83 = inttoptr i64 %79 to %"class.std::__1::unique_ptr.115"*
  br i1 %82, label %85, label %84, !prof !3

84:                                               ; preds = %77
  tail call void @llvm.trap() #15
  unreachable

85:                                               ; preds = %77
  %86 = inttoptr i64 %78 to %"class.std::__1::unique_ptr.115"*
  %87 = trunc i64 %81 to i32
  %88 = icmp slt i32 %71, %87
  br i1 %88, label %106, label %89

89:                                               ; preds = %73, %85
  %90 = phi %"class.std::__1::unique_ptr.115"* [ %76, %73 ], [ %86, %85 ]
  %91 = phi %"class.std::__1::unique_ptr.115"* [ %75, %73 ], [ %83, %85 ]
  %92 = icmp eq %"class.std::__1::unique_ptr.115"* %91, %90
  br i1 %92, label %101, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %90, i64 -1, i32 0, i32 0, i32 0
  %95 = load %class.CPVT_Section*, %class.CPVT_Section** %94, align 8
  %96 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %95) #15
  %97 = extractvalue { i64, i32 } %96, 0
  %98 = extractvalue { i64, i32 } %96, 1
  %99 = and i64 %97, -4294967296
  %100 = and i64 %97, 4294967295
  br label %101

101:                                              ; preds = %89, %93
  %102 = phi i64 [ %100, %93 ], [ 4294967295, %89 ]
  %103 = phi i64 [ %99, %93 ], [ -4294967296, %89 ]
  %104 = phi i32 [ %98, %93 ], [ -1, %89 ]
  %105 = or i64 %103, %102
  br label %113

106:                                              ; preds = %85
  %107 = sext i32 %71 to i64
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %83, i64 %107, i32 0, i32 0, i32 0
  %109 = load %class.CPVT_Section*, %class.CPVT_Section** %108, align 8
  %110 = tail call { i64, i32 } @_ZNK12CPVT_Section17GetBeginWordPlaceEv(%class.CPVT_Section* %109) #15
  %111 = extractvalue { i64, i32 } %110, 0
  %112 = extractvalue { i64, i32 } %110, 1
  br label %113

113:                                              ; preds = %66, %101, %106, %37, %6
  %114 = phi i64 [ %10, %6 ], [ %41, %37 ], [ %68, %66 ], [ %111, %106 ], [ %105, %101 ]
  %115 = phi i32 [ -1, %6 ], [ %40, %37 ], [ %69, %66 ], [ %112, %106 ], [ %104, %101 ]
  %116 = insertvalue { i64, i32 } undef, i64 %114, 0
  %117 = insertvalue { i64, i32 } %116, i32 %115, 1
  ret { i64, i32 } %117
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17CPVT_VariableText8Iterator8NextLineEv(%"class.CPVT_VariableText::Iterator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 1, i32 0
  %3 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %4 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %55

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 11
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %3, i64 0, i32 11, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.115"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.113"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ult i64 %15, 2147483648
  %17 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.115"*
  br i1 %16, label %19, label %18, !prof !3

18:                                               ; preds = %7
  tail call void @llvm.trap() #15
  unreachable

19:                                               ; preds = %7
  %20 = trunc i64 %15 to i32
  %21 = icmp slt i32 %5, %20
  br i1 %21, label %22, label %55

22:                                               ; preds = %19
  %23 = sext i32 %5 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %17, i64 %23, i32 0, i32 0, i32 0
  %25 = load %class.CPVT_Section*, %class.CPVT_Section** %24, align 8
  %26 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = tail call i32 @_ZNK12CPVT_Section16GetLineArraySizeEv(%class.CPVT_Section* %25) #15
  %29 = add nsw i32 %28, -1
  %30 = icmp slt i32 %27, %29
  %31 = load i32, i32* %4, align 8
  br i1 %30, label %32, label %36

32:                                               ; preds = %22
  %33 = load i32, i32* %26, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %26, align 4
  %35 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 2
  store i32 -1, i32* %35, align 8
  br label %55

36:                                               ; preds = %22
  %37 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %2, align 8
  %38 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %37, i64 0, i32 11
  %39 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %37, i64 0, i32 11, i32 0, i32 1
  %40 = bitcast %"class.std::__1::unique_ptr.115"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.113"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 3
  %46 = icmp ult i64 %45, 2147483648
  br i1 %46, label %48, label %47, !prof !3

47:                                               ; preds = %36
  tail call void @llvm.trap() #15
  unreachable

48:                                               ; preds = %36
  %49 = trunc i64 %45 to i32
  %50 = add nsw i32 %49, -1
  %51 = icmp slt i32 %31, %50
  br i1 %51, label %52, label %55

52:                                               ; preds = %48
  %53 = add nsw i32 %31, 1
  store i32 %53, i32* %4, align 8
  store i32 0, i32* %26, align 4
  %54 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 2
  store i32 -1, i32* %54, align 8
  br label %55

55:                                               ; preds = %1, %32, %52, %48, %19
  %56 = phi i1 [ false, %19 ], [ true, %32 ], [ true, %52 ], [ false, %48 ], [ false, %1 ]
  ret i1 %56
}

declare i32 @_ZNK12CPVT_Section16GetLineArraySizeEv(%class.CPVT_Section*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetWordER9CPVT_Word(%"class.CPVT_VariableText::Iterator"* nocapture readonly, %class.CPVT_Word* dereferenceable(48)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 2
  %4 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  %5 = bitcast %"class.CPVT_VariableText::Iterator"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 12, i1 false)
  %6 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 1, i32 0
  %7 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %8 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %145

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %7, i64 0, i32 11
  %13 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %7, i64 0, i32 11, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.115"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.113"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 2147483648
  %21 = inttoptr i64 %17 to %"class.std::__1::unique_ptr.115"*
  br i1 %20, label %23, label %22, !prof !3

22:                                               ; preds = %11
  tail call void @llvm.trap() #15
  unreachable

23:                                               ; preds = %11
  %24 = trunc i64 %19 to i32
  %25 = icmp slt i32 %9, %24
  br i1 %25, label %26, label %145

26:                                               ; preds = %23
  %27 = sext i32 %9 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %21, i64 %27, i32 0, i32 0, i32 0
  %29 = load %class.CPVT_Section*, %class.CPVT_Section** %28, align 8
  %30 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = tail call %"class.CPVT_Section::Line"* @_ZNK12CPVT_Section16GetLineFromArrayEi(%class.CPVT_Section* %29, i32 %31) #15
  %33 = icmp eq %"class.CPVT_Section::Line"* %32, null
  br i1 %33, label %145, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = tail call %struct.CPVT_WordInfo* @_ZNK12CPVT_Section16GetWordFromArrayEi(%class.CPVT_Section* %29, i32 %36) #15
  %38 = icmp eq %struct.CPVT_WordInfo* %37, null
  br i1 %38, label %145, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %37, i64 0, i32 0
  %41 = load i16, i16* %40, align 4
  %42 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 0
  store i16 %41, i16* %42, align 4
  %43 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %37, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 1
  store i32 %44, i32* %45, align 4
  %46 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %47 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %46, i64 0, i32 4
  %48 = load i16, i16* %47, align 4
  %49 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %46, i64 0, i32 9
  %50 = load float, float* %49, align 8
  %51 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %46, i64 0, i32 10
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %37, i64 0, i32 4
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %46, i64 0, i32 12, i32 0
  %56 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %55, align 8
  %57 = icmp eq %"class.CPVT_VariableText::Provider"* %56, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %39
  %59 = load i16, i16* %40, align 4
  %60 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %37, i64 0, i32 5
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i16 %48, 0
  %63 = select i1 %62, i16 %59, i16 %48
  %64 = bitcast %"class.CPVT_VariableText::Provider"* %56 to i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)***
  %65 = load i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)**, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)** %65, i64 2
  %67 = load i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)** %66, align 8
  %68 = tail call i32 %67(%"class.CPVT_VariableText::Provider"* nonnull %56, i32 %61, i16 zeroext %63) #15
  %69 = sitofp i32 %68 to float
  br label %70

70:                                               ; preds = %39, %58
  %71 = phi float [ %69, %58 ], [ 0.000000e+00, %39 ]
  %72 = fmul float %52, %71
  %73 = fmul float %72, 0x3F50624DE0000000
  %74 = fadd float %50, %73
  %75 = fadd float %54, %74
  %76 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 6
  store float %75, float* %76, align 4
  %77 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %78 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %37, i64 0, i32 2
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %29, i64 0, i32 1, i32 0, i32 0
  %81 = load float, float* %80, align 4
  %82 = fadd float %79, %81
  %83 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %37, i64 0, i32 3
  %84 = load float, float* %83, align 4
  %85 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %29, i64 0, i32 1, i32 0, i32 3
  %86 = load float, float* %85, align 4
  %87 = fadd float %84, %86
  %88 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %77, i64 0, i32 14, i32 0
  %89 = load float, float* %88, align 8, !noalias !4
  %90 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %77, i64 0, i32 14, i32 3
  %91 = fadd float %82, %89
  %92 = load float, float* %90, align 4, !noalias !9
  %93 = fsub float %92, %87
  %94 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 3, i32 0
  store float %91, float* %94, align 4
  %95 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 3, i32 1
  store float %93, float* %95, align 4
  %96 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %97 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %96, i64 0, i32 10
  %98 = load float, float* %97, align 4
  %99 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %96, i64 0, i32 12, i32 0
  %100 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %99, align 8
  %101 = icmp eq %"class.CPVT_VariableText::Provider"* %100, null
  br i1 %101, label %111, label %102

102:                                              ; preds = %70
  %103 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %37, i64 0, i32 5
  %104 = load i32, i32* %103, align 4
  %105 = bitcast %"class.CPVT_VariableText::Provider"* %100 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %106 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %105, align 8
  %107 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %106, i64 3
  %108 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %107, align 8
  %109 = tail call i32 %108(%"class.CPVT_VariableText::Provider"* nonnull %100, i32 %104) #15
  %110 = sitofp i32 %109 to float
  br label %111

111:                                              ; preds = %70, %102
  %112 = phi float [ %110, %102 ], [ 0.000000e+00, %70 ]
  %113 = fmul float %98, %112
  %114 = fmul float %113, 0x3F50624DE0000000
  %115 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 4
  store float %114, float* %115, align 4
  %116 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %117 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %116, i64 0, i32 10
  %118 = load float, float* %117, align 4
  %119 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %116, i64 0, i32 12, i32 0
  %120 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %119, align 8
  %121 = icmp eq %"class.CPVT_VariableText::Provider"* %120, null
  br i1 %121, label %131, label %122

122:                                              ; preds = %111
  %123 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %37, i64 0, i32 5
  %124 = load i32, i32* %123, align 4
  %125 = bitcast %"class.CPVT_VariableText::Provider"* %120 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %126 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %125, align 8
  %127 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %126, i64 4
  %128 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %127, align 8
  %129 = tail call i32 %128(%"class.CPVT_VariableText::Provider"* nonnull %120, i32 %124) #15
  %130 = sitofp i32 %129 to float
  br label %131

131:                                              ; preds = %111, %122
  %132 = phi float [ %130, %122 ], [ 0.000000e+00, %111 ]
  %133 = fmul float %118, %132
  %134 = fmul float %133, 0x3F50624DE0000000
  %135 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 5
  store float %134, float* %135, align 4
  %136 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %37, i64 0, i32 5
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 7
  store i32 %137, i32* %138, align 4
  %139 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %6, align 8
  %140 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %139, i64 0, i32 10
  %141 = bitcast float* %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %1, i64 0, i32 8
  %144 = bitcast float* %143 to i32*
  store i32 %142, i32* %144, align 4
  br label %145

145:                                              ; preds = %2, %26, %34, %131, %23
  %146 = phi i1 [ false, %23 ], [ false, %26 ], [ true, %131 ], [ false, %34 ], [ false, %2 ]
  ret i1 %146
}

declare %"class.CPVT_Section::Line"* @_ZNK12CPVT_Section16GetLineFromArrayEi(%class.CPVT_Section*, i32) local_unnamed_addr #5

declare %struct.CPVT_WordInfo* @_ZNK12CPVT_Section16GetWordFromArrayEi(%class.CPVT_Section*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK17CPVT_VariableText12GetWordWidthERK13CPVT_WordInfo(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 4
  %4 = load i16, i16* %3, align 4
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 9
  %6 = load float, float* %5, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %1, i64 0, i32 4
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %12 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %11, align 8
  %13 = icmp eq %"class.CPVT_VariableText::Provider"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %1, i64 0, i32 0
  %16 = load i16, i16* %15, align 4
  %17 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %1, i64 0, i32 5
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i16 %4, 0
  %20 = select i1 %19, i16 %16, i16 %4
  %21 = bitcast %"class.CPVT_VariableText::Provider"* %12 to i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)***
  %22 = load i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)**, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)** %22, i64 2
  %24 = load i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)** %23, align 8
  %25 = tail call i32 %24(%"class.CPVT_VariableText::Provider"* nonnull %12, i32 %18, i16 zeroext %20) #15
  %26 = sitofp i32 %25 to float
  br label %27

27:                                               ; preds = %2, %14
  %28 = phi float [ %26, %14 ], [ 0.000000e+00, %2 ]
  %29 = fmul float %8, %28
  %30 = fmul float %29, 0x3F50624DE0000000
  %31 = fadd float %6, %30
  %32 = fadd float %10, %31
  ret float %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17CPVT_VariableText7InToOutERK13CFX_PTemplateIfE(%class.CFX_PTemplate* noalias nocapture sret, %class.CPVT_VariableText* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %1, i64 0, i32 14, i32 0
  %7 = load float, float* %6, align 8, !noalias !12
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %1, i64 0, i32 14, i32 3
  %9 = fadd float %5, %7
  %10 = load float, float* %8, align 4, !noalias !15
  %11 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fsub float %10, %12
  %14 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %9, float* %14, align 4
  %15 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %13, float* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK17CPVT_VariableText13GetWordAscentERK13CPVT_WordInfo(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %6 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %5, align 8
  %7 = icmp eq %"class.CPVT_VariableText::Provider"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %1, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.CPVT_VariableText::Provider"* %6 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %12 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %12, i64 3
  %14 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %13, align 8
  %15 = tail call i32 %14(%"class.CPVT_VariableText::Provider"* nonnull %6, i32 %10) #15
  %16 = sitofp i32 %15 to float
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi float [ %16, %8 ], [ 0.000000e+00, %2 ]
  %19 = fmul float %4, %18
  %20 = fmul float %19, 0x3F50624DE0000000
  ret float %20
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK17CPVT_VariableText14GetWordDescentERK13CPVT_WordInfo(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %6 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %5, align 8
  %7 = icmp eq %"class.CPVT_VariableText::Provider"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %1, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.CPVT_VariableText::Provider"* %6 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %12 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %12, i64 4
  %14 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %13, align 8
  %15 = tail call i32 %14(%"class.CPVT_VariableText::Provider"* nonnull %6, i32 %10) #15
  %16 = sitofp i32 %15 to float
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi float [ %16, %8 ], [ 0.000000e+00, %2 ]
  %19 = fmul float %4, %18
  %20 = fmul float %19, 0x3F50624DE0000000
  ret float %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK17CPVT_VariableText15GetWordFontSizeEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17CPVT_VariableText8Iterator7GetLineER9CPVT_Line(%"class.CPVT_VariableText::Iterator"* nocapture readonly, %class.CPVT_Line* dereferenceable(44)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 0, i32 0
  store i32 %4, i32* %7, align 4
  %8 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 0, i32 1
  store i32 %6, i32* %8, align 4
  %9 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 0, i32 2
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.CPVT_VariableText::Iterator", %"class.CPVT_VariableText::Iterator"* %0, i64 0, i32 1, i32 0
  %11 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %10, align 8
  %12 = load i32, i32* %3, align 8
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %77

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %11, i64 0, i32 11
  %16 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %11, i64 0, i32 11, i32 0, i32 1
  %17 = bitcast %"class.std::__1::unique_ptr.115"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.113"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp ult i64 %22, 2147483648
  %24 = inttoptr i64 %20 to %"class.std::__1::unique_ptr.115"*
  br i1 %23, label %26, label %25, !prof !3

25:                                               ; preds = %14
  tail call void @llvm.trap() #15
  unreachable

26:                                               ; preds = %14
  %27 = trunc i64 %22 to i32
  %28 = icmp slt i32 %12, %27
  br i1 %28, label %29, label %77

29:                                               ; preds = %26
  %30 = sext i32 %12 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %24, i64 %30, i32 0, i32 0, i32 0
  %32 = load %class.CPVT_Section*, %class.CPVT_Section** %31, align 8
  %33 = load i32, i32* %5, align 4
  %34 = tail call %"class.CPVT_Section::Line"* @_ZNK12CPVT_Section16GetLineFromArrayEi(%class.CPVT_Section* %32, i32 %33) #15
  %35 = icmp eq %"class.CPVT_Section::Line"* %34, null
  br i1 %35, label %77, label %36

36:                                               ; preds = %29
  %37 = load %class.CPVT_VariableText*, %class.CPVT_VariableText** %10, align 8
  %38 = getelementptr inbounds %"class.CPVT_Section::Line", %"class.CPVT_Section::Line"* %34, i64 0, i32 1, i32 3
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %32, i64 0, i32 1, i32 0, i32 0
  %41 = load float, float* %40, align 4
  %42 = fadd float %39, %41
  %43 = getelementptr inbounds %"class.CPVT_Section::Line", %"class.CPVT_Section::Line"* %34, i64 0, i32 1, i32 4
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %32, i64 0, i32 1, i32 0, i32 3
  %46 = load float, float* %45, align 4
  %47 = fadd float %44, %46
  %48 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %37, i64 0, i32 14, i32 0
  %49 = load float, float* %48, align 8, !noalias !18
  %50 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %37, i64 0, i32 14, i32 3
  %51 = fadd float %42, %49
  %52 = load float, float* %50, align 4, !noalias !23
  %53 = fsub float %52, %47
  %54 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 2, i32 0
  store float %51, float* %54, align 4
  %55 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 2, i32 1
  store float %53, float* %55, align 4
  %56 = getelementptr inbounds %"class.CPVT_Section::Line", %"class.CPVT_Section::Line"* %34, i64 0, i32 1, i32 5
  %57 = bitcast float* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 3
  %60 = bitcast float* %59 to i32*
  store i32 %58, i32* %60, align 4
  %61 = getelementptr inbounds %"class.CPVT_Section::Line", %"class.CPVT_Section::Line"* %34, i64 0, i32 1, i32 6
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 4
  %65 = bitcast float* %64 to i32*
  store i32 %63, i32* %65, align 4
  %66 = getelementptr inbounds %"class.CPVT_Section::Line", %"class.CPVT_Section::Line"* %34, i64 0, i32 1, i32 7
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 5
  %70 = bitcast float* %69 to i32*
  store i32 %68, i32* %70, align 4
  %71 = tail call { i64, i32 } @_ZNK12CPVT_Section4Line15GetEndWordPlaceEv(%"class.CPVT_Section::Line"* nonnull %34) #15
  %72 = extractvalue { i64, i32 } %71, 0
  %73 = extractvalue { i64, i32 } %71, 1
  %74 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 1
  %75 = bitcast %struct.CPVT_WordPlace* %74 to i64*
  store i64 %72, i64* %75, align 4
  %76 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %1, i64 0, i32 1, i32 2
  store i32 %73, i32* %76, align 4
  br label %77

77:                                               ; preds = %2, %36, %29, %26
  %78 = phi i1 [ false, %26 ], [ true, %36 ], [ false, %29 ], [ false, %2 ]
  ret i1 %78
}

declare { i64, i32 } @_ZNK12CPVT_Section4Line15GetEndWordPlaceEv(%"class.CPVT_Section::Line"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableTextC2Ev(%class.CPVT_VariableText* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %3 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 6, i1 false)
  %4 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 96, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableTextD2Ev(%class.CPVT_VariableText* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %3 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %2, align 8
  store %"class.CPVT_VariableText::Iterator"* null, %"class.CPVT_VariableText::Iterator"** %2, align 8
  %4 = icmp eq %"class.CPVT_VariableText::Iterator"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.CPVT_VariableText::Iterator"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %9 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.115"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::unique_ptr.115"* %10 to i8*
  %14 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %14, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr.115"* %15, %10
  br i1 %16, label %30, label %17

17:                                               ; preds = %12, %25
  %18 = phi %"class.std::__1::unique_ptr.115"* [ %19, %25 ], [ %15, %12 ]
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %18, i64 -1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %class.CPVT_Section*, %class.CPVT_Section** %20, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %20, align 8
  %22 = icmp eq %class.CPVT_Section* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  tail call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %21) #15
  %24 = bitcast %class.CPVT_Section* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %23, %17
  %26 = icmp eq %"class.std::__1::unique_ptr.115"* %19, %10
  br i1 %26, label %27, label %17

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.113"* %8 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %12
  %31 = phi i8* [ %29, %27 ], [ %13, %12 ]
  store %"class.std::__1::unique_ptr.115"* %10, %"class.std::__1::unique_ptr.115"** %14, align 8
  tail call void @_ZdlPv(i8* %31) #14
  br label %32

32:                                               ; preds = %7, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText10InitializeEv(%class.CPVT_VariableText*) local_unnamed_addr #1 align 2 {
  %2 = alloca %struct.CPVT_WordPlace, align 8
  %3 = alloca %struct.CPVT_LineInfo, align 4
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %105

7:                                                ; preds = %1
  %8 = bitcast %struct.CPVT_WordPlace* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #15
  %9 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %2, i64 0, i32 0
  %10 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %2, i64 0, i32 1
  %11 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %2, i64 0, i32 2
  store i32 -1, i32* %10, align 4
  store i32 -1, i32* %11, align 8
  store i32 0, i32* %9, align 8
  %12 = call { i64, i32 } @_ZN17CPVT_VariableText10AddSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %2)
  %13 = bitcast %struct.CPVT_LineInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #15
  %14 = getelementptr inbounds %struct.CPVT_LineInfo, %struct.CPVT_LineInfo* %3, i64 0, i32 0
  %15 = getelementptr inbounds %struct.CPVT_LineInfo, %struct.CPVT_LineInfo* %3, i64 0, i32 1
  %16 = getelementptr inbounds %struct.CPVT_LineInfo, %struct.CPVT_LineInfo* %3, i64 0, i32 2
  %17 = getelementptr inbounds %struct.CPVT_LineInfo, %struct.CPVT_LineInfo* %3, i64 0, i32 3
  %18 = getelementptr inbounds %struct.CPVT_LineInfo, %struct.CPVT_LineInfo* %3, i64 0, i32 6
  %19 = getelementptr inbounds %struct.CPVT_LineInfo, %struct.CPVT_LineInfo* %3, i64 0, i32 7
  store i32 0, i32* %14, align 4
  store i32 -1, i32* %15, align 4
  store i32 -1, i32* %16, align 4
  %20 = bitcast float* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 20, i1 false) #15
  %21 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %22 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %21, align 8
  %23 = icmp eq %"class.CPVT_VariableText::Provider"* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %7
  %25 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  %26 = load float, float* %25, align 4
  br label %37

27:                                               ; preds = %7
  %28 = bitcast %"class.CPVT_VariableText::Provider"* %22 to i32 (%"class.CPVT_VariableText::Provider"*)***
  %29 = load i32 (%"class.CPVT_VariableText::Provider"*)**, i32 (%"class.CPVT_VariableText::Provider"*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %29, i64 6
  %31 = load i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %30, align 8
  %32 = tail call i32 %31(%"class.CPVT_VariableText::Provider"* nonnull %22) #15
  %33 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %21, align 8
  %34 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  %35 = load float, float* %34, align 4
  %36 = icmp eq %"class.CPVT_VariableText::Provider"* %33, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %27, %24
  %38 = phi float [ %26, %24 ], [ %35, %27 ]
  %39 = fmul float %38, 0.000000e+00
  %40 = fmul float %39, 0x3F50624DE0000000
  store float %40, float* %18, align 4
  br label %70

41:                                               ; preds = %27
  %42 = bitcast %"class.CPVT_VariableText::Provider"* %33 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %43 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %43, i64 3
  %45 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %44, align 8
  %46 = tail call i32 %45(%"class.CPVT_VariableText::Provider"* nonnull %33, i32 %32) #15
  %47 = sitofp i32 %46 to float
  %48 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %21, align 8
  %49 = fmul float %35, %47
  %50 = fmul float %49, 0x3F50624DE0000000
  store float %50, float* %18, align 4
  %51 = icmp eq %"class.CPVT_VariableText::Provider"* %48, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = load float, float* %34, align 4
  br label %70

54:                                               ; preds = %41
  %55 = bitcast %"class.CPVT_VariableText::Provider"* %48 to i32 (%"class.CPVT_VariableText::Provider"*)***
  %56 = load i32 (%"class.CPVT_VariableText::Provider"*)**, i32 (%"class.CPVT_VariableText::Provider"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %56, i64 6
  %58 = load i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %57, align 8
  %59 = tail call i32 %58(%"class.CPVT_VariableText::Provider"* nonnull %48) #15
  %60 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %21, align 8
  %61 = load float, float* %34, align 4
  %62 = icmp eq %"class.CPVT_VariableText::Provider"* %60, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %54
  %64 = bitcast %"class.CPVT_VariableText::Provider"* %60 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %65 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %65, i64 4
  %67 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %66, align 8
  %68 = tail call i32 %67(%"class.CPVT_VariableText::Provider"* nonnull %60, i32 %59) #15
  %69 = sitofp i32 %68 to float
  br label %70

70:                                               ; preds = %37, %63, %54, %52
  %71 = phi float [ %61, %63 ], [ %61, %54 ], [ %53, %52 ], [ %38, %37 ]
  %72 = phi float [ %69, %63 ], [ 0.000000e+00, %54 ], [ 0.000000e+00, %52 ], [ 0.000000e+00, %37 ]
  %73 = fmul float %71, %72
  %74 = fmul float %73, 0x3F50624DE0000000
  store float %74, float* %19, align 4
  %75 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %76 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %77 = bitcast %"class.std::__1::unique_ptr.115"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::vector.113"* %75 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 3
  %83 = icmp ult i64 %82, 2147483648
  %84 = inttoptr i64 %80 to %"class.std::__1::unique_ptr.115"*
  br i1 %83, label %86, label %85, !prof !3

85:                                               ; preds = %70
  tail call void @llvm.trap() #15
  unreachable

86:                                               ; preds = %70
  %87 = inttoptr i64 %78 to %"class.std::__1::unique_ptr.115"*
  %88 = trunc i64 %82 to i32
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %97

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 0, i32 0, i32 0, i32 0
  %92 = load %class.CPVT_Section*, %class.CPVT_Section** %91, align 8
  %93 = call { i64, i32 } @_ZN12CPVT_Section7AddLineERK13CPVT_LineInfo(%class.CPVT_Section* %92, %struct.CPVT_LineInfo* nonnull dereferenceable(32) %3) #15
  %94 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %95 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %94, align 8
  %96 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %76, align 8
  br label %97

97:                                               ; preds = %86, %90
  %98 = phi %"class.std::__1::unique_ptr.115"* [ %87, %86 ], [ %96, %90 ]
  %99 = phi %"class.std::__1::unique_ptr.115"* [ %84, %86 ], [ %95, %90 ]
  %100 = icmp eq %"class.std::__1::unique_ptr.115"* %99, %98
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = load %class.CPVT_Section*, %class.CPVT_Section** %102, align 8
  call void @_ZN12CPVT_Section14ResetLinePlaceEv(%class.CPVT_Section* %103) #15
  br label %104

104:                                              ; preds = %101, %97
  store i8 1, i8* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #15
  br label %105

105:                                              ; preds = %1, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN17CPVT_VariableText10AddSectionERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.115", align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %7
  %12 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  br label %56

16:                                               ; preds = %2, %7
  %17 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %18 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %19 = bitcast %"class.std::__1::unique_ptr.115"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.113"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 3
  %25 = icmp ult i64 %24, 2147483648
  br i1 %25, label %27, label %26, !prof !3

26:                                               ; preds = %16
  tail call void @llvm.trap() #15
  unreachable

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %29 = trunc i64 %24 to i32
  %30 = load i32, i32* %28, align 4
  %31 = icmp sgt i32 %30, 0
  %32 = select i1 %31, i32 %30, i32 0
  %33 = icmp sgt i32 %32, %29
  %34 = select i1 %33, i32 %29, i32 %32
  %35 = bitcast %"class.std::__1::unique_ptr.115"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %3, i64 0, i32 0, i32 0, i32 0
  %37 = tail call i8* @_Znwm(i64 88) #14
  %38 = bitcast i8* %37 to %class.CPVT_Section*
  tail call void @_ZN12CPVT_SectionC1EP17CPVT_VariableText(%class.CPVT_Section* nonnull %38, %class.CPVT_VariableText* %0) #15
  %39 = bitcast %"class.std::__1::unique_ptr.115"* %3 to i8**
  store i8* %37, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %37, i64 12
  call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 16, i1 false)
  %41 = bitcast i8* %37 to i32*
  store i32 %34, i32* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %17, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %42, align 8
  %44 = sext i32 %34 to i64
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %43, i64 %44
  %46 = call %"class.std::__1::unique_ptr.115"* @_ZNSt3__16vectorINS_10unique_ptrI12CPVT_SectionNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_(%"class.std::__1::vector.113"* %17, %"class.std::__1::unique_ptr.115"* %45, %"class.std::__1::unique_ptr.115"* nonnull dereferenceable(8) %3)
  %47 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = load %class.CPVT_Section*, %class.CPVT_Section** %36, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %36, align 8
  %52 = icmp eq %class.CPVT_Section* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %27
  call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %51) #15
  %54 = bitcast %class.CPVT_Section* %51 to i8*
  call void @_ZdlPv(i8* %54) #14
  br label %55

55:                                               ; preds = %27, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  br label %56

56:                                               ; preds = %55, %11
  %57 = phi i64 [ %48, %55 ], [ %13, %11 ]
  %58 = phi i32 [ %50, %55 ], [ %15, %11 ]
  %59 = insertvalue { i64, i32 } undef, i64 %57, 0
  %60 = insertvalue { i64, i32 } %59, i32 %58, 1
  ret { i64, i32 } %60
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK17CPVT_VariableText13GetFontAscentEif(%class.CPVT_VariableText* nocapture readonly, i32, float) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %5 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %4, align 8
  %6 = icmp eq %"class.CPVT_VariableText::Provider"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.CPVT_VariableText::Provider"* %5 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %9 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %9, i64 3
  %11 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %10, align 8
  %12 = tail call i32 %11(%"class.CPVT_VariableText::Provider"* nonnull %5, i32 %1) #15
  %13 = sitofp i32 %12 to float
  br label %14

14:                                               ; preds = %3, %7
  %15 = phi float [ %13, %7 ], [ 0.000000e+00, %3 ]
  %16 = fmul float %15, %2
  %17 = fmul float %16, 0x3F50624DE0000000
  ret float %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN17CPVT_VariableText19GetDefaultFontIndexEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %3 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %2, align 8
  %4 = icmp eq %"class.CPVT_VariableText::Provider"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.CPVT_VariableText::Provider"* %3 to i32 (%"class.CPVT_VariableText::Provider"*)***
  %7 = load i32 (%"class.CPVT_VariableText::Provider"*)**, i32 (%"class.CPVT_VariableText::Provider"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %7, i64 6
  %9 = load i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %8, align 8
  %10 = tail call i32 %9(%"class.CPVT_VariableText::Provider"* nonnull %3) #15
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i32 [ %10, %5 ], [ -1, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK17CPVT_VariableText14GetFontDescentEif(%class.CPVT_VariableText* nocapture readonly, i32, float) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %5 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %4, align 8
  %6 = icmp eq %"class.CPVT_VariableText::Provider"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.CPVT_VariableText::Provider"* %5 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %9 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %9, i64 4
  %11 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %10, align 8
  %12 = tail call i32 %11(%"class.CPVT_VariableText::Provider"* nonnull %5, i32 %1) #15
  %13 = sitofp i32 %12 to float
  br label %14

14:                                               ; preds = %3, %7
  %15 = phi float [ %13, %7 ], [ 0.000000e+00, %3 ]
  %16 = fmul float %15, %2
  %17 = fmul float %16, 0x3F50624DE0000000
  ret float %17
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN17CPVT_VariableText7AddLineERK14CPVT_WordPlaceRK13CPVT_LineInfo(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %struct.CPVT_LineInfo* dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.115"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.113"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ult i64 %15, 2147483648
  %17 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.115"*
  br i1 %16, label %19, label %18, !prof !3

18:                                               ; preds = %7
  tail call void @llvm.trap() #15
  unreachable

19:                                               ; preds = %7
  %20 = trunc i64 %15 to i32
  %21 = icmp slt i32 %5, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %3, %19
  %23 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  br label %34

27:                                               ; preds = %19
  %28 = sext i32 %5 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %17, i64 %28, i32 0, i32 0, i32 0
  %30 = load %class.CPVT_Section*, %class.CPVT_Section** %29, align 8
  %31 = tail call { i64, i32 } @_ZN12CPVT_Section7AddLineERK13CPVT_LineInfo(%class.CPVT_Section* %30, %struct.CPVT_LineInfo* dereferenceable(32) %2) #15
  %32 = extractvalue { i64, i32 } %31, 0
  %33 = extractvalue { i64, i32 } %31, 1
  br label %34

34:                                               ; preds = %27, %22
  %35 = phi i64 [ %32, %27 ], [ %24, %22 ]
  %36 = phi i32 [ %33, %27 ], [ %26, %22 ]
  %37 = insertvalue { i64, i32 } undef, i64 %35, 0
  %38 = insertvalue { i64, i32 } %37, i32 %36, 1
  ret { i64, i32 } %38
}

declare void @_ZN12CPVT_Section14ResetLinePlaceEv(%class.CPVT_Section*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN17CPVT_VariableText10InsertWordERK14CPVT_WordPlaceti(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), i16 zeroext, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %struct.CPVT_WordPlace, align 8
  %6 = alloca %struct.CPVT_WordInfo, align 4
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %7, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.115"* %8, %10
  br i1 %11, label %22, label %12

12:                                               ; preds = %4, %12
  %13 = phi i32 [ %19, %12 ], [ 0, %4 ]
  %14 = phi %"class.std::__1::unique_ptr.115"* [ %20, %12 ], [ %8, %4 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %class.CPVT_Section*, %class.CPVT_Section** %15, align 8
  %17 = tail call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %16) #15
  %18 = add i32 %17, %13
  %19 = add i32 %18, 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %14, i64 1
  %21 = icmp eq %"class.std::__1::unique_ptr.115"* %20, %10
  br i1 %21, label %22, label %12

22:                                               ; preds = %12, %4
  %23 = phi i32 [ -1, %4 ], [ %18, %12 ]
  %24 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 1
  %27 = icmp slt i32 %23, %25
  %28 = or i1 %26, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %22
  %30 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  br label %103

34:                                               ; preds = %22
  %35 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 6
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 1
  %38 = icmp slt i32 %23, %36
  %39 = or i1 %37, %38
  %40 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  br i1 %39, label %44, label %103

44:                                               ; preds = %34
  %45 = add nsw i32 %43, 1
  %46 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 4
  %47 = load i16, i16* %46, align 4
  %48 = icmp eq i16 %47, 0
  %49 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %50 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %49, align 8
  %51 = icmp eq %"class.CPVT_VariableText::Provider"* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %44
  %53 = bitcast %"class.CPVT_VariableText::Provider"* %50 to i32 (%"class.CPVT_VariableText::Provider"*)***
  %54 = load i32 (%"class.CPVT_VariableText::Provider"*)**, i32 (%"class.CPVT_VariableText::Provider"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %54, i64 6
  %56 = load i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %55, align 8
  %57 = tail call i32 %56(%"class.CPVT_VariableText::Provider"* nonnull %50) #15
  br label %58

58:                                               ; preds = %44, %52
  %59 = phi i32 [ %57, %52 ], [ -1, %44 ]
  br i1 %48, label %60, label %69

60:                                               ; preds = %58
  %61 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %49, align 8
  %62 = icmp eq %"class.CPVT_VariableText::Provider"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.CPVT_VariableText::Provider"* %61 to i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)***
  %65 = load i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)** %65, i64 5
  %67 = load i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)** %66, align 8
  %68 = tail call i32 %67(%"class.CPVT_VariableText::Provider"* nonnull %61, i16 zeroext %2, i32 %3, i32 %59) #15
  br label %69

69:                                               ; preds = %63, %60, %58
  %70 = phi i32 [ %59, %58 ], [ %68, %63 ], [ -1, %60 ]
  %71 = bitcast %struct.CPVT_WordInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #15
  call void @_ZN13CPVT_WordInfoC1Etii(%struct.CPVT_WordInfo* nonnull %6, i16 zeroext %2, i32 %3, i32 %70) #15
  %72 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %7, align 8
  %73 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %9, align 8
  %74 = icmp eq %"class.std::__1::unique_ptr.115"* %72, %73
  br i1 %74, label %100, label %75

75:                                               ; preds = %69
  %76 = ptrtoint %"class.std::__1::unique_ptr.115"* %72 to i64
  %77 = ptrtoint %"class.std::__1::unique_ptr.115"* %73 to i64
  %78 = bitcast %struct.CPVT_WordPlace* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %78) #15
  %79 = bitcast %struct.CPVT_WordPlace* %5 to i64*
  store i64 %41, i64* %79, align 8
  %80 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %5, i64 0, i32 2
  store i32 %45, i32* %80, align 8
  %81 = sub i64 %77, %76
  %82 = ashr exact i64 %81, 3
  %83 = icmp ult i64 %82, 2147483648
  %84 = trunc i64 %41 to i32
  br i1 %83, label %86, label %85, !prof !3

85:                                               ; preds = %75
  call void @llvm.trap() #15
  unreachable

86:                                               ; preds = %75
  %87 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %5, i64 0, i32 0
  %88 = trunc i64 %82 to i32
  %89 = add nsw i32 %88, -1
  %90 = icmp sgt i32 %84, 0
  %91 = select i1 %90, i32 %84, i32 0
  %92 = icmp slt i32 %89, %91
  %93 = select i1 %92, i32 %89, i32 %91
  store i32 %93, i32* %87, align 8
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %72, i64 %94, i32 0, i32 0, i32 0
  %96 = load %class.CPVT_Section*, %class.CPVT_Section** %95, align 8
  %97 = call { i64, i32 } @_ZN12CPVT_Section7AddWordERK14CPVT_WordPlaceRK13CPVT_WordInfo(%class.CPVT_Section* %96, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %5, %struct.CPVT_WordInfo* nonnull dereferenceable(24) %6) #15
  %98 = extractvalue { i64, i32 } %97, 0
  %99 = extractvalue { i64, i32 } %97, 1
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %78) #15
  br label %100

100:                                              ; preds = %69, %86
  %101 = phi i64 [ %98, %86 ], [ %41, %69 ]
  %102 = phi i32 [ %99, %86 ], [ %45, %69 ]
  call void @_ZN13CPVT_WordInfoD1Ev(%struct.CPVT_WordInfo* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #15
  br label %103

103:                                              ; preds = %34, %100, %29
  %104 = phi i64 [ %31, %29 ], [ %101, %100 ], [ %41, %34 ]
  %105 = phi i32 [ %33, %29 ], [ %102, %100 ], [ %43, %34 ]
  %106 = insertvalue { i64, i32 } undef, i64 %104, 0
  %107 = insertvalue { i64, i32 } %106, i32 %105, 1
  ret { i64, i32 } %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK17CPVT_VariableText13GetTotalWordsEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %2, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.115"* %3, %5
  br i1 %6, label %9, label %11

7:                                                ; preds = %11
  %8 = add i32 %12, %16
  br label %9

9:                                                ; preds = %7, %1
  %10 = phi i32 [ -1, %1 ], [ %8, %7 ]
  ret i32 %10

11:                                               ; preds = %1, %11
  %12 = phi i32 [ %18, %11 ], [ 0, %1 ]
  %13 = phi %"class.std::__1::unique_ptr.115"* [ %19, %11 ], [ %3, %1 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CPVT_Section*, %class.CPVT_Section** %14, align 8
  %16 = tail call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %15) #15
  %17 = add i32 %12, 1
  %18 = add i32 %17, %16
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %13, i64 1
  %20 = icmp eq %"class.std::__1::unique_ptr.115"* %19, %5
  br i1 %20, label %7, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN17CPVT_VariableText16GetWordFontIndexEtii(%class.CPVT_VariableText* nocapture readonly, i16 zeroext, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %6 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %5, align 8
  %7 = icmp eq %"class.CPVT_VariableText::Provider"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.CPVT_VariableText::Provider"* %6 to i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)***
  %10 = load i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)** %10, i64 5
  %12 = load i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i16, i32, i32)** %11, align 8
  %13 = tail call i32 %12(%"class.CPVT_VariableText::Provider"* nonnull %6, i16 zeroext %1, i32 %2, i32 %3) #15
  br label %14

14:                                               ; preds = %4, %8
  %15 = phi i32 [ %13, %8 ], [ -1, %4 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN17CPVT_VariableText7AddWordERK14CPVT_WordPlaceRK13CPVT_WordInfo(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %struct.CPVT_WordInfo* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.CPVT_WordPlace, align 4
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %5, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.115"* %6, %8
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  br label %39

15:                                               ; preds = %3
  %16 = ptrtoint %"class.std::__1::unique_ptr.115"* %6 to i64
  %17 = ptrtoint %"class.std::__1::unique_ptr.115"* %8 to i64
  %18 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %18) #15
  %19 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 0
  %20 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %20, i64 12, i1 false)
  %21 = sub i64 %17, %16
  %22 = ashr exact i64 %21, 3
  %23 = icmp ult i64 %22, 2147483648
  br i1 %23, label %25, label %24, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #15
  unreachable

25:                                               ; preds = %15
  %26 = trunc i64 %22 to i32
  %27 = add nsw i32 %26, -1
  %28 = load i32, i32* %19, align 4
  %29 = icmp sgt i32 %28, 0
  %30 = select i1 %29, i32 %28, i32 0
  %31 = icmp slt i32 %27, %30
  %32 = select i1 %31, i32 %27, i32 %30
  store i32 %32, i32* %19, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %6, i64 %33, i32 0, i32 0, i32 0
  %35 = load %class.CPVT_Section*, %class.CPVT_Section** %34, align 8
  %36 = call { i64, i32 } @_ZN12CPVT_Section7AddWordERK14CPVT_WordPlaceRK13CPVT_WordInfo(%class.CPVT_Section* %35, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4, %struct.CPVT_WordInfo* dereferenceable(24) %2) #15
  %37 = extractvalue { i64, i32 } %36, 0
  %38 = extractvalue { i64, i32 } %36, 1
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #15
  br label %39

39:                                               ; preds = %25, %10
  %40 = phi i64 [ %12, %10 ], [ %37, %25 ]
  %41 = phi i32 [ %14, %10 ], [ %38, %25 ]
  %42 = insertvalue { i64, i32 } undef, i64 %40, 0
  %43 = insertvalue { i64, i32 } %42, i32 %41, 1
  ret { i64, i32 } %43
}

declare void @_ZN13CPVT_WordInfoC1Etii(%struct.CPVT_WordInfo*, i16 zeroext, i32, i32) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN13CPVT_WordInfoD1Ev(%struct.CPVT_WordInfo*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN17CPVT_VariableText13InsertSectionERK14CPVT_WordPlace(%class.CPVT_VariableText*, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 4
  %4 = alloca %struct.CPVT_WordPlace, align 4
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %5, align 8
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.115"* %6, %8
  br i1 %9, label %20, label %10

10:                                               ; preds = %2, %10
  %11 = phi i32 [ %17, %10 ], [ 0, %2 ]
  %12 = phi %"class.std::__1::unique_ptr.115"* [ %18, %10 ], [ %6, %2 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %class.CPVT_Section*, %class.CPVT_Section** %13, align 8
  %15 = tail call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %14) #15
  %16 = add i32 %15, %11
  %17 = add i32 %16, 1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %12, i64 1
  %19 = icmp eq %"class.std::__1::unique_ptr.115"* %18, %8
  br i1 %19, label %20, label %10

20:                                               ; preds = %10, %2
  %21 = phi i32 [ -1, %2 ], [ %16, %10 ]
  %22 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 1
  %25 = icmp slt i32 %21, %23
  %26 = or i1 %24, %25
  br i1 %26, label %34, label %27

27:                                               ; preds = %20
  %28 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = trunc i64 %29 to i32
  %31 = and i64 %29, -4294967296
  %32 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  br label %164

34:                                               ; preds = %20
  %35 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 6
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 1
  %38 = icmp slt i32 %21, %36
  %39 = or i1 %37, %38
  br i1 %39, label %47, label %40

40:                                               ; preds = %34
  %41 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %42 = load i64, i64* %41, align 4
  %43 = trunc i64 %42 to i32
  %44 = and i64 %42, -4294967296
  %45 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  br label %164

47:                                               ; preds = %34
  %48 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 1
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %58

51:                                               ; preds = %47
  %52 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %53 = load i64, i64* %52, align 4
  %54 = trunc i64 %53 to i32
  %55 = and i64 %53, -4294967296
  %56 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  br label %164

58:                                               ; preds = %47
  %59 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %59) #15
  %60 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 0
  %61 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 1
  %62 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  %63 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* align 4 %63, i64 12, i1 false)
  call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3)
  %64 = load i32, i32* %60, align 4
  %65 = icmp sgt i32 %64, -1
  br i1 %65, label %66, label %80

66:                                               ; preds = %58
  %67 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %68 = bitcast %"class.std::__1::unique_ptr.115"** %7 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::vector.113"* %67 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp ult i64 %73, 2147483648
  %75 = inttoptr i64 %71 to %"class.std::__1::unique_ptr.115"*
  br i1 %74, label %77, label %76, !prof !3

76:                                               ; preds = %66
  call void @llvm.trap() #15
  unreachable

77:                                               ; preds = %66
  %78 = trunc i64 %73 to i32
  %79 = icmp slt i32 %64, %78
  br i1 %79, label %87, label %80

80:                                               ; preds = %58, %77
  %81 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %82 = load i64, i64* %81, align 4
  %83 = trunc i64 %82 to i32
  %84 = and i64 %82, -4294967296
  %85 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  br label %160

87:                                               ; preds = %77
  %88 = sext i32 %64 to i64
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %75, i64 %88, i32 0, i32 0, i32 0
  %90 = load %class.CPVT_Section*, %class.CPVT_Section** %89, align 8
  %91 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %91) #15
  %92 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 0
  %93 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 1
  %94 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 2
  %95 = add nuw nsw i32 %64, 1
  store i32 %95, i32* %92, align 4
  store i32 0, i32* %93, align 4
  store i32 -1, i32* %94, align 4
  %96 = call { i64, i32 } @_ZN17CPVT_VariableText10AddSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4)
  %97 = load i64, i64* %68, align 8
  %98 = load i64, i64* %70, align 8
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 3
  %101 = icmp ult i64 %100, 2147483648
  %102 = inttoptr i64 %98 to %"class.std::__1::unique_ptr.115"*
  br i1 %101, label %104, label %103, !prof !3

103:                                              ; preds = %87
  call void @llvm.trap() #15
  unreachable

104:                                              ; preds = %87
  %105 = trunc i64 %100 to i32
  %106 = icmp slt i32 %95, %105
  br i1 %106, label %107, label %130

107:                                              ; preds = %104
  %108 = sext i32 %95 to i64
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %102, i64 %108, i32 0, i32 0, i32 0
  %110 = load %class.CPVT_Section*, %class.CPVT_Section** %109, align 8
  %111 = load i32, i32* %62, align 4
  %112 = add nsw i32 %111, 1
  %113 = call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %90) #15
  %114 = icmp slt i32 %112, %113
  br i1 %114, label %115, label %130

115:                                              ; preds = %107
  store i32 0, i32* %94, align 4
  %116 = call %struct.CPVT_WordInfo* @_ZNK12CPVT_Section16GetWordFromArrayEi(%class.CPVT_Section* %90, i32 %112) #15
  %117 = call { i64, i32 } @_ZN12CPVT_Section7AddWordERK14CPVT_WordPlaceRK13CPVT_WordInfo(%class.CPVT_Section* %110, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4, %struct.CPVT_WordInfo* dereferenceable(24) %116) #15
  %118 = add nsw i32 %111, 2
  %119 = call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %90) #15
  %120 = icmp slt i32 %118, %119
  br i1 %120, label %121, label %130

121:                                              ; preds = %115, %121
  %122 = phi i32 [ %127, %121 ], [ %118, %115 ]
  %123 = load i32, i32* %94, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %94, align 4
  %125 = call %struct.CPVT_WordInfo* @_ZNK12CPVT_Section16GetWordFromArrayEi(%class.CPVT_Section* %90, i32 %122) #15
  %126 = call { i64, i32 } @_ZN12CPVT_Section7AddWordERK14CPVT_WordPlaceRK13CPVT_WordInfo(%class.CPVT_Section* %110, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4, %struct.CPVT_WordInfo* dereferenceable(24) %125) #15
  %127 = add nsw i32 %122, 1
  %128 = call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %90) #15
  %129 = icmp slt i32 %127, %128
  br i1 %129, label %121, label %130

130:                                              ; preds = %121, %115, %107, %104
  %131 = load i32, i32* %62, align 4
  %132 = icmp slt i32 %131, 0
  %133 = load i32, i32* %61, align 4
  %134 = icmp sgt i32 %133, 0
  %135 = and i1 %132, %134
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3) #15
  %138 = extractvalue { i64, i32 } %137, 1
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = load i32, i32* %60, align 4
  %142 = icmp sgt i32 %141, -1
  br i1 %142, label %143, label %159

143:                                              ; preds = %139
  %144 = load i64, i64* %68, align 8
  %145 = load i64, i64* %70, align 8
  %146 = sub i64 %144, %145
  %147 = ashr exact i64 %146, 3
  %148 = icmp ult i64 %147, 2147483648
  %149 = inttoptr i64 %145 to %"class.std::__1::unique_ptr.115"*
  br i1 %148, label %151, label %150, !prof !3

150:                                              ; preds = %143
  call void @llvm.trap() #15
  unreachable

151:                                              ; preds = %143
  %152 = trunc i64 %147 to i32
  %153 = icmp slt i32 %141, %152
  br i1 %153, label %154, label %159

154:                                              ; preds = %151
  %155 = sext i32 %141 to i64
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %149, i64 %155, i32 0, i32 0, i32 0
  %157 = load %class.CPVT_Section*, %class.CPVT_Section** %156, align 8
  %158 = add nsw i32 %140, 1
  call void @_ZN12CPVT_Section14EraseWordsFromEi(%class.CPVT_Section* %157, i32 %158) #15
  br label %159

159:                                              ; preds = %139, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %91) #15
  br label %160

160:                                              ; preds = %159, %80
  %161 = phi i32 [ -1, %159 ], [ %86, %80 ]
  %162 = phi i32 [ %95, %159 ], [ %83, %80 ]
  %163 = phi i64 [ 0, %159 ], [ %84, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %59) #15
  br label %164

164:                                              ; preds = %160, %51, %40, %27
  %165 = phi i32 [ %33, %27 ], [ %46, %40 ], [ %161, %160 ], [ %57, %51 ]
  %166 = phi i32 [ %30, %27 ], [ %43, %40 ], [ %162, %160 ], [ %54, %51 ]
  %167 = phi i64 [ %31, %27 ], [ %44, %40 ], [ %163, %160 ], [ %55, %51 ]
  %168 = zext i32 %166 to i64
  %169 = or i64 %167, %168
  %170 = insertvalue { i64, i32 } undef, i64 %169, 0
  %171 = insertvalue { i64, i32 } %170, i32 %165, 1
  ret { i64, i32 } %171
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = add nsw i8 %8, -1
  %10 = sext i8 %9 to i64
  %11 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  store i64 %10, i64* %11, align 4
  %12 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  store i32 -1, i32* %12, align 4
  %13 = sext i8 %9 to i32
  br label %14

14:                                               ; preds = %6, %2
  %15 = phi i32 [ %13, %6 ], [ %4, %2 ]
  %16 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %17 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %18 = bitcast %"class.std::__1::unique_ptr.115"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.113"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp ult i64 %23, 2147483648
  %25 = inttoptr i64 %21 to %"class.std::__1::unique_ptr.115"*
  %26 = inttoptr i64 %19 to %"class.std::__1::unique_ptr.115"*
  br i1 %24, label %28, label %27, !prof !3

27:                                               ; preds = %14
  tail call void @llvm.trap() #15
  unreachable

28:                                               ; preds = %14
  %29 = trunc i64 %23 to i32
  %30 = icmp slt i32 %15, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  br label %51

34:                                               ; preds = %28
  %35 = icmp eq %"class.std::__1::unique_ptr.115"* %25, %26
  br i1 %35, label %44, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %26, i64 -1, i32 0, i32 0, i32 0
  %38 = load %class.CPVT_Section*, %class.CPVT_Section** %37, align 8
  %39 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %38) #15
  %40 = extractvalue { i64, i32 } %39, 0
  %41 = extractvalue { i64, i32 } %39, 1
  %42 = and i64 %40, -4294967296
  %43 = and i64 %40, 4294967295
  br label %44

44:                                               ; preds = %34, %36
  %45 = phi i64 [ %43, %36 ], [ 4294967295, %34 ]
  %46 = phi i64 [ %42, %36 ], [ -4294967296, %34 ]
  %47 = phi i32 [ %41, %36 ], [ -1, %34 ]
  %48 = or i64 %46, %45
  %49 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  store i64 %48, i64* %49, align 4
  %50 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  store i32 %47, i32* %50, align 4
  br label %51

51:                                               ; preds = %31, %44
  %52 = phi i32 [ %33, %31 ], [ %47, %44 ]
  %53 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %54 = icmp slt i32 %52, 0
  br i1 %54, label %55, label %64

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %55
  %60 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1) #15
  %61 = extractvalue { i64, i32 } %60, 0
  %62 = extractvalue { i64, i32 } %60, 1
  %63 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  br label %67

64:                                               ; preds = %55, %51
  %65 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %66 = load i64, i64* %65, align 4
  br label %67

67:                                               ; preds = %59, %64
  %68 = phi i64* [ %63, %59 ], [ %65, %64 ]
  %69 = phi i64 [ %61, %59 ], [ %66, %64 ]
  %70 = phi i32 [ %62, %59 ], [ %52, %64 ]
  store i64 %69, i64* %68, align 4
  store i32 %70, i32* %53, align 4
  %71 = trunc i64 %69 to i32
  %72 = icmp sgt i32 %71, -1
  br i1 %72, label %73, label %89

73:                                               ; preds = %67
  %74 = load i64, i64* %18, align 8
  %75 = load i64, i64* %20, align 8
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 3
  %78 = icmp ult i64 %77, 2147483648
  %79 = inttoptr i64 %75 to %"class.std::__1::unique_ptr.115"*
  br i1 %78, label %81, label %80, !prof !3

80:                                               ; preds = %73
  tail call void @llvm.trap() #15
  unreachable

81:                                               ; preds = %73
  %82 = trunc i64 %77 to i32
  %83 = icmp slt i32 %71, %82
  br i1 %83, label %84, label %89

84:                                               ; preds = %81
  %85 = shl i64 %69, 32
  %86 = ashr exact i64 %85, 32
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %79, i64 %86, i32 0, i32 0, i32 0
  %88 = load %class.CPVT_Section*, %class.CPVT_Section** %87, align 8
  tail call void @_ZNK12CPVT_Section15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_Section* %88, %struct.CPVT_WordPlace* dereferenceable(12) %1) #15
  br label %89

89:                                               ; preds = %67, %84, %81
  ret void
}

declare i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section*) local_unnamed_addr #5

declare { i64, i32 } @_ZN12CPVT_Section7AddWordERK14CPVT_WordPlaceRK13CPVT_WordInfo(%class.CPVT_Section*, %struct.CPVT_WordPlace* dereferenceable(12), %struct.CPVT_WordInfo* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText22ClearSectionRightWordsERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1) #15
  %12 = extractvalue { i64, i32 } %11, 1
  br label %13

13:                                               ; preds = %2, %6, %10
  %14 = phi i32 [ %12, %10 ], [ %4, %6 ], [ %4, %2 ]
  %15 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %18, label %38

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %20 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %21 = bitcast %"class.std::__1::unique_ptr.115"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.113"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 3
  %27 = icmp ult i64 %26, 2147483648
  %28 = inttoptr i64 %24 to %"class.std::__1::unique_ptr.115"*
  br i1 %27, label %30, label %29, !prof !3

29:                                               ; preds = %18
  tail call void @llvm.trap() #15
  unreachable

30:                                               ; preds = %18
  %31 = trunc i64 %26 to i32
  %32 = icmp slt i32 %16, %31
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = sext i32 %16 to i64
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %28, i64 %34, i32 0, i32 0, i32 0
  %36 = load %class.CPVT_Section*, %class.CPVT_Section** %35, align 8
  %37 = add nsw i32 %14, 1
  tail call void @_ZN12CPVT_Section14EraseWordsFromEi(%class.CPVT_Section* %36, i32 %37) #15
  br label %38

38:                                               ; preds = %13, %30, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN17CPVT_VariableText11DeleteWordsERK14CPVT_WordRange(%class.CPVT_VariableText* nocapture, %struct.CPVT_WordRange* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 4
  %4 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %42

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.115"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.113"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ult i64 %15, 2147483648
  %17 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.115"*
  br i1 %16, label %19, label %18, !prof !3

18:                                               ; preds = %7
  tail call void @llvm.trap() #15
  unreachable

19:                                               ; preds = %7
  %20 = trunc i64 %15 to i32
  %21 = icmp slt i32 %5, %20
  br i1 %21, label %22, label %42

22:                                               ; preds = %19
  %23 = sext i32 %5 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %17, i64 %23, i32 0, i32 0, i32 0
  %25 = load %class.CPVT_Section*, %class.CPVT_Section** %24, align 8
  %26 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %25) #15
  %27 = extractvalue { i64, i32 } %26, 0
  %28 = extractvalue { i64, i32 } %26, 1
  %29 = trunc i64 %27 to i32
  %30 = load i32, i32* %4, align 4
  %31 = icmp eq i32 %30, %29
  br i1 %31, label %32, label %42

32:                                               ; preds = %22
  %33 = lshr i64 %27, 32
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 1, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %34
  br i1 %37, label %38, label %42

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 1, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %28, %40
  br label %42

42:                                               ; preds = %2, %38, %32, %22, %19
  %43 = phi i1 [ false, %19 ], [ false, %32 ], [ false, %22 ], [ %41, %38 ], [ false, %2 ]
  tail call void @_ZN17CPVT_VariableText10ClearWordsERK14CPVT_WordRange(%class.CPVT_VariableText* %0, %struct.CPVT_WordRange* dereferenceable(24) %1)
  %44 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 0
  %45 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %4, align 4
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %63, label %49

49:                                               ; preds = %42
  %50 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %50) #15
  %51 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 0
  %52 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 1
  %53 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  store i32 -1, i32* %51, align 4
  store i32 -1, i32* %52, align 4
  store i32 -1, i32* %53, align 4
  %54 = icmp sgt i32 %47, %46
  br i1 %54, label %55, label %61

55:                                               ; preds = %49, %55
  %56 = phi i32 [ %58, %55 ], [ %47, %49 ]
  store i32 %56, i32* %51, align 4
  %57 = call zeroext i1 @_ZN17CPVT_VariableText17ClearEmptySectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3) #15
  %58 = add nsw i32 %56, -1
  %59 = load i32, i32* %45, align 4
  %60 = icmp sgt i32 %58, %59
  br i1 %60, label %55, label %61

61:                                               ; preds = %55, %49
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %50) #15
  br i1 %43, label %63, label %62

62:                                               ; preds = %61
  tail call void @_ZN17CPVT_VariableText17LinkLatterSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %44)
  br label %63

63:                                               ; preds = %42, %61, %62
  %64 = bitcast %struct.CPVT_WordRange* %1 to i64*
  %65 = load i64, i64* %64, align 4
  %66 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = insertvalue { i64, i32 } undef, i64 %65, 0
  %69 = insertvalue { i64, i32 } %68, i32 %67, 1
  ret { i64, i32 } %69
}

declare { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText10ClearWordsERK14CPVT_WordRange(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordRange* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordRange, align 8
  %4 = bitcast %struct.CPVT_WordRange* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -1, i64 24, i1 false) #15
  %8 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 0
  %9 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %8) #15
  %18 = extractvalue { i64, i32 } %17, 0
  %19 = extractvalue { i64, i32 } %17, 1
  br label %23

20:                                               ; preds = %12, %2
  %21 = bitcast %struct.CPVT_WordRange* %1 to i64*
  %22 = load i64, i64* %21, align 4
  br label %23

23:                                               ; preds = %16, %20
  %24 = phi i64 [ %18, %16 ], [ %22, %20 ]
  %25 = phi i32 [ %19, %16 ], [ %10, %20 ]
  %26 = bitcast %struct.CPVT_WordRange* %3 to i64*
  store i64 %24, i64* %26, align 8
  store i32 %25, i32* %6, align 8
  %27 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 1
  %28 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 1, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, 0
  %31 = trunc i64 %24 to i32
  br i1 %30, label %32, label %40

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %27) #15
  %38 = extractvalue { i64, i32 } %37, 0
  %39 = extractvalue { i64, i32 } %37, 1
  br label %43

40:                                               ; preds = %32, %23
  %41 = bitcast %struct.CPVT_WordPlace* %27 to i64*
  %42 = load i64, i64* %41, align 4
  br label %43

43:                                               ; preds = %36, %40
  %44 = phi i64 [ %38, %36 ], [ %42, %40 ]
  %45 = phi i32 [ %39, %36 ], [ %29, %40 ]
  %46 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1
  %47 = bitcast %struct.CPVT_WordPlace* %46 to i64*
  store i64 %44, i64* %47, align 4
  store i32 %45, i32* %7, align 4
  %48 = trunc i64 %44 to i32
  %49 = icmp slt i32 %48, %31
  br i1 %49, label %57, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %52 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %53 = bitcast %"class.std::__1::unique_ptr.115"** %52 to i64*
  %54 = bitcast %"class.std::__1::vector.113"* %51 to i64*
  %55 = shl i64 %44, 32
  %56 = ashr exact i64 %55, 32
  br label %58

57:                                               ; preds = %78, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret void

58:                                               ; preds = %78, %50
  %59 = phi i32 [ %79, %78 ], [ %31, %50 ]
  %60 = phi i64 [ %80, %78 ], [ %56, %50 ]
  %61 = icmp sgt i64 %60, -1
  br i1 %61, label %62, label %78

62:                                               ; preds = %58
  %63 = load i64, i64* %53, align 8
  %64 = load i64, i64* %54, align 8
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp ult i64 %66, 2147483648
  %68 = inttoptr i64 %64 to %"class.std::__1::unique_ptr.115"*
  br i1 %67, label %70, label %69, !prof !3

69:                                               ; preds = %62
  call void @llvm.trap() #15
  unreachable

70:                                               ; preds = %62
  %71 = shl i64 %65, 29
  %72 = ashr exact i64 %71, 32
  %73 = icmp slt i64 %60, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %68, i64 %60, i32 0, i32 0, i32 0
  %76 = load %class.CPVT_Section*, %class.CPVT_Section** %75, align 8
  call void @_ZN12CPVT_Section10ClearWordsERK14CPVT_WordRange(%class.CPVT_Section* %76, %struct.CPVT_WordRange* nonnull dereferenceable(24) %3) #15
  %77 = load i32, i32* %5, align 8
  br label %78

78:                                               ; preds = %58, %70, %74
  %79 = phi i32 [ %59, %58 ], [ %59, %70 ], [ %77, %74 ]
  %80 = add i64 %60, -1
  %81 = sext i32 %79 to i64
  %82 = icmp sgt i64 %60, %81
  br i1 %82, label %58, label %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText18ClearEmptySectionsERK14CPVT_WordRange(%class.CPVT_VariableText* nocapture, %struct.CPVT_WordRange* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 4
  %4 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #15
  %5 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 1
  %7 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  store i32 -1, i32* %5, align 4
  store i32 -1, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  %8 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %9, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %14, %2
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #15
  ret void

14:                                               ; preds = %2, %14
  %15 = phi i32 [ %17, %14 ], [ %9, %2 ]
  store i32 %15, i32* %5, align 4
  %16 = call zeroext i1 @_ZN17CPVT_VariableText17ClearEmptySectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3)
  %17 = add nsw i32 %15, -1
  %18 = load i32, i32* %10, align 4
  %19 = icmp sgt i32 %17, %18
  br i1 %19, label %14, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText17LinkLatterSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 8
  %4 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #15
  %5 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 0
  store i32 -1431655766, i32* %5, align 8
  %6 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 1
  store i32 -1431655766, i32* %6, align 4
  %7 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  store i32 -1431655766, i32* %7, align 8
  %8 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %11
  %16 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1) #15
  %17 = extractvalue { i64, i32 } %16, 0
  %18 = extractvalue { i64, i32 } %16, 1
  %19 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = trunc i64 %17 to i32
  br label %26

22:                                               ; preds = %11, %2
  %23 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = trunc i64 %24 to i32
  br label %26

26:                                               ; preds = %15, %22
  %27 = phi i32 [ %21, %15 ], [ %25, %22 ]
  %28 = phi i32 [ %20, %15 ], [ %25, %22 ]
  %29 = phi i64 [ %17, %15 ], [ %24, %22 ]
  %30 = phi i32 [ %18, %15 ], [ %9, %22 ]
  %31 = bitcast %struct.CPVT_WordPlace* %3 to i64*
  store i64 %29, i64* %31, align 8
  store i32 %30, i32* %7, align 8
  %32 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %33 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %34 = add nsw i32 %28, 1
  %35 = icmp sgt i32 %28, -2
  br i1 %35, label %36, label %122

36:                                               ; preds = %26
  %37 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %38 = bitcast %"class.std::__1::unique_ptr.115"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.113"* %32 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %43, 2147483648
  %45 = inttoptr i64 %41 to %"class.std::__1::unique_ptr.115"*
  br i1 %44, label %47, label %46, !prof !3

46:                                               ; preds = %36
  tail call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %36
  %48 = trunc i64 %43 to i32
  %49 = icmp slt i32 %34, %48
  br i1 %49, label %50, label %122

50:                                               ; preds = %47
  %51 = sext i32 %34 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %32, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %45, i64 %51, i32 0, i32 0, i32 0
  %54 = load %class.CPVT_Section*, %class.CPVT_Section** %53, align 8
  %55 = icmp sgt i32 %27, -1
  %56 = icmp slt i32 %27, %48
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %79

58:                                               ; preds = %50
  %59 = sext i32 %27 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %45, i64 %59, i32 0, i32 0, i32 0
  %61 = load %class.CPVT_Section*, %class.CPVT_Section** %60, align 8
  %62 = call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %54) #15
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %79

64:                                               ; preds = %58
  %65 = add nsw i32 %30, 1
  store i32 %65, i32* %7, align 8
  %66 = call %struct.CPVT_WordInfo* @_ZNK12CPVT_Section16GetWordFromArrayEi(%class.CPVT_Section* %54, i32 0) #15
  %67 = call { i64, i32 } @_ZN12CPVT_Section7AddWordERK14CPVT_WordPlaceRK13CPVT_WordInfo(%class.CPVT_Section* %61, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3, %struct.CPVT_WordInfo* dereferenceable(24) %66) #15
  %68 = call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %54) #15
  %69 = icmp sgt i32 %68, 1
  br i1 %69, label %70, label %79

70:                                               ; preds = %64, %70
  %71 = phi i32 [ %76, %70 ], [ 1, %64 ]
  %72 = load i32, i32* %7, align 8
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %7, align 8
  %74 = call %struct.CPVT_WordInfo* @_ZNK12CPVT_Section16GetWordFromArrayEi(%class.CPVT_Section* %54, i32 %71) #15
  %75 = call { i64, i32 } @_ZN12CPVT_Section7AddWordERK14CPVT_WordPlaceRK13CPVT_WordInfo(%class.CPVT_Section* %61, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3, %struct.CPVT_WordInfo* dereferenceable(24) %74) #15
  %76 = add nuw nsw i32 %71, 1
  %77 = call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %54) #15
  %78 = icmp slt i32 %76, %77
  br i1 %78, label %70, label %79

79:                                               ; preds = %70, %64, %58, %50
  %80 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %52, align 8
  %81 = load i32, i32* %33, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %80, i64 %82
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %83, i64 1
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 1
  %86 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %37, align 8
  %87 = icmp eq %"class.std::__1::unique_ptr.115"* %85, %86
  br i1 %87, label %107, label %88

88:                                               ; preds = %79, %100
  %89 = phi %"class.std::__1::unique_ptr.115"* [ %102, %100 ], [ %84, %79 ]
  %90 = phi %"class.std::__1::unique_ptr.115"* [ %101, %100 ], [ %85, %79 ]
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.115"* %90 to i64*
  %93 = load i64, i64* %92, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %91, align 8
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %89, i64 0, i32 0, i32 0, i32 0
  %95 = load %class.CPVT_Section*, %class.CPVT_Section** %94, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.115"* %89 to i64*
  store i64 %93, i64* %96, align 8
  %97 = icmp eq %class.CPVT_Section* %95, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %88
  call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %95) #15
  %99 = bitcast %class.CPVT_Section* %95 to i8*
  call void @_ZdlPv(i8* %99) #14
  br label %100

100:                                              ; preds = %98, %88
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %90, i64 1
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %89, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.115"* %101, %86
  br i1 %103, label %104, label %88

104:                                              ; preds = %100
  %105 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %37, align 8
  %106 = icmp eq %"class.std::__1::unique_ptr.115"* %105, %102
  br i1 %106, label %120, label %107

107:                                              ; preds = %104, %79
  %108 = phi %"class.std::__1::unique_ptr.115"* [ %102, %104 ], [ %84, %79 ]
  %109 = phi %"class.std::__1::unique_ptr.115"* [ %105, %104 ], [ %85, %79 ]
  br label %110

110:                                              ; preds = %118, %107
  %111 = phi %"class.std::__1::unique_ptr.115"* [ %112, %118 ], [ %109, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %111, i64 -1
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %class.CPVT_Section*, %class.CPVT_Section** %113, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %113, align 8
  %115 = icmp eq %class.CPVT_Section* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %110
  call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %114) #15
  %117 = bitcast %class.CPVT_Section* %114 to i8*
  call void @_ZdlPv(i8* %117) #14
  br label %118

118:                                              ; preds = %116, %110
  %119 = icmp eq %"class.std::__1::unique_ptr.115"* %112, %108
  br i1 %119, label %120, label %110

120:                                              ; preds = %118, %104
  %121 = phi %"class.std::__1::unique_ptr.115"* [ %102, %104 ], [ %108, %118 ]
  store %"class.std::__1::unique_ptr.115"* %121, %"class.std::__1::unique_ptr.115"** %37, align 8
  br label %122

122:                                              ; preds = %26, %47, %120
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN17CPVT_VariableText10DeleteWordERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 8
  %4 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #15
  %5 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1) #15
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  br label %19

16:                                               ; preds = %8, %2
  %17 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %18 = load i64, i64* %17, align 4
  br label %19

19:                                               ; preds = %12, %16
  %20 = phi i64 [ %14, %12 ], [ %18, %16 ]
  %21 = phi i32 [ %15, %12 ], [ %6, %16 ]
  %22 = bitcast %struct.CPVT_WordPlace* %3 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  store i32 %21, i32* %23, align 8
  %24 = call { i64, i32 } @_ZN17CPVT_VariableText14ClearRightWordERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #15
  ret { i64, i32 } %24
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN17CPVT_VariableText14ClearRightWordERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 8
  %4 = alloca %struct.CPVT_WordPlace, align 8
  %5 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %8, label %23

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %10 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.115"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.113"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ult i64 %16, 2147483648
  %18 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.115"*
  br i1 %17, label %20, label %19, !prof !3

19:                                               ; preds = %8
  tail call void @llvm.trap() #15
  unreachable

20:                                               ; preds = %8
  %21 = trunc i64 %16 to i32
  %22 = icmp slt i32 %6, %21
  br i1 %22, label %28, label %23

23:                                               ; preds = %2, %20
  %24 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  br label %76

28:                                               ; preds = %20
  %29 = sext i32 %6 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %18, i64 %29, i32 0, i32 0, i32 0
  %31 = load %class.CPVT_Section*, %class.CPVT_Section** %30, align 8
  %32 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %32) #15
  %33 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 0
  store i32 -1431655766, i32* %33, align 8
  %34 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 1
  store i32 -1431655766, i32* %34, align 4
  %35 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  store i32 -1431655766, i32* %35, align 8
  %36 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %36) #15
  %37 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1)
  %38 = extractvalue { i64, i32 } %37, 0
  %39 = extractvalue { i64, i32 } %37, 1
  %40 = bitcast %struct.CPVT_WordPlace* %4 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 2
  store i32 %39, i32* %41, align 8
  %42 = icmp slt i32 %39, 0
  %43 = lshr i64 %38, 32
  %44 = trunc i64 %43 to i32
  %45 = icmp sgt i32 %44, 0
  %46 = and i1 %42, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %28
  %48 = call { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4) #15
  %49 = extractvalue { i64, i32 } %48, 0
  %50 = extractvalue { i64, i32 } %48, 1
  %51 = lshr i64 %49, 32
  %52 = trunc i64 %51 to i32
  br label %53

53:                                               ; preds = %28, %47
  %54 = phi i32 [ %44, %28 ], [ %52, %47 ]
  %55 = phi i64 [ %38, %28 ], [ %49, %47 ]
  %56 = phi i32 [ %39, %28 ], [ %50, %47 ]
  %57 = bitcast %struct.CPVT_WordPlace* %3 to i64*
  store i64 %55, i64* %57, align 8
  store i32 %56, i32* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %36) #15
  %58 = load i32, i32* %5, align 4
  %59 = trunc i64 %55 to i32
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %61, label %69

61:                                               ; preds = %53
  %62 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %54
  br i1 %64, label %65, label %70

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %56
  br i1 %68, label %71, label %70

69:                                               ; preds = %53
  call void @_ZN17CPVT_VariableText17LinkLatterSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1)
  br label %71

70:                                               ; preds = %65, %61
  call void @_ZN12CPVT_Section9ClearWordERK14CPVT_WordPlace(%class.CPVT_Section* %31, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3) #15
  br label %71

71:                                               ; preds = %69, %70, %65
  %72 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %73 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %74 = load i32, i32* %72, align 4
  %75 = load i64, i64* %73, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %32) #15
  br label %76

76:                                               ; preds = %71, %23
  %77 = phi i64 [ %75, %71 ], [ %25, %23 ]
  %78 = phi i32 [ %74, %71 ], [ %27, %23 ]
  %79 = insertvalue { i64, i32 } undef, i64 %77, 0
  %80 = insertvalue { i64, i32 } %79, i32 %78, 1
  ret { i64, i32 } %80
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText19PrevLineHeaderPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1)
  %12 = extractvalue { i64, i32 } %11, 0
  %13 = extractvalue { i64, i32 } %11, 1
  br label %17

14:                                               ; preds = %6, %2
  %15 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %16 = load i64, i64* %15, align 4
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %14 ]
  %19 = phi i32 [ %13, %10 ], [ %4, %14 ]
  %20 = insertvalue { i64, i32 } undef, i64 %18, 0
  %21 = insertvalue { i64, i32 } %20, i32 %19, 1
  ret { i64, i32 } %21
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN17CPVT_VariableText13BackSpaceWordERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 8
  %4 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #15
  %5 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1) #15
  %14 = extractvalue { i64, i32 } %13, 0
  %15 = extractvalue { i64, i32 } %13, 1
  br label %19

16:                                               ; preds = %8, %2
  %17 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %18 = load i64, i64* %17, align 4
  br label %19

19:                                               ; preds = %12, %16
  %20 = phi i64 [ %14, %12 ], [ %18, %16 ]
  %21 = phi i32 [ %15, %12 ], [ %6, %16 ]
  %22 = bitcast %struct.CPVT_WordPlace* %3 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  store i32 %21, i32* %23, align 8
  %24 = call { i64, i32 } @_ZN17CPVT_VariableText13ClearLeftWordERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #15
  ret { i64, i32 } %24
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN17CPVT_VariableText13ClearLeftWordERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 8
  %4 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %22

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.115"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.113"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ult i64 %15, 2147483648
  %17 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.115"*
  br i1 %16, label %19, label %18, !prof !3

18:                                               ; preds = %7
  tail call void @llvm.trap() #15
  unreachable

19:                                               ; preds = %7
  %20 = trunc i64 %15 to i32
  %21 = icmp slt i32 %5, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %2, %19
  %23 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  br label %64

27:                                               ; preds = %19
  %28 = sext i32 %5 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %17, i64 %28, i32 0, i32 0, i32 0
  %30 = load %class.CPVT_Section*, %class.CPVT_Section** %29, align 8
  %31 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %31) #15
  %32 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  %33 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1)
  %34 = extractvalue { i64, i32 } %33, 0
  %35 = extractvalue { i64, i32 } %33, 1
  %36 = bitcast %struct.CPVT_WordPlace* %3 to i64*
  store i64 %34, i64* %36, align 8
  store i32 %35, i32* %32, align 8
  %37 = load i32, i32* %4, align 4
  %38 = trunc i64 %34 to i32
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %40, label %52

40:                                               ; preds = %27
  %41 = lshr i64 %34, 32
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %42
  br i1 %45, label %46, label %59

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %35
  br i1 %49, label %50, label %59

50:                                               ; preds = %46
  %51 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  br label %60

52:                                               ; preds = %27
  %53 = tail call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %30) #15
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = tail call zeroext i1 @_ZN17CPVT_VariableText17ClearEmptySectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1)
  br label %60

57:                                               ; preds = %52
  call void @_ZN17CPVT_VariableText17LinkLatterSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3)
  %58 = load i32, i32* %32, align 8
  br label %60

59:                                               ; preds = %46, %40
  tail call void @_ZN12CPVT_Section9ClearWordERK14CPVT_WordPlace(%class.CPVT_Section* %30, %struct.CPVT_WordPlace* dereferenceable(12) %1) #15
  br label %60

60:                                               ; preds = %59, %57, %55, %50
  %61 = phi i64* [ %51, %50 ], [ %36, %55 ], [ %36, %57 ], [ %36, %59 ]
  %62 = phi i32 [ %35, %50 ], [ %35, %55 ], [ %58, %57 ], [ %35, %59 ]
  %63 = load i64, i64* %61, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %31) #15
  br label %64

64:                                               ; preds = %60, %22
  %65 = phi i64 [ %63, %60 ], [ %24, %22 ]
  %66 = phi i32 [ %62, %60 ], [ %26, %22 ]
  %67 = insertvalue { i64, i32 } undef, i64 %65, 0
  %68 = insertvalue { i64, i32 } %67, i32 %66, 1
  ret { i64, i32 } %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText7SetTextERKN5fxcrt10WideStringE(%class.CPVT_VariableText*, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordRange, align 8
  %4 = alloca %struct.CPVT_WordPlace, align 8
  %5 = bitcast %struct.CPVT_WordRange* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = add nsw i8 %7, -1
  %9 = sext i8 %8 to i64
  %10 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %10, align 8
  %12 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.115"* %11, %13
  br i1 %14, label %23, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %13, i64 -1, i32 0, i32 0, i32 0
  %17 = load %class.CPVT_Section*, %class.CPVT_Section** %16, align 8
  %18 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %17) #15
  %19 = extractvalue { i64, i32 } %18, 0
  %20 = extractvalue { i64, i32 } %18, 1
  %21 = and i64 %19, -4294967296
  %22 = and i64 %19, 4294967295
  br label %23

23:                                               ; preds = %2, %15
  %24 = phi i64 [ %22, %15 ], [ 4294967295, %2 ]
  %25 = phi i64 [ %21, %15 ], [ -4294967296, %2 ]
  %26 = phi i32 [ %20, %15 ], [ -1, %2 ]
  %27 = or i64 %25, %24
  %28 = bitcast %struct.CPVT_WordRange* %3 to i64*
  store i64 %9, i64* %28, align 8
  %29 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 2
  store i32 -1, i32* %29, align 8
  %30 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1
  %31 = bitcast %struct.CPVT_WordPlace* %30 to i8*
  %32 = bitcast %struct.CPVT_WordPlace* %30 to i64*
  store i64 %27, i64* %32, align 4
  %33 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  store i32 %26, i32* %33, align 4
  %34 = sext i8 %8 to i32
  %35 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %30, i64 0, i32 0
  %36 = trunc i64 %24 to i32
  %37 = icmp eq i32 %34, %36
  %38 = lshr i64 %9, 32
  %39 = trunc i64 %38 to i32
  %40 = lshr exact i64 %25, 32
  %41 = trunc i64 %40 to i32
  br i1 %37, label %44, label %42

42:                                               ; preds = %23
  %43 = icmp sgt i32 %34, %36
  br i1 %43, label %50, label %52

44:                                               ; preds = %23
  %45 = icmp eq i32 %39, %41
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = icmp sgt i32 %39, %41
  br i1 %47, label %50, label %52

48:                                               ; preds = %44
  %49 = icmp slt i32 %26, -1
  br i1 %49, label %50, label %52

50:                                               ; preds = %42, %48, %46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %31, i64 12, i1 false) #15
  store i32 %34, i32* %35, align 4
  %51 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 1
  store i32 %39, i32* %51, align 4
  store i32 -1, i32* %33, align 4
  br label %52

52:                                               ; preds = %42, %46, %48, %50
  %53 = call { i64, i32 } @_ZN17CPVT_VariableText11DeleteWordsERK14CPVT_WordRange(%class.CPVT_VariableText* %0, %struct.CPVT_WordRange* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  %54 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %54) #15
  %55 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 0
  %56 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 1
  %57 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 2
  store i32 0, i32* %55, align 8
  store i32 0, i32* %56, align 4
  store i32 -1, i32* %57, align 8
  %58 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %10, align 8
  %59 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %12, align 8
  %60 = icmp eq %"class.std::__1::unique_ptr.115"* %58, %59
  br i1 %60, label %66, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %58, i64 0, i32 0, i32 0, i32 0
  %63 = load %class.CPVT_Section*, %class.CPVT_Section** %62, align 8
  %64 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %63, i64 0, i32 1
  %65 = bitcast %class.CPVT_FloatRect* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 16, i1 false)
  br label %66

66:                                               ; preds = %61, %52
  %67 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.fxcrt::StringDataTemplate.154"*, %"class.fxcrt::StringDataTemplate.154"** %67, align 8
  %69 = icmp eq %"class.fxcrt::StringDataTemplate.154"* %68, null
  br i1 %69, label %159, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.154", %"class.fxcrt::StringDataTemplate.154"* %68, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %159

75:                                               ; preds = %70
  %76 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 5
  %77 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 6
  %78 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 1
  %79 = bitcast %struct.CPVT_WordPlace* %4 to i64*
  br label %80

80:                                               ; preds = %75, %152
  %81 = phi i32 [ 0, %75 ], [ %153, %152 ]
  %82 = phi i32 [ 0, %75 ], [ %154, %152 ]
  %83 = phi i32 [ 0, %75 ], [ %156, %152 ]
  %84 = phi i32 [ 0, %75 ], [ %157, %152 ]
  %85 = load i32, i32* %76, align 8
  %86 = icmp slt i32 %85, 1
  %87 = icmp slt i32 %83, %85
  %88 = or i1 %86, %87
  br i1 %88, label %89, label %159

89:                                               ; preds = %80
  %90 = load i32, i32* %77, align 4
  %91 = icmp slt i32 %90, 1
  %92 = icmp slt i32 %83, %90
  %93 = or i1 %91, %92
  br i1 %93, label %94, label %159

94:                                               ; preds = %89
  %95 = sext i32 %84 to i64
  %96 = load %"class.fxcrt::StringDataTemplate.154"*, %"class.fxcrt::StringDataTemplate.154"** %67, align 8
  %97 = icmp eq %"class.fxcrt::StringDataTemplate.154"* %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.154", %"class.fxcrt::StringDataTemplate.154"* %96, i64 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = icmp ugt i64 %100, %95
  br i1 %101, label %103, label %102, !prof !3

102:                                              ; preds = %98, %94
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !26
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !27
  unreachable

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.154", %"class.fxcrt::StringDataTemplate.154"* %96, i64 0, i32 3, i64 %95
  %105 = load i32, i32* %104, align 4
  %106 = trunc i32 %105 to i16
  switch i16 %106, label %146 [
    i16 13, label %107
    i16 10, label %126
    i16 9, label %145
  ]

107:                                              ; preds = %103
  %108 = load i8, i8* %78, align 1, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %152, label %110

110:                                              ; preds = %107
  %111 = add nsw i32 %84, 1
  %112 = icmp slt i32 %111, %73
  br i1 %112, label %113, label %122

113:                                              ; preds = %110
  %114 = sext i32 %111 to i64
  %115 = icmp ugt i64 %100, %114
  br i1 %115, label %117, label %116, !prof !3

116:                                              ; preds = %113
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !26
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !27
  unreachable

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.154", %"class.fxcrt::StringDataTemplate.154"* %96, i64 0, i32 3, i64 %114
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 10
  %121 = select i1 %120, i32 %111, i32 %84
  br label %122

122:                                              ; preds = %117, %110
  %123 = phi i32 [ %84, %110 ], [ %121, %117 ]
  %124 = add nsw i32 %81, 1
  store i32 %124, i32* %55, align 8
  store i32 0, i32* %56, align 4
  store i32 -1, i32* %57, align 8
  %125 = call { i64, i32 } @_ZN17CPVT_VariableText10AddSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4)
  br label %152

126:                                              ; preds = %103
  %127 = load i8, i8* %78, align 1, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %152, label %129

129:                                              ; preds = %126
  %130 = add nsw i32 %84, 1
  %131 = icmp slt i32 %130, %73
  br i1 %131, label %132, label %141

132:                                              ; preds = %129
  %133 = sext i32 %130 to i64
  %134 = icmp ugt i64 %100, %133
  br i1 %134, label %136, label %135, !prof !3

135:                                              ; preds = %132
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !26
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #15, !srcloc !27
  unreachable

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.154", %"class.fxcrt::StringDataTemplate.154"* %96, i64 0, i32 3, i64 %133
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 13
  %140 = select i1 %139, i32 %130, i32 %84
  br label %141

141:                                              ; preds = %136, %129
  %142 = phi i32 [ %84, %129 ], [ %140, %136 ]
  %143 = add nsw i32 %82, 1
  store i32 %143, i32* %55, align 8
  store i32 0, i32* %56, align 4
  store i32 -1, i32* %57, align 8
  %144 = call { i64, i32 } @_ZN17CPVT_VariableText10AddSectionERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4)
  br label %152

145:                                              ; preds = %103
  br label %146

146:                                              ; preds = %103, %145
  %147 = phi i16 [ %106, %103 ], [ 32, %145 ]
  %148 = call { i64, i32 } @_ZN17CPVT_VariableText10InsertWordERK14CPVT_WordPlaceti(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4, i16 zeroext %147, i32 1)
  %149 = extractvalue { i64, i32 } %148, 0
  %150 = extractvalue { i64, i32 } %148, 1
  store i64 %149, i64* %79, align 8
  store i32 %150, i32* %57, align 8
  %151 = trunc i64 %149 to i32
  br label %152

152:                                              ; preds = %107, %126, %141, %122, %146
  %153 = phi i32 [ %151, %146 ], [ %143, %141 ], [ %81, %126 ], [ %124, %122 ], [ %81, %107 ]
  %154 = phi i32 [ %151, %146 ], [ %143, %141 ], [ %82, %126 ], [ %124, %122 ], [ %82, %107 ]
  %155 = phi i32 [ %84, %146 ], [ %142, %141 ], [ %84, %126 ], [ %123, %122 ], [ %84, %107 ]
  %156 = add nuw nsw i32 %83, 1
  %157 = add nsw i32 %155, 1
  %158 = icmp slt i32 %157, %73
  br i1 %158, label %80, label %159

159:                                              ; preds = %152, %80, %89, %66, %70
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %54) #15
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText17GetBeginWordPlaceEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = add nsw i8 %3, -1
  %5 = sext i8 %4 to i64
  %6 = insertvalue { i64, i32 } undef, i64 %5, 0
  %7 = insertvalue { i64, i32 } %6, i32 -1, 1
  ret { i64, i32 } %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK12CPVT_Section15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_Section*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK17CPVT_VariableText20WordPlaceToWordIndexERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordPlace, align 4
  %4 = bitcast %struct.CPVT_WordPlace* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #15
  %5 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %3, i64 0, i32 2
  %7 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %7, i64 12, i1 false)
  call void @_ZNK17CPVT_VariableText15UpdateWordPlaceER14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %3)
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.115"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.113"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ult i64 %15, 2147483648
  %17 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.115"*
  br i1 %16, label %19, label %18, !prof !3

18:                                               ; preds = %2
  call void @llvm.trap() #15
  unreachable

19:                                               ; preds = %2
  %20 = trunc i64 %15 to i32
  %21 = icmp sgt i32 %20, 0
  %22 = load i32, i32* %5, align 4
  %23 = icmp sgt i32 %22, 0
  %24 = and i1 %21, %23
  br i1 %24, label %25, label %69

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %8, i64 0, i32 0, i32 0
  %27 = add nuw nsw i64 %15, 4294967295
  %28 = and i64 %27, 4294967295
  %29 = shl i64 %14, 29
  %30 = ashr exact i64 %29, 32
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %17, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.CPVT_Section*, %class.CPVT_Section** %31, align 8
  %33 = call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %32) #15
  %34 = icmp ne i64 %28, 0
  %35 = zext i1 %34 to i32
  %36 = add i32 %33, %35
  %37 = icmp sgt i64 %29, 4294967296
  %38 = load i32, i32* %5, align 4
  %39 = icmp sgt i32 %38, 1
  %40 = and i1 %37, %39
  br i1 %40, label %41, label %60

41:                                               ; preds = %25, %41
  %42 = phi i64 [ %52, %41 ], [ 1, %25 ]
  %43 = phi i32 [ %51, %41 ], [ %36, %25 ]
  %44 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %26, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %44, i64 %42, i32 0, i32 0, i32 0
  %46 = load %class.CPVT_Section*, %class.CPVT_Section** %45, align 8
  %47 = call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %46) #15
  %48 = icmp ne i64 %42, %28
  %49 = zext i1 %48 to i32
  %50 = add i32 %43, %49
  %51 = add i32 %50, %47
  %52 = add nuw nsw i64 %42, 1
  %53 = icmp slt i64 %52, %30
  %54 = load i32, i32* %5, align 4
  %55 = sext i32 %54 to i64
  %56 = icmp slt i64 %52, %55
  %57 = and i1 %53, %56
  br i1 %57, label %41, label %58

58:                                               ; preds = %41
  %59 = trunc i64 %52 to i32
  br label %60

60:                                               ; preds = %58, %25
  %61 = phi i32 [ %51, %58 ], [ %36, %25 ]
  %62 = phi i32 [ %59, %58 ], [ 1, %25 ]
  %63 = load i64, i64* %10, align 8
  %64 = load i64, i64* %12, align 8
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp ult i64 %66, 2147483648
  br i1 %67, label %69, label %68, !prof !3

68:                                               ; preds = %60
  call void @llvm.trap() #15
  unreachable

69:                                               ; preds = %19, %60
  %70 = phi i32 [ %61, %60 ], [ 0, %19 ]
  %71 = phi i32 [ %62, %60 ], [ 0, %19 ]
  %72 = phi i64 [ %66, %60 ], [ %15, %19 ]
  %73 = trunc i64 %72 to i32
  %74 = icmp slt i32 %71, %73
  br i1 %74, label %75, label %79

75:                                               ; preds = %69
  %76 = load i32, i32* %6, align 4
  %77 = add i32 %70, 1
  %78 = add i32 %77, %76
  br label %79

79:                                               ; preds = %75, %69
  %80 = phi i32 [ %78, %75 ], [ %70, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #15
  ret i32 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = add nsw i8 %8, -1
  %10 = sext i8 %9 to i64
  br label %96

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %13 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.115"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.113"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 2147483648
  %21 = inttoptr i64 %17 to %"class.std::__1::unique_ptr.115"*
  %22 = inttoptr i64 %15 to %"class.std::__1::unique_ptr.115"*
  br i1 %20, label %24, label %23, !prof !3

23:                                               ; preds = %11
  tail call void @llvm.trap() #15
  unreachable

24:                                               ; preds = %11
  %25 = trunc i64 %19 to i32
  %26 = icmp slt i32 %4, %25
  br i1 %26, label %42, label %27

27:                                               ; preds = %24
  %28 = icmp eq %"class.std::__1::unique_ptr.115"* %21, %22
  br i1 %28, label %37, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %22, i64 -1, i32 0, i32 0, i32 0
  %31 = load %class.CPVT_Section*, %class.CPVT_Section** %30, align 8
  %32 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %31) #15
  %33 = extractvalue { i64, i32 } %32, 0
  %34 = extractvalue { i64, i32 } %32, 1
  %35 = and i64 %33, -4294967296
  %36 = and i64 %33, 4294967295
  br label %37

37:                                               ; preds = %27, %29
  %38 = phi i64 [ %36, %29 ], [ 4294967295, %27 ]
  %39 = phi i64 [ %35, %29 ], [ -4294967296, %27 ]
  %40 = phi i32 [ %34, %29 ], [ -1, %27 ]
  %41 = or i64 %39, %38
  br label %96

42:                                               ; preds = %24
  %43 = sext i32 %4 to i64
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %21, i64 %43, i32 0, i32 0, i32 0
  %45 = load %class.CPVT_Section*, %class.CPVT_Section** %44, align 8
  %46 = tail call { i64, i32 } @_ZNK12CPVT_Section17GetBeginWordPlaceEv(%class.CPVT_Section* %45) #15
  %47 = extractvalue { i64, i32 } %46, 0
  %48 = extractvalue { i64, i32 } %46, 1
  %49 = trunc i64 %47 to i32
  %50 = lshr i64 %47, 32
  %51 = trunc i64 %50 to i32
  %52 = load i32, i32* %3, align 4
  %53 = icmp eq i32 %52, %49
  br i1 %53, label %56, label %54

54:                                               ; preds = %42
  %55 = icmp sgt i32 %52, %49
  br i1 %55, label %66, label %70

56:                                               ; preds = %42
  %57 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %51
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = icmp sgt i32 %58, %51
  br i1 %61, label %66, label %70

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, %48
  br i1 %65, label %66, label %70

66:                                               ; preds = %60, %54, %62
  %67 = tail call { i64, i32 } @_ZNK12CPVT_Section16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_Section* %45, %struct.CPVT_WordPlace* dereferenceable(12) %1) #15
  %68 = extractvalue { i64, i32 } %67, 0
  %69 = extractvalue { i64, i32 } %67, 1
  br label %96

70:                                               ; preds = %60, %54, %62
  %71 = add nsw i32 %52, -1
  %72 = icmp sgt i32 %52, 0
  br i1 %72, label %73, label %84

73:                                               ; preds = %70
  %74 = load i64, i64* %14, align 8
  %75 = load i64, i64* %16, align 8
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 3
  %78 = icmp ult i64 %77, 2147483648
  %79 = inttoptr i64 %75 to %"class.std::__1::unique_ptr.115"*
  br i1 %78, label %81, label %80, !prof !3

80:                                               ; preds = %73
  tail call void @llvm.trap() #15
  unreachable

81:                                               ; preds = %73
  %82 = trunc i64 %77 to i32
  %83 = icmp sgt i32 %52, %82
  br i1 %83, label %84, label %89

84:                                               ; preds = %81, %70
  %85 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = add nsw i8 %86, -1
  %88 = sext i8 %87 to i64
  br label %96

89:                                               ; preds = %81
  %90 = sext i32 %71 to i64
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %79, i64 %90, i32 0, i32 0, i32 0
  %92 = load %class.CPVT_Section*, %class.CPVT_Section** %91, align 8
  %93 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %92) #15
  %94 = extractvalue { i64, i32 } %93, 0
  %95 = extractvalue { i64, i32 } %93, 1
  br label %96

96:                                               ; preds = %66, %84, %89, %37, %6
  %97 = phi i64 [ %10, %6 ], [ %41, %37 ], [ %68, %66 ], [ %94, %89 ], [ %88, %84 ]
  %98 = phi i32 [ -1, %6 ], [ %40, %37 ], [ %69, %66 ], [ %95, %89 ], [ -1, %84 ]
  %99 = insertvalue { i64, i32 } undef, i64 %97, 0
  %100 = insertvalue { i64, i32 } %99, i32 %98, 1
  ret { i64, i32 } %100
}

declare { i64, i32 } @_ZNK12CPVT_Section17GetBeginWordPlaceEv(%class.CPVT_Section*) local_unnamed_addr #5

declare { i64, i32 } @_ZNK12CPVT_Section16GetPrevWordPlaceERK14CPVT_WordPlace(%class.CPVT_Section*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #5

declare { i64, i32 } @_ZNK12CPVT_Section16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_Section*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText15SearchWordPlaceERK13CFX_PTemplateIfE(%class.CPVT_VariableText* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4, !noalias !28
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 0
  %7 = load float, float* %6, align 8, !noalias !31
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 3
  %9 = fsub float %5, %7
  %10 = load float, float* %8, align 4, !noalias !34
  %11 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4, !noalias !28
  %13 = fsub float %10, %12
  %14 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %17 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %18 = bitcast %"class.std::__1::unique_ptr.115"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.113"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp ult i64 %23, 2147483648
  %25 = inttoptr i64 %21 to %"class.std::__1::unique_ptr.115"*
  %26 = inttoptr i64 %19 to %"class.std::__1::unique_ptr.115"*
  br i1 %24, label %28, label %27, !prof !3

27:                                               ; preds = %2
  tail call void @llvm.trap() #15
  unreachable

28:                                               ; preds = %2
  %29 = trunc i64 %23 to i32
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %105

31:                                               ; preds = %28
  %32 = add nsw i32 %29, -1
  br label %33

33:                                               ; preds = %31, %91
  %34 = phi i32 [ %92, %91 ], [ %29, %31 ]
  %35 = phi i32 [ %94, %91 ], [ 0, %31 ]
  %36 = phi i32 [ %93, %91 ], [ %32, %31 ]
  %37 = phi i8 [ %57, %91 ], [ 1, %31 ]
  %38 = sdiv i32 %34, 2
  %39 = icmp slt i32 %38, %29
  br i1 %39, label %40, label %98

40:                                               ; preds = %33
  %41 = sext i32 %38 to i64
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %25, i64 %41, i32 0, i32 0, i32 0
  %43 = load %class.CPVT_Section*, %class.CPVT_Section** %42, align 8
  %44 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %43, i64 0, i32 1, i32 0, i32 3
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %43, i64 0, i32 1, i32 0, i32 1
  %47 = load float, float* %46, align 4
  %48 = fcmp ogt float %47, %13
  br i1 %48, label %49, label %56

49:                                               ; preds = %40
  %50 = fsub float %47, %13
  %51 = fpext float %50 to double
  %52 = fcmp olt double %51, 1.000000e-04
  %53 = fcmp ogt double %51, -1.000000e-04
  %54 = and i1 %52, %53
  %55 = select i1 %54, i8 %37, i8 0
  br label %56

56:                                               ; preds = %49, %40
  %57 = phi i8 [ %37, %40 ], [ %55, %49 ]
  %58 = fcmp olt float %13, %45
  br i1 %58, label %59, label %68

59:                                               ; preds = %56
  %60 = fsub float %13, %45
  %61 = fpext float %60 to double
  %62 = fcmp olt double %61, 1.000000e-04
  %63 = fcmp ogt double %61, -1.000000e-04
  %64 = and i1 %62, %63
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = add nsw i32 %38, -1
  %67 = add nsw i32 %35, %66
  br label %91

68:                                               ; preds = %59, %56
  %69 = fcmp ogt float %13, %47
  br i1 %69, label %70, label %79

70:                                               ; preds = %68
  %71 = fsub float %13, %47
  %72 = fpext float %71 to double
  %73 = fcmp olt double %72, 1.000000e-04
  %74 = fcmp ogt double %72, -1.000000e-04
  %75 = and i1 %73, %74
  br i1 %75, label %79, label %76

76:                                               ; preds = %70
  %77 = add nuw nsw i32 %38, 1
  %78 = add nsw i32 %77, %36
  br label %91

79:                                               ; preds = %70, %68
  %80 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #15
  %81 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %43, i64 0, i32 1, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fsub float %9, %82
  %84 = fsub float %13, %45
  %85 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  store float %83, float* %85, align 4
  %86 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float %84, float* %86, align 4
  %87 = call { i64, i32 } @_ZNK12CPVT_Section15SearchWordPlaceERK13CFX_PTemplateIfE(%class.CPVT_Section* %43, %class.CFX_PTemplate* nonnull dereferenceable(8) %3) #15
  %88 = extractvalue { i64, i32 } %87, 0
  %89 = extractvalue { i64, i32 } %87, 1
  %90 = lshr i64 %88, 32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #15
  br label %115

91:                                               ; preds = %76, %65
  %92 = phi i32 [ %78, %76 ], [ %67, %65 ]
  %93 = phi i32 [ %36, %76 ], [ %66, %65 ]
  %94 = phi i32 [ %77, %76 ], [ %35, %65 ]
  %95 = icmp sle i32 %94, %93
  %96 = icmp sgt i32 %92, -2
  %97 = and i1 %96, %95
  br i1 %97, label %33, label %98

98:                                               ; preds = %91, %33
  %99 = phi i8 [ %37, %33 ], [ %57, %91 ]
  %100 = add nsw i8 %15, -1
  %101 = sext i8 %100 to i64
  %102 = sext i8 %100 to i32
  %103 = and i8 %99, 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %115, label %105

105:                                              ; preds = %28, %98
  %106 = icmp eq %"class.std::__1::unique_ptr.115"* %25, %26
  br i1 %106, label %115, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %26, i64 -1, i32 0, i32 0, i32 0
  %109 = load %class.CPVT_Section*, %class.CPVT_Section** %108, align 8
  %110 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %109) #15
  %111 = extractvalue { i64, i32 } %110, 0
  %112 = extractvalue { i64, i32 } %110, 1
  %113 = trunc i64 %111 to i32
  %114 = lshr i64 %111, 32
  br label %115

115:                                              ; preds = %107, %105, %79, %98
  %116 = phi i32 [ %102, %98 ], [ %38, %79 ], [ %113, %107 ], [ -1, %105 ]
  %117 = phi i64 [ %101, %98 ], [ %90, %79 ], [ %114, %107 ], [ 4294967295, %105 ]
  %118 = phi i32 [ -1, %98 ], [ %89, %79 ], [ %112, %107 ], [ -1, %105 ]
  %119 = shl i64 %117, 32
  %120 = zext i32 %116 to i64
  %121 = or i64 %119, %120
  %122 = insertvalue { i64, i32 } undef, i64 %121, 0
  %123 = insertvalue { i64, i32 } %122, i32 %118, 1
  ret { i64, i32 } %123
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17CPVT_VariableText7OutToInERK13CFX_PTemplateIfE(%class.CFX_PTemplate* noalias nocapture sret, %class.CPVT_VariableText* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %1, i64 0, i32 14, i32 0
  %7 = load float, float* %6, align 8, !noalias !37
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %1, i64 0, i32 14, i32 3
  %9 = fsub float %5, %7
  %10 = load float, float* %8, align 4, !noalias !40
  %11 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fsub float %10, %12
  %14 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %9, float* %14, align 4
  %15 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %13, float* %15, align 4
  ret void
}

declare { i64, i32 } @_ZNK12CPVT_Section15SearchWordPlaceERK13CFX_PTemplateIfE(%class.CPVT_Section*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText14GetUpWordPlaceERK14CPVT_WordPlaceRK13CFX_PTemplateIfE(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.CPVT_WordPlace, align 4
  %5 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %10 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.115"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.113"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ult i64 %16, 2147483648
  %18 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.115"*
  br i1 %17, label %20, label %19, !prof !3

19:                                               ; preds = %8
  tail call void @llvm.trap() #15
  unreachable

20:                                               ; preds = %8
  %21 = trunc i64 %16 to i32
  %22 = icmp slt i32 %6, %21
  br i1 %22, label %28, label %23

23:                                               ; preds = %3, %20
  %24 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  br label %77

28:                                               ; preds = %20
  %29 = sext i32 %6 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %18, i64 %29, i32 0, i32 0, i32 0
  %31 = load %class.CPVT_Section*, %class.CPVT_Section** %30, align 8
  %32 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %32) #15
  %33 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 0
  %34 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 1
  %35 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* align 4 %35, i64 12, i1 false)
  %36 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %37 = load float, float* %36, align 4, !noalias !43
  %38 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 0
  %39 = load float, float* %38, align 8, !noalias !46
  %40 = fsub float %37, %39
  %41 = load i32, i32* %34, align 4
  %42 = add nsw i32 %41, -1
  store i32 %42, i32* %34, align 4
  %43 = icmp sgt i32 %41, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %28
  %45 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %31, i64 0, i32 1, i32 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = fsub float %40, %46
  %48 = call { i64, i32 } @_ZNK12CPVT_Section15SearchWordPlaceEfRK14CPVT_WordPlace(%class.CPVT_Section* %31, float %47, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4) #15
  %49 = extractvalue { i64, i32 } %48, 0
  %50 = extractvalue { i64, i32 } %48, 1
  br label %74

51:                                               ; preds = %28
  %52 = load i32, i32* %33, align 4
  %53 = add nsw i32 %52, -1
  store i32 %53, i32* %33, align 4
  %54 = icmp slt i32 %52, 1
  %55 = icmp sgt i32 %52, %21
  %56 = or i1 %54, %55
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = sext i32 %53 to i64
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %18, i64 %58, i32 0, i32 0, i32 0
  %60 = load %class.CPVT_Section*, %class.CPVT_Section** %59, align 8
  %61 = tail call i32 @_ZNK12CPVT_Section16GetLineArraySizeEv(%class.CPVT_Section* %60) #15
  %62 = add nsw i32 %61, -1
  store i32 %62, i32* %34, align 4
  %63 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %60, i64 0, i32 1, i32 0, i32 0
  %64 = load float, float* %63, align 4
  %65 = fsub float %40, %64
  %66 = call { i64, i32 } @_ZNK12CPVT_Section15SearchWordPlaceEfRK14CPVT_WordPlace(%class.CPVT_Section* %60, float %65, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4) #15
  %67 = extractvalue { i64, i32 } %66, 0
  %68 = extractvalue { i64, i32 } %66, 1
  br label %74

69:                                               ; preds = %51
  %70 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %73 = load i32, i32* %72, align 4
  br label %74

74:                                               ; preds = %69, %57, %44
  %75 = phi i64 [ %49, %44 ], [ %67, %57 ], [ %71, %69 ]
  %76 = phi i32 [ %50, %44 ], [ %68, %57 ], [ %73, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %32) #15
  br label %77

77:                                               ; preds = %74, %23
  %78 = phi i64 [ %75, %74 ], [ %25, %23 ]
  %79 = phi i32 [ %76, %74 ], [ %27, %23 ]
  %80 = insertvalue { i64, i32 } undef, i64 %78, 0
  %81 = insertvalue { i64, i32 } %80, i32 %79, 1
  ret { i64, i32 } %81
}

declare { i64, i32 } @_ZNK12CPVT_Section15SearchWordPlaceEfRK14CPVT_WordPlace(%class.CPVT_Section*, float, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText16GetDownWordPlaceERK14CPVT_WordPlaceRK13CFX_PTemplateIfE(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12), %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %struct.CPVT_WordPlace, align 4
  %5 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %10 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.115"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.113"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ult i64 %16, 2147483648
  %18 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.115"*
  br i1 %17, label %20, label %19, !prof !3

19:                                               ; preds = %8
  tail call void @llvm.trap() #15
  unreachable

20:                                               ; preds = %8
  %21 = trunc i64 %16 to i32
  %22 = icmp slt i32 %6, %21
  br i1 %22, label %28, label %23

23:                                               ; preds = %3, %20
  %24 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  br label %87

28:                                               ; preds = %20
  %29 = sext i32 %6 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %18, i64 %29, i32 0, i32 0, i32 0
  %31 = load %class.CPVT_Section*, %class.CPVT_Section** %30, align 8
  %32 = bitcast %struct.CPVT_WordPlace* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %32) #15
  %33 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 0
  %34 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 1
  %35 = bitcast %struct.CPVT_WordPlace* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* align 4 %35, i64 12, i1 false)
  %36 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %37 = load float, float* %36, align 4, !noalias !49
  %38 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 0
  %39 = load float, float* %38, align 8, !noalias !52
  %40 = fsub float %37, %39
  %41 = load i32, i32* %34, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %34, align 4
  %43 = tail call i32 @_ZNK12CPVT_Section16GetLineArraySizeEv(%class.CPVT_Section* %31) #15
  %44 = add nsw i32 %43, -1
  %45 = icmp slt i32 %41, %44
  br i1 %45, label %46, label %53

46:                                               ; preds = %28
  %47 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %31, i64 0, i32 1, i32 0, i32 0
  %48 = load float, float* %47, align 4
  %49 = fsub float %40, %48
  %50 = call { i64, i32 } @_ZNK12CPVT_Section15SearchWordPlaceEfRK14CPVT_WordPlace(%class.CPVT_Section* %31, float %49, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4) #15
  %51 = extractvalue { i64, i32 } %50, 0
  %52 = extractvalue { i64, i32 } %50, 1
  br label %84

53:                                               ; preds = %28
  %54 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %4, i64 0, i32 2
  %55 = load i32, i32* %33, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %33, align 4
  store i32 0, i32* %34, align 4
  store i32 -1, i32* %54, align 4
  %57 = icmp sgt i32 %55, -2
  br i1 %57, label %58, label %69

58:                                               ; preds = %53
  %59 = load i64, i64* %11, align 8
  %60 = load i64, i64* %13, align 8
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %62, 2147483648
  %64 = inttoptr i64 %60 to %"class.std::__1::unique_ptr.115"*
  br i1 %63, label %66, label %65, !prof !3

65:                                               ; preds = %58
  tail call void @llvm.trap() #15
  unreachable

66:                                               ; preds = %58
  %67 = trunc i64 %62 to i32
  %68 = icmp slt i32 %56, %67
  br i1 %68, label %74, label %69

69:                                               ; preds = %53, %66
  %70 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %73 = load i32, i32* %72, align 4
  br label %84

74:                                               ; preds = %66
  %75 = sext i32 %56 to i64
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %64, i64 %75, i32 0, i32 0, i32 0
  %77 = load %class.CPVT_Section*, %class.CPVT_Section** %76, align 8
  %78 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %31, i64 0, i32 1, i32 0, i32 0
  %79 = load float, float* %78, align 4
  %80 = fsub float %40, %79
  %81 = call { i64, i32 } @_ZNK12CPVT_Section15SearchWordPlaceEfRK14CPVT_WordPlace(%class.CPVT_Section* %77, float %80, %struct.CPVT_WordPlace* nonnull dereferenceable(12) %4) #15
  %82 = extractvalue { i64, i32 } %81, 0
  %83 = extractvalue { i64, i32 } %81, 1
  br label %84

84:                                               ; preds = %74, %69, %46
  %85 = phi i64 [ %51, %46 ], [ %82, %74 ], [ %71, %69 ]
  %86 = phi i32 [ %52, %46 ], [ %83, %74 ], [ %73, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %32) #15
  br label %87

87:                                               ; preds = %84, %23
  %88 = phi i64 [ %85, %84 ], [ %25, %23 ]
  %89 = phi i32 [ %86, %84 ], [ %27, %23 ]
  %90 = insertvalue { i64, i32 } undef, i64 %88, 0
  %91 = insertvalue { i64, i32 } %90, i32 %89, 1
  ret { i64, i32 } %91
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText17GetLineBeginPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readnone, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %4 to i64
  %10 = or i64 %8, %9
  %11 = insertvalue { i64, i32 } undef, i64 %10, 0
  %12 = insertvalue { i64, i32 } %11, i32 -1, 1
  ret { i64, i32 } %12
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText15GetLineEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.115"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.113"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ult i64 %14, 2147483648
  %16 = inttoptr i64 %12 to %"class.std::__1::unique_ptr.115"*
  br i1 %15, label %18, label %17, !prof !3

17:                                               ; preds = %6
  tail call void @llvm.trap() #15
  unreachable

18:                                               ; preds = %6
  %19 = trunc i64 %14 to i32
  %20 = icmp slt i32 %4, %19
  br i1 %20, label %26, label %21

21:                                               ; preds = %2, %18
  %22 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %23 = load i64, i64* %22, align 4
  %24 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %43

26:                                               ; preds = %18
  %27 = sext i32 %4 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %16, i64 %27, i32 0, i32 0, i32 0
  %29 = load %class.CPVT_Section*, %class.CPVT_Section** %28, align 8
  %30 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = tail call %"class.CPVT_Section::Line"* @_ZNK12CPVT_Section16GetLineFromArrayEi(%class.CPVT_Section* %29, i32 %31) #15
  %33 = icmp eq %"class.CPVT_Section::Line"* %32, null
  br i1 %33, label %34, label %39

34:                                               ; preds = %26
  %35 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %36 = load i64, i64* %35, align 4
  %37 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  br label %43

39:                                               ; preds = %26
  %40 = tail call { i64, i32 } @_ZNK12CPVT_Section4Line15GetEndWordPlaceEv(%"class.CPVT_Section::Line"* nonnull %32) #15
  %41 = extractvalue { i64, i32 } %40, 0
  %42 = extractvalue { i64, i32 } %40, 1
  br label %43

43:                                               ; preds = %34, %39, %21
  %44 = phi i64 [ %23, %21 ], [ %41, %39 ], [ %36, %34 ]
  %45 = phi i32 [ %25, %21 ], [ %42, %39 ], [ %38, %34 ]
  %46 = insertvalue { i64, i32 } undef, i64 %44, 0
  %47 = insertvalue { i64, i32 } %46, i32 %45, 1
  ret { i64, i32 } %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText20GetSectionBeginPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readnone, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = insertvalue { i64, i32 } undef, i64 %5, 0
  %7 = insertvalue { i64, i32 } %6, i32 -1, 1
  ret { i64, i32 } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText18GetSectionEndPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.115"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.113"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ult i64 %14, 2147483648
  %16 = inttoptr i64 %12 to %"class.std::__1::unique_ptr.115"*
  br i1 %15, label %18, label %17, !prof !3

17:                                               ; preds = %6
  tail call void @llvm.trap() #15
  unreachable

18:                                               ; preds = %6
  %19 = trunc i64 %14 to i32
  %20 = icmp slt i32 %4, %19
  br i1 %20, label %26, label %21

21:                                               ; preds = %2, %18
  %22 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %23 = load i64, i64* %22, align 4
  %24 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %33

26:                                               ; preds = %18
  %27 = sext i32 %4 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %16, i64 %27, i32 0, i32 0, i32 0
  %29 = load %class.CPVT_Section*, %class.CPVT_Section** %28, align 8
  %30 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %29) #15
  %31 = extractvalue { i64, i32 } %30, 0
  %32 = extractvalue { i64, i32 } %30, 1
  br label %33

33:                                               ; preds = %26, %21
  %34 = phi i64 [ %31, %26 ], [ %23, %21 ]
  %35 = phi i32 [ %32, %26 ], [ %25, %21 ]
  %36 = insertvalue { i64, i32 } undef, i64 %34, 0
  %37 = insertvalue { i64, i32 } %36, i32 %35, 1
  ret { i64, i32 } %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.115"* @_ZNSt3__16vectorINS_10unique_ptrI12CPVT_SectionNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE6insertENS_11__wrap_iterIPKS5_EEOS5_(%"class.std::__1::vector.113"*, %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.115"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.115"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.115"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr.115"* %10 to i64
  br i1 %11, label %14, label %144

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr.115"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.115"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.115"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.115"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.115"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %373

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.115"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.115"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr.115"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %class.CPVT_Section** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr.115"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr.115"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.115"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.115"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !55

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr.115"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr.115"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr.115"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %82

60:                                               ; preds = %82, %55
  %61 = phi %"class.std::__1::unique_ptr.115"* [ %58, %55 ], [ %132, %82 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr.115"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %134, label %66

66:                                               ; preds = %63, %80
  %67 = phi %"class.std::__1::unique_ptr.115"* [ %70, %80 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr.115"* [ %69, %80 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.115"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %class.CPVT_Section*, %class.CPVT_Section** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.115"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %class.CPVT_Section* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %66
  tail call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %75) #15
  %79 = bitcast %class.CPVT_Section* %75 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %78, %66
  %81 = icmp eq %"class.std::__1::unique_ptr.115"* %69, %1
  br i1 %81, label %134, label %66

82:                                               ; preds = %55, %82
  %83 = phi %"class.std::__1::unique_ptr.115"* [ %132, %82 ], [ %56, %55 ]
  %84 = phi %"class.std::__1::unique_ptr.115"* [ %131, %82 ], [ %57, %55 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.115"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.115"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %83, i64 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.115"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.115"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %83, i64 2
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr.115"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %97, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.115"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %83, i64 3
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %101, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.115"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.115"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %83, i64 4
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.115"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %109, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.115"* %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %83, i64 5
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %113, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.115"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %115, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.115"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %83, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr.115"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %121, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.115"* %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %83, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %125, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr.115"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %127, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.115"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %84, i64 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %83, i64 8
  %133 = icmp ult %"class.std::__1::unique_ptr.115"* %131, %8
  br i1 %133, label %82, label %60

134:                                              ; preds = %80, %63
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %2, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.115"* %2 to i64*
  %137 = load i64, i64* %136, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %135, align 8
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %1, i64 0, i32 0, i32 0, i32 0
  %139 = load %class.CPVT_Section*, %class.CPVT_Section** %138, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.115"* %1 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %class.CPVT_Section* %139, null
  br i1 %141, label %373, label %142

142:                                              ; preds = %134
  tail call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %139) #15
  %143 = bitcast %class.CPVT_Section* %139 to i8*
  tail call void @_ZdlPv(i8* %143) #14
  br label %373

144:                                              ; preds = %3
  %145 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #15
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.115"** %7 to i64*
  %153 = bitcast %"class.std::__1::vector.113"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %12, %155
  %157 = ashr exact i64 %156, 3
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 2305843009213693951
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.113"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #16
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"class.std::__1::unique_ptr.115"** %9 to i64*
  %164 = sub i64 %13, %155
  %165 = ashr exact i64 %164, 3
  %166 = icmp ult i64 %165, 1152921504606846975
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %4, %155
  %169 = ashr exact i64 %168, 3
  store %"class.std::__1::unique_ptr.115"* null, %"class.std::__1::unique_ptr.115"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.119"** %151 to %"class.std::__1::__compressed_pair.116"**
  store %"class.std::__1::__compressed_pair.116"* %145, %"class.std::__1::__compressed_pair.116"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 2
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %4, %155
  %176 = ashr exact i64 %175, 3
  store %"class.std::__1::unique_ptr.115"* null, %"class.std::__1::unique_ptr.115"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.119"** %151 to %"class.std::__1::__compressed_pair.116"**
  store %"class.std::__1::__compressed_pair.116"* %145, %"class.std::__1::__compressed_pair.116"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #16
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 2305843009213693951, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 3
  %186 = tail call i8* @_Znwm(i64 %185) #14
  %187 = bitcast i8* %186 to %"class.std::__1::unique_ptr.115"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"class.std::__1::unique_ptr.115"* [ %187, %182 ], [ null, %171 ]
  store %"class.std::__1::unique_ptr.115"* %191, %"class.std::__1::unique_ptr.115"** %147, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %191, i64 %189
  store %"class.std::__1::unique_ptr.115"* %192, %"class.std::__1::unique_ptr.115"** %149, align 8
  store %"class.std::__1::unique_ptr.115"* %192, %"class.std::__1::unique_ptr.115"** %148, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %191, i64 %190
  store %"class.std::__1::unique_ptr.115"* %193, %"class.std::__1::unique_ptr.115"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrI12CPVT_SectionNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.std::__1::unique_ptr.115"* dereferenceable(8) %2)
  %194 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %148, align 8
  %195 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %6, align 8
  %196 = icmp eq %"class.std::__1::unique_ptr.115"* %195, %1
  br i1 %196, label %261, label %197

197:                                              ; preds = %188
  %198 = ptrtoint %"class.std::__1::unique_ptr.115"* %195 to i64
  %199 = getelementptr %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %1, i64 -1, i32 0, i32 0, i32 0
  %200 = ptrtoint %class.CPVT_Section** %199 to i64
  %201 = sub i64 %200, %198
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 3
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %220, label %206

206:                                              ; preds = %197, %206
  %207 = phi %"class.std::__1::unique_ptr.115"* [ %217, %206 ], [ %194, %197 ]
  %208 = phi %"class.std::__1::unique_ptr.115"* [ %211, %206 ], [ %1, %197 ]
  %209 = phi i64 [ %218, %206 ], [ %204, %197 ]
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %207, i64 -1
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %208, i64 -1
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %211, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr.115"* %211 to i64*
  %214 = load i64, i64* %213, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.115"* %210 to i64*
  store i64 %214, i64* %215, align 8
  %216 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %148, align 8
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %216, i64 -1
  store %"class.std::__1::unique_ptr.115"* %217, %"class.std::__1::unique_ptr.115"** %148, align 8
  %218 = add i64 %209, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %206, !llvm.loop !57

220:                                              ; preds = %206, %197
  %221 = phi %"class.std::__1::unique_ptr.115"* [ undef, %197 ], [ %217, %206 ]
  %222 = phi %"class.std::__1::unique_ptr.115"* [ %194, %197 ], [ %217, %206 ]
  %223 = phi %"class.std::__1::unique_ptr.115"* [ %1, %197 ], [ %211, %206 ]
  %224 = icmp ult i64 %201, 24
  br i1 %224, label %261, label %225

225:                                              ; preds = %220, %225
  %226 = phi %"class.std::__1::unique_ptr.115"* [ %259, %225 ], [ %222, %220 ]
  %227 = phi %"class.std::__1::unique_ptr.115"* [ %253, %225 ], [ %223, %220 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %226, i64 -1
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %227, i64 -1
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.std::__1::unique_ptr.115"* %229 to i64*
  %232 = load i64, i64* %231, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %230, align 8
  %233 = bitcast %"class.std::__1::unique_ptr.115"* %228 to i64*
  store i64 %232, i64* %233, align 8
  %234 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %148, align 8
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %234, i64 -1
  store %"class.std::__1::unique_ptr.115"* %235, %"class.std::__1::unique_ptr.115"** %148, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %234, i64 -2
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %227, i64 -2
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = bitcast %"class.std::__1::unique_ptr.115"* %237 to i64*
  %240 = load i64, i64* %239, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %238, align 8
  %241 = bitcast %"class.std::__1::unique_ptr.115"* %236 to i64*
  store i64 %240, i64* %241, align 8
  %242 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %148, align 8
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %242, i64 -1
  store %"class.std::__1::unique_ptr.115"* %243, %"class.std::__1::unique_ptr.115"** %148, align 8
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %242, i64 -2
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %227, i64 -3
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = bitcast %"class.std::__1::unique_ptr.115"* %245 to i64*
  %248 = load i64, i64* %247, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %246, align 8
  %249 = bitcast %"class.std::__1::unique_ptr.115"* %244 to i64*
  store i64 %248, i64* %249, align 8
  %250 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %148, align 8
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %250, i64 -1
  store %"class.std::__1::unique_ptr.115"* %251, %"class.std::__1::unique_ptr.115"** %148, align 8
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %250, i64 -2
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %227, i64 -4
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = bitcast %"class.std::__1::unique_ptr.115"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %254, align 8
  %257 = bitcast %"class.std::__1::unique_ptr.115"* %252 to i64*
  store i64 %256, i64* %257, align 8
  %258 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %148, align 8
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %258, i64 -1
  store %"class.std::__1::unique_ptr.115"* %259, %"class.std::__1::unique_ptr.115"** %148, align 8
  %260 = icmp eq %"class.std::__1::unique_ptr.115"* %253, %195
  br i1 %260, label %261, label %225

261:                                              ; preds = %220, %225, %188
  %262 = phi %"class.std::__1::unique_ptr.115"* [ %194, %188 ], [ %221, %220 ], [ %259, %225 ]
  %263 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %7, align 8
  %264 = icmp eq %"class.std::__1::unique_ptr.115"* %263, %1
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = ptrtoint %"class.std::__1::unique_ptr.115"* %263 to i64
  %267 = ptrtoint %"class.std::__1::unique_ptr.115"* %262 to i64
  %268 = bitcast %"class.std::__1::unique_ptr.115"** %148 to i64*
  %269 = bitcast %"class.std::__1::unique_ptr.115"** %149 to i64*
  %270 = load i64, i64* %269, align 8
  br label %340

271:                                              ; preds = %261
  %272 = bitcast %"class.std::__1::unique_ptr.115"** %149 to i64**
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %263, i64 -1, i32 0, i32 0, i32 0
  %275 = ptrtoint %class.CPVT_Section** %274 to i64
  %276 = sub i64 %275, %4
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 3
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %296, label %281

281:                                              ; preds = %271, %281
  %282 = phi i64* [ %291, %281 ], [ %273, %271 ]
  %283 = phi %"class.std::__1::unique_ptr.115"* [ %288, %281 ], [ %1, %271 ]
  %284 = phi i64 [ %292, %281 ], [ %279, %271 ]
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %283, i64 0, i32 0, i32 0, i32 0
  %286 = bitcast %"class.std::__1::unique_ptr.115"* %283 to i64*
  %287 = load i64, i64* %286, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %285, align 8
  store i64 %287, i64* %282, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %283, i64 1
  %289 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %149, align 8
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %289, i64 1
  store %"class.std::__1::unique_ptr.115"* %290, %"class.std::__1::unique_ptr.115"** %149, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.115"* %290 to i64*
  %292 = add i64 %284, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %281, !llvm.loop !58

294:                                              ; preds = %281
  %295 = bitcast %"class.std::__1::unique_ptr.115"* %290 to i64*
  br label %296

296:                                              ; preds = %271, %294
  %297 = phi %"class.std::__1::unique_ptr.115"* [ undef, %271 ], [ %290, %294 ]
  %298 = phi i64* [ %273, %271 ], [ %295, %294 ]
  %299 = phi %"class.std::__1::unique_ptr.115"* [ %1, %271 ], [ %288, %294 ]
  %300 = icmp ult i64 %276, 24
  br i1 %300, label %333, label %301

301:                                              ; preds = %296, %301
  %302 = phi i64* [ %332, %301 ], [ %298, %296 ]
  %303 = phi %"class.std::__1::unique_ptr.115"* [ %328, %301 ], [ %299, %296 ]
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %303, i64 0, i32 0, i32 0, i32 0
  %305 = bitcast %"class.std::__1::unique_ptr.115"* %303 to i64*
  %306 = load i64, i64* %305, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %304, align 8
  store i64 %306, i64* %302, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %303, i64 1
  %308 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %149, align 8
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %308, i64 1
  store %"class.std::__1::unique_ptr.115"* %309, %"class.std::__1::unique_ptr.115"** %149, align 8
  %310 = bitcast %"class.std::__1::unique_ptr.115"* %309 to i64*
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %307, i64 0, i32 0, i32 0, i32 0
  %312 = bitcast %"class.std::__1::unique_ptr.115"* %307 to i64*
  %313 = load i64, i64* %312, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %311, align 8
  store i64 %313, i64* %310, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %303, i64 2
  %315 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %149, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %315, i64 1
  store %"class.std::__1::unique_ptr.115"* %316, %"class.std::__1::unique_ptr.115"** %149, align 8
  %317 = bitcast %"class.std::__1::unique_ptr.115"* %316 to i64*
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %314, i64 0, i32 0, i32 0, i32 0
  %319 = bitcast %"class.std::__1::unique_ptr.115"* %314 to i64*
  %320 = load i64, i64* %319, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %318, align 8
  store i64 %320, i64* %317, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %303, i64 3
  %322 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %149, align 8
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %322, i64 1
  store %"class.std::__1::unique_ptr.115"* %323, %"class.std::__1::unique_ptr.115"** %149, align 8
  %324 = bitcast %"class.std::__1::unique_ptr.115"* %323 to i64*
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %321, i64 0, i32 0, i32 0, i32 0
  %326 = bitcast %"class.std::__1::unique_ptr.115"* %321 to i64*
  %327 = load i64, i64* %326, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %325, align 8
  store i64 %327, i64* %324, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %303, i64 4
  %329 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %149, align 8
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %329, i64 1
  store %"class.std::__1::unique_ptr.115"* %330, %"class.std::__1::unique_ptr.115"** %149, align 8
  %331 = icmp eq %"class.std::__1::unique_ptr.115"* %328, %263
  %332 = bitcast %"class.std::__1::unique_ptr.115"* %330 to i64*
  br i1 %331, label %333, label %301

333:                                              ; preds = %301, %296
  %334 = phi %"class.std::__1::unique_ptr.115"* [ %297, %296 ], [ %330, %301 ]
  %335 = ptrtoint %"class.std::__1::unique_ptr.115"* %334 to i64
  %336 = bitcast %"class.std::__1::unique_ptr.115"** %148 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = load i64, i64* %152, align 8
  %339 = bitcast %"class.std::__1::unique_ptr.115"** %149 to i64*
  br label %340

340:                                              ; preds = %265, %333
  %341 = phi i64* [ %269, %265 ], [ %339, %333 ]
  %342 = phi i64 [ %270, %265 ], [ %335, %333 ]
  %343 = phi i64 [ %266, %265 ], [ %338, %333 ]
  %344 = phi i64* [ %268, %265 ], [ %336, %333 ]
  %345 = phi i64 [ %267, %265 ], [ %337, %333 ]
  %346 = load i64, i64* %153, align 8
  store i64 %345, i64* %153, align 8
  store i64 %346, i64* %344, align 8
  store i64 %342, i64* %152, align 8
  store i64 %343, i64* %341, align 8
  %347 = load i64, i64* %163, align 8
  %348 = bitcast %"class.std::__1::unique_ptr.115"** %150 to i64*
  %349 = load i64, i64* %348, align 8
  store i64 %349, i64* %163, align 8
  store i64 %347, i64* %348, align 8
  %350 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %346, i64* %350, align 8
  %351 = inttoptr i64 %346 to %"class.std::__1::unique_ptr.115"*
  %352 = inttoptr i64 %343 to %"class.std::__1::unique_ptr.115"*
  %353 = icmp eq %"class.std::__1::unique_ptr.115"* %352, %351
  br i1 %353, label %367, label %354

354:                                              ; preds = %340, %362
  %355 = phi %"class.std::__1::unique_ptr.115"* [ %363, %362 ], [ %352, %340 ]
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %355, i64 -1
  store %"class.std::__1::unique_ptr.115"* %356, %"class.std::__1::unique_ptr.115"** %149, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %356, i64 0, i32 0, i32 0, i32 0
  %358 = load %class.CPVT_Section*, %class.CPVT_Section** %357, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %357, align 8
  %359 = icmp eq %class.CPVT_Section* %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %354
  call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %358) #15
  %361 = bitcast %class.CPVT_Section* %358 to i8*
  call void @_ZdlPv(i8* %361) #14
  br label %362

362:                                              ; preds = %360, %354
  %363 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %149, align 8
  %364 = icmp eq %"class.std::__1::unique_ptr.115"* %363, %351
  br i1 %364, label %365, label %354

365:                                              ; preds = %362
  %366 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %147, align 8
  br label %367

367:                                              ; preds = %365, %340
  %368 = phi %"class.std::__1::unique_ptr.115"* [ %366, %365 ], [ %351, %340 ]
  %369 = icmp eq %"class.std::__1::unique_ptr.115"* %368, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %367
  %371 = bitcast %"class.std::__1::unique_ptr.115"* %368 to i8*
  call void @_ZdlPv(i8* %371) #14
  br label %372

372:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #15
  br label %373

373:                                              ; preds = %142, %134, %16, %372
  %374 = phi %"class.std::__1::unique_ptr.115"* [ %1, %16 ], [ %194, %372 ], [ %1, %134 ], [ %1, %142 ]
  ret %"class.std::__1::unique_ptr.115"* %374
}

declare { i64, i32 } @_ZN12CPVT_Section7AddLineERK13CPVT_LineInfo(%class.CPVT_Section*, %struct.CPVT_LineInfo* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText12SetPlateRectERK13CFX_FloatRect(%class.CPVT_VariableText* nocapture, %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14
  %4 = bitcast %class.CFX_FloatRect* %3 to i8*
  %5 = bitcast %class.CFX_FloatRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText14GetContentRectEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 15, i32 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 15, i32 0, i32 3
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 0
  %7 = load float, float* %6, align 8, !noalias !59
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 3
  %9 = fadd float %3, %7
  %10 = load float, float* %8, align 4, !noalias !64
  %11 = fsub float %10, %5
  %12 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 15, i32 0, i32 2
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 15, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fadd float %7, %13
  %17 = fsub float %10, %15
  %18 = insertelement <2 x float> undef, float %9, i32 0
  %19 = insertelement <2 x float> %18, float %17, i32 1
  %20 = insertelement <2 x float> undef, float %16, i32 0
  %21 = insertelement <2 x float> %20, float %11, i32 1
  %22 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %19, 0
  %23 = insertvalue { <2 x float>, <2 x float> } %22, <2 x float> %21, 1
  ret { <2 x float>, <2 x float> } %23
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText7InToOutERK14CPVT_FloatRect(%class.CPVT_VariableText* nocapture readonly, %class.CPVT_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.CPVT_FloatRect, %class.CPVT_FloatRect* %1, i64 0, i32 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CPVT_FloatRect, %class.CPVT_FloatRect* %1, i64 0, i32 0, i32 3
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 0
  %8 = load float, float* %7, align 8, !noalias !67
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 3
  %10 = fadd float %4, %8
  %11 = load float, float* %9, align 4, !noalias !72
  %12 = fsub float %11, %6
  %13 = getelementptr inbounds %class.CPVT_FloatRect, %class.CPVT_FloatRect* %1, i64 0, i32 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.CPVT_FloatRect, %class.CPVT_FloatRect* %1, i64 0, i32 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fadd float %8, %14
  %18 = fsub float %11, %16
  %19 = insertelement <2 x float> undef, float %10, i32 0
  %20 = insertelement <2 x float> %19, float %18, i32 1
  %21 = insertelement <2 x float> undef, float %17, i32 0
  %22 = insertelement <2 x float> %21, float %12, i32 1
  %23 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %20, 0
  %24 = insertvalue { <2 x float>, <2 x float> } %23, <2 x float> %22, 1
  ret { <2 x float>, <2 x float> } %24
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %class.CFX_FloatRect* @_ZNK17CPVT_VariableText12GetPlateRectEv(%class.CPVT_VariableText* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14
  ret %class.CFX_FloatRect* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK17CPVT_VariableText12GetWordWidthEittfff(%class.CPVT_VariableText* nocapture readonly, i32, i16 zeroext, i16 zeroext, float, float, float) local_unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %9 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %8, align 8
  %10 = icmp eq %"class.CPVT_VariableText::Provider"* %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %7
  %12 = icmp eq i16 %3, 0
  %13 = select i1 %12, i16 %2, i16 %3
  %14 = bitcast %"class.CPVT_VariableText::Provider"* %9 to i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)***
  %15 = load i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)**, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)** %15, i64 2
  %17 = load i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)** %16, align 8
  %18 = tail call i32 %17(%"class.CPVT_VariableText::Provider"* nonnull %9, i32 %1, i16 zeroext %13) #15
  %19 = sitofp i32 %18 to float
  br label %20

20:                                               ; preds = %7, %11
  %21 = phi float [ %19, %11 ], [ 0.000000e+00, %7 ]
  %22 = fmul float %21, %5
  %23 = fmul float %22, 0x3F50624DE0000000
  %24 = fadd float %23, %4
  %25 = fadd float %24, %6
  ret float %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK17CPVT_VariableText12GetCharWidthEitt(%class.CPVT_VariableText* nocapture readonly, i32, i16 zeroext, i16 zeroext) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %6 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %5, align 8
  %7 = icmp eq %"class.CPVT_VariableText::Provider"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = icmp eq i16 %3, 0
  %10 = select i1 %9, i16 %2, i16 %3
  %11 = bitcast %"class.CPVT_VariableText::Provider"* %6 to i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)***
  %12 = load i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)**, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)** %12, i64 2
  %14 = load i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)*, i32 (%"class.CPVT_VariableText::Provider"*, i32, i16)** %13, align 8
  %15 = tail call i32 %14(%"class.CPVT_VariableText::Provider"* nonnull %6, i32 %1, i16 zeroext %10) #15
  br label %16

16:                                               ; preds = %4, %8
  %17 = phi i32 [ %15, %8 ], [ 0, %4 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN17CPVT_VariableText13GetLineAscentEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %3 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %2, align 8
  %4 = icmp eq %"class.CPVT_VariableText::Provider"* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  %7 = load float, float* %6, align 4
  br label %25

8:                                                ; preds = %1
  %9 = bitcast %"class.CPVT_VariableText::Provider"* %3 to i32 (%"class.CPVT_VariableText::Provider"*)***
  %10 = load i32 (%"class.CPVT_VariableText::Provider"*)**, i32 (%"class.CPVT_VariableText::Provider"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %10, i64 6
  %12 = load i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %11, align 8
  %13 = tail call i32 %12(%"class.CPVT_VariableText::Provider"* nonnull %3) #15
  %14 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %2, align 8
  %15 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  %16 = load float, float* %15, align 4
  %17 = icmp eq %"class.CPVT_VariableText::Provider"* %14, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %8
  %19 = bitcast %"class.CPVT_VariableText::Provider"* %14 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %20 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %20, i64 3
  %22 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %21, align 8
  %23 = tail call i32 %22(%"class.CPVT_VariableText::Provider"* nonnull %14, i32 %13) #15
  %24 = sitofp i32 %23 to float
  br label %25

25:                                               ; preds = %5, %8, %18
  %26 = phi float [ %16, %18 ], [ %16, %8 ], [ %7, %5 ]
  %27 = phi float [ %24, %18 ], [ 0.000000e+00, %8 ], [ 0.000000e+00, %5 ]
  %28 = fmul float %26, %27
  %29 = fmul float %28, 0x3F50624DE0000000
  ret float %29
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN17CPVT_VariableText14GetLineDescentEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %3 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %2, align 8
  %4 = icmp eq %"class.CPVT_VariableText::Provider"* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  %7 = load float, float* %6, align 4
  br label %25

8:                                                ; preds = %1
  %9 = bitcast %"class.CPVT_VariableText::Provider"* %3 to i32 (%"class.CPVT_VariableText::Provider"*)***
  %10 = load i32 (%"class.CPVT_VariableText::Provider"*)**, i32 (%"class.CPVT_VariableText::Provider"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %10, i64 6
  %12 = load i32 (%"class.CPVT_VariableText::Provider"*)*, i32 (%"class.CPVT_VariableText::Provider"*)** %11, align 8
  %13 = tail call i32 %12(%"class.CPVT_VariableText::Provider"* nonnull %3) #15
  %14 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %2, align 8
  %15 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  %16 = load float, float* %15, align 4
  %17 = icmp eq %"class.CPVT_VariableText::Provider"* %14, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %8
  %19 = bitcast %"class.CPVT_VariableText::Provider"* %14 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %20 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %20, i64 4
  %22 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %21, align 8
  %23 = tail call i32 %22(%"class.CPVT_VariableText::Provider"* nonnull %14, i32 %13) #15
  %24 = sitofp i32 %23 to float
  br label %25

25:                                               ; preds = %5, %8, %18
  %26 = phi float [ %16, %18 ], [ %16, %8 ], [ %7, %5 ]
  %27 = phi float [ %24, %18 ], [ 0.000000e+00, %8 ], [ 0.000000e+00, %5 ]
  %28 = fmul float %26, %27
  %29 = fmul float %28, 0x3F50624DE0000000
  ret float %29
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK17CPVT_VariableText13GetWordAscentERK13CPVT_WordInfof(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordInfo* nocapture readonly dereferenceable(24), float) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %5 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %4, align 8
  %6 = icmp eq %"class.CPVT_VariableText::Provider"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %1, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.CPVT_VariableText::Provider"* %5 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %11 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %11, i64 3
  %13 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %12, align 8
  %14 = tail call i32 %13(%"class.CPVT_VariableText::Provider"* nonnull %5, i32 %9) #15
  %15 = sitofp i32 %14 to float
  br label %16

16:                                               ; preds = %3, %7
  %17 = phi float [ %15, %7 ], [ 0.000000e+00, %3 ]
  %18 = fmul float %17, %2
  %19 = fmul float %18, 0x3F50624DE0000000
  ret float %19
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK17CPVT_VariableText14GetWordDescentERK13CPVT_WordInfof(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordInfo* nocapture readonly dereferenceable(24), float) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  %5 = load %"class.CPVT_VariableText::Provider"*, %"class.CPVT_VariableText::Provider"** %4, align 8
  %6 = icmp eq %"class.CPVT_VariableText::Provider"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.CPVT_WordInfo, %struct.CPVT_WordInfo* %1, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.CPVT_VariableText::Provider"* %5 to i32 (%"class.CPVT_VariableText::Provider"*, i32)***
  %11 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)**, i32 (%"class.CPVT_VariableText::Provider"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %11, i64 4
  %13 = load i32 (%"class.CPVT_VariableText::Provider"*, i32)*, i32 (%"class.CPVT_VariableText::Provider"*, i32)** %12, align 8
  %14 = tail call i32 %13(%"class.CPVT_VariableText::Provider"* nonnull %5, i32 %9) #15
  %15 = sitofp i32 %14 to float
  br label %16

16:                                               ; preds = %3, %7
  %17 = phi float [ %15, %7 ], [ 0.000000e+00, %3 ]
  %18 = fmul float %17, %2
  %19 = fmul float %18, 0x3F50624DE0000000
  ret float %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZN17CPVT_VariableText14GetLineLeadingEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 8
  %3 = load float, float* %2, align 4
  ret float %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZN17CPVT_VariableText13GetLineIndentEv(%class.CPVT_VariableText* nocapture readnone) local_unnamed_addr #4 align 2 {
  ret float 0.000000e+00
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN17CPVT_VariableText12GetAlignmentEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare void @_ZN12CPVT_Section14EraseWordsFromEi(%class.CPVT_Section*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK17CPVT_VariableText19NextLineHeaderPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = tail call { i64, i32 } @_ZNK17CPVT_VariableText16GetNextWordPlaceERK14CPVT_WordPlace(%class.CPVT_VariableText* %0, %struct.CPVT_WordPlace* dereferenceable(12) %1)
  %12 = extractvalue { i64, i32 } %11, 0
  %13 = extractvalue { i64, i32 } %11, 1
  br label %17

14:                                               ; preds = %6, %2
  %15 = bitcast %struct.CPVT_WordPlace* %1 to i64*
  %16 = load i64, i64* %15, align 4
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %14 ]
  %19 = phi i32 [ %13, %10 ], [ %4, %14 ]
  %20 = insertvalue { i64, i32 } undef, i64 %18, 0
  %21 = insertvalue { i64, i32 } %20, i32 %19, 1
  ret { i64, i32 } %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17CPVT_VariableText17ClearEmptySectionERK14CPVT_WordPlace(%class.CPVT_VariableText* nocapture, %struct.CPVT_WordPlace* nocapture readonly dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  br i1 %5, label %7, label %15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.115"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.113"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp eq i64 %13, 8
  br i1 %14, label %84, label %24

15:                                               ; preds = %2
  %16 = icmp sgt i32 %4, -1
  br i1 %16, label %17, label %84

17:                                               ; preds = %15
  %18 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %19 = bitcast %"class.std::__1::unique_ptr.115"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.113"* %6 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  br label %24

24:                                               ; preds = %7, %17
  %25 = phi i64 [ %23, %17 ], [ %13, %7 ]
  %26 = phi i64 [ %22, %17 ], [ %12, %7 ]
  %27 = inttoptr i64 %26 to %"class.std::__1::unique_ptr.115"*
  %28 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %29 = ashr exact i64 %25, 3
  %30 = icmp ult i64 %29, 2147483648
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %24
  tail call void @llvm.trap() #15
  unreachable

32:                                               ; preds = %24
  %33 = trunc i64 %29 to i32
  %34 = icmp slt i32 %4, %33
  br i1 %34, label %35, label %84

35:                                               ; preds = %32
  %36 = sext i32 %4 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %27, i64 %36, i32 0, i32 0, i32 0
  %38 = load %class.CPVT_Section*, %class.CPVT_Section** %37, align 8
  %39 = tail call i32 @_ZNK12CPVT_Section16GetWordArraySizeEv(%class.CPVT_Section* %38) #15
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %84

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %43 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %42, align 8
  %44 = load i32, i32* %3, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %43, i64 %45
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %46, i64 1
  %48 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %28, align 8
  %49 = icmp eq %"class.std::__1::unique_ptr.115"* %47, %48
  br i1 %49, label %69, label %50

50:                                               ; preds = %41, %62
  %51 = phi %"class.std::__1::unique_ptr.115"* [ %64, %62 ], [ %46, %41 ]
  %52 = phi %"class.std::__1::unique_ptr.115"* [ %63, %62 ], [ %47, %41 ]
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::unique_ptr.115"* %52 to i64*
  %55 = load i64, i64* %54, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %53, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %51, i64 0, i32 0, i32 0, i32 0
  %57 = load %class.CPVT_Section*, %class.CPVT_Section** %56, align 8
  %58 = bitcast %"class.std::__1::unique_ptr.115"* %51 to i64*
  store i64 %55, i64* %58, align 8
  %59 = icmp eq %class.CPVT_Section* %57, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %50
  tail call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %57) #15
  %61 = bitcast %class.CPVT_Section* %57 to i8*
  tail call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %60, %50
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %52, i64 1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %51, i64 1
  %65 = icmp eq %"class.std::__1::unique_ptr.115"* %63, %48
  br i1 %65, label %66, label %50

66:                                               ; preds = %62
  %67 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %28, align 8
  %68 = icmp eq %"class.std::__1::unique_ptr.115"* %67, %64
  br i1 %68, label %82, label %69

69:                                               ; preds = %66, %41
  %70 = phi %"class.std::__1::unique_ptr.115"* [ %64, %66 ], [ %46, %41 ]
  %71 = phi %"class.std::__1::unique_ptr.115"* [ %67, %66 ], [ %47, %41 ]
  br label %72

72:                                               ; preds = %80, %69
  %73 = phi %"class.std::__1::unique_ptr.115"* [ %74, %80 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %73, i64 -1
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %class.CPVT_Section*, %class.CPVT_Section** %75, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %75, align 8
  %77 = icmp eq %class.CPVT_Section* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %72
  tail call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %76) #15
  %79 = bitcast %class.CPVT_Section* %76 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %78, %72
  %81 = icmp eq %"class.std::__1::unique_ptr.115"* %74, %70
  br i1 %81, label %82, label %72

82:                                               ; preds = %80, %66
  %83 = phi %"class.std::__1::unique_ptr.115"* [ %64, %66 ], [ %70, %80 ]
  store %"class.std::__1::unique_ptr.115"* %83, %"class.std::__1::unique_ptr.115"** %28, align 8
  br label %84

84:                                               ; preds = %15, %35, %32, %7, %82
  %85 = phi i1 [ true, %82 ], [ false, %7 ], [ false, %32 ], [ false, %35 ], [ false, %15 ]
  ret i1 %85
}

declare void @_ZN12CPVT_Section10ClearWordsERK14CPVT_WordRange(%class.CPVT_Section*, %struct.CPVT_WordRange* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN12CPVT_Section9ClearWordERK14CPVT_WordPlace(%class.CPVT_Section*, %struct.CPVT_WordPlace* dereferenceable(12)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText12RearrangeAllEv(%class.CPVT_VariableText* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %struct.CPVT_WordRange, align 8
  %3 = bitcast %struct.CPVT_WordRange* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #15
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = add nsw i8 %5, -1
  %7 = sext i8 %6 to i64
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %8, align 8
  %10 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.115"* %9, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %11, i64 -1, i32 0, i32 0, i32 0
  %15 = load %class.CPVT_Section*, %class.CPVT_Section** %14, align 8
  %16 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %15) #15
  %17 = extractvalue { i64, i32 } %16, 0
  %18 = extractvalue { i64, i32 } %16, 1
  %19 = and i64 %17, -4294967296
  %20 = and i64 %17, 4294967295
  br label %21

21:                                               ; preds = %1, %13
  %22 = phi i64 [ %20, %13 ], [ 4294967295, %1 ]
  %23 = phi i64 [ %19, %13 ], [ -4294967296, %1 ]
  %24 = phi i32 [ %18, %13 ], [ -1, %1 ]
  %25 = or i64 %23, %22
  %26 = bitcast %struct.CPVT_WordRange* %2 to i64*
  store i64 %7, i64* %26, align 8
  %27 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 0, i32 2
  store i32 -1, i32* %27, align 8
  %28 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 1
  %29 = bitcast %struct.CPVT_WordPlace* %28 to i8*
  %30 = bitcast %struct.CPVT_WordPlace* %28 to i64*
  store i64 %25, i64* %30, align 4
  %31 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 1, i32 2
  store i32 %24, i32* %31, align 4
  %32 = sext i8 %6 to i32
  %33 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %28, i64 0, i32 0
  %34 = trunc i64 %22 to i32
  %35 = icmp eq i32 %32, %34
  %36 = lshr i64 %7, 32
  %37 = trunc i64 %36 to i32
  %38 = lshr exact i64 %23, 32
  %39 = trunc i64 %38 to i32
  br i1 %35, label %42, label %40

40:                                               ; preds = %21
  %41 = icmp sgt i32 %32, %34
  br i1 %41, label %48, label %50

42:                                               ; preds = %21
  %43 = icmp eq i32 %37, %39
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = icmp sgt i32 %37, %39
  br i1 %45, label %48, label %50

46:                                               ; preds = %42
  %47 = icmp slt i32 %24, -1
  br i1 %47, label %48, label %50

48:                                               ; preds = %40, %46, %44
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 4 %29, i64 12, i1 false) #15
  store i32 %32, i32* %33, align 4
  %49 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 1, i32 1
  store i32 %37, i32* %49, align 4
  store i32 -1, i32* %31, align 4
  br label %50

50:                                               ; preds = %40, %44, %46, %48
  call void @_ZN17CPVT_VariableText9RearrangeERK14CPVT_WordRange(%class.CPVT_VariableText* %0, %struct.CPVT_WordRange* nonnull dereferenceable(24) %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText9RearrangeERK14CPVT_WordRange(%class.CPVT_VariableText* nocapture, %struct.CPVT_WordRange* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.CPVT_WordRange, align 8
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %68, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 3
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %64, label %11

11:                                               ; preds = %7
  %12 = tail call float @_ZN17CPVT_VariableText15GetAutoFontSizeEv(%class.CPVT_VariableText* %0)
  %13 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 10
  store float %12, float* %13, align 4
  %14 = bitcast %struct.CPVT_WordRange* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  %15 = load i8, i8* %4, align 8, !range !2
  %16 = add nsw i8 %15, -1
  %17 = sext i8 %16 to i64
  %18 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %19 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %18, align 8
  %20 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %20, align 8
  %22 = icmp eq %"class.std::__1::unique_ptr.115"* %19, %21
  br i1 %22, label %31, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %21, i64 -1, i32 0, i32 0, i32 0
  %25 = load %class.CPVT_Section*, %class.CPVT_Section** %24, align 8
  %26 = tail call { i64, i32 } @_ZNK12CPVT_Section15GetEndWordPlaceEv(%class.CPVT_Section* %25) #15
  %27 = extractvalue { i64, i32 } %26, 0
  %28 = extractvalue { i64, i32 } %26, 1
  %29 = and i64 %27, -4294967296
  %30 = and i64 %27, 4294967295
  br label %31

31:                                               ; preds = %11, %23
  %32 = phi i64 [ %30, %23 ], [ 4294967295, %11 ]
  %33 = phi i64 [ %29, %23 ], [ -4294967296, %11 ]
  %34 = phi i32 [ %28, %23 ], [ -1, %11 ]
  %35 = or i64 %33, %32
  %36 = bitcast %struct.CPVT_WordRange* %3 to i64*
  store i64 %17, i64* %36, align 8
  %37 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 2
  store i32 -1, i32* %37, align 8
  %38 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1
  %39 = bitcast %struct.CPVT_WordPlace* %38 to i8*
  %40 = bitcast %struct.CPVT_WordPlace* %38 to i64*
  store i64 %35, i64* %40, align 4
  %41 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  store i32 %34, i32* %41, align 4
  %42 = sext i8 %16 to i32
  %43 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %38, i64 0, i32 0
  %44 = trunc i64 %32 to i32
  %45 = icmp eq i32 %42, %44
  %46 = lshr i64 %17, 32
  %47 = trunc i64 %46 to i32
  %48 = lshr exact i64 %33, 32
  %49 = trunc i64 %48 to i32
  br i1 %45, label %52, label %50

50:                                               ; preds = %31
  %51 = icmp sgt i32 %42, %44
  br i1 %51, label %58, label %60

52:                                               ; preds = %31
  %53 = icmp eq i32 %47, %49
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = icmp sgt i32 %47, %49
  br i1 %55, label %58, label %60

56:                                               ; preds = %52
  %57 = icmp slt i32 %34, -1
  br i1 %57, label %58, label %60

58:                                               ; preds = %50, %56, %54
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 4 %39, i64 12, i1 false) #15
  store i32 %42, i32* %43, align 4
  %59 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 1
  store i32 %47, i32* %59, align 4
  store i32 -1, i32* %41, align 4
  br label %60

60:                                               ; preds = %50, %54, %56, %58
  %61 = call { <2 x float>, <2 x float> } @_ZN17CPVT_VariableText17RearrangeSectionsERK14CPVT_WordRange(%class.CPVT_VariableText* %0, %struct.CPVT_WordRange* nonnull dereferenceable(24) %3)
  %62 = extractvalue { <2 x float>, <2 x float> } %61, 0
  %63 = extractvalue { <2 x float>, <2 x float> } %61, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #15
  br label %68

64:                                               ; preds = %7
  %65 = tail call { <2 x float>, <2 x float> } @_ZN17CPVT_VariableText17RearrangeSectionsERK14CPVT_WordRange(%class.CPVT_VariableText* %0, %struct.CPVT_WordRange* dereferenceable(24) %1)
  %66 = extractvalue { <2 x float>, <2 x float> } %65, 0
  %67 = extractvalue { <2 x float>, <2 x float> } %65, 1
  br label %68

68:                                               ; preds = %2, %60, %64
  %69 = phi <2 x float> [ %66, %64 ], [ %62, %60 ], [ zeroinitializer, %2 ]
  %70 = phi <2 x float> [ %67, %64 ], [ %63, %60 ], [ zeroinitializer, %2 ]
  %71 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 15
  %72 = bitcast %class.CPVT_FloatRect* %71 to <2 x float>*
  store <2 x float> %69, <2 x float>* %72, align 8
  %73 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 15, i32 0, i32 2
  %74 = bitcast float* %73 to <2 x float>*
  store <2 x float> %70, <2 x float>* %74, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPVT_VariableText13RearrangePartERK14CPVT_WordRange(%class.CPVT_VariableText* nocapture, %struct.CPVT_WordRange* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  tail call void @_ZN17CPVT_VariableText9RearrangeERK14CPVT_WordRange(%class.CPVT_VariableText* %0, %struct.CPVT_WordRange* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN17CPVT_VariableText15GetAutoFontSizeEv(%class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %class.CFX_STemplate, align 4
  %3 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i32 25, i32 6
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 2
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 0
  %10 = load float, float* %9, align 8
  %11 = fsub float %8, %10
  %12 = fcmp ugt float %11, 0.000000e+00
  br i1 %12, label %13, label %84

13:                                               ; preds = %1
  %14 = lshr i32 %6, 1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [25 x i8], [25 x i8]* @_ZN12_GLOBAL__N_114kFontSizeStepsE, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = uitofp i8 %17 to float
  %19 = add nsw i32 %6, -1
  %20 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %21 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %22 = bitcast %class.CFX_STemplate* %2 to i8*
  %23 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %2, i64 0, i32 0
  %24 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %2, i64 0, i32 1
  %25 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 3
  %26 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 1
  br label %27

27:                                               ; preds = %13, %74
  %28 = phi float [ %18, %13 ], [ %83, %74 ]
  %29 = phi i32 [ %14, %13 ], [ %78, %74 ]
  %30 = phi i32 [ %19, %13 ], [ %76, %74 ]
  %31 = phi i32 [ 0, %13 ], [ %75, %74 ]
  %32 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %20, align 8
  %33 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %21, align 8
  %34 = icmp eq %"class.std::__1::unique_ptr.115"* %32, %33
  br i1 %34, label %70, label %35

35:                                               ; preds = %27, %67
  %36 = phi float [ %43, %67 ], [ 0.000000e+00, %27 ]
  %37 = phi %"class.std::__1::unique_ptr.115"* [ %68, %67 ], [ %32, %27 ]
  %38 = phi float [ %45, %67 ], [ 0.000000e+00, %27 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #15
  store float 0xFFFFFFFFE0000000, float* %23, align 4
  store float 0xFFFFFFFFE0000000, float* %24, align 4
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %37, i64 0, i32 0, i32 0, i32 0
  %40 = load %class.CPVT_Section*, %class.CPVT_Section** %39, align 8
  call void @_ZN12CPVT_Section14GetSectionSizeEf(%class.CFX_STemplate* nonnull sret %2, %class.CPVT_Section* %40, float %28) #15
  %41 = load float, float* %23, align 4
  %42 = fcmp olt float %41, %36
  %43 = select i1 %42, float %36, float %41
  %44 = load float, float* %24, align 4
  %45 = fadd float %38, %44
  %46 = load float, float* %7, align 8
  %47 = load float, float* %9, align 8
  %48 = fsub float %46, %47
  %49 = fcmp olt float %48, %43
  br i1 %49, label %50, label %56

50:                                               ; preds = %35
  %51 = fsub float %43, %48
  %52 = fpext float %51 to double
  %53 = fcmp olt double %52, 1.000000e-04
  %54 = fcmp ogt double %52, -1.000000e-04
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %72

56:                                               ; preds = %50, %35
  %57 = load float, float* %25, align 4
  %58 = load float, float* %26, align 4
  %59 = fsub float %57, %58
  %60 = fcmp ogt float %45, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %56
  %62 = fsub float %45, %59
  %63 = fpext float %62 to double
  %64 = fcmp olt double %63, 1.000000e-04
  %65 = fcmp ogt double %63, -1.000000e-04
  %66 = and i1 %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %61, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %37, i64 1
  %69 = icmp eq %"class.std::__1::unique_ptr.115"* %68, %33
  br i1 %69, label %70, label %35

70:                                               ; preds = %67, %27
  %71 = add nsw i32 %29, 1
  br label %74

72:                                               ; preds = %50, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #15
  %73 = add nsw i32 %29, -1
  br label %74

74:                                               ; preds = %70, %72
  %75 = phi i32 [ %31, %72 ], [ %71, %70 ]
  %76 = phi i32 [ %73, %72 ], [ %30, %70 ]
  %77 = add nsw i32 %76, %75
  %78 = sdiv i32 %77, 2
  %79 = icmp sgt i32 %75, %76
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds [25 x i8], [25 x i8]* @_ZN12_GLOBAL__N_114kFontSizeStepsE, i64 0, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = uitofp i8 %82 to float
  br i1 %79, label %84, label %27

84:                                               ; preds = %74, %1
  %85 = phi float [ 0.000000e+00, %1 ], [ %83, %74 ]
  ret float %85
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN17CPVT_VariableText17RearrangeSectionsERK14CPVT_WordRange(%class.CPVT_VariableText* nocapture readonly, %struct.CPVT_WordRange* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca <2 x float>, align 8
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  %8 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 1
  %9 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  %10 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 1
  store <2 x float> zeroinitializer, <2 x float>* %3, align 8
  store <2 x float> zeroinitializer, <2 x float>* %4, align 8
  %11 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11
  %12 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.115"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.113"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ult i64 %18, 2147483648
  %20 = inttoptr i64 %16 to %"class.std::__1::unique_ptr.115"*
  br i1 %19, label %22, label %21, !prof !3

21:                                               ; preds = %2
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %2
  %23 = trunc i64 %18 to i32
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %41

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %11, i64 0, i32 0, i32 0
  %27 = bitcast <2 x float>* %5 to i8*
  %28 = bitcast <2 x float>* %6 to i8*
  %29 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 1
  %30 = getelementptr inbounds <2 x float>, <2 x float>* %6, i64 0, i64 1
  %31 = bitcast <2 x float>* %5 to i64*
  %32 = bitcast <2 x float>* %6 to i64*
  %33 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %1, i64 0, i32 1, i32 0
  %35 = bitcast <2 x float>* %3 to i64*
  %36 = bitcast <2 x float>* %4 to i64*
  %37 = and i64 %18, 4294967295
  br label %46

38:                                               ; preds = %128
  %39 = load <2 x float>, <2 x float>* %3, align 8
  %40 = load <2 x float>, <2 x float>* %4, align 8
  br label %41

41:                                               ; preds = %38, %22
  %42 = phi <2 x float> [ %40, %38 ], [ zeroinitializer, %22 ]
  %43 = phi <2 x float> [ %39, %38 ], [ zeroinitializer, %22 ]
  %44 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %43, 0
  %45 = insertvalue { <2 x float>, <2 x float> } %44, <2 x float> %42, 1
  ret { <2 x float>, <2 x float> } %45

46:                                               ; preds = %135, %25
  %47 = phi float [ 0.000000e+00, %25 ], [ %129, %135 ]
  %48 = phi float [ 0.000000e+00, %25 ], [ %130, %135 ]
  %49 = phi float [ 0.000000e+00, %25 ], [ %131, %135 ]
  %50 = phi float [ 0.000000e+00, %25 ], [ %132, %135 ]
  %51 = phi %"class.std::__1::unique_ptr.115"* [ %20, %25 ], [ %141, %135 ]
  %52 = phi i64 [ 0, %25 ], [ %133, %135 ]
  %53 = phi float [ 0.000000e+00, %25 ], [ %140, %135 ]
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %51, i64 %52, i32 0, i32 0, i32 0
  %55 = load %class.CPVT_Section*, %class.CPVT_Section** %54, align 8
  %56 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %55, i64 0, i32 0, i32 0
  %57 = trunc i64 %52 to i32
  store i32 %57, i32* %56, align 8
  %58 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %55, i64 0, i32 0, i32 1
  store i32 -1, i32* %58, align 4
  %59 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %55, i64 0, i32 0, i32 2
  store i32 -1, i32* %59, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %60 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %55, i64 0, i32 1
  %61 = bitcast %class.CPVT_FloatRect* %60 to i64*
  %62 = load i64, i64* %61, align 4
  store i64 %62, i64* %31, align 8
  %63 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %55, i64 0, i32 1, i32 0, i32 2
  %64 = bitcast float* %63 to i64*
  %65 = load i64, i64* %64, align 4
  store i64 %65, i64* %32, align 8
  %66 = load i32, i32* %33, align 4
  %67 = sext i32 %66 to i64
  %68 = icmp slt i64 %52, %67
  %69 = lshr i64 %65, 32
  %70 = trunc i64 %69 to i32
  %71 = bitcast i32 %70 to float
  %72 = lshr i64 %62, 32
  %73 = trunc i64 %72 to i32
  %74 = bitcast i32 %73 to float
  br i1 %68, label %98, label %75

75:                                               ; preds = %46
  %76 = load i32, i32* %34, align 4
  %77 = sext i32 %76 to i64
  %78 = icmp sgt i64 %52, %77
  br i1 %78, label %86, label %79

79:                                               ; preds = %75
  %80 = tail call { <2 x float>, <2 x float> } @_ZN12CPVT_Section9RearrangeEv(%class.CPVT_Section* %55) #15
  %81 = extractvalue { <2 x float>, <2 x float> } %80, 0
  %82 = extractvalue { <2 x float>, <2 x float> } %80, 1
  store <2 x float> %81, <2 x float>* %5, align 8
  store <2 x float> %82, <2 x float>* %6, align 8
  %83 = extractelement <2 x float> %82, i32 1
  %84 = fadd float %53, %83
  store float %84, float* %30, align 4
  %85 = extractelement <2 x float> %81, i32 1
  br label %92

86:                                               ; preds = %75
  %87 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %55, i64 0, i32 1, i32 0, i32 1
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %class.CPVT_Section, %class.CPVT_Section* %55, i64 0, i32 1, i32 0, i32 3
  %90 = load float, float* %89, align 4
  %91 = fsub float %88, %90
  store float %53, float* %30, align 4
  br label %92

92:                                               ; preds = %86, %79
  %93 = phi float [ %53, %86 ], [ %84, %79 ]
  %94 = phi float [ %91, %86 ], [ %85, %79 ]
  %95 = fadd float %53, %94
  store float %95, float* %29, align 4
  %96 = load i64, i64* %31, align 8
  store i64 %96, i64* %61, align 4
  %97 = load i64, i64* %32, align 8
  store i64 %97, i64* %64, align 4
  tail call void @_ZN12CPVT_Section14ResetLinePlaceEv(%class.CPVT_Section* %55) #15
  br label %98

98:                                               ; preds = %46, %92
  %99 = phi float [ %74, %46 ], [ %95, %92 ]
  %100 = phi float [ %71, %46 ], [ %93, %92 ]
  %101 = phi i64 [ %65, %46 ], [ %97, %92 ]
  %102 = phi i64 [ %62, %46 ], [ %96, %92 ]
  %103 = trunc i64 %102 to i32
  %104 = bitcast i32 %103 to float
  %105 = trunc i64 %101 to i32
  %106 = bitcast i32 %105 to float
  %107 = icmp eq i64 %52, 0
  br i1 %107, label %108, label %119

108:                                              ; preds = %98
  store i64 %102, i64* %35, align 8
  store i64 %101, i64* %36, align 8
  %109 = trunc i64 %102 to i32
  %110 = bitcast i32 %109 to float
  %111 = lshr i64 %101, 32
  %112 = trunc i64 %111 to i32
  %113 = bitcast i32 %112 to float
  %114 = trunc i64 %101 to i32
  %115 = bitcast i32 %114 to float
  %116 = lshr i64 %102, 32
  %117 = trunc i64 %116 to i32
  %118 = bitcast i32 %117 to float
  br label %128

119:                                              ; preds = %98
  %120 = fcmp olt float %50, %104
  %121 = select i1 %120, float %50, float %104
  store float %121, float* %7, align 8
  %122 = fcmp olt float %49, %100
  %123 = select i1 %122, float %49, float %100
  store float %123, float* %10, align 4
  %124 = fcmp ogt float %48, %106
  %125 = select i1 %124, float %48, float %106
  store float %125, float* %9, align 8
  %126 = fcmp olt float %99, %47
  %127 = select i1 %126, float %47, float %99
  store float %127, float* %8, align 4
  br label %128

128:                                              ; preds = %119, %108
  %129 = phi float [ %127, %119 ], [ %118, %108 ]
  %130 = phi float [ %125, %119 ], [ %115, %108 ]
  %131 = phi float [ %123, %119 ], [ %113, %108 ]
  %132 = phi float [ %121, %119 ], [ %110, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %133 = add nuw nsw i64 %52, 1
  %134 = icmp eq i64 %133, %37
  br i1 %134, label %38, label %135

135:                                              ; preds = %128
  %136 = fcmp ogt float %100, %99
  %137 = fsub float %100, %99
  %138 = fsub float %99, %100
  %139 = select i1 %136, float %137, float %138
  %140 = fadd float %53, %139
  %141 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %26, align 8
  br label %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17CPVT_VariableText8IsBiggerEf(%class.CPVT_VariableText* nocapture readonly, float) local_unnamed_addr #1 align 2 {
  %3 = alloca %class.CFX_STemplate, align 4
  %4 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 11, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.115"* %5, %7
  br i1 %8, label %53, label %9

9:                                                ; preds = %2
  %10 = bitcast %class.CFX_STemplate* %3 to i8*
  %11 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %3, i64 0, i32 0
  %12 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %3, i64 0, i32 1
  %13 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 2
  %14 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 0
  %15 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 3
  %16 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 1
  br label %17

17:                                               ; preds = %9, %49
  %18 = phi float [ 0.000000e+00, %9 ], [ %25, %49 ]
  %19 = phi %"class.std::__1::unique_ptr.115"* [ %5, %9 ], [ %50, %49 ]
  %20 = phi float [ 0.000000e+00, %9 ], [ %27, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %19, i64 0, i32 0, i32 0, i32 0
  %22 = load %class.CPVT_Section*, %class.CPVT_Section** %21, align 8
  call void @_ZN12CPVT_Section14GetSectionSizeEf(%class.CFX_STemplate* nonnull sret %3, %class.CPVT_Section* %22, float %1) #15
  %23 = load float, float* %11, align 4
  %24 = fcmp olt float %23, %18
  %25 = select i1 %24, float %18, float %23
  %26 = load float, float* %12, align 4
  %27 = fadd float %20, %26
  %28 = load float, float* %13, align 8
  %29 = load float, float* %14, align 8
  %30 = fsub float %28, %29
  %31 = fcmp olt float %30, %25
  br i1 %31, label %32, label %38

32:                                               ; preds = %17
  %33 = fsub float %25, %30
  %34 = fpext float %33 to double
  %35 = fcmp olt double %34, 1.000000e-04
  %36 = fcmp ogt double %34, -1.000000e-04
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %52

38:                                               ; preds = %32, %17
  %39 = load float, float* %15, align 4
  %40 = load float, float* %16, align 4
  %41 = fsub float %39, %40
  %42 = fcmp ogt float %27, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %38
  %44 = fsub float %27, %41
  %45 = fpext float %44 to double
  %46 = fcmp olt double %45, 1.000000e-04
  %47 = fcmp ogt double %45, -1.000000e-04
  %48 = and i1 %46, %47
  br i1 %48, label %49, label %52

49:                                               ; preds = %43, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %19, i64 1
  %51 = icmp eq %"class.std::__1::unique_ptr.115"* %50, %7
  br i1 %51, label %53, label %17

52:                                               ; preds = %43, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  br label %53

53:                                               ; preds = %49, %2, %52
  %54 = phi i1 [ true, %52 ], [ false, %2 ], [ false, %49 ]
  ret i1 %54
}

declare void @_ZN12CPVT_Section14GetSectionSizeEf(%class.CFX_STemplate* sret, %class.CPVT_Section*, float) local_unnamed_addr #5

declare { <2 x float>, <2 x float> } @_ZN12CPVT_Section9RearrangeEv(%class.CPVT_Section*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.CPVT_VariableText::Iterator"* @_ZN17CPVT_VariableText11GetIteratorEv(%class.CPVT_VariableText*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 13
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.CPVT_VariableText::Iterator"*, %"class.CPVT_VariableText::Iterator"** %3, align 8
  %5 = icmp eq %"class.CPVT_VariableText::Iterator"* %4, null
  br i1 %5, label %6, label %19

6:                                                ; preds = %1
  %7 = ptrtoint %class.CPVT_VariableText* %0 to i64
  %8 = tail call i8* @_Znwm(i64 24) #14
  %9 = bitcast i8* %8 to i32*
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to i64*
  store i64 %7, i64* %15, align 8
  %16 = ptrtoint i8* %8 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.122"* %2 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast i8* %8 to %"class.CPVT_VariableText::Iterator"*
  br label %19

19:                                               ; preds = %1, %6
  %20 = phi %"class.CPVT_VariableText::Iterator"* [ %4, %1 ], [ %18, %6 ]
  ret %"class.CPVT_VariableText::Iterator"* %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17CPVT_VariableText11SetProviderEPNS_8ProviderE(%class.CPVT_VariableText* nocapture, %"class.CPVT_VariableText::Provider"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 12, i32 0
  store %"class.CPVT_VariableText::Provider"* %1, %"class.CPVT_VariableText::Provider"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK17CPVT_VariableText10GetBTPointEv(%class.CFX_PTemplate* noalias nocapture sret, %class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %1, i64 0, i32 14, i32 0
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %1, i64 0, i32 14, i32 3
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %class.CFX_PTemplate* %0 to i32*
  store i32 %5, i32* %9, align 4
  %10 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  %11 = bitcast float* %10 to i32*
  store i32 %8, i32* %11, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK17CPVT_VariableText10GetETPointEv(%class.CFX_PTemplate* noalias nocapture sret, %class.CPVT_VariableText* nocapture readonly) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %1, i64 0, i32 14, i32 2
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %1, i64 0, i32 14, i32 1
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %class.CFX_PTemplate* %0 to i32*
  store i32 %5, i32* %9, align 4
  %10 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  %11 = bitcast float* %10 to i32*
  store i32 %8, i32* %11, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK17CPVT_VariableText7OutToInERK13CFX_FloatRect(%class.CPVT_VariableText* nocapture readonly, %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 3
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 0
  %8 = load float, float* %7, align 8, !noalias !75
  %9 = getelementptr inbounds %class.CPVT_VariableText, %class.CPVT_VariableText* %0, i64 0, i32 14, i32 3
  %10 = fsub float %4, %8
  %11 = load float, float* %9, align 4, !noalias !80
  %12 = fsub float %11, %6
  %13 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fsub float %14, %8
  %18 = fsub float %11, %16
  %19 = insertelement <2 x float> undef, float %10, i32 0
  %20 = insertelement <2 x float> %19, float %18, i32 1
  %21 = insertelement <2 x float> undef, float %17, i32 0
  %22 = insertelement <2 x float> %21, float %12, i32 1
  %23 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %20, 0
  %24 = insertvalue { <2 x float>, <2 x float> } %23, <2 x float> %22, 1
  ret { <2 x float>, <2 x float> } %24
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN12CPVT_SectionC1EP17CPVT_VariableText(%class.CPVT_Section*, %class.CPVT_VariableText*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrI12CPVT_SectionNS_14default_deleteIS2_EEEERNS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr.115"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.115"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.115"* %6 to i64
  br i1 %7, label %9, label %179

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.115"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.115"* %13 to i64
  br i1 %14, label %16, label %46

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.115"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.115"* %11, %4
  br i1 %23, label %42, label %24

24:                                               ; preds = %16, %36
  %25 = phi %"class.std::__1::unique_ptr.115"* [ %38, %36 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.115"* [ %37, %36 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.115"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %class.CPVT_Section*, %class.CPVT_Section** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.115"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %class.CPVT_Section* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  tail call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %31) #15
  %35 = bitcast %class.CPVT_Section* %31 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %34, %24
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %26, i64 1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %25, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr.115"* %37, %4
  br i1 %39, label %40, label %24

40:                                               ; preds = %36
  %41 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %10, align 8
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi %"class.std::__1::unique_ptr.115"* [ %4, %16 ], [ %41, %40 ]
  %44 = phi %"class.std::__1::unique_ptr.115"* [ %22, %16 ], [ %38, %40 ]
  store %"class.std::__1::unique_ptr.115"* %44, %"class.std::__1::unique_ptr.115"** %3, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %43, i64 %21
  store %"class.std::__1::unique_ptr.115"* %45, %"class.std::__1::unique_ptr.115"** %10, align 8
  br label %179

46:                                               ; preds = %9
  %47 = bitcast %"class.std::__1::unique_ptr.115"** %5 to i64*
  %48 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %49 = sub i64 %8, %15
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #16
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #14
  %59 = bitcast i8* %58 to %"class.std::__1::unique_ptr.115"*
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %59, i64 %56
  %62 = ptrtoint %"class.std::__1::unique_ptr.115"* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %59, i64 %52
  %64 = ptrtoint %"class.std::__1::unique_ptr.115"* %63 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr.115"* %11 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.115"* %4 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %157, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.std::__1::unique_ptr.115"* [ %86, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %87, %77 ], [ %62, %71 ]
  %80 = phi %"class.std::__1::unique_ptr.115"* [ %88, %77 ], [ %11, %71 ]
  %81 = phi i64 [ %89, %77 ], [ %75, %71 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.115"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %82, align 8
  %85 = inttoptr i64 %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %78, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.115"* %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %80, i64 1
  %89 = add i64 %81, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %77, !llvm.loop !83

91:                                               ; preds = %77
  %92 = ptrtoint %"class.std::__1::unique_ptr.115"* %86 to i64
  br label %93

93:                                               ; preds = %71, %91
  %94 = phi %"class.std::__1::unique_ptr.115"* [ %61, %71 ], [ %86, %91 ]
  %95 = phi i64 [ %62, %71 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::unique_ptr.115"* [ %11, %71 ], [ %88, %91 ]
  %97 = icmp ult i64 %72, 56
  br i1 %97, label %152, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::unique_ptr.115"* [ %148, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %149, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::unique_ptr.115"* [ %150, %98 ], [ %96, %93 ]
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.115"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %102, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %99, i64 1
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %101, i64 1
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.115"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.115"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %99, i64 2
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %101, i64 2
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.115"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.115"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %99, i64 3
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %101, i64 3
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr.115"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.115"* %118 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %99, i64 4
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %101, i64 4
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.115"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.115"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %99, i64 5
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %101, i64 5
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::unique_ptr.115"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %132, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.115"* %130 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %99, i64 6
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %101, i64 6
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.115"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.115"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %99, i64 7
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %101, i64 7
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr.115"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %144, align 8
  %147 = bitcast %"class.std::__1::unique_ptr.115"* %142 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %99, i64 8
  %149 = ptrtoint %"class.std::__1::unique_ptr.115"* %148 to i64
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %101, i64 8
  %151 = icmp eq %"class.std::__1::unique_ptr.115"* %69, %148
  br i1 %151, label %152, label %98

152:                                              ; preds = %98, %93
  %153 = ptrtoint %"class.std::__1::unique_ptr.115"* %69 to i64
  %154 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %12, align 8
  %155 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %10, align 8
  %156 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %3, align 8
  br label %157

157:                                              ; preds = %55, %152
  %158 = phi %"class.std::__1::unique_ptr.115"* [ %156, %152 ], [ %4, %55 ]
  %159 = phi %"class.std::__1::unique_ptr.115"* [ %155, %152 ], [ %11, %55 ]
  %160 = phi %"class.std::__1::unique_ptr.115"* [ %154, %152 ], [ %13, %55 ]
  %161 = phi i64 [ %153, %152 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.115"** %10 to i64*
  store i64 %62, i64* %162, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.115"** %3 to i64*
  store i64 %161, i64* %163, align 8
  store i64 %64, i64* %47, align 8
  %164 = icmp eq %"class.std::__1::unique_ptr.115"* %158, %159
  br i1 %164, label %175, label %165

165:                                              ; preds = %157, %173
  %166 = phi %"class.std::__1::unique_ptr.115"* [ %167, %173 ], [ %158, %157 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %166, i64 -1
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %class.CPVT_Section*, %class.CPVT_Section** %168, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %168, align 8
  %170 = icmp eq %class.CPVT_Section* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %165
  tail call void @_ZN12CPVT_SectionD1Ev(%class.CPVT_Section* nonnull %169) #15
  %172 = bitcast %class.CPVT_Section* %169 to i8*
  tail call void @_ZdlPv(i8* %172) #14
  br label %173

173:                                              ; preds = %171, %165
  %174 = icmp eq %"class.std::__1::unique_ptr.115"* %167, %159
  br i1 %174, label %175, label %165

175:                                              ; preds = %173, %157
  %176 = icmp eq %"class.std::__1::unique_ptr.115"* %160, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.std::__1::unique_ptr.115"* %160 to i8*
  tail call void @_ZdlPv(i8* %178) #14
  br label %179

179:                                              ; preds = %177, %175, %42, %2
  %180 = bitcast %"class.std::__1::unique_ptr.115"** %3 to i64**
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %1, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr.115"* %1 to i64*
  %184 = load i64, i64* %183, align 8
  store %class.CPVT_Section* null, %class.CPVT_Section** %182, align 8
  store i64 %184, i64* %181, align 8
  %185 = load %"class.std::__1::unique_ptr.115"*, %"class.std::__1::unique_ptr.115"** %3, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115"* %185, i64 1
  store %"class.std::__1::unique_ptr.115"* %186, %"class.std::__1::unique_ptr.115"** %3, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!6 = distinct !{!6, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!7 = distinct !{!7, !8, !"_ZNK17CPVT_VariableText7InToOutERK13CFX_PTemplateIfE: argument 0"}
!8 = distinct !{!8, !"_ZNK17CPVT_VariableText7InToOutERK13CFX_PTemplateIfE"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!11 = distinct !{!11, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!14 = distinct !{!14, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!17 = distinct !{!17, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!20 = distinct !{!20, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!21 = distinct !{!21, !22, !"_ZNK17CPVT_VariableText7InToOutERK13CFX_PTemplateIfE: argument 0"}
!22 = distinct !{!22, !"_ZNK17CPVT_VariableText7InToOutERK13CFX_PTemplateIfE"}
!23 = !{!24, !21}
!24 = distinct !{!24, !25, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!25 = distinct !{!25, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!26 = !{i32 -2143778594}
!27 = !{i32 -2143778573}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK17CPVT_VariableText7OutToInERK13CFX_PTemplateIfE: argument 0"}
!30 = distinct !{!30, !"_ZNK17CPVT_VariableText7OutToInERK13CFX_PTemplateIfE"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!33 = distinct !{!33, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!34 = !{!35, !29}
!35 = distinct !{!35, !36, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!36 = distinct !{!36, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!39 = distinct !{!39, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!42 = distinct !{!42, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK17CPVT_VariableText7OutToInERK13CFX_PTemplateIfE: argument 0"}
!45 = distinct !{!45, !"_ZNK17CPVT_VariableText7OutToInERK13CFX_PTemplateIfE"}
!46 = !{!47, !44}
!47 = distinct !{!47, !48, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!48 = distinct !{!48, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK17CPVT_VariableText7OutToInERK13CFX_PTemplateIfE: argument 0"}
!51 = distinct !{!51, !"_ZNK17CPVT_VariableText7OutToInERK13CFX_PTemplateIfE"}
!52 = !{!53, !50}
!53 = distinct !{!53, !54, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!54 = distinct !{!54, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!55 = distinct !{!55, !56}
!56 = !{!"llvm.loop.unroll.disable"}
!57 = distinct !{!57, !56}
!58 = distinct !{!58, !56}
!59 = !{!60, !62}
!60 = distinct !{!60, !61, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!61 = distinct !{!61, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!62 = distinct !{!62, !63, !"_ZNK17CPVT_VariableText7InToOutERK13CFX_PTemplateIfE: argument 0"}
!63 = distinct !{!63, !"_ZNK17CPVT_VariableText7InToOutERK13CFX_PTemplateIfE"}
!64 = !{!65, !62}
!65 = distinct !{!65, !66, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!66 = distinct !{!66, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!67 = !{!68, !70}
!68 = distinct !{!68, !69, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!69 = distinct !{!69, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!70 = distinct !{!70, !71, !"_ZNK17CPVT_VariableText7InToOutERK13CFX_PTemplateIfE: argument 0"}
!71 = distinct !{!71, !"_ZNK17CPVT_VariableText7InToOutERK13CFX_PTemplateIfE"}
!72 = !{!73, !70}
!73 = distinct !{!73, !74, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!74 = distinct !{!74, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!75 = !{!76, !78}
!76 = distinct !{!76, !77, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!77 = distinct !{!77, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!78 = distinct !{!78, !79, !"_ZNK17CPVT_VariableText7OutToInERK13CFX_PTemplateIfE: argument 0"}
!79 = distinct !{!79, !"_ZNK17CPVT_VariableText7OutToInERK13CFX_PTemplateIfE"}
!80 = !{!81, !78}
!81 = distinct !{!81, !82, !"_ZNK17CPVT_VariableText10GetBTPointEv: argument 0"}
!82 = distinct !{!82, !"_ZNK17CPVT_VariableText10GetBTPointEv"}
!83 = distinct !{!83, !56}
