; ModuleID = '../../content/browser/renderer_host/input/passthrough_touch_event_queue.cc'
source_filename = "../../content/browser/renderer_host/input/passthrough_touch_event_queue.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i8* }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::PointF" = type { float, float }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState" = type { %"class.content::EventWithLatencyInfo", i32, i32 }
%"class.content::EventWithLatencyInfo" = type { %"class.blink::WebTouchEvent", %"class.ui::LatencyInfo" }
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.content::PassthroughTouchEventQueue" = type { %"class.content::PassthroughTouchEventQueueClient"*, i8, i8, i8, %"class.std::__1::unique_ptr", i8, i8, %"class.std::__1::unique_ptr.14", %"class.std::__1::set", i8, %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.content::TouchTimeoutHandler"* }
%"class.content::TouchTimeoutHandler" = type <{ %"class.content::PassthroughTouchEventQueue"*, %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.content::EventWithLatencyInfo", %"class.content::TimeoutMonitor", i8, i8, i8, i8, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.content::TimeoutMonitor" = type { %"class.base::RepeatingCallback", %"class.base::TimeTicks", %"class.base::OneShotTimer" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.4, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.4 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.5" }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.7", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::WebTouchEvent"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.content::PassthroughTouchEventQueueClient" = type { i32 (...)** }
%"struct.content::PassthroughTouchEventQueue::Config" = type { %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.38", [4 x i8] }>
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i32 }
%"class.content::EventWithLatencyInfo.44" = type { %"class.blink::WebGestureEvent", %"class.ui::LatencyInfo" }
%"class.blink::WebGestureEvent" = type <{ %"class.blink::WebInputEvent", i8, [3 x i8], i32, i32, [4 x i8], %union.anon.45, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>
%union.anon.45 = type { %struct.anon.51 }
%struct.anon.51 = type { i64, float, float, i32, i8, i32, i8, i8, i8, i8 }

$_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

@_ZN5blink8features21kSkipTouchEventFilterE = external global %"struct.base::Feature", align 8
@_ZN5blink8features34kSkipTouchEventFilterTypeParamNameE = external constant [0 x i8], align 1
@_ZN5blink8features43kSkipTouchEventFilterTypeParamValueDiscreteE = external constant [0 x i8], align 1
@_ZN7content26PassthroughTouchEventQueue25kSkipTouchEventFilterTypeE = hidden local_unnamed_addr constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN5blink8features21kSkipTouchEventFilterE, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features34kSkipTouchEventFilterTypeParamNameE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features43kSkipTouchEventFilterTypeParamValueDiscreteE, i32 0, i32 0) }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [39 x i8] c"PassthroughTouchEventQueue::QueueEvent\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"Event.Touch.FilteredAtPassthroughQueue\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"PassthroughTouchEventQueue::PrependTouchScrollNotification\00", align 1
@__const._ZN7content26PassthroughTouchEventQueue30PrependTouchScrollNotificationEv.touch = private unnamed_addr constant { { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } } { { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 } { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }] [{ { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } { %"class.base::flat_map" { %"class.base::internal::flat_tree" { %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } } } } } }, i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i64 -6148914691236517206 } }, align 8
@.str.3 = private unnamed_addr constant [44 x i8] c"PassthroughTouchEventQueue::ProcessTouchAck\00", align 1
@__const._ZN7content26PassthroughTouchEventQueue18AckCompletedEventsEv.event = private unnamed_addr constant { { { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } }, i32, i32 } { { { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } } { { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 } { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }] [{ { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float } { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } { %"class.base::flat_map" { %"class.base::internal::flat_tree" { %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } } } } } }, i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i64 -6148914691236517206 } }, i32 -1431655766, i32 -1431655766 }, align 8
@.str.4 = private unnamed_addr constant [75 x i8] c"../../content/browser/renderer_host/input/passthrough_touch_event_queue.cc\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"last_sent_touchevent_\00", align 1
@_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE = external constant [0 x i8], align 1
@_ZTVN5blink13WebTouchEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZTVN5blink13WebInputEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZZN7content26PassthroughTouchEventQueue10QueueEventERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateC1ERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEE = hidden unnamed_addr alias void (%"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"*, %"class.content::EventWithLatencyInfo"*), void (%"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"*, %"class.content::EventWithLatencyInfo"*)* @_ZN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateC2ERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEE
@_ZN7content26PassthroughTouchEventQueueC1EPNS_32PassthroughTouchEventQueueClientERKNS0_6ConfigE = hidden unnamed_addr alias void (%"class.content::PassthroughTouchEventQueue"*, %"class.content::PassthroughTouchEventQueueClient"*, %"struct.content::PassthroughTouchEventQueue::Config"*), void (%"class.content::PassthroughTouchEventQueue"*, %"class.content::PassthroughTouchEventQueueClient"*, %"struct.content::PassthroughTouchEventQueue::Config"*)* @_ZN7content26PassthroughTouchEventQueueC2EPNS_32PassthroughTouchEventQueueClientERKNS0_6ConfigE
@_ZN7content26PassthroughTouchEventQueueD1Ev = hidden unnamed_addr alias void (%"class.content::PassthroughTouchEventQueue"*), void (%"class.content::PassthroughTouchEventQueue"*)* @_ZN7content26PassthroughTouchEventQueueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateC2ERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEE(%"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"*, %"class.content::EventWithLatencyInfo"* dereferenceable(1336)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebInputEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast float* %4 to i8*
  %7 = bitcast float* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 32, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %8 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 1
  %10 = bitcast i32* %8 to i8*
  %11 = bitcast i32* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 1232, i1 false) #12
  %12 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 1
  tail call void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"* %12, %"class.ui::LatencyInfo"* dereferenceable(64) %13) #12
  %14 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %0, i64 0, i32 2
  store i32 0, i32* %14, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueueC2EPNS_32PassthroughTouchEventQueueClientERKNS0_6ConfigE(%"class.content::PassthroughTouchEventQueue"*, %"class.content::PassthroughTouchEventQueueClient"*, %"struct.content::PassthroughTouchEventQueue::Config"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 0
  store %"class.content::PassthroughTouchEventQueueClient"* %1, %"class.content::PassthroughTouchEventQueueClient"** %4, align 8
  %5 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 1
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 4
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 5
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 6
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 7
  %13 = bitcast %"class.std::__1::unique_ptr.14"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node_base"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 9
  %19 = getelementptr inbounds %"struct.content::PassthroughTouchEventQueue::Config", %"struct.content::PassthroughTouchEventQueue::Config"* %2, i64 0, i32 3
  %20 = load i8, i8* %19, align 1, !range !2
  store i8 %20, i8* %18, align 8
  %21 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10
  %22 = getelementptr inbounds %"struct.content::PassthroughTouchEventQueue::Config", %"struct.content::PassthroughTouchEventQueue::Config"* %2, i64 0, i32 4
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %3
  %28 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #12
  br label %35

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"struct.content::PassthroughTouchEventQueue::Config", %"struct.content::PassthroughTouchEventQueue::Config"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %32, i64 %34) #12
  br label %35

35:                                               ; preds = %27, %30
  %36 = getelementptr inbounds %"struct.content::PassthroughTouchEventQueue::Config", %"struct.content::PassthroughTouchEventQueue::Config"* %2, i64 0, i32 2
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = tail call i8* @_Znwm(i64 1520) #13
  %41 = bitcast i8* %40 to %"class.content::TouchTimeoutHandler"*
  %42 = getelementptr inbounds %"struct.content::PassthroughTouchEventQueue::Config", %"struct.content::PassthroughTouchEventQueue::Config"* %2, i64 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.content::PassthroughTouchEventQueue::Config", %"struct.content::PassthroughTouchEventQueue::Config"* %2, i64 0, i32 1, i32 0
  %45 = load i64, i64* %44, align 8
  tail call void @_ZN7content19TouchTimeoutHandlerC1EPNS_26PassthroughTouchEventQueueEN4base9TimeDeltaES4_(%"class.content::TouchTimeoutHandler"* nonnull %41, %"class.content::PassthroughTouchEventQueue"* %0, i64 %43, i64 %45) #12
  %46 = ptrtoint i8* %40 to i64
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.content::TouchTimeoutHandler"*, %"class.content::TouchTimeoutHandler"** %47, align 8
  store i64 %46, i64* %9, align 8
  %49 = icmp eq %"class.content::TouchTimeoutHandler"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %39
  tail call void @_ZN7content19TouchTimeoutHandlerD1Ev(%"class.content::TouchTimeoutHandler"* nonnull %48) #12
  %51 = bitcast %"class.content::TouchTimeoutHandler"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %39, %50, %35
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueueD2Ev(%"class.content::PassthroughTouchEventQueue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0
  %12 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  tail call void @_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %11, %"class.std::__1::__tree_node"* %14) #12
  %15 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %16 = load %"class.blink::WebTouchEvent"*, %"class.blink::WebTouchEvent"** %15, align 8
  store %"class.blink::WebTouchEvent"* null, %"class.blink::WebTouchEvent"** %15, align 8
  %17 = icmp eq %"class.blink::WebTouchEvent"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %10
  %19 = bitcast %"class.blink::WebTouchEvent"* %16 to void (%"class.blink::WebTouchEvent"*)***
  %20 = load void (%"class.blink::WebTouchEvent"*)**, void (%"class.blink::WebTouchEvent"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::WebTouchEvent"*)*, void (%"class.blink::WebTouchEvent"*)** %20, i64 1
  %22 = load void (%"class.blink::WebTouchEvent"*)*, void (%"class.blink::WebTouchEvent"*)** %21, align 8
  tail call void %22(%"class.blink::WebTouchEvent"* nonnull %16) #12
  br label %23

23:                                               ; preds = %10, %18
  %24 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.content::TouchTimeoutHandler"*, %"class.content::TouchTimeoutHandler"** %24, align 8
  store %"class.content::TouchTimeoutHandler"* null, %"class.content::TouchTimeoutHandler"** %24, align 8
  %26 = icmp eq %"class.content::TouchTimeoutHandler"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  tail call void @_ZN7content19TouchTimeoutHandlerD1Ev(%"class.content::TouchTimeoutHandler"* nonnull %25) #12
  %28 = bitcast %"class.content::TouchTimeoutHandler"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %23, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue33SendTouchCancelEventForTouchEventERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEE(%"class.content::PassthroughTouchEventQueue"*, %"class.content::EventWithLatencyInfo"* dereferenceable(1336)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.content::EventWithLatencyInfo", align 8
  %4 = bitcast %"class.content::EventWithLatencyInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1336, i8* nonnull %4) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } }* @__const._ZN7content26PassthroughTouchEventQueue30PrependTouchScrollNotificationEv.touch to i8*), i64 1336, i1 false)
  %5 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast float* %6 to i8*
  %9 = bitcast float* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %10 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 1
  %12 = bitcast i32* %10 to i8*
  %13 = bitcast i32* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 1232, i1 false) #12
  %14 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 1
  call void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"* %14, %"class.ui::LatencyInfo"* dereferenceable(64) %15) #12
  %16 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  call void @_ZN7content19WebTouchEventTraits23ResetTypeAndTouchStatesEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE(i32 31, i64 %18, %"class.blink::WebTouchEvent"* nonnull %16) #12
  call void @_ZN7content26PassthroughTouchEventQueue25SendTouchEventImmediatelyEPNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEb(%"class.content::PassthroughTouchEventQueue"* %0, %"class.content::EventWithLatencyInfo"* nonnull %3, i1 zeroext false)
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %14) #12
  call void @llvm.lifetime.end.p0i8(i64 1336, i8* nonnull %4) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7content19WebTouchEventTraits23ResetTypeAndTouchStatesEN5blink5mojom9EventTypeEN4base9TimeTicksEPNS1_13WebTouchEventE(i32, i64, %"class.blink::WebTouchEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue25SendTouchEventImmediatelyEPNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEb(%"class.content::PassthroughTouchEventQueue"*, %"class.content::EventWithLatencyInfo"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", align 8
  %6 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 4
  %10 = load i32, i32* %9, align 8
  br i1 %8, label %17, label %11

11:                                               ; preds = %3
  %12 = icmp eq i32 %10, 28
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 4
  br label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 3
  store i32 1, i32* %16, align 4
  br label %17

17:                                               ; preds = %3, %15
  %18 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 4
  switch i32 %10, label %143 [
    i32 28, label %19
    i32 29, label %22
  ]

19:                                               ; preds = %13, %17
  %20 = phi i32* [ %14, %13 ], [ %18, %17 ]
  %21 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 6
  store i8 1, i8* %21, align 2
  br label %140

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %24 = load %"class.blink::WebTouchEvent"*, %"class.blink::WebTouchEvent"** %23, align 8
  %25 = icmp eq %"class.blink::WebTouchEvent"* %24, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.4, i64 0, i64 0), i32 262, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  %29 = load %"class.blink::WebTouchEvent"*, %"class.blink::WebTouchEvent"** %23, align 8
  br label %30

30:                                               ; preds = %22, %26
  %31 = phi %"class.blink::WebTouchEvent"* [ %24, %22 ], [ %29, %26 ]
  %32 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %31, i64 0, i32 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 28
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 6
  store i8 1, i8* %36, align 2
  %37 = load %"class.blink::WebTouchEvent"*, %"class.blink::WebTouchEvent"** %23, align 8
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi %"class.blink::WebTouchEvent"* [ %37, %35 ], [ %31, %30 ]
  %40 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %39, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %140, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %43, %132
  %49 = phi %"class.blink::WebTouchEvent"* [ %39, %43 ], [ %133, %132 ]
  %50 = phi i32 [ %45, %43 ], [ %134, %132 ]
  %51 = phi i64 [ 0, %43 ], [ %135, %132 ]
  %52 = icmp eq i32 %50, 0
  br i1 %52, label %132, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %47, align 4
  %57 = icmp eq i32 %56, %55
  br i1 %57, label %66, label %58

58:                                               ; preds = %53, %61
  %59 = phi i64 [ %65, %61 ], [ 1, %53 ]
  %60 = icmp ult i64 %59, %46
  br i1 %60, label %61, label %132

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %59, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %55
  %65 = add nuw nsw i64 %59, 1
  br i1 %64, label %66, label %58

66:                                               ; preds = %61, %53
  %67 = phi i32 [ %50, %53 ], [ %45, %61 ]
  %68 = phi i64 [ 0, %53 ], [ %59, %61 ]
  %69 = and i64 %68, 4294967295
  %70 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 0, i32 12, i32 0
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 0, i32 12, i32 0
  %73 = load float, float* %72, align 4
  %74 = fcmp oeq float %71, %73
  br i1 %74, label %75, label %132

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 0, i32 12, i32 1
  %77 = load float, float* %76, align 4
  %78 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 0, i32 12, i32 1
  %79 = load float, float* %78, align 4
  %80 = fcmp une float %77, %79
  br i1 %80, label %132, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 0, i32 11, i32 0
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 0, i32 11, i32 0
  %85 = load float, float* %84, align 4
  %86 = fcmp oeq float %83, %85
  br i1 %86, label %87, label %132

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 0, i32 11, i32 1
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 0, i32 11, i32 1
  %91 = load float, float* %90, align 4
  %92 = fcmp une float %89, %91
  br i1 %92, label %132, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 2
  %95 = load float, float* %94, align 4
  %96 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 2
  %97 = load float, float* %96, align 4
  %98 = fcmp une float %95, %97
  br i1 %98, label %132, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 3
  %101 = load float, float* %100, align 4
  %102 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 3
  %103 = load float, float* %102, align 4
  %104 = fcmp une float %101, %103
  br i1 %104, label %132, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 4
  %107 = load float, float* %106, align 4
  %108 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 4
  %109 = load float, float* %108, align 4
  %110 = fcmp une float %107, %109
  br i1 %110, label %132, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 0, i32 1
  %113 = load float, float* %112, align 4
  %114 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 0, i32 1
  %115 = load float, float* %114, align 4
  %116 = fcmp une float %113, %115
  br i1 %116, label %132, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %123, label %132

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %49, i64 0, i32 2, i64 %51, i32 0, i32 3
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %125, %127
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 2, i64 %69, i32 1
  store i32 4, i32* %130, align 4
  %131 = load %"class.blink::WebTouchEvent"*, %"class.blink::WebTouchEvent"** %23, align 8
  br label %132

132:                                              ; preds = %58, %48, %123, %66, %75, %81, %87, %93, %99, %105, %111, %117, %129
  %133 = phi %"class.blink::WebTouchEvent"* [ %49, %48 ], [ %49, %123 ], [ %49, %66 ], [ %49, %75 ], [ %49, %81 ], [ %49, %87 ], [ %49, %93 ], [ %49, %99 ], [ %49, %105 ], [ %49, %111 ], [ %49, %117 ], [ %131, %129 ], [ %49, %58 ]
  %134 = phi i32 [ 0, %48 ], [ %67, %123 ], [ %67, %66 ], [ %67, %75 ], [ %67, %81 ], [ %67, %87 ], [ %67, %93 ], [ %67, %99 ], [ %67, %105 ], [ %67, %111 ], [ %67, %117 ], [ %67, %129 ], [ %45, %58 ]
  %135 = add nuw nsw i64 %51, 1
  %136 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %133, i64 0, i32 1
  %137 = load i32, i32* %136, align 8
  %138 = zext i32 %137 to i64
  %139 = icmp ult i64 %135, %138
  br i1 %139, label %48, label %140

140:                                              ; preds = %132, %38, %19
  %141 = phi i32* [ %18, %38 ], [ %20, %19 ], [ %18, %132 ]
  %142 = load i32, i32* %141, align 8
  br label %143

143:                                              ; preds = %17, %140
  %144 = phi i32 [ %142, %140 ], [ %10, %17 ]
  %145 = icmp eq i32 %144, 32
  br i1 %145, label %171, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 7
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.blink::WebTouchEvent"*, %"class.blink::WebTouchEvent"** %148, align 8
  %150 = icmp eq %"class.blink::WebTouchEvent"* %149, null
  br i1 %150, label %160, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %149, i64 0, i32 0, i32 1
  %153 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 1
  %154 = bitcast float* %152 to i8*
  %155 = bitcast float* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 32, i1 false) #12
  %156 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %149, i64 0, i32 1
  %157 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 1
  %158 = bitcast i32* %156 to i8*
  %159 = bitcast i32* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 1232, i1 false) #12
  br label %171

160:                                              ; preds = %146
  %161 = call i8* @_Znwm(i64 1272) #13
  %162 = bitcast i8* %161 to i32 (...)***
  %163 = getelementptr inbounds i8, i8* %161, i64 8
  %164 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 1
  %165 = bitcast float* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %165, i64 32, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %166 = getelementptr inbounds i8, i8* %161, i64 40
  %167 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 1
  %168 = bitcast i32* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %168, i64 1232, i1 false) #12
  %169 = ptrtoint i8* %161 to i64
  %170 = bitcast %"class.std::__1::unique_ptr.14"* %147 to i64*
  store i64 %169, i64* %170, align 8
  br label %171

171:                                              ; preds = %143, %151, %160
  %172 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %173 = load %"class.content::TouchTimeoutHandler"*, %"class.content::TouchTimeoutHandler"** %172, align 8
  %174 = icmp eq %"class.content::TouchTimeoutHandler"* %173, null
  br i1 %174, label %176, label %175

175:                                              ; preds = %171
  call void @_ZN7content19TouchTimeoutHandler16StartIfNecessaryERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEE(%"class.content::TouchTimeoutHandler"* nonnull %173, %"class.content::EventWithLatencyInfo"* dereferenceable(1336) %1) #12
  br label %176

176:                                              ; preds = %171, %175
  br i1 %2, label %177, label %193

177:                                              ; preds = %176
  %178 = bitcast %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %178) #12
  %179 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %181 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 1
  %182 = bitcast float* %180 to i8*
  %183 = bitcast float* %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 32, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %179, align 8
  %184 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %5, i64 0, i32 0, i32 0, i32 1
  %185 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 1
  %186 = bitcast i32* %184 to i8*
  %187 = bitcast i32* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 1232, i1 false) #12
  %188 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %5, i64 0, i32 0, i32 1
  %189 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 1
  call void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"* %188, %"class.ui::LatencyInfo"* dereferenceable(64) %189) #12
  %190 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %5, i64 0, i32 2
  store i32 0, i32* %190, align 4
  %191 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0
  %192 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %191, %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* nonnull dereferenceable(1344) %5, %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* nonnull dereferenceable(1344) %5) #12
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %188) #12
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %178) #12
  br label %193

193:                                              ; preds = %177, %176
  %194 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 0
  %195 = load %"class.content::PassthroughTouchEventQueueClient"*, %"class.content::PassthroughTouchEventQueueClient"** %194, align 8
  %196 = bitcast %"class.content::PassthroughTouchEventQueueClient"* %195 to void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*)***
  %197 = load void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*)**, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*)*, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*)** %197, i64 2
  %199 = load void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*)*, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*)** %198, align 8
  call void %199(%"class.content::PassthroughTouchEventQueueClient"* %195, %"class.content::EventWithLatencyInfo"* dereferenceable(1336) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue10QueueEventERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEE(%"class.content::PassthroughTouchEventQueue"*, %"class.content::EventWithLatencyInfo"* dereferenceable(1336)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", align 8
  %5 = alloca %"class.content::EventWithLatencyInfo", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !3

9:                                                ; preds = %2
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %11 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i64 [ -6148914691236517206, %2 ], [ %14, %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), %9 ]
  %18 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %9 ]
  %19 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0
  %20 = call i32 @_ZN7content26PassthroughTouchEventQueue26FilterBeforeForwardingImplERKN5blink13WebTouchEventE(%"class.content::PassthroughTouchEventQueue"* %0, %"class.blink::WebTouchEvent"* dereferenceable(1272) %19) #12
  %21 = or i32 %20, 1
  %22 = icmp eq i32 %21, 3
  br i1 %22, label %47, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 9
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %46, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10
  %29 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0)) #12
  %30 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %32 to i64
  %37 = select i1 %33, i64 %35, i64 %36
  %38 = icmp eq i64 %29, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %27
  %40 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %28, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0), i64 %29) #12
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %39, %27
  %43 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 29
  br i1 %45, label %46, label %47

46:                                               ; preds = %42, %23
  br label %47

47:                                               ; preds = %15, %39, %42, %46
  %48 = phi i32 [ %20, %15 ], [ %20, %46 ], [ 0, %42 ], [ 0, %39 ]
  %49 = icmp eq i32 %48, 0
  %50 = load atomic i64, i64* @_ZZN7content26PassthroughTouchEventQueue10QueueEventERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %51 = inttoptr i64 %50 to %"class.base::HistogramBase"*
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 5, i32 6, i32 1) #12
  %55 = ptrtoint %"class.base::HistogramBase"* %54 to i64
  store atomic i64 %55, i64* @_ZZN7content26PassthroughTouchEventQueue10QueueEventERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %56

56:                                               ; preds = %47, %53
  %57 = phi %"class.base::HistogramBase"* [ %51, %47 ], [ %54, %53 ]
  %58 = bitcast %"class.base::HistogramBase"* %57 to void (%"class.base::HistogramBase"*, i32)***
  %59 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %59, i64 6
  %61 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %60, align 8
  call void %61(%"class.base::HistogramBase"* %57, i32 %48) #12
  br i1 %49, label %85, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 0
  %64 = load %"class.content::PassthroughTouchEventQueueClient"*, %"class.content::PassthroughTouchEventQueueClient"** %63, align 8
  %65 = bitcast %"class.content::PassthroughTouchEventQueueClient"* %64 to void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.blink::WebTouchEvent"*)***
  %66 = load void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.blink::WebTouchEvent"*)**, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.blink::WebTouchEvent"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.blink::WebTouchEvent"*)*, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.blink::WebTouchEvent"*)** %66, i64 4
  %68 = load void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.blink::WebTouchEvent"*)*, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.blink::WebTouchEvent"*)** %67, align 8
  call void %68(%"class.content::PassthroughTouchEventQueueClient"* %64, %"class.blink::WebTouchEvent"* dereferenceable(1272) %19) #12
  %69 = bitcast %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %69) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 bitcast ({ { { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } }, i32, i32 }* @__const._ZN7content26PassthroughTouchEventQueue18AckCompletedEventsEv.event to i8*), i64 1344, i1 false)
  %70 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 1
  %73 = bitcast float* %71 to i8*
  %74 = bitcast float* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 32, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %75 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %4, i64 0, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 1
  %77 = bitcast i32* %75 to i8*
  %78 = bitcast i32* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 1232, i1 false) #12
  %79 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %4, i64 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 1
  call void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"* %79, %"class.ui::LatencyInfo"* dereferenceable(64) %80) #12
  %81 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %4, i64 0, i32 2
  %82 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %4, i64 0, i32 1
  store i32 3, i32* %82, align 8
  store i32 3, i32* %81, align 4
  %83 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0
  %84 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %83, %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* nonnull dereferenceable(1344) %4, %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* nonnull dereferenceable(1344) %4) #12
  call void @_ZN7content26PassthroughTouchEventQueue18AckCompletedEventsEv(%"class.content::PassthroughTouchEventQueue"* %0)
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %79) #12
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %69) #12
  br label %98

85:                                               ; preds = %56
  %86 = bitcast %"class.content::EventWithLatencyInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1336, i8* nonnull %86) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* align 8 bitcast ({ { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } }* @__const._ZN7content26PassthroughTouchEventQueue30PrependTouchScrollNotificationEv.touch to i8*), i64 1336, i1 false)
  %87 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %5, i64 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %5, i64 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 1
  %90 = bitcast float* %88 to i8*
  %91 = bitcast float* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 32, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %92 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %5, i64 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 1
  %94 = bitcast i32* %92 to i8*
  %95 = bitcast i32* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 1232, i1 false) #12
  %96 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %5, i64 0, i32 1
  %97 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 1
  call void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"* %96, %"class.ui::LatencyInfo"* dereferenceable(64) %97) #12
  call void @_ZN7content26PassthroughTouchEventQueue25SendTouchEventImmediatelyEPNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEb(%"class.content::PassthroughTouchEventQueue"* %0, %"class.content::EventWithLatencyInfo"* nonnull %5, i1 zeroext true)
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %96) #12
  call void @llvm.lifetime.end.p0i8(i64 1336, i8* nonnull %86) #12
  br label %98

98:                                               ; preds = %85, %62
  %99 = icmp eq i8* %18, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %98
  %101 = load i8, i8* %18, align 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %104, label %103

103:                                              ; preds = %100
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %17, i64 %16) #12
  br label %104

104:                                              ; preds = %98, %100, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content26PassthroughTouchEventQueue22FilterBeforeForwardingERKN5blink13WebTouchEventE(%"class.content::PassthroughTouchEventQueue"*, %"class.blink::WebTouchEvent"* dereferenceable(1272)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN7content26PassthroughTouchEventQueue26FilterBeforeForwardingImplERKN5blink13WebTouchEventE(%"class.content::PassthroughTouchEventQueue"* %0, %"class.blink::WebTouchEvent"* dereferenceable(1272) %1)
  %4 = or i32 %3, 1
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 9
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10
  %12 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0)) #12
  %13 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0), i64 %12) #12
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %10, %22
  %26 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 29
  br i1 %28, label %29, label %30

29:                                               ; preds = %6, %25
  br label %30

30:                                               ; preds = %22, %29, %25, %2
  %31 = phi i32 [ %3, %2 ], [ %3, %29 ], [ 0, %25 ], [ 0, %22 ]
  ret i32 %31
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue18AckCompletedEventsEv(%"class.content::PassthroughTouchEventQueue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", align 8
  %3 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %120

6:                                                ; preds = %1
  store i8 1, i8* %3, align 1
  %7 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %117, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2 to i8*
  %14 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast float* %15 to i8*
  %17 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast i32* %17 to i8*
  %19 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 1
  %21 = bitcast i32* %20 to i64*
  %22 = bitcast %"class.std::__1::set"* %7 to i64*
  %23 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0
  %25 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 2
  %26 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 0, i32 4
  %28 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 5
  %30 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 0
  br label %31

31:                                               ; preds = %12, %114
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 4
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"*
  %35 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %34, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %117, label %38

38:                                               ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %13) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast ({ { { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } }, i32, i32 }* @__const._ZN7content26PassthroughTouchEventQueue18AckCompletedEventsEv.event to i8*), i64 1344, i1 false)
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 5
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %40, i64 32, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 9
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %42, i64 1232, i1 false) #12
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 163
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to %"class.ui::LatencyInfo"*
  call void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"* %19, %"class.ui::LatencyInfo"* dereferenceable(64) %44) #12
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 171
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %21, align 8
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 1, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %59

51:                                               ; preds = %38
  %52 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 2
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_end_node"**
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %52
  br i1 %58, label %75, label %66

59:                                               ; preds = %38, %59
  %60 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %49, %38 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %59

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0
  br label %75

66:                                               ; preds = %51, %66
  %67 = phi %"class.std::__1::__tree_end_node"** [ %70, %66 ], [ %54, %51 ]
  %68 = bitcast %"class.std::__1::__tree_end_node"** %67 to %"class.std::__1::__tree_node_base"**
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, %69
  br i1 %74, label %75, label %66

75:                                               ; preds = %66, %64, %51
  %76 = phi %"class.std::__1::__tree_end_node"* [ %65, %64 ], [ %55, %51 ], [ %71, %66 ]
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %78 = icmp eq %"class.std::__1::__tree_end_node"* %77, %32
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = ptrtoint %"class.std::__1::__tree_end_node"* %76 to i64
  store i64 %80, i64* %22, align 8
  br label %81

81:                                               ; preds = %75, %79
  %82 = load i64, i64* %9, align 8
  %83 = add i64 %82, -1
  store i64 %83, i64* %9, align 8
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %85 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %84, %"class.std::__1::__tree_node_base"* %85) #12
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %44) #12
  %86 = bitcast %"class.std::__1::__tree_end_node"* %32 to i8*
  call void @_ZdlPv(i8* %86) #13
  %87 = load i32, i32* %20, align 8
  %88 = load i32, i32* %25, align 4
  %89 = load i32, i32* %27, align 8
  %90 = icmp eq i32 %89, 28
  br i1 %90, label %91, label %101

91:                                               ; preds = %81
  %92 = icmp eq i32 %88, 1
  br i1 %92, label %93, label %94

93:                                               ; preds = %91
  store i8 0, i8* %29, align 8
  br label %94

94:                                               ; preds = %93, %91
  %95 = call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* nonnull dereferenceable(1272) %26) #12
  %96 = icmp ne i32 %88, 3
  %97 = zext i1 %96 to i8
  br i1 %95, label %103, label %98

98:                                               ; preds = %94
  %99 = load i8, i8* %28, align 1, !range !2
  %100 = or i8 %99, %97
  br label %103

101:                                              ; preds = %81
  %102 = call zeroext i1 @_ZN7content19WebTouchEventTraits18IsTouchSequenceEndERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* nonnull dereferenceable(1272) %26) #12
  br i1 %102, label %103, label %105

103:                                              ; preds = %101, %94, %98
  %104 = phi i8 [ %100, %98 ], [ %97, %94 ], [ 0, %101 ]
  store i8 %104, i8* %28, align 1
  br label %105

105:                                              ; preds = %103, %101
  %106 = load i32, i32* %27, align 8
  %107 = icmp eq i32 %106, 32
  br i1 %107, label %114, label %108

108:                                              ; preds = %105
  %109 = load %"class.content::PassthroughTouchEventQueueClient"*, %"class.content::PassthroughTouchEventQueueClient"** %30, align 8
  %110 = bitcast %"class.content::PassthroughTouchEventQueueClient"* %109 to void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)***
  %111 = load void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)**, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)*, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)** %111, i64 3
  %113 = load void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)*, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)** %112, align 8
  call void %113(%"class.content::PassthroughTouchEventQueueClient"* %109, %"class.content::EventWithLatencyInfo"* nonnull dereferenceable(1336) %24, i32 %87, i32 %88) #12
  br label %114

114:                                              ; preds = %105, %108
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %19) #12
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %13) #12
  %115 = load i64, i64* %9, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %31

117:                                              ; preds = %114, %31, %6
  %118 = icmp eq i8* %3, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %117
  store i8 0, i8* %3, align 1
  br label %120

120:                                              ; preds = %119, %117, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue30PrependTouchScrollNotificationEv(%"class.content::PassthroughTouchEventQueue"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.content::EventWithLatencyInfo", align 8
  %4 = alloca %"class.ui::LatencyInfo", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !3

8:                                                ; preds = %1
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %10 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi i64 [ -6148914691236517206, %1 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %8 ]
  %18 = bitcast %"class.content::EventWithLatencyInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1336, i8* nonnull %18) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 bitcast ({ { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } }* @__const._ZN7content26PassthroughTouchEventQueue30PrependTouchScrollNotificationEv.touch to i8*), i64 1336, i1 false)
  %19 = call i64 @_ZN2ui15EventTimeForNowEv() #12
  %20 = bitcast %"class.ui::LatencyInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %20) #12
  call void @_ZN2ui11LatencyInfoC1Ev(%"class.ui::LatencyInfo"* nonnull %4) #12
  %21 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 0, i32 1
  store float 1.000000e+00, float* %22, align 8
  %23 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  store i64 %19, i64* %25, align 8
  %26 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 0, i32 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %27 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> <i32 32, i32 0, i32 0, i32 0>, <4 x i32>* %27, align 8
  %28 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 1
  store float 0x7FF8000000000000, float* %28, align 4
  %29 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 2
  %30 = bitcast i32* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 16, i1 false) #12
  %31 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 6
  store i32 -1, i32* %31, align 4
  %32 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 7
  %33 = bitcast i32* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 13, i1 false) #12
  %34 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 0, i32 0, i32 11
  %35 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 1
  %36 = bitcast %"class.gfx::PointF"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %35, align 4
  %37 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 2
  %38 = bitcast i32* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 16, i1 false) #12
  %39 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 6
  store i32 -1, i32* %39, align 4
  %40 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 7
  %41 = bitcast i32* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 13, i1 false) #12
  %42 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 1, i32 0, i32 11
  %43 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 1
  %44 = bitcast %"class.gfx::PointF"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %43, align 4
  %45 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 2
  %46 = bitcast i32* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 16, i1 false) #12
  %47 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 6
  store i32 -1, i32* %47, align 4
  %48 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 7
  %49 = bitcast i32* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %49, i8 0, i64 13, i1 false) #12
  %50 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 2, i32 0, i32 11
  %51 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 3, i32 0, i32 1
  %52 = bitcast %"class.gfx::PointF"* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %51, align 4
  %53 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 3, i32 0, i32 2
  %54 = bitcast i32* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 16, i1 false) #12
  %55 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 3, i32 0, i32 6
  store i32 -1, i32* %55, align 4
  %56 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 3, i32 0, i32 7
  %57 = bitcast i32* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 13, i1 false) #12
  %58 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 3, i32 0, i32 11
  %59 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 4, i32 0, i32 1
  %60 = bitcast %"class.gfx::PointF"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %59, align 4
  %61 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 4, i32 0, i32 2
  %62 = bitcast i32* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 16, i1 false) #12
  %63 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 4, i32 0, i32 6
  store i32 -1, i32* %63, align 4
  %64 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 4, i32 0, i32 7
  %65 = bitcast i32* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 13, i1 false) #12
  %66 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 4, i32 0, i32 11
  %67 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 5, i32 0, i32 1
  %68 = bitcast %"class.gfx::PointF"* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %67, align 4
  %69 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 5, i32 0, i32 2
  %70 = bitcast i32* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 16, i1 false) #12
  %71 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 5, i32 0, i32 6
  store i32 -1, i32* %71, align 4
  %72 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 5, i32 0, i32 7
  %73 = bitcast i32* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %73, i8 0, i64 13, i1 false) #12
  %74 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 5, i32 0, i32 11
  %75 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 6, i32 0, i32 1
  %76 = bitcast %"class.gfx::PointF"* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %76, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %75, align 4
  %77 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 6, i32 0, i32 2
  %78 = bitcast i32* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 16, i1 false) #12
  %79 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 6, i32 0, i32 6
  store i32 -1, i32* %79, align 4
  %80 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 6, i32 0, i32 7
  %81 = bitcast i32* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %81, i8 0, i64 13, i1 false) #12
  %82 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 6, i32 0, i32 11
  %83 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 7, i32 0, i32 1
  %84 = bitcast %"class.gfx::PointF"* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %84, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %83, align 4
  %85 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 7, i32 0, i32 2
  %86 = bitcast i32* %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %86, i8 0, i64 16, i1 false) #12
  %87 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 7, i32 0, i32 6
  store i32 -1, i32* %87, align 4
  %88 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 7, i32 0, i32 7
  %89 = bitcast i32* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %89, i8 0, i64 13, i1 false) #12
  %90 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 7, i32 0, i32 11
  %91 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 8, i32 0, i32 1
  %92 = bitcast %"class.gfx::PointF"* %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %92, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %91, align 4
  %93 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 8, i32 0, i32 2
  %94 = bitcast i32* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %94, i8 0, i64 16, i1 false) #12
  %95 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 8, i32 0, i32 6
  store i32 -1, i32* %95, align 4
  %96 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 8, i32 0, i32 7
  %97 = bitcast i32* %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %97, i8 0, i64 13, i1 false) #12
  %98 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 8, i32 0, i32 11
  %99 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 9, i32 0, i32 1
  %100 = bitcast %"class.gfx::PointF"* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %100, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %99, align 4
  %101 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 9, i32 0, i32 2
  %102 = bitcast i32* %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 16, i1 false) #12
  %103 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 9, i32 0, i32 6
  store i32 -1, i32* %103, align 4
  %104 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 9, i32 0, i32 7
  %105 = bitcast i32* %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 13, i1 false) #12
  %106 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 9, i32 0, i32 11
  %107 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 10, i32 0, i32 1
  %108 = bitcast %"class.gfx::PointF"* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %108, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %107, align 4
  %109 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 10, i32 0, i32 2
  %110 = bitcast i32* %109 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %110, i8 0, i64 16, i1 false) #12
  %111 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 10, i32 0, i32 6
  store i32 -1, i32* %111, align 4
  %112 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 10, i32 0, i32 7
  %113 = bitcast i32* %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %113, i8 0, i64 13, i1 false) #12
  %114 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 10, i32 0, i32 11
  %115 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 11, i32 0, i32 1
  %116 = bitcast %"class.gfx::PointF"* %114 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %116, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %115, align 4
  %117 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 11, i32 0, i32 2
  %118 = bitcast i32* %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %118, i8 0, i64 16, i1 false) #12
  %119 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 11, i32 0, i32 6
  store i32 -1, i32* %119, align 4
  %120 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 11, i32 0, i32 7
  %121 = bitcast i32* %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 13, i1 false) #12
  %122 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 11, i32 0, i32 11
  %123 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 12, i32 0, i32 1
  %124 = bitcast %"class.gfx::PointF"* %122 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %124, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %123, align 4
  %125 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 12, i32 0, i32 2
  %126 = bitcast i32* %125 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 16, i1 false) #12
  %127 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 12, i32 0, i32 6
  store i32 -1, i32* %127, align 4
  %128 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 12, i32 0, i32 7
  %129 = bitcast i32* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %129, i8 0, i64 13, i1 false) #12
  %130 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 12, i32 0, i32 11
  %131 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 13, i32 0, i32 1
  %132 = bitcast %"class.gfx::PointF"* %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %132, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %131, align 4
  %133 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 13, i32 0, i32 2
  %134 = bitcast i32* %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %134, i8 0, i64 16, i1 false) #12
  %135 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 13, i32 0, i32 6
  store i32 -1, i32* %135, align 4
  %136 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 13, i32 0, i32 7
  %137 = bitcast i32* %136 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %137, i8 0, i64 13, i1 false) #12
  %138 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 13, i32 0, i32 11
  %139 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 14, i32 0, i32 1
  %140 = bitcast %"class.gfx::PointF"* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %140, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %139, align 4
  %141 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 14, i32 0, i32 2
  %142 = bitcast i32* %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %142, i8 0, i64 16, i1 false) #12
  %143 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 14, i32 0, i32 6
  store i32 -1, i32* %143, align 4
  %144 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 14, i32 0, i32 7
  %145 = bitcast i32* %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %145, i8 0, i64 13, i1 false) #12
  %146 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 14, i32 0, i32 11
  %147 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 15, i32 0, i32 1
  %148 = bitcast %"class.gfx::PointF"* %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %148, i8 0, i64 36, i1 false) #12
  store float 0x7FF8000000000000, float* %147, align 4
  %149 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 15, i32 0, i32 2
  %150 = bitcast i32* %149 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %150, i8 0, i64 16, i1 false) #12
  %151 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 15, i32 0, i32 6
  store i32 -1, i32* %151, align 4
  %152 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 15, i32 0, i32 7
  %153 = bitcast i32* %152 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %153, i8 0, i64 13, i1 false) #12
  %154 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 2, i64 15, i32 0, i32 11
  %155 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 3
  %156 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 0, i32 7
  store i32 0, i32* %156, align 4
  %157 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %3, i64 0, i32 1
  %158 = bitcast %"class.gfx::PointF"* %154 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %158, i8 0, i64 39, i1 false)
  call void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"* %157, %"class.ui::LatencyInfo"* nonnull dereferenceable(64) %4) #12
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %20) #12
  store i32 1, i32* %155, align 4
  call void @_ZN7content26PassthroughTouchEventQueue25SendTouchEventImmediatelyEPNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEEb(%"class.content::PassthroughTouchEventQueue"* %0, %"class.content::EventWithLatencyInfo"* nonnull %3, i1 zeroext true)
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %157) #12
  call void @llvm.lifetime.end.p0i8(i64 1336, i8* nonnull %18) #12
  %159 = icmp eq i8* %17, null
  br i1 %159, label %164, label %160

160:                                              ; preds = %14
  %161 = load i8, i8* %17, align 1
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #12
  br label %164

164:                                              ; preds = %14, %160, %163
  ret void
}

declare i64 @_ZN2ui15EventTimeForNowEv() local_unnamed_addr #2

declare void @_ZN2ui11LatencyInfoC1Ev(%"class.ui::LatencyInfo"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue15ProcessTouchAckEN5blink5mojom22InputEventResultSourceENS2_21InputEventResultStateERKN2ui11LatencyInfoEjb(%"class.content::PassthroughTouchEventQueue"*, i32, i32, %"class.ui::LatencyInfo"* dereferenceable(64), i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11, !prof !3

11:                                               ; preds = %6
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  br label %17

17:                                               ; preds = %6, %11
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), %11 ]
  %19 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 67, i32 0), %11 ]
  %20 = phi i64 [ -6148914691236517206, %6 ], [ %16, %11 ]
  %21 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.content::TouchTimeoutHandler"*, %"class.content::TouchTimeoutHandler"** %21, align 8
  %23 = icmp eq %"class.content::TouchTimeoutHandler"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %17
  %25 = call zeroext i1 @_ZN7content19TouchTimeoutHandler17ConfirmTouchEventEjN5blink5mojom21InputEventResultStateEb(%"class.content::TouchTimeoutHandler"* nonnull %22, i32 %4, i32 %2, i1 zeroext %5) #12
  br i1 %25, label %59, label %26

26:                                               ; preds = %17, %24
  %27 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node"**
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node"* %29, null
  br i1 %30, label %59, label %31

31:                                               ; preds = %26, %31
  %32 = phi %"class.std::__1::__tree_end_node"* [ %42, %31 ], [ %27, %26 ]
  %33 = phi %"class.std::__1::__tree_node"* [ %43, %31 ], [ %29, %26 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 1, i32 0, i32 0, i32 7
  %35 = load i32, i32* %34, align 4
  %36 = icmp ult i32 %35, %4
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::__tree_node_base"** %37 to %"class.std::__1::__tree_node"**
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::__tree_node"* %33 to %"class.std::__1::__tree_node"**
  %41 = select i1 %36, %"class.std::__1::__tree_node"** %38, %"class.std::__1::__tree_node"** %40
  %42 = select i1 %36, %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"* %39
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %41, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %31

45:                                               ; preds = %31
  %46 = icmp eq %"class.std::__1::__tree_end_node"* %42, %27
  br i1 %46, label %59, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 4
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"*
  %50 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %49, i64 0, i32 0, i32 0, i32 7
  %51 = load i32, i32* %50, align 4
  %52 = icmp ugt i32 %51, %4
  br i1 %52, label %59, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 163
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.ui::LatencyInfo"*
  call void @_ZN2ui11LatencyInfo17AddNewLatencyFromERKS0_(%"class.ui::LatencyInfo"* %55, %"class.ui::LatencyInfo"* dereferenceable(64) %3) #12
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 171
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to i32*
  store i32 %1, i32* %57, align 8
  %58 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %49, i64 0, i32 2
  store i32 %2, i32* %58, align 4
  call void @_ZN7content26PassthroughTouchEventQueue18AckCompletedEventsEv(%"class.content::PassthroughTouchEventQueue"* %0)
  br label %59

59:                                               ; preds = %47, %45, %26, %53, %24
  %60 = icmp eq i8* %19, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %59
  %62 = load i8, i8* %19, align 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %18, i64 %20) #12
  br label %65

65:                                               ; preds = %59, %61, %64
  ret void
}

declare zeroext i1 @_ZN7content19TouchTimeoutHandler17ConfirmTouchEventEjN5blink5mojom21InputEventResultStateEb(%"class.content::TouchTimeoutHandler"*, i32, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2ui11LatencyInfo17AddNewLatencyFromERKS0_(%"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue17OnGestureEventAckERKNS_20EventWithLatencyInfoIN5blink15WebGestureEventEEENS2_5mojom21InputEventResultStateE(%"class.content::PassthroughTouchEventQueue"* nocapture, %"class.content::EventWithLatencyInfo.44"* nocapture readonly dereferenceable(176), i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.content::EventWithLatencyInfo.44", %"class.content::EventWithLatencyInfo.44"* %1, i64 0, i32 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 12
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = icmp eq i32 %5, 13
  %9 = icmp eq i32 %2, 1
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %14

11:                                               ; preds = %7, %3
  %12 = phi i8 [ 0, %3 ], [ 1, %7 ]
  %13 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 5
  store i8 %12, i8* %13, align 8
  br label %14

14:                                               ; preds = %11, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content26PassthroughTouchEventQueue23OnHasTouchEventHandlersEb(%"class.content::PassthroughTouchEventQueue"* nocapture, i1 zeroext) local_unnamed_addr #6 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 1
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7content26PassthroughTouchEventQueue22IsPendingAckTouchStartEv(%"class.content::PassthroughTouchEventQueue"*) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %47, label %10

10:                                               ; preds = %5, %44
  %11 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %7, %5 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 8
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 28
  br i1 %15, label %47, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 1, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_end_node"**
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, %21
  br i1 %27, label %44, label %35

28:                                               ; preds = %16, %28
  %29 = phi %"class.std::__1::__tree_node_base"* [ %31, %28 ], [ %18, %16 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0
  br label %44

35:                                               ; preds = %20, %35
  %36 = phi %"class.std::__1::__tree_end_node"** [ %39, %35 ], [ %23, %20 ]
  %37 = bitcast %"class.std::__1::__tree_end_node"** %36 to %"class.std::__1::__tree_node_base"**
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %38
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %20, %33
  %45 = phi %"class.std::__1::__tree_end_node"* [ %34, %33 ], [ %24, %20 ], [ %40, %35 ]
  %46 = icmp eq %"class.std::__1::__tree_end_node"* %45, %8
  br i1 %46, label %47, label %10

47:                                               ; preds = %44, %10, %5, %1
  %48 = phi i1 [ false, %1 ], [ false, %5 ], [ false, %44 ], [ true, %10 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue20SetAckTimeoutEnabledEb(%"class.content::PassthroughTouchEventQueue"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.content::TouchTimeoutHandler"*, %"class.content::TouchTimeoutHandler"** %3, align 8
  %5 = icmp eq %"class.content::TouchTimeoutHandler"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN7content19TouchTimeoutHandler10SetEnabledEb(%"class.content::TouchTimeoutHandler"* nonnull %4, i1 zeroext %1) #12
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN7content19TouchTimeoutHandler10SetEnabledEb(%"class.content::TouchTimeoutHandler"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue24SetIsMobileOptimizedSiteEb(%"class.content::PassthroughTouchEventQueue"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.content::TouchTimeoutHandler"*, %"class.content::TouchTimeoutHandler"** %3, align 8
  %5 = icmp eq %"class.content::TouchTimeoutHandler"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN7content19TouchTimeoutHandler19SetUseMobileTimeoutEb(%"class.content::TouchTimeoutHandler"* nonnull %4, i1 zeroext %1) #12
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @_ZN7content19TouchTimeoutHandler19SetUseMobileTimeoutEb(%"class.content::TouchTimeoutHandler"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7content26PassthroughTouchEventQueue19IsAckTimeoutEnabledEv(%"class.content::PassthroughTouchEventQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.content::TouchTimeoutHandler"*, %"class.content::TouchTimeoutHandler"** %2, align 8
  %4 = icmp eq %"class.content::TouchTimeoutHandler"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %3, i64 0, i32 8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = tail call i64 @_ZNK7content19TouchTimeoutHandler15GetTimeoutDelayEv(%"class.content::TouchTimeoutHandler"* nonnull %3) #12
  %11 = icmp ne i64 %10, 0
  br label %12

12:                                               ; preds = %1, %9, %5
  %13 = phi i1 [ false, %1 ], [ false, %5 ], [ %11, %9 ]
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7content26PassthroughTouchEventQueue5EmptyEv(%"class.content::PassthroughTouchEventQueue"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue10FlushQueueEv(%"class.content::PassthroughTouchEventQueue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", align 8
  %3 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 1, !range !2
  store i8 1, i8* %3, align 1
  %5 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 3
  store i8 1, i8* %5, align 2
  %6 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 0
  %7 = load %"class.content::PassthroughTouchEventQueueClient"*, %"class.content::PassthroughTouchEventQueueClient"** %6, align 8
  %8 = bitcast %"class.content::PassthroughTouchEventQueueClient"* %7 to void (%"class.content::PassthroughTouchEventQueueClient"*)***
  %9 = load void (%"class.content::PassthroughTouchEventQueueClient"*)**, void (%"class.content::PassthroughTouchEventQueueClient"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.content::PassthroughTouchEventQueueClient"*)*, void (%"class.content::PassthroughTouchEventQueueClient"*)** %9, i64 5
  %11 = load void (%"class.content::PassthroughTouchEventQueueClient"*)*, void (%"class.content::PassthroughTouchEventQueueClient"*)** %10, align 8
  tail call void %11(%"class.content::PassthroughTouchEventQueueClient"* %7) #12
  %12 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8
  %13 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %121, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 0
  %18 = bitcast %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2 to i8*
  %19 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast float* %20 to i8*
  %22 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast i32* %22 to i8*
  %24 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 1
  %26 = bitcast i32* %25 to i64*
  %27 = bitcast %"class.std::__1::set"* %12 to i64*
  %28 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 2
  %30 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0
  %31 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 0, i32 4
  %33 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 5
  br label %35

35:                                               ; preds = %16, %118
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %18) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 bitcast ({ { { { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, [16 x { { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, float, float, float }], i32, i8, i8, i8, [1 x i8], i32 }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } }, i32, i32 }* @__const._ZN7content26PassthroughTouchEventQueue18AckCompletedEventsEv.event to i8*), i64 1344, i1 false)
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 5
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %38, i64 32, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 9
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %40, i64 1232, i1 false) #12
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 163
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.ui::LatencyInfo"*
  call void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"* %24, %"class.ui::LatencyInfo"* dereferenceable(64) %42) #12
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 171
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %26, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 1, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %57

49:                                               ; preds = %35
  %50 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node_base"*
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 2
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_end_node"**
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, %50
  br i1 %56, label %73, label %64

57:                                               ; preds = %35, %57
  %58 = phi %"class.std::__1::__tree_node_base"* [ %60, %57 ], [ %47, %35 ]
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %57

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 0
  br label %73

64:                                               ; preds = %49, %64
  %65 = phi %"class.std::__1::__tree_end_node"** [ %68, %64 ], [ %52, %49 ]
  %66 = bitcast %"class.std::__1::__tree_end_node"** %65 to %"class.std::__1::__tree_node_base"**
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, %67
  br i1 %72, label %73, label %64

73:                                               ; preds = %64, %62, %49
  %74 = phi %"class.std::__1::__tree_end_node"* [ %63, %62 ], [ %53, %49 ], [ %69, %64 ]
  %75 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %75, %36
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = ptrtoint %"class.std::__1::__tree_end_node"* %74 to i64
  store i64 %78, i64* %27, align 8
  br label %79

79:                                               ; preds = %73, %77
  %80 = load i64, i64* %13, align 8
  %81 = add i64 %80, -1
  store i64 %81, i64* %13, align 8
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %83 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %82, %"class.std::__1::__tree_node_base"* %83) #12
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %42) #12
  %84 = bitcast %"class.std::__1::__tree_end_node"* %36 to i8*
  call void @_ZdlPv(i8* %84) #13
  %85 = load i32, i32* %29, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = load i32, i32* %25, align 8
  br label %90

89:                                               ; preds = %79
  store i32 3, i32* %25, align 8
  store i32 3, i32* %29, align 4
  br label %90

90:                                               ; preds = %87, %89
  %91 = phi i32 [ 3, %89 ], [ %88, %87 ]
  %92 = phi i32 [ 3, %89 ], [ %85, %87 ]
  %93 = load i32, i32* %32, align 8
  %94 = icmp eq i32 %93, 28
  br i1 %94, label %95, label %105

95:                                               ; preds = %90
  %96 = icmp eq i32 %92, 1
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  store i8 0, i8* %34, align 8
  br label %98

98:                                               ; preds = %97, %95
  %99 = call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* nonnull dereferenceable(1272) %31) #12
  %100 = icmp ne i32 %92, 3
  %101 = zext i1 %100 to i8
  br i1 %99, label %107, label %102

102:                                              ; preds = %98
  %103 = load i8, i8* %33, align 1, !range !2
  %104 = or i8 %103, %101
  br label %107

105:                                              ; preds = %90
  %106 = call zeroext i1 @_ZN7content19WebTouchEventTraits18IsTouchSequenceEndERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* nonnull dereferenceable(1272) %31) #12
  br i1 %106, label %107, label %109

107:                                              ; preds = %105, %98, %102
  %108 = phi i8 [ %104, %102 ], [ %101, %98 ], [ 0, %105 ]
  store i8 %108, i8* %33, align 1
  br label %109

109:                                              ; preds = %107, %105
  %110 = load i32, i32* %32, align 8
  %111 = icmp eq i32 %110, 32
  br i1 %111, label %118, label %112

112:                                              ; preds = %109
  %113 = load %"class.content::PassthroughTouchEventQueueClient"*, %"class.content::PassthroughTouchEventQueueClient"** %6, align 8
  %114 = bitcast %"class.content::PassthroughTouchEventQueueClient"* %113 to void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)***
  %115 = load void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)**, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)*, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)** %115, i64 3
  %117 = load void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)*, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)** %116, align 8
  call void %117(%"class.content::PassthroughTouchEventQueueClient"* %113, %"class.content::EventWithLatencyInfo"* nonnull dereferenceable(1336) %30, i32 %91, i32 %92) #12
  br label %118

118:                                              ; preds = %109, %112
  call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %24) #12
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %18) #12
  %119 = load i64, i64* %13, align 8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %35

121:                                              ; preds = %118, %1
  %122 = icmp eq i8* %3, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %121
  store i8 %4, i8* %3, align 1
  br label %124

124:                                              ; preds = %121, %123
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue21AckTouchEventToClientERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEENS2_5mojom22InputEventResultSourceENS7_21InputEventResultStateE(%"class.content::PassthroughTouchEventQueue"* nocapture, %"class.content::EventWithLatencyInfo"* dereferenceable(1336), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.content::EventWithLatencyInfo", %"class.content::EventWithLatencyInfo"* %1, i64 0, i32 0, i32 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 28
  br i1 %8, label %9, label %24

9:                                                ; preds = %4
  %10 = icmp eq i32 %3, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 5
  store i8 0, i8* %12, align 8
  br label %13

13:                                               ; preds = %11, %9
  %14 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %5) #12
  %15 = icmp ne i32 %3, 3
  br i1 %14, label %16, label %19

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  %18 = zext i1 %15 to i8
  store i8 %18, i8* %17, align 1
  br label %28

19:                                               ; preds = %13
  %20 = zext i1 %15 to i8
  %21 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = or i8 %22, %20
  store i8 %23, i8* %21, align 1
  br label %28

24:                                               ; preds = %4
  %25 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits18IsTouchSequenceEndERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %5) #12
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  store i8 0, i8* %27, align 1
  br label %28

28:                                               ; preds = %16, %19, %24, %26
  %29 = load i32, i32* %6, align 8
  %30 = icmp eq i32 %29, 32
  br i1 %30, label %38, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 0
  %33 = load %"class.content::PassthroughTouchEventQueueClient"*, %"class.content::PassthroughTouchEventQueueClient"** %32, align 8
  %34 = bitcast %"class.content::PassthroughTouchEventQueueClient"* %33 to void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)***
  %35 = load void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)**, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)*, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)** %35, i64 3
  %37 = load void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)*, void (%"class.content::PassthroughTouchEventQueueClient"*, %"class.content::EventWithLatencyInfo"*, i32, i32)** %36, align 8
  tail call void %37(%"class.content::PassthroughTouchEventQueueClient"* %33, %"class.content::EventWithLatencyInfo"* dereferenceable(1336) %1, i32 %2, i32 %3) #12
  br label %38

38:                                               ; preds = %28, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue18StopTimeoutMonitorEv(%"class.content::PassthroughTouchEventQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.content::TouchTimeoutHandler"*, %"class.content::TouchTimeoutHandler"** %2, align 8
  %4 = icmp eq %"class.content::TouchTimeoutHandler"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN7content19TouchTimeoutHandler18StopTimeoutMonitorEv(%"class.content::TouchTimeoutHandler"* nonnull %3) #12
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN7content19TouchTimeoutHandler18StopTimeoutMonitorEv(%"class.content::TouchTimeoutHandler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26PassthroughTouchEventQueue25UpdateTouchConsumerStatesERKN5blink13WebTouchEventENS1_5mojom21InputEventResultStateE(%"class.content::PassthroughTouchEventQueue"* nocapture, %"class.blink::WebTouchEvent"* dereferenceable(1272), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 28
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  %8 = icmp eq i32 %2, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 5
  store i8 0, i8* %10, align 8
  br label %11

11:                                               ; preds = %9, %7
  %12 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %1) #12
  %13 = icmp ne i32 %2, 3
  br i1 %12, label %14, label %17

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  %16 = zext i1 %13 to i8
  store i8 %16, i8* %15, align 1
  br label %26

17:                                               ; preds = %11
  %18 = zext i1 %13 to i8
  %19 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = or i8 %20, %18
  store i8 %21, i8* %19, align 1
  br label %26

22:                                               ; preds = %3
  %23 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits18IsTouchSequenceEndERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %1) #12
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  store i8 0, i8* %25, align 1
  br label %26

26:                                               ; preds = %22, %24, %14, %17
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN7content19TouchTimeoutHandler16StartIfNecessaryERKNS_20EventWithLatencyInfoIN5blink13WebTouchEventEEE(%"class.content::TouchTimeoutHandler"*, %"class.content::EventWithLatencyInfo"* dereferenceable(1336)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content26PassthroughTouchEventQueue26FilterBeforeForwardingImplERKN5blink13WebTouchEventE(%"class.content::PassthroughTouchEventQueue"*, %"class.blink::WebTouchEvent"* dereferenceable(1272)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.content::TouchTimeoutHandler"*, %"class.content::TouchTimeoutHandler"** %3, align 8
  %5 = icmp eq %"class.content::TouchTimeoutHandler"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN7content19TouchTimeoutHandler11FilterEventERKN5blink13WebTouchEventE(%"class.content::TouchTimeoutHandler"* nonnull %4, %"class.blink::WebTouchEvent"* dereferenceable(1272) %1) #12
  br i1 %7, label %239, label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 32
  br i1 %11, label %239, label %12

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272) %1) #12
  br i1 %13, label %14, label %52

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 5
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %18 = load %"class.blink::WebTouchEvent"*, %"class.blink::WebTouchEvent"** %17, align 8
  store %"class.blink::WebTouchEvent"* null, %"class.blink::WebTouchEvent"** %17, align 8
  %19 = icmp eq %"class.blink::WebTouchEvent"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::WebTouchEvent"* %18 to void (%"class.blink::WebTouchEvent"*)***
  %22 = load void (%"class.blink::WebTouchEvent"*)**, void (%"class.blink::WebTouchEvent"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::WebTouchEvent"*)*, void (%"class.blink::WebTouchEvent"*)** %22, i64 1
  %24 = load void (%"class.blink::WebTouchEvent"*)*, void (%"class.blink::WebTouchEvent"*)** %23, align 8
  tail call void %24(%"class.blink::WebTouchEvent"* nonnull %18) #12
  br label %25

25:                                               ; preds = %14, %20
  %26 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 3
  store i8 0, i8* %26, align 2
  %27 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 1
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %52

30:                                               ; preds = %25
  store i8 1, i8* %26, align 2
  %31 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 9
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %239, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10
  %36 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0)) #12
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %39 to i64
  %44 = select i1 %40, i64 %42, i64 %43
  %45 = icmp eq i64 %36, %44
  br i1 %45, label %46, label %49

46:                                               ; preds = %34
  %47 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %35, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0), i64 %36) #12
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %34, %46
  %50 = load i32, i32* %9, align 8
  %51 = icmp eq i32 %50, 29
  br i1 %51, label %239, label %52

52:                                               ; preds = %46, %25, %49, %12
  %53 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 3
  %54 = load i8, i8* %53, align 2, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %83, label %56

56:                                               ; preds = %52
  %57 = load i32, i32* %9, align 8
  %58 = icmp eq i32 %57, 31
  br i1 %58, label %116, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 9
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %239, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10
  %65 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0)) #12
  %66 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = zext i8 %68 to i64
  %73 = select i1 %69, i64 %71, i64 %72
  %74 = icmp eq i64 %65, %73
  br i1 %74, label %75, label %80

75:                                               ; preds = %63
  %76 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %64, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0), i64 %65) #12
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = load i32, i32* %9, align 8
  br label %80

80:                                               ; preds = %78, %63
  %81 = phi i32 [ %79, %78 ], [ %57, %63 ]
  %82 = icmp eq i32 %81, 29
  br i1 %82, label %239, label %83

83:                                               ; preds = %75, %52, %80
  %84 = load i32, i32* %9, align 8
  %85 = icmp eq i32 %84, 28
  br i1 %85, label %86, label %116

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 1
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %239

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  %92 = load i8, i8* %91, align 1, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %239

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 9
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %239, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10
  %100 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0)) #12
  %101 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %103 to i64
  %108 = select i1 %104, i64 %106, i64 %107
  %109 = icmp eq i64 %100, %108
  br i1 %109, label %110, label %116

110:                                              ; preds = %98
  %111 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %99, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0), i64 %100) #12
  %112 = icmp ne i32 %111, 0
  %113 = load i32, i32* %9, align 8
  %114 = icmp eq i32 %113, 29
  %115 = and i1 %112, %114
  br i1 %115, label %239, label %116

116:                                              ; preds = %110, %98, %56, %83
  %117 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 2
  %118 = load i8, i8* %117, align 1, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %142

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 9
  %122 = load i8, i8* %121, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %239, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10
  %126 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0)) #12
  %127 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  %131 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = zext i8 %129 to i64
  %134 = select i1 %130, i64 %132, i64 %133
  %135 = icmp eq i64 %126, %134
  br i1 %135, label %136, label %139

136:                                              ; preds = %124
  %137 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %125, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0), i64 %126) #12
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %124, %136
  %140 = load i32, i32* %9, align 8
  %141 = icmp eq i32 %140, 29
  br i1 %141, label %239, label %142

142:                                              ; preds = %136, %116, %139
  %143 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 1
  %144 = load i32, i32* %143, align 8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %239, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %148 = load i32, i32* %9, align 8
  %149 = icmp eq i32 %148, 29
  %150 = zext i32 %144 to i64
  br label %151

151:                                              ; preds = %146, %236
  %152 = phi i64 [ 0, %146 ], [ %237, %236 ]
  %153 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 4
  br i1 %155, label %236, label %156

156:                                              ; preds = %151
  %157 = load %"class.blink::WebTouchEvent"*, %"class.blink::WebTouchEvent"** %147, align 8
  %158 = icmp eq %"class.blink::WebTouchEvent"* %157, null
  br i1 %158, label %236, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 1
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %236, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %161 to i64
  br label %167

167:                                              ; preds = %163, %233
  %168 = phi i64 [ 0, %163 ], [ %234, %233 ]
  %169 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %165, %170
  br i1 %171, label %172, label %233

172:                                              ; preds = %167
  br i1 %149, label %173, label %239

173:                                              ; preds = %172
  %174 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 0, i32 12, i32 0
  %175 = load float, float* %174, align 4
  %176 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 0, i32 12, i32 0
  %177 = load float, float* %176, align 4
  %178 = fcmp oeq float %175, %177
  br i1 %178, label %179, label %239

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 0, i32 12, i32 1
  %181 = load float, float* %180, align 4
  %182 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 0, i32 12, i32 1
  %183 = load float, float* %182, align 4
  %184 = fcmp une float %181, %183
  br i1 %184, label %239, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 0, i32 11, i32 0
  %187 = load float, float* %186, align 4
  %188 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 0, i32 11, i32 0
  %189 = load float, float* %188, align 4
  %190 = fcmp oeq float %187, %189
  br i1 %190, label %191, label %239

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 0, i32 11, i32 1
  %193 = load float, float* %192, align 4
  %194 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 0, i32 11, i32 1
  %195 = load float, float* %194, align 4
  %196 = fcmp une float %193, %195
  br i1 %196, label %239, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 2
  %199 = load float, float* %198, align 4
  %200 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 2
  %201 = load float, float* %200, align 4
  %202 = fcmp une float %199, %201
  br i1 %202, label %239, label %203

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 3
  %205 = load float, float* %204, align 4
  %206 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 3
  %207 = load float, float* %206, align 4
  %208 = fcmp une float %205, %207
  br i1 %208, label %239, label %209

209:                                              ; preds = %203
  %210 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 4
  %211 = load float, float* %210, align 4
  %212 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 4
  %213 = load float, float* %212, align 4
  %214 = fcmp une float %211, %213
  br i1 %214, label %239, label %215

215:                                              ; preds = %209
  %216 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 0, i32 1
  %217 = load float, float* %216, align 4
  %218 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 0, i32 1
  %219 = load float, float* %218, align 4
  %220 = fcmp une float %217, %219
  br i1 %220, label %239, label %221

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 0, i32 2
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %223, %225
  br i1 %226, label %227, label %239

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %157, i64 0, i32 2, i64 %168, i32 0, i32 3
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 2, i64 %152, i32 0, i32 3
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %229, %231
  br i1 %232, label %236, label %239

233:                                              ; preds = %167
  %234 = add nuw nsw i64 %168, 1
  %235 = icmp ult i64 %234, %166
  br i1 %235, label %167, label %236

236:                                              ; preds = %233, %159, %227, %156, %151
  %237 = add nuw nsw i64 %152, 1
  %238 = icmp ult i64 %237, %150
  br i1 %238, label %151, label %239

239:                                              ; preds = %236, %172, %173, %179, %185, %191, %197, %203, %209, %215, %221, %227, %110, %142, %6, %8, %49, %80, %90, %86, %139, %30, %59, %94, %120
  %240 = phi i32 [ 2, %6 ], [ 0, %8 ], [ 1, %49 ], [ 1, %80 ], [ 0, %90 ], [ 0, %86 ], [ 4, %139 ], [ 1, %30 ], [ 1, %59 ], [ 1, %94 ], [ 4, %120 ], [ 3, %142 ], [ 1, %110 ], [ 3, %236 ], [ 0, %172 ], [ 0, %173 ], [ 0, %179 ], [ 0, %185 ], [ 0, %191 ], [ 0, %197 ], [ 0, %203 ], [ 0, %209 ], [ 0, %215 ], [ 0, %221 ], [ 0, %227 ]
  ret i32 %240
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content26PassthroughTouchEventQueue20ShouldFilterForEventERKN5blink13WebTouchEventE(%"class.content::PassthroughTouchEventQueue"*, %"class.blink::WebTouchEvent"* nocapture readonly dereferenceable(1272)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10
  %8 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0)) #12
  %9 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = icmp eq i64 %8, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %6
  %19 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %7, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8features38kSkipTouchEventFilterTypeParamValueAllE, i64 0, i64 0), i64 %8) #12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %6, %18
  %22 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %1, i64 0, i32 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 29
  br label %25

25:                                               ; preds = %18, %2, %21
  %26 = phi i1 [ %24, %21 ], [ true, %2 ], [ false, %18 ]
  ret i1 %26
}

declare zeroext i1 @_ZN7content19TouchTimeoutHandler11FilterEventERKN5blink13WebTouchEventE(%"class.content::TouchTimeoutHandler"*, %"class.blink::WebTouchEvent"* dereferenceable(1272)) local_unnamed_addr #2

declare zeroext i1 @_ZN7content19WebTouchEventTraits20IsTouchSequenceStartERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272)) local_unnamed_addr #2

declare zeroext i1 @_ZN7content19WebTouchEventTraits18IsTouchSequenceEndERKN5blink13WebTouchEventE(%"class.blink::WebTouchEvent"* dereferenceable(1272)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7content26PassthroughTouchEventQueue14SizeForTestingEv(%"class.content::PassthroughTouchEventQueue"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7content26PassthroughTouchEventQueue26IsTimeoutRunningForTestingEv(%"class.content::PassthroughTouchEventQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue", %"class.content::PassthroughTouchEventQueue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.content::TouchTimeoutHandler"*, %"class.content::TouchTimeoutHandler"** %2, align 8
  %4 = icmp eq %"class.content::TouchTimeoutHandler"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.content::TouchTimeoutHandler", %"class.content::TouchTimeoutHandler"* %3, i64 0, i32 7
  %7 = tail call zeroext i1 @_ZNK7content14TimeoutMonitor9IsRunningEv(%"class.content::TimeoutMonitor"* %6) #12
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i1 [ false, %1 ], [ %7, %5 ]
  ret i1 %9
}

declare void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"* dereferenceable(64)) unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZNK7content19TouchTimeoutHandler15GetTimeoutDelayEv(%"class.content::TouchTimeoutHandler"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK7content14TimeoutMonitor9IsRunningEv(%"class.content::TimeoutMonitor"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7content19TouchTimeoutHandlerD1Ev(%"class.content::TouchTimeoutHandler"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN2ui11LatencyInfoD1Ev(%"class.ui::LatencyInfo"* %10) #12
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #13
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN7content19TouchTimeoutHandlerC1EPNS_26PassthroughTouchEventQueueEN4base9TimeDeltaES4_(%"class.content::TouchTimeoutHandler"*, %"class.content::PassthroughTouchEventQueue"*, i64, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* dereferenceable(1344), %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* dereferenceable(1344)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %1, i64 0, i32 0, i32 0, i32 7
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %34, %8
  %13 = phi %"class.std::__1::__tree_node"* [ %37, %34 ], [ %6, %8 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %36, %34 ], [ %9, %8 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0, i32 7
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %11, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

24:                                               ; preds = %12
  %25 = icmp ult i32 %16, %11
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

34:                                               ; preds = %26, %18
  %35 = phi %"class.std::__1::__tree_node_base"* [ %20, %18 ], [ %28, %26 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %19, %18 ], [ %27, %26 ]
  %37 = bitcast %"class.std::__1::__tree_node_base"* %35 to %"class.std::__1::__tree_node"*
  br label %12

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %40

40:                                               ; preds = %22, %30, %32, %38
  %41 = phi %"class.std::__1::__tree_end_node"* [ %4, %38 ], [ %23, %22 ], [ %31, %30 ], [ %33, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %19, %22 ], [ %27, %30 ], [ %14, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"** %42 to %"class.std::__1::__tree_node"**
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %85

46:                                               ; preds = %40
  %47 = tail call i8* @_Znwm(i64 1376) #13, !noalias !4
  %48 = getelementptr inbounds i8, i8* %47, i64 32
  %49 = bitcast i8* %48 to i32 (...)***
  %50 = getelementptr inbounds i8, i8* %47, i64 40
  %51 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast float* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 32, i1 false) #12, !noalias !4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8, !noalias !4
  %53 = getelementptr inbounds i8, i8* %47, i64 72
  %54 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast i32* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %55, i64 1232, i1 false) #12, !noalias !4
  %56 = getelementptr inbounds i8, i8* %47, i64 1304
  %57 = bitcast i8* %56 to %"class.ui::LatencyInfo"*
  %58 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 1
  tail call void @_ZN2ui11LatencyInfoC1ERKS0_(%"class.ui::LatencyInfo"* %57, %"class.ui::LatencyInfo"* dereferenceable(64) %58) #12, !noalias !4
  %59 = getelementptr inbounds i8, i8* %47, i64 1368
  %60 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 1
  %61 = bitcast i32* %60 to i64*
  %62 = bitcast i8* %59 to i64*
  %63 = load i64, i64* %61, align 8, !noalias !4
  store i64 %63, i64* %62, align 8, !noalias !4
  %64 = bitcast i8* %47 to %"class.std::__1::__tree_node"*
  %65 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  %66 = getelementptr inbounds i8, i8* %47, i64 16
  %67 = bitcast i8* %66 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %67, align 8
  %68 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %47, i8** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %46
  %75 = ptrtoint %"class.std::__1::__tree_node_base"* %72 to i64
  %76 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %78

78:                                               ; preds = %74, %46
  %79 = phi %"class.std::__1::__tree_node_base"* [ %65, %46 ], [ %77, %74 ]
  %80 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %81, %"class.std::__1::__tree_node_base"* %79) #12
  %82 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %82, align 8
  br label %85

85:                                               ; preds = %78, %40
  %86 = phi i8 [ 1, %78 ], [ 0, %40 ]
  %87 = phi %"class.std::__1::__tree_node"* [ %64, %78 ], [ %44, %40 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 0, i32 0
  %89 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %88, 0
  %90 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %89, i8 %86, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* dereferenceable(1344), %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* dereferenceable(1344)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %1, i64 0, i32 0, i32 0, i32 7
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %34, %8
  %13 = phi %"class.std::__1::__tree_node"* [ %37, %34 ], [ %6, %8 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %36, %34 ], [ %9, %8 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0, i32 7
  %16 = load i32, i32* %15, align 4
  %17 = icmp ult i32 %11, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

24:                                               ; preds = %12
  %25 = icmp ult i32 %16, %11
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %40

34:                                               ; preds = %26, %18
  %35 = phi %"class.std::__1::__tree_node_base"* [ %20, %18 ], [ %28, %26 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %19, %18 ], [ %27, %26 ]
  %37 = bitcast %"class.std::__1::__tree_node_base"* %35 to %"class.std::__1::__tree_node"*
  br label %12

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %40

40:                                               ; preds = %22, %30, %32, %38
  %41 = phi %"class.std::__1::__tree_end_node"* [ %4, %38 ], [ %23, %22 ], [ %31, %30 ], [ %33, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %19, %22 ], [ %27, %30 ], [ %14, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"** %42 to %"class.std::__1::__tree_node"**
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %85

46:                                               ; preds = %40
  %47 = tail call i8* @_Znwm(i64 1376) #13, !noalias !7
  %48 = getelementptr inbounds i8, i8* %47, i64 32
  %49 = bitcast i8* %48 to i32 (...)***
  %50 = getelementptr inbounds i8, i8* %47, i64 40
  %51 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast float* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 32, i1 false) #12, !noalias !7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink13WebTouchEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8, !noalias !7
  %53 = getelementptr inbounds i8, i8* %47, i64 72
  %54 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast i32* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %55, i64 1232, i1 false) #12, !noalias !7
  %56 = getelementptr inbounds i8, i8* %47, i64 1304
  %57 = bitcast i8* %56 to %"class.ui::LatencyInfo"*
  %58 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 0, i32 1
  tail call void @_ZN2ui11LatencyInfoC1EOS0_(%"class.ui::LatencyInfo"* %57, %"class.ui::LatencyInfo"* dereferenceable(64) %58) #12, !noalias !7
  %59 = getelementptr inbounds i8, i8* %47, i64 1368
  %60 = getelementptr inbounds %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState", %"class.content::PassthroughTouchEventQueue::TouchEventWithLatencyInfoAndAckState"* %2, i64 0, i32 1
  %61 = bitcast i32* %60 to i64*
  %62 = bitcast i8* %59 to i64*
  %63 = load i64, i64* %61, align 8, !noalias !7
  store i64 %63, i64* %62, align 8, !noalias !7
  %64 = bitcast i8* %47 to %"class.std::__1::__tree_node"*
  %65 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  %66 = getelementptr inbounds i8, i8* %47, i64 16
  %67 = bitcast i8* %66 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %67, align 8
  %68 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %47, i8** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %46
  %75 = ptrtoint %"class.std::__1::__tree_node_base"* %72 to i64
  %76 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %78

78:                                               ; preds = %74, %46
  %79 = phi %"class.std::__1::__tree_node_base"* [ %65, %46 ], [ %77, %74 ]
  %80 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %81, %"class.std::__1::__tree_node_base"* %79) #12
  %82 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %82, align 8
  br label %85

85:                                               ; preds = %78, %40
  %86 = phi i8 [ 1, %78 ], [ 0, %40 ]
  %87 = phi %"class.std::__1::__tree_node"* [ %64, %78 ], [ %44, %40 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %87, i64 0, i32 0, i32 0
  %89 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %88, 0
  %90 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %89, i8 %86, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %90
}

declare void @_ZN2ui11LatencyInfoC1EOS0_(%"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"* dereferenceable(64)) unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE16__construct_nodeIJS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeIN7content26PassthroughTouchEventQueue36TouchEventWithLatencyInfoAndAckStateENS2_46TouchEventWithLatencyInfoAndAckStateComparatorENS_9allocatorIS3_EEE16__construct_nodeIJS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_"}
