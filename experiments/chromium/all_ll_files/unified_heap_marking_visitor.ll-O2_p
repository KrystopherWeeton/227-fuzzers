; ModuleID = '../../third_party/blink/renderer/platform/heap/impl/unified_heap_marking_visitor.cc'
source_filename = "../../third_party/blink/renderer/platform/heap/impl/unified_heap_marking_visitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.181" }
%"struct.std::__1::atomic.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.172", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.107", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type { %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event", i64, i64, i64, i64, i8, i8, %"class.base::TimeDelta", %"class.WTF::Vector" }
%"struct.blink::ThreadHeapStatsCollector::Event" = type <{ i64, i64, i64, i64, i8, [7 x i8], [31 x %"class.base::TimeDelta"], [3 x i32], i32, i32, [4 x i8], i64, i64, i64, double, %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ThreadHeapStatsObserver"**, i32, i32 }
%"class.blink::ThreadHeapStatsObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::Worklist.32"* }
%"class.blink::Worklist.32" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist.39"* }
%"class.blink::Worklist.39" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist.46"* }
%"class.blink::Worklist.46" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, i64, [16 x %"class.blink::TraceWrapperV8Reference"*] }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.101", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { i64 }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { float }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.110", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.119" }
%"class.WTF::Vector.119" = type { %"class.WTF::VectorBuffer.120" }
%"class.WTF::VectorBuffer.120" = type { %"class.WTF::VectorBufferBase.121" }
%"class.WTF::VectorBufferBase.121" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type { %"class.v8::EmbedderHeapTracer", %"class.blink::ThreadHeapStatsObserver", %"class.blink::ThreadState"*, i8, i64 }
%"class.v8::EmbedderHeapTracer" = type { i32 (...)**, %"class.v8::Isolate"* }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist.32"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.39"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.46"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.152" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::UnifiedHeapMarkingVisitorBase" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.v8::EmbedderHeapTracer"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::View", i32, [4 x i8] }>
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::UnifiedHeapMarkingVisitor" = type <{ %"class.blink::MarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitorBase.base", [4 x i8] }>
%"class.blink::UnifiedHeapMarkingVisitorBase.base" = type <{ i32 (...)**, %"class.v8::Isolate"*, %"class.v8::EmbedderHeapTracer"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::View", i32 }>
%"class.blink::ConcurrentUnifiedHeapMarkingVisitor" = type <{ %"class.blink::ConcurrentMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitorBase.base", [4 x i8] }>
%"class.blink::ConcurrentMarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.v8::BasicTracedReference.176" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink25UnifiedHeapMarkingVisitorD2Ev = comdat any

$_ZN5blink25UnifiedHeapMarkingVisitorD0Ev = comdat any

$_ZNK5blink7Visitor12IsConcurrentEv = comdat any

$_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm = comdat any

$_ZN5blink18MarkingVisitorBase5VisitEPKvNS_15TraceDescriptorE = comdat any

$_ZN5blink7Visitor9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE = comdat any

$_ZThn184_N5blink25UnifiedHeapMarkingVisitorD1Ev = comdat any

$_ZThn184_N5blink25UnifiedHeapMarkingVisitorD0Ev = comdat any

$_ZN5blink35ConcurrentUnifiedHeapMarkingVisitorD2Ev = comdat any

$_ZN5blink35ConcurrentUnifiedHeapMarkingVisitorD0Ev = comdat any

$_ZNK5blink24ConcurrentMarkingVisitor12IsConcurrentEv = comdat any

$_ZN5blink24ConcurrentMarkingVisitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm = comdat any

$_ZThn192_N5blink35ConcurrentUnifiedHeapMarkingVisitorD1Ev = comdat any

$_ZThn192_N5blink35ConcurrentUnifiedHeapMarkingVisitorD0Ev = comdat any

$_ZN5blink29UnifiedHeapMarkingVisitorBaseD2Ev = comdat any

$_ZN5blink29UnifiedHeapMarkingVisitorBaseD0Ev = comdat any

$_ZN5blink14MarkingVisitorD2Ev = comdat any

$_ZN5blink14MarkingVisitorD0Ev = comdat any

$_ZN5blink7Visitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE = comdat any

$_ZN5blink8WorklistIPKNS_23TraceWrapperV8ReferenceIN2v85ValueEEELi16ELi4EE13FlushToGlobalEi = comdat any

$_ZTVN5blink29UnifiedHeapMarkingVisitorBaseE = comdat any

$_ZTVN5blink14MarkingVisitorE = comdat any

@_ZTVN5blink29UnifiedHeapMarkingVisitorBaseE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::UnifiedHeapMarkingVisitorBase"*)* @_ZN5blink29UnifiedHeapMarkingVisitorBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::UnifiedHeapMarkingVisitorBase"*)* @_ZN5blink29UnifiedHeapMarkingVisitorBaseD0Ev to i8*)] }, comdat, align 8
@_ZTVN5blink25UnifiedHeapMarkingVisitorE = hidden unnamed_addr constant { [14 x i8*], [4 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::UnifiedHeapMarkingVisitor"*)* @_ZN5blink25UnifiedHeapMarkingVisitorD2Ev to i8*), i8* bitcast (void (%"class.blink::UnifiedHeapMarkingVisitor"*)* @_ZN5blink25UnifiedHeapMarkingVisitorD0Ev to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ to i8*), i8* bitcast (i1 (%"class.blink::Visitor"*)* @_ZNK5blink7Visitor12IsConcurrentEv to i8*), i8* bitcast (i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)* @_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase5VisitEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)* @_ZN5blink18MarkingVisitorBase9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E to i8*), i8* bitcast (void (%"class.blink::UnifiedHeapMarkingVisitor"*, %"class.blink::TraceWrapperV8Reference"*)* @_ZN5blink25UnifiedHeapMarkingVisitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE to i8*), i8* bitcast (void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)* @_ZN5blink7Visitor9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase14VisitEphemeronEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase18VisitWeakContainerEPKvPKS2_NS_15TraceDescriptorES5_PFvRKNS_14LivenessBrokerES2_ES2_ to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8**)* @_ZN5blink18MarkingVisitorBase19RegisterMovableSlotEPKPKv to i8*)], [4 x i8*] [i8* inttoptr (i64 -184 to i8*), i8* null, i8* bitcast (void (%"class.blink::UnifiedHeapMarkingVisitor"*)* @_ZThn184_N5blink25UnifiedHeapMarkingVisitorD1Ev to i8*), i8* bitcast (void (%"class.blink::UnifiedHeapMarkingVisitor"*)* @_ZThn184_N5blink25UnifiedHeapMarkingVisitorD0Ev to i8*)] }, align 8
@_ZTVN5blink35ConcurrentUnifiedHeapMarkingVisitorE = hidden unnamed_addr constant { [15 x i8*], [4 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*)* @_ZN5blink35ConcurrentUnifiedHeapMarkingVisitorD2Ev to i8*), i8* bitcast (void (%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*)* @_ZN5blink35ConcurrentUnifiedHeapMarkingVisitorD0Ev to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ to i8*), i8* bitcast (i1 (%"class.blink::ConcurrentMarkingVisitor"*)* @_ZNK5blink24ConcurrentMarkingVisitor12IsConcurrentEv to i8*), i8* bitcast (i1 (%"class.blink::ConcurrentMarkingVisitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)* @_ZN5blink24ConcurrentMarkingVisitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase5VisitEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)* @_ZN5blink18MarkingVisitorBase9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E to i8*), i8* bitcast (void (%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*, %"class.blink::TraceWrapperV8Reference"*)* @_ZN5blink35ConcurrentUnifiedHeapMarkingVisitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE to i8*), i8* bitcast (void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)* @_ZN5blink7Visitor9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase14VisitEphemeronEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase18VisitWeakContainerEPKvPKS2_NS_15TraceDescriptorES5_PFvRKNS_14LivenessBrokerES2_ES2_ to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8**)* @_ZN5blink18MarkingVisitorBase19RegisterMovableSlotEPKPKv to i8*), i8* bitcast (void (%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*)* @_ZN5blink35ConcurrentUnifiedHeapMarkingVisitor14FlushWorklistsEv to i8*)], [4 x i8*] [i8* inttoptr (i64 -192 to i8*), i8* null, i8* bitcast (void (%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*)* @_ZThn192_N5blink35ConcurrentUnifiedHeapMarkingVisitorD1Ev to i8*), i8* bitcast (void (%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*)* @_ZThn192_N5blink35ConcurrentUnifiedHeapMarkingVisitorD0Ev to i8*)] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink14MarkingVisitorE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::MarkingVisitor"*)* @_ZN5blink14MarkingVisitorD2Ev to i8*), i8* bitcast (void (%"class.blink::MarkingVisitor"*)* @_ZN5blink14MarkingVisitorD0Ev to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_ to i8*), i8* bitcast (i1 (%"class.blink::Visitor"*)* @_ZNK5blink7Visitor12IsConcurrentEv to i8*), i8* bitcast (i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)* @_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase5VisitEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)* @_ZN5blink18MarkingVisitorBase9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E to i8*), i8* bitcast (void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)* @_ZN5blink7Visitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE to i8*), i8* bitcast (void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)* @_ZN5blink7Visitor9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)* @_ZN5blink18MarkingVisitorBase14VisitEphemeronEPKvNS_15TraceDescriptorE to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)* @_ZN5blink18MarkingVisitorBase18VisitWeakContainerEPKvPKS2_NS_15TraceDescriptorES5_PFvRKNS_14LivenessBrokerES2_ES2_ to i8*), i8* bitcast (void (%"class.blink::MarkingVisitorBase"*, i8**)* @_ZN5blink18MarkingVisitorBase19RegisterMovableSlotEPKPKv to i8*)] }, comdat, align 8

@_ZN5blink29UnifiedHeapMarkingVisitorBaseC1EPNS_11ThreadStateEPN2v87IsolateEi = hidden unnamed_addr alias void (%"class.blink::UnifiedHeapMarkingVisitorBase"*, %"class.blink::ThreadState"*, %"class.v8::Isolate"*, i32), void (%"class.blink::UnifiedHeapMarkingVisitorBase"*, %"class.blink::ThreadState"*, %"class.v8::Isolate"*, i32)* @_ZN5blink29UnifiedHeapMarkingVisitorBaseC2EPNS_11ThreadStateEPN2v87IsolateEi
@_ZN5blink25UnifiedHeapMarkingVisitorC1EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEPN2v87IsolateE = hidden unnamed_addr alias void (%"class.blink::UnifiedHeapMarkingVisitor"*, %"class.blink::ThreadState"*, i32, %"class.v8::Isolate"*), void (%"class.blink::UnifiedHeapMarkingVisitor"*, %"class.blink::ThreadState"*, i32, %"class.v8::Isolate"*)* @_ZN5blink25UnifiedHeapMarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEPN2v87IsolateE
@_ZN5blink35ConcurrentUnifiedHeapMarkingVisitorC1EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEPN2v87IsolateEi = hidden unnamed_addr alias void (%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*, %"class.blink::ThreadState"*, i32, %"class.v8::Isolate"*, i32), void (%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*, %"class.blink::ThreadState"*, i32, %"class.v8::Isolate"*, i32)* @_ZN5blink35ConcurrentUnifiedHeapMarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEPN2v87IsolateEi

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink29UnifiedHeapMarkingVisitorBaseC2EPNS_11ThreadStateEPN2v87IsolateEi(%"class.blink::UnifiedHeapMarkingVisitorBase"* nocapture, %"class.blink::ThreadState"* nocapture readonly, %"class.v8::Isolate"*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitorBase", %"class.blink::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink29UnifiedHeapMarkingVisitorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitorBase", %"class.blink::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 1
  store %"class.v8::Isolate"* %2, %"class.v8::Isolate"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitorBase", %"class.blink::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %1, i64 0, i32 22, i32 0, i32 0, i32 0
  %9 = load %"class.blink::UnifiedHeapController"*, %"class.blink::UnifiedHeapController"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::UnifiedHeapController", %"class.blink::UnifiedHeapController"* %9, i64 0, i32 0
  store %"class.v8::EmbedderHeapTracer"* %10, %"class.v8::EmbedderHeapTracer"** %7, align 8
  %11 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitorBase", %"class.blink::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %13, i64 0, i32 14, i32 0, i32 0, i32 0
  %15 = bitcast %"class.blink::Worklist"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::View"* %11 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitorBase", %"class.blink::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 3, i32 1
  store i32 %3, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitorBase", %"class.blink::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 4
  store i32 %3, i32* %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29UnifiedHeapMarkingVisitorBase9VisitImplERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::UnifiedHeapMarkingVisitorBase"* nocapture readonly, %"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::TraceWrapperV8Reference"* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %50, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitorBase", %"class.blink::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %46, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitorBase", %"class.blink::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 3, i32 0
  %12 = load %"class.blink::Worklist"*, %"class.blink::Worklist"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitorBase", %"class.blink::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %12, i64 0, i32 0, i64 %15, i32 0
  %17 = load %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"* %17, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 16
  br i1 %20, label %24, label %21

21:                                               ; preds = %10
  %22 = add i64 %19, 1
  store i64 %22, i64* %18, align 8
  %23 = getelementptr inbounds %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"* %17, i64 0, i32 2, i64 %19
  store %"class.blink::TraceWrapperV8Reference"* %1, %"class.blink::TraceWrapperV8Reference"** %23, align 8
  br label %50

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %12, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %26) #7
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29, !prof !2

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool"* %25, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %30) #7
  br label %31

31:                                               ; preds = %29, %24
  %32 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %12, i64 0, i32 1, i32 1
  %33 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"* %17 to i64*
  store i64 %34, i64* %35, align 8
  %36 = ptrtoint %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"* %17 to i64
  store atomic volatile i64 %36, i64* %33 monotonic, align 8
  %37 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %12, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i64* %37, i64 1 monotonic
  %39 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %26) #7
  %40 = tail call noalias i8* @malloc(i64 144) #7
  %41 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"** %16 to i8**
  store i8* %40, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 1, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %40, i64 16
  %45 = bitcast i8* %44 to %"class.blink::TraceWrapperV8Reference"**
  store %"class.blink::TraceWrapperV8Reference"* %1, %"class.blink::TraceWrapperV8Reference"** %45, align 8
  br label %50

46:                                               ; preds = %6
  %47 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitorBase", %"class.blink::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 2
  %48 = load %"class.v8::EmbedderHeapTracer"*, %"class.v8::EmbedderHeapTracer"** %47, align 8
  %49 = bitcast %"class.blink::TraceWrapperV8Reference"* %1 to %"class.v8::BasicTracedReference.176"*
  tail call void @_ZN2v818EmbedderHeapTracer25RegisterEmbedderReferenceERKNS_20BasicTracedReferenceINS_4DataEEE(%"class.v8::EmbedderHeapTracer"* %48, %"class.v8::BasicTracedReference.176"* dereferenceable(8) %49) #7
  br label %50

50:                                               ; preds = %31, %21, %2, %46
  ret void
}

declare void @_ZN2v818EmbedderHeapTracer25RegisterEmbedderReferenceERKNS_20BasicTracedReferenceINS_4DataEEE(%"class.v8::EmbedderHeapTracer"*, %"class.v8::BasicTracedReference.176"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25UnifiedHeapMarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEPN2v87IsolateE(%"class.blink::UnifiedHeapMarkingVisitor"*, %"class.blink::ThreadState"*, i32, %"class.v8::Isolate"*) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 0
  tail call void @_ZN5blink14MarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeE(%"class.blink::MarkingVisitor"* %5, %"class.blink::ThreadState"* %1, i32 %2) #7
  %6 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink29UnifiedHeapMarkingVisitorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 1
  store %"class.v8::Isolate"* %3, %"class.v8::Isolate"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %1, i64 0, i32 22, i32 0, i32 0, i32 0
  %10 = load %"class.blink::UnifiedHeapController"*, %"class.blink::UnifiedHeapController"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::UnifiedHeapController", %"class.blink::UnifiedHeapController"* %10, i64 0, i32 0
  store %"class.v8::EmbedderHeapTracer"* %11, %"class.v8::EmbedderHeapTracer"** %8, align 8
  %12 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 3
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %14, i64 0, i32 14, i32 0, i32 0, i32 0
  %16 = bitcast %"class.blink::Worklist"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::View"* %12 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 3, i32 1
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 4
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [4 x i8*] }, { [14 x i8*], [4 x i8*] }* @_ZTVN5blink25UnifiedHeapMarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*], [4 x i8*] }, { [14 x i8*], [4 x i8*] }* @_ZTVN5blink25UnifiedHeapMarkingVisitorE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

declare void @_ZN5blink14MarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeE(%"class.blink::MarkingVisitor"*, %"class.blink::ThreadState"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference", %"class.blink::TraceWrapperV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #7
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !3

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #7
  br label %15

15:                                               ; preds = %8, %13
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 9
  %20 = load i8, i8* %19, align 1, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %30, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %24, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::MarkingVisitor"* %24 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)***
  %27 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)** %27, i64 7
  %29 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"*)** %28, align 8
  tail call void %29(%"class.blink::Visitor"* %25, %"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %0) #7
  br label %30

30:                                               ; preds = %15, %5, %22, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierEPN2v87IsolateERNS1_5LocalINS1_6ObjectEEEPKNS_15WrapperTypeInfoEPKv(%"class.v8::Isolate"* nocapture readnone, %"class.v8::Local"* nocapture readnone dereferenceable(8), %"struct.blink::WrapperTypeInfo"*, i8*) local_unnamed_addr #1 align 2 {
  %5 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %4
  %8 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %9 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %8, i64 0, i32 1
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #7
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14, !prof !3

12:                                               ; preds = %7
  %13 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %9, i8* %13) #7
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i8* [ %13, %12 ], [ %10, %7 ]
  %16 = bitcast i8* %15 to %"class.blink::ThreadState"**
  %17 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 9
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %17, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15WrapperTypeInfo5TraceEPNS_7VisitorEPKv(%"struct.blink::WrapperTypeInfo"* %2, %"class.blink::Visitor"* %24, i8* %3) #7
  br label %25

25:                                               ; preds = %14, %4, %21
  ret void
}

declare void @_ZNK5blink15WrapperTypeInfo5TraceEPNS_7VisitorEPKv(%"struct.blink::WrapperTypeInfo"*, %"class.blink::Visitor"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25UnifiedHeapMarkingVisitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::UnifiedHeapMarkingVisitor"* nocapture readonly, %"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::UnifiedHeapMarkingVisitorBase.base"* %3 to %"class.blink::UnifiedHeapMarkingVisitorBase"*
  tail call void @_ZN5blink29UnifiedHeapMarkingVisitorBase9VisitImplERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::UnifiedHeapMarkingVisitorBase"* %4, %"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink35ConcurrentUnifiedHeapMarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEPN2v87IsolateEi(%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*, %"class.blink::ThreadState"*, i32, %"class.v8::Isolate"*, i32) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ConcurrentMarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEi(%"class.blink::ConcurrentMarkingVisitor"* %6, %"class.blink::ThreadState"* %1, i32 %2, i32 %4) #7
  %7 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink29UnifiedHeapMarkingVisitorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 1
  store %"class.v8::Isolate"* %3, %"class.v8::Isolate"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 2
  %10 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %1, i64 0, i32 22, i32 0, i32 0, i32 0
  %11 = load %"class.blink::UnifiedHeapController"*, %"class.blink::UnifiedHeapController"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::UnifiedHeapController", %"class.blink::UnifiedHeapController"* %11, i64 0, i32 0
  store %"class.v8::EmbedderHeapTracer"* %12, %"class.v8::EmbedderHeapTracer"** %9, align 8
  %13 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 3
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %15, i64 0, i32 14, i32 0, i32 0, i32 0
  %17 = bitcast %"class.blink::Worklist"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::View"* %13 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 3, i32 1
  store i32 %4, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 4
  store i32 %4, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [4 x i8*] }, { [15 x i8*], [4 x i8*] }* @_ZTVN5blink35ConcurrentUnifiedHeapMarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*], [4 x i8*] }, { [15 x i8*], [4 x i8*] }* @_ZTVN5blink35ConcurrentUnifiedHeapMarkingVisitorE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  ret void
}

declare void @_ZN5blink24ConcurrentMarkingVisitorC2EPNS_11ThreadStateENS_18MarkingVisitorBase11MarkingModeEi(%"class.blink::ConcurrentMarkingVisitor"*, %"class.blink::ThreadState"*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink35ConcurrentUnifiedHeapMarkingVisitor14FlushWorklistsEv(%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ConcurrentMarkingVisitor14FlushWorklistsEv(%"class.blink::ConcurrentMarkingVisitor"* %2) #7
  %3 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 3, i32 0
  %4 = load %"class.blink::Worklist"*, %"class.blink::Worklist"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 1, i32 3, i32 1
  %6 = load i32, i32* %5, align 8
  tail call void @_ZN5blink8WorklistIPKNS_23TraceWrapperV8ReferenceIN2v85ValueEEELi16ELi4EE13FlushToGlobalEi(%"class.blink::Worklist"* %4, i32 %6) #7
  ret void
}

declare void @_ZN5blink24ConcurrentMarkingVisitor14FlushWorklistsEv(%"class.blink::ConcurrentMarkingVisitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink35ConcurrentUnifiedHeapMarkingVisitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* nocapture readonly, %"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::UnifiedHeapMarkingVisitorBase.base"* %3 to %"class.blink::UnifiedHeapMarkingVisitorBase"*
  tail call void @_ZN5blink29UnifiedHeapMarkingVisitorBase9VisitImplERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::UnifiedHeapMarkingVisitorBase"* %4, %"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25UnifiedHeapMarkingVisitorD2Ev(%"class.blink::UnifiedHeapMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14MarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %3, align 8
  %5 = icmp eq %"class.blink::HeapObjectHeader"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.blink::HeapObjectHeader"** %4 to i64
  %8 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::HeapObjectHeader"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.blink::HeapObjectHeader"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25UnifiedHeapMarkingVisitorD0Ev(%"class.blink::UnifiedHeapMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14MarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %3, align 8
  %5 = icmp eq %"class.blink::HeapObjectHeader"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.blink::HeapObjectHeader"** %4 to i64
  %8 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::HeapObjectHeader"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.blink::HeapObjectHeader"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::UnifiedHeapMarkingVisitor"* %0 to i8*
  tail call void @free(i8* %12) #7
  ret void
}

declare void @_ZN5blink18MarkingVisitorBase20RegisterWeakCallbackEPFvRKNS_14LivenessBrokerEPKvES5_(%"class.blink::MarkingVisitorBase"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Visitor12IsConcurrentEv(%"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink7Visitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm(%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18MarkingVisitorBase5VisitEPKvNS_15TraceDescriptorE(%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*) unnamed_addr #3 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = ptrtoint void (%"class.blink::Visitor"*, i8*)* %3 to i64
  %7 = getelementptr inbounds i8, i8* %2, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 acquire, align 2
  %10 = and i16 %9, 1
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %48

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 3, i32 0
  %14 = load %"class.blink::Worklist.46"*, %"class.blink::Worklist.46"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 3, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Worklist.46", %"class.blink::Worklist.46"* %14, i64 0, i32 0, i64 %17, i32 0
  %19 = load %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 16
  br i1 %22, label %26, label %23

23:                                               ; preds = %12
  %24 = add i64 %21, 1
  store i64 %24, i64* %20, align 8
  %25 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::Segment", %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19, i64 0, i32 2, i64 %21
  store i8* %2, i8** %25, align 8
  br label %99

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.blink::Worklist.46", %"class.blink::Worklist.46"* %14, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %28) #7
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31, !prof !2

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::GlobalPool", %"class.blink::Worklist<const void *, 16, 4>::GlobalPool"* %27, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %32) #7
  br label %33

33:                                               ; preds = %31, %26
  %34 = getelementptr inbounds %"class.blink::Worklist.46", %"class.blink::Worklist.46"* %14, i64 0, i32 1, i32 1
  %35 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19 to i64*
  store i64 %36, i64* %37, align 8
  %38 = ptrtoint %"class.blink::Worklist<const void *, 16, 4>::Segment"* %19 to i64
  store atomic volatile i64 %38, i64* %35 monotonic, align 8
  %39 = getelementptr inbounds %"class.blink::Worklist.46", %"class.blink::Worklist.46"* %14, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i64* %39, i64 1 monotonic
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %28) #7
  %42 = tail call noalias i8* @malloc(i64 144) #7
  %43 = bitcast %"class.blink::Worklist<const void *, 16, 4>::Segment"** %18 to i8**
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %44 to i64*
  store i64 1, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %42, i64 16
  %47 = bitcast i8* %46 to i8**
  store i8* %2, i8** %47, align 8
  br label %99

48:                                               ; preds = %4
  %49 = getelementptr inbounds i8, i8* %2, i64 -2
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = and i16 %51, 1
  %53 = icmp eq i16 %52, 0
  br i1 %53, label %54, label %99

54:                                               ; preds = %48
  %55 = or i16 %51, 1
  %56 = cmpxchg i16* %50, i16 %51, i16 %55 monotonic monotonic
  %57 = extractvalue { i16, i1 } %56, 1
  br i1 %57, label %58, label %99

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 1, i32 0
  %60 = load %"class.blink::Worklist.32"*, %"class.blink::Worklist.32"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitorBase"* %0, i64 0, i32 1, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::Worklist.32", %"class.blink::Worklist.32"* %60, i64 0, i32 0, i64 %63, i32 0
  %65 = load %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %65, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, 512
  br i1 %68, label %75, label %69

69:                                               ; preds = %58
  %70 = add i64 %67, 1
  store i64 %70, i64* %66, align 8
  %71 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %65, i64 0, i32 2, i64 %67, i32 0
  %72 = bitcast i8** %71 to i64*
  store i64 %5, i64* %72, align 8
  %73 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %65, i64 0, i32 2, i64 %67, i32 1
  %74 = bitcast void (%"class.blink::Visitor"*, i8*)** %73 to i64*
  store i64 %6, i64* %74, align 8
  br label %99

75:                                               ; preds = %58
  %76 = getelementptr inbounds %"class.blink::Worklist.32", %"class.blink::Worklist.32"* %60, i64 0, i32 1
  %77 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %77) #7
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %82, label %80, !prof !2

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool"* %76, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %81) #7
  br label %82

82:                                               ; preds = %80, %75
  %83 = getelementptr inbounds %"class.blink::Worklist.32", %"class.blink::Worklist.32"* %60, i64 0, i32 1, i32 1
  %84 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %65 to i64*
  store i64 %85, i64* %86, align 8
  %87 = ptrtoint %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"* %65 to i64
  store atomic volatile i64 %87, i64* %84 monotonic, align 8
  %88 = getelementptr inbounds %"class.blink::Worklist.32", %"class.blink::Worklist.32"* %60, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i64* %88, i64 1 monotonic
  %90 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %77) #7
  %91 = tail call noalias i8* @malloc(i64 8208) #7
  %92 = bitcast %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"** %64 to i8**
  store i8* %91, i8** %92, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 8
  %94 = bitcast i8* %93 to i64*
  store i64 1, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %91, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 %5, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %91, i64 24
  %98 = bitcast i8* %97 to i64*
  store i64 %6, i64* %98, align 8
  br label %99

99:                                               ; preds = %23, %33, %48, %54, %69, %82
  ret void
}

declare void @_ZN5blink18MarkingVisitorBase9VisitWeakEPKvS2_NS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_E(%"class.blink::MarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor9VisitRootEPKvNS_15TraceDescriptorERKN4base8LocationE(%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %7 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %7, i64 5
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8* %1, i8* %2, void (%"class.blink::Visitor"*, i8*)* %3) #7
  ret void
}

declare void @_ZN5blink18MarkingVisitorBase14VisitEphemeronEPKvNS_15TraceDescriptorE(%"class.blink::MarkingVisitorBase"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*) unnamed_addr #2

declare void @_ZN5blink18MarkingVisitorBase18VisitWeakContainerEPKvPKS2_NS_15TraceDescriptorES5_PFvRKNS_14LivenessBrokerES2_ES2_(%"class.blink::MarkingVisitorBase"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"* byval(%"struct.blink::TraceDescriptor") align 8, void (%"class.blink::LivenessBroker"*, i8*)*, i8*) unnamed_addr #2

declare void @_ZN5blink18MarkingVisitorBase19RegisterMovableSlotEPKPKv(%"class.blink::MarkingVisitorBase"*, i8**) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn184_N5blink25UnifiedHeapMarkingVisitorD1Ev(%"class.blink::UnifiedHeapMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 -1, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14MarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View"* %2, i64 9, i32 1
  %5 = bitcast i32* %4 to %"class.blink::HeapObjectHeader"***
  %6 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %5, align 8
  %7 = icmp eq %"class.blink::HeapObjectHeader"** %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.blink::HeapObjectHeader"** %6 to i64
  %10 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View"* %2, i64 10
  %11 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %"class.blink::HeapObjectHeader"** %6 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn184_N5blink25UnifiedHeapMarkingVisitorD0Ev(%"class.blink::UnifiedHeapMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::UnifiedHeapMarkingVisitor", %"class.blink::UnifiedHeapMarkingVisitor"* %0, i64 -1, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14MarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View"* %2, i64 9, i32 1
  %5 = bitcast i32* %4 to %"class.blink::HeapObjectHeader"***
  %6 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %5, align 8
  %7 = icmp eq %"class.blink::HeapObjectHeader"** %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.blink::HeapObjectHeader"** %6 to i64
  %10 = getelementptr inbounds %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View"* %2, i64 10
  %11 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %"class.blink::HeapObjectHeader"** %6 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %1, %8
  %14 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %2 to i8*
  tail call void @free(i8* %14) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink35ConcurrentUnifiedHeapMarkingVisitorD2Ev(%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ConcurrentMarkingVisitorD2Ev(%"class.blink::ConcurrentMarkingVisitor"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink35ConcurrentUnifiedHeapMarkingVisitorD0Ev(%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ConcurrentMarkingVisitorD2Ev(%"class.blink::ConcurrentMarkingVisitor"* %2) #7
  %3 = bitcast %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0 to i8*
  tail call void @free(i8* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24ConcurrentMarkingVisitor12IsConcurrentEv(%"class.blink::ConcurrentMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink24ConcurrentMarkingVisitor25DeferredTraceIfConcurrentENS_15TraceDescriptorEm(%"class.blink::ConcurrentMarkingVisitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::Worklist.80"*, %"class.blink::Worklist.80"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %6, i64 0, i32 0, i64 %9, i32 0
  %11 = load %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 64
  br i1 %14, label %20, label %15

15:                                               ; preds = %4
  %16 = add i64 %13, 1
  store i64 %16, i64* %12, align 8
  %17 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11, i64 0, i32 2, i64 %13, i32 0, i32 0
  store i8* %1, i8** %17, align 8
  %18 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11, i64 0, i32 2, i64 %13, i32 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* %2, void (%"class.blink::Visitor"*, i8*)** %18, align 8
  %19 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11, i64 0, i32 2, i64 %13, i32 1
  br label %46

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %6, i64 0, i32 1
  %22 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %22) #7
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25, !prof !2

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool"* %21, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %26) #7
  br label %27

27:                                               ; preds = %25, %20
  %28 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %6, i64 0, i32 1, i32 1
  %29 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11 to i64*
  store i64 %30, i64* %31, align 8
  %32 = ptrtoint %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"* %11 to i64
  store atomic volatile i64 %32, i64* %29 monotonic, align 8
  %33 = getelementptr inbounds %"class.blink::Worklist.80", %"class.blink::Worklist.80"* %6, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i64* %33, i64 1 monotonic
  %35 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %22) #7
  %36 = tail call noalias i8* @malloc(i64 1552) #7
  %37 = bitcast %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"** %10 to i8**
  store i8* %36, i8** %37, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 8
  %39 = bitcast i8* %38 to i64*
  store i64 1, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %36, i64 16
  %41 = bitcast i8* %40 to i8**
  store i8* %1, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %36, i64 24
  %43 = bitcast i8* %42 to void (%"class.blink::Visitor"*, i8*)**
  store void (%"class.blink::Visitor"*, i8*)* %2, void (%"class.blink::Visitor"*, i8*)** %43, align 8
  %44 = getelementptr inbounds i8, i8* %36, i64 32
  %45 = bitcast i8* %44 to i64*
  br label %46

46:                                               ; preds = %15, %27
  %47 = phi i64* [ %19, %15 ], [ %45, %27 ]
  store i64 %3, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ConcurrentMarkingVisitor", %"class.blink::ConcurrentMarkingVisitor"* %0, i64 0, i32 0, i32 9
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %49, %3
  store i64 %50, i64* %48, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn192_N5blink35ConcurrentUnifiedHeapMarkingVisitorD1Ev(%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 -1, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %2 to %"class.blink::ConcurrentMarkingVisitor"*
  tail call void @_ZN5blink24ConcurrentMarkingVisitorD2Ev(%"class.blink::ConcurrentMarkingVisitor"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn192_N5blink35ConcurrentUnifiedHeapMarkingVisitorD0Ev(%"class.blink::ConcurrentUnifiedHeapMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ConcurrentUnifiedHeapMarkingVisitor", %"class.blink::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 -1, i32 0, i32 0, i32 3
  %3 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %2 to %"class.blink::ConcurrentMarkingVisitor"*
  tail call void @_ZN5blink24ConcurrentMarkingVisitorD2Ev(%"class.blink::ConcurrentMarkingVisitor"* %3) #7
  %4 = bitcast %"class.blink::Worklist<const void *, 16, 4>::View"* %2 to i8*
  tail call void @free(i8* %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29UnifiedHeapMarkingVisitorBaseD2Ev(%"class.blink::UnifiedHeapMarkingVisitorBase"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29UnifiedHeapMarkingVisitorBaseD0Ev(%"class.blink::UnifiedHeapMarkingVisitorBase"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.blink::UnifiedHeapMarkingVisitorBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14MarkingVisitorD2Ev(%"class.blink::MarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14MarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %3, align 8
  %5 = icmp eq %"class.blink::HeapObjectHeader"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.blink::HeapObjectHeader"** %4 to i64
  %8 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::HeapObjectHeader"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.blink::HeapObjectHeader"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14MarkingVisitorD0Ev(%"class.blink::MarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink14MarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"*** %3, align 8
  %5 = icmp eq %"class.blink::HeapObjectHeader"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.blink::HeapObjectHeader"** %4 to i64
  %8 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::HeapObjectHeader"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.blink::HeapObjectHeader"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::MarkingVisitor"* %0 to i8*
  tail call void @free(i8* %12) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor5VisitERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink24ConcurrentMarkingVisitorD2Ev(%"class.blink::ConcurrentMarkingVisitor"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8WorklistIPKNS_23TraceWrapperV8ReferenceIN2v85ValueEEELi16ELi4EE13FlushToGlobalEi(%"class.blink::Worklist"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #7
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool"* %10, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #7
  br label %16

16:                                               ; preds = %14, %9
  %17 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1, i32 1
  %18 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = ptrtoint %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"* %5 to i64
  store atomic volatile i64 %21, i64* %18 monotonic, align 8
  %22 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #7
  %25 = tail call noalias i8* @malloc(i64 144) #7
  %26 = getelementptr inbounds i8, i8* %25, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"** %4 to i8**
  store i8* %25, i8** %28, align 8
  br label %29

29:                                               ; preds = %2, %16
  %30 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 0, i64 %3, i32 1
  %31 = load %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %55, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %37) #7
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool"* %36, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %41) #7
  br label %42

42:                                               ; preds = %40, %35
  %43 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1, i32 1
  %44 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"* %31 to i64*
  store i64 %45, i64* %46, align 8
  %47 = ptrtoint %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"* %31 to i64
  store atomic volatile i64 %47, i64* %44 monotonic, align 8
  %48 = getelementptr inbounds %"class.blink::Worklist", %"class.blink::Worklist"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i64* %48, i64 1 monotonic
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #7
  %51 = tail call noalias i8* @malloc(i64 144) #7
  %52 = getelementptr inbounds i8, i8* %51, i64 8
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = bitcast %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"** %30 to i8**
  store i8* %51, i8** %54, align 8
  br label %55

55:                                               ; preds = %29, %42
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
