; ModuleID = '../../third_party/openscreen/src/cast/common/certificate/cast_cert_validator_internal.cc'
source_filename = "../../third_party/openscreen/src/cast/common/certificate/cast_cert_validator_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%"struct.openscreen::cast::DateTime" = type { i16, i8, i8, i8, i8, i8 }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%"struct.openscreen::cast::TrustStore" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %struct.x509_st* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr.1"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.13 }
%union.anon.13 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.env_md_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon.22, %struct.evp_pkey_asn1_method_st* }
%union.anon.22 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"struct.openscreen::cast::ConstDataSpan" = type { i8*, i32 }
%"class.bssl::internal::StackAllocated" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%struct.engine_st = type opaque
%"class.openscreen::Error" = type { i8, %"class.std::__1::basic_string" }
%"struct.openscreen::cast::CertificatePathResult" = type { %"class.std::__1::unique_ptr.1", %"class.std::__1::vector", %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %struct.x509_st**, %struct.x509_st**, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %struct.x509_st** }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %struct.NAME_CONSTRAINTS_st* }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::unique_ptr.46"* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*, %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*, %"class.std::__1::__compressed_pair.37" }
%"struct.openscreen::cast::(anonymous namespace)::CertPathStep" = type { %struct.x509_st*, i32, i32 }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.BASIC_CONSTRAINTS_st = type { i32, %struct.asn1_string_st* }
%struct.stack_st_POLICY_MAPPING = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.X509_extension_st = type { %struct.asn1_object_st*, i32, %struct.asn1_string_st* }

$_ZNSt3__16vectorINS_10unique_ptrI7x509_stN4bssl8internal7DeleterIS2_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJPS2_EEEvDpOT_ = comdat any

@_ZZN10openscreen4cast24ParseAsn1GeneralizedTimeEP14asn1_string_stPNS0_8DateTimeEE13kDaysPerMonth = internal unnamed_addr constant [12 x i8] c"\1F\1C\1F\1E\1F\1E\1F\1F\1E\1F\1E\1F", align 1
@.str = private unnamed_addr constant [25 x i8] c"Missing DER certificates\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4cast24ParseAsn1GeneralizedTimeEP14asn1_string_stPNS0_8DateTimeE(%struct.asn1_string_st*, %"struct.openscreen::cast::DateTime"* nocapture) local_unnamed_addr #0 {
  %3 = tail call i8* @ASN1_STRING_get0_data(%struct.asn1_string_st* %0) #9
  %4 = tail call i32 @ASN1_STRING_length(%struct.asn1_string_st* %0) #9
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %7, label %6, !prof !2

6:                                                ; preds = %2
  tail call void @llvm.trap() #9
  unreachable

7:                                                ; preds = %2
  %8 = icmp eq i32 %4, 15
  br i1 %8, label %9, label %91

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, i8* %3, i64 14
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 90
  br i1 %12, label %13, label %91

13:                                               ; preds = %9
  %14 = load i8, i8* %3, align 1
  %15 = add i8 %14, -48
  %16 = icmp ugt i8 %15, 9
  br i1 %16, label %91, label %92

17:                                               ; preds = %152
  %18 = mul i8 %14, 10
  %19 = add nsw i8 %18, -16
  %20 = add nsw i8 %19, %94
  %21 = zext i8 %20 to i16
  %22 = mul nuw nsw i16 %21, 100
  %23 = mul i8 %99, 10
  %24 = add nsw i8 %23, -16
  %25 = add nsw i8 %24, %104
  %26 = zext i8 %25 to i16
  %27 = add nuw nsw i16 %22, %26
  %28 = getelementptr inbounds %"struct.openscreen::cast::DateTime", %"struct.openscreen::cast::DateTime"* %1, i64 0, i32 0
  store i16 %27, i16* %28, align 2
  %29 = load i8, i8* %108, align 1
  %30 = mul i8 %29, 10
  %31 = load i8, i8* %113, align 1
  %32 = add i8 %30, -16
  %33 = add i8 %32, %31
  %34 = getelementptr inbounds %"struct.openscreen::cast::DateTime", %"struct.openscreen::cast::DateTime"* %1, i64 0, i32 1
  store i8 %33, i8* %34, align 2
  %35 = load i8, i8* %118, align 1
  %36 = mul i8 %35, 10
  %37 = load i8, i8* %123, align 1
  %38 = add i8 %36, -16
  %39 = add i8 %38, %37
  %40 = getelementptr inbounds %"struct.openscreen::cast::DateTime", %"struct.openscreen::cast::DateTime"* %1, i64 0, i32 2
  store i8 %39, i8* %40, align 1
  %41 = load i8, i8* %128, align 1
  %42 = mul i8 %41, 10
  %43 = load i8, i8* %133, align 1
  %44 = add i8 %42, -16
  %45 = add i8 %44, %43
  %46 = getelementptr inbounds %"struct.openscreen::cast::DateTime", %"struct.openscreen::cast::DateTime"* %1, i64 0, i32 3
  store i8 %45, i8* %46, align 2
  %47 = load i8, i8* %138, align 1
  %48 = mul i8 %47, 10
  %49 = load i8, i8* %143, align 1
  %50 = add i8 %48, -16
  %51 = add i8 %50, %49
  %52 = getelementptr inbounds %"struct.openscreen::cast::DateTime", %"struct.openscreen::cast::DateTime"* %1, i64 0, i32 4
  store i8 %51, i8* %52, align 1
  %53 = load i8, i8* %148, align 1
  %54 = mul i8 %53, 10
  %55 = load i8, i8* %153, align 1
  %56 = add i8 %54, -16
  %57 = add i8 %56, %55
  %58 = getelementptr inbounds %"struct.openscreen::cast::DateTime", %"struct.openscreen::cast::DateTime"* %1, i64 0, i32 5
  store i8 %57, i8* %58, align 2
  %59 = add i8 %33, -1
  %60 = icmp ugt i8 %59, 11
  br i1 %60, label %91, label %61

61:                                               ; preds = %17
  %62 = zext i8 %33 to i64
  %63 = add nsw i64 %62, -1
  %64 = getelementptr inbounds [12 x i8], [12 x i8]* @_ZZN10openscreen4cast24ParseAsn1GeneralizedTimeEP14asn1_string_stPNS0_8DateTimeEE13kDaysPerMonth, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = icmp eq i8 %33, 2
  br i1 %67, label %68, label %78

68:                                               ; preds = %61
  %69 = and i16 %27, 3
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %68
  %72 = urem i16 %27, 100
  %73 = icmp ne i16 %72, 0
  %74 = urem i16 %27, 400
  %75 = icmp eq i16 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %78, label %77

77:                                               ; preds = %71, %68
  br label %78

78:                                               ; preds = %71, %77, %61
  %79 = phi i32 [ 28, %77 ], [ %66, %61 ], [ 29, %71 ]
  %80 = icmp eq i8 %39, 0
  %81 = zext i8 %39 to i32
  %82 = icmp ult i32 %79, %81
  %83 = or i1 %80, %82
  %84 = icmp ugt i8 %45, 23
  %85 = or i1 %84, %83
  %86 = icmp ugt i8 %51, 59
  %87 = or i1 %86, %85
  %88 = icmp ult i8 %57, 61
  %89 = xor i1 %87, true
  %90 = and i1 %88, %89
  ret i1 %90

91:                                               ; preds = %13, %92, %97, %102, %107, %112, %117, %122, %127, %132, %137, %142, %147, %152, %17, %9, %7
  ret i1 false

92:                                               ; preds = %13
  %93 = getelementptr inbounds i8, i8* %3, i64 1
  %94 = load i8, i8* %93, align 1
  %95 = add i8 %94, -48
  %96 = icmp ugt i8 %95, 9
  br i1 %96, label %91, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds i8, i8* %3, i64 2
  %99 = load i8, i8* %98, align 1
  %100 = add i8 %99, -48
  %101 = icmp ugt i8 %100, 9
  br i1 %101, label %91, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds i8, i8* %3, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = add i8 %104, -48
  %106 = icmp ugt i8 %105, 9
  br i1 %106, label %91, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds i8, i8* %3, i64 4
  %109 = load i8, i8* %108, align 1
  %110 = add i8 %109, -48
  %111 = icmp ugt i8 %110, 9
  br i1 %111, label %91, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds i8, i8* %3, i64 5
  %114 = load i8, i8* %113, align 1
  %115 = add i8 %114, -48
  %116 = icmp ugt i8 %115, 9
  br i1 %116, label %91, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds i8, i8* %3, i64 6
  %119 = load i8, i8* %118, align 1
  %120 = add i8 %119, -48
  %121 = icmp ugt i8 %120, 9
  br i1 %121, label %91, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds i8, i8* %3, i64 7
  %124 = load i8, i8* %123, align 1
  %125 = add i8 %124, -48
  %126 = icmp ugt i8 %125, 9
  br i1 %126, label %91, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds i8, i8* %3, i64 8
  %129 = load i8, i8* %128, align 1
  %130 = add i8 %129, -48
  %131 = icmp ugt i8 %130, 9
  br i1 %131, label %91, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds i8, i8* %3, i64 9
  %134 = load i8, i8* %133, align 1
  %135 = add i8 %134, -48
  %136 = icmp ugt i8 %135, 9
  br i1 %136, label %91, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds i8, i8* %3, i64 10
  %139 = load i8, i8* %138, align 1
  %140 = add i8 %139, -48
  %141 = icmp ugt i8 %140, 9
  br i1 %141, label %91, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds i8, i8* %3, i64 11
  %144 = load i8, i8* %143, align 1
  %145 = add i8 %144, -48
  %146 = icmp ugt i8 %145, 9
  br i1 %146, label %91, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds i8, i8* %3, i64 12
  %149 = load i8, i8* %148, align 1
  %150 = add i8 %149, -48
  %151 = icmp ugt i8 %150, 9
  br i1 %151, label %91, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds i8, i8* %3, i64 13
  %154 = load i8, i8* %153, align 1
  %155 = add i8 %154, -48
  %156 = icmp ugt i8 %155, 9
  br i1 %156, label %91, label %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @ASN1_STRING_get0_data(%struct.asn1_string_st*) local_unnamed_addr #2

declare i32 @ASN1_STRING_length(%struct.asn1_string_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4cast21GetCertValidTimeRangeEP7x509_stPNS0_8DateTimeES4_(%struct.x509_st*, %"struct.openscreen::cast::DateTime"* nocapture, %"struct.openscreen::cast::DateTime"* nocapture) local_unnamed_addr #0 {
  %4 = tail call %struct.asn1_string_st* @X509_get0_notBefore(%struct.x509_st* %0) #9
  %5 = tail call %struct.asn1_string_st* @ASN1_TIME_to_generalizedtime(%struct.asn1_string_st* %4, %struct.asn1_string_st** null) #9
  %6 = tail call %struct.asn1_string_st* @X509_get0_notAfter(%struct.x509_st* %0) #9
  %7 = tail call %struct.asn1_string_st* @ASN1_TIME_to_generalizedtime(%struct.asn1_string_st* %6, %struct.asn1_string_st** null) #9
  %8 = icmp eq %struct.asn1_string_st* %5, null
  %9 = icmp eq %struct.asn1_string_st* %7, null
  br i1 %8, label %15, label %10

10:                                               ; preds = %3
  br i1 %9, label %18, label %11

11:                                               ; preds = %10
  %12 = tail call zeroext i1 @_ZN10openscreen4cast24ParseAsn1GeneralizedTimeEP14asn1_string_stPNS0_8DateTimeE(%struct.asn1_string_st* nonnull %5, %"struct.openscreen::cast::DateTime"* %1)
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @_ZN10openscreen4cast24ParseAsn1GeneralizedTimeEP14asn1_string_stPNS0_8DateTimeE(%struct.asn1_string_st* nonnull %7, %"struct.openscreen::cast::DateTime"* %2)
  br label %16

15:                                               ; preds = %3
  br i1 %9, label %21, label %18

16:                                               ; preds = %11, %13
  %17 = phi i1 [ %14, %13 ], [ false, %11 ]
  tail call void @ASN1_STRING_free(%struct.asn1_string_st* nonnull %7) #9
  br label %18

18:                                               ; preds = %16, %10, %15
  %19 = phi %struct.asn1_string_st* [ %7, %15 ], [ %5, %10 ], [ %5, %16 ]
  %20 = phi i1 [ false, %15 ], [ false, %10 ], [ %17, %16 ]
  tail call void @ASN1_STRING_free(%struct.asn1_string_st* nonnull %19) #9
  br label %21

21:                                               ; preds = %18, %15
  %22 = phi i1 [ false, %15 ], [ %20, %18 ]
  ret i1 %22
}

declare %struct.asn1_string_st* @ASN1_TIME_to_generalizedtime(%struct.asn1_string_st*, %struct.asn1_string_st**) local_unnamed_addr #2

declare %struct.asn1_string_st* @X509_get0_notBefore(%struct.x509_st*) local_unnamed_addr #2

declare %struct.asn1_string_st* @X509_get0_notAfter(%struct.x509_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen4cast10TrustStore25CreateInstanceFromPemFileEN4absl11string_viewE(%"struct.openscreen::cast::TrustStore"* noalias sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.9", align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.x509_st*, align 8
  %7 = getelementptr inbounds %"struct.openscreen::cast::TrustStore", %"struct.openscreen::cast::TrustStore"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.openscreen::cast::TrustStore", %"struct.openscreen::cast::TrustStore"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.openscreen::cast::TrustStore", %"struct.openscreen::cast::TrustStore"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"struct.openscreen::cast::TrustStore"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #9
  %11 = bitcast %"class.std::__1::vector.9"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %4, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::vector.9"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN10openscreen27ReadCertificatesFromPemFileEN4absl11string_viewE(%"class.std::__1::vector.9"* nonnull sret %4, i8* %1, i64 %2) #9
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %15, %16
  br i1 %17, label %26, label %18

18:                                               ; preds = %3
  %19 = bitcast i8** %5 to i8*
  %20 = bitcast i8** %5 to %"class.std::__1::basic_string"**
  %21 = bitcast %struct.x509_st** %6 to i8*
  %22 = bitcast i8** %5 to i64*
  %23 = bitcast %"class.std::__1::unique_ptr.1"** %8 to i64*
  br label %51

24:                                               ; preds = %76
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  br label %26

26:                                               ; preds = %24, %3
  %27 = phi %"class.std::__1::basic_string"* [ %25, %24 ], [ %15, %3 ]
  %28 = icmp eq %"class.std::__1::basic_string"* %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %32 = icmp eq %"class.std::__1::basic_string"* %31, %27
  br i1 %32, label %48, label %33

33:                                               ; preds = %29, %43
  %34 = phi %"class.std::__1::basic_string"* [ %35, %43 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 -1
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %40, %33
  %44 = icmp eq %"class.std::__1::basic_string"* %35, %27
  br i1 %44, label %45, label %33

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::vector.9"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %29
  %49 = phi i8* [ %47, %45 ], [ %30, %29 ]
  store %"class.std::__1::basic_string"* %27, %"class.std::__1::basic_string"** %13, align 8
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %26, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  ret void

51:                                               ; preds = %18, %76
  %52 = phi %"class.std::__1::basic_string"* [ %15, %18 ], [ %77, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %52 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  br label %64

62:                                               ; preds = %51
  store %"class.std::__1::basic_string"* %52, %"class.std::__1::basic_string"** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %63 = zext i8 %55 to i64
  br label %64

64:                                               ; preds = %57, %62
  %65 = phi i64 [ %61, %57 ], [ %63, %62 ]
  %66 = call %struct.x509_st* @d2i_X509(%struct.x509_st** null, i8** nonnull %5, i64 %65) #9
  store %struct.x509_st* %66, %struct.x509_st** %6, align 8
  %67 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %8, align 8
  %68 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %9, align 8
  %69 = icmp ult %"class.std::__1::unique_ptr.1"* %67, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %64
  %71 = ptrtoint %struct.x509_st* %66 to i64
  %72 = bitcast %"class.std::__1::unique_ptr.1"* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %67, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr.1"* %73 to i64
  store i64 %74, i64* %23, align 8
  br label %76

75:                                               ; preds = %64
  call void @_ZNSt3__16vectorINS_10unique_ptrI7x509_stN4bssl8internal7DeleterIS2_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJPS2_EEEvDpOT_(%"class.std::__1::vector"* %7, %struct.x509_st** nonnull dereferenceable(8) %6) #9
  br label %76

76:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 1
  %78 = icmp eq %"class.std::__1::basic_string"* %77, %16
  br i1 %78, label %24, label %51
}

declare void @_ZN10openscreen27ReadCertificatesFromPemFileEN4absl11string_viewE(%"class.std::__1::vector.9"* sret, i8*, i64) local_unnamed_addr #2

declare %struct.x509_st* @d2i_X509(%struct.x509_st**, i8**, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10openscreen4cast16VerifySignedDataEPK9env_md_stP11evp_pkey_stRKNS0_13ConstDataSpanES8_(%struct.env_md_st*, %struct.evp_pkey_st*, %"struct.openscreen::cast::ConstDataSpan"* nocapture readonly dereferenceable(16), %"struct.openscreen::cast::ConstDataSpan"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %5 = alloca %"class.bssl::internal::StackAllocated", align 8
  %6 = bitcast %"class.bssl::internal::StackAllocated"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %5, i64 0, i32 0
  %8 = bitcast %"class.bssl::internal::StackAllocated"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %7) #9
  %9 = call i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st* nonnull %7, %struct.evp_pkey_ctx_st** null, %struct.env_md_st* %0, %struct.engine_st* null, %struct.evp_pkey_st* %1) #9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"struct.openscreen::cast::ConstDataSpan", %"struct.openscreen::cast::ConstDataSpan"* %3, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.openscreen::cast::ConstDataSpan", %"struct.openscreen::cast::ConstDataSpan"* %3, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.openscreen::cast::ConstDataSpan", %"struct.openscreen::cast::ConstDataSpan"* %2, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"struct.openscreen::cast::ConstDataSpan", %"struct.openscreen::cast::ConstDataSpan"* %2, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = call i32 @EVP_DigestVerify(%struct.env_md_ctx_st* nonnull %7, i8* %13, i64 %16, i8* %18, i64 %21) #9
  %23 = icmp eq i32 %22, 1
  br label %24

24:                                               ; preds = %4, %11
  %25 = phi i1 [ %23, %11 ], [ false, %4 ]
  %26 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret i1 %25
}

declare i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EVP_DigestVerify(%struct.env_md_ctx_st*, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen4cast19FindCertificatePathERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEERKNS0_8DateTimeEPNS0_21CertificatePathResultEPNS0_10TrustStoreE(%"class.openscreen::Error"* noalias sret, %"class.std::__1::vector.9"* nocapture readonly dereferenceable(24), %"struct.openscreen::cast::DateTime"* dereferenceable(8), %"struct.openscreen::cast::CertificatePathResult"*, %"struct.openscreen::cast::TrustStore"* nocapture readonly) local_unnamed_addr #0 {
  %6 = alloca %"class.bssl::internal::StackAllocated", align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::__1::vector.44", align 8
  %10 = alloca %struct.X509_algor_st*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca %struct.asn1_string_st*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %struct.x509_st*, align 8
  %20 = alloca %struct.X509_algor_st*, align 8
  %21 = alloca %"class.std::__1::vector.35", align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = icmp eq %"class.std::__1::basic_string"* %23, %25
  br i1 %26, label %27, label %41

27:                                               ; preds = %5
  %28 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %29 = tail call i8* @_Znwm(i64 32) #10
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %32, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 24, i1 false) #9
  %33 = getelementptr inbounds i8, i8* %29, i64 24
  store i8 0, i8* %33, align 1
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeEONSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.openscreen::Error"* %0, i8 signext 49, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #9
  %34 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %27, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  br label %947

41:                                               ; preds = %5
  %42 = getelementptr inbounds %"struct.openscreen::cast::CertificatePathResult", %"struct.openscreen::cast::CertificatePathResult"* %3, i64 0, i32 1
  %43 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %23 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast i8** %17 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  br label %57

54:                                               ; preds = %41
  %55 = bitcast i8** %17 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %23, %"class.std::__1::basic_string"** %55, align 8
  %56 = zext i8 %46 to i64
  br label %57

57:                                               ; preds = %48, %54
  %58 = phi i64 [ %53, %48 ], [ %56, %54 ]
  %59 = call %struct.x509_st* @d2i_X509(%struct.x509_st** null, i8** nonnull %17, i64 %58) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  %60 = getelementptr inbounds %"struct.openscreen::cast::CertificatePathResult", %"struct.openscreen::cast::CertificatePathResult"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %struct.x509_st*, %struct.x509_st** %60, align 8
  store %struct.x509_st* %59, %struct.x509_st** %60, align 8
  %62 = icmp eq %struct.x509_st* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %57
  call void @X509_free(%struct.x509_st* nonnull %61) #9
  %64 = load %struct.x509_st*, %struct.x509_st** %60, align 8
  br label %65

65:                                               ; preds = %57, %63
  %66 = phi %struct.x509_st* [ %59, %57 ], [ %64, %63 ]
  %67 = icmp eq %struct.x509_st* %66, null
  br i1 %67, label %84, label %68

68:                                               ; preds = %65
  %69 = bitcast %"class.std::__1::basic_string"** %24 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector.9"* %1 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = sdiv exact i64 %73, 24
  %75 = icmp ugt i64 %74, 1
  br i1 %75, label %76, label %129

76:                                               ; preds = %68
  %77 = bitcast %struct.x509_st** %19 to i8*
  %78 = bitcast i8** %16 to i8*
  %79 = bitcast i8** %16 to %"class.std::__1::basic_string"**
  %80 = bitcast i8** %16 to i64*
  %81 = getelementptr inbounds %"struct.openscreen::cast::CertificatePathResult", %"struct.openscreen::cast::CertificatePathResult"* %3, i64 0, i32 1, i32 0, i32 1
  %82 = getelementptr inbounds %"struct.openscreen::cast::CertificatePathResult", %"struct.openscreen::cast::CertificatePathResult"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.1"** %81 to i64*
  br label %91

84:                                               ; preds = %65
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %0, i8 signext 50) #9
  br label %947

85:                                               ; preds = %120
  %86 = load i64, i64* %69, align 8
  %87 = load i64, i64* %71, align 8
  %88 = sub i64 %86, %87
  %89 = sdiv exact i64 %88, 24
  %90 = icmp ult i64 %125, %89
  br i1 %90, label %91, label %127

91:                                               ; preds = %76, %85
  %92 = phi i64 [ %72, %76 ], [ %87, %85 ]
  %93 = phi i64 [ 1, %76 ], [ %125, %85 ]
  %94 = inttoptr i64 %92 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #9
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 %93
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  %96 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %105

100:                                              ; preds = %91
  %101 = bitcast %"class.std::__1::basic_string"* %95 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %80, align 8
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 %93, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  br label %107

105:                                              ; preds = %91
  store %"class.std::__1::basic_string"* %95, %"class.std::__1::basic_string"** %79, align 8
  %106 = zext i8 %98 to i64
  br label %107

107:                                              ; preds = %100, %105
  %108 = phi i64 [ %104, %100 ], [ %106, %105 ]
  %109 = call %struct.x509_st* @d2i_X509(%struct.x509_st** null, i8** nonnull %16, i64 %108) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #9
  store %struct.x509_st* %109, %struct.x509_st** %19, align 8
  %110 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %81, align 8
  %111 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %82, align 8
  %112 = icmp ult %"class.std::__1::unique_ptr.1"* %110, %111
  br i1 %112, label %113, label %118

113:                                              ; preds = %107
  %114 = ptrtoint %struct.x509_st* %109 to i64
  %115 = bitcast %"class.std::__1::unique_ptr.1"* %110 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %110, i64 1
  %117 = ptrtoint %"class.std::__1::unique_ptr.1"* %116 to i64
  store i64 %117, i64* %83, align 8
  br label %120

118:                                              ; preds = %107
  call void @_ZNSt3__16vectorINS_10unique_ptrI7x509_stN4bssl8internal7DeleterIS2_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJPS2_EEEvDpOT_(%"class.std::__1::vector"* %42, %struct.x509_st** nonnull dereferenceable(8) %19) #9
  %119 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %81, align 8
  br label %120

120:                                              ; preds = %113, %118
  %121 = phi %"class.std::__1::unique_ptr.1"* [ %116, %113 ], [ %119, %118 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #9
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %121, i64 -1, i32 0, i32 0, i32 0
  %123 = load %struct.x509_st*, %struct.x509_st** %122, align 8
  %124 = icmp eq %struct.x509_st* %123, null
  %125 = add nuw i64 %93, 1
  br i1 %124, label %126, label %85

126:                                              ; preds = %120
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %0, i8 signext 50) #9
  br label %947

127:                                              ; preds = %85
  %128 = load %struct.x509_st*, %struct.x509_st** %60, align 8
  br label %129

129:                                              ; preds = %127, %68
  %130 = phi %struct.x509_st* [ %128, %127 ], [ %66, %68 ]
  %131 = bitcast i64* %14 to %"struct.openscreen::cast::DateTime"*
  %132 = bitcast i64* %15 to %"struct.openscreen::cast::DateTime"*
  %133 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #9
  store i64 -6148914691236517206, i64* %14, align 8
  %134 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #9
  store i64 -6148914691236517206, i64* %15, align 8
  %135 = call zeroext i1 @_ZN10openscreen4cast21GetCertValidTimeRangeEP7x509_stPNS0_8DateTimeES4_(%struct.x509_st* %130, %"struct.openscreen::cast::DateTime"* nonnull %131, %"struct.openscreen::cast::DateTime"* nonnull %132) #9
  br i1 %135, label %136, label %140

136:                                              ; preds = %129
  %137 = call zeroext i1 @_ZN10openscreen4castltERKNS0_8DateTimeES3_(%"struct.openscreen::cast::DateTime"* dereferenceable(8) %2, %"struct.openscreen::cast::DateTime"* nonnull dereferenceable(8) %131) #9
  br i1 %137, label %140, label %138

138:                                              ; preds = %136
  %139 = call zeroext i1 @_ZN10openscreen4castltERKNS0_8DateTimeES3_(%"struct.openscreen::cast::DateTime"* nonnull dereferenceable(8) %132, %"struct.openscreen::cast::DateTime"* dereferenceable(8) %2) #9
  br i1 %139, label %140, label %142

140:                                              ; preds = %138, %129, %136
  %141 = phi i8 [ 52, %136 ], [ 53, %129 ], [ 52, %138 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #9
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %0, i8 signext %141) #9
  br label %947

142:                                              ; preds = %138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #9
  %143 = load %struct.x509_st*, %struct.x509_st** %60, align 8
  %144 = call %struct.evp_pkey_st* @X509_get_pubkey(%struct.x509_st* %143) #9
  %145 = call i32 @EVP_PKEY_bits(%struct.evp_pkey_st* %144) #9
  %146 = icmp sgt i32 %145, 2047
  br i1 %146, label %148, label %147

147:                                              ; preds = %142
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %0, i8 signext 53) #9
  br label %944

148:                                              ; preds = %142
  %149 = bitcast %struct.X509_algor_st** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #9
  store %struct.X509_algor_st* inttoptr (i64 -6148914691236517206 to %struct.X509_algor_st*), %struct.X509_algor_st** %20, align 8
  %150 = load %struct.x509_st*, %struct.x509_st** %60, align 8
  call void @X509_get0_signature(%struct.asn1_string_st** null, %struct.X509_algor_st** nonnull %20, %struct.x509_st* %150) #9
  %151 = load %struct.X509_algor_st*, %struct.X509_algor_st** %20, align 8
  %152 = load %struct.x509_st*, %struct.x509_st** %60, align 8
  %153 = call %struct.X509_algor_st* @X509_get0_tbs_sigalg(%struct.x509_st* %152) #9
  %154 = call i32 @X509_ALGOR_cmp(%struct.X509_algor_st* %151, %struct.X509_algor_st* %153) #9
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %157, label %156

156:                                              ; preds = %148
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %0, i8 signext 53) #9
  br label %943

157:                                              ; preds = %148
  %158 = load %struct.x509_st*, %struct.x509_st** %60, align 8
  %159 = call i8* @X509_get_ext_d2i(%struct.x509_st* %158, i32 83, i32* null, i32* null) #9
  %160 = bitcast i8* %159 to %struct.asn1_string_st*
  %161 = icmp eq i8* %159, null
  br i1 %161, label %162, label %163

162:                                              ; preds = %157
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %0, i8 signext 51) #9
  br label %943

163:                                              ; preds = %157
  %164 = call i32 @ASN1_BIT_STRING_get_bit(%struct.asn1_string_st* nonnull %160, i32 0) #9
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %0, i8 signext 51) #9
  br label %942

167:                                              ; preds = %163
  %168 = load %struct.x509_st*, %struct.x509_st** %60, align 8
  %169 = bitcast %"class.std::__1::vector.35"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #9
  %170 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %21, i64 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %21, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 0, i64 24, i1 false) #9
  %172 = getelementptr inbounds %"struct.openscreen::cast::CertificatePathResult", %"struct.openscreen::cast::CertificatePathResult"* %3, i64 0, i32 1, i32 0, i32 1
  %173 = bitcast %"class.std::__1::unique_ptr.1"** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::vector"* %42 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = add nsw i64 %178, 2
  %180 = bitcast %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"** %171 to i64*
  %181 = bitcast %"class.std::__1::vector.35"* %21 to i64*
  %182 = icmp eq i64 %179, 0
  br i1 %182, label %198, label %183

183:                                              ; preds = %167
  %184 = icmp ugt i64 %179, 1152921504606846975
  br i1 %184, label %185, label %187

185:                                              ; preds = %183
  %186 = bitcast %"class.std::__1::vector.35"* %21 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %186) #11
  unreachable

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %21, i64 0, i32 0, i32 2, i32 0, i32 0
  %189 = bitcast %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"** %188 to i64*
  %190 = shl i64 %179, 4
  %191 = call i8* @_Znwm(i64 %190) #10
  %192 = bitcast i8* %191 to %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*
  %193 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %192, i64 %179
  %194 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %192, i64 %179
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %191, i8 0, i64 %190, i1 false) #9
  %195 = ptrtoint %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %193 to i64
  %196 = ptrtoint %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %194 to i64
  %197 = ptrtoint i8* %191 to i64
  store i64 %197, i64* %181, align 8
  store i64 %196, i64* %180, align 8
  store i64 %195, i64* %189, align 8
  br label %198

198:                                              ; preds = %167, %187
  %199 = phi i64 [ %197, %187 ], [ 0, %167 ]
  %200 = phi i64 [ %196, %187 ], [ 0, %167 ]
  %201 = sub i64 %200, %199
  %202 = lshr exact i64 %201, 4
  %203 = trunc i64 %202 to i32
  %204 = add i32 %203, -1
  %205 = zext i32 %204 to i64
  %206 = inttoptr i64 %199 to %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*
  %207 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %206, i64 %205, i32 0
  store %struct.x509_st* %168, %struct.x509_st** %207, align 8
  %208 = getelementptr inbounds %"struct.openscreen::cast::TrustStore", %"struct.openscreen::cast::TrustStore"* %4, i64 0, i32 0, i32 0, i32 1
  %209 = bitcast %"class.std::__1::unique_ptr.1"** %208 to i64*
  %210 = bitcast %"struct.openscreen::cast::TrustStore"* %4 to i64*
  %211 = bitcast %"class.std::__1::vector.44"* %9 to i8*
  %212 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %9, i64 0, i32 0, i32 0
  %213 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %9, i64 0, i32 0, i32 1
  %214 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %215 = bitcast i64* %7 to %"struct.openscreen::cast::DateTime"*
  %216 = bitcast i64* %8 to %"struct.openscreen::cast::DateTime"*
  %217 = bitcast i64* %7 to i8*
  %218 = bitcast i64* %8 to i8*
  %219 = bitcast %struct.X509_algor_st** %10 to i8*
  %220 = bitcast i32* %11 to i8*
  %221 = bitcast %"class.std::__1::unique_ptr.46"** %213 to i64*
  %222 = bitcast %"class.std::__1::vector.44"* %9 to i64*
  %223 = bitcast %"class.std::__1::unique_ptr.46"** %214 to i64*
  %224 = bitcast i8** %12 to i8*
  %225 = bitcast %struct.asn1_string_st** %13 to i8*
  %226 = bitcast %"class.bssl::internal::StackAllocated"* %6 to i8*
  %227 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %6, i64 0, i32 0
  %228 = bitcast %"class.std::__1::vector.44"* %9 to i8**
  br label %229

229:                                              ; preds = %791, %198
  %230 = phi %struct.x509_st* [ %793, %791 ], [ %168, %198 ]
  %231 = phi i32 [ %799, %791 ], [ %204, %198 ]
  %232 = phi i8 [ %795, %791 ], [ 0, %198 ]
  %233 = phi i32 [ %798, %791 ], [ 0, %198 ]
  %234 = phi i32 [ %800, %791 ], [ 0, %198 ]
  %235 = phi i8 [ %797, %791 ], [ 0, %198 ]
  br label %236

236:                                              ; preds = %229, %344
  %237 = phi %struct.x509_st* [ %294, %344 ], [ %230, %229 ]
  %238 = phi i32 [ %320, %344 ], [ %231, %229 ]
  %239 = phi i8 [ %277, %344 ], [ %232, %229 ]
  %240 = phi i32 [ 0, %344 ], [ %233, %229 ]
  %241 = phi i32 [ 0, %344 ], [ %234, %229 ]
  %242 = call %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %237) #9
  %243 = zext i32 %240 to i64
  %244 = load i64, i64* %209, align 8
  %245 = load i64, i64* %210, align 8
  %246 = sub i64 %244, %245
  %247 = ashr exact i64 %246, 3
  %248 = icmp ugt i64 %247, %243
  br i1 %248, label %249, label %276

249:                                              ; preds = %236, %259
  %250 = phi i64 [ %263, %259 ], [ %245, %236 ]
  %251 = phi i64 [ %261, %259 ], [ %243, %236 ]
  %252 = phi i32 [ %260, %259 ], [ %240, %236 ]
  %253 = inttoptr i64 %250 to %"class.std::__1::unique_ptr.1"*
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %253, i64 %251, i32 0, i32 0, i32 0
  %255 = load %struct.x509_st*, %struct.x509_st** %254, align 8
  %256 = call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %255) #9
  %257 = call i32 @X509_NAME_cmp(%struct.X509_name_st* %256, %struct.X509_name_st* %242) #9
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %267, label %259

259:                                              ; preds = %249
  %260 = add i32 %252, 1
  %261 = zext i32 %260 to i64
  %262 = load i64, i64* %209, align 8
  %263 = load i64, i64* %210, align 8
  %264 = sub i64 %262, %263
  %265 = ashr exact i64 %264, 3
  %266 = icmp ugt i64 %265, %261
  br i1 %266, label %249, label %276

267:                                              ; preds = %249
  %268 = add i32 %238, -1
  %269 = zext i32 %268 to i64
  %270 = load %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*, %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"** %170, align 8
  %271 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %270, i64 %269, i32 0
  store %struct.x509_st* %255, %struct.x509_st** %271, align 8
  %272 = add i32 %252, 1
  %273 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %270, i64 %269, i32 1
  store i32 %272, i32* %273, align 8
  %274 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %270, i64 %269, i32 2
  store i32 0, i32* %274, align 4
  %275 = icmp eq %struct.x509_st* %255, null
  br i1 %275, label %276, label %347

276:                                              ; preds = %259, %236, %267
  %277 = phi i8 [ 1, %267 ], [ %239, %236 ], [ %239, %259 ]
  %278 = phi i32 [ %268, %267 ], [ %238, %236 ], [ %238, %259 ]
  %279 = zext i32 %241 to i64
  %280 = load i64, i64* %173, align 8
  %281 = load i64, i64* %175, align 8
  %282 = sub i64 %280, %281
  %283 = ashr exact i64 %282, 3
  %284 = icmp ugt i64 %283, %279
  br i1 %284, label %285, label %333

285:                                              ; preds = %276
  %286 = icmp ult i32 %278, %204
  %287 = zext i32 %278 to i64
  br label %288

288:                                              ; preds = %285, %311
  %289 = phi i64 [ %281, %285 ], [ %315, %311 ]
  %290 = phi i64 [ %279, %285 ], [ %313, %311 ]
  %291 = phi i32 [ %241, %285 ], [ %312, %311 ]
  %292 = inttoptr i64 %289 to %"class.std::__1::unique_ptr.1"*
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %292, i64 %290, i32 0, i32 0, i32 0
  %294 = load %struct.x509_st*, %struct.x509_st** %293, align 8
  %295 = call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %294) #9
  %296 = call i32 @X509_NAME_cmp(%struct.X509_name_st* %295, %struct.X509_name_st* %242) #9
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %311

298:                                              ; preds = %288
  br i1 %286, label %302, label %319

299:                                              ; preds = %302
  %300 = trunc i64 %310 to i32
  %301 = icmp eq i32 %204, %300
  br i1 %301, label %319, label %302

302:                                              ; preds = %298, %299
  %303 = phi i64 [ %310, %299 ], [ %287, %298 ]
  %304 = load %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*, %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"** %170, align 8
  %305 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %304, i64 %303, i32 0
  %306 = load %struct.x509_st*, %struct.x509_st** %305, align 8
  %307 = call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %306) #9
  %308 = call i32 @X509_NAME_cmp(%struct.X509_name_st* %295, %struct.X509_name_st* %307) #9
  %309 = icmp eq i32 %308, 0
  %310 = add nuw nsw i64 %303, 1
  br i1 %309, label %311, label %299

311:                                              ; preds = %302, %288
  %312 = add i32 %291, 1
  %313 = zext i32 %312 to i64
  %314 = load i64, i64* %173, align 8
  %315 = load i64, i64* %175, align 8
  %316 = sub i64 %314, %315
  %317 = ashr exact i64 %316, 3
  %318 = icmp ugt i64 %317, %313
  br i1 %318, label %288, label %333

319:                                              ; preds = %298, %299
  %320 = add i32 %278, -1
  %321 = zext i32 %320 to i64
  %322 = load %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*, %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"** %170, align 8
  %323 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %322, i64 %321, i32 0
  store %struct.x509_st* %294, %struct.x509_st** %323, align 8
  %324 = load i64, i64* %209, align 8
  %325 = load i64, i64* %210, align 8
  %326 = sub i64 %324, %325
  %327 = lshr exact i64 %326, 3
  %328 = trunc i64 %327 to i32
  %329 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %322, i64 %321, i32 1
  store i32 %328, i32* %329, align 8
  %330 = add i32 %291, 1
  %331 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %322, i64 %321, i32 2
  store i32 %330, i32* %331, align 4
  %332 = icmp eq %struct.x509_st* %294, null
  br i1 %332, label %333, label %344

333:                                              ; preds = %276, %319, %311
  %334 = phi i32 [ %278, %311 ], [ %278, %276 ], [ %320, %319 ]
  %335 = icmp eq i32 %334, %204
  br i1 %335, label %336, label %339

336:                                              ; preds = %333
  %337 = icmp eq i8 %235, 0
  %338 = select i1 %337, i8 54, i8 %235
  br label %934

339:                                              ; preds = %333
  %340 = zext i32 %334 to i64
  %341 = load %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*, %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"** %170, align 8
  %342 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %341, i64 %340, i32 1
  %343 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %341, i64 %340, i32 2
  br label %791

344:                                              ; preds = %319
  %345 = and i8 %277, 1
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %236, label %347

347:                                              ; preds = %267, %344
  %348 = phi i32 [ %320, %344 ], [ %268, %267 ]
  %349 = phi %struct.x509_st* [ %294, %344 ], [ %255, %267 ]
  %350 = load i64, i64* %180, align 8
  %351 = load i64, i64* %181, align 8
  %352 = sub i64 %350, %351
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 0, i64 24, i1 false) #9
  %353 = zext i32 %348 to i64
  %354 = ashr exact i64 %352, 4
  %355 = add nsw i64 %354, -1
  %356 = icmp ugt i64 %355, %353
  br i1 %356, label %358, label %357

357:                                              ; preds = %347
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #9
  br label %801

358:                                              ; preds = %347
  %359 = lshr exact i64 %352, 4
  %360 = trunc i64 %359 to i32
  %361 = add i32 %360, -2
  br label %362

362:                                              ; preds = %358, %730
  %363 = phi i64 [ %371, %730 ], [ %353, %358 ]
  %364 = phi i64 [ %732, %730 ], [ %351, %358 ]
  %365 = phi i8 [ %728, %730 ], [ undef, %358 ]
  %366 = phi i32 [ %727, %730 ], [ %361, %358 ]
  %367 = phi i8 [ %726, %730 ], [ 0, %358 ]
  %368 = phi i32 [ %370, %730 ], [ %348, %358 ]
  %369 = inttoptr i64 %364 to %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*
  %370 = add i32 %368, 1
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %369, i64 %371, i32 0
  %373 = load %struct.x509_st*, %struct.x509_st** %372, align 8
  %374 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %369, i64 %363, i32 0
  %375 = load %struct.x509_st*, %struct.x509_st** %374, align 8
  %376 = icmp eq i32 %368, %348
  br i1 %376, label %394, label %377

377:                                              ; preds = %362
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #9
  store i64 -6148914691236517206, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #9
  store i64 -6148914691236517206, i64* %8, align 8
  %378 = call zeroext i1 @_ZN10openscreen4cast21GetCertValidTimeRangeEP7x509_stPNS0_8DateTimeES4_(%struct.x509_st* %375, %"struct.openscreen::cast::DateTime"* nonnull %215, %"struct.openscreen::cast::DateTime"* nonnull %216) #9
  br i1 %378, label %379, label %383

379:                                              ; preds = %377
  %380 = call zeroext i1 @_ZN10openscreen4castltERKNS0_8DateTimeES3_(%"struct.openscreen::cast::DateTime"* dereferenceable(8) %2, %"struct.openscreen::cast::DateTime"* nonnull dereferenceable(8) %215) #9
  br i1 %380, label %383, label %381

381:                                              ; preds = %379
  %382 = call zeroext i1 @_ZN10openscreen4castltERKNS0_8DateTimeES3_(%"struct.openscreen::cast::DateTime"* nonnull dereferenceable(8) %216, %"struct.openscreen::cast::DateTime"* dereferenceable(8) %2) #9
  br i1 %382, label %383, label %385

383:                                              ; preds = %381, %379, %377
  %384 = phi i8 [ 52, %379 ], [ 53, %377 ], [ 52, %381 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #9
  br label %761

385:                                              ; preds = %381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #9
  %386 = call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %375) #9
  %387 = call %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %375) #9
  %388 = call i32 @X509_NAME_cmp(%struct.X509_name_st* %386, %struct.X509_name_st* %387) #9
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %394, label %390

390:                                              ; preds = %385
  %391 = icmp eq i32 %366, 0
  br i1 %391, label %761, label %392

392:                                              ; preds = %390
  %393 = add nsw i32 %366, -1
  br label %394

394:                                              ; preds = %392, %385, %362
  %395 = phi i1 [ false, %392 ], [ true, %385 ], [ true, %362 ]
  %396 = phi i8 [ 0, %392 ], [ 0, %385 ], [ %367, %362 ]
  %397 = phi i32 [ %393, %392 ], [ %366, %385 ], [ %366, %362 ]
  %398 = call i8* @X509_get_ext_d2i(%struct.x509_st* %375, i32 83, i32* null, i32* null) #9
  %399 = bitcast i8* %398 to %struct.asn1_string_st*
  %400 = icmp eq i8* %398, null
  br i1 %400, label %404, label %401

401:                                              ; preds = %394
  %402 = call i32 @ASN1_BIT_STRING_get_bit(%struct.asn1_string_st* nonnull %399, i32 5) #9
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %719, label %404

404:                                              ; preds = %401, %394
  %405 = call i8* @X509_get_ext_d2i(%struct.x509_st* %375, i32 87, i32* null, i32* null) #9
  %406 = bitcast i8* %405 to %struct.BASIC_CONSTRAINTS_st*
  %407 = icmp eq i8* %405, null
  br i1 %407, label %714, label %408

408:                                              ; preds = %404
  %409 = bitcast i8* %405 to i32*
  %410 = load i32, i32* %409, align 8
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %709, label %412

412:                                              ; preds = %408
  %413 = getelementptr inbounds i8, i8* %405, i64 8
  %414 = bitcast i8* %413 to %struct.asn1_string_st**
  %415 = load %struct.asn1_string_st*, %struct.asn1_string_st** %414, align 8
  %416 = icmp eq %struct.asn1_string_st* %415, null
  br i1 %416, label %428, label %417

417:                                              ; preds = %412
  %418 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %415, i64 0, i32 0
  %419 = load i32, i32* %418, align 8
  %420 = icmp eq i32 %419, 1
  br i1 %420, label %421, label %709

421:                                              ; preds = %417
  %422 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %415, i64 0, i32 2
  %423 = load i8*, i8** %422, align 8
  %424 = load i8, i8* %423, align 1
  %425 = zext i8 %424 to i32
  %426 = icmp sgt i32 %397, %425
  %427 = select i1 %426, i32 %425, i32 %397
  br label %428

428:                                              ; preds = %421, %412
  %429 = phi i32 [ %397, %412 ], [ %427, %421 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #9
  store %struct.X509_algor_st* inttoptr (i64 -6148914691236517206 to %struct.X509_algor_st*), %struct.X509_algor_st** %10, align 8
  call void @X509_get0_signature(%struct.asn1_string_st** null, %struct.X509_algor_st** nonnull %10, %struct.x509_st* %375) #9
  %430 = load %struct.X509_algor_st*, %struct.X509_algor_st** %10, align 8
  %431 = call %struct.X509_algor_st* @X509_get0_tbs_sigalg(%struct.x509_st* %375) #9
  %432 = call i32 @X509_ALGOR_cmp(%struct.X509_algor_st* %430, %struct.X509_algor_st* %431) #9
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %435, label %434

434:                                              ; preds = %428
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #9
  br label %709

435:                                              ; preds = %428
  %436 = call %struct.evp_pkey_st* @X509_get_pubkey(%struct.x509_st* %375) #9
  %437 = call i32 @EVP_PKEY_bits(%struct.evp_pkey_st* %436) #9
  %438 = icmp sgt i32 %437, 2047
  br i1 %438, label %439, label %702

439:                                              ; preds = %435
  br i1 %395, label %453, label %440

440:                                              ; preds = %439
  %441 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %212, align 8
  %442 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %213, align 8
  %443 = icmp eq %"class.std::__1::unique_ptr.46"* %441, %442
  br i1 %443, label %453, label %446

444:                                              ; preds = %446
  %445 = icmp eq %"class.std::__1::unique_ptr.46"* %452, %442
  br i1 %445, label %453, label %446

446:                                              ; preds = %440, %444
  %447 = phi %"class.std::__1::unique_ptr.46"* [ %452, %444 ], [ %441, %440 ]
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %struct.NAME_CONSTRAINTS_st*, %struct.NAME_CONSTRAINTS_st** %448, align 8
  %450 = call i32 @NAME_CONSTRAINTS_check(%struct.x509_st* %373, %struct.NAME_CONSTRAINTS_st* %449) #9
  %451 = icmp eq i32 %450, 0
  %452 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %447, i64 1
  br i1 %451, label %444, label %702

453:                                              ; preds = %444, %440, %439
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #9
  store i32 -1431655766, i32* %11, align 4
  %454 = call i8* @X509_get_ext_d2i(%struct.x509_st* %375, i32 666, i32* nonnull %11, i32* null) #9
  %455 = ptrtoint i8* %454 to i64
  %456 = icmp ne i8* %454, null
  %457 = xor i1 %456, true
  %458 = load i32, i32* %11, align 4
  %459 = icmp ne i32 %458, -1
  %460 = and i1 %459, %457
  br i1 %460, label %693, label %461

461:                                              ; preds = %453
  br i1 %456, label %462, label %610

462:                                              ; preds = %461
  %463 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %213, align 8
  %464 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %214, align 8
  %465 = icmp ult %"class.std::__1::unique_ptr.46"* %463, %464
  %466 = ptrtoint %"class.std::__1::unique_ptr.46"* %464 to i64
  br i1 %465, label %467, label %471

467:                                              ; preds = %462
  %468 = bitcast %"class.std::__1::unique_ptr.46"* %463 to i64*
  store i64 %455, i64* %468, align 8
  %469 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %463, i64 1
  %470 = ptrtoint %"class.std::__1::unique_ptr.46"* %469 to i64
  store i64 %470, i64* %221, align 8
  br label %610

471:                                              ; preds = %462
  %472 = ptrtoint %"class.std::__1::unique_ptr.46"* %463 to i64
  %473 = load i64, i64* %222, align 8
  %474 = sub i64 %472, %473
  %475 = ashr exact i64 %474, 3
  %476 = add nsw i64 %475, 1
  %477 = icmp ugt i64 %476, 2305843009213693951
  %478 = inttoptr i64 %473 to %"class.std::__1::unique_ptr.46"*
  br i1 %477, label %479, label %481

479:                                              ; preds = %471
  %480 = bitcast %"class.std::__1::vector.44"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %480) #11
  unreachable

481:                                              ; preds = %471
  %482 = sub i64 %466, %473
  %483 = ashr exact i64 %482, 3
  %484 = icmp ult i64 %483, 1152921504606846975
  br i1 %484, label %485, label %493

485:                                              ; preds = %481
  %486 = ashr exact i64 %482, 2
  %487 = icmp ult i64 %486, %476
  %488 = select i1 %487, i64 %476, i64 %486
  %489 = icmp eq i64 %488, 0
  br i1 %489, label %498, label %490

490:                                              ; preds = %485
  %491 = icmp ugt i64 %488, 2305843009213693951
  br i1 %491, label %492, label %493

492:                                              ; preds = %490
  call void @abort() #11
  unreachable

493:                                              ; preds = %490, %481
  %494 = phi i64 [ %488, %490 ], [ 2305843009213693951, %481 ]
  %495 = shl i64 %494, 3
  %496 = call i8* @_Znwm(i64 %495) #10
  %497 = bitcast i8* %496 to %"class.std::__1::unique_ptr.46"*
  br label %498

498:                                              ; preds = %493, %485
  %499 = phi i64 [ %494, %493 ], [ 0, %485 ]
  %500 = phi %"class.std::__1::unique_ptr.46"* [ %497, %493 ], [ null, %485 ]
  %501 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %500, i64 %475
  %502 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %500, i64 %499
  %503 = ptrtoint %"class.std::__1::unique_ptr.46"* %502 to i64
  %504 = bitcast %"class.std::__1::unique_ptr.46"* %501 to i64*
  store i64 %455, i64* %504, align 8
  %505 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %501, i64 1
  %506 = ptrtoint %"class.std::__1::unique_ptr.46"* %505 to i64
  %507 = icmp eq %"class.std::__1::unique_ptr.46"* %463, %478
  br i1 %507, label %535, label %508

508:                                              ; preds = %498
  %509 = getelementptr %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %463, i64 -1
  %510 = bitcast %"class.std::__1::unique_ptr.46"* %509 to i8*
  %511 = sub i64 0, %473
  %512 = getelementptr i8, i8* %510, i64 %511
  %513 = ptrtoint i8* %512 to i64
  %514 = lshr i64 %513, 3
  %515 = add nuw nsw i64 %514, 1
  %516 = and i64 %515, 7
  %517 = icmp eq i64 %516, 0
  br i1 %517, label %530, label %518

518:                                              ; preds = %508, %518
  %519 = phi %"class.std::__1::unique_ptr.46"* [ %522, %518 ], [ %501, %508 ]
  %520 = phi %"class.std::__1::unique_ptr.46"* [ %523, %518 ], [ %463, %508 ]
  %521 = phi i64 [ %528, %518 ], [ %516, %508 ]
  %522 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %519, i64 -1
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %520, i64 -1
  %524 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %523, i64 0, i32 0, i32 0, i32 0
  %525 = bitcast %"class.std::__1::unique_ptr.46"* %523 to i64*
  %526 = load i64, i64* %525, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %524, align 8
  %527 = bitcast %"class.std::__1::unique_ptr.46"* %522 to i64*
  store i64 %526, i64* %527, align 8
  %528 = add i64 %521, -1
  %529 = icmp eq i64 %528, 0
  br i1 %529, label %530, label %518, !llvm.loop !3

530:                                              ; preds = %518, %508
  %531 = phi %"class.std::__1::unique_ptr.46"* [ undef, %508 ], [ %522, %518 ]
  %532 = phi %"class.std::__1::unique_ptr.46"* [ %501, %508 ], [ %522, %518 ]
  %533 = phi %"class.std::__1::unique_ptr.46"* [ %463, %508 ], [ %523, %518 ]
  %534 = icmp ult i8* %512, inttoptr (i64 56 to i8*)
  br i1 %534, label %589, label %537

535:                                              ; preds = %498
  %536 = ptrtoint %"class.std::__1::unique_ptr.46"* %501 to i64
  store i64 %536, i64* %222, align 8
  store i64 %506, i64* %221, align 8
  store i64 %503, i64* %223, align 8
  br label %605

537:                                              ; preds = %530, %537
  %538 = phi %"class.std::__1::unique_ptr.46"* [ %582, %537 ], [ %532, %530 ]
  %539 = phi %"class.std::__1::unique_ptr.46"* [ %583, %537 ], [ %533, %530 ]
  %540 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %538, i64 -1
  %541 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %539, i64 -1
  %542 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %541, i64 0, i32 0, i32 0, i32 0
  %543 = bitcast %"class.std::__1::unique_ptr.46"* %541 to i64*
  %544 = load i64, i64* %543, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %542, align 8
  %545 = bitcast %"class.std::__1::unique_ptr.46"* %540 to i64*
  store i64 %544, i64* %545, align 8
  %546 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %538, i64 -2
  %547 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %539, i64 -2
  %548 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %547, i64 0, i32 0, i32 0, i32 0
  %549 = bitcast %"class.std::__1::unique_ptr.46"* %547 to i64*
  %550 = load i64, i64* %549, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %548, align 8
  %551 = bitcast %"class.std::__1::unique_ptr.46"* %546 to i64*
  store i64 %550, i64* %551, align 8
  %552 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %538, i64 -3
  %553 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %539, i64 -3
  %554 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %553, i64 0, i32 0, i32 0, i32 0
  %555 = bitcast %"class.std::__1::unique_ptr.46"* %553 to i64*
  %556 = load i64, i64* %555, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %554, align 8
  %557 = bitcast %"class.std::__1::unique_ptr.46"* %552 to i64*
  store i64 %556, i64* %557, align 8
  %558 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %538, i64 -4
  %559 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %539, i64 -4
  %560 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %559, i64 0, i32 0, i32 0, i32 0
  %561 = bitcast %"class.std::__1::unique_ptr.46"* %559 to i64*
  %562 = load i64, i64* %561, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %560, align 8
  %563 = bitcast %"class.std::__1::unique_ptr.46"* %558 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %538, i64 -5
  %565 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %539, i64 -5
  %566 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %565, i64 0, i32 0, i32 0, i32 0
  %567 = bitcast %"class.std::__1::unique_ptr.46"* %565 to i64*
  %568 = load i64, i64* %567, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %566, align 8
  %569 = bitcast %"class.std::__1::unique_ptr.46"* %564 to i64*
  store i64 %568, i64* %569, align 8
  %570 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %538, i64 -6
  %571 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %539, i64 -6
  %572 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %571, i64 0, i32 0, i32 0, i32 0
  %573 = bitcast %"class.std::__1::unique_ptr.46"* %571 to i64*
  %574 = load i64, i64* %573, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %572, align 8
  %575 = bitcast %"class.std::__1::unique_ptr.46"* %570 to i64*
  store i64 %574, i64* %575, align 8
  %576 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %538, i64 -7
  %577 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %539, i64 -7
  %578 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %577, i64 0, i32 0, i32 0, i32 0
  %579 = bitcast %"class.std::__1::unique_ptr.46"* %577 to i64*
  %580 = load i64, i64* %579, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %578, align 8
  %581 = bitcast %"class.std::__1::unique_ptr.46"* %576 to i64*
  store i64 %580, i64* %581, align 8
  %582 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %538, i64 -8
  %583 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %539, i64 -8
  %584 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %583, i64 0, i32 0, i32 0, i32 0
  %585 = bitcast %"class.std::__1::unique_ptr.46"* %583 to i64*
  %586 = load i64, i64* %585, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %584, align 8
  %587 = bitcast %"class.std::__1::unique_ptr.46"* %582 to i64*
  store i64 %586, i64* %587, align 8
  %588 = icmp eq %"class.std::__1::unique_ptr.46"* %583, %478
  br i1 %588, label %589, label %537

589:                                              ; preds = %537, %530
  %590 = phi %"class.std::__1::unique_ptr.46"* [ %531, %530 ], [ %582, %537 ]
  %591 = load i64, i64* %222, align 8
  %592 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %213, align 8
  %593 = inttoptr i64 %591 to %"class.std::__1::unique_ptr.46"*
  %594 = ptrtoint %"class.std::__1::unique_ptr.46"* %590 to i64
  store i64 %594, i64* %222, align 8
  store i64 %506, i64* %221, align 8
  store i64 %503, i64* %223, align 8
  %595 = icmp eq %"class.std::__1::unique_ptr.46"* %592, %593
  br i1 %595, label %605, label %596

596:                                              ; preds = %589, %603
  %597 = phi %"class.std::__1::unique_ptr.46"* [ %598, %603 ], [ %592, %589 ]
  %598 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %597, i64 -1
  %599 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %598, i64 0, i32 0, i32 0, i32 0
  %600 = load %struct.NAME_CONSTRAINTS_st*, %struct.NAME_CONSTRAINTS_st** %599, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %599, align 8
  %601 = icmp eq %struct.NAME_CONSTRAINTS_st* %600, null
  br i1 %601, label %603, label %602

602:                                              ; preds = %596
  call void @NAME_CONSTRAINTS_free(%struct.NAME_CONSTRAINTS_st* nonnull %600) #9
  br label %603

603:                                              ; preds = %602, %596
  %604 = icmp eq %"class.std::__1::unique_ptr.46"* %598, %593
  br i1 %604, label %605, label %596

605:                                              ; preds = %603, %535, %589
  %606 = phi i64 [ %473, %535 ], [ %591, %589 ], [ %591, %603 ]
  %607 = icmp eq i64 %606, 0
  br i1 %607, label %610, label %608

608:                                              ; preds = %605
  %609 = inttoptr i64 %606 to i8*
  call void @_ZdlPv(i8* %609) #10
  br label %610

610:                                              ; preds = %608, %605, %467, %461
  %611 = phi i64 [ %455, %461 ], [ 0, %467 ], [ 0, %605 ], [ 0, %608 ]
  %612 = call i8* @X509_get_ext_d2i(%struct.x509_st* %375, i32 747, i32* null, i32* null) #9
  %613 = icmp eq i8* %612, null
  br i1 %613, label %639, label %614

614:                                              ; preds = %610
  %615 = bitcast i8* %612 to %struct.stack_st_POLICY_MAPPING*
  %616 = call %struct.asn1_object_st* @OBJ_nid2obj(i32 746) #9
  %617 = bitcast %struct.stack_st_POLICY_MAPPING* %615 to %struct.stack_st*
  %618 = call i64 @sk_num(%struct.stack_st* nonnull %617) #9
  %619 = icmp eq i64 %618, 0
  br i1 %619, label %637, label %622

620:                                              ; preds = %629
  %621 = icmp eq i64 %635, %618
  br i1 %621, label %637, label %622

622:                                              ; preds = %614, %620
  %623 = phi i64 [ %635, %620 ], [ 0, %614 ]
  %624 = call i8* @sk_value(%struct.stack_st* nonnull %617, i64 %623) #9
  %625 = bitcast i8* %624 to %struct.asn1_object_st**
  %626 = load %struct.asn1_object_st*, %struct.asn1_object_st** %625, align 8
  %627 = call i32 @OBJ_cmp(%struct.asn1_object_st* %626, %struct.asn1_object_st* %616) #9
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %636, label %629

629:                                              ; preds = %622
  %630 = getelementptr inbounds i8, i8* %624, i64 8
  %631 = bitcast i8* %630 to %struct.asn1_object_st**
  %632 = load %struct.asn1_object_st*, %struct.asn1_object_st** %631, align 8
  %633 = call i32 @OBJ_cmp(%struct.asn1_object_st* %632, %struct.asn1_object_st* %616) #9
  %634 = icmp eq i32 %633, 0
  %635 = add nuw i64 %623, 1
  br i1 %634, label %636, label %620

636:                                              ; preds = %629, %622
  call void @sk_free(%struct.stack_st* nonnull %617) #9
  br label %693

637:                                              ; preds = %620, %614
  call void @sk_free(%struct.stack_st* nonnull %617) #9
  %638 = icmp eq i8 %396, 0
  br i1 %638, label %639, label %693

639:                                              ; preds = %637, %610
  %640 = call i32 @X509_get_ext_count(%struct.x509_st* %375) #9
  %641 = icmp sgt i32 %640, 0
  br i1 %641, label %642, label %653

642:                                              ; preds = %639, %650
  %643 = phi i32 [ %651, %650 ], [ 0, %639 ]
  %644 = call %struct.X509_extension_st* @X509_get_ext(%struct.x509_st* %375, i32 %643) #9
  %645 = call i32 @X509_EXTENSION_get_critical(%struct.X509_extension_st* %644) #9
  %646 = icmp eq i32 %645, 0
  br i1 %646, label %650, label %647

647:                                              ; preds = %642
  %648 = call %struct.asn1_object_st* @X509_EXTENSION_get_object(%struct.X509_extension_st* %644) #9
  %649 = call i32 @OBJ_obj2nid(%struct.asn1_object_st* %648) #9
  switch i32 %649, label %693 [
    i32 666, label %650
    i32 87, label %650
    i32 83, label %650
  ]

650:                                              ; preds = %647, %647, %647, %642
  %651 = add nuw nsw i32 %643, 1
  %652 = icmp eq i32 %651, %640
  br i1 %652, label %653, label %642

653:                                              ; preds = %650, %639
  %654 = call i32 @X509_get_signature_nid(%struct.x509_st* %373) #9
  switch i32 %654, label %693 [
    i32 65, label %655
    i32 668, label %657
    i32 669, label %659
    i32 670, label %661
  ]

655:                                              ; preds = %653
  %656 = call %struct.env_md_st* @EVP_sha1() #9
  br label %663

657:                                              ; preds = %653
  %658 = call %struct.env_md_st* @EVP_sha256() #9
  br label %663

659:                                              ; preds = %653
  %660 = call %struct.env_md_st* @EVP_sha384() #9
  br label %663

661:                                              ; preds = %653
  %662 = call %struct.env_md_st* @EVP_sha512() #9
  br label %663

663:                                              ; preds = %661, %659, %657, %655
  %664 = phi %struct.env_md_st* [ %662, %661 ], [ %660, %659 ], [ %658, %657 ], [ %656, %655 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #9
  store i8* null, i8** %12, align 8
  %665 = call i32 @i2d_X509_tbs(%struct.x509_st* %373, i8** nonnull %12) #9
  %666 = icmp slt i32 %665, 0
  br i1 %666, label %690, label %667

667:                                              ; preds = %663
  %668 = load i8*, i8** %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #9
  store %struct.asn1_string_st* inttoptr (i64 -6148914691236517206 to %struct.asn1_string_st*), %struct.asn1_string_st** %13, align 8
  call void @X509_get0_signature(%struct.asn1_string_st** nonnull %13, %struct.X509_algor_st** null, %struct.x509_st* %373) #9
  %669 = load i8*, i8** %12, align 8
  %670 = load %struct.asn1_string_st*, %struct.asn1_string_st** %13, align 8
  %671 = call i8* @ASN1_STRING_get0_data(%struct.asn1_string_st* %670) #9
  %672 = load %struct.asn1_string_st*, %struct.asn1_string_st** %13, align 8
  %673 = call i32 @ASN1_STRING_length(%struct.asn1_string_st* %672) #9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %226) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 -86, i64 32, i1 false) #9
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %227) #9
  %674 = call i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st* nonnull %227, %struct.evp_pkey_ctx_st** null, %struct.env_md_st* %664, %struct.engine_st* null, %struct.evp_pkey_st* %436) #9
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %678

676:                                              ; preds = %667
  %677 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %227) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %226) #9
  br label %684

678:                                              ; preds = %667
  %679 = zext i32 %673 to i64
  %680 = zext i32 %665 to i64
  %681 = call i32 @EVP_DigestVerify(%struct.env_md_ctx_st* nonnull %227, i8* %671, i64 %679, i8* %669, i64 %680) #9
  %682 = icmp eq i32 %681, 1
  %683 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %227) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %226) #9
  br i1 %682, label %685, label %684

684:                                              ; preds = %678, %676
  br label %685

685:                                              ; preds = %684, %678
  %686 = phi i32 [ 1, %684 ], [ 0, %678 ]
  %687 = phi i8 [ 53, %684 ], [ %365, %678 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #9
  %688 = icmp eq i8* %668, null
  br i1 %688, label %690, label %689

689:                                              ; preds = %685
  call void @OPENSSL_free(i8* nonnull %668) #9
  br label %690

690:                                              ; preds = %689, %685, %663
  %691 = phi i32 [ 1, %663 ], [ %686, %685 ], [ %686, %689 ]
  %692 = phi i8 [ 53, %663 ], [ %687, %685 ], [ %687, %689 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #9
  br label %693

693:                                              ; preds = %647, %690, %653, %637, %636, %453
  %694 = phi i64 [ %455, %453 ], [ %611, %653 ], [ %611, %690 ], [ %611, %637 ], [ %611, %636 ], [ %611, %647 ]
  %695 = phi i32 [ 1, %453 ], [ 1, %653 ], [ %691, %690 ], [ 1, %637 ], [ 1, %636 ], [ 1, %647 ]
  %696 = phi i8 [ %396, %453 ], [ %396, %653 ], [ %396, %690 ], [ %396, %637 ], [ 53, %636 ], [ %396, %647 ]
  %697 = phi i8 [ 53, %453 ], [ 53, %653 ], [ %692, %690 ], [ %396, %637 ], [ 53, %636 ], [ 53, %647 ]
  %698 = icmp eq i64 %694, 0
  br i1 %698, label %701, label %699

699:                                              ; preds = %693
  %700 = inttoptr i64 %694 to %struct.NAME_CONSTRAINTS_st*
  call void @NAME_CONSTRAINTS_free(%struct.NAME_CONSTRAINTS_st* nonnull %700) #9
  br label %701

701:                                              ; preds = %699, %693
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #9
  br label %702

702:                                              ; preds = %446, %701, %435
  %703 = phi i32 [ %695, %701 ], [ 1, %435 ], [ 1, %446 ]
  %704 = phi i8 [ %696, %701 ], [ %396, %435 ], [ %396, %446 ]
  %705 = phi i8 [ %697, %701 ], [ 53, %435 ], [ 53, %446 ]
  %706 = icmp eq %struct.evp_pkey_st* %436, null
  br i1 %706, label %708, label %707

707:                                              ; preds = %702
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %436) #9
  br label %708

708:                                              ; preds = %707, %702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #9
  br label %709

709:                                              ; preds = %708, %434, %417, %408
  %710 = phi i8 [ %705, %708 ], [ 53, %434 ], [ 53, %417 ], [ 53, %408 ]
  %711 = phi i32 [ %429, %708 ], [ %429, %434 ], [ %397, %417 ], [ %397, %408 ]
  %712 = phi i8 [ %704, %708 ], [ %396, %434 ], [ %396, %417 ], [ %396, %408 ]
  %713 = phi i32 [ %703, %708 ], [ 1, %434 ], [ 1, %417 ], [ 1, %408 ]
  call void @BASIC_CONSTRAINTS_free(%struct.BASIC_CONSTRAINTS_st* nonnull %406) #9
  br label %714

714:                                              ; preds = %709, %404
  %715 = phi i32 [ %713, %709 ], [ 1, %404 ]
  %716 = phi i8 [ %712, %709 ], [ %396, %404 ]
  %717 = phi i32 [ %711, %709 ], [ %397, %404 ]
  %718 = phi i8 [ %710, %709 ], [ 53, %404 ]
  br i1 %400, label %724, label %719

719:                                              ; preds = %714, %401
  %720 = phi i8 [ %718, %714 ], [ 53, %401 ]
  %721 = phi i32 [ %717, %714 ], [ %397, %401 ]
  %722 = phi i8 [ %716, %714 ], [ %396, %401 ]
  %723 = phi i32 [ %715, %714 ], [ 1, %401 ]
  call void @ASN1_STRING_free(%struct.asn1_string_st* nonnull %399) #9
  br label %724

724:                                              ; preds = %719, %714
  %725 = phi i32 [ %715, %714 ], [ %723, %719 ]
  %726 = phi i8 [ %716, %714 ], [ %722, %719 ]
  %727 = phi i32 [ %717, %714 ], [ %721, %719 ]
  %728 = phi i8 [ %718, %714 ], [ %720, %719 ]
  %729 = icmp eq i32 %725, 0
  br i1 %729, label %730, label %761

730:                                              ; preds = %724
  %731 = load i64, i64* %180, align 8
  %732 = load i64, i64* %181, align 8
  %733 = sub i64 %731, %732
  %734 = ashr exact i64 %733, 4
  %735 = add nsw i64 %734, -1
  %736 = icmp ugt i64 %735, %371
  br i1 %736, label %362, label %737

737:                                              ; preds = %730
  %738 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %212, align 8
  %739 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %213, align 8
  %740 = icmp eq %"class.std::__1::unique_ptr.46"* %738, %739
  br i1 %740, label %764, label %741

741:                                              ; preds = %737
  %742 = inttoptr i64 %731 to %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*
  %743 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %742, i64 -1, i32 0
  %744 = load %struct.x509_st*, %struct.x509_st** %743, align 8
  %745 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %738, i64 0, i32 0, i32 0, i32 0
  %746 = load %struct.NAME_CONSTRAINTS_st*, %struct.NAME_CONSTRAINTS_st** %745, align 8
  %747 = call i32 @NAME_CONSTRAINTS_check(%struct.x509_st* %744, %struct.NAME_CONSTRAINTS_st* %746) #9
  %748 = icmp eq i32 %747, 0
  br i1 %748, label %749, label %761

749:                                              ; preds = %741, %753
  %750 = phi %"class.std::__1::unique_ptr.46"* [ %751, %753 ], [ %738, %741 ]
  %751 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %750, i64 1
  %752 = icmp eq %"class.std::__1::unique_ptr.46"* %751, %739
  br i1 %752, label %761, label %753

753:                                              ; preds = %749
  %754 = load %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*, %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"** %171, align 8
  %755 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %754, i64 -1, i32 0
  %756 = load %struct.x509_st*, %struct.x509_st** %755, align 8
  %757 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %751, i64 0, i32 0, i32 0, i32 0
  %758 = load %struct.NAME_CONSTRAINTS_st*, %struct.NAME_CONSTRAINTS_st** %757, align 8
  %759 = call i32 @NAME_CONSTRAINTS_check(%struct.x509_st* %756, %struct.NAME_CONSTRAINTS_st* %758) #9
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %749, label %761

761:                                              ; preds = %724, %390, %749, %753, %741, %383
  %762 = phi i8 [ %384, %383 ], [ 53, %741 ], [ %726, %749 ], [ 53, %753 ], [ 57, %390 ], [ %728, %724 ]
  %763 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %212, align 8
  br label %764

764:                                              ; preds = %761, %737
  %765 = phi %"class.std::__1::unique_ptr.46"* [ %763, %761 ], [ %739, %737 ]
  %766 = phi i8 [ %762, %761 ], [ %726, %737 ]
  %767 = icmp eq %"class.std::__1::unique_ptr.46"* %765, null
  br i1 %767, label %785, label %768

768:                                              ; preds = %764
  %769 = bitcast %"class.std::__1::unique_ptr.46"* %765 to i8*
  %770 = load %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"** %213, align 8
  %771 = icmp eq %"class.std::__1::unique_ptr.46"* %770, %765
  br i1 %771, label %783, label %772

772:                                              ; preds = %768, %779
  %773 = phi %"class.std::__1::unique_ptr.46"* [ %774, %779 ], [ %770, %768 ]
  %774 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %773, i64 -1
  %775 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %774, i64 0, i32 0, i32 0, i32 0
  %776 = load %struct.NAME_CONSTRAINTS_st*, %struct.NAME_CONSTRAINTS_st** %775, align 8
  store %struct.NAME_CONSTRAINTS_st* null, %struct.NAME_CONSTRAINTS_st** %775, align 8
  %777 = icmp eq %struct.NAME_CONSTRAINTS_st* %776, null
  br i1 %777, label %779, label %778

778:                                              ; preds = %772
  call void @NAME_CONSTRAINTS_free(%struct.NAME_CONSTRAINTS_st* nonnull %776) #9
  br label %779

779:                                              ; preds = %778, %772
  %780 = icmp eq %"class.std::__1::unique_ptr.46"* %774, %765
  br i1 %780, label %781, label %772

781:                                              ; preds = %779
  %782 = load i8*, i8** %228, align 8
  br label %783

783:                                              ; preds = %781, %768
  %784 = phi i8* [ %782, %781 ], [ %769, %768 ]
  store %"class.std::__1::unique_ptr.46"* %765, %"class.std::__1::unique_ptr.46"** %213, align 8
  call void @_ZdlPv(i8* %784) #10
  br label %785

785:                                              ; preds = %764, %783
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #9
  %786 = icmp eq i8 %766, 0
  br i1 %786, label %801, label %787

787:                                              ; preds = %785
  %788 = load %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*, %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"** %170, align 8
  %789 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %788, i64 %353, i32 1
  %790 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %788, i64 %353, i32 2
  br label %791

791:                                              ; preds = %339, %787
  %792 = phi i32* [ %790, %787 ], [ %343, %339 ]
  %793 = phi %struct.x509_st* [ %349, %787 ], [ %237, %339 ]
  %794 = phi i32 [ %348, %787 ], [ %334, %339 ]
  %795 = phi i8 [ 0, %787 ], [ %277, %339 ]
  %796 = phi i32* [ %789, %787 ], [ %342, %339 ]
  %797 = phi i8 [ %766, %787 ], [ %235, %339 ]
  %798 = load i32, i32* %796, align 8
  %799 = add i32 %794, 1
  %800 = load i32, i32* %792, align 4
  br label %229

801:                                              ; preds = %785, %357
  %802 = zext i32 %348 to i64
  %803 = getelementptr inbounds %"struct.openscreen::cast::CertificatePathResult", %"struct.openscreen::cast::CertificatePathResult"* %3, i64 0, i32 2
  %804 = load i64, i64* %180, align 8
  %805 = load i64, i64* %181, align 8
  %806 = sub i64 %804, %805
  %807 = ashr exact i64 %806, 4
  %808 = sub nsw i64 %807, %802
  %809 = getelementptr inbounds %"struct.openscreen::cast::CertificatePathResult", %"struct.openscreen::cast::CertificatePathResult"* %3, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %810 = bitcast %struct.x509_st*** %809 to i64*
  %811 = load i64, i64* %810, align 8
  %812 = bitcast %"class.std::__1::vector.23"* %803 to i64*
  %813 = load i64, i64* %812, align 8
  %814 = sub i64 %811, %813
  %815 = ashr exact i64 %814, 3
  %816 = icmp ult i64 %815, %808
  %817 = inttoptr i64 %805 to %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*
  br i1 %816, label %818, label %847

818:                                              ; preds = %801
  %819 = getelementptr inbounds %"struct.openscreen::cast::CertificatePathResult", %"struct.openscreen::cast::CertificatePathResult"* %3, i64 0, i32 2, i32 0, i32 1
  %820 = bitcast %struct.x509_st*** %819 to i64*
  %821 = icmp ugt i64 %808, 2305843009213693951
  br i1 %821, label %822, label %823

822:                                              ; preds = %818
  call void @abort() #11
  unreachable

823:                                              ; preds = %818
  %824 = load i64, i64* %820, align 8
  %825 = sub i64 %824, %813
  %826 = ashr exact i64 %825, 3
  %827 = shl nsw i64 %808, 3
  %828 = call i8* @_Znwm(i64 %827) #10
  %829 = bitcast i8* %828 to %struct.x509_st**
  %830 = getelementptr inbounds %struct.x509_st*, %struct.x509_st** %829, i64 %826
  %831 = ptrtoint %struct.x509_st** %830 to i64
  %832 = getelementptr inbounds %struct.x509_st*, %struct.x509_st** %829, i64 %808
  %833 = ptrtoint %struct.x509_st** %832 to i64
  %834 = ptrtoint i8* %828 to i64
  %835 = icmp sgt i64 %825, 0
  br i1 %835, label %836, label %838

836:                                              ; preds = %823
  %837 = inttoptr i64 %813 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %828, i8* align 8 %837, i64 %825, i1 false) #9
  br label %838

838:                                              ; preds = %836, %823
  store i64 %834, i64* %812, align 8
  store i64 %831, i64* %820, align 8
  store i64 %833, i64* %810, align 8
  %839 = icmp eq i64 %813, 0
  br i1 %839, label %847, label %840

840:                                              ; preds = %838
  %841 = inttoptr i64 %813 to i8*
  call void @_ZdlPv(i8* %841) #10
  %842 = load i64, i64* %180, align 8
  %843 = load i64, i64* %181, align 8
  %844 = inttoptr i64 %843 to %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*
  %845 = sub i64 %842, %843
  %846 = ashr exact i64 %845, 4
  br label %847

847:                                              ; preds = %801, %838, %840
  %848 = phi i64 [ %807, %801 ], [ %807, %838 ], [ %846, %840 ]
  %849 = phi %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* [ %817, %801 ], [ %817, %838 ], [ %844, %840 ]
  %850 = icmp ugt i64 %848, %802
  br i1 %850, label %851, label %934

851:                                              ; preds = %847
  %852 = getelementptr inbounds %"struct.openscreen::cast::CertificatePathResult", %"struct.openscreen::cast::CertificatePathResult"* %3, i64 0, i32 2, i32 0, i32 1
  %853 = bitcast %struct.x509_st*** %852 to i64*
  %854 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %803, i64 0, i32 0, i32 0
  br label %855

855:                                              ; preds = %851, %925
  %856 = phi %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* [ %849, %851 ], [ %933, %925 ]
  %857 = phi i64 [ %802, %851 ], [ %927, %925 ]
  %858 = phi i32 [ %348, %851 ], [ %926, %925 ]
  %859 = getelementptr inbounds %"struct.openscreen::cast::(anonymous namespace)::CertPathStep", %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %856, i64 %857, i32 0
  %860 = load %struct.x509_st**, %struct.x509_st*** %852, align 8
  %861 = load %struct.x509_st**, %struct.x509_st*** %809, align 8
  %862 = icmp eq %struct.x509_st** %860, %861
  %863 = ptrtoint %struct.x509_st** %861 to i64
  br i1 %862, label %870, label %864

864:                                              ; preds = %855
  %865 = bitcast %struct.x509_st** %859 to i64*
  %866 = load i64, i64* %865, align 8
  %867 = bitcast %struct.x509_st** %860 to i64*
  store i64 %866, i64* %867, align 8
  %868 = getelementptr inbounds %struct.x509_st*, %struct.x509_st** %860, i64 1
  %869 = ptrtoint %struct.x509_st** %868 to i64
  store i64 %869, i64* %853, align 8
  br label %925

870:                                              ; preds = %855
  %871 = ptrtoint %struct.x509_st** %860 to i64
  %872 = load i64, i64* %812, align 8
  %873 = sub i64 %871, %872
  %874 = ashr exact i64 %873, 3
  %875 = add nsw i64 %874, 1
  %876 = icmp ugt i64 %875, 2305843009213693951
  br i1 %876, label %877, label %879

877:                                              ; preds = %870
  %878 = bitcast %"class.std::__1::vector.23"* %803 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %878) #11
  unreachable

879:                                              ; preds = %870
  %880 = sub i64 %863, %872
  %881 = ashr exact i64 %880, 3
  %882 = icmp ult i64 %881, 1152921504606846975
  br i1 %882, label %883, label %891

883:                                              ; preds = %879
  %884 = ashr exact i64 %880, 2
  %885 = icmp ult i64 %884, %875
  %886 = select i1 %885, i64 %875, i64 %884
  %887 = icmp eq i64 %886, 0
  br i1 %887, label %896, label %888

888:                                              ; preds = %883
  %889 = icmp ugt i64 %886, 2305843009213693951
  br i1 %889, label %890, label %891

890:                                              ; preds = %888
  call void @abort() #11
  unreachable

891:                                              ; preds = %888, %879
  %892 = phi i64 [ %886, %888 ], [ 2305843009213693951, %879 ]
  %893 = shl i64 %892, 3
  %894 = call i8* @_Znwm(i64 %893) #10
  %895 = bitcast i8* %894 to %struct.x509_st**
  br label %896

896:                                              ; preds = %891, %883
  %897 = phi i64 [ %892, %891 ], [ 0, %883 ]
  %898 = phi %struct.x509_st** [ %895, %891 ], [ null, %883 ]
  %899 = getelementptr inbounds %struct.x509_st*, %struct.x509_st** %898, i64 %874
  %900 = getelementptr inbounds %struct.x509_st*, %struct.x509_st** %898, i64 %897
  %901 = ptrtoint %struct.x509_st** %900 to i64
  %902 = bitcast %struct.x509_st** %859 to i64*
  %903 = load i64, i64* %902, align 8
  %904 = bitcast %struct.x509_st** %899 to i64*
  store i64 %903, i64* %904, align 8
  %905 = getelementptr inbounds %struct.x509_st*, %struct.x509_st** %899, i64 1
  %906 = ptrtoint %struct.x509_st** %905 to i64
  %907 = load %struct.x509_st**, %struct.x509_st*** %854, align 8
  %908 = load i64, i64* %853, align 8
  %909 = ptrtoint %struct.x509_st** %907 to i64
  %910 = sub i64 %908, %909
  %911 = ashr exact i64 %910, 3
  %912 = sub nsw i64 0, %911
  %913 = getelementptr inbounds %struct.x509_st*, %struct.x509_st** %899, i64 %912
  %914 = ptrtoint %struct.x509_st** %913 to i64
  %915 = icmp sgt i64 %910, 0
  br i1 %915, label %916, label %920

916:                                              ; preds = %896
  %917 = bitcast %struct.x509_st** %913 to i8*
  %918 = bitcast %struct.x509_st** %907 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %917, i8* align 8 %918, i64 %910, i1 false) #9
  %919 = load %struct.x509_st**, %struct.x509_st*** %854, align 8
  br label %920

920:                                              ; preds = %916, %896
  %921 = phi %struct.x509_st** [ %907, %896 ], [ %919, %916 ]
  store i64 %914, i64* %812, align 8
  store i64 %906, i64* %853, align 8
  store i64 %901, i64* %810, align 8
  %922 = icmp eq %struct.x509_st** %921, null
  br i1 %922, label %925, label %923

923:                                              ; preds = %920
  %924 = bitcast %struct.x509_st** %921 to i8*
  call void @_ZdlPv(i8* %924) #10
  br label %925

925:                                              ; preds = %864, %920, %923
  %926 = add i32 %858, 1
  %927 = zext i32 %926 to i64
  %928 = load i64, i64* %180, align 8
  %929 = load i64, i64* %181, align 8
  %930 = sub i64 %928, %929
  %931 = ashr exact i64 %930, 4
  %932 = icmp ugt i64 %931, %927
  %933 = inttoptr i64 %929 to %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*
  br i1 %932, label %855, label %934

934:                                              ; preds = %925, %847, %336
  %935 = phi i8 [ %338, %336 ], [ 0, %847 ], [ 0, %925 ]
  call void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"* %0, i8 signext %935) #9
  %936 = load %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"*, %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"** %170, align 8
  %937 = icmp eq %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %936, null
  br i1 %937, label %941, label %938

938:                                              ; preds = %934
  %939 = ptrtoint %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %936 to i64
  store i64 %939, i64* %180, align 8
  %940 = bitcast %"struct.openscreen::cast::(anonymous namespace)::CertPathStep"* %936 to i8*
  call void @_ZdlPv(i8* %940) #10
  br label %941

941:                                              ; preds = %938, %934
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #9
  br label %942

942:                                              ; preds = %941, %166
  call void @ASN1_STRING_free(%struct.asn1_string_st* nonnull %160) #9
  br label %943

943:                                              ; preds = %942, %162, %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #9
  br label %944

944:                                              ; preds = %943, %147
  %945 = icmp eq %struct.evp_pkey_st* %144, null
  br i1 %945, label %947, label %946

946:                                              ; preds = %944
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %144) #9
  br label %947

947:                                              ; preds = %946, %944, %84, %126, %140, %40
  ret void
}

declare void @_ZN10openscreen5ErrorC1ENS0_4CodeEONSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.openscreen::Error"*, i8 signext, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN10openscreen5ErrorC1ENS0_4CodeE(%"class.openscreen::Error"*, i8 signext) unnamed_addr #2

declare %struct.evp_pkey_st* @X509_get_pubkey(%struct.x509_st*) local_unnamed_addr #2

declare void @X509_get0_signature(%struct.asn1_string_st**, %struct.X509_algor_st**, %struct.x509_st*) local_unnamed_addr #2

declare i32 @X509_ALGOR_cmp(%struct.X509_algor_st*, %struct.X509_algor_st*) local_unnamed_addr #2

declare %struct.X509_algor_st* @X509_get0_tbs_sigalg(%struct.x509_st*) local_unnamed_addr #2

declare i32 @ASN1_BIT_STRING_get_bit(%struct.asn1_string_st*, i32) local_unnamed_addr #2

declare %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st*) local_unnamed_addr #2

declare %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st*) local_unnamed_addr #2

declare i32 @X509_NAME_cmp(%struct.X509_name_st*, %struct.X509_name_st*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN10openscreen4castltERKNS0_8DateTimeES3_(%"struct.openscreen::cast::DateTime"* dereferenceable(8), %"struct.openscreen::cast::DateTime"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @EVP_PKEY_bits(%struct.evp_pkey_st*) local_unnamed_addr #2

declare i8* @X509_get_ext_d2i(%struct.x509_st*, i32, i32*, i32*) local_unnamed_addr #2

declare i32 @NAME_CONSTRAINTS_check(%struct.x509_st*, %struct.NAME_CONSTRAINTS_st*) local_unnamed_addr #2

declare %struct.asn1_object_st* @OBJ_nid2obj(i32) local_unnamed_addr #2

declare i32 @OBJ_cmp(%struct.asn1_object_st*, %struct.asn1_object_st*) local_unnamed_addr #2

declare i32 @X509_get_ext_count(%struct.x509_st*) local_unnamed_addr #2

declare %struct.X509_extension_st* @X509_get_ext(%struct.x509_st*, i32) local_unnamed_addr #2

declare i32 @X509_EXTENSION_get_critical(%struct.X509_extension_st*) local_unnamed_addr #2

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #2

declare %struct.asn1_object_st* @X509_EXTENSION_get_object(%struct.X509_extension_st*) local_unnamed_addr #2

declare i32 @X509_get_signature_nid(%struct.x509_st*) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha1() local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha384() local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha512() local_unnamed_addr #2

declare i32 @i2d_X509_tbs(%struct.x509_st*, i8**) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare void @sk_free(%struct.stack_st*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare void @NAME_CONSTRAINTS_free(%struct.NAME_CONSTRAINTS_st*) local_unnamed_addr #2

declare void @BASIC_CONSTRAINTS_free(%struct.BASIC_CONSTRAINTS_st*) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @ASN1_STRING_free(%struct.asn1_string_st*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI7x509_stN4bssl8internal7DeleterIS2_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJPS2_EEEvDpOT_(%"class.std::__1::vector"*, %struct.x509_st** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.1"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.1"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.1"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.1"* %38 to i64
  %40 = bitcast %struct.x509_st** %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::unique_ptr.1"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %37, i64 1
  %44 = ptrtoint %"class.std::__1::unique_ptr.1"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %45, align 8
  %47 = ptrtoint %"class.std::__1::unique_ptr.1"* %46 to i64
  %48 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %3, align 8
  %49 = icmp eq %"class.std::__1::unique_ptr.1"* %48, %46
  br i1 %49, label %131, label %50

50:                                               ; preds = %34
  %51 = getelementptr %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %48, i64 -1, i32 0, i32 0, i32 0
  %52 = ptrtoint %struct.x509_st** %51 to i64
  %53 = sub i64 %52, %47
  %54 = lshr i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 7
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %50, %58
  %59 = phi %"class.std::__1::unique_ptr.1"* [ %62, %58 ], [ %37, %50 ]
  %60 = phi %"class.std::__1::unique_ptr.1"* [ %63, %58 ], [ %48, %50 ]
  %61 = phi i64 [ %68, %58 ], [ %56, %50 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %59, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::unique_ptr.1"* %63 to i64*
  %66 = load i64, i64* %65, align 8
  store %struct.x509_st* null, %struct.x509_st** %64, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.1"* %62 to i64*
  store i64 %66, i64* %67, align 8
  %68 = add i64 %61, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %58, !llvm.loop !5

70:                                               ; preds = %58, %50
  %71 = phi %"class.std::__1::unique_ptr.1"* [ undef, %50 ], [ %62, %58 ]
  %72 = phi %"class.std::__1::unique_ptr.1"* [ %37, %50 ], [ %62, %58 ]
  %73 = phi %"class.std::__1::unique_ptr.1"* [ %48, %50 ], [ %63, %58 ]
  %74 = icmp ult i64 %53, 56
  br i1 %74, label %127, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"class.std::__1::unique_ptr.1"* [ %120, %75 ], [ %72, %70 ]
  %77 = phi %"class.std::__1::unique_ptr.1"* [ %121, %75 ], [ %73, %70 ]
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %76, i64 -1
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.std::__1::unique_ptr.1"* %79 to i64*
  %82 = load i64, i64* %81, align 8
  store %struct.x509_st* null, %struct.x509_st** %80, align 8
  %83 = bitcast %"class.std::__1::unique_ptr.1"* %78 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %76, i64 -2
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr.1"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  store %struct.x509_st* null, %struct.x509_st** %86, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.1"* %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %76, i64 -3
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.1"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  store %struct.x509_st* null, %struct.x509_st** %92, align 8
  %95 = bitcast %"class.std::__1::unique_ptr.1"* %90 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %76, i64 -4
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.std::__1::unique_ptr.1"* %97 to i64*
  %100 = load i64, i64* %99, align 8
  store %struct.x509_st* null, %struct.x509_st** %98, align 8
  %101 = bitcast %"class.std::__1::unique_ptr.1"* %96 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %76, i64 -5
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.std::__1::unique_ptr.1"* %103 to i64*
  %106 = load i64, i64* %105, align 8
  store %struct.x509_st* null, %struct.x509_st** %104, align 8
  %107 = bitcast %"class.std::__1::unique_ptr.1"* %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %76, i64 -6
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.std::__1::unique_ptr.1"* %109 to i64*
  %112 = load i64, i64* %111, align 8
  store %struct.x509_st* null, %struct.x509_st** %110, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.1"* %108 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %76, i64 -7
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = bitcast %"class.std::__1::unique_ptr.1"* %115 to i64*
  %118 = load i64, i64* %117, align 8
  store %struct.x509_st* null, %struct.x509_st** %116, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.1"* %114 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %76, i64 -8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr.1"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  store %struct.x509_st* null, %struct.x509_st** %122, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.1"* %120 to i64*
  store i64 %124, i64* %125, align 8
  %126 = icmp eq %"class.std::__1::unique_ptr.1"* %121, %46
  br i1 %126, label %127, label %75

127:                                              ; preds = %75, %70
  %128 = phi %"class.std::__1::unique_ptr.1"* [ %71, %70 ], [ %120, %75 ]
  %129 = load i64, i64* %6, align 8
  %130 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %3, align 8
  br label %131

131:                                              ; preds = %34, %127
  %132 = phi %"class.std::__1::unique_ptr.1"* [ %130, %127 ], [ %46, %34 ]
  %133 = phi %"class.std::__1::unique_ptr.1"* [ %128, %127 ], [ %37, %34 ]
  %134 = phi i64 [ %129, %127 ], [ %47, %34 ]
  %135 = ptrtoint %"class.std::__1::unique_ptr.1"* %133 to i64
  store i64 %135, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %136 = inttoptr i64 %134 to %"class.std::__1::unique_ptr.1"*
  %137 = icmp eq %"class.std::__1::unique_ptr.1"* %132, %136
  br i1 %137, label %147, label %138

138:                                              ; preds = %131, %145
  %139 = phi %"class.std::__1::unique_ptr.1"* [ %140, %145 ], [ %132, %131 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %139, i64 -1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = load %struct.x509_st*, %struct.x509_st** %141, align 8
  store %struct.x509_st* null, %struct.x509_st** %141, align 8
  %143 = icmp eq %struct.x509_st* %142, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %138
  tail call void @X509_free(%struct.x509_st* nonnull %142) #9
  br label %145

145:                                              ; preds = %144, %138
  %146 = icmp eq %"class.std::__1::unique_ptr.1"* %140, %136
  br i1 %146, label %147, label %138

147:                                              ; preds = %145, %131
  %148 = icmp eq i64 %134, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = inttoptr i64 %134 to i8*
  tail call void @_ZdlPv(i8* %150) #10
  br label %151

151:                                              ; preds = %147, %149
  ret void
}

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #2

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #2

declare void @X509_free(%struct.x509_st*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
