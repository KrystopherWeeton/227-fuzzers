; ModuleID = '../../ui/display/screen.cc'
source_filename = "../../ui/display/screen.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%union.anon = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%union.anon.4 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.0" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%"class.aura::Window" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.display::Display"*, %"class.display::Display"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.display::Display"* }
%"class.display::DisplayList" = type { %"class.std::__1::vector", i64, i64, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.6", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.14" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.21 }
%union.anon.21 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.39" }
%"union.absl::variant_internal::DestructibleUnionImpl.39" = type { %"union.absl::variant_internal::DestructibleUnionImpl.40" }
%"union.absl::variant_internal::DestructibleUnionImpl.40" = type { %"union.absl::variant_internal::DestructibleUnionImpl.41" }
%"union.absl::variant_internal::DestructibleUnionImpl.41" = type { %"union.absl::variant_internal::DestructibleUnionImpl.42" }
%"union.absl::variant_internal::DestructibleUnionImpl.42" = type { %"class.std::__1::basic_string" }
%"struct.gfx::GpuExtraInfo" = type { %"class.std::__1::vector.25", %"class.std::__1::vector.32" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"*, %"class.std::__1::__compressed_pair.27" }
%"struct.gfx::ANGLEFeature" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.gfx::ANGLEFeature"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.34" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.gfx::BufferUsageAndFormat"* }

@_ZTVN7display6ScreenE = hidden unnamed_addr constant { [25 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.display::Screen"*)* @_ZN7display6ScreenD2Ev to i8*), i8* bitcast (void (%"class.display::Screen"*)* @_ZN7display6ScreenD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)* @_ZNK7display6Screen21GetDisplayNearestViewEPN4aura6WindowE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.display::Screen"*, i1)* @_ZN7display6Screen23SetScreenSaverSuspendedEb to i8*), i8* bitcast (i1 (%"class.display::Screen"*)* @_ZNK7display6Screen19IsScreenSaverActiveEv to i8*), i8* bitcast (i64 (%"class.display::Screen"*)* @_ZNK7display6Screen17CalculateIdleTimeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)* @_ZNK7display6Screen23ScreenToDIPRectInWindowEPN4aura6WindowERKN3gfx4RectE to i8*), i8* bitcast ({ i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)* @_ZNK7display6Screen23DIPToScreenRectInWindowEPN4aura6WindowERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.display::Screen"*, i64, i32)* @_ZN7display6Screen26SetPanelRotationForTestingElNS_7Display8RotationE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.display::Screen"*)* @_ZN7display6Screen19GetCurrentWorkspaceEv to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.display::Screen"*, %"struct.gfx::GpuExtraInfo"*)* @_ZN7display6Screen26GetGpuExtraInfoAsListValueERKN3gfx12GpuExtraInfoE to i8*)] }, align 8
@_ZN7display12_GLOBAL__N_18g_screenE = internal unnamed_addr global %"class.display::Screen"* null, align 8
@_ZZN7display6Screen23SetScreenSaverSuspendedEbE11logged_once = internal unnamed_addr global i1 false, align 1
@_ZZNK7display6Screen19IsScreenSaverActiveEvE11logged_once = internal unnamed_addr global i1 false, align 1
@_ZZNK7display6Screen17CalculateIdleTimeEvE11logged_once = internal unnamed_addr global i1 false, align 1
@_ZZN7display6Screen19GetCurrentWorkspaceEvE11logged_once = internal unnamed_addr global i1 false, align 1
@__const._ZNK7display6Screen41GetDisplayListNearestDisplayWithFallbacksENS_7DisplayE.primary = private unnamed_addr constant { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } }, i32, i32, i8, [3 x i8], i32 } { i64 -6148914691236517206, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { i32 -1431655766 } } } } }, i32 -1431655766, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } } { [6 x %"class.gfx::ColorSpace"] [%"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }], [6 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.4 } } } } { { { { i8, [7 x i8], %union.anon.4 } } } { { { i8, [7 x i8], %union.anon.4 } } { { i8, [7 x i8], %union.anon.4 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.4 { %"struct.gfx::HDRStaticMetadata" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } } } } } } }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8
@.str = private unnamed_addr constant [27 x i8] c"../../ui/display/screen.cc\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"display_list.IsValidAndHasPrimaryAndCurrentDisplays()\00", align 1

@_ZN7display6ScreenD1Ev = hidden unnamed_addr alias void (%"class.display::Screen"*), void (%"class.display::Screen"*)* @_ZN7display6ScreenD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7display6ScreenC2Ev(%"class.display::Screen"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.display::Screen", %"class.display::Screen"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN7display6ScreenE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.display::Screen", %"class.display::Screen"* %0, i64 0, i32 1
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -1, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7display6ScreenD2Ev(%"class.display::Screen"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7display6ScreenD0Ev(%"class.display::Screen"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #4 align 2 {
  %1 = load %"class.display::Screen"*, %"class.display::Screen"** @_ZN7display12_GLOBAL__N_18g_screenE, align 8
  ret %"class.display::Screen"* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.display::Screen"* @_ZN7display6Screen17SetScreenInstanceEPS0_(%"class.display::Screen"*) local_unnamed_addr #5 align 2 {
  %2 = ptrtoint %"class.display::Screen"* %0 to i64
  %3 = load %"class.display::Screen"*, %"class.display::Screen"** @_ZN7display12_GLOBAL__N_18g_screenE, align 8
  store i64 %2, i64* bitcast (%"class.display::Screen"** @_ZN7display12_GLOBAL__N_18g_screenE to i64*), align 8
  ret %"class.display::Screen"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7display6Screen21GetDisplayNearestViewEPN4aura6WindowE(%"class.display::Display"* noalias sret, %"class.display::Screen"*, %"class.aura::Window"*) unnamed_addr #6 align 2 {
  %4 = tail call %"class.aura::Window"* @_ZN7display6Screen16GetWindowForViewEPN4aura6WindowE(%"class.aura::Window"* %2) #14
  %5 = bitcast %"class.display::Screen"* %1 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %6 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %6, i64 8
  %8 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %7, align 8
  tail call void %8(%"class.display::Display"* sret %0, %"class.display::Screen"* %1, %"class.aura::Window"* %4) #14
  ret void
}

declare %"class.aura::Window"* @_ZN7display6Screen16GetWindowForViewEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7display6Screen23GetDisplayForNewWindowsEv(%"class.display::Display"* noalias sret, %"class.display::Screen"*) local_unnamed_addr #6 align 2 {
  %3 = alloca %"class.display::Display", align 8
  %4 = bitcast %"class.display::Display"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %4) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZNK7display6Screen41GetDisplayListNearestDisplayWithFallbacksENS_7DisplayE.primary to i8*), i64 568, i1 false)
  call void @_ZN7display7DisplayC1Ev(%"class.display::Display"* nonnull %3) #14
  %5 = getelementptr inbounds %"class.display::Screen", %"class.display::Screen"* %1, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, -1
  %8 = bitcast %"class.display::Screen"* %1 to %"class.std::__1::vector"* (%"class.display::Screen"*)***
  br i1 %7, label %52, label %9

9:                                                ; preds = %2
  %10 = load %"class.std::__1::vector"* (%"class.display::Screen"*)**, %"class.std::__1::vector"* (%"class.display::Screen"*)*** %8, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %10, i64 7
  %12 = load %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %11, align 8
  %13 = call dereferenceable(24) %"class.std::__1::vector"* %12(%"class.display::Screen"* %1) #14
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.display::Display"*, %"class.display::Display"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %17 = load %"class.display::Display"*, %"class.display::Display"** %16, align 8
  %18 = icmp eq %"class.display::Display"* %15, %17
  br i1 %18, label %52, label %19

19:                                               ; preds = %9, %44
  %20 = phi %"class.display::Display"* [ %45, %44 ], [ %15, %9 ]
  %21 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %20, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, %6
  br i1 %23, label %24, label %44

24:                                               ; preds = %19
  %25 = bitcast %"class.display::Display"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %25, i64 80, i1 false) #14
  %26 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 10, i32 0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %20, i64 0, i32 10, i32 0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 436, i1 false) #14
  %28 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 10, i32 3
  %29 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %20, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %20, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %36, label %41, label %38

38:                                               ; preds = %32
  %39 = bitcast %"struct.gfx::HDRStaticMetadata"* %37 to i8*
  %40 = bitcast %"struct.gfx::HDRStaticMetadata"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #14
  br label %47

41:                                               ; preds = %32
  call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %37, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %33) #14
  store i8 1, i8* %34, align 8
  br label %47

42:                                               ; preds = %24
  %43 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 8
  br label %47

44:                                               ; preds = %19
  %45 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %20, i64 1
  %46 = icmp eq %"class.display::Display"* %45, %17
  br i1 %46, label %52, label %19

47:                                               ; preds = %42, %41, %38
  %48 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 11
  %49 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %20, i64 0, i32 11
  %50 = bitcast i32* %48 to i8*
  %51 = bitcast i32* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #14
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %0, %"class.display::Display"* nonnull dereferenceable(568) %3) #14
  br label %102

52:                                               ; preds = %44, %2, %9
  %53 = getelementptr inbounds %"class.display::Screen", %"class.display::Screen"* %1, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = load %"class.std::__1::vector"* (%"class.display::Screen"*)**, %"class.std::__1::vector"* (%"class.display::Screen"*)*** %8, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %55, i64 7
  %57 = load %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %56, align 8
  %58 = call dereferenceable(24) %"class.std::__1::vector"* %57(%"class.display::Screen"* %1) #14
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.display::Display"*, %"class.display::Display"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %58, i64 0, i32 0, i32 1
  %62 = load %"class.display::Display"*, %"class.display::Display"** %61, align 8
  %63 = icmp eq %"class.display::Display"* %60, %62
  br i1 %63, label %97, label %64

64:                                               ; preds = %52, %89
  %65 = phi %"class.display::Display"* [ %90, %89 ], [ %60, %52 ]
  %66 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %65, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, %54
  br i1 %68, label %69, label %89

69:                                               ; preds = %64
  %70 = bitcast %"class.display::Display"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 %70, i64 80, i1 false) #14
  %71 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 10, i32 0, i64 0, i32 0
  %72 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %65, i64 0, i32 10, i32 0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 436, i1 false) #14
  %73 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 10, i32 3
  %74 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %65, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %65, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8, i8* %79, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  %82 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %81, label %86, label %83

83:                                               ; preds = %77
  %84 = bitcast %"struct.gfx::HDRStaticMetadata"* %82 to i8*
  %85 = bitcast %"struct.gfx::HDRStaticMetadata"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #14
  br label %92

86:                                               ; preds = %77
  call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %82, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %78) #14
  store i8 1, i8* %79, align 8
  br label %92

87:                                               ; preds = %69
  %88 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %88, align 8
  br label %92

89:                                               ; preds = %64
  %90 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %65, i64 1
  %91 = icmp eq %"class.display::Display"* %90, %62
  br i1 %91, label %97, label %64

92:                                               ; preds = %87, %86, %83
  %93 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 11
  %94 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %65, i64 0, i32 11
  %95 = bitcast i32* %93 to i8*
  %96 = bitcast i32* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 16, i1 false) #14
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* %0, %"class.display::Display"* nonnull dereferenceable(568) %3) #14
  br label %102

97:                                               ; preds = %89, %52
  %98 = bitcast %"class.display::Screen"* %1 to void (%"class.display::Display"*, %"class.display::Screen"*)***
  %99 = load void (%"class.display::Display"*, %"class.display::Screen"*)**, void (%"class.display::Display"*, %"class.display::Screen"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %99, i64 12
  %101 = load void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %100, align 8
  call void %101(%"class.display::Display"* sret %0, %"class.display::Screen"* %1) #14
  br label %102

102:                                              ; preds = %97, %92, %47
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %4) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #8

declare void @_ZN7display7DisplayC1Ev(%"class.display::Display"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7display6Screen23GetDisplayWithDisplayIdElPNS_7DisplayE(%"class.display::Screen"*, i64, %"class.display::Display"*) local_unnamed_addr #6 align 2 {
  %4 = bitcast %"class.display::Screen"* %0 to %"class.std::__1::vector"* (%"class.display::Screen"*)***
  %5 = load %"class.std::__1::vector"* (%"class.display::Screen"*)**, %"class.std::__1::vector"* (%"class.display::Screen"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %5, i64 7
  %7 = load %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %6, align 8
  %8 = tail call dereferenceable(24) %"class.std::__1::vector"* %7(%"class.display::Screen"* %0) #14
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.display::Display"*, %"class.display::Display"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %12 = load %"class.display::Display"*, %"class.display::Display"** %11, align 8
  %13 = icmp eq %"class.display::Display"* %10, %12
  br i1 %13, label %48, label %14

14:                                               ; preds = %3, %40
  %15 = phi %"class.display::Display"* [ %41, %40 ], [ %10, %3 ]
  %16 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %1
  br i1 %18, label %19, label %40

19:                                               ; preds = %14
  %20 = bitcast %"class.display::Display"* %2 to i8*
  %21 = bitcast %"class.display::Display"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 80, i1 false) #14
  %22 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 10, i32 0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %15, i64 0, i32 10, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 436, i1 false) #14
  %24 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 10, i32 3
  %25 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %15, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %15, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %32, label %37, label %34

34:                                               ; preds = %28
  %35 = bitcast %"struct.gfx::HDRStaticMetadata"* %33 to i8*
  %36 = bitcast %"struct.gfx::HDRStaticMetadata"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #14
  br label %43

37:                                               ; preds = %28
  tail call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %33, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %29) #14
  store i8 1, i8* %30, align 8
  br label %43

38:                                               ; preds = %19
  %39 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 8
  br label %43

40:                                               ; preds = %14
  %41 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %15, i64 1
  %42 = icmp eq %"class.display::Display"* %41, %12
  br i1 %42, label %48, label %14

43:                                               ; preds = %34, %37, %38
  %44 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 11
  %45 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %15, i64 0, i32 11
  %46 = bitcast i32* %44 to i8*
  %47 = bitcast i32* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #14
  br label %48

48:                                               ; preds = %40, %3, %43
  %49 = phi i1 [ true, %43 ], [ false, %3 ], [ false, %40 ]
  ret i1 %49
}

declare void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7display6Screen23SetDisplayForNewWindowsEl(%"class.display::Screen"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.display::Screen", %"class.display::Screen"* %0, i64 0, i32 1
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7display6Screen38GetDisplayListNearestViewWithFallbacksEPN4aura6WindowE(%"class.display::DisplayList"* noalias sret, %"class.display::Screen"*, %"class.aura::Window"*) local_unnamed_addr #6 align 2 {
  %4 = alloca %"class.display::Display", align 8
  %5 = bitcast %"class.display::Screen"* %1 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %6 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %6, i64 9
  %8 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %7, align 8
  call void %8(%"class.display::Display"* nonnull sret %4, %"class.display::Screen"* %1, %"class.aura::Window"* %2) #14
  call void @_ZNK7display6Screen41GetDisplayListNearestDisplayWithFallbacksENS_7DisplayE(%"class.display::DisplayList"* sret %0, %"class.display::Screen"* %1, %"class.display::Display"* nonnull %4)
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7display6Screen41GetDisplayListNearestDisplayWithFallbacksENS_7DisplayE(%"class.display::DisplayList"* noalias sret, %"class.display::Screen"*, %"class.display::Display"*) local_unnamed_addr #6 align 2 {
  %4 = alloca %"class.display::Display", align 8
  %5 = alloca %"class.display::DisplayList", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [1 x %"class.display::Display"], align 8
  %8 = alloca %"class.display::DisplayList", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca [1 x %"class.display::Display"], align 8
  %11 = alloca %"class.display::DisplayList", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = bitcast %"class.display::DisplayList"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 96, i1 false)
  tail call void @_ZN7display11DisplayListC1Ev(%"class.display::DisplayList"* %0) #14
  %14 = bitcast %"class.display::Screen"* %1 to %"class.std::__1::vector"* (%"class.display::Screen"*)***
  %15 = load %"class.std::__1::vector"* (%"class.display::Screen"*)**, %"class.std::__1::vector"* (%"class.display::Screen"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %15, i64 7
  %17 = load %"class.std::__1::vector"* (%"class.display::Screen"*)*, %"class.std::__1::vector"* (%"class.display::Screen"*)** %16, align 8
  %18 = tail call dereferenceable(24) %"class.std::__1::vector"* %17(%"class.display::Screen"* %1) #14
  %19 = bitcast %"class.display::Display"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %19) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.4 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZNK7display6Screen41GetDisplayListNearestDisplayWithFallbacksENS_7DisplayE.primary to i8*), i64 568, i1 false)
  %20 = bitcast %"class.display::Screen"* %1 to void (%"class.display::Display"*, %"class.display::Screen"*)***
  %21 = load void (%"class.display::Display"*, %"class.display::Screen"*)**, void (%"class.display::Display"*, %"class.display::Screen"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %21, i64 12
  %23 = load void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %22, align 8
  call void %23(%"class.display::Display"* nonnull sret %4, %"class.display::Screen"* %1) #14
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %25 = load %"class.display::Display"*, %"class.display::Display"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 1
  %27 = load %"class.display::Display"*, %"class.display::Display"** %26, align 8
  %28 = icmp eq %"class.display::Display"* %25, %27
  br i1 %28, label %29, label %105

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, -1
  br i1 %32, label %33, label %71

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %4, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, -1
  br i1 %36, label %71, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.display::DisplayList"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %38) #14
  %39 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #14
  %40 = bitcast [1 x %"class.display::Display"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %40) #14
  %41 = getelementptr inbounds [1 x %"class.display::Display"], [1 x %"class.display::Display"]* %7, i64 0, i64 0
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* nonnull %41, %"class.display::Display"* nonnull dereferenceable(568) %4) #14
  %42 = call i8* @_Znwm(i64 568) #15
  %43 = bitcast i8* %42 to %"class.display::Display"*
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %42, i8** %45, align 8
  %46 = getelementptr inbounds i8, i8* %42, i64 568
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"class.display::Display"** %47 to i8**
  store i8* %46, i8** %48, align 8
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* nonnull %43, %"class.display::Display"* nonnull dereferenceable(568) %41) #14
  %49 = getelementptr inbounds i8, i8* %42, i64 568
  %50 = bitcast %"class.display::Display"** %44 to i64*
  %51 = ptrtoint i8* %49 to i64
  store i64 %51, i64* %50, align 8
  %52 = load i64, i64* %34, align 8
  call void @_ZN7display11DisplayListC1ERKNSt3__16vectorINS_7DisplayENS1_9allocatorIS3_EEEEll(%"class.display::DisplayList"* nonnull %5, %"class.std::__1::vector"* nonnull dereferenceable(24) %6, i64 %52, i64 %52) #14
  %53 = call dereferenceable(96) %"class.display::DisplayList"* @_ZN7display11DisplayListaSERKS0_(%"class.display::DisplayList"* %0, %"class.display::DisplayList"* nonnull dereferenceable(96) %5) #14
  call void @_ZN7display11DisplayListD1Ev(%"class.display::DisplayList"* nonnull %5) #14
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %55 = load %"class.display::Display"*, %"class.display::Display"** %54, align 8
  %56 = icmp eq %"class.display::Display"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %37
  %58 = bitcast %"class.display::Display"* %55 to i8*
  %59 = load %"class.display::Display"*, %"class.display::Display"** %44, align 8
  %60 = icmp eq %"class.display::Display"* %59, %55
  br i1 %60, label %67, label %61

61:                                               ; preds = %57, %61
  %62 = phi %"class.display::Display"* [ %63, %61 ], [ %59, %57 ]
  %63 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %62, i64 -1
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %63) #14
  %64 = icmp eq %"class.display::Display"* %63, %55
  br i1 %64, label %65, label %61

65:                                               ; preds = %61
  %66 = load i8*, i8** %45, align 8
  br label %67

67:                                               ; preds = %65, %57
  %68 = phi i8* [ %66, %65 ], [ %58, %57 ]
  store %"class.display::Display"* %55, %"class.display::Display"** %44, align 8
  call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %37, %67
  %70 = getelementptr inbounds [1 x %"class.display::Display"], [1 x %"class.display::Display"]* %7, i64 0, i64 0
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %70) #14
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %40) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #14
  br label %144

71:                                               ; preds = %33, %29
  %72 = bitcast %"class.display::DisplayList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %72) #14
  %73 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #14
  %74 = bitcast [1 x %"class.display::Display"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %74) #14
  %75 = getelementptr inbounds [1 x %"class.display::Display"], [1 x %"class.display::Display"]* %10, i64 0, i64 0
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* nonnull %75, %"class.display::Display"* dereferenceable(568) %2) #14
  %76 = call i8* @_Znwm(i64 568) #15
  %77 = bitcast i8* %76 to %"class.display::Display"*
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %79 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %76, i8** %79, align 8
  %80 = getelementptr inbounds i8, i8* %76, i64 568
  %81 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = bitcast %"class.display::Display"** %81 to i8**
  store i8* %80, i8** %82, align 8
  call void @_ZN7display7DisplayC1ERKS0_(%"class.display::Display"* nonnull %77, %"class.display::Display"* nonnull dereferenceable(568) %75) #14
  %83 = getelementptr inbounds i8, i8* %76, i64 568
  %84 = bitcast %"class.display::Display"** %78 to i64*
  %85 = ptrtoint i8* %83 to i64
  store i64 %85, i64* %84, align 8
  %86 = load i64, i64* %30, align 8
  call void @_ZN7display11DisplayListC1ERKNSt3__16vectorINS_7DisplayENS1_9allocatorIS3_EEEEll(%"class.display::DisplayList"* nonnull %8, %"class.std::__1::vector"* nonnull dereferenceable(24) %9, i64 %86, i64 %86) #14
  %87 = call dereferenceable(96) %"class.display::DisplayList"* @_ZN7display11DisplayListaSERKS0_(%"class.display::DisplayList"* %0, %"class.display::DisplayList"* nonnull dereferenceable(96) %8) #14
  call void @_ZN7display11DisplayListD1Ev(%"class.display::DisplayList"* nonnull %8) #14
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %89 = load %"class.display::Display"*, %"class.display::Display"** %88, align 8
  %90 = icmp eq %"class.display::Display"* %89, null
  br i1 %90, label %103, label %91

91:                                               ; preds = %71
  %92 = bitcast %"class.display::Display"* %89 to i8*
  %93 = load %"class.display::Display"*, %"class.display::Display"** %78, align 8
  %94 = icmp eq %"class.display::Display"* %93, %89
  br i1 %94, label %101, label %95

95:                                               ; preds = %91, %95
  %96 = phi %"class.display::Display"* [ %97, %95 ], [ %93, %91 ]
  %97 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %96, i64 -1
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* %97) #14
  %98 = icmp eq %"class.display::Display"* %97, %89
  br i1 %98, label %99, label %95

99:                                               ; preds = %95
  %100 = load i8*, i8** %79, align 8
  br label %101

101:                                              ; preds = %99, %91
  %102 = phi i8* [ %100, %99 ], [ %92, %91 ]
  store %"class.display::Display"* %89, %"class.display::Display"** %78, align 8
  call void @_ZdlPv(i8* %102) #15
  br label %103

103:                                              ; preds = %71, %101
  %104 = getelementptr inbounds [1 x %"class.display::Display"], [1 x %"class.display::Display"]* %10, i64 0, i64 0
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %104) #14
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %74) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #14
  br label %144

105:                                              ; preds = %3
  %106 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %4, i64 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 0
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %115, %105
  %111 = phi %"class.display::Display"* [ %25, %105 ], [ %116, %115 ]
  %112 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %111, i64 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %113, %107
  br i1 %114, label %118, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %111, i64 1
  %117 = icmp eq %"class.display::Display"* %116, %27
  br i1 %117, label %118, label %110

118:                                              ; preds = %115, %110
  %119 = phi %"class.display::Display"* [ %111, %110 ], [ %27, %115 ]
  %120 = icmp eq %"class.display::Display"* %119, %27
  br label %121

121:                                              ; preds = %126, %118
  %122 = phi %"class.display::Display"* [ %25, %118 ], [ %127, %126 ]
  %123 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %122, i64 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %124, %109
  br i1 %125, label %129, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %122, i64 1
  %128 = icmp eq %"class.display::Display"* %127, %27
  br i1 %128, label %129, label %121

129:                                              ; preds = %121, %126
  %130 = phi %"class.display::Display"* [ %122, %121 ], [ %27, %126 ]
  %131 = icmp ne %"class.display::Display"* %130, %27
  br i1 %120, label %132, label %136

132:                                              ; preds = %129
  br i1 %131, label %139, label %133

133:                                              ; preds = %132
  %134 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %25, i64 0, i32 0
  %135 = load i64, i64* %134, align 8
  br label %137

136:                                              ; preds = %129
  br i1 %131, label %139, label %137

137:                                              ; preds = %133, %136
  %138 = phi i64 [ %135, %133 ], [ %107, %136 ]
  br label %139

139:                                              ; preds = %132, %137, %136
  %140 = phi i64 [ %107, %136 ], [ %138, %137 ], [ %109, %132 ]
  %141 = phi i64 [ %109, %136 ], [ %138, %137 ], [ %109, %132 ]
  %142 = bitcast %"class.display::DisplayList"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %142) #14
  call void @_ZN7display11DisplayListC1ERKNSt3__16vectorINS_7DisplayENS1_9allocatorIS3_EEEEll(%"class.display::DisplayList"* nonnull %11, %"class.std::__1::vector"* dereferenceable(24) %18, i64 %140, i64 %141) #14
  %143 = call dereferenceable(96) %"class.display::DisplayList"* @_ZN7display11DisplayListaSERKS0_(%"class.display::DisplayList"* %0, %"class.display::DisplayList"* nonnull dereferenceable(96) %11) #14
  call void @_ZN7display11DisplayListD1Ev(%"class.display::DisplayList"* nonnull %11) #14
  br label %144

144:                                              ; preds = %69, %103, %139
  %145 = phi i8* [ %38, %69 ], [ %72, %103 ], [ %142, %139 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %145) #14
  %146 = call zeroext i1 @_ZNK7display11DisplayList38IsValidAndHasPrimaryAndCurrentDisplaysEv(%"class.display::DisplayList"* %0) #14
  br i1 %146, label %150, label %147

147:                                              ; preds = %144
  %148 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i32 169, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0)) #14
  %149 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #14
  br label %150

150:                                              ; preds = %144, %147
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7display6Screen40GetDisplayListNearestWindowWithFallbacksEPN4aura6WindowE(%"class.display::DisplayList"* noalias sret, %"class.display::Screen"*, %"class.aura::Window"*) local_unnamed_addr #6 align 2 {
  %4 = alloca %"class.display::Display", align 8
  %5 = bitcast %"class.display::Screen"* %1 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %6 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %6, i64 8
  %8 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %7, align 8
  call void %8(%"class.display::Display"* nonnull sret %4, %"class.display::Screen"* %1, %"class.aura::Window"* %2) #14
  call void @_ZNK7display6Screen41GetDisplayListNearestDisplayWithFallbacksENS_7DisplayE(%"class.display::DisplayList"* sret %0, %"class.display::Screen"* %1, %"class.display::Display"* nonnull %4)
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %4) #14
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7display6Screen23SetScreenSaverSuspendedEb(%"class.display::Screen"* nocapture readnone, i1 zeroext) unnamed_addr #5 align 2 {
  %3 = load i1, i1* @_ZZN7display6Screen23SetScreenSaverSuspendedEbE11logged_once, align 1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  store i1 true, i1* @_ZZN7display6Screen23SetScreenSaverSuspendedEbE11logged_once, align 1
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7display6Screen19IsScreenSaverActiveEv(%"class.display::Screen"* nocapture readnone) unnamed_addr #5 align 2 {
  %2 = load i1, i1* @_ZZNK7display6Screen19IsScreenSaverActiveEvE11logged_once, align 1
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  store i1 true, i1* @_ZZNK7display6Screen19IsScreenSaverActiveEvE11logged_once, align 1
  br label %4

4:                                                ; preds = %3, %1
  ret i1 false
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK7display6Screen17CalculateIdleTimeEv(%"class.display::Screen"* nocapture readnone) unnamed_addr #5 align 2 {
  %2 = load i1, i1* @_ZZNK7display6Screen17CalculateIdleTimeEvE11logged_once, align 1
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  store i1 true, i1* @_ZZNK7display6Screen17CalculateIdleTimeEvE11logged_once, align 1
  br label %4

4:                                                ; preds = %3, %1
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK7display6Screen23ScreenToDIPRectInWindowEPN4aura6WindowERKN3gfx4RectE(%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #6 align 2 {
  %4 = alloca %"class.display::Display", align 8
  %5 = bitcast %"class.display::Display"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %5) #14
  %6 = bitcast %"class.display::Screen"* %0 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %7 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %7, i64 8
  %9 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %8, align 8
  call void %9(%"class.display::Display"* nonnull sret %4, %"class.display::Screen"* %0, %"class.aura::Window"* %1) #14
  %10 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %4, i64 0, i32 4
  %11 = load float, float* %10, align 8
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %5) #14
  %12 = fdiv float 1.000000e+00, %11
  %13 = fcmp oeq float %12, 1.000000e+00
  br i1 %13, label %14, label %23

14:                                               ; preds = %3
  %15 = bitcast %"class.gfx::Rect"* %2 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = trunc i64 %16 to i32
  %18 = lshr i64 %16, 32
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %21 = bitcast %"class.gfx::Size"* %20 to i64*
  %22 = load i64, i64* %21, align 4
  br label %82

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sitofp i32 %25 to float
  %27 = fmul float %12, %26
  %28 = call float @llvm.floor.f32(float %27) #14
  %29 = fptosi float %28 to i32
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sitofp i32 %31 to float
  %33 = fmul float %12, %32
  %34 = call float @llvm.floor.f32(float %33) #14
  %35 = fptosi float %34 to i32
  %36 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %23
  %40 = add nsw i32 %37, %25
  %41 = sitofp i32 %40 to float
  %42 = fmul float %12, %41
  %43 = call float @llvm.ceil.f32(float %42) #14
  %44 = fptosi float %43 to i32
  br label %45

45:                                               ; preds = %39, %23
  %46 = phi i32 [ %44, %39 ], [ %29, %23 ]
  %47 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = add nsw i32 %48, %31
  %52 = sitofp i32 %51 to float
  %53 = fmul float %12, %52
  %54 = call float @llvm.ceil.f32(float %53) #14
  %55 = fptosi float %54 to i32
  br label %56

56:                                               ; preds = %50, %45
  %57 = phi i32 [ %55, %50 ], [ %35, %45 ]
  %58 = sub nsw i32 %46, %29
  %59 = sub nsw i32 %57, %35
  %60 = icmp sgt i32 %29, 0
  %61 = icmp sgt i32 %58, 0
  %62 = and i1 %60, %61
  %63 = sub nuw nsw i32 2147483647, %29
  %64 = icmp ult i32 %63, %58
  %65 = and i1 %64, %62
  %66 = select i1 %65, i32 %63, i32 %58
  %67 = icmp sgt i32 %35, 0
  %68 = icmp sgt i32 %59, 0
  %69 = and i1 %67, %68
  %70 = sub nuw nsw i32 2147483647, %35
  %71 = icmp ult i32 %70, %59
  %72 = and i1 %71, %69
  %73 = select i1 %72, i32 %70, i32 %59
  %74 = icmp sgt i32 %66, 0
  %75 = select i1 %74, i32 %66, i32 0
  %76 = zext i32 %75 to i64
  %77 = icmp sgt i32 %73, 0
  %78 = select i1 %77, i32 %73, i32 0
  %79 = zext i32 %78 to i64
  %80 = shl nuw nsw i64 %79, 32
  %81 = or i64 %80, %76
  br label %82

82:                                               ; preds = %14, %56
  %83 = phi i32 [ %19, %14 ], [ %35, %56 ]
  %84 = phi i32 [ %17, %14 ], [ %29, %56 ]
  %85 = phi i64 [ %22, %14 ], [ %81, %56 ]
  %86 = zext i32 %83 to i64
  %87 = shl nuw i64 %86, 32
  %88 = zext i32 %84 to i64
  %89 = or i64 %87, %88
  %90 = insertvalue { i64, i64 } undef, i64 %89, 0
  %91 = insertvalue { i64, i64 } %90, i64 %85, 1
  ret { i64, i64 } %91
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK7display6Screen23DIPToScreenRectInWindowEPN4aura6WindowERKN3gfx4RectE(%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #6 align 2 {
  %4 = alloca %"class.display::Display", align 8
  %5 = bitcast %"class.display::Display"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %5) #14
  %6 = bitcast %"class.display::Screen"* %0 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %7 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %7, i64 8
  %9 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %8, align 8
  call void %9(%"class.display::Display"* nonnull sret %4, %"class.display::Screen"* %0, %"class.aura::Window"* %1) #14
  %10 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %4, i64 0, i32 4
  %11 = load float, float* %10, align 8
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %5) #14
  %12 = fcmp oeq float %11, 1.000000e+00
  br i1 %12, label %13, label %22

13:                                               ; preds = %3
  %14 = bitcast %"class.gfx::Rect"* %2 to i64*
  %15 = load i64, i64* %14, align 4
  %16 = trunc i64 %15 to i32
  %17 = lshr i64 %15, 32
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %20 = bitcast %"class.gfx::Size"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  br label %81

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = fmul float %11, %25
  %27 = call float @llvm.floor.f32(float %26) #14
  %28 = fptosi float %27 to i32
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = sitofp i32 %30 to float
  %32 = fmul float %11, %31
  %33 = call float @llvm.floor.f32(float %32) #14
  %34 = fptosi float %33 to i32
  %35 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %22
  %39 = add nsw i32 %36, %24
  %40 = sitofp i32 %39 to float
  %41 = fmul float %11, %40
  %42 = call float @llvm.ceil.f32(float %41) #14
  %43 = fptosi float %42 to i32
  br label %44

44:                                               ; preds = %38, %22
  %45 = phi i32 [ %43, %38 ], [ %28, %22 ]
  %46 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = add nsw i32 %47, %30
  %51 = sitofp i32 %50 to float
  %52 = fmul float %11, %51
  %53 = call float @llvm.ceil.f32(float %52) #14
  %54 = fptosi float %53 to i32
  br label %55

55:                                               ; preds = %49, %44
  %56 = phi i32 [ %54, %49 ], [ %34, %44 ]
  %57 = sub nsw i32 %45, %28
  %58 = sub nsw i32 %56, %34
  %59 = icmp sgt i32 %28, 0
  %60 = icmp sgt i32 %57, 0
  %61 = and i1 %59, %60
  %62 = sub nuw nsw i32 2147483647, %28
  %63 = icmp ult i32 %62, %57
  %64 = and i1 %63, %61
  %65 = select i1 %64, i32 %62, i32 %57
  %66 = icmp sgt i32 %34, 0
  %67 = icmp sgt i32 %58, 0
  %68 = and i1 %66, %67
  %69 = sub nuw nsw i32 2147483647, %34
  %70 = icmp ult i32 %69, %58
  %71 = and i1 %70, %68
  %72 = select i1 %71, i32 %69, i32 %58
  %73 = icmp sgt i32 %65, 0
  %74 = select i1 %73, i32 %65, i32 0
  %75 = zext i32 %74 to i64
  %76 = icmp sgt i32 %72, 0
  %77 = select i1 %76, i32 %72, i32 0
  %78 = zext i32 %77 to i64
  %79 = shl nuw nsw i64 %78, 32
  %80 = or i64 %79, %75
  br label %81

81:                                               ; preds = %13, %55
  %82 = phi i32 [ %18, %13 ], [ %34, %55 ]
  %83 = phi i32 [ %16, %13 ], [ %28, %55 ]
  %84 = phi i64 [ %21, %13 ], [ %80, %55 ]
  %85 = zext i32 %82 to i64
  %86 = shl nuw i64 %85, 32
  %87 = zext i32 %83 to i64
  %88 = or i64 %86, %87
  %89 = insertvalue { i64, i64 } undef, i64 %88, 0
  %90 = insertvalue { i64, i64 } %89, i64 %84, 1
  ret { i64, i64 } %90
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7display6Screen26SetPanelRotationForTestingElNS_7Display8RotationE(%"class.display::Screen"* nocapture, i64, i32) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display6Screen19GetCurrentWorkspaceEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.display::Screen"* nocapture readnone) unnamed_addr #6 align 2 {
  %3 = load i1, i1* @_ZZN7display6Screen19GetCurrentWorkspaceEvE11logged_once, align 1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  store i1 true, i1* @_ZZN7display6Screen19GetCurrentWorkspaceEvE11logged_once, align 1
  br label %5

5:                                                ; preds = %4, %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display6Screen26GetGpuExtraInfoAsListValueERKN3gfx12GpuExtraInfoE(%"class.base::Value"* noalias sret, %"class.display::Screen"* nocapture readnone, %"struct.gfx::GpuExtraInfo"* nocapture readnone dereferenceable(48)) unnamed_addr #6 align 2 {
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 7) #14
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7display6Screen29SetScopedDisplayForNewWindowsEl(%"class.display::Screen"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.display::Screen", %"class.display::Screen"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i64 %1, i64* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

declare void @_ZN7display11DisplayListC1Ev(%"class.display::DisplayList"*) unnamed_addr #7

declare void @_ZN7display11DisplayListC1ERKNSt3__16vectorINS_7DisplayENS1_9allocatorIS3_EEEEll(%"class.display::DisplayList"*, %"class.std::__1::vector"* dereferenceable(24), i64, i64) unnamed_addr #7

declare dereferenceable(96) %"class.display::DisplayList"* @_ZN7display11DisplayListaSERKS0_(%"class.display::DisplayList"*, %"class.display::DisplayList"* dereferenceable(96)) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7display11DisplayListD1Ev(%"class.display::DisplayList"*) unnamed_addr #9

declare zeroext i1 @_ZNK7display11DisplayList38IsValidAndHasPrimaryAndCurrentDisplaysEv(%"class.display::DisplayList"*) local_unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"*, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24)) unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
