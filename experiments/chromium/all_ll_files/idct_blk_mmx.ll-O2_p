; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/common/x86/idct_blk_mmx.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/common/x86/idct_blk_mmx.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.blockd = type { i16*, i16*, i8*, i16*, i32, i8*, %union.b_mode_info }
%union.b_mode_info = type { i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_dequantize_b_mmx(%struct.blockd* nocapture readonly, i16*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.blockd, %struct.blockd* %0, i64 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds %struct.blockd, %struct.blockd* %0, i64 0, i32 1
  %6 = load i16*, i16** %5, align 8
  tail call void @vp8_dequantize_b_impl_mmx(i16* %4, i16* %6, i16* %1) #2
  ret void
}

declare void @vp8_dequantize_b_impl_mmx(i16*, i16*, i16*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
