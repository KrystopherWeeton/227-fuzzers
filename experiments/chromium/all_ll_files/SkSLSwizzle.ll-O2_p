; ModuleID = '../../third_party/skia/src/sksl/ir/SkSLSwizzle.cpp'
source_filename = "../../third_party/skia/src/sksl/ir/SkSLSwizzle.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.42"* }
%"class.std::__1::vector.42" = type opaque
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [4 x i8] }
%class.SkTArray = type { i8*, i64 }
%class.SkSTArray.43 = type { %class.SkAlignedSTStorage.44, %class.SkTArray.45 }
%class.SkAlignedSTStorage.44 = type { [16 x i8] }
%class.SkTArray.45 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Expression"* }
%struct.ConstructorArgMap = type { i8, i8 }
%class.SkSTArray.52 = type { %class.SkAlignedSTStorage.53, %class.SkTArray.54 }
%class.SkAlignedSTStorage.53 = type { [128 x i8] }
%class.SkTArray.54 = type { %struct.ReorderedArgument*, i64 }
%struct.ReorderedArgument = type { i8, %class.SkSTArray }
%"class.SkSL::AnyConstructor" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr" }
%"struct.SkSL::Swizzle" = type { %"class.SkSL::Expression", %"class.std::__1::unique_ptr", %class.SkSTArray }
%"class.SkSL::Literal" = type { %"class.SkSL::Expression", i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZN4SkSL7LiteralIlED0Ev = comdat any

$_ZNK4SkSL7LiteralIlE11descriptionEv = comdat any

$_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL10Expression19isConstantOrUniformEv = comdat any

$_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIlE5cloneEv = comdat any

$_ZNK4SkSL10Expression21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL10Expression15compareConstantERKS0_ = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL10Expression24getConstantSubexpressionEi = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN4SkSL7SwizzleC2ERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEERK9SkSTArrayILi4EaLb0EE = comdat any

$_ZN4SkSL7SwizzleD2Ev = comdat any

$_ZN4SkSL7SwizzleD0Ev = comdat any

$_ZNK4SkSL7Swizzle11descriptionEv = comdat any

$_ZNK4SkSL7Swizzle11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7Swizzle5cloneEv = comdat any

$_ZTVN4SkSL7LiteralIlEE = comdat any

$_ZTVN4SkSL7SwizzleE = comdat any

@_ZTVN4SkSL7LiteralIlEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal"*)* @_ZN4SkSL7LiteralIlED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Literal"*, %"class.SkSL::Type"*)* @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIlE5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL7SwizzleE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.SkSL::Swizzle"*)* @_ZN4SkSL7SwizzleD2Ev to i8*), i8* bitcast (void (%"struct.SkSL::Swizzle"*)* @_ZN4SkSL7SwizzleD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"struct.SkSL::Swizzle"*)* @_ZNK4SkSL7Swizzle11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression15compareConstantERKS0_ to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"struct.SkSL::Swizzle"*, i32)* @_ZNK4SkSL7Swizzle11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)* @_ZNK4SkSL10Expression24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"struct.SkSL::Swizzle"*)* @_ZNK4SkSL7Swizzle5cloneEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"xyzw\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %class.SkSTArray* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkSTArray, align 8
  %5 = alloca %class.SkSTArray, align 8
  %6 = alloca %class.SkSTArray.43, align 8
  %7 = alloca %class.SkSTArray, align 8
  %8 = alloca %class.SkSTArray.43, align 8
  %9 = alloca %class.SkSTArray, align 8
  %10 = ptrtoint %"class.SkSL::Expression"* %1 to i64
  %11 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %14 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, i64 3
  %16 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %15, align 8
  %17 = tail call dereferenceable(184) %"class.SkSL::Type"* %16(%"class.SkSL::Expression"* %1) #5
  %18 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #5
  %19 = bitcast %class.SkSTArray* %4 to i64*
  store i64 -6148914691236517206, i64* %19, align 8
  %20 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 8
  %21 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 16
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i8**
  store i8* %18, i8** %23, align 8
  store i64 34359738368, i64* %22, align 8
  %24 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 8
  %25 = bitcast i8* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %100, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = lshr i64 %31, 1
  %33 = and i64 %32, 2147483647
  %34 = getelementptr inbounds i8, i8* %26, i64 %33
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %100, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %17, i64 0, i32 8
  %38 = bitcast i8* %20 to %class.SkTArray*
  br label %39

39:                                               ; preds = %36, %92
  %40 = phi i8* [ %26, %36 ], [ %93, %92 ]
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  switch i32 %42, label %397 [
    i32 4, label %92
    i32 5, label %92
    i32 0, label %43
    i32 1, label %53
    i32 2, label %66
    i32 3, label %79
  ]

43:                                               ; preds = %39
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %38, i32 1, i32 1) #5
  %44 = load i8*, i8** %23, align 8
  %45 = load i64, i64* %22, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = add i64 %45, 2
  %50 = and i64 %49, 4294967294
  %51 = and i64 %45, -4294967295
  %52 = or i64 %50, %51
  store i64 %52, i64* %22, align 8
  store i8 0, i8* %48, align 1
  br label %92

53:                                               ; preds = %39
  %54 = load i32, i32* %37, align 8
  %55 = icmp sgt i32 %54, 1
  br i1 %55, label %56, label %397

56:                                               ; preds = %53
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %38, i32 1, i32 1) #5
  %57 = load i8*, i8** %23, align 8
  %58 = load i64, i64* %22, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = getelementptr inbounds i8, i8* %57, i64 %60
  %62 = add i64 %58, 2
  %63 = and i64 %62, 4294967294
  %64 = and i64 %58, -4294967295
  %65 = or i64 %63, %64
  store i64 %65, i64* %22, align 8
  store i8 1, i8* %61, align 1
  br label %92

66:                                               ; preds = %39
  %67 = load i32, i32* %37, align 8
  %68 = icmp sgt i32 %67, 2
  br i1 %68, label %69, label %397

69:                                               ; preds = %66
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %38, i32 1, i32 1) #5
  %70 = load i8*, i8** %23, align 8
  %71 = load i64, i64* %22, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = getelementptr inbounds i8, i8* %70, i64 %73
  %75 = add i64 %71, 2
  %76 = and i64 %75, 4294967294
  %77 = and i64 %71, -4294967295
  %78 = or i64 %76, %77
  store i64 %78, i64* %22, align 8
  store i8 2, i8* %74, align 1
  br label %92

79:                                               ; preds = %39
  %80 = load i32, i32* %37, align 8
  %81 = icmp sgt i32 %80, 3
  br i1 %81, label %82, label %397

82:                                               ; preds = %79
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %38, i32 1, i32 1) #5
  %83 = load i8*, i8** %23, align 8
  %84 = load i64, i64* %22, align 8
  %85 = lshr i64 %84, 1
  %86 = and i64 %85, 2147483647
  %87 = getelementptr inbounds i8, i8* %83, i64 %86
  %88 = add i64 %84, 2
  %89 = and i64 %88, 4294967294
  %90 = and i64 %84, -4294967295
  %91 = or i64 %89, %90
  store i64 %91, i64* %22, align 8
  store i8 3, i8* %87, align 1
  br label %92

92:                                               ; preds = %39, %39, %82, %69, %56, %43
  %93 = getelementptr inbounds i8, i8* %40, i64 1
  %94 = icmp eq i8* %93, %34
  br i1 %94, label %95, label %39

95:                                               ; preds = %92
  %96 = load i64, i64* %22, align 8
  %97 = lshr i64 %96, 1
  %98 = trunc i64 %97 to i32
  %99 = and i32 %98, 2147483647
  br label %100

100:                                              ; preds = %3, %95, %28
  %101 = phi i32 [ %99, %95 ], [ 0, %28 ], [ 0, %3 ]
  %102 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 8
  %103 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 0
  %104 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %105 = bitcast i8* %104 to i64*
  %106 = bitcast i8* %102 to i8**
  store i8* %103, i8** %106, align 8
  %107 = bitcast i8* %102 to %class.SkTArray*
  store i64 34359738368, i64* %105, align 8
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %107, i32 %101, i32 0) #5
  %108 = load i64, i64* %22, align 8
  %109 = and i64 %108, 4294967294
  %110 = load i64, i64* %105, align 8
  %111 = and i64 %110, -4294967295
  %112 = or i64 %111, %109
  store i64 %112, i64* %105, align 8
  %113 = load i8*, i8** %23, align 8
  %114 = icmp eq i64 %109, 0
  br i1 %114, label %126, label %115

115:                                              ; preds = %100, %115
  %116 = phi i64 [ %121, %115 ], [ 0, %100 ]
  %117 = load i8*, i8** %106, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 %116
  %119 = getelementptr inbounds i8, i8* %113, i64 %116
  %120 = load i8, i8* %119, align 1
  store i8 %120, i8* %118, align 1
  %121 = add nuw nsw i64 %116, 1
  %122 = load i64, i64* %105, align 8
  %123 = lshr i64 %122, 1
  %124 = and i64 %123, 2147483647
  %125 = icmp ult i64 %121, %124
  br i1 %125, label %115, label %126

126:                                              ; preds = %115, %100
  %127 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, %"class.SkSL::Expression"* %1, %class.SkSTArray* nonnull %5)
  %128 = ptrtoint %"class.SkSL::Expression"* %127 to i64
  %129 = load i64, i64* %105, align 8
  %130 = and i64 %129, 1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %126
  %133 = load i8*, i8** %106, align 8
  call void @_Z7sk_freePv(i8* %133) #5
  br label %134

134:                                              ; preds = %126, %132
  %135 = load i64, i64* %22, align 8
  %136 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %137 = bitcast i8* %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = xor i64 %138, %135
  %140 = and i64 %139, 4294967294
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %397, label %142

142:                                              ; preds = %134
  %143 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %6, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %143) #5
  %144 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %6, i64 0, i32 0, i32 0, i64 16
  %145 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %6, i64 0, i32 0, i32 0, i64 24
  %146 = bitcast i8* %145 to i64*
  %147 = bitcast i8* %144 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %143, i8 -86, i64 16, i1 false)
  store i8* %143, i8** %147, align 8
  store i64 17179869184, i64* %146, align 8
  %148 = bitcast i8* %144 to %class.SkTArray.45*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.45* %148, i32 3, i32 0) #5
  %149 = load i64, i64* %146, align 8
  %150 = shl i64 %149, 32
  %151 = and i64 %150, 4294967296
  %152 = and i64 %149, -4294967297
  %153 = or i64 %151, %152
  store i64 %153, i64* %146, align 8
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.45* %148, i32 1, i32 1) #5
  %154 = bitcast i8* %144 to %"class.std::__1::unique_ptr"**
  %155 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %156 = load i64, i64* %146, align 8
  %157 = lshr i64 %156, 1
  %158 = and i64 %157, 2147483647
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %155, i64 %158
  %160 = add i64 %156, 2
  %161 = and i64 %160, 4294967294
  %162 = and i64 %156, -4294967295
  %163 = or i64 %161, %162
  store i64 %163, i64* %146, align 8
  %164 = bitcast %"class.std::__1::unique_ptr"* %159 to i64*
  store i64 %128, i64* %164, align 8
  %165 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %17, i64 0, i32 6
  %166 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %165, align 8
  %167 = icmp eq %"class.SkSL::Type"* %166, null
  %168 = select i1 %167, %"class.SkSL::Type"* %17, %"class.SkSL::Type"* %166
  %169 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #5
  %170 = bitcast %class.SkSTArray* %7 to i64*
  store i64 -6148914691236517206, i64* %170, align 8
  %171 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %7, i64 0, i32 0, i32 0, i64 8
  %172 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %7, i64 0, i32 0, i32 0, i64 16
  %173 = bitcast i8* %172 to i64*
  %174 = bitcast i8* %171 to i8**
  store i8* %169, i8** %174, align 8
  store i64 34359738368, i64* %173, align 8
  %175 = load i64, i64* %22, align 8
  %176 = lshr i64 %175, 1
  %177 = trunc i64 %176 to i32
  %178 = and i32 %177, 2147483647
  %179 = load i64, i64* %137, align 8
  %180 = and i64 %179, 4294967294
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %186, label %182

182:                                              ; preds = %142
  %183 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 31, i32 0, i32 0, i32 0
  %184 = bitcast %"class.SkSL::Type"** %183 to i64*
  %185 = bitcast i8* %171 to %class.SkTArray*
  br label %228

186:                                              ; preds = %296, %142
  %187 = phi i32 [ %178, %142 ], [ %299, %296 ]
  %188 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %168, %"class.SkSL::Context"* dereferenceable(744) %0, i32 %187, i32 1) #5
  %189 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %8, i64 0, i32 0, i32 0, i64 16
  %190 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %8, i64 0, i32 0, i32 0, i64 0
  %191 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %8, i64 0, i32 0, i32 0, i64 24
  %192 = bitcast i8* %191 to i64*
  %193 = bitcast i8* %189 to i8**
  store i8* %190, i8** %193, align 8
  store i64 17179869184, i64* %192, align 8
  %194 = bitcast i8* %189 to %class.SkTArray.45*
  %195 = call dereferenceable(16) %class.SkTArray.45* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.45* %194, %class.SkTArray.45* dereferenceable(16) %148) #5
  %196 = call %"class.SkSL::Expression"* @_ZN4SkSL11Constructor7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %12, %"class.SkSL::Type"* dereferenceable(184) %188, %class.SkSTArray.43* nonnull %8) #5
  %197 = ptrtoint %"class.SkSL::Expression"* %196 to i64
  %198 = load i64, i64* %192, align 8
  %199 = and i64 %198, 4294967294
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %203, label %201

201:                                              ; preds = %186
  %202 = bitcast i8* %189 to %"class.std::__1::unique_ptr"**
  br label %207

203:                                              ; preds = %218, %186
  %204 = phi i64 [ %198, %186 ], [ %220, %218 ]
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %226, label %224

207:                                              ; preds = %218, %201
  %208 = phi i64 [ 0, %201 ], [ %219, %218 ]
  %209 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %202, align 8
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %209, i64 %208, i32 0, i32 0, i32 0
  %211 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %210, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %210, align 8
  %212 = icmp eq %"class.SkSL::Expression"* %211, null
  br i1 %212, label %218, label %213

213:                                              ; preds = %207
  %214 = bitcast %"class.SkSL::Expression"* %211 to void (%"class.SkSL::Expression"*)***
  %215 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %215, i64 1
  %217 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %216, align 8
  call void %217(%"class.SkSL::Expression"* nonnull %211) #5
  br label %218

218:                                              ; preds = %213, %207
  %219 = add nuw nsw i64 %208, 1
  %220 = load i64, i64* %192, align 8
  %221 = lshr i64 %220, 1
  %222 = and i64 %221, 2147483647
  %223 = icmp ult i64 %219, %222
  br i1 %223, label %207, label %203

224:                                              ; preds = %203
  %225 = load i8*, i8** %193, align 8
  call void @_Z7sk_freePv(i8* %225) #5
  br label %226

226:                                              ; preds = %203, %224
  %227 = icmp eq %"class.SkSL::Expression"* %196, null
  br i1 %227, label %354, label %317

228:                                              ; preds = %182, %296
  %229 = phi i64 [ 0, %182 ], [ %312, %296 ]
  %230 = phi i32 [ -1, %182 ], [ %301, %296 ]
  %231 = phi i32 [ -1, %182 ], [ %300, %296 ]
  %232 = phi i32 [ %178, %182 ], [ %299, %296 ]
  %233 = phi i32 [ 0, %182 ], [ %298, %296 ]
  %234 = load i8*, i8** %25, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 %229
  %236 = load i8, i8* %235, align 1
  %237 = sext i8 %236 to i32
  switch i32 %237, label %294 [
    i32 4, label %238
    i32 5, label %266
  ]

238:                                              ; preds = %228
  %239 = icmp eq i32 %231, -1
  br i1 %239, label %240, label %296

240:                                              ; preds = %238
  %241 = load i64, i64* %184, align 8
  %242 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #5
  %243 = bitcast i8* %242 to i32 (...)***
  %244 = getelementptr inbounds i8, i8* %242, i64 8
  %245 = bitcast i8* %244 to i32*
  store i32 %12, i32* %245, align 8
  %246 = getelementptr inbounds i8, i8* %242, i64 12
  %247 = bitcast i8* %246 to i32*
  store i32 43, i32* %247, align 4
  %248 = getelementptr inbounds i8, i8* %242, i64 16
  %249 = bitcast i8* %248 to i64*
  store i64 %241, i64* %249, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %243, align 8
  %250 = getelementptr inbounds i8, i8* %242, i64 24
  %251 = bitcast i8* %250 to i64*
  store i64 0, i64* %251, align 8
  %252 = bitcast i8* %242 to %"class.SkSL::Expression"*
  %253 = call %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %12, %"class.SkSL::Type"* dereferenceable(184) %168, %"class.SkSL::Expression"* %252) #5
  %254 = ptrtoint %"class.SkSL::Expression"* %253 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.45* %148, i32 1, i32 1) #5
  %255 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %256 = load i64, i64* %146, align 8
  %257 = lshr i64 %256, 1
  %258 = and i64 %257, 2147483647
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %255, i64 %258
  %260 = add i64 %256, 2
  %261 = and i64 %260, 4294967294
  %262 = and i64 %256, -4294967295
  %263 = or i64 %261, %262
  store i64 %263, i64* %146, align 8
  %264 = bitcast %"class.std::__1::unique_ptr"* %259 to i64*
  store i64 %254, i64* %264, align 8
  %265 = add nsw i32 %232, 1
  br label %296

266:                                              ; preds = %228
  %267 = icmp eq i32 %230, -1
  br i1 %267, label %268, label %296

268:                                              ; preds = %266
  %269 = load i64, i64* %184, align 8
  %270 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #5
  %271 = bitcast i8* %270 to i32 (...)***
  %272 = getelementptr inbounds i8, i8* %270, i64 8
  %273 = bitcast i8* %272 to i32*
  store i32 %12, i32* %273, align 8
  %274 = getelementptr inbounds i8, i8* %270, i64 12
  %275 = bitcast i8* %274 to i32*
  store i32 43, i32* %275, align 4
  %276 = getelementptr inbounds i8, i8* %270, i64 16
  %277 = bitcast i8* %276 to i64*
  store i64 %269, i64* %277, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %271, align 8
  %278 = getelementptr inbounds i8, i8* %270, i64 24
  %279 = bitcast i8* %278 to i64*
  store i64 1, i64* %279, align 8
  %280 = bitcast i8* %270 to %"class.SkSL::Expression"*
  %281 = call %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %12, %"class.SkSL::Type"* dereferenceable(184) %168, %"class.SkSL::Expression"* %280) #5
  %282 = ptrtoint %"class.SkSL::Expression"* %281 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.45* %148, i32 1, i32 1) #5
  %283 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %284 = load i64, i64* %146, align 8
  %285 = lshr i64 %284, 1
  %286 = and i64 %285, 2147483647
  %287 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %283, i64 %286
  %288 = add i64 %284, 2
  %289 = and i64 %288, 4294967294
  %290 = and i64 %284, -4294967295
  %291 = or i64 %289, %290
  store i64 %291, i64* %146, align 8
  %292 = bitcast %"class.std::__1::unique_ptr"* %287 to i64*
  store i64 %282, i64* %292, align 8
  %293 = add nsw i32 %232, 1
  br label %296

294:                                              ; preds = %228
  %295 = add nsw i32 %233, 1
  br label %296

296:                                              ; preds = %266, %268, %238, %240, %294
  %297 = phi i32 [ %233, %294 ], [ %232, %240 ], [ %231, %238 ], [ %232, %268 ], [ %230, %266 ]
  %298 = phi i32 [ %295, %294 ], [ %233, %240 ], [ %233, %238 ], [ %233, %268 ], [ %233, %266 ]
  %299 = phi i32 [ %232, %294 ], [ %265, %240 ], [ %232, %238 ], [ %293, %268 ], [ %232, %266 ]
  %300 = phi i32 [ %231, %294 ], [ %232, %240 ], [ %231, %238 ], [ %231, %268 ], [ %231, %266 ]
  %301 = phi i32 [ %230, %294 ], [ %230, %240 ], [ %230, %238 ], [ %232, %268 ], [ %230, %266 ]
  %302 = trunc i32 %297 to i8
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %185, i32 1, i32 1) #5
  %303 = load i8*, i8** %174, align 8
  %304 = load i64, i64* %173, align 8
  %305 = lshr i64 %304, 1
  %306 = and i64 %305, 2147483647
  %307 = getelementptr inbounds i8, i8* %303, i64 %306
  %308 = add i64 %304, 2
  %309 = and i64 %308, 4294967294
  %310 = and i64 %304, -4294967295
  %311 = or i64 %309, %310
  store i64 %311, i64* %173, align 8
  store i8 %302, i8* %307, align 1
  %312 = add nuw nsw i64 %229, 1
  %313 = load i64, i64* %137, align 8
  %314 = lshr i64 %313, 1
  %315 = and i64 %314, 2147483647
  %316 = icmp ult i64 %312, %315
  br i1 %316, label %228, label %186

317:                                              ; preds = %226
  %318 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %9, i64 0, i32 0, i32 0, i64 8
  %319 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %9, i64 0, i32 0, i32 0, i64 0
  %320 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %9, i64 0, i32 0, i32 0, i64 16
  %321 = bitcast i8* %320 to i64*
  %322 = bitcast i8* %318 to i8**
  store i8* %319, i8** %322, align 8
  %323 = bitcast i8* %318 to %class.SkTArray*
  store i64 34359738368, i64* %321, align 8
  %324 = load i64, i64* %173, align 8
  %325 = lshr i64 %324, 1
  %326 = trunc i64 %325 to i32
  %327 = and i32 %326, 2147483647
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %323, i32 %327, i32 0) #5
  %328 = load i64, i64* %173, align 8
  %329 = and i64 %328, 4294967294
  %330 = load i64, i64* %321, align 8
  %331 = and i64 %330, -4294967295
  %332 = or i64 %331, %329
  store i64 %332, i64* %321, align 8
  %333 = load i8*, i8** %174, align 8
  %334 = icmp eq i64 %329, 0
  br i1 %334, label %346, label %335

335:                                              ; preds = %317, %335
  %336 = phi i64 [ %341, %335 ], [ 0, %317 ]
  %337 = load i8*, i8** %322, align 8
  %338 = getelementptr inbounds i8, i8* %337, i64 %336
  %339 = getelementptr inbounds i8, i8* %333, i64 %336
  %340 = load i8, i8* %339, align 1
  store i8 %340, i8* %338, align 1
  %341 = add nuw nsw i64 %336, 1
  %342 = load i64, i64* %321, align 8
  %343 = lshr i64 %342, 1
  %344 = and i64 %343, 2147483647
  %345 = icmp ult i64 %341, %344
  br i1 %345, label %335, label %346

346:                                              ; preds = %335, %317
  %347 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, %"class.SkSL::Expression"* nonnull %196, %class.SkSTArray* nonnull %9)
  %348 = ptrtoint %"class.SkSL::Expression"* %347 to i64
  %349 = load i64, i64* %321, align 8
  %350 = and i64 %349, 1
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %354, label %352

352:                                              ; preds = %346
  %353 = load i8*, i8** %322, align 8
  call void @_Z7sk_freePv(i8* %353) #5
  br label %354

354:                                              ; preds = %226, %352, %346
  %355 = phi i64 [ %197, %226 ], [ 0, %346 ], [ 0, %352 ]
  %356 = phi i64 [ 0, %226 ], [ %348, %346 ], [ %348, %352 ]
  %357 = load i64, i64* %173, align 8
  %358 = and i64 %357, 1
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %362, label %360

360:                                              ; preds = %354
  %361 = load i8*, i8** %174, align 8
  call void @_Z7sk_freePv(i8* %361) #5
  br label %362

362:                                              ; preds = %354, %360
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #5
  %363 = load i64, i64* %146, align 8
  %364 = and i64 %363, 4294967294
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %366, label %370

366:                                              ; preds = %381, %362
  %367 = phi i64 [ %363, %362 ], [ %383, %381 ]
  %368 = and i64 %367, 1
  %369 = icmp eq i64 %368, 0
  br i1 %369, label %389, label %387

370:                                              ; preds = %362, %381
  %371 = phi i64 [ %382, %381 ], [ 0, %362 ]
  %372 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %373 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %372, i64 %371, i32 0, i32 0, i32 0
  %374 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %373, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %373, align 8
  %375 = icmp eq %"class.SkSL::Expression"* %374, null
  br i1 %375, label %381, label %376

376:                                              ; preds = %370
  %377 = bitcast %"class.SkSL::Expression"* %374 to void (%"class.SkSL::Expression"*)***
  %378 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %377, align 8
  %379 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %378, i64 1
  %380 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %379, align 8
  call void %380(%"class.SkSL::Expression"* nonnull %374) #5
  br label %381

381:                                              ; preds = %376, %370
  %382 = add nuw nsw i64 %371, 1
  %383 = load i64, i64* %146, align 8
  %384 = lshr i64 %383, 1
  %385 = and i64 %384, 2147483647
  %386 = icmp ult i64 %382, %385
  br i1 %386, label %370, label %366

387:                                              ; preds = %366
  %388 = load i8*, i8** %147, align 8
  call void @_Z7sk_freePv(i8* %388) #5
  br label %389

389:                                              ; preds = %387, %366
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %143) #5
  %390 = icmp eq i64 %355, 0
  br i1 %390, label %397, label %391

391:                                              ; preds = %389
  %392 = inttoptr i64 %355 to %"class.SkSL::Expression"*
  %393 = inttoptr i64 %355 to void (%"class.SkSL::Expression"*)***
  %394 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %394, i64 1
  %396 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %395, align 8
  call void %396(%"class.SkSL::Expression"* nonnull %392) #5
  br label %397

397:                                              ; preds = %53, %66, %79, %39, %134, %391, %389
  %398 = phi i64 [ 0, %389 ], [ 0, %391 ], [ 0, %134 ], [ %10, %39 ], [ %10, %79 ], [ %10, %66 ], [ %10, %53 ]
  %399 = phi i64 [ %356, %389 ], [ %356, %391 ], [ %128, %134 ], [ 0, %39 ], [ 0, %79 ], [ 0, %66 ], [ 0, %53 ]
  %400 = load i64, i64* %22, align 8
  %401 = and i64 %400, 1
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %405, label %403

403:                                              ; preds = %397
  %404 = load i8*, i8** %23, align 8
  call void @_Z7sk_freePv(i8* %404) #5
  br label %405

405:                                              ; preds = %397, %403
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #5
  %406 = icmp eq i64 %398, 0
  br i1 %406, label %413, label %407

407:                                              ; preds = %405
  %408 = inttoptr i64 %398 to %"class.SkSL::Expression"*
  %409 = inttoptr i64 %398 to void (%"class.SkSL::Expression"*)***
  %410 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %409, align 8
  %411 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %410, i64 1
  %412 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %411, align 8
  call void %412(%"class.SkSL::Expression"* nonnull %408) #5
  br label %413

413:                                              ; preds = %405, %407
  %414 = inttoptr i64 %399 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %414
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %class.SkSTArray*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkSTArray, align 8
  %5 = alloca %class.SkSTArray, align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to [4 x %struct.ConstructorArgMap]*
  %8 = alloca i32, align 4
  %9 = bitcast i32* %8 to [4 x i8]*
  %10 = alloca %class.SkSTArray.52, align 8
  %11 = alloca %struct.ReorderedArgument, align 8
  %12 = alloca %struct.ReorderedArgument, align 8
  %13 = alloca %class.SkSTArray.43, align 8
  %14 = alloca %class.SkSTArray, align 8
  %15 = alloca %class.SkSTArray.43, align 8
  %16 = ptrtoint %"class.SkSL::Expression"* %1 to i64
  %17 = bitcast %"class.SkSL::Expression"* %1 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %18 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %18, i64 3
  %20 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %19, align 8
  %21 = tail call dereferenceable(184) %"class.SkSL::Type"* %20(%"class.SkSL::Expression"* %1) #5
  %22 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %21, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 8
  br i1 %24, label %25, label %37

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = lshr i64 %30, 1
  %32 = trunc i64 %31 to i32
  %33 = and i32 %32, 2147483647
  %34 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %21, %"class.SkSL::Context"* dereferenceable(744) %0, i32 %33, i32 1) #5
  %35 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %27, %"class.SkSL::Type"* dereferenceable(184) %34, %"class.SkSL::Expression"* %1) #5
  %36 = ptrtoint %"class.SkSL::Expression"* %35 to i64
  br label %745

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %39 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %38, align 8
  %40 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %39, i64 0, i32 1, i32 10
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %732, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 8
  %45 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %2, i64 0, i32 0, i32 0, i64 16
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = lshr i64 %47, 1
  %49 = trunc i64 %48 to i32
  %50 = and i32 %49, 2147483647
  %51 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %21, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %70

54:                                               ; preds = %43
  %55 = icmp eq i32 %50, 0
  br i1 %55, label %745, label %56

56:                                               ; preds = %54
  %57 = bitcast i8* %44 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = zext i32 %50 to i64
  br label %62

60:                                               ; preds = %62
  %61 = icmp eq i64 %69, %59
  br i1 %61, label %745, label %62

62:                                               ; preds = %60, %56
  %63 = phi i64 [ 0, %56 ], [ %69, %60 ]
  %64 = getelementptr inbounds i8, i8* %58, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i64
  %67 = and i64 %66, 4294967295
  %68 = icmp eq i64 %63, %67
  %69 = add nuw nsw i64 %63, 1
  br i1 %68, label %60, label %70

70:                                               ; preds = %62, %43
  %71 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 52
  br i1 %73, label %74, label %159

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #5
  %76 = bitcast %class.SkSTArray* %4 to i64*
  store i64 -6148914691236517206, i64* %76, align 8
  %77 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 8
  %78 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 16
  %79 = bitcast i8* %78 to i64*
  %80 = bitcast i8* %77 to i8**
  store i8* %75, i8** %80, align 8
  store i64 34359738368, i64* %79, align 8
  %81 = bitcast i8* %44 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  %84 = and i64 %48, 2147483647
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = select i1 %83, i8* null, i8* %85
  %87 = icmp eq i8* %82, %86
  br i1 %87, label %98, label %88

88:                                               ; preds = %74
  %89 = bitcast i8* %77 to %class.SkTArray*
  %90 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1, i32 0, i32 1
  %91 = getelementptr inbounds i32, i32* %90, i64 2
  %92 = bitcast i32* %91 to i8**
  br label %141

93:                                               ; preds = %141
  %94 = load i64, i64* %79, align 8
  %95 = lshr i64 %94, 1
  %96 = trunc i64 %95 to i32
  %97 = and i32 %96, 2147483647
  br label %98

98:                                               ; preds = %93, %74
  %99 = phi i32 [ %97, %93 ], [ 0, %74 ]
  %100 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %101 = bitcast %"class.SkSL::Expression"* %100 to %"class.SkSL::Expression"**
  %102 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %101, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %101, align 8
  %103 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 8
  %104 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 0
  %105 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %5, i64 0, i32 0, i32 0, i64 16
  %106 = bitcast i8* %105 to i64*
  %107 = bitcast i8* %103 to i8**
  store i8* %104, i8** %107, align 8
  %108 = bitcast i8* %103 to %class.SkTArray*
  store i64 34359738368, i64* %106, align 8
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %108, i32 %99, i32 0) #5
  %109 = load i64, i64* %79, align 8
  %110 = and i64 %109, 4294967294
  %111 = load i64, i64* %106, align 8
  %112 = and i64 %111, -4294967295
  %113 = or i64 %112, %110
  store i64 %113, i64* %106, align 8
  %114 = load i8*, i8** %80, align 8
  %115 = icmp eq i64 %110, 0
  br i1 %115, label %127, label %116

116:                                              ; preds = %98, %116
  %117 = phi i64 [ %122, %116 ], [ 0, %98 ]
  %118 = load i8*, i8** %107, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 %117
  %120 = getelementptr inbounds i8, i8* %114, i64 %117
  %121 = load i8, i8* %120, align 1
  store i8 %121, i8* %119, align 1
  %122 = add nuw nsw i64 %117, 1
  %123 = load i64, i64* %106, align 8
  %124 = lshr i64 %123, 1
  %125 = and i64 %124, 2147483647
  %126 = icmp ult i64 %122, %125
  br i1 %126, label %116, label %127

127:                                              ; preds = %116, %98
  %128 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, %"class.SkSL::Expression"* %102, %class.SkSTArray* nonnull %5)
  %129 = load i64, i64* %106, align 8
  %130 = and i64 %129, 1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = load i8*, i8** %107, align 8
  call void @_Z7sk_freePv(i8* %133) #5
  br label %134

134:                                              ; preds = %127, %132
  %135 = load i64, i64* %79, align 8
  %136 = and i64 %135, 1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = load i8*, i8** %80, align 8
  call void @_Z7sk_freePv(i8* %139) #5
  br label %140

140:                                              ; preds = %134, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #5
  br label %736

141:                                              ; preds = %88, %141
  %142 = phi i8* [ %82, %88 ], [ %157, %141 ]
  %143 = load i8, i8* %142, align 1
  %144 = load i8*, i8** %92, align 8
  %145 = sext i8 %143 to i64
  %146 = getelementptr inbounds i8, i8* %144, i64 %145
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %89, i32 1, i32 1) #5
  %147 = load i8*, i8** %80, align 8
  %148 = load i64, i64* %79, align 8
  %149 = lshr i64 %148, 1
  %150 = and i64 %149, 2147483647
  %151 = getelementptr inbounds i8, i8* %147, i64 %150
  %152 = add i64 %148, 2
  %153 = and i64 %152, 4294967294
  %154 = and i64 %148, -4294967295
  %155 = or i64 %153, %154
  store i64 %155, i64* %79, align 8
  %156 = load i8, i8* %146, align 1
  store i8 %156, i8* %151, align 1
  %157 = getelementptr inbounds i8, i8* %142, i64 1
  %158 = icmp eq i8* %157, %86
  br i1 %158, label %93, label %141

159:                                              ; preds = %70
  %160 = tail call %"class.SkSL::Expression"* @_ZN4SkSL14ConstantFolder27GetConstantValueForVariableERKNS_10ExpressionE(%"class.SkSL::Expression"* dereferenceable(24) %1) #5
  %161 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %160, i64 0, i32 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 39
  br i1 %163, label %164, label %187

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %160, i64 0, i32 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %160, i64 0, i32 1
  %168 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %167, align 8
  %169 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %168, i64 0, i32 6
  %170 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %169, align 8
  %171 = icmp eq %"class.SkSL::Type"* %170, null
  %172 = select i1 %171, %"class.SkSL::Type"* %168, %"class.SkSL::Type"* %170
  %173 = load i64, i64* %46, align 8
  %174 = lshr i64 %173, 1
  %175 = trunc i64 %174 to i32
  %176 = and i32 %175, 2147483647
  %177 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %172, %"class.SkSL::Context"* dereferenceable(744) %0, i32 %176, i32 1) #5
  %178 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %160, i64 1, i32 0, i32 1
  %179 = bitcast i32* %178 to %"class.SkSL::Expression"**
  %180 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %179, align 8
  %181 = bitcast %"class.SkSL::Expression"* %180 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %182 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %181, align 8
  %183 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %182, i64 10
  %184 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %183, align 8
  %185 = tail call %"class.SkSL::Expression"* %184(%"class.SkSL::Expression"* %180) #5
  %186 = tail call %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %166, %"class.SkSL::Type"* dereferenceable(184) %177, %"class.SkSL::Expression"* %185) #5
  br label %736

187:                                              ; preds = %159
  %188 = add i32 %162, -33
  %189 = icmp ult i32 %188, 8
  br i1 %189, label %190, label %732

190:                                              ; preds = %187
  %191 = tail call dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"* %160) #5
  %192 = bitcast %"class.SkSL::AnyConstructor"* %191 to { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)***
  %193 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)**, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*** %192, align 8
  %194 = getelementptr inbounds { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %193, i64 12
  %195 = load { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)*, { %"class.std::__1::unique_ptr"*, i64 } (%"class.SkSL::AnyConstructor"*)** %194, align 8
  %196 = tail call { %"class.std::__1::unique_ptr"*, i64 } %195(%"class.SkSL::AnyConstructor"* %191) #5
  %197 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %196, 0
  %198 = extractvalue { %"class.std::__1::unique_ptr"*, i64 } %196, 1
  %199 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %21, i64 0, i32 6
  %200 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %199, align 8
  %201 = icmp eq %"class.SkSL::Type"* %200, null
  %202 = select i1 %201, %"class.SkSL::Type"* %21, %"class.SkSL::Type"* %200
  %203 = load i64, i64* %46, align 8
  %204 = lshr i64 %203, 1
  %205 = trunc i64 %204 to i32
  %206 = and i32 %205, 2147483647
  %207 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %191, i64 0, i32 0
  %208 = bitcast %"class.SkSL::AnyConstructor"* %191 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %209 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %208, align 8
  %210 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %209, i64 3
  %211 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %210, align 8
  %212 = tail call dereferenceable(184) %"class.SkSL::Type"* %211(%"class.SkSL::Expression"* %207) #5
  %213 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %212, i64 0, i32 8
  %214 = load i32, i32* %213, align 8
  %215 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #5
  store i64 0, i64* %6, align 8
  %216 = trunc i64 %198 to i32
  %217 = icmp sgt i32 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %190
  %219 = and i64 %198, 4294967295
  br label %252

220:                                              ; preds = %344, %190
  %221 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221) #5
  store i32 0, i32* %8, align 4
  %222 = bitcast i8* %44 to i8**
  %223 = load i8*, i8** %222, align 8
  %224 = icmp eq i8* %223, null
  br i1 %224, label %357, label %225

225:                                              ; preds = %220
  %226 = load i64, i64* %46, align 8
  %227 = lshr i64 %226, 1
  %228 = and i64 %227, 2147483647
  %229 = getelementptr inbounds i8, i8* %223, i64 %228
  %230 = icmp eq i64 %228, 0
  br i1 %230, label %357, label %231

231:                                              ; preds = %225
  %232 = add nsw i64 %228, -1
  %233 = and i64 %227, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %249, label %235

235:                                              ; preds = %231, %235
  %236 = phi i8* [ %246, %235 ], [ %223, %231 ]
  %237 = phi i64 [ %247, %235 ], [ %233, %231 ]
  %238 = load i8, i8* %236, align 1
  %239 = sext i8 %238 to i64
  %240 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %239, i32 0
  %241 = load i8, i8* %240, align 2
  %242 = sext i8 %241 to i64
  %243 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = add i8 %244, 1
  store i8 %245, i8* %243, align 1
  %246 = getelementptr inbounds i8, i8* %236, i64 1
  %247 = add i64 %237, -1
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %235, !llvm.loop !3

249:                                              ; preds = %235, %231
  %250 = phi i8* [ %223, %231 ], [ %246, %235 ]
  %251 = icmp ult i64 %232, 3
  br i1 %251, label %357, label %361

252:                                              ; preds = %344, %218
  %253 = phi i64 [ 0, %218 ], [ %346, %344 ]
  %254 = phi i32 [ 0, %218 ], [ %345, %344 ]
  %255 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %197, i64 %253, i32 0, i32 0, i32 0
  %256 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %255, align 8
  %257 = bitcast %"class.SkSL::Expression"* %256 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %258 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %257, align 8
  %259 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %258, i64 3
  %260 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %259, align 8
  %261 = tail call dereferenceable(184) %"class.SkSL::Type"* %260(%"class.SkSL::Expression"* %256) #5
  %262 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %261, i64 0, i32 8
  %263 = load i32, i32* %262, align 8
  %264 = icmp sgt i32 %263, 0
  br i1 %264, label %265, label %344

265:                                              ; preds = %252
  %266 = trunc i64 %253 to i8
  %267 = sext i32 %254 to i64
  %268 = add i32 %263, -1
  %269 = zext i32 %268 to i64
  %270 = add nuw nsw i64 %269, 1
  %271 = icmp ult i64 %270, 16
  br i1 %271, label %272, label %275

272:                                              ; preds = %339, %265
  %273 = phi i64 [ %267, %265 ], [ %277, %339 ]
  %274 = phi i32 [ 0, %265 ], [ %278, %339 ]
  br label %348

275:                                              ; preds = %265
  %276 = and i64 %270, 8589934576
  %277 = add nsw i64 %276, %267
  %278 = trunc i64 %276 to i32
  %279 = insertelement <16 x i8> undef, i8 %266, i32 0
  %280 = shufflevector <16 x i8> %279, <16 x i8> undef, <16 x i32> zeroinitializer
  %281 = add nsw i64 %276, -16
  %282 = lshr exact i64 %281, 4
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp ult i64 %281, 48
  br i1 %285, label %322, label %286

286:                                              ; preds = %275
  %287 = sub nsw i64 %283, %284
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i64 [ 0, %286 ], [ %318, %288 ]
  %290 = phi <16 x i8> [ <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, %286 ], [ %319, %288 ]
  %291 = phi i64 [ %287, %286 ], [ %320, %288 ]
  %292 = add i64 %289, %267
  %293 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %292, i32 1
  %294 = getelementptr inbounds i8, i8* %293, i64 -1
  %295 = bitcast i8* %294 to <32 x i8>*
  %296 = shufflevector <16 x i8> %280, <16 x i8> %290, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %296, <32 x i8>* %295, align 1
  %297 = or i64 %289, 16
  %298 = add <16 x i8> %290, <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>
  %299 = add i64 %297, %267
  %300 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %299, i32 1
  %301 = getelementptr inbounds i8, i8* %300, i64 -1
  %302 = bitcast i8* %301 to <32 x i8>*
  %303 = shufflevector <16 x i8> %280, <16 x i8> %298, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %303, <32 x i8>* %302, align 1
  %304 = or i64 %289, 32
  %305 = add <16 x i8> %290, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
  %306 = add i64 %304, %267
  %307 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %306, i32 1
  %308 = getelementptr inbounds i8, i8* %307, i64 -1
  %309 = bitcast i8* %308 to <32 x i8>*
  %310 = shufflevector <16 x i8> %280, <16 x i8> %305, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %310, <32 x i8>* %309, align 1
  %311 = or i64 %289, 48
  %312 = add <16 x i8> %290, <i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48, i8 48>
  %313 = add i64 %311, %267
  %314 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %313, i32 1
  %315 = getelementptr inbounds i8, i8* %314, i64 -1
  %316 = bitcast i8* %315 to <32 x i8>*
  %317 = shufflevector <16 x i8> %280, <16 x i8> %312, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %317, <32 x i8>* %316, align 1
  %318 = add i64 %289, 64
  %319 = add <16 x i8> %290, <i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64>
  %320 = add i64 %291, -4
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %288, !llvm.loop !5

322:                                              ; preds = %288, %275
  %323 = phi i64 [ 0, %275 ], [ %318, %288 ]
  %324 = phi <16 x i8> [ <i8 0, i8 1, i8 2, i8 3, i8 4, i8 5, i8 6, i8 7, i8 8, i8 9, i8 10, i8 11, i8 12, i8 13, i8 14, i8 15>, %275 ], [ %319, %288 ]
  %325 = icmp eq i64 %284, 0
  br i1 %325, label %339, label %326

326:                                              ; preds = %322, %326
  %327 = phi i64 [ %335, %326 ], [ %323, %322 ]
  %328 = phi <16 x i8> [ %336, %326 ], [ %324, %322 ]
  %329 = phi i64 [ %337, %326 ], [ %284, %322 ]
  %330 = add i64 %327, %267
  %331 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %330, i32 1
  %332 = getelementptr inbounds i8, i8* %331, i64 -1
  %333 = bitcast i8* %332 to <32 x i8>*
  %334 = shufflevector <16 x i8> %280, <16 x i8> %328, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %334, <32 x i8>* %333, align 1
  %335 = add i64 %327, 16
  %336 = add <16 x i8> %328, <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>
  %337 = add i64 %329, -1
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %326, !llvm.loop !7

339:                                              ; preds = %326, %322
  %340 = icmp eq i64 %270, %276
  br i1 %340, label %341, label %272

341:                                              ; preds = %348, %339
  %342 = phi i64 [ %277, %339 ], [ %354, %348 ]
  %343 = trunc i64 %342 to i32
  br label %344

344:                                              ; preds = %341, %252
  %345 = phi i32 [ %254, %252 ], [ %343, %341 ]
  %346 = add nuw nsw i64 %253, 1
  %347 = icmp eq i64 %346, %219
  br i1 %347, label %220, label %252

348:                                              ; preds = %272, %348
  %349 = phi i64 [ %354, %348 ], [ %273, %272 ]
  %350 = phi i32 [ %355, %348 ], [ %274, %272 ]
  %351 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %349, i32 0
  store i8 %266, i8* %351, align 2
  %352 = trunc i32 %350 to i8
  %353 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %349, i32 1
  store i8 %352, i8* %353, align 1
  %354 = add nsw i64 %349, 1
  %355 = add nuw nsw i32 %350, 1
  %356 = icmp eq i32 %355, %263
  br i1 %356, label %341, label %348, !llvm.loop !8

357:                                              ; preds = %249, %361, %220, %225
  %358 = icmp sgt i32 %214, 0
  br i1 %358, label %359, label %425

359:                                              ; preds = %357
  %360 = zext i32 %214 to i64
  br label %400

361:                                              ; preds = %249, %361
  %362 = phi i8* [ %398, %361 ], [ %250, %249 ]
  %363 = load i8, i8* %362, align 1
  %364 = sext i8 %363 to i64
  %365 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %364, i32 0
  %366 = load i8, i8* %365, align 2
  %367 = sext i8 %366 to i64
  %368 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 %367
  %369 = load i8, i8* %368, align 1
  %370 = add i8 %369, 1
  store i8 %370, i8* %368, align 1
  %371 = getelementptr inbounds i8, i8* %362, i64 1
  %372 = load i8, i8* %371, align 1
  %373 = sext i8 %372 to i64
  %374 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %373, i32 0
  %375 = load i8, i8* %374, align 2
  %376 = sext i8 %375 to i64
  %377 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 %376
  %378 = load i8, i8* %377, align 1
  %379 = add i8 %378, 1
  store i8 %379, i8* %377, align 1
  %380 = getelementptr inbounds i8, i8* %362, i64 2
  %381 = load i8, i8* %380, align 1
  %382 = sext i8 %381 to i64
  %383 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %382, i32 0
  %384 = load i8, i8* %383, align 2
  %385 = sext i8 %384 to i64
  %386 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 %385
  %387 = load i8, i8* %386, align 1
  %388 = add i8 %387, 1
  store i8 %388, i8* %386, align 1
  %389 = getelementptr inbounds i8, i8* %362, i64 3
  %390 = load i8, i8* %389, align 1
  %391 = sext i8 %390 to i64
  %392 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %391, i32 0
  %393 = load i8, i8* %392, align 2
  %394 = sext i8 %393 to i64
  %395 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 %394
  %396 = load i8, i8* %395, align 1
  %397 = add i8 %396, 1
  store i8 %397, i8* %395, align 1
  %398 = getelementptr inbounds i8, i8* %362, i64 4
  %399 = icmp eq i8* %398, %229
  br i1 %399, label %357, label %361

400:                                              ; preds = %420, %359
  %401 = phi i64 [ 0, %359 ], [ %421, %420 ]
  %402 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %401, i32 0
  %403 = load i8, i8* %402, align 2
  %404 = sext i8 %403 to i64
  %405 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %197, i64 %404, i32 0, i32 0, i32 0
  %406 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %405, align 8
  %407 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 %404
  %408 = load i8, i8* %407, align 1
  %409 = icmp sgt i8 %408, 1
  br i1 %409, label %410, label %412

410:                                              ; preds = %400
  %411 = tail call zeroext i1 @_ZN4SkSL8Analysis19IsTrivialExpressionERKNS_10ExpressionE(%"class.SkSL::Expression"* dereferenceable(24) %406) #5
  br i1 %411, label %414, label %730

412:                                              ; preds = %400
  %413 = icmp eq i8 %408, 1
  br i1 %413, label %420, label %414

414:                                              ; preds = %410, %412
  %415 = bitcast %"class.SkSL::Expression"* %406 to i1 (%"class.SkSL::Expression"*, i32)***
  %416 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %415, align 8
  %417 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %416, i64 7
  %418 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %417, align 8
  %419 = tail call zeroext i1 %418(%"class.SkSL::Expression"* %406, i32 0) #5
  br i1 %419, label %730, label %420

420:                                              ; preds = %412, %414
  %421 = add nuw nsw i64 %401, 1
  %422 = icmp eq i64 %421, %360
  br i1 %422, label %423, label %400

423:                                              ; preds = %420
  %424 = load i8*, i8** %222, align 8
  br label %425

425:                                              ; preds = %423, %357
  %426 = phi i8* [ %424, %423 ], [ %223, %357 ]
  %427 = getelementptr inbounds %class.SkSTArray.52, %class.SkSTArray.52* %10, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %427) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %427, i8 -86, i64 128, i1 false)
  %428 = getelementptr inbounds %class.SkSTArray.52, %class.SkSTArray.52* %10, i64 0, i32 0, i32 0, i64 128
  %429 = getelementptr inbounds %class.SkSTArray.52, %class.SkSTArray.52* %10, i64 0, i32 0, i32 0, i64 136
  %430 = bitcast i8* %429 to i64*
  %431 = bitcast i8* %428 to i8**
  store i8* %427, i8** %431, align 8
  store i64 34359738368, i64* %430, align 8
  %432 = icmp eq i8* %426, null
  br i1 %432, label %438, label %433

433:                                              ; preds = %425
  %434 = load i64, i64* %46, align 8
  %435 = lshr i64 %434, 1
  %436 = and i64 %435, 2147483647
  %437 = getelementptr inbounds i8, i8* %426, i64 %436
  br label %438

438:                                              ; preds = %425, %433
  %439 = phi i8* [ %437, %433 ], [ null, %425 ]
  %440 = icmp eq i8* %426, %439
  br i1 %440, label %456, label %441

441:                                              ; preds = %438
  %442 = bitcast i8* %428 to %class.SkTArray.54*
  %443 = bitcast i8* %428 to %struct.ReorderedArgument**
  %444 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %12, i64 0, i32 0
  %445 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %12, i64 0, i32 1, i32 0, i32 0, i64 8
  %446 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %12, i64 0, i32 1, i32 0, i32 0, i64 16
  %447 = bitcast i8* %446 to i64*
  %448 = bitcast i8* %445 to i8**
  %449 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %12, i64 0, i32 1, i32 0, i32 0, i64 0
  %450 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %11, i64 0, i32 0
  %451 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %11, i64 0, i32 1, i32 0, i32 0, i64 8
  %452 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %11, i64 0, i32 1, i32 0, i32 0, i64 0
  %453 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %11, i64 0, i32 1, i32 0, i32 0, i64 16
  %454 = bitcast i8* %453 to i64*
  %455 = bitcast i8* %451 to i8**
  br label %489

456:                                              ; preds = %551, %438
  %457 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %13, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %457) #5
  %458 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %13, i64 0, i32 0, i32 0, i64 16
  %459 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %13, i64 0, i32 0, i32 0, i64 24
  %460 = bitcast i8* %459 to i64*
  %461 = bitcast i8* %458 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %457, i8 -86, i64 16, i1 false)
  store i8* %457, i8** %461, align 8
  store i64 17179869184, i64* %460, align 8
  %462 = bitcast i8* %458 to %class.SkTArray.45*
  %463 = icmp eq i32 %206, 0
  br i1 %463, label %470, label %464

464:                                              ; preds = %456
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.45* %462, i32 %206, i32 0) #5
  %465 = load i64, i64* %460, align 8
  %466 = shl i64 %465, 32
  %467 = and i64 %466, 4294967296
  %468 = and i64 %465, -4294967297
  %469 = or i64 %467, %468
  br label %470

470:                                              ; preds = %456, %464
  %471 = phi i64 [ %469, %464 ], [ 17179869184, %456 ]
  store i64 %471, i64* %460, align 8
  %472 = bitcast i8* %428 to %struct.ReorderedArgument**
  %473 = load %struct.ReorderedArgument*, %struct.ReorderedArgument** %472, align 8
  %474 = icmp eq %struct.ReorderedArgument* %473, null
  br i1 %474, label %554, label %475

475:                                              ; preds = %470
  %476 = load i64, i64* %430, align 8
  %477 = lshr i64 %476, 1
  %478 = and i64 %477, 2147483647
  %479 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %473, i64 %478
  %480 = icmp eq i64 %478, 0
  br i1 %480, label %554, label %481

481:                                              ; preds = %475
  %482 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %14, i64 0, i32 0, i32 0, i64 8
  %483 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %14, i64 0, i32 0, i32 0, i64 0
  %484 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %14, i64 0, i32 0, i32 0, i64 16
  %485 = bitcast i8* %484 to i64*
  %486 = bitcast i8* %482 to i8**
  %487 = bitcast i8* %482 to %class.SkTArray*
  %488 = bitcast i8* %458 to %"class.std::__1::unique_ptr"**
  br label %653

489:                                              ; preds = %441, %551
  %490 = phi i8* [ %426, %441 ], [ %552, %551 ]
  %491 = load i8, i8* %490, align 1
  %492 = sext i8 %491 to i64
  %493 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %492, i32 0
  %494 = load i8, i8* %493, align 2
  %495 = sext i8 %494 to i64
  %496 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %197, i64 %495, i32 0, i32 0, i32 0
  %497 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %496, align 8
  %498 = bitcast %"class.SkSL::Expression"* %497 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %499 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %498, align 8
  %500 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %499, i64 3
  %501 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %500, align 8
  %502 = call dereferenceable(184) %"class.SkSL::Type"* %501(%"class.SkSL::Expression"* %497) #5
  %503 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %502, i64 0, i32 3
  %504 = load i32, i32* %503, align 8
  %505 = icmp eq i32 %504, 8
  br i1 %505, label %506, label %513

506:                                              ; preds = %489
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %450) #5
  store i8 %494, i8* %450, align 8
  store i8* %452, i8** %455, align 8
  store i64 34359738368, i64* %454, align 8
  call fastcc void @_ZN8SkTArrayIZN4SkSL7Swizzle4MakeERKNS0_7ContextENSt3__110unique_ptrINS0_10ExpressionENS5_14default_deleteIS7_EEEE9SkSTArrayILi4EaLb0EEE17ReorderedArgumentLb0EE9push_backEOSD_(%class.SkTArray.54* %442, %struct.ReorderedArgument* nonnull dereferenceable(32) %11)
  %507 = load i64, i64* %454, align 8
  %508 = and i64 %507, 1
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %512, label %510

510:                                              ; preds = %506
  %511 = load i8*, i8** %455, align 8
  call void @_Z7sk_freePv(i8* %511) #5
  br label %512

512:                                              ; preds = %506, %510
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %450) #5
  br label %551

513:                                              ; preds = %489
  %514 = load i64, i64* %430, align 8
  %515 = and i64 %514, 4294967294
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %525, label %517

517:                                              ; preds = %513
  %518 = load %struct.ReorderedArgument*, %struct.ReorderedArgument** %443, align 8
  %519 = lshr i64 %514, 1
  %520 = and i64 %519, 2147483647
  %521 = add nsw i64 %520, -1
  %522 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %518, i64 %521, i32 0
  %523 = load i8, i8* %522, align 8
  %524 = icmp eq i8 %523, %494
  br i1 %524, label %534, label %525

525:                                              ; preds = %513, %517
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %444) #5
  store i8 %494, i8* %444, align 8
  %526 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %492, i32 1
  %527 = load i8, i8* %526, align 1
  store i8* %449, i8** %448, align 8
  store i64 34359738370, i64* %447, align 8
  store i8 %527, i8* %449, align 8
  call fastcc void @_ZN8SkTArrayIZN4SkSL7Swizzle4MakeERKNS0_7ContextENSt3__110unique_ptrINS0_10ExpressionENS5_14default_deleteIS7_EEEE9SkSTArrayILi4EaLb0EEE17ReorderedArgumentLb0EE9push_backEOSD_(%class.SkTArray.54* %442, %struct.ReorderedArgument* nonnull dereferenceable(32) %12)
  %528 = load i64, i64* %447, align 8
  %529 = and i64 %528, 1
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %533, label %531

531:                                              ; preds = %525
  %532 = load i8*, i8** %448, align 8
  call void @_Z7sk_freePv(i8* %532) #5
  br label %533

533:                                              ; preds = %525, %531
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %444) #5
  br label %551

534:                                              ; preds = %517
  %535 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %518, i64 %521, i32 1, i32 0, i32 0, i64 8
  %536 = bitcast i8* %535 to %class.SkTArray*
  %537 = getelementptr inbounds [4 x %struct.ConstructorArgMap], [4 x %struct.ConstructorArgMap]* %7, i64 0, i64 %492, i32 1
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %536, i32 1, i32 1) #5
  %538 = bitcast i8* %535 to i8**
  %539 = load i8*, i8** %538, align 8
  %540 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %518, i64 %521, i32 1, i32 0, i32 0, i64 16
  %541 = bitcast i8* %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = lshr i64 %542, 1
  %544 = and i64 %543, 2147483647
  %545 = getelementptr inbounds i8, i8* %539, i64 %544
  %546 = add i64 %542, 2
  %547 = and i64 %546, 4294967294
  %548 = and i64 %542, -4294967295
  %549 = or i64 %547, %548
  store i64 %549, i64* %541, align 8
  %550 = load i8, i8* %537, align 1
  store i8 %550, i8* %545, align 1
  br label %551

551:                                              ; preds = %533, %534, %512
  %552 = getelementptr inbounds i8, i8* %490, i64 1
  %553 = icmp eq i8* %552, %439
  br i1 %553, label %456, label %489

554:                                              ; preds = %727, %470, %475
  %555 = getelementptr inbounds %"class.SkSL::AnyConstructor", %"class.SkSL::AnyConstructor"* %191, i64 0, i32 0, i32 0, i32 1
  %556 = load i32, i32* %555, align 8
  %557 = call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %202, %"class.SkSL::Context"* dereferenceable(744) %0, i32 %206, i32 1) #5
  %558 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %15, i64 0, i32 0, i32 0, i64 16
  %559 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %15, i64 0, i32 0, i32 0, i64 0
  %560 = getelementptr inbounds %class.SkSTArray.43, %class.SkSTArray.43* %15, i64 0, i32 0, i32 0, i64 24
  %561 = bitcast i8* %560 to i64*
  %562 = bitcast i8* %558 to i8**
  store i8* %559, i8** %562, align 8
  store i64 17179869184, i64* %561, align 8
  %563 = bitcast i8* %558 to %class.SkTArray.45*
  %564 = call dereferenceable(16) %class.SkTArray.45* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.45* %563, %class.SkTArray.45* dereferenceable(16) %462) #5
  %565 = call %"class.SkSL::Expression"* @_ZN4SkSL11Constructor7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, i32 %556, %"class.SkSL::Type"* dereferenceable(184) %557, %class.SkSTArray.43* nonnull %15) #5
  %566 = load i64, i64* %561, align 8
  %567 = and i64 %566, 4294967294
  %568 = icmp eq i64 %567, 0
  br i1 %568, label %571, label %569

569:                                              ; preds = %554
  %570 = bitcast i8* %558 to %"class.std::__1::unique_ptr"**
  br label %575

571:                                              ; preds = %586, %554
  %572 = phi i64 [ %566, %554 ], [ %588, %586 ]
  %573 = and i64 %572, 1
  %574 = icmp eq i64 %573, 0
  br i1 %574, label %594, label %592

575:                                              ; preds = %586, %569
  %576 = phi i64 [ 0, %569 ], [ %587, %586 ]
  %577 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %570, align 8
  %578 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %577, i64 %576, i32 0, i32 0, i32 0
  %579 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %578, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %578, align 8
  %580 = icmp eq %"class.SkSL::Expression"* %579, null
  br i1 %580, label %586, label %581

581:                                              ; preds = %575
  %582 = bitcast %"class.SkSL::Expression"* %579 to void (%"class.SkSL::Expression"*)***
  %583 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %582, align 8
  %584 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %583, i64 1
  %585 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %584, align 8
  call void %585(%"class.SkSL::Expression"* nonnull %579) #5
  br label %586

586:                                              ; preds = %581, %575
  %587 = add nuw nsw i64 %576, 1
  %588 = load i64, i64* %561, align 8
  %589 = lshr i64 %588, 1
  %590 = and i64 %589, 2147483647
  %591 = icmp ult i64 %587, %590
  br i1 %591, label %575, label %571

592:                                              ; preds = %571
  %593 = load i8*, i8** %562, align 8
  call void @_Z7sk_freePv(i8* %593) #5
  br label %594

594:                                              ; preds = %571, %592
  %595 = load i64, i64* %460, align 8
  %596 = and i64 %595, 4294967294
  %597 = icmp eq i64 %596, 0
  br i1 %597, label %600, label %598

598:                                              ; preds = %594
  %599 = bitcast i8* %458 to %"class.std::__1::unique_ptr"**
  br label %604

600:                                              ; preds = %615, %594
  %601 = phi i64 [ %595, %594 ], [ %617, %615 ]
  %602 = and i64 %601, 1
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %623, label %621

604:                                              ; preds = %615, %598
  %605 = phi i64 [ 0, %598 ], [ %616, %615 ]
  %606 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %599, align 8
  %607 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %606, i64 %605, i32 0, i32 0, i32 0
  %608 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %607, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %607, align 8
  %609 = icmp eq %"class.SkSL::Expression"* %608, null
  br i1 %609, label %615, label %610

610:                                              ; preds = %604
  %611 = bitcast %"class.SkSL::Expression"* %608 to void (%"class.SkSL::Expression"*)***
  %612 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %611, align 8
  %613 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %612, i64 1
  %614 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %613, align 8
  call void %614(%"class.SkSL::Expression"* nonnull %608) #5
  br label %615

615:                                              ; preds = %610, %604
  %616 = add nuw nsw i64 %605, 1
  %617 = load i64, i64* %460, align 8
  %618 = lshr i64 %617, 1
  %619 = and i64 %618, 2147483647
  %620 = icmp ult i64 %616, %619
  br i1 %620, label %604, label %600

621:                                              ; preds = %600
  %622 = load i8*, i8** %461, align 8
  call void @_Z7sk_freePv(i8* %622) #5
  br label %623

623:                                              ; preds = %600, %621
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %457) #5
  %624 = load i64, i64* %430, align 8
  %625 = and i64 %624, 4294967294
  %626 = icmp eq i64 %625, 0
  br i1 %626, label %627, label %631

627:                                              ; preds = %645, %623
  %628 = phi i64 [ %624, %623 ], [ %646, %645 ]
  %629 = and i64 %628, 1
  %630 = icmp eq i64 %629, 0
  br i1 %630, label %731, label %651

631:                                              ; preds = %623, %645
  %632 = phi i64 [ %646, %645 ], [ %624, %623 ]
  %633 = phi i64 [ %647, %645 ], [ 0, %623 ]
  %634 = load %struct.ReorderedArgument*, %struct.ReorderedArgument** %472, align 8
  %635 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %634, i64 %633, i32 1, i32 0, i32 0, i64 16
  %636 = bitcast i8* %635 to i64*
  %637 = load i64, i64* %636, align 8
  %638 = and i64 %637, 1
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %645, label %640

640:                                              ; preds = %631
  %641 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %634, i64 %633, i32 1, i32 0, i32 0, i64 8
  %642 = bitcast i8* %641 to i8**
  %643 = load i8*, i8** %642, align 8
  call void @_Z7sk_freePv(i8* %643) #5
  %644 = load i64, i64* %430, align 8
  br label %645

645:                                              ; preds = %640, %631
  %646 = phi i64 [ %632, %631 ], [ %644, %640 ]
  %647 = add nuw nsw i64 %633, 1
  %648 = lshr i64 %646, 1
  %649 = and i64 %648, 2147483647
  %650 = icmp ult i64 %647, %649
  br i1 %650, label %631, label %627

651:                                              ; preds = %627
  %652 = load i8*, i8** %431, align 8
  call void @_Z7sk_freePv(i8* %652) #5
  br label %731

653:                                              ; preds = %481, %727
  %654 = phi %struct.ReorderedArgument* [ %473, %481 ], [ %728, %727 ]
  %655 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %654, i64 0, i32 0
  %656 = load i8, i8* %655, align 8
  %657 = sext i8 %656 to i64
  %658 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %197, i64 %657, i32 0, i32 0, i32 0
  %659 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %658, align 8
  %660 = bitcast %"class.SkSL::Expression"* %659 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %661 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %660, align 8
  %662 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %661, i64 10
  %663 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %662, align 8
  %664 = call %"class.SkSL::Expression"* %663(%"class.SkSL::Expression"* %659) #5
  %665 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %654, i64 0, i32 1, i32 0, i32 0, i64 16
  %666 = bitcast i8* %665 to i64*
  %667 = load i64, i64* %666, align 8
  %668 = and i64 %667, 4294967294
  %669 = icmp eq i64 %668, 0
  br i1 %669, label %670, label %682

670:                                              ; preds = %653
  %671 = ptrtoint %"class.SkSL::Expression"* %664 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.45* %462, i32 1, i32 1) #5
  %672 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %488, align 8
  %673 = load i64, i64* %460, align 8
  %674 = lshr i64 %673, 1
  %675 = and i64 %674, 2147483647
  %676 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %672, i64 %675
  %677 = add i64 %673, 2
  %678 = and i64 %677, 4294967294
  %679 = and i64 %673, -4294967295
  %680 = or i64 %678, %679
  store i64 %680, i64* %460, align 8
  %681 = bitcast %"class.std::__1::unique_ptr"* %676 to i64*
  store i64 %671, i64* %681, align 8
  br label %727

682:                                              ; preds = %653
  %683 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %654, i64 0, i32 1
  store i8* %483, i8** %486, align 8
  store i64 34359738368, i64* %485, align 8
  %684 = icmp eq %class.SkSTArray* %14, %683
  br i1 %684, label %709, label %685

685:                                              ; preds = %682
  %686 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %654, i64 0, i32 1, i32 0, i32 0, i64 8
  store i64 34359738368, i64* %485, align 8
  %687 = lshr i64 %667, 1
  %688 = trunc i64 %687 to i32
  %689 = and i32 %688, 2147483647
  call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %487, i32 %689, i32 0) #5
  %690 = load i64, i64* %666, align 8
  %691 = and i64 %690, 4294967294
  %692 = load i64, i64* %485, align 8
  %693 = and i64 %692, -4294967295
  %694 = or i64 %693, %691
  store i64 %694, i64* %485, align 8
  %695 = bitcast i8* %686 to i8**
  %696 = load i8*, i8** %695, align 8
  %697 = icmp eq i64 %691, 0
  br i1 %697, label %709, label %698

698:                                              ; preds = %685, %698
  %699 = phi i64 [ %704, %698 ], [ 0, %685 ]
  %700 = load i8*, i8** %486, align 8
  %701 = getelementptr inbounds i8, i8* %700, i64 %699
  %702 = getelementptr inbounds i8, i8* %696, i64 %699
  %703 = load i8, i8* %702, align 1
  store i8 %703, i8* %701, align 1
  %704 = add nuw nsw i64 %699, 1
  %705 = load i64, i64* %485, align 8
  %706 = lshr i64 %705, 1
  %707 = and i64 %706, 2147483647
  %708 = icmp ult i64 %704, %707
  br i1 %708, label %698, label %709

709:                                              ; preds = %698, %685, %682
  %710 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle4MakeERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %0, %"class.SkSL::Expression"* %664, %class.SkSTArray* nonnull %14)
  %711 = ptrtoint %"class.SkSL::Expression"* %710 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.45* %462, i32 1, i32 1) #5
  %712 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %488, align 8
  %713 = load i64, i64* %460, align 8
  %714 = lshr i64 %713, 1
  %715 = and i64 %714, 2147483647
  %716 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %712, i64 %715
  %717 = add i64 %713, 2
  %718 = and i64 %717, 4294967294
  %719 = and i64 %713, -4294967295
  %720 = or i64 %718, %719
  store i64 %720, i64* %460, align 8
  %721 = bitcast %"class.std::__1::unique_ptr"* %716 to i64*
  store i64 %711, i64* %721, align 8
  %722 = load i64, i64* %485, align 8
  %723 = and i64 %722, 1
  %724 = icmp eq i64 %723, 0
  br i1 %724, label %727, label %725

725:                                              ; preds = %709
  %726 = load i8*, i8** %486, align 8
  call void @_Z7sk_freePv(i8* %726) #5
  br label %727

727:                                              ; preds = %670, %709, %725
  %728 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %654, i64 1
  %729 = icmp eq %struct.ReorderedArgument* %728, %479
  br i1 %729, label %554, label %653

730:                                              ; preds = %414, %410
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #5
  br label %732

731:                                              ; preds = %651, %627
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %427) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #5
  br label %736

732:                                              ; preds = %187, %730, %37
  %733 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 56) #5
  %734 = bitcast i8* %733 to %"struct.SkSL::Swizzle"*
  tail call void @_ZN4SkSL7SwizzleC2ERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEERK9SkSTArrayILi4EaLb0EE(%"struct.SkSL::Swizzle"* %734, %"class.SkSL::Context"* dereferenceable(744) %0, %"class.SkSL::Expression"* %1, %class.SkSTArray* dereferenceable(24) %2) #5
  %735 = ptrtoint i8* %733 to i64
  br label %745

736:                                              ; preds = %164, %731, %140
  %737 = phi %"class.SkSL::Expression"* [ %128, %140 ], [ %186, %164 ], [ %565, %731 ]
  %738 = ptrtoint %"class.SkSL::Expression"* %737 to i64
  %739 = icmp eq %"class.SkSL::Expression"* %1, null
  br i1 %739, label %745, label %740

740:                                              ; preds = %736
  %741 = bitcast %"class.SkSL::Expression"* %1 to void (%"class.SkSL::Expression"*)***
  %742 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %741, align 8
  %743 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %742, i64 1
  %744 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %743, align 8
  call void %744(%"class.SkSL::Expression"* nonnull %1) #5
  br label %745

745:                                              ; preds = %60, %54, %732, %25, %736, %740
  %746 = phi i64 [ %738, %736 ], [ %738, %740 ], [ %735, %732 ], [ %36, %25 ], [ %16, %54 ], [ %16, %60 ]
  %747 = inttoptr i64 %746 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %747
}

declare %"class.SkSL::Expression"* @_ZN4SkSL21ConstructorScalarCast4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL11Constructor7ConvertERKNS_7ContextEiRKNS_4TypeE9SkSTArrayILi2ENSt3__110unique_ptrINS_10ExpressionENS8_14default_deleteISA_EEEELb0EE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %class.SkSTArray.43*) local_unnamed_addr #2

declare dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"*, %"class.SkSL::Context"* dereferenceable(744), i32, i32) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL16ConstructorSplat4MakeERKNS_7ContextEiRKNS_4TypeENSt3__110unique_ptrINS_10ExpressionENS7_14default_deleteIS9_EEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Type"* dereferenceable(184), %"class.SkSL::Expression"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL14ConstantFolder27GetConstantValueForVariableERKNS_10ExpressionE(%"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

declare dereferenceable(32) %"class.SkSL::AnyConstructor"* @_ZNK4SkSL10Expression16asAnyConstructorEv(%"class.SkSL::Expression"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN4SkSL8Analysis19IsTrivialExpressionERKNS_10ExpressionE(%"class.SkSL::Expression"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8SkTArrayIZN4SkSL7Swizzle4MakeERKNS0_7ContextENSt3__110unique_ptrINS0_10ExpressionENS5_14default_deleteIS7_EEEE9SkSTArrayILi4EaLb0EEE17ReorderedArgumentLb0EE9push_backEOSD_(%class.SkTArray.54* nocapture, %struct.ReorderedArgument* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTArray.54, %class.SkTArray.54* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = and i64 %5, 2147483647
  %7 = lshr i64 %4, 33
  %8 = icmp uge i64 %6, %7
  %9 = mul nuw nsw i64 %6, 3
  %10 = add nuw nsw i64 %9, 3
  %11 = icmp ule i64 %7, %10
  %12 = and i64 %4, 1
  %13 = icmp eq i64 %12, 0
  %14 = or i1 %13, %11
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = and i64 %4, 4294967296
  %17 = icmp eq i64 %16, 0
  br label %18

18:                                               ; preds = %15, %2
  %19 = phi i1 [ false, %2 ], [ %17, %15 ]
  %20 = or i1 %8, %19
  br i1 %20, label %21, label %120

21:                                               ; preds = %18
  %22 = add nuw nsw i64 %6, 2
  %23 = lshr i64 %22, 1
  %24 = add nuw nsw i64 %6, 8
  %25 = add nuw nsw i64 %24, %23
  %26 = and i64 %25, 8589934584
  %27 = icmp eq i64 %26, %7
  br i1 %27, label %120, label %28

28:                                               ; preds = %21
  %29 = icmp ult i64 %26, 2147483647
  %30 = select i1 %29, i64 %26, i64 2147483647
  %31 = shl nuw i64 %30, 33
  %32 = and i64 %4, 8589934591
  %33 = or i64 %31, %32
  store i64 %33, i64* %3, align 8
  %34 = tail call i8* @_Z15sk_malloc_throwmm(i64 %30, i64 32) #5
  %35 = load i64, i64* %3, align 8
  %36 = and i64 %35, 4294967294
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %106, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %class.SkTArray.54, %class.SkTArray.54* %0, i64 0, i32 0
  br label %40

40:                                               ; preds = %100, %38
  %41 = phi i64 [ 0, %38 ], [ %101, %100 ]
  %42 = shl nuw nsw i64 %41, 5
  %43 = getelementptr inbounds i8, i8* %34, i64 %42
  %44 = bitcast i8* %43 to %struct.ReorderedArgument*
  %45 = load %struct.ReorderedArgument*, %struct.ReorderedArgument** %39, align 8
  %46 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %45, i64 %41
  %47 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %46, i64 0, i32 0
  %48 = load i8, i8* %47, align 8
  store i8 %48, i8* %43, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 16
  %50 = getelementptr inbounds i8, i8* %43, i64 8
  %51 = getelementptr inbounds i8, i8* %43, i64 24
  %52 = bitcast i8* %51 to i64*
  %53 = bitcast i8* %49 to i8**
  store i8* %50, i8** %53, align 8
  store i64 34359738368, i64* %52, align 8
  %54 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %45, i64 %41, i32 1, i32 0, i32 0, i64 8
  %55 = icmp eq %struct.ReorderedArgument* %46, %44
  br i1 %55, label %89, label %56

56:                                               ; preds = %40
  %57 = bitcast i8* %49 to %class.SkTArray*
  store i64 34359738368, i64* %52, align 8
  %58 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %45, i64 %41, i32 1, i32 0, i32 0, i64 16
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = lshr i64 %60, 1
  %62 = trunc i64 %61 to i32
  %63 = and i32 %62, 2147483647
  tail call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %57, i32 %63, i32 0) #5
  %64 = load i64, i64* %59, align 8
  %65 = and i64 %64, 4294967294
  %66 = load i64, i64* %52, align 8
  %67 = and i64 %66, -4294967295
  %68 = or i64 %67, %65
  store i64 %68, i64* %52, align 8
  %69 = load i8*, i8** %53, align 8
  %70 = load i64, i64* %59, align 8
  %71 = and i64 %70, 4294967294
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %86, label %73

73:                                               ; preds = %56
  %74 = bitcast i8* %54 to i8**
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %81, %75 ]
  %77 = getelementptr inbounds i8, i8* %69, i64 %76
  %78 = load i8*, i8** %74, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 %76
  %80 = load i8, i8* %79, align 1
  store i8 %80, i8* %77, align 1
  %81 = add nuw nsw i64 %76, 1
  %82 = load i64, i64* %59, align 8
  %83 = lshr i64 %82, 1
  %84 = and i64 %83, 2147483647
  %85 = icmp ult i64 %81, %84
  br i1 %85, label %75, label %86

86:                                               ; preds = %75, %56
  %87 = phi i64 [ %70, %56 ], [ %82, %75 ]
  %88 = and i64 %87, -4294967295
  store i64 %88, i64* %59, align 8
  br label %89

89:                                               ; preds = %86, %40
  %90 = load %struct.ReorderedArgument*, %struct.ReorderedArgument** %39, align 8
  %91 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %90, i64 %41, i32 1, i32 0, i32 0, i64 16
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = and i64 %93, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %90, i64 %41, i32 1, i32 0, i32 0, i64 8
  %98 = bitcast i8* %97 to i8**
  %99 = load i8*, i8** %98, align 8
  tail call void @_Z7sk_freePv(i8* %99) #5
  br label %100

100:                                              ; preds = %96, %89
  %101 = add nuw nsw i64 %41, 1
  %102 = load i64, i64* %3, align 8
  %103 = lshr i64 %102, 1
  %104 = and i64 %103, 2147483647
  %105 = icmp ult i64 %101, %104
  br i1 %105, label %40, label %106

106:                                              ; preds = %100, %28
  %107 = phi i64 [ %35, %28 ], [ %102, %100 ]
  %108 = and i64 %107, 1
  %109 = icmp eq i64 %108, 0
  %110 = bitcast %class.SkTArray.54* %0 to i8**
  br i1 %109, label %114, label %111

111:                                              ; preds = %106
  %112 = load i8*, i8** %110, align 8
  tail call void @_Z7sk_freePv(i8* %112) #5
  %113 = load i64, i64* %3, align 8
  br label %114

114:                                              ; preds = %111, %106
  %115 = phi i64 [ %113, %111 ], [ %107, %106 ]
  store i8* %34, i8** %110, align 8
  %116 = and i64 %115, -4294967298
  %117 = or i64 %116, 1
  store i64 %117, i64* %3, align 8
  %118 = lshr exact i64 %116, 1
  %119 = and i64 %118, 2147483647
  br label %120

120:                                              ; preds = %18, %21, %114
  %121 = phi i64 [ %6, %18 ], [ %6, %21 ], [ %119, %114 ]
  %122 = phi i64 [ %4, %18 ], [ %4, %21 ], [ %117, %114 ]
  %123 = getelementptr inbounds %class.SkTArray.54, %class.SkTArray.54* %0, i64 0, i32 0
  %124 = load %struct.ReorderedArgument*, %struct.ReorderedArgument** %123, align 8
  %125 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %124, i64 %121, i32 0
  %126 = add i64 %122, 2
  %127 = and i64 %126, 4294967294
  %128 = and i64 %122, -4294967295
  %129 = or i64 %127, %128
  store i64 %129, i64* %3, align 8
  %130 = bitcast i8* %125 to %struct.ReorderedArgument*
  %131 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %1, i64 0, i32 0
  %132 = load i8, i8* %131, align 8
  store i8 %132, i8* %125, align 8
  %133 = getelementptr inbounds i8, i8* %125, i64 16
  %134 = getelementptr inbounds i8, i8* %125, i64 8
  %135 = getelementptr inbounds i8, i8* %125, i64 24
  %136 = bitcast i8* %135 to i64*
  %137 = bitcast i8* %133 to i8**
  store i8* %134, i8** %137, align 8
  store i64 34359738368, i64* %136, align 8
  %138 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %1, i64 0, i32 1, i32 0, i32 0, i64 8
  %139 = icmp eq %struct.ReorderedArgument* %130, %1
  br i1 %139, label %173, label %140

140:                                              ; preds = %120
  %141 = bitcast i8* %133 to %class.SkTArray*
  store i64 34359738368, i64* %136, align 8
  %142 = getelementptr inbounds %struct.ReorderedArgument, %struct.ReorderedArgument* %1, i64 0, i32 1, i32 0, i32 0, i64 16
  %143 = bitcast i8* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = lshr i64 %144, 1
  %146 = trunc i64 %145 to i32
  %147 = and i32 %146, 2147483647
  tail call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %141, i32 %147, i32 0) #5
  %148 = load i64, i64* %143, align 8
  %149 = and i64 %148, 4294967294
  %150 = load i64, i64* %136, align 8
  %151 = and i64 %150, -4294967295
  %152 = or i64 %151, %149
  store i64 %152, i64* %136, align 8
  %153 = load i8*, i8** %137, align 8
  %154 = load i64, i64* %143, align 8
  %155 = and i64 %154, 4294967294
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %170, label %157

157:                                              ; preds = %140
  %158 = bitcast i8* %138 to i8**
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi i64 [ 0, %157 ], [ %165, %159 ]
  %161 = getelementptr inbounds i8, i8* %153, i64 %160
  %162 = load i8*, i8** %158, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 %160
  %164 = load i8, i8* %163, align 1
  store i8 %164, i8* %161, align 1
  %165 = add nuw nsw i64 %160, 1
  %166 = load i64, i64* %143, align 8
  %167 = lshr i64 %166, 1
  %168 = and i64 %167, 2147483647
  %169 = icmp ult i64 %165, %168
  br i1 %169, label %159, label %170

170:                                              ; preds = %159, %140
  %171 = phi i64 [ %154, %140 ], [ %166, %159 ]
  %172 = and i64 %171, -4294967295
  store i64 %172, i64* %143, align 8
  br label %173

173:                                              ; preds = %120, %170
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIlED0Ev(%"class.SkSL::Literal"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIlE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  tail call void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret %0, i64 %4) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE21isCompileTimeConstantEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIlE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 43
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %10 = bitcast %"class.SkSL::Expression"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %8, %11
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %2, %6
  %15 = phi i32 [ %13, %6 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression19isConstantOrUniformEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to i1 (%"class.SkSL::Expression"*)***
  %3 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %3, i64 4
  %5 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.SkSL::Expression"* %0) #5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIlE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL7LiteralIlE12coercionCostERKNS_4TypeE(%"class.SkSL::Literal"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Literal"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %13 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %13, i64 3
  %15 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %14, align 8
  %16 = tail call dereferenceable(184) %"class.SkSL::Type"* %15(%"class.SkSL::Expression"* %11) #5
  %17 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %16, %"class.SkSL::Type"* dereferenceable(184) %1) #5
  %18 = extractvalue { i64, i8 } %17, 0
  %19 = extractvalue { i64, i8 } %17, 1
  br label %20

20:                                               ; preds = %2, %6, %10
  %21 = phi i64 [ %18, %10 ], [ 0, %6 ], [ 0, %2 ]
  %22 = phi i8 [ %19, %10 ], [ 0, %6 ], [ 0, %2 ]
  %23 = insertvalue { i64, i8 } undef, i64 %21, 0
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1
  ret { i64, i8 } %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE24getConstantSubexpressionEi(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIlE5cloneEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #5
  %7 = load i32, i32* %2, align 4
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %7, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 43, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIlEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %14, align 8
  %15 = bitcast i8* %6 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression21isCompileTimeConstantEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL10Expression15compareConstantERKS0_(%"class.SkSL::Expression"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #5
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #5
  ret { i64, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL10Expression24getConstantSubexpressionEi(%"class.SkSL::Expression"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.SkSL::Expression"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

declare void @_ZN4SkSL9to_stringEl(%"class.SkSL::String"* sret, i64) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.45* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.45*, %class.SkTArray.45* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray.45* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.45, %class.SkTArray.45* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.45, %class.SkTArray.45* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.45, %class.SkTArray.45* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.45* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.45* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.45, %class.SkTArray.45* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #5
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #5
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.45* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.45*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.45, %class.SkTArray.45* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #5
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.45, %class.SkTArray.45* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #5
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.45* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #5
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 1) #5
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %56, %50 ]
  %52 = getelementptr inbounds i8, i8* %44, i64 %51
  %53 = load i8*, i8** %49, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 %51
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %52, align 1
  %56 = add nuw nsw i64 %51, 1
  %57 = load i64, i64* %4, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = icmp ult i64 %56, %59
  br i1 %60, label %50, label %61

61:                                               ; preds = %50, %35
  %62 = phi i64 [ %45, %35 ], [ %57, %50 ]
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %67) #5
  %68 = load i64, i64* %4, align 8
  br label %69

69:                                               ; preds = %61, %65
  %70 = phi i64 [ %62, %61 ], [ %68, %65 ]
  %71 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  store i8* %44, i8** %71, align 8
  %72 = and i64 %70, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %69, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7SwizzleC2ERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEERK9SkSTArrayILi4EaLb0EE(%"struct.SkSL::Swizzle"*, %"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %class.SkSTArray* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.SkSL::Expression"* %2 to i64
  %6 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %2, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = bitcast %"class.SkSL::Expression"* %2 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %9, i64 3
  %11 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.SkSL::Type"* %11(%"class.SkSL::Expression"* %2) #5
  %13 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %12, i64 0, i32 6
  %14 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %13, align 8
  %15 = icmp eq %"class.SkSL::Type"* %14, null
  %16 = select i1 %15, %"class.SkSL::Type"* %12, %"class.SkSL::Type"* %14
  %17 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 16
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, 1
  %21 = trunc i64 %20 to i32
  %22 = and i32 %21, 2147483647
  %23 = tail call dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL4Type10toCompoundERKNS_7ContextEii(%"class.SkSL::Type"* %16, %"class.SkSL::Context"* dereferenceable(744) %1, i32 %22, i32 1) #5
  %24 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %7, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 52, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 0, i32 1
  store %"class.SkSL::Type"* %23, %"class.SkSL::Type"** %27, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7SwizzleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %28 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  store i64 %5, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 2
  %31 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 2, i32 0, i32 0, i64 8
  %32 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %30, i64 0, i32 0, i32 0, i64 0
  %33 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %34 = bitcast i8* %33 to i64*
  %35 = bitcast i8* %31 to i8**
  store i8* %32, i8** %35, align 8
  store i64 34359738368, i64* %34, align 8
  %36 = icmp eq %class.SkSTArray* %30, %3
  br i1 %36, label %63, label %37

37:                                               ; preds = %4
  %38 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %3, i64 0, i32 0, i32 0, i64 8
  %39 = bitcast i8* %31 to %class.SkTArray*
  store i64 34359738368, i64* %34, align 8
  %40 = load i64, i64* %18, align 8
  %41 = lshr i64 %40, 1
  %42 = trunc i64 %41 to i32
  %43 = and i32 %42, 2147483647
  tail call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %39, i32 %43, i32 0) #5
  %44 = load i64, i64* %18, align 8
  %45 = and i64 %44, 4294967294
  %46 = load i64, i64* %34, align 8
  %47 = and i64 %46, -4294967295
  %48 = or i64 %47, %45
  store i64 %48, i64* %34, align 8
  %49 = bitcast i8* %38 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i64 %45, 0
  br i1 %51, label %63, label %52

52:                                               ; preds = %37, %52
  %53 = phi i64 [ %58, %52 ], [ 0, %37 ]
  %54 = load i8*, i8** %35, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  %56 = getelementptr inbounds i8, i8* %50, i64 %53
  %57 = load i8, i8* %56, align 1
  store i8 %57, i8* %55, align 1
  %58 = add nuw nsw i64 %53, 1
  %59 = load i64, i64* %34, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %52, label %63

63:                                               ; preds = %52, %37, %4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7SwizzleD2Ev(%"struct.SkSL::Swizzle"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7SwizzleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 2, i32 0, i32 0, i64 8
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #5
  br label %12

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %13, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %13, align 8
  %15 = icmp eq %"class.SkSL::Expression"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.SkSL::Expression"* %14 to void (%"class.SkSL::Expression"*)***
  %18 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %18, i64 1
  %20 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %19, align 8
  tail call void %20(%"class.SkSL::Expression"* nonnull %14) #5
  br label %21

21:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7SwizzleD0Ev(%"struct.SkSL::Swizzle"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7SwizzleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 2, i32 0, i32 0, i64 8
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #5
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %13, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %13, align 8
  %15 = icmp eq %"class.SkSL::Expression"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.SkSL::Expression"* %14 to void (%"class.SkSL::Expression"*)***
  %18 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %18, i64 1
  %20 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %19, align 8
  tail call void %20(%"class.SkSL::Expression"* nonnull %14) #5
  br label %21

21:                                               ; preds = %12, %16
  %22 = bitcast %"struct.SkSL::Swizzle"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %22) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7Swizzle11descriptionEv(%"class.SkSL::String"* noalias sret, %"struct.SkSL::Swizzle"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = bitcast %"class.SkSL::String"* %3 to i8*
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #5
  %6 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %7, i64 0, i32 0
  %9 = bitcast %"class.SkSL::Expression"* %7 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %10 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %10, i64 2
  %12 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %11, align 8
  call void %12(%"class.SkSL::String"* nonnull sret %3, %"class.SkSL::IRNode"* %8) #5
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #5
  %13 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #6
  br label %20

20:                                               ; preds = %2, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #5
  %21 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 2, i32 0, i32 0, i64 8
  %22 = bitcast i8* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %1, i64 0, i32 2, i32 0, i32 0, i64 16
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = getelementptr inbounds i8, i8* %23, i64 %30
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %25, %33
  %34 = phi i8* [ %40, %33 ], [ %23, %25 ]
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i64
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.1, i64 0, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEc(%"class.SkSL::String"* %0, i8 signext %38) #5
  %40 = getelementptr inbounds i8, i8* %34, i64 1
  %41 = icmp eq i8* %40, %31
  br i1 %41, label %42, label %33

42:                                               ; preds = %33, %20, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7Swizzle11hasPropertyENS_10Expression8PropertyE(%"struct.SkSL::Swizzle"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = bitcast %"class.SkSL::Expression"* %4 to i1 (%"class.SkSL::Expression"*, i32)***
  %6 = load i1 (%"class.SkSL::Expression"*, i32)**, i1 (%"class.SkSL::Expression"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %6, i64 7
  %8 = load i1 (%"class.SkSL::Expression"*, i32)*, i1 (%"class.SkSL::Expression"*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.SkSL::Expression"* %4, i32 %1) #5
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7Swizzle5cloneEv(%"struct.SkSL::Swizzle"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 56) #5
  %3 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.SkSL::Type"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %6, align 8
  %8 = bitcast %"class.SkSL::Expression"* %7 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %9 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %9, i64 10
  %11 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %10, align 8
  %12 = tail call %"class.SkSL::Expression"* %11(%"class.SkSL::Expression"* %7) #5
  %13 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 2
  %14 = ptrtoint %"class.SkSL::Expression"* %12 to i64
  %15 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %12, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = bitcast i8* %2 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %2, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %16, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 52, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %2, i64 16
  %23 = bitcast i8* %22 to i64*
  store i64 %5, i64* %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7SwizzleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %24 = getelementptr inbounds i8, i8* %2, i64 24
  %25 = bitcast i8* %24 to i64*
  store i64 %14, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %2, i64 32
  %27 = bitcast i8* %26 to %class.SkSTArray*
  %28 = getelementptr inbounds i8, i8* %2, i64 40
  %29 = getelementptr inbounds i8, i8* %2, i64 48
  %30 = bitcast i8* %29 to i64*
  %31 = bitcast i8* %28 to i8**
  store i8* %26, i8** %31, align 8
  store i64 34359738368, i64* %30, align 8
  %32 = icmp eq %class.SkSTArray* %13, %27
  br i1 %32, label %61, label %33

33:                                               ; preds = %1
  %34 = bitcast i8* %28 to %class.SkTArray*
  %35 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 2, i32 0, i32 0, i64 8
  store i64 34359738368, i64* %30, align 8
  %36 = getelementptr inbounds %"struct.SkSL::Swizzle", %"struct.SkSL::Swizzle"* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = lshr i64 %38, 1
  %40 = trunc i64 %39 to i32
  %41 = and i32 %40, 2147483647
  tail call void @_ZN8SkTArrayIaLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %34, i32 %41, i32 0) #5
  %42 = load i64, i64* %37, align 8
  %43 = and i64 %42, 4294967294
  %44 = load i64, i64* %30, align 8
  %45 = and i64 %44, -4294967295
  %46 = or i64 %45, %43
  store i64 %46, i64* %30, align 8
  %47 = bitcast i8* %35 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i64 %43, 0
  br i1 %49, label %61, label %50

50:                                               ; preds = %33, %50
  %51 = phi i64 [ %56, %50 ], [ 0, %33 ]
  %52 = load i8*, i8** %31, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  %54 = getelementptr inbounds i8, i8* %48, i64 %51
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %53, align 1
  %56 = add nuw nsw i64 %51, 1
  %57 = load i64, i64* %30, align 8
  %58 = lshr i64 %57, 1
  %59 = and i64 %58, 2147483647
  %60 = icmp ult i64 %56, %59
  br i1 %60, label %50, label %61

61:                                               ; preds = %50, %1, %33
  %62 = bitcast i8* %2 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %62
}

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLEc(%"class.SkSL::String"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !9, !6}
!9 = !{!"llvm.loop.unroll.runtime.disable"}
