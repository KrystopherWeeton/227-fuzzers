; ModuleID = '../../components/services/font/ppapi_fontconfig_matching.cc'
source_filename = "../../components/services/font/ppapi_fontconfig_matching.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%struct._FcValue = type { i32, %union.anon.12 }
%union.anon.12 = type { i8* }
%struct._FcLangSet = type opaque
%struct._FcPattern = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct._FcConfig = type opaque
%struct._FcFontSet = type { i32, i32, %struct._FcPattern** }
%struct._FcCharSet = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [7 x i8] c"family\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"Times New Roman\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"Arial\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"Courier New\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"weight\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"slant\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"lang\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"scalable\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@_ZZN12font_service25MatchFontFaceWithFallbackERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbbjjE15kSFNTExtensions = internal constant [4 x [5 x i8]] [[5 x i8] c".ttf\00", [5 x i8] c".otc\00", [5 x i8] c".TTF\00", [5 x i8] c".ttc\00"], align 16
@.str.10 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"embolden\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"en\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"et\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"lv\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"zh-tw\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"zh-cn\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"pl\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"cs\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"sk\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"hu\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"hr\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"el\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"ko\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"ru\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"ja\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"tr\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"vi\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"ar\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"he\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"th\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12font_service25MatchFontFaceWithFallbackERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbbjj(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %struct._FcValue, align 8
  %14 = alloca %struct._FcValue, align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = tail call %struct._FcLangSet* @FcLangSetCreate() #10
  switch i32 %3, label %40 [
    i32 0, label %36
    i32 1, label %36
    i32 77, label %36
    i32 255, label %36
    i32 2, label %36
    i32 186, label %17
    i32 136, label %20
    i32 134, label %21
    i32 238, label %22
    i32 161, label %27
    i32 129, label %28
    i32 130, label %28
    i32 204, label %29
    i32 128, label %30
    i32 162, label %31
    i32 163, label %32
    i32 178, label %33
    i32 177, label %34
    i32 222, label %35
  ]

17:                                               ; preds = %5
  %18 = tail call i32 @FcLangSetAdd(%struct._FcLangSet* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #10
  %19 = tail call i32 @FcLangSetAdd(%struct._FcLangSet* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0)) #10
  br label %36

20:                                               ; preds = %5
  br label %36

21:                                               ; preds = %5
  br label %36

22:                                               ; preds = %5
  %23 = tail call i32 @FcLangSetAdd(%struct._FcLangSet* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0)) #10
  %24 = tail call i32 @FcLangSetAdd(%struct._FcLangSet* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)) #10
  %25 = tail call i32 @FcLangSetAdd(%struct._FcLangSet* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #10
  %26 = tail call i32 @FcLangSetAdd(%struct._FcLangSet* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #10
  br label %36

27:                                               ; preds = %5
  br label %36

28:                                               ; preds = %5, %5
  br label %36

29:                                               ; preds = %5
  br label %36

30:                                               ; preds = %5
  br label %36

31:                                               ; preds = %5
  br label %36

32:                                               ; preds = %5
  br label %36

33:                                               ; preds = %5
  br label %36

34:                                               ; preds = %5
  br label %36

35:                                               ; preds = %5
  br label %36

36:                                               ; preds = %5, %5, %5, %5, %5, %35, %34, %33, %32, %31, %30, %29, %28, %27, %22, %21, %20, %17
  %37 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), %17 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), %20 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), %21 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), %22 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), %27 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), %28 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), %29 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), %30 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), %31 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), %32 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), %33 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), %34 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), %35 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), %5 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), %5 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), %5 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), %5 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), %5 ]
  %38 = phi i1 [ true, %17 ], [ false, %20 ], [ false, %21 ], [ true, %22 ], [ true, %27 ], [ false, %28 ], [ true, %29 ], [ false, %30 ], [ true, %31 ], [ true, %32 ], [ false, %33 ], [ false, %34 ], [ false, %35 ], [ true, %5 ], [ true, %5 ], [ true, %5 ], [ true, %5 ], [ true, %5 ]
  %39 = tail call i32 @FcLangSetAdd(%struct._FcLangSet* %16, i8* %37) #10
  br label %40

40:                                               ; preds = %36, %5
  %41 = phi i1 [ false, %5 ], [ %38, %36 ]
  %42 = tail call %struct._FcPattern* @FcPatternCreate() #10
  %43 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %50 = select i1 %46, i8* %48, i8* %49
  %51 = tail call i32 @FcPatternAddString(%struct._FcPattern* %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* %50) #10
  %52 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #10
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #10
  br i1 %41, label %54, label %68

54:                                               ; preds = %40
  switch i32 %4, label %68 [
    i32 1, label %55
    i32 2, label %58
    i32 3, label %61
  ]

55:                                               ; preds = %54
  %56 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 15, i8* %57, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 15, i1 false) #10
  br label %64

58:                                               ; preds = %54
  %59 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 5, i8* %60, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5, i1 false) #10
  br label %64

61:                                               ; preds = %54
  %62 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  store i8 11, i8* %63, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i64 11, i1 false) #10
  br label %64

64:                                               ; preds = %61, %58, %55
  %65 = phi i64 [ 11, %61 ], [ 5, %58 ], [ 15, %55 ]
  %66 = getelementptr inbounds i8, i8* %52, i64 %65
  store i8 0, i8* %66, align 1
  %67 = call i32 @FcPatternAddString(%struct._FcPattern* %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* nonnull %52) #10
  br label %68

68:                                               ; preds = %40, %54, %64
  %69 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  br i1 %1, label %71, label %73

71:                                               ; preds = %68
  %72 = call i32 @FcPatternAddInteger(%struct._FcPattern* %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i32 200) #10
  br label %73

73:                                               ; preds = %71, %68
  br i1 %2, label %74, label %76

74:                                               ; preds = %73
  %75 = call i32 @FcPatternAddInteger(%struct._FcPattern* %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32 100) #10
  br label %76

76:                                               ; preds = %74, %73
  %77 = call i32 @FcPatternAddLangSet(%struct._FcPattern* %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), %struct._FcLangSet* %16) #10
  %78 = call i32 @FcPatternAddBool(%struct._FcPattern* %42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 1) #10
  %79 = call i32 @FcConfigSubstitute(%struct._FcConfig* null, %struct._FcPattern* %42, i32 0) #10
  call void @FcDefaultSubstitute(%struct._FcPattern* %42) #10
  %80 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #10
  store i32 -1431655766, i32* %8, align 4
  %81 = call %struct._FcFontSet* @FcFontSort(%struct._FcConfig* null, %struct._FcPattern* %42, i32 0, %struct._FcCharSet** null, i32* nonnull %8) #10
  %82 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %83 = call i8* @FcConfigGetSysRoot(%struct._FcConfig* null) #10
  %84 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #10
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %88 = icmp eq i8* %83, null
  %89 = select i1 %88, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* %83
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 24, i1 false)
  %90 = call i64 @strlen(i8* %89) #10
  %91 = icmp ugt i64 %90, -17
  br i1 %91, label %92, label %94

92:                                               ; preds = %76
  %93 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %93) #11
  unreachable

94:                                               ; preds = %76
  %95 = icmp ult i64 %90, 23
  br i1 %95, label %101, label %96

96:                                               ; preds = %94
  %97 = add nuw i64 %90, 16
  %98 = and i64 %97, -16
  %99 = call i8* @_Znwm(i64 %98) #12
  store i8* %99, i8** %85, align 8
  %100 = or i64 %98, -9223372036854775808
  store i64 %100, i64* %87, align 8
  store i64 %90, i64* %86, align 8
  br label %106

101:                                              ; preds = %94
  %102 = trunc i64 %90 to i8
  %103 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  store i8 %102, i8* %104, align 1
  %105 = icmp eq i64 %90, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %101, %96
  %107 = phi i8* [ %99, %96 ], [ %84, %101 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %107, i8* align 1 %89, i64 %90, i1 false) #10
  br label %108

108:                                              ; preds = %101, %106
  %109 = phi i8* [ %84, %101 ], [ %107, %106 ]
  %110 = getelementptr inbounds i8, i8* %109, i64 %90
  store i8 0, i8* %110, align 1
  %111 = icmp eq %struct._FcFontSet* %81, null
  br i1 %111, label %334, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %81, i64 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %334

116:                                              ; preds = %112
  %117 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %81, i64 0, i32 2
  %118 = bitcast i32* %11 to i8*
  %119 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %123 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  %127 = bitcast %"class.logging::CheckError"* %6 to i8*
  %128 = bitcast %struct._FcValue* %13 to i8*
  %129 = bitcast %struct._FcValue* %14 to i8*
  br label %130

130:                                              ; preds = %116, %251
  %131 = phi i64 [ 0, %116 ], [ %255, %251 ]
  %132 = phi i32 [ -1, %116 ], [ %252, %251 ]
  %133 = phi i32 [ -1, %116 ], [ %253, %251 ]
  %134 = phi i8 [ 0, %116 ], [ %254, %251 ]
  %135 = load %struct._FcPattern**, %struct._FcPattern*** %117, align 8
  %136 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %135, i64 %131
  %137 = load %struct._FcPattern*, %struct._FcPattern** %136, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #10
  store i32 -1431655766, i32* %11, align 4
  %138 = call i32 @FcPatternGetBool(%struct._FcPattern* %137, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 0, i32* nonnull %11) #10
  %139 = icmp eq i32 %138, 0
  %140 = load i32, i32* %11, align 4
  %141 = icmp ne i32 %140, 0
  %142 = and i1 %139, %141
  br i1 %142, label %143, label %249

143:                                              ; preds = %130
  %144 = call i32 @FcPatternGetString(%struct._FcPattern* %137, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i32 0, i8** nonnull %9) #10
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %249

146:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #10
  %147 = load i8*, i8** %9, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 0, i64 24, i1 false) #10, !alias.scope !2
  %148 = load i8, i8* %124, align 1, !noalias !2
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %146
  %151 = load i64, i64* %86, align 8, !noalias !2
  %152 = call i64 @strlen(i8* %147) #10, !noalias !2
  %153 = load i8*, i8** %85, align 8, !noalias !2
  br label %157

154:                                              ; preds = %146
  %155 = zext i8 %148 to i64
  %156 = call i64 @strlen(i8* %147) #10, !noalias !2
  br label %157

157:                                              ; preds = %154, %150
  %158 = phi i64 [ %152, %150 ], [ %156, %154 ]
  %159 = phi i64 [ %151, %150 ], [ %155, %154 ]
  %160 = phi i8* [ %153, %150 ], [ %84, %154 ]
  %161 = add i64 %159, %158
  %162 = icmp ugt i64 %161, -17
  br i1 %162, label %163, label %165

163:                                              ; preds = %157
  %164 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %164) #11
  unreachable

165:                                              ; preds = %157
  %166 = icmp ult i64 %161, 23
  br i1 %166, label %167, label %169

167:                                              ; preds = %165
  %168 = trunc i64 %159 to i8
  store i8 %168, i8* %126, align 1, !alias.scope !2
  br label %174

169:                                              ; preds = %165
  %170 = add nuw i64 %161, 16
  %171 = and i64 %170, -16
  %172 = call i8* @_Znwm(i64 %171) #12
  store i8* %172, i8** %120, align 8, !alias.scope !2
  %173 = or i64 %171, -9223372036854775808
  store i64 %173, i64* %122, align 8, !alias.scope !2
  store i64 %159, i64* %121, align 8, !alias.scope !2
  br label %174

174:                                              ; preds = %169, %167
  %175 = phi i8* [ %119, %167 ], [ %172, %169 ]
  %176 = icmp eq i64 %159, 0
  br i1 %176, label %178, label %177

177:                                              ; preds = %174
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %175, i8* align 1 %160, i64 %159, i1 false) #10
  br label %178

178:                                              ; preds = %174, %177
  %179 = getelementptr inbounds i8, i8* %175, i64 %159
  store i8 0, i8* %179, align 1
  %180 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %147, i64 %158) #10
  br label %181

181:                                              ; preds = %197, %178
  %182 = phi [5 x i8]* [ getelementptr inbounds ([4 x [5 x i8]], [4 x [5 x i8]]* @_ZZN12font_service25MatchFontFaceWithFallbackERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbbjjE15kSFNTExtensions, i64 0, i64 0), %178 ], [ %201, %197 ]
  %183 = phi i8 [ 0, %178 ], [ %200, %197 ]
  %184 = getelementptr inbounds [5 x i8], [5 x i8]* %182, i64 0, i64 0
  %185 = load i8, i8* %126, align 1
  %186 = icmp slt i8 %185, 0
  %187 = load i8*, i8** %120, align 8
  %188 = select i1 %186, i8* %187, i8* %119
  %189 = load i64, i64* %121, align 8
  %190 = zext i8 %185 to i64
  %191 = select i1 %186, i64 %189, i64 %190
  %192 = icmp eq [5 x i8]* %182, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %181
  %194 = call i64 @strlen(i8* nonnull %184) #10
  br label %197

195:                                              ; preds = %181
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #10
  %196 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #10
  br label %197

197:                                              ; preds = %193, %195
  %198 = phi i64 [ 0, %195 ], [ %194, %193 ]
  %199 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %188, i64 %191, i8* %184, i64 %198, i32 0) #10
  %200 = select i1 %199, i8 1, i8 %183
  %201 = getelementptr inbounds [5 x i8], [5 x i8]* %182, i64 1
  %202 = icmp eq [5 x i8]* %201, getelementptr inbounds ([4 x [5 x i8]], [4 x [5 x i8]]* @_ZZN12font_service25MatchFontFaceWithFallbackERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbbjjE15kSFNTExtensions, i64 1, i64 0)
  %203 = or i1 %202, %199
  br i1 %203, label %204, label %181

204:                                              ; preds = %197
  %205 = and i8 %200, 1
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %240, label %207

207:                                              ; preds = %204
  %208 = and i8 %134, 1
  %209 = icmp eq i8 %208, 0
  %210 = select i1 %209, i8 1, i8 %134
  %211 = trunc i64 %131 to i32
  %212 = select i1 %209, i32 %211, i32 %133
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 -86, i64 16, i1 false)
  %213 = call i32 @FcPatternGet(%struct._FcPattern* %137, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i32 0, %struct._FcValue* nonnull %13) #10
  %214 = icmp eq i32 %213, 0
  %215 = and i1 %214, %2
  br i1 %215, label %237, label %216

216:                                              ; preds = %207
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %129) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 16, i1 false)
  %217 = call i32 @FcPatternGet(%struct._FcPattern* %137, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i32 0, %struct._FcValue* nonnull %14) #10
  %218 = icmp eq i32 %217, 0
  %219 = and i1 %218, %1
  br i1 %219, label %234, label %220

220:                                              ; preds = %216, %227
  %221 = load i8, i8* %126, align 1
  %222 = icmp slt i8 %221, 0
  %223 = load i8*, i8** %120, align 8
  %224 = select i1 %222, i8* %223, i8* %119
  %225 = call i32 (i8*, i32, ...) @open64(i8* %224, i32 0) #10
  %226 = icmp eq i32 %225, -1
  br i1 %226, label %227, label %231

227:                                              ; preds = %220
  %228 = tail call i32* @__errno_location() #13
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, 4
  br i1 %230, label %220, label %234

231:                                              ; preds = %220
  %232 = icmp sgt i32 %225, -1
  %233 = select i1 %232, i32 3, i32 0
  br label %234

234:                                              ; preds = %227, %231, %216
  %235 = phi i32 [ 5, %216 ], [ %233, %231 ], [ 0, %227 ]
  %236 = phi i32 [ %132, %216 ], [ %225, %231 ], [ -1, %227 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %129) #10
  br label %237

237:                                              ; preds = %207, %234
  %238 = phi i32 [ %235, %234 ], [ 5, %207 ]
  %239 = phi i32 [ %236, %234 ], [ %132, %207 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #10
  br label %240

240:                                              ; preds = %204, %237
  %241 = phi i32 [ %238, %237 ], [ 5, %204 ]
  %242 = phi i8 [ %210, %237 ], [ %134, %204 ]
  %243 = phi i32 [ %212, %237 ], [ %133, %204 ]
  %244 = phi i32 [ %239, %237 ], [ %132, %204 ]
  %245 = load i8, i8* %126, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %250

247:                                              ; preds = %240
  %248 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %248) #12
  br label %250

249:                                              ; preds = %130, %143
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #10
  br label %251

250:                                              ; preds = %247, %240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #10
  switch i32 %241, label %259 [
    i32 0, label %251
    i32 5, label %251
  ]

251:                                              ; preds = %249, %250, %250
  %252 = phi i32 [ %132, %249 ], [ %244, %250 ], [ %244, %250 ]
  %253 = phi i32 [ %133, %249 ], [ %243, %250 ], [ %243, %250 ]
  %254 = phi i8 [ %134, %249 ], [ %242, %250 ], [ %242, %250 ]
  %255 = add nuw nsw i64 %131, 1
  %256 = load i32, i32* %113, align 8
  %257 = sext i32 %256 to i64
  %258 = icmp slt i64 %255, %257
  br i1 %258, label %130, label %259

259:                                              ; preds = %251, %250
  %260 = phi i8 [ %254, %251 ], [ %242, %250 ]
  %261 = phi i32 [ %253, %251 ], [ %243, %250 ]
  %262 = phi i32 [ %252, %251 ], [ %244, %250 ]
  %263 = icmp eq i32 %262, -1
  br i1 %263, label %264, label %334

264:                                              ; preds = %259
  %265 = and i8 %260, 1
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %334, label %267

267:                                              ; preds = %264
  %268 = load %struct._FcPattern**, %struct._FcPattern*** %117, align 8
  %269 = sext i32 %261 to i64
  %270 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %268, i64 %269
  %271 = load %struct._FcPattern*, %struct._FcPattern** %270, align 8
  %272 = call i32 @FcPatternGetString(%struct._FcPattern* %271, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i32 0, i8** nonnull %9) #10
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %334

274:                                              ; preds = %267
  %275 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %275) #10
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %279 = load i8*, i8** %9, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %275, i8 0, i64 24, i1 false) #10, !alias.scope !5
  %280 = load i8, i8* %124, align 1, !noalias !5
  %281 = icmp slt i8 %280, 0
  br i1 %281, label %282, label %286

282:                                              ; preds = %274
  %283 = load i64, i64* %86, align 8, !noalias !5
  %284 = call i64 @strlen(i8* %279) #10, !noalias !5
  %285 = load i8*, i8** %85, align 8, !noalias !5
  br label %289

286:                                              ; preds = %274
  %287 = zext i8 %280 to i64
  %288 = call i64 @strlen(i8* %279) #10, !noalias !5
  br label %289

289:                                              ; preds = %286, %282
  %290 = phi i64 [ %284, %282 ], [ %288, %286 ]
  %291 = phi i64 [ %283, %282 ], [ %287, %286 ]
  %292 = phi i8* [ %285, %282 ], [ %84, %286 ]
  %293 = add i64 %291, %290
  %294 = icmp ugt i64 %293, -17
  br i1 %294, label %295, label %297

295:                                              ; preds = %289
  %296 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %296) #11
  unreachable

297:                                              ; preds = %289
  %298 = icmp ult i64 %293, 23
  br i1 %298, label %299, label %303

299:                                              ; preds = %297
  %300 = trunc i64 %291 to i8
  %301 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %302 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %301, i64 0, i32 1, i32 0
  store i8 %300, i8* %302, align 1, !alias.scope !5
  br label %308

303:                                              ; preds = %297
  %304 = add nuw i64 %293, 16
  %305 = and i64 %304, -16
  %306 = call i8* @_Znwm(i64 %305) #12
  store i8* %306, i8** %276, align 8, !alias.scope !5
  %307 = or i64 %305, -9223372036854775808
  store i64 %307, i64* %278, align 8, !alias.scope !5
  store i64 %291, i64* %277, align 8, !alias.scope !5
  br label %308

308:                                              ; preds = %303, %299
  %309 = phi i8* [ %275, %299 ], [ %306, %303 ]
  %310 = icmp eq i64 %291, 0
  br i1 %310, label %312, label %311

311:                                              ; preds = %308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %309, i8* align 1 %292, i64 %291, i1 false) #10
  br label %312

312:                                              ; preds = %308, %311
  %313 = getelementptr inbounds i8, i8* %309, i64 %291
  store i8 0, i8* %313, align 1
  %314 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %15, i8* %279, i64 %290) #10
  %315 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %315, i64 0, i32 1, i32 0
  br label %317

317:                                              ; preds = %324, %312
  %318 = load i8, i8* %316, align 1
  %319 = icmp slt i8 %318, 0
  %320 = load i8*, i8** %276, align 8
  %321 = select i1 %319, i8* %320, i8* %275
  %322 = call i32 (i8*, i32, ...) @open64(i8* %321, i32 0) #10
  %323 = icmp eq i32 %322, -1
  br i1 %323, label %324, label %328

324:                                              ; preds = %317
  %325 = tail call i32* @__errno_location() #13
  %326 = load i32, i32* %325, align 4
  %327 = icmp eq i32 %326, 4
  br i1 %327, label %317, label %328

328:                                              ; preds = %317, %324
  %329 = load i8, i8* %316, align 1
  %330 = icmp slt i8 %329, 0
  br i1 %330, label %331, label %333

331:                                              ; preds = %328
  %332 = load i8*, i8** %276, align 8
  call void @_ZdlPv(i8* %332) #12
  br label %333

333:                                              ; preds = %328, %331
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %275) #10
  br label %334

334:                                              ; preds = %112, %108, %333, %267, %264, %259
  %335 = phi i32 [ -1, %264 ], [ %262, %259 ], [ -1, %267 ], [ %322, %333 ], [ -1, %108 ], [ -1, %112 ]
  %336 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %337 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %336, i64 0, i32 1, i32 0
  %338 = load i8, i8* %337, align 1
  %339 = icmp slt i8 %338, 0
  br i1 %339, label %340, label %342

340:                                              ; preds = %334
  %341 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %341) #12
  br label %342

342:                                              ; preds = %334, %340
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #10
  br i1 %111, label %344, label %343

343:                                              ; preds = %342
  call void @FcFontSetDestroy(%struct._FcFontSet* nonnull %81) #10
  br label %344

344:                                              ; preds = %342, %343
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #10
  %345 = load i8, i8* %70, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %349

347:                                              ; preds = %344
  %348 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %348) #12
  br label %349

349:                                              ; preds = %344, %347
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #10
  %350 = icmp eq %struct._FcPattern* %42, null
  br i1 %350, label %352, label %351

351:                                              ; preds = %349
  call void @FcPatternDestroy(%struct._FcPattern* nonnull %42) #10
  br label %352

352:                                              ; preds = %349, %351
  %353 = icmp eq %struct._FcLangSet* %16, null
  br i1 %353, label %355, label %354

354:                                              ; preds = %352
  call void @FcLangSetDestroy(%struct._FcLangSet* nonnull %16) #10
  br label %355

355:                                              ; preds = %352, %354
  ret i32 %335
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct._FcLangSet* @FcLangSetCreate() local_unnamed_addr #2

declare void @FcLangSetDestroy(%struct._FcLangSet*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct._FcPattern* @FcPatternCreate() local_unnamed_addr #2

declare void @FcPatternDestroy(%struct._FcPattern*) local_unnamed_addr #2

declare i32 @FcPatternAddString(%struct._FcPattern*, i8*, i8*) local_unnamed_addr #2

declare i32 @FcPatternAddInteger(%struct._FcPattern*, i8*, i32) local_unnamed_addr #2

declare i32 @FcPatternAddLangSet(%struct._FcPattern*, i8*, %struct._FcLangSet*) local_unnamed_addr #2

declare i32 @FcPatternAddBool(%struct._FcPattern*, i8*, i32) local_unnamed_addr #2

declare i32 @FcConfigSubstitute(%struct._FcConfig*, %struct._FcPattern*, i32) local_unnamed_addr #2

declare void @FcDefaultSubstitute(%struct._FcPattern*) local_unnamed_addr #2

declare %struct._FcFontSet* @FcFontSort(%struct._FcConfig*, %struct._FcPattern*, i32, %struct._FcCharSet**, i32*) local_unnamed_addr #2

declare void @FcFontSetDestroy(%struct._FcFontSet*) local_unnamed_addr #2

declare i8* @FcConfigGetSysRoot(%struct._FcConfig*) local_unnamed_addr #2

declare i32 @FcPatternGetBool(%struct._FcPattern*, i8*, i32, i32*) local_unnamed_addr #2

declare i32 @FcPatternGetString(%struct._FcPattern*, i8*, i32, i8**) local_unnamed_addr #2

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @FcPatternGet(%struct._FcPattern*, i8*, i32, %struct._FcValue*) local_unnamed_addr #2

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #4

declare i32 @FcLangSetAdd(%struct._FcLangSet*, i8*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
