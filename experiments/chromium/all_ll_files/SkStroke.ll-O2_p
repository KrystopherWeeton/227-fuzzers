; ModuleID = '../../third_party/skia/src/core/SkStroke.cpp'
source_filename = "../../third_party/skia/src/core/SkStroke.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkPoint = type { float, float }
%class.SkPathStroker = type <{ float, float, float, float, float, %struct.SkPoint, %struct.SkPoint, %struct.SkPoint, %struct.SkPoint, %struct.SkPoint, %struct.SkPoint, %struct.SkPoint, i32, i32, i8, i8, [2 x i8], void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)*, void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)*, %class.SkPath, %class.SkPath, %class.SkPath, i32, i32, i8, i8, [6 x i8] }>
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkStroke = type <{ float, float, float, i8, i8, i8, i8 }>
%class.SkPaint = type <{ %class.sk_sp.13, %class.sk_sp.14, %class.sk_sp.15, %class.sk_sp.16, %class.sk_sp.17, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.13 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.14 = type { %class.SkShader* }
%class.SkShader = type opaque
%class.sk_sp.15 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.16 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.17 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }
%"class.SkPath::Iter" = type <{ %struct.SkPoint*, i8*, i8*, float*, %struct.SkPoint, %struct.SkPoint, i8, i8, i8, [5 x i8] }>
%struct.SkConic = type { [3 x %struct.SkPoint], float }
%struct.SkQuadConstruct = type { [3 x %struct.SkPoint], %struct.SkPoint, %struct.SkPoint, float, float, float, i8, i8, i8 }
%class.AutoTmpPath = type <{ %class.SkPath, %class.SkPath*, i8, [7 x i8] }>

@_ZL16kRecursiveLimits = internal unnamed_addr constant [4 x i32] [i32 15, i32 24, i32 33, i32 33], align 16
@__const._ZN13SkPathStroker7cubicToERK7SkPointS2_S2_.quadPts = private unnamed_addr constant { [3 x %struct.SkPoint], %struct.SkPoint, %struct.SkPoint, float, float, float, i8, i8, i8, [1 x i8] } { [3 x %struct.SkPoint] [%struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }], %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA" }, align 4
@__const._ZNK8SkStroke10strokePathERK6SkPathPS0_.stroker = private unnamed_addr constant %class.SkPathStroker <{ float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* inttoptr (i64 -6148914691236517206 to void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)*), void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* inttoptr (i64 -6148914691236517206 to void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)*), %class.SkPath <{ %class.sk_sp { %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*) }, i32 -1431655766, %"struct.std::__1::atomic.3" { %"struct.std::__1::__atomic_base.4" { %"struct.std::__1::__atomic_base.5" { %"struct.std::__1::__cxx_atomic_impl.6" { %"struct.std::__1::__cxx_atomic_base_impl.7" { i8 -86 } } } } }, %"struct.std::__1::atomic.3" { %"struct.std::__1::__atomic_base.4" { %"struct.std::__1::__atomic_base.5" { %"struct.std::__1::__cxx_atomic_impl.6" { %"struct.std::__1::__cxx_atomic_base_impl.7" { i8 -86 } } } } }, i8 -86, i8 -86 }>, %class.SkPath <{ %class.sk_sp { %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*) }, i32 -1431655766, %"struct.std::__1::atomic.3" { %"struct.std::__1::__atomic_base.4" { %"struct.std::__1::__atomic_base.5" { %"struct.std::__1::__cxx_atomic_impl.6" { %"struct.std::__1::__cxx_atomic_base_impl.7" { i8 -86 } } } } }, %"struct.std::__1::atomic.3" { %"struct.std::__1::__atomic_base.4" { %"struct.std::__1::__atomic_base.5" { %"struct.std::__1::__cxx_atomic_impl.6" { %"struct.std::__1::__cxx_atomic_base_impl.7" { i8 -86 } } } } }, i8 -86, i8 -86 }>, %class.SkPath <{ %class.sk_sp { %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*) }, i32 -1431655766, %"struct.std::__1::atomic.3" { %"struct.std::__1::__atomic_base.4" { %"struct.std::__1::__atomic_base.5" { %"struct.std::__1::__cxx_atomic_impl.6" { %"struct.std::__1::__cxx_atomic_base_impl.7" { i8 -86 } } } } }, %"struct.std::__1::atomic.3" { %"struct.std::__1::__atomic_base.4" { %"struct.std::__1::__atomic_base.5" { %"struct.std::__1::__cxx_atomic_impl.6" { %"struct.std::__1::__cxx_atomic_base_impl.7" { i8 -86 } } } } }, i8 -86, i8 -86 }>, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZZL17reverse_direction15SkPathDirectionE9gOpposite = internal unnamed_addr constant [2 x i32] [i32 1, i32 0], align 4

@_ZN13SkPathStrokerC1ERK6SkPathffN7SkPaint3CapENS3_4JoinEfb = hidden unnamed_addr alias void (%class.SkPathStroker*, %class.SkPath*, float, float, i32, i8, float, i1), void (%class.SkPathStroker*, %class.SkPath*, float, float, i32, i8, float, i1)* @_ZN13SkPathStrokerC2ERK6SkPathffN7SkPaint3CapENS3_4JoinEfb
@_ZN8SkStrokeC1Ev = hidden unnamed_addr alias void (%class.SkStroke*), void (%class.SkStroke*)* @_ZN8SkStrokeC2Ev
@_ZN8SkStrokeC1ERK7SkPaint = hidden unnamed_addr alias void (%class.SkStroke*, %class.SkPaint*), void (%class.SkStroke*, %class.SkPaint*)* @_ZN8SkStrokeC2ERK7SkPaint
@_ZN8SkStrokeC1ERK7SkPaintf = hidden unnamed_addr alias void (%class.SkStroke*, %class.SkPaint*, float), void (%class.SkStroke*, %class.SkPaint*, float)* @_ZN8SkStrokeC2ERK7SkPaintf

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkPathStroker9preJoinToERK7SkPointPS0_S3_b(%class.SkPathStroker*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint*, %struct.SkPoint*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 2
  %13 = load float, float* %12, align 8
  %14 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %15 = load float, float* %14, align 8
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %17 = load float, float* %16, align 4
  %18 = fsub float %17, %9
  %19 = fmul float %13, %18
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fsub float %21, %11
  %23 = fmul float %13, %22
  %24 = tail call zeroext i1 @_ZN7SkPoint12setNormalizeEff(%struct.SkPoint* %3, float %19, float %23) #10
  br i1 %24, label %25, label %33

25:                                               ; preds = %5
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = bitcast %struct.SkPoint* %3 to i32*
  store i32 %30, i32* %31, align 4
  %32 = fsub float -0.000000e+00, %27
  store float %32, float* %28, align 4
  tail call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* %3, float %15, %struct.SkPoint* %2) #10
  br label %45

33:                                               ; preds = %5
  %34 = tail call void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* @_ZN13SkStrokerPriv10CapFactoryEN7SkPaint3CapE(i32 0) #10
  %35 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 17
  %36 = load void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)*, void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)** %35, align 8
  %37 = icmp eq void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* %34, %36
  br i1 %37, label %88, label %38

38:                                               ; preds = %33
  %39 = bitcast %class.SkPathStroker* %0 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = bitcast %struct.SkPoint* %2 to i32*
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  store float 0.000000e+00, float* %42, align 4
  %43 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  store float 1.000000e+00, float* %43, align 4
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  store float 0.000000e+00, float* %44, align 4
  br label %45

45:                                               ; preds = %25, %38
  %46 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 13
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %74

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 5
  %51 = bitcast %struct.SkPoint* %2 to i64*
  %52 = bitcast %struct.SkPoint* %50 to i64*
  %53 = load i64, i64* %51, align 4
  store i64 %53, i64* %52, align 4
  %54 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 7
  %55 = bitcast %struct.SkPoint* %3 to i64*
  %56 = bitcast %struct.SkPoint* %54 to i64*
  %57 = load i64, i64* %55, align 4
  store i64 %57, i64* %56, align 4
  %58 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %59 = load float, float* %58, align 4
  %60 = fadd float %9, %59
  %61 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %62 = load float, float* %61, align 4
  %63 = fadd float %11, %62
  %64 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 11, i32 0
  store float %60, float* %64, align 4
  %65 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 11, i32 1
  store float %63, float* %65, align 4
  %66 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %67 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %66, float %60, float %63) #10
  %68 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %69 = load float, float* %58, align 4
  %70 = fsub float %9, %69
  %71 = load float, float* %61, align 4
  %72 = fsub float %11, %71
  %73 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %68, float %70, float %72) #10
  br label %86

74:                                               ; preds = %45
  %75 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 18
  %76 = load void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)*, void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)** %75, align 8
  %77 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %78 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %79 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 8
  %80 = load float, float* %14, align 8
  %81 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 1
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 14
  %84 = load i8, i8* %83, align 4, !range !2
  %85 = icmp ne i8 %84, 0
  tail call void %76(%class.SkPath* %77, %class.SkPath* %78, %struct.SkPoint* dereferenceable(8) %79, %struct.SkPoint* dereferenceable(8) %7, %struct.SkPoint* dereferenceable(8) %3, float %80, float %82, i1 zeroext %85, i1 zeroext %4) #10
  br label %86

86:                                               ; preds = %74, %49
  %87 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 14
  store i8 %6, i8* %87, align 4
  br label %88

88:                                               ; preds = %33, %86
  %89 = phi i1 [ true, %86 ], [ false, %33 ]
  ret i1 %89
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* @_ZN13SkStrokerPriv10CapFactoryEN7SkPaint3CapE(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker10postJoinToERK7SkPointS2_S2_(%class.SkPathStroker* nocapture, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 25
  store i8 1, i8* %5, align 1
  %6 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10
  %7 = bitcast %struct.SkPoint* %1 to i64*
  %8 = bitcast %struct.SkPoint* %6 to i64*
  %9 = load i64, i64* %7, align 4
  store i64 %9, i64* %8, align 4
  %10 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 8
  %11 = bitcast %struct.SkPoint* %3 to i64*
  %12 = bitcast %struct.SkPoint* %10 to i64*
  %13 = load i64, i64* %11, align 4
  store i64 %13, i64* %12, align 4
  %14 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 6
  %15 = bitcast %struct.SkPoint* %2 to i64*
  %16 = bitcast %struct.SkPoint* %14 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 4
  %18 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 13
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker13finishContourEbb(%class.SkPathStroker*, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %struct.SkPoint, align 4
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %8 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 13
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %146

11:                                               ; preds = %3
  %12 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %13, align 4
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %14, align 4
  br i1 %1, label %15, label %104

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 18
  %17 = load void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)*, void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)** %16, align 8
  %18 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %19 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %20 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 8
  %21 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10
  %22 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 7
  %23 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %24 = load float, float* %23, align 8
  %25 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 14
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp ne i8 %28, 0
  tail call void %17(%class.SkPath* %18, %class.SkPath* %19, %struct.SkPoint* dereferenceable(8) %20, %struct.SkPoint* dereferenceable(8) %21, %struct.SkPoint* dereferenceable(8) %22, float %24, float %26, i1 zeroext %29, i1 zeroext %2) #10
  %30 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* %18) #10
  %31 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 15
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %97, label %34

34:                                               ; preds = %15
  %35 = getelementptr inbounds %class.SkPath, %class.SkPath* %19, i64 0, i32 0, i32 0
  %36 = load %class.SkPathRef*, %class.SkPathRef** %35, align 8
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 9
  %38 = load i8, i8* %37, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %49, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 1
  %42 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 3, i32 0
  %43 = load %struct.SkPoint*, %struct.SkPoint** %42, align 8
  %44 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 3, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %41, %struct.SkPoint* %43, i32 %45) #10
  %47 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 10
  %48 = zext i1 %46 to i8
  store i8 %48, i8* %47, align 1
  store i8 0, i8* %37, align 8
  br label %49

49:                                               ; preds = %34, %40
  %50 = getelementptr inbounds %class.SkPath, %class.SkPath* %18, i64 0, i32 0, i32 0
  %51 = load %class.SkPathRef*, %class.SkPathRef** %50, align 8
  %52 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %51, i64 0, i32 9
  %53 = load i8, i8* %52, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %51, i64 0, i32 1
  %57 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %51, i64 0, i32 3, i32 0
  %58 = load %struct.SkPoint*, %struct.SkPoint** %57, align 8
  %59 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %51, i64 0, i32 3, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %56, %struct.SkPoint* %58, i32 %60) #10
  %62 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %51, i64 0, i32 10
  %63 = zext i1 %61 to i8
  store i8 %63, i8* %62, align 1
  store i8 0, i8* %52, align 8
  br label %64

64:                                               ; preds = %49, %55
  %65 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %51, i64 0, i32 1, i32 0
  %66 = load float, float* %65, align 4
  %67 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %51, i64 0, i32 1, i32 2
  %68 = load float, float* %67, align 4
  %69 = fcmp olt float %66, %68
  br i1 %69, label %70, label %127

70:                                               ; preds = %64
  %71 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %51, i64 0, i32 1, i32 1
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %51, i64 0, i32 1, i32 3
  %74 = load float, float* %73, align 4
  %75 = fcmp uge float %72, %74
  br i1 %75, label %127, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 1, i32 0
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 1, i32 2
  %80 = load float, float* %79, align 4
  %81 = fcmp olt float %78, %80
  br i1 %81, label %82, label %127

82:                                               ; preds = %76
  %83 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 1, i32 1
  %84 = load float, float* %83, align 4
  %85 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 1, i32 3
  %86 = load float, float* %85, align 4
  %87 = fcmp uge float %84, %86
  %88 = fcmp ugt float %78, %66
  %89 = or i1 %88, %87
  br i1 %89, label %127, label %90

90:                                               ; preds = %82
  %91 = fcmp ole float %84, %72
  %92 = fcmp oge float %80, %68
  %93 = fcmp oge float %86, %74
  %94 = and i1 %92, %91
  %95 = and i1 %93, %94
  br i1 %95, label %96, label %127

96:                                               ; preds = %90
  tail call void @_ZN6SkPath4swapERS_(%class.SkPath* %19, %class.SkPath* dereferenceable(16) %18) #10
  br label %127

97:                                               ; preds = %15
  %98 = call zeroext i1 @_ZNK6SkPath9getLastPtEP7SkPoint(%class.SkPath* %19, %struct.SkPoint* nonnull %5) #10
  %99 = load float, float* %13, align 4
  %100 = load float, float* %14, align 4
  %101 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %18, float %99, float %100) #10
  %102 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath13reversePathToERKS_(%class.SkPath* %18, %class.SkPath* dereferenceable(16) %19) #10
  %103 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* %18) #10
  br label %127

104:                                              ; preds = %11
  %105 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %106 = call zeroext i1 @_ZNK6SkPath9getLastPtEP7SkPoint(%class.SkPath* %105, %struct.SkPoint* nonnull %5) #10
  %107 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 17
  %108 = load void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)*, void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)** %107, align 8
  %109 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %110 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10
  %111 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 6
  %112 = select i1 %2, %class.SkPath* %105, %class.SkPath* null
  call void %108(%class.SkPath* %109, %struct.SkPoint* dereferenceable(8) %110, %struct.SkPoint* dereferenceable(8) %111, %struct.SkPoint* nonnull dereferenceable(8) %5, %class.SkPath* %112) #10
  %113 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath13reversePathToERKS_(%class.SkPath* %109, %class.SkPath* dereferenceable(16) %105) #10
  %114 = load void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)*, void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)** %107, align 8
  %115 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 9
  %116 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #10
  %117 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 5, i32 0
  %118 = bitcast float* %117 to <2 x float>*
  %119 = load <2 x float>, <2 x float>* %118, align 4
  %120 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %119
  store <2 x float> %120, <2 x float>* %6, align 8
  %121 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 11
  %122 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 14
  %123 = load i8, i8* %122, align 4, !range !2
  %124 = icmp eq i8 %123, 0
  %125 = select i1 %124, %class.SkPath* null, %class.SkPath* %105
  call void %114(%class.SkPath* %109, %struct.SkPoint* dereferenceable(8) %115, %struct.SkPoint* nonnull dereferenceable(8) %7, %struct.SkPoint* dereferenceable(8) %121, %class.SkPath* %125) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #10
  %126 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* %109) #10
  br label %127

127:                                              ; preds = %64, %70, %76, %82, %97, %96, %90, %104
  %128 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 21
  %129 = getelementptr inbounds %class.SkPath, %class.SkPath* %128, i64 0, i32 0, i32 0
  %130 = load %class.SkPathRef*, %class.SkPathRef** %129, align 8
  %131 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %130, i64 0, i32 4, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %145, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %136 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %136) #10
  %137 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %138 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %138, align 16
  %139 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %140 = bitcast float* %139 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %140, align 16
  %141 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %141, align 16
  store i32 16, i32* %137, align 4
  %142 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %4) #10
  %143 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath* %135, %class.SkPath* dereferenceable(16) %128, %class.SkMatrix* nonnull dereferenceable(40) %4, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %136) #10
  %144 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath* %128) #10
  br label %145

145:                                              ; preds = %134, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %146

146:                                              ; preds = %145, %3
  %147 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %148 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath* %147) #10
  store i32 -1, i32* %8, align 8
  %149 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %150 = call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %149) #10
  %151 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 12
  store i32 %150, i32* %151, align 4
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath*) local_unnamed_addr #2

declare void @_ZN6SkPath4swapERS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK6SkPath9getLastPtEP7SkPoint(%class.SkPath*, %struct.SkPoint*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath13reversePathToERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath*) local_unnamed_addr #2

declare i32 @_ZNK6SkPath11countPointsEv(%class.SkPath*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStrokerC2ERK6SkPathffN7SkPaint3CapENS3_4JoinEfb(%class.SkPathStroker*, %class.SkPath* dereferenceable(16), float, float, i32, i8 zeroext, float, i1 zeroext) unnamed_addr #0 align 2 {
  %9 = zext i1 %7 to i8
  %10 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  store float %2, float* %10, align 8
  %11 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 2
  store float %6, float* %11, align 8
  %12 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 15
  store i8 %9, i8* %12, align 1
  %13 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %13) #10
  %14 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %14) #10
  %15 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 21
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %15) #10
  %16 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 1
  store float 0.000000e+00, float* %16, align 4
  %17 = icmp eq i8 %5, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %8
  %19 = fcmp ugt float %3, 1.000000e+00
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = fdiv float 1.000000e+00, %3
  store float %21, float* %16, align 4
  br label %22

22:                                               ; preds = %18, %20, %8
  %23 = phi i8 [ 0, %20 ], [ %5, %8 ], [ 2, %18 ]
  %24 = tail call void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* @_ZN13SkStrokerPriv10CapFactoryEN7SkPaint3CapE(i32 %4) #10
  %25 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 17
  store void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* %24, void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)** %25, align 8
  %26 = tail call void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* @_ZN13SkStrokerPriv11JoinFactoryEN7SkPaint4JoinE(i8 zeroext %23) #10
  %27 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 18
  store void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* %26, void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)** %27, align 8
  %28 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 13
  store i32 -1, i32* %28, align 8
  %29 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 12
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 14
  store i8 0, i8* %30, align 4
  %31 = tail call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %1) #10
  %32 = mul nsw i32 %31, 3
  tail call void @_ZN6SkPath10incReserveEi(%class.SkPath* %14, i32 %32) #10
  %33 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20, i32 4
  %34 = load i8, i8* %33, align 2
  %35 = or i8 %34, 4
  store i8 %35, i8* %33, align 2
  %36 = tail call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %1) #10
  tail call void @_ZN6SkPath10incReserveEi(%class.SkPath* %13, i32 %36) #10
  %37 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19, i32 4
  %38 = load i8, i8* %37, align 2
  %39 = or i8 %38, 4
  store i8 %39, i8* %37, align 2
  %40 = fmul float %6, 4.000000e+00
  %41 = fdiv float 1.000000e+00, %40
  %42 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 3
  store float %41, float* %42, align 4
  %43 = fmul float %41, %41
  %44 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 4
  store float %43, float* %44, align 8
  %45 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 23
  store i32 0, i32* %45, align 4
  ret void
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* @_ZN13SkStrokerPriv11JoinFactoryEN7SkPaint4JoinE(i8 zeroext) local_unnamed_addr #2

declare void @_ZN6SkPath10incReserveEi(%class.SkPath*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker6moveToERK7SkPoint(%class.SkPathStroker*, %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 13
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN13SkPathStroker13finishContourEbb(%class.SkPathStroker* %0, i1 zeroext false, i1 zeroext false)
  br label %7

7:                                                ; preds = %6, %2
  store i32 0, i32* %3, align 8
  %8 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10
  %9 = bitcast %struct.SkPoint* %1 to i64*
  %10 = bitcast %struct.SkPoint* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  %12 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 9
  %13 = bitcast %struct.SkPoint* %12 to i64*
  store i64 %11, i64* %13, align 4
  %14 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 25
  store i8 0, i8* %14, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker7line_toERK7SkPointS2_(%class.SkPathStroker*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %5 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fadd float %6, %8
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fadd float %11, %13
  %15 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %4, float %9, float %14) #10
  %16 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %17 = load float, float* %5, align 4
  %18 = load float, float* %7, align 4
  %19 = fsub float %17, %18
  %20 = load float, float* %10, align 4
  %21 = load float, float* %12, align 4
  %22 = fsub float %20, %21
  %23 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %16, float %19, float %22) #10
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker*, %struct.SkPoint* nocapture readonly dereferenceable(8), %"class.SkPath::Iter"* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkPath::Iter", align 8
  %5 = alloca [4 x %struct.SkPoint], align 16
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.SkPoint*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %struct.SkPoint*
  %10 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10
  %11 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 3
  %12 = load float, float* %11, align 4
  %13 = fmul float %12, 0x3F30000000000000
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %17 = load float, float* %16, align 4
  %18 = fsub float %15, %17
  %19 = tail call float @llvm.fabs.f32(float %18) #10
  %20 = fcmp ugt float %19, %13
  br i1 %20, label %29, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10, i32 1
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = fsub float %23, %25
  %27 = tail call float @llvm.fabs.f32(float %26) #10
  %28 = fcmp ole float %27, %13
  br label %29

29:                                               ; preds = %3, %21
  %30 = phi i1 [ false, %3 ], [ %28, %21 ]
  %31 = tail call void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* @_ZN13SkStrokerPriv10CapFactoryEN7SkPaint3CapE(i32 0) #10
  %32 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 17
  %33 = load void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)*, void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)** %32, align 8
  %34 = icmp ne void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* %31, %33
  %35 = xor i1 %30, true
  %36 = or i1 %34, %35
  br i1 %36, label %37, label %144

37:                                               ; preds = %29
  br i1 %30, label %38, label %104

38:                                               ; preds = %37
  %39 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 25
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %144

42:                                               ; preds = %38
  %43 = icmp eq %"class.SkPath::Iter"* %2, null
  br i1 %43, label %104, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.SkPath::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %45) #10
  %46 = bitcast %"class.SkPath::Iter"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* nonnull align 8 %46, i64 56, i1 false) #10
  %47 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #10
  %48 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0
  %49 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0, i32 0
  %50 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0, i32 1
  %51 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 1, i32 0
  %52 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 1, i32 1
  %53 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 2, i32 0
  %54 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 2, i32 1
  %55 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 3, i32 0
  %56 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 3, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 -1, i64 32, i1 false) #10
  br label %57

57:                                               ; preds = %101, %44
  %58 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %4, %struct.SkPoint* nonnull %48) #10
  switch i32 %58, label %101 [
    i32 0, label %103
    i32 6, label %103
    i32 1, label %59
    i32 2, label %67
    i32 3, label %67
    i32 4, label %81
    i32 5, label %103
  ]

59:                                               ; preds = %57
  %60 = load float, float* %49, align 16
  %61 = load float, float* %51, align 8
  %62 = fcmp oeq float %60, %61
  br i1 %62, label %63, label %102

63:                                               ; preds = %59
  %64 = load float, float* %50, align 4
  %65 = load float, float* %52, align 4
  %66 = fcmp oeq float %64, %65
  br i1 %66, label %101, label %102

67:                                               ; preds = %57, %57
  %68 = load float, float* %49, align 16
  %69 = load float, float* %51, align 8
  %70 = fcmp oeq float %68, %69
  br i1 %70, label %71, label %102

71:                                               ; preds = %67
  %72 = load float, float* %50, align 4
  %73 = load float, float* %52, align 4
  %74 = fcmp oeq float %72, %73
  %75 = load float, float* %53, align 16
  %76 = fcmp oeq float %68, %75
  %77 = and i1 %74, %76
  %78 = load float, float* %54, align 4
  %79 = fcmp oeq float %72, %78
  %80 = and i1 %77, %79
  br i1 %80, label %101, label %102

81:                                               ; preds = %57
  %82 = load float, float* %49, align 16
  %83 = load float, float* %51, align 8
  %84 = fcmp oeq float %82, %83
  br i1 %84, label %85, label %102

85:                                               ; preds = %81
  %86 = load float, float* %50, align 4
  %87 = load float, float* %52, align 4
  %88 = fcmp oeq float %86, %87
  %89 = load float, float* %53, align 16
  %90 = fcmp oeq float %82, %89
  %91 = and i1 %88, %90
  br i1 %91, label %92, label %102

92:                                               ; preds = %85
  %93 = load float, float* %54, align 4
  %94 = fcmp oeq float %86, %93
  %95 = load float, float* %55, align 8
  %96 = fcmp oeq float %82, %95
  %97 = and i1 %94, %96
  %98 = load float, float* %56, align 4
  %99 = fcmp oeq float %86, %98
  %100 = and i1 %97, %99
  br i1 %100, label %101, label %102

101:                                              ; preds = %92, %71, %63, %57
  br label %57

102:                                              ; preds = %63, %71, %92, %85, %59, %67, %81
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %45) #10
  br label %144

103:                                              ; preds = %57, %57, %57
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %45) #10
  br label %104

104:                                              ; preds = %103, %42, %37
  %105 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #10
  %106 = bitcast i64* %6 to float*
  store float 0xFFFFFFFFE0000000, float* %106, align 8
  %107 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %107, align 4
  %108 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #10
  %109 = bitcast i64* %8 to float*
  store float 0xFFFFFFFFE0000000, float* %109, align 8
  %110 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %110, align 4
  %111 = call zeroext i1 @_ZN13SkPathStroker9preJoinToERK7SkPointPS0_S3_b(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %1, %struct.SkPoint* nonnull %7, %struct.SkPoint* nonnull %9, i1 zeroext true)
  br i1 %111, label %112, label %143

112:                                              ; preds = %104
  %113 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %114 = load float, float* %16, align 4
  %115 = load float, float* %106, align 8
  %116 = fadd float %114, %115
  %117 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %118 = load float, float* %117, align 4
  %119 = load float, float* %107, align 4
  %120 = fadd float %118, %119
  %121 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %113, float %116, float %120) #10
  %122 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %123 = load float, float* %16, align 4
  %124 = load float, float* %106, align 8
  %125 = fsub float %123, %124
  %126 = load float, float* %117, align 4
  %127 = load float, float* %107, align 4
  %128 = fsub float %126, %127
  %129 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %122, float %125, float %128) #10
  %130 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 25
  store i8 1, i8* %130, align 1
  %131 = bitcast %struct.SkPoint* %1 to i64*
  %132 = bitcast %struct.SkPoint* %10 to i64*
  %133 = load i64, i64* %131, align 4
  store i64 %133, i64* %132, align 4
  %134 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 8
  %135 = bitcast %struct.SkPoint* %134 to i64*
  %136 = load i64, i64* %8, align 8
  store i64 %136, i64* %135, align 4
  %137 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 6
  %138 = bitcast %struct.SkPoint* %137 to i64*
  %139 = load i64, i64* %6, align 8
  store i64 %139, i64* %138, align 4
  %140 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 13
  %141 = load i32, i32* %140, align 8
  %142 = add nsw i32 %141, 1
  store i32 %142, i32* %140, align 8
  br label %143

143:                                              ; preds = %104, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #10
  br label %144

144:                                              ; preds = %102, %38, %29, %143
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker16setQuadEndNormalEPK7SkPointRS1_S3_PS0_S4_(%class.SkPathStroker* nocapture readonly, %struct.SkPoint* nocapture readonly, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 2
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %10 = load float, float* %9, align 8
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = fsub float %12, %14
  %16 = fmul float %8, %15
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %20 = load float, float* %19, align 4
  %21 = fsub float %18, %20
  %22 = fmul float %8, %21
  %23 = tail call zeroext i1 @_ZN7SkPoint12setNormalizeEff(%struct.SkPoint* %5, float %16, float %22) #10
  br i1 %23, label %24, label %32

24:                                               ; preds = %6
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = bitcast %struct.SkPoint* %5 to i32*
  store i32 %29, i32* %30, align 4
  %31 = fsub float -0.000000e+00, %26
  store float %31, float* %27, align 4
  tail call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* %5, float %10, %struct.SkPoint* %4) #10
  br label %39

32:                                               ; preds = %6
  %33 = bitcast %struct.SkPoint* %2 to i64*
  %34 = bitcast %struct.SkPoint* %4 to i64*
  %35 = load i64, i64* %33, align 4
  store i64 %35, i64* %34, align 4
  %36 = bitcast %struct.SkPoint* %3 to i64*
  %37 = bitcast %struct.SkPoint* %5 to i64*
  %38 = load i64, i64* %36, align 4
  store i64 %38, i64* %37, align 4
  br label %39

39:                                               ; preds = %24, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker17setConicEndNormalERK7SkConicRK7SkPointS5_PS3_S6_(%class.SkPathStroker* nocapture readonly, %struct.SkConic* nocapture readonly dereferenceable(28), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 2
  %8 = load float, float* %7, align 8
  %9 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %10 = load float, float* %9, align 8
  %11 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %1, i64 0, i32 0, i64 2, i32 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %1, i64 0, i32 0, i64 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = fsub float %12, %14
  %16 = fmul float %8, %15
  %17 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %1, i64 0, i32 0, i64 2, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %1, i64 0, i32 0, i64 1, i32 1
  %20 = load float, float* %19, align 4
  %21 = fsub float %18, %20
  %22 = fmul float %8, %21
  %23 = tail call zeroext i1 @_ZN7SkPoint12setNormalizeEff(%struct.SkPoint* %5, float %16, float %22) #10
  br i1 %23, label %24, label %32

24:                                               ; preds = %6
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = bitcast %struct.SkPoint* %5 to i32*
  store i32 %29, i32* %30, align 4
  %31 = fsub float -0.000000e+00, %26
  store float %31, float* %27, align 4
  tail call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* %5, float %10, %struct.SkPoint* %4) #10
  br label %39

32:                                               ; preds = %6
  %33 = bitcast %struct.SkPoint* %2 to i64*
  %34 = bitcast %struct.SkPoint* %4 to i64*
  %35 = load i64, i64* %33, align 4
  store i64 %35, i64* %34, align 4
  %36 = bitcast %struct.SkPoint* %3 to i64*
  %37 = bitcast %struct.SkPoint* %5 to i64*
  %38 = load i64, i64* %36, align 4
  store i64 %38, i64* %37, align 4
  br label %39

39:                                               ; preds = %24, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker17setCubicEndNormalEPK7SkPointRS1_S3_PS0_S4_(%class.SkPathStroker* nocapture readonly, %struct.SkPoint* nocapture readonly, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #4 align 2 {
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = bitcast float* %7 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = extractelement <2 x float> %11, i32 0
  %13 = fsub float %12, %9
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = extractelement <2 x float> %11, i32 1
  %17 = fsub float %16, %15
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 0
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %20 = bitcast float* %18 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 4
  %22 = bitcast float* %19 to <2 x float>*
  %23 = load <2 x float>, <2 x float>* %22, align 4
  %24 = fsub <2 x float> %21, %23
  %25 = extractelement <2 x float> %24, i32 0
  %26 = extractelement <2 x float> %24, i32 1
  %27 = bitcast float %13 to i32
  %28 = and i32 %27, 2139095040
  %29 = icmp eq i32 %28, 2139095040
  br i1 %29, label %38, label %30

30:                                               ; preds = %6
  %31 = bitcast float %17 to i32
  %32 = and i32 %31, 2139095040
  %33 = icmp eq i32 %32, 2139095040
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = fcmp oeq float %13, 0.000000e+00
  %36 = fcmp oeq float %17, 0.000000e+00
  %37 = and i1 %35, %36
  br label %38

38:                                               ; preds = %6, %30, %34
  %39 = phi i1 [ true, %30 ], [ %37, %34 ], [ true, %6 ]
  %40 = bitcast float %25 to i32
  %41 = and i32 %40, 2139095040
  %42 = icmp eq i32 %41, 2139095040
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = bitcast float %26 to i32
  %45 = and i32 %44, 2139095040
  %46 = icmp eq i32 %45, 2139095040
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = fcmp oeq float %25, 0.000000e+00
  %49 = fcmp oeq float %26, 0.000000e+00
  %50 = and i1 %48, %49
  br label %51

51:                                               ; preds = %38, %43, %47
  %52 = phi i1 [ true, %43 ], [ %50, %47 ], [ true, %38 ]
  %53 = and i1 %39, %52
  br i1 %53, label %92, label %54

54:                                               ; preds = %51
  br i1 %39, label %55, label %71

55:                                               ; preds = %54
  %56 = extractelement <2 x float> %23, i32 0
  %57 = fsub float %56, %9
  %58 = extractelement <2 x float> %23, i32 1
  %59 = fsub float %58, %15
  %60 = bitcast float %57 to i32
  %61 = and i32 %60, 2139095040
  %62 = icmp eq i32 %61, 2139095040
  br i1 %62, label %71, label %63

63:                                               ; preds = %55
  %64 = bitcast float %59 to i32
  %65 = and i32 %64, 2139095040
  %66 = icmp eq i32 %65, 2139095040
  br i1 %66, label %71, label %67

67:                                               ; preds = %63
  %68 = fcmp oeq float %57, 0.000000e+00
  %69 = fcmp oeq float %59, 0.000000e+00
  %70 = and i1 %68, %69
  br label %71

71:                                               ; preds = %67, %63, %55, %54
  %72 = phi i1 [ false, %54 ], [ true, %63 ], [ %70, %67 ], [ true, %55 ]
  br i1 %52, label %73, label %88

73:                                               ; preds = %71
  %74 = fsub <2 x float> %21, %11
  %75 = extractelement <2 x float> %74, i32 0
  %76 = extractelement <2 x float> %74, i32 1
  %77 = bitcast float %75 to i32
  %78 = and i32 %77, 2139095040
  %79 = icmp eq i32 %78, 2139095040
  br i1 %79, label %92, label %80

80:                                               ; preds = %73
  %81 = bitcast float %76 to i32
  %82 = and i32 %81, 2139095040
  %83 = icmp eq i32 %82, 2139095040
  br i1 %83, label %92, label %84

84:                                               ; preds = %80
  %85 = fcmp oeq float %75, 0.000000e+00
  %86 = fcmp oeq float %76, 0.000000e+00
  %87 = and i1 %85, %86
  br label %88

88:                                               ; preds = %84, %71
  %89 = phi <2 x float> [ %24, %71 ], [ %74, %84 ]
  %90 = phi i1 [ false, %71 ], [ %87, %84 ]
  %91 = or i1 %72, %90
  br i1 %91, label %92, label %99

92:                                               ; preds = %51, %73, %80, %88
  %93 = bitcast %struct.SkPoint* %2 to i64*
  %94 = bitcast %struct.SkPoint* %4 to i64*
  %95 = load i64, i64* %93, align 4
  store i64 %95, i64* %94, align 4
  %96 = bitcast %struct.SkPoint* %3 to i64*
  %97 = bitcast %struct.SkPoint* %5 to i64*
  %98 = load i64, i64* %96, align 4
  store i64 %98, i64* %97, align 4
  br label %113

99:                                               ; preds = %88
  %100 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %101 = load float, float* %100, align 8
  %102 = extractelement <2 x float> %89, i32 0
  %103 = extractelement <2 x float> %89, i32 1
  %104 = tail call zeroext i1 @_ZN7SkPoint12setNormalizeEff(%struct.SkPoint* %5, float %102, float %103) #10
  br i1 %104, label %105, label %113

105:                                              ; preds = %99
  %106 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  %107 = load float, float* %106, align 4
  %108 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  %109 = bitcast float* %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = bitcast %struct.SkPoint* %5 to i32*
  store i32 %110, i32* %111, align 4
  %112 = fsub float -0.000000e+00, %107
  store float %112, float* %108, align 4
  tail call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* %5, float %101, %struct.SkPoint* %4) #10
  br label %113

113:                                              ; preds = %105, %99, %92
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13SkPathStroker4initENS_10StrokeTypeEP15SkQuadConstructff(%class.SkPathStroker* nocapture, i32, %struct.SkQuadConstruct* nocapture, float, float) local_unnamed_addr #5 align 2 {
  %6 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 24
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  store float %3, float* %8, align 4
  %9 = fadd float %3, %4
  %10 = fmul float %9, 5.000000e-01
  %11 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 4
  store float %10, float* %11, align 4
  %12 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  store float %4, float* %12, align 4
  %13 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 7
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 6
  store i8 0, i8* %14, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkPathStroker16CheckCubicLinearEPK7SkPointPS0_PS2_(%struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint** nocapture) local_unnamed_addr #4 align 2 {
  %4 = alloca [3 x float], align 4
  %5 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %7 = bitcast %struct.SkPoint* %5 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %10 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = fsub <2 x float> %8, %11
  %13 = extractelement <2 x float> %12, i32 0
  %14 = bitcast float %13 to i32
  %15 = and i32 %14, 2139095040
  %16 = icmp eq i32 %15, 2139095040
  br i1 %16, label %26, label %17

17:                                               ; preds = %3
  %18 = extractelement <2 x float> %12, i32 1
  %19 = bitcast float %18 to i32
  %20 = and i32 %19, 2139095040
  %21 = icmp eq i32 %20, 2139095040
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = fcmp oeq float %13, 0.000000e+00
  %24 = fcmp oeq float %18, 0.000000e+00
  %25 = and i1 %23, %24
  br label %26

26:                                               ; preds = %3, %17, %22
  %27 = phi i1 [ true, %17 ], [ %25, %22 ], [ true, %3 ]
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2
  %29 = bitcast %struct.SkPoint* %28 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4
  %31 = fsub <2 x float> %30, %8
  %32 = extractelement <2 x float> %31, i32 0
  %33 = bitcast float %32 to i32
  %34 = and i32 %33, 2139095040
  %35 = icmp eq i32 %34, 2139095040
  br i1 %35, label %45, label %36

36:                                               ; preds = %26
  %37 = extractelement <2 x float> %31, i32 1
  %38 = bitcast float %37 to i32
  %39 = and i32 %38, 2139095040
  %40 = icmp eq i32 %39, 2139095040
  br i1 %40, label %45, label %41

41:                                               ; preds = %36
  %42 = fcmp oeq float %32, 0.000000e+00
  %43 = fcmp oeq float %37, 0.000000e+00
  %44 = and i1 %42, %43
  br label %45

45:                                               ; preds = %26, %36, %41
  %46 = phi i1 [ true, %36 ], [ %44, %41 ], [ true, %26 ]
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 3, i32 0
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 3, i32 1
  %49 = bitcast float* %47 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 4
  %51 = fsub <2 x float> %50, %30
  %52 = extractelement <2 x float> %51, i32 0
  %53 = bitcast float %52 to i32
  %54 = and i32 %53, 2139095040
  %55 = icmp eq i32 %54, 2139095040
  br i1 %55, label %65, label %56

56:                                               ; preds = %45
  %57 = extractelement <2 x float> %51, i32 1
  %58 = bitcast float %57 to i32
  %59 = and i32 %58, 2139095040
  %60 = icmp eq i32 %59, 2139095040
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = fcmp oeq float %52, 0.000000e+00
  %63 = fcmp oeq float %57, 0.000000e+00
  %64 = and i1 %62, %63
  br label %65

65:                                               ; preds = %45, %56, %61
  %66 = phi i1 [ true, %56 ], [ %64, %61 ], [ true, %45 ]
  %67 = and i1 %27, %46
  %68 = and i1 %67, %66
  br i1 %68, label %268, label %69

69:                                               ; preds = %65
  %70 = zext i1 %66 to i32
  %71 = zext i1 %27 to i32
  %72 = zext i1 %46 to i32
  %73 = add nuw nsw i32 %72, %71
  %74 = add nuw nsw i32 %73, %70
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %268, label %76

76:                                               ; preds = %69
  %77 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %12)
  %78 = extractelement <2 x float> %77, i32 0
  %79 = extractelement <2 x float> %77, i32 1
  %80 = fcmp olt float %78, %79
  %81 = select i1 %80, float %79, float %78
  %82 = fcmp ogt float %81, -1.000000e+00
  %83 = zext i1 %82 to i32
  %84 = select i1 %82, float %81, float -1.000000e+00
  %85 = fsub <2 x float> %30, %11
  %86 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %85)
  %87 = extractelement <2 x float> %86, i32 0
  %88 = extractelement <2 x float> %86, i32 1
  %89 = fcmp olt float %87, %88
  %90 = select i1 %89, float %88, float %87
  %91 = fcmp olt float %84, %90
  %92 = select i1 %91, i32 2, i32 %83
  %93 = select i1 %91, float %90, float %84
  %94 = fsub <2 x float> %50, %11
  %95 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %94)
  %96 = extractelement <2 x float> %95, i32 0
  %97 = extractelement <2 x float> %95, i32 1
  %98 = fcmp olt float %96, %97
  %99 = select i1 %98, float %97, float %96
  %100 = fcmp olt float %93, %99
  %101 = select i1 %100, i32 3, i32 %92
  %102 = select i1 %100, float %99, float %93
  %103 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %31)
  %104 = extractelement <2 x float> %103, i32 0
  %105 = extractelement <2 x float> %103, i32 1
  %106 = fcmp olt float %104, %105
  %107 = select i1 %106, float %105, float %104
  %108 = fcmp olt float %102, %107
  %109 = select i1 %108, i32 2, i32 %101
  %110 = select i1 %108, float %107, float %102
  %111 = fsub <2 x float> %50, %8
  %112 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %111)
  %113 = extractelement <2 x float> %112, i32 0
  %114 = extractelement <2 x float> %112, i32 1
  %115 = fcmp olt float %113, %114
  %116 = select i1 %115, float %114, float %113
  %117 = fcmp olt float %110, %116
  %118 = or i1 %117, %108
  %119 = zext i1 %118 to i32
  %120 = select i1 %117, float %116, float %110
  %121 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %51)
  %122 = extractelement <2 x float> %121, i32 0
  %123 = extractelement <2 x float> %121, i32 1
  %124 = fcmp olt float %122, %123
  %125 = select i1 %124, float %123, float %122
  %126 = fcmp olt float %120, %125
  %127 = select i1 %126, i32 2, i32 %119
  %128 = or i1 %126, %117
  %129 = select i1 %128, i32 3, i32 %109
  %130 = select i1 %126, float %125, float %120
  %131 = lshr i32 2, %129
  %132 = add nuw nsw i32 %131, 1
  %133 = ashr i32 %132, %127
  %134 = fmul float %130, %130
  %135 = fmul float %134, 0x3EE4F8B580000000
  %136 = sext i32 %133 to i64
  %137 = zext i32 %127 to i64
  %138 = zext i32 %129 to i64
  %139 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %138, i32 0
  %140 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %137, i32 0
  %141 = bitcast float* %139 to <2 x float>*
  %142 = load <2 x float>, <2 x float>* %141, align 4
  %143 = bitcast float* %140 to <2 x float>*
  %144 = load <2 x float>, <2 x float>* %143, align 4
  %145 = fsub <2 x float> %142, %144
  %146 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %136, i32 0
  %147 = bitcast float* %146 to <2 x float>*
  %148 = load <2 x float>, <2 x float>* %147, align 4
  %149 = fsub <2 x float> %148, %144
  %150 = shufflevector <2 x float> %145, <2 x float> undef, <2 x i32> zeroinitializer
  %151 = shufflevector <2 x float> %149, <2 x float> %145, <2 x i32> <i32 0, i32 2>
  %152 = fmul <2 x float> %150, %151
  %153 = shufflevector <2 x float> %145, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %154 = shufflevector <2 x float> %149, <2 x float> %145, <2 x i32> <i32 1, i32 3>
  %155 = fmul <2 x float> %153, %154
  %156 = fadd <2 x float> %152, %155
  %157 = extractelement <2 x float> %156, i32 0
  %158 = extractelement <2 x float> %156, i32 1
  %159 = fdiv float %157, %158
  %160 = fcmp oge float %159, 0.000000e+00
  %161 = fcmp ole float %159, 1.000000e+00
  %162 = and i1 %160, %161
  br i1 %162, label %163, label %174

163:                                              ; preds = %76
  %164 = fsub float 1.000000e+00, %159
  %165 = insertelement <2 x float> undef, float %164, i32 0
  %166 = shufflevector <2 x float> %165, <2 x float> undef, <2 x i32> zeroinitializer
  %167 = fmul <2 x float> %144, %166
  %168 = insertelement <2 x float> undef, float %159, i32 0
  %169 = shufflevector <2 x float> %168, <2 x float> undef, <2 x i32> zeroinitializer
  %170 = fmul <2 x float> %142, %169
  %171 = fadd <2 x float> %170, %167
  %172 = fsub <2 x float> %171, %148
  %173 = fmul <2 x float> %172, %172
  br label %176

174:                                              ; preds = %76
  %175 = fmul <2 x float> %149, %149
  br label %176

176:                                              ; preds = %174, %163
  %177 = phi <2 x float> [ %175, %174 ], [ %173, %163 ]
  %178 = extractelement <2 x float> %177, i32 0
  %179 = extractelement <2 x float> %177, i32 1
  %180 = fadd float %178, %179
  %181 = fcmp ugt float %180, %135
  br i1 %181, label %217, label %182

182:                                              ; preds = %176
  %183 = xor i32 %129, %127
  %184 = xor i32 %183, %133
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %185, i32 0
  %187 = bitcast float* %186 to <2 x float>*
  %188 = load <2 x float>, <2 x float>* %187, align 4
  %189 = fsub <2 x float> %188, %144
  %190 = fmul <2 x float> %145, %189
  %191 = extractelement <2 x float> %190, i32 0
  %192 = extractelement <2 x float> %190, i32 1
  %193 = fadd float %191, %192
  %194 = fdiv float %193, %158
  %195 = fcmp oge float %194, 0.000000e+00
  %196 = fcmp ole float %194, 1.000000e+00
  %197 = and i1 %195, %196
  br i1 %197, label %198, label %209

198:                                              ; preds = %182
  %199 = fsub float 1.000000e+00, %194
  %200 = insertelement <2 x float> undef, float %199, i32 0
  %201 = shufflevector <2 x float> %200, <2 x float> undef, <2 x i32> zeroinitializer
  %202 = fmul <2 x float> %144, %201
  %203 = insertelement <2 x float> undef, float %194, i32 0
  %204 = shufflevector <2 x float> %203, <2 x float> undef, <2 x i32> zeroinitializer
  %205 = fmul <2 x float> %142, %204
  %206 = fadd <2 x float> %205, %202
  %207 = fsub <2 x float> %206, %188
  %208 = fmul <2 x float> %207, %207
  br label %211

209:                                              ; preds = %182
  %210 = fmul <2 x float> %189, %189
  br label %211

211:                                              ; preds = %198, %209
  %212 = phi <2 x float> [ %208, %198 ], [ %210, %209 ]
  %213 = extractelement <2 x float> %212, i32 0
  %214 = extractelement <2 x float> %212, i32 1
  %215 = fadd float %213, %214
  %216 = fcmp ugt float %215, %135
  br i1 %216, label %217, label %219

217:                                              ; preds = %211, %176
  %218 = select i1 %27, %struct.SkPoint* %28, %struct.SkPoint* %5
  store %struct.SkPoint* %218, %struct.SkPoint** %2, align 8
  br label %268

219:                                              ; preds = %211
  %220 = bitcast [3 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %220) #10
  %221 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %221, align 4
  %222 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %222, align 4
  %223 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, i64 2
  store float 0xFFFFFFFFE0000000, float* %223, align 4
  %224 = call i32 @_Z23SkFindCubicMaxCurvaturePK7SkPointPf(%struct.SkPoint* %0, float* nonnull %221) #10
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %226, label %231

226:                                              ; preds = %219
  %227 = zext i32 %224 to i64
  br label %234

228:                                              ; preds = %264
  %229 = icmp eq i32 %265, 0
  %230 = add nsw i32 %265, 2
  br i1 %229, label %231, label %232

231:                                              ; preds = %219, %228
  br label %232

232:                                              ; preds = %228, %231
  %233 = phi i32 [ 1, %231 ], [ %230, %228 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %220) #10
  br label %268

234:                                              ; preds = %264, %226
  %235 = phi i64 [ 0, %226 ], [ %266, %264 ]
  %236 = phi i32 [ 0, %226 ], [ %265, %264 ]
  %237 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, i64 %235
  %238 = load float, float* %237, align 4
  %239 = fcmp ole float %238, 0.000000e+00
  %240 = fcmp oge float %238, 1.000000e+00
  %241 = or i1 %239, %240
  br i1 %241, label %264, label %242

242:                                              ; preds = %234
  %243 = sext i32 %236 to i64
  %244 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %243
  call void @_Z13SkEvalCubicAtPK7SkPointfPS_S2_S2_(%struct.SkPoint* %0, float %238, %struct.SkPoint* %244, %struct.SkPoint* null, %struct.SkPoint* null) #10
  %245 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %244, i64 0, i32 0
  %246 = load float, float* %245, align 4
  %247 = load float, float* %6, align 4
  %248 = fcmp une float %246, %247
  br i1 %248, label %254, label %249

249:                                              ; preds = %242
  %250 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %243, i32 1
  %251 = load float, float* %250, align 4
  %252 = load float, float* %9, align 4
  %253 = fcmp une float %251, %252
  br i1 %253, label %254, label %264

254:                                              ; preds = %242, %249
  %255 = load float, float* %47, align 4
  %256 = fcmp une float %246, %255
  br i1 %256, label %262, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %243, i32 1
  %259 = load float, float* %258, align 4
  %260 = load float, float* %48, align 4
  %261 = fcmp une float %259, %260
  br i1 %261, label %262, label %264

262:                                              ; preds = %254, %257
  %263 = add nsw i32 %236, 1
  br label %264

264:                                              ; preds = %262, %257, %249, %234
  %265 = phi i32 [ %236, %234 ], [ %236, %249 ], [ %263, %262 ], [ %236, %257 ]
  %266 = add nuw nsw i64 %235, 1
  %267 = icmp eq i64 %266, %227
  br i1 %267, label %228, label %234

268:                                              ; preds = %69, %65, %232, %217
  %269 = phi i32 [ %233, %232 ], [ 2, %217 ], [ 0, %65 ], [ 1, %69 ]
  ret i32 %269
}

declare i32 @_Z23SkFindCubicMaxCurvaturePK7SkPointPf(%struct.SkPoint*, float*) local_unnamed_addr #2

declare void @_Z13SkEvalCubicAtPK7SkPointfPS_S2_S2_(%struct.SkPoint*, float, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkPathStroker16CheckConicLinearERK7SkConicP7SkPoint(%struct.SkConic* dereferenceable(28), %struct.SkPoint*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 0
  %4 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 1, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fsub float %5, %7
  %9 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 1, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fsub float %10, %12
  %14 = bitcast float %8 to i32
  %15 = and i32 %14, 2139095040
  %16 = icmp eq i32 %15, 2139095040
  br i1 %16, label %25, label %17

17:                                               ; preds = %2
  %18 = bitcast float %13 to i32
  %19 = and i32 %18, 2139095040
  %20 = icmp eq i32 %19, 2139095040
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = fcmp oeq float %8, 0.000000e+00
  %23 = fcmp oeq float %13, 0.000000e+00
  %24 = and i1 %22, %23
  br label %25

25:                                               ; preds = %2, %17, %21
  %26 = phi i1 [ true, %17 ], [ %24, %21 ], [ true, %2 ]
  %27 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 2, i32 0
  %28 = load float, float* %27, align 4
  %29 = fsub float %28, %5
  %30 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 2, i32 1
  %31 = load float, float* %30, align 4
  %32 = fsub float %31, %10
  %33 = bitcast float %29 to i32
  %34 = and i32 %33, 2139095040
  %35 = icmp eq i32 %34, 2139095040
  br i1 %35, label %44, label %36

36:                                               ; preds = %25
  %37 = bitcast float %32 to i32
  %38 = and i32 %37, 2139095040
  %39 = icmp eq i32 %38, 2139095040
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = fcmp oeq float %29, 0.000000e+00
  %42 = fcmp oeq float %32, 0.000000e+00
  %43 = and i1 %41, %42
  br label %44

44:                                               ; preds = %25, %36, %40
  %45 = phi i1 [ true, %36 ], [ %43, %40 ], [ true, %25 ]
  %46 = and i1 %26, %45
  br i1 %46, label %55, label %47

47:                                               ; preds = %44
  %48 = or i1 %26, %45
  br i1 %48, label %55, label %49

49:                                               ; preds = %47
  %50 = tail call fastcc zeroext i1 @_ZL12quad_in_linePK7SkPoint(%struct.SkPoint* %3) #10
  br i1 %50, label %51, label %55

51:                                               ; preds = %49
  %52 = tail call float @_Z22SkFindQuadMaxCurvaturePK7SkPoint(%struct.SkPoint* %3) #10
  %53 = fcmp oeq float %52, 0.000000e+00
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  tail call void @_ZNK7SkConic6evalAtEfP7SkPointS1_(%struct.SkConic* %0, float %52, %struct.SkPoint* %1, %struct.SkPoint* null) #10
  br label %55

55:                                               ; preds = %54, %51, %49, %47, %44
  %56 = phi i32 [ 0, %44 ], [ 1, %47 ], [ 2, %49 ], [ 3, %54 ], [ 1, %51 ]
  ret i32 %56
}

declare float @_Z22SkFindQuadMaxCurvaturePK7SkPoint(%struct.SkPoint*) local_unnamed_addr #2

declare void @_ZNK7SkConic6evalAtEfP7SkPointS1_(%struct.SkConic*, float, %struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkPathStroker15CheckQuadLinearEPK7SkPointPS0_(%struct.SkPoint*, %struct.SkPoint* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fsub float %4, %6
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = fsub float %9, %11
  %13 = bitcast float %7 to i32
  %14 = and i32 %13, 2139095040
  %15 = icmp eq i32 %14, 2139095040
  br i1 %15, label %24, label %16

16:                                               ; preds = %2
  %17 = bitcast float %12 to i32
  %18 = and i32 %17, 2139095040
  %19 = icmp eq i32 %18, 2139095040
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = fcmp oeq float %7, 0.000000e+00
  %22 = fcmp oeq float %12, 0.000000e+00
  %23 = and i1 %21, %22
  br label %24

24:                                               ; preds = %2, %16, %20
  %25 = phi i1 [ true, %16 ], [ %23, %20 ], [ true, %2 ]
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %27 = load float, float* %26, align 4
  %28 = fsub float %27, %4
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 1
  %30 = load float, float* %29, align 4
  %31 = fsub float %30, %9
  %32 = bitcast float %28 to i32
  %33 = and i32 %32, 2139095040
  %34 = icmp eq i32 %33, 2139095040
  br i1 %34, label %43, label %35

35:                                               ; preds = %24
  %36 = bitcast float %31 to i32
  %37 = and i32 %36, 2139095040
  %38 = icmp eq i32 %37, 2139095040
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = fcmp oeq float %28, 0.000000e+00
  %41 = fcmp oeq float %31, 0.000000e+00
  %42 = and i1 %40, %41
  br label %43

43:                                               ; preds = %24, %35, %39
  %44 = phi i1 [ true, %35 ], [ %42, %39 ], [ true, %24 ]
  %45 = and i1 %25, %44
  br i1 %45, label %58, label %46

46:                                               ; preds = %43
  %47 = or i1 %25, %44
  br i1 %47, label %58, label %48

48:                                               ; preds = %46
  %49 = tail call fastcc zeroext i1 @_ZL12quad_in_linePK7SkPoint(%struct.SkPoint* %0)
  br i1 %49, label %50, label %58

50:                                               ; preds = %48
  %51 = tail call float @_Z22SkFindQuadMaxCurvaturePK7SkPoint(%struct.SkPoint* %0) #10
  %52 = fcmp oeq float %51, 0.000000e+00
  %53 = fcmp oeq float %51, 1.000000e+00
  %54 = or i1 %52, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  %56 = tail call <2 x float> @_Z12SkEvalQuadAtPK7SkPointf(%struct.SkPoint* %0, float %51) #10
  %57 = bitcast %struct.SkPoint* %1 to <2 x float>*
  store <2 x float> %56, <2 x float>* %57, align 4
  br label %58

58:                                               ; preds = %55, %50, %48, %46, %43
  %59 = phi i32 [ 0, %43 ], [ 1, %46 ], [ 2, %48 ], [ 3, %55 ], [ 1, %50 ]
  ret i32 %59
}

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZL12quad_in_linePK7SkPoint(%struct.SkPoint* nocapture readonly) unnamed_addr #6 {
  %2 = bitcast %struct.SkPoint* %0 to <2 x float>*
  %3 = load <2 x float>, <2 x float>* %2, align 4
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %5 = bitcast float* %4 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = fsub <2 x float> %6, %3
  %8 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %7)
  %9 = extractelement <2 x float> %8, i32 0
  %10 = extractelement <2 x float> %8, i32 1
  %11 = fcmp olt float %9, %10
  %12 = select i1 %11, float %10, float %9
  %13 = fcmp ogt float %12, -1.000000e+00
  %14 = zext i1 %13 to i32
  %15 = select i1 %13, float %12, float -1.000000e+00
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %17 = bitcast float* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4
  %19 = fsub <2 x float> %18, %3
  %20 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %19)
  %21 = extractelement <2 x float> %20, i32 0
  %22 = extractelement <2 x float> %20, i32 1
  %23 = fcmp olt float %21, %22
  %24 = select i1 %23, float %22, float %21
  %25 = fcmp olt float %15, %24
  %26 = select i1 %25, float %24, float %15
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %28 = bitcast float* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 0
  %31 = bitcast float* %30 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4
  %33 = fsub <2 x float> %32, %29
  %34 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %33)
  %35 = extractelement <2 x float> %34, i32 0
  %36 = extractelement <2 x float> %34, i32 1
  %37 = fcmp olt float %35, %36
  %38 = select i1 %37, float %36, float %35
  %39 = fcmp olt float %26, %38
  %40 = or i1 %39, %25
  %41 = select i1 %40, i32 2, i32 %14
  %42 = select i1 %39, float %38, float %26
  %43 = zext i1 %39 to i32
  %44 = xor i32 %41, 3
  %45 = xor i32 %44, %43
  %46 = fmul float %42, %42
  %47 = fmul float %46, 0x3ED4F8B580000000
  %48 = zext i32 %45 to i64
  %49 = zext i1 %39 to i64
  %50 = zext i32 %41 to i64
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %50, i32 0
  %52 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %49, i32 0
  %53 = bitcast float* %51 to <2 x float>*
  %54 = load <2 x float>, <2 x float>* %53, align 4
  %55 = bitcast float* %52 to <2 x float>*
  %56 = load <2 x float>, <2 x float>* %55, align 4
  %57 = extractelement <2 x float> %54, i32 0
  %58 = extractelement <2 x float> %56, i32 0
  %59 = fsub float %57, %58
  %60 = extractelement <2 x float> %54, i32 1
  %61 = extractelement <2 x float> %56, i32 1
  %62 = fsub float %60, %61
  %63 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %48, i32 0
  %64 = bitcast float* %63 to <2 x float>*
  %65 = load <2 x float>, <2 x float>* %64, align 4
  %66 = fsub <2 x float> %65, %56
  %67 = extractelement <2 x float> %66, i32 0
  %68 = extractelement <2 x float> %66, i32 1
  %69 = insertelement <2 x float> undef, float %59, i32 0
  %70 = shufflevector <2 x float> %69, <2 x float> undef, <2 x i32> zeroinitializer
  %71 = insertelement <2 x float> undef, float %67, i32 0
  %72 = insertelement <2 x float> %71, float %59, i32 1
  %73 = fmul <2 x float> %70, %72
  %74 = insertelement <2 x float> undef, float %62, i32 0
  %75 = shufflevector <2 x float> %74, <2 x float> undef, <2 x i32> zeroinitializer
  %76 = insertelement <2 x float> undef, float %68, i32 0
  %77 = insertelement <2 x float> %76, float %62, i32 1
  %78 = fmul <2 x float> %75, %77
  %79 = fadd <2 x float> %73, %78
  %80 = extractelement <2 x float> %79, i32 0
  %81 = extractelement <2 x float> %79, i32 1
  %82 = fdiv float %80, %81
  %83 = fcmp oge float %82, 0.000000e+00
  %84 = fcmp ole float %82, 1.000000e+00
  %85 = and i1 %83, %84
  br i1 %85, label %86, label %97

86:                                               ; preds = %1
  %87 = fsub float 1.000000e+00, %82
  %88 = insertelement <2 x float> undef, float %87, i32 0
  %89 = shufflevector <2 x float> %88, <2 x float> undef, <2 x i32> zeroinitializer
  %90 = fmul <2 x float> %56, %89
  %91 = insertelement <2 x float> undef, float %82, i32 0
  %92 = shufflevector <2 x float> %91, <2 x float> undef, <2 x i32> zeroinitializer
  %93 = fmul <2 x float> %54, %92
  %94 = fadd <2 x float> %93, %90
  %95 = fsub <2 x float> %94, %65
  %96 = fmul <2 x float> %95, %95
  br label %99

97:                                               ; preds = %1
  %98 = fmul <2 x float> %66, %66
  br label %99

99:                                               ; preds = %86, %97
  %100 = phi <2 x float> [ %96, %86 ], [ %98, %97 ]
  %101 = extractelement <2 x float> %100, i32 0
  %102 = extractelement <2 x float> %100, i32 1
  %103 = fadd float %101, %102
  %104 = fcmp ole float %103, %47
  ret i1 %104
}

declare <2 x float> @_Z12SkEvalQuadAtPK7SkPointf(%struct.SkPoint*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker7conicToERK7SkPointS2_f(%class.SkPathStroker*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), float) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkConic, align 8
  %6 = alloca %struct.SkPoint, align 4
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %struct.SkPoint*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %struct.SkPoint*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %struct.SkPoint*
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %struct.SkPoint*
  %15 = alloca %struct.SkQuadConstruct, align 4
  %16 = bitcast %struct.SkConic* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %16) #10
  %17 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %5, i64 0, i32 0, i64 1, i32 0
  %18 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %5, i64 0, i32 0, i64 1, i32 1
  %19 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %5, i64 0, i32 0, i64 2, i32 0
  %20 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %5, i64 0, i32 0, i64 2, i32 1
  %21 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %5, i64 0, i32 1
  %22 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10
  %23 = bitcast %struct.SkPoint* %22 to i64*
  %24 = bitcast %struct.SkConic* %5 to i64*
  %25 = load i64, i64* %23, align 4
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %5, i64 0, i32 0, i64 1
  %27 = bitcast %struct.SkPoint* %1 to i64*
  %28 = bitcast %struct.SkPoint* %26 to i64*
  %29 = load i64, i64* %27, align 4
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %5, i64 0, i32 0, i64 2
  %31 = bitcast %struct.SkPoint* %2 to i64*
  %32 = bitcast %struct.SkPoint* %30 to i64*
  %33 = load i64, i64* %31, align 4
  store i64 %33, i64* %32, align 8
  store float %3, float* %21, align 8
  %34 = bitcast %struct.SkPoint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %35, align 4
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %36, align 4
  %37 = call i32 @_ZN13SkPathStroker16CheckConicLinearERK7SkConicP7SkPoint(%struct.SkConic* nonnull dereferenceable(28) %5, %struct.SkPoint* nonnull %6)
  switch i32 %37, label %45 [
    i32 0, label %38
    i32 1, label %39
    i32 3, label %40
  ]

38:                                               ; preds = %4
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %2, %"class.SkPath::Iter"* null)
  br label %108

39:                                               ; preds = %4
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %2, %"class.SkPath::Iter"* null)
  br label %108

40:                                               ; preds = %4
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* nonnull dereferenceable(8) %6, %"class.SkPath::Iter"* null)
  %41 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 18
  %42 = bitcast void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = call void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* @_ZN13SkStrokerPriv11JoinFactoryEN7SkPaint4JoinE(i8 zeroext 1) #10
  store void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* %44, void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)** %41, align 8
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %2, %"class.SkPath::Iter"* null)
  store i64 %43, i64* %42, align 8
  br label %108

45:                                               ; preds = %4
  %46 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  %47 = bitcast i64* %7 to float*
  store float 0xFFFFFFFFE0000000, float* %47, align 8
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  %49 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #10
  %50 = bitcast i64* %9 to float*
  store float 0xFFFFFFFFE0000000, float* %50, align 8
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %51, align 4
  %52 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  %53 = bitcast i64* %11 to float*
  store float 0xFFFFFFFFE0000000, float* %53, align 8
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %54, align 4
  %55 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  %56 = bitcast i64* %13 to float*
  store float 0xFFFFFFFFE0000000, float* %56, align 8
  %57 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %57, align 4
  %58 = call zeroext i1 @_ZN13SkPathStroker9preJoinToERK7SkPointPS0_S3_b(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %1, %struct.SkPoint* nonnull %8, %struct.SkPoint* nonnull %10, i1 zeroext false)
  br i1 %58, label %60, label %59

59:                                               ; preds = %45
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %2, %"class.SkPath::Iter"* null)
  br label %107

60:                                               ; preds = %45
  %61 = bitcast %struct.SkQuadConstruct* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %61) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 bitcast ({ [3 x %struct.SkPoint], %struct.SkPoint, %struct.SkPoint, float, float, float, i8, i8, i8, [1 x i8] }* @__const._ZN13SkPathStroker7cubicToERK7SkPointS2_S2_.quadPts to i8*), i64 56, i1 false)
  %62 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  store i32 1, i32* %62, align 8
  %63 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 24
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %15, i64 0, i32 3
  store float 0.000000e+00, float* %64, align 4
  %65 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %15, i64 0, i32 4
  store float 5.000000e-01, float* %65, align 4
  %66 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %15, i64 0, i32 5
  store float 1.000000e+00, float* %66, align 4
  %67 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %15, i64 0, i32 7
  store i8 0, i8* %67, align 1
  %68 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %15, i64 0, i32 6
  store i8 0, i8* %68, align 4
  %69 = call zeroext i1 @_ZN13SkPathStroker11conicStrokeERK7SkConicP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkConic* nonnull dereferenceable(28) %5, %struct.SkQuadConstruct* nonnull %15)
  store i32 -1, i32* %62, align 8
  store i8 0, i8* %63, align 8
  store float 0.000000e+00, float* %64, align 4
  store float 5.000000e-01, float* %65, align 4
  store float 1.000000e+00, float* %66, align 4
  store i8 0, i8* %67, align 1
  store i8 0, i8* %68, align 4
  %70 = call zeroext i1 @_ZN13SkPathStroker11conicStrokeERK7SkConicP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkConic* nonnull dereferenceable(28) %5, %struct.SkQuadConstruct* nonnull %15)
  %71 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 2
  %72 = load float, float* %71, align 8
  %73 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %74 = load float, float* %73, align 8
  %75 = load float, float* %19, align 8
  %76 = load float, float* %17, align 8
  %77 = fsub float %75, %76
  %78 = fmul float %72, %77
  %79 = load float, float* %20, align 4
  %80 = load float, float* %18, align 4
  %81 = fsub float %79, %80
  %82 = fmul float %72, %81
  %83 = call zeroext i1 @_ZN7SkPoint12setNormalizeEff(%struct.SkPoint* nonnull %14, float %78, float %82) #10
  br i1 %83, label %84, label %92

84:                                               ; preds = %60
  %85 = load float, float* %56, align 8
  %86 = bitcast float* %57 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = bitcast i64* %13 to i32*
  store i32 %87, i32* %88, align 8
  %89 = fsub float -0.000000e+00, %85
  store float %89, float* %57, align 4
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %14, float %74, %struct.SkPoint* nonnull %12) #10
  %90 = load i64, i64* %13, align 8
  %91 = load i64, i64* %11, align 8
  br label %95

92:                                               ; preds = %60
  %93 = load i64, i64* %7, align 8
  store i64 %93, i64* %11, align 8
  %94 = load i64, i64* %9, align 8
  store i64 %94, i64* %13, align 8
  br label %95

95:                                               ; preds = %84, %92
  %96 = phi i64 [ %91, %84 ], [ %93, %92 ]
  %97 = phi i64 [ %90, %84 ], [ %94, %92 ]
  %98 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 25
  store i8 1, i8* %98, align 1
  %99 = load i64, i64* %31, align 4
  store i64 %99, i64* %23, align 4
  %100 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 8
  %101 = bitcast %struct.SkPoint* %100 to i64*
  store i64 %97, i64* %101, align 4
  %102 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 6
  %103 = bitcast %struct.SkPoint* %102 to i64*
  store i64 %96, i64* %103, align 4
  %104 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 13
  %105 = load i32, i32* %104, align 8
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %104, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %61) #10
  br label %107

107:                                              ; preds = %95, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %108

108:                                              ; preds = %107, %40, %39, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %16) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkPathStroker11conicStrokeERK7SkConicP15SkQuadConstruct(%class.SkPathStroker*, %struct.SkConic* dereferenceable(28), %struct.SkQuadConstruct*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkQuadConstruct, align 8
  %5 = tail call i32 @_ZNK13SkPathStroker16compareQuadConicERK7SkConicP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkConic* dereferenceable(28) %1, %struct.SkQuadConstruct* %2)
  switch i32 %5, label %34 [
    i32 2, label %6
    i32 1, label %22
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  %10 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %11 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %12 = select i1 %9, %class.SkPath* %10, %class.SkPath* %11
  %13 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 1, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 1
  %20 = load float, float* %19, align 4
  %21 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %12, float %14, float %16, float %18, float %20) #10
  br label %93

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  %26 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %27 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %28 = select i1 %25, %class.SkPath* %26, %class.SkPath* %27
  %29 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 0
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 1
  %32 = load float, float* %31, align 4
  %33 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %28, float %30, float %32) #10
  br label %93

34:                                               ; preds = %3
  %35 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 23
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %35, align 4
  %38 = icmp sgt i32 %36, 32
  br i1 %38, label %93, label %39

39:                                               ; preds = %34
  %40 = bitcast %struct.SkQuadConstruct* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %40) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 4 bitcast ({ [3 x %struct.SkPoint], %struct.SkPoint, %struct.SkPoint, float, float, float, i8, i8, i8, [1 x i8] }* @__const._ZN13SkPathStroker7cubicToERK7SkPointS2_S2_.quadPts to i8*), i64 56, i1 false)
  %41 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 4
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 3
  store float %42, float* %45, align 8
  %46 = fadd float %42, %44
  %47 = fmul float %46, 5.000000e-01
  %48 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 4
  store float %47, float* %48, align 4
  %49 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 5
  store float %44, float* %49, align 8
  %50 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 7
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 6
  store i8 0, i8* %51, align 4
  %52 = fcmp ogt float %47, %42
  %53 = fcmp olt float %47, %44
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %64

55:                                               ; preds = %39
  %56 = bitcast %struct.SkQuadConstruct* %2 to i64*
  %57 = bitcast %struct.SkQuadConstruct* %4 to i64*
  %58 = load i64, i64* %56, align 4
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 1
  %60 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 1
  %61 = bitcast %struct.SkPoint* %59 to i64*
  %62 = bitcast %struct.SkPoint* %60 to i64*
  %63 = load i64, i64* %61, align 4
  store i64 %63, i64* %62, align 8
  store i8 1, i8* %51, align 4
  br label %64

64:                                               ; preds = %39, %55
  %65 = call zeroext i1 @_ZN13SkPathStroker11conicStrokeERK7SkConicP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkConic* dereferenceable(28) %1, %struct.SkQuadConstruct* nonnull %4)
  br i1 %65, label %66, label %91

66:                                               ; preds = %64
  %67 = load float, float* %43, align 4
  %68 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  %69 = load float, float* %68, align 4
  store float %67, float* %45, align 8
  %70 = fadd float %67, %69
  %71 = fmul float %70, 5.000000e-01
  store float %71, float* %48, align 4
  store float %69, float* %49, align 8
  store i8 0, i8* %50, align 1
  store i8 0, i8* %51, align 4
  %72 = fcmp ogt float %71, %67
  %73 = fcmp olt float %71, %69
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %86

75:                                               ; preds = %66
  %76 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2
  %77 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 0, i64 2
  %78 = bitcast %struct.SkPoint* %76 to i64*
  %79 = bitcast %struct.SkPoint* %77 to i64*
  %80 = load i64, i64* %78, align 4
  store i64 %80, i64* %79, align 8
  %81 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 2
  %82 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 2
  %83 = bitcast %struct.SkPoint* %81 to i64*
  %84 = bitcast %struct.SkPoint* %82 to i64*
  %85 = load i64, i64* %83, align 4
  store i64 %85, i64* %84, align 8
  store i8 1, i8* %50, align 1
  br label %86

86:                                               ; preds = %66, %75
  %87 = call zeroext i1 @_ZN13SkPathStroker11conicStrokeERK7SkConicP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkConic* dereferenceable(28) %1, %struct.SkQuadConstruct* nonnull %4)
  br i1 %87, label %88, label %91

88:                                               ; preds = %86
  %89 = load i32, i32* %35, align 4
  %90 = add nsw i32 %89, -1
  store i32 %90, i32* %35, align 4
  br label %91

91:                                               ; preds = %86, %64, %88
  %92 = phi i1 [ true, %88 ], [ false, %64 ], [ false, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %40) #10
  br label %93

93:                                               ; preds = %34, %91, %22, %6
  %94 = phi i1 [ true, %6 ], [ true, %22 ], [ %92, %91 ], [ false, %34 ]
  ret i1 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker6quadToERK7SkPointS2_(%class.SkPathStroker*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca [3 x %struct.SkPoint], align 16
  %5 = alloca %struct.SkPoint, align 4
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.SkPoint*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %struct.SkPoint*
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %struct.SkPoint*
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %struct.SkPoint*
  %14 = alloca %struct.SkQuadConstruct, align 4
  %15 = bitcast [3 x %struct.SkPoint]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %4, i64 0, i64 0
  %17 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %4, i64 0, i64 1, i32 0
  %18 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %4, i64 0, i64 1, i32 1
  %19 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %4, i64 0, i64 2, i32 0
  %20 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %4, i64 0, i64 2, i32 1
  %21 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10
  %22 = bitcast %struct.SkPoint* %21 to i64*
  %23 = bitcast [3 x %struct.SkPoint]* %4 to i64*
  %24 = load i64, i64* %22, align 4
  store i64 %24, i64* %23, align 16
  %25 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %4, i64 0, i64 1
  %26 = bitcast %struct.SkPoint* %1 to i64*
  %27 = bitcast %struct.SkPoint* %25 to i64*
  %28 = load i64, i64* %26, align 4
  store i64 %28, i64* %27, align 8
  %29 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %4, i64 0, i64 2
  %30 = bitcast %struct.SkPoint* %2 to i64*
  %31 = bitcast %struct.SkPoint* %29 to i64*
  %32 = load i64, i64* %30, align 4
  store i64 %32, i64* %31, align 16
  %33 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %34, align 4
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %35, align 4
  %36 = call i32 @_ZN13SkPathStroker15CheckQuadLinearEPK7SkPointPS0_(%struct.SkPoint* nonnull %16, %struct.SkPoint* nonnull %5)
  switch i32 %36, label %44 [
    i32 0, label %37
    i32 1, label %38
    i32 3, label %39
  ]

37:                                               ; preds = %3
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %2, %"class.SkPath::Iter"* null)
  br label %107

38:                                               ; preds = %3
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %2, %"class.SkPath::Iter"* null)
  br label %107

39:                                               ; preds = %3
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* nonnull dereferenceable(8) %5, %"class.SkPath::Iter"* null)
  %40 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 18
  %41 = bitcast void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = call void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* @_ZN13SkStrokerPriv11JoinFactoryEN7SkPaint4JoinE(i8 zeroext 1) #10
  store void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* %43, void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)** %40, align 8
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %2, %"class.SkPath::Iter"* null)
  store i64 %42, i64* %41, align 8
  br label %107

44:                                               ; preds = %3
  %45 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = bitcast i64* %6 to float*
  store float 0xFFFFFFFFE0000000, float* %46, align 8
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %47, align 4
  %48 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  %49 = bitcast i64* %8 to float*
  store float 0xFFFFFFFFE0000000, float* %49, align 8
  %50 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %50, align 4
  %51 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  %52 = bitcast i64* %10 to float*
  store float 0xFFFFFFFFE0000000, float* %52, align 8
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %53, align 4
  %54 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = bitcast i64* %12 to float*
  store float 0xFFFFFFFFE0000000, float* %55, align 8
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %56, align 4
  %57 = call zeroext i1 @_ZN13SkPathStroker9preJoinToERK7SkPointPS0_S3_b(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %1, %struct.SkPoint* nonnull %7, %struct.SkPoint* nonnull %9, i1 zeroext false)
  br i1 %57, label %59, label %58

58:                                               ; preds = %44
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %2, %"class.SkPath::Iter"* null)
  br label %106

59:                                               ; preds = %44
  %60 = bitcast %struct.SkQuadConstruct* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %60) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* align 4 bitcast ({ [3 x %struct.SkPoint], %struct.SkPoint, %struct.SkPoint, float, float, float, i8, i8, i8, [1 x i8] }* @__const._ZN13SkPathStroker7cubicToERK7SkPointS2_S2_.quadPts to i8*), i64 56, i1 false)
  %61 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  store i32 1, i32* %61, align 8
  %62 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 24
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %14, i64 0, i32 3
  store float 0.000000e+00, float* %63, align 4
  %64 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %14, i64 0, i32 4
  store float 5.000000e-01, float* %64, align 4
  %65 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %14, i64 0, i32 5
  store float 1.000000e+00, float* %65, align 4
  %66 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %14, i64 0, i32 7
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %14, i64 0, i32 6
  store i8 0, i8* %67, align 4
  %68 = call zeroext i1 @_ZN13SkPathStroker10quadStrokeEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* nonnull %16, %struct.SkQuadConstruct* nonnull %14)
  store i32 -1, i32* %61, align 8
  store i8 0, i8* %62, align 8
  store float 0.000000e+00, float* %63, align 4
  store float 5.000000e-01, float* %64, align 4
  store float 1.000000e+00, float* %65, align 4
  store i8 0, i8* %66, align 1
  store i8 0, i8* %67, align 4
  %69 = call zeroext i1 @_ZN13SkPathStroker10quadStrokeEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* nonnull %16, %struct.SkQuadConstruct* nonnull %14)
  %70 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 2
  %71 = load float, float* %70, align 8
  %72 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %73 = load float, float* %72, align 8
  %74 = load float, float* %19, align 16
  %75 = load float, float* %17, align 8
  %76 = fsub float %74, %75
  %77 = fmul float %71, %76
  %78 = load float, float* %20, align 4
  %79 = load float, float* %18, align 4
  %80 = fsub float %78, %79
  %81 = fmul float %71, %80
  %82 = call zeroext i1 @_ZN7SkPoint12setNormalizeEff(%struct.SkPoint* nonnull %13, float %77, float %81) #10
  br i1 %82, label %83, label %91

83:                                               ; preds = %59
  %84 = load float, float* %55, align 8
  %85 = bitcast float* %56 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = bitcast i64* %12 to i32*
  store i32 %86, i32* %87, align 8
  %88 = fsub float -0.000000e+00, %84
  store float %88, float* %56, align 4
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %13, float %73, %struct.SkPoint* nonnull %11) #10
  %89 = load i64, i64* %12, align 8
  %90 = load i64, i64* %10, align 8
  br label %94

91:                                               ; preds = %59
  %92 = load i64, i64* %6, align 8
  store i64 %92, i64* %10, align 8
  %93 = load i64, i64* %8, align 8
  store i64 %93, i64* %12, align 8
  br label %94

94:                                               ; preds = %83, %91
  %95 = phi i64 [ %90, %83 ], [ %92, %91 ]
  %96 = phi i64 [ %89, %83 ], [ %93, %91 ]
  %97 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 25
  store i8 1, i8* %97, align 1
  %98 = load i64, i64* %30, align 4
  store i64 %98, i64* %22, align 4
  %99 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 8
  %100 = bitcast %struct.SkPoint* %99 to i64*
  store i64 %96, i64* %100, align 4
  %101 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 6
  %102 = bitcast %struct.SkPoint* %101 to i64*
  store i64 %95, i64* %102, align 4
  %103 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 13
  %104 = load i32, i32* %103, align 8
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %103, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %60) #10
  br label %106

106:                                              ; preds = %94, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  br label %107

107:                                              ; preds = %106, %39, %38, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkPathStroker10quadStrokeEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker*, %struct.SkPoint*, %struct.SkQuadConstruct*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkQuadConstruct, align 8
  %5 = tail call i32 @_ZN13SkPathStroker15compareQuadQuadEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* %1, %struct.SkQuadConstruct* %2)
  switch i32 %5, label %34 [
    i32 2, label %6
    i32 1, label %22
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  %10 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %11 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %12 = select i1 %9, %class.SkPath* %10, %class.SkPath* %11
  %13 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 1, i32 0
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 1, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 1
  %20 = load float, float* %19, align 4
  %21 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %12, float %14, float %16, float %18, float %20) #10
  br label %93

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  %26 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %27 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %28 = select i1 %25, %class.SkPath* %26, %class.SkPath* %27
  %29 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 0
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 1
  %32 = load float, float* %31, align 4
  %33 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %28, float %30, float %32) #10
  br label %93

34:                                               ; preds = %3
  %35 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 23
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %35, align 4
  %38 = icmp sgt i32 %36, 32
  br i1 %38, label %93, label %39

39:                                               ; preds = %34
  %40 = bitcast %struct.SkQuadConstruct* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %40) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 4 bitcast ({ [3 x %struct.SkPoint], %struct.SkPoint, %struct.SkPoint, float, float, float, i8, i8, i8, [1 x i8] }* @__const._ZN13SkPathStroker7cubicToERK7SkPointS2_S2_.quadPts to i8*), i64 56, i1 false)
  %41 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 4
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 3
  store float %42, float* %45, align 8
  %46 = fadd float %42, %44
  %47 = fmul float %46, 5.000000e-01
  %48 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 4
  store float %47, float* %48, align 4
  %49 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 5
  store float %44, float* %49, align 8
  %50 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 7
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 6
  store i8 0, i8* %51, align 4
  %52 = fcmp ogt float %47, %42
  %53 = fcmp olt float %47, %44
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %64

55:                                               ; preds = %39
  %56 = bitcast %struct.SkQuadConstruct* %2 to i64*
  %57 = bitcast %struct.SkQuadConstruct* %4 to i64*
  %58 = load i64, i64* %56, align 4
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 1
  %60 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 1
  %61 = bitcast %struct.SkPoint* %59 to i64*
  %62 = bitcast %struct.SkPoint* %60 to i64*
  %63 = load i64, i64* %61, align 4
  store i64 %63, i64* %62, align 8
  store i8 1, i8* %51, align 4
  br label %64

64:                                               ; preds = %39, %55
  %65 = call zeroext i1 @_ZN13SkPathStroker10quadStrokeEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* %1, %struct.SkQuadConstruct* nonnull %4)
  br i1 %65, label %66, label %91

66:                                               ; preds = %64
  %67 = load float, float* %43, align 4
  %68 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  %69 = load float, float* %68, align 4
  store float %67, float* %45, align 8
  %70 = fadd float %67, %69
  %71 = fmul float %70, 5.000000e-01
  store float %71, float* %48, align 4
  store float %69, float* %49, align 8
  store i8 0, i8* %50, align 1
  store i8 0, i8* %51, align 4
  %72 = fcmp ogt float %71, %67
  %73 = fcmp olt float %71, %69
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %86

75:                                               ; preds = %66
  %76 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2
  %77 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 0, i64 2
  %78 = bitcast %struct.SkPoint* %76 to i64*
  %79 = bitcast %struct.SkPoint* %77 to i64*
  %80 = load i64, i64* %78, align 4
  store i64 %80, i64* %79, align 8
  %81 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 2
  %82 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %4, i64 0, i32 2
  %83 = bitcast %struct.SkPoint* %81 to i64*
  %84 = bitcast %struct.SkPoint* %82 to i64*
  %85 = load i64, i64* %83, align 4
  store i64 %85, i64* %84, align 8
  store i8 1, i8* %50, align 1
  br label %86

86:                                               ; preds = %66, %75
  %87 = call zeroext i1 @_ZN13SkPathStroker10quadStrokeEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* %1, %struct.SkQuadConstruct* nonnull %4)
  br i1 %87, label %88, label %91

88:                                               ; preds = %86
  %89 = load i32, i32* %35, align 4
  %90 = add nsw i32 %89, -1
  store i32 %90, i32* %35, align 4
  br label %91

91:                                               ; preds = %86, %64, %88
  %92 = phi i1 [ true, %88 ], [ false, %64 ], [ false, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %40) #10
  br label %93

93:                                               ; preds = %34, %91, %22, %6
  %94 = phi i1 [ true, %6 ], [ true, %22 ], [ %92, %91 ], [ false, %34 ]
  ret i1 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPathStroker9setRayPtsERK7SkPointPS0_S3_S3_(%class.SkPathStroker* nocapture readonly, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint*, %struct.SkPoint* nocapture, %struct.SkPoint*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %7 = load float, float* %6, align 8
  %8 = tail call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* %2, float %7) #10
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %11 = load float, float* %10, align 4
  br label %17

12:                                               ; preds = %5
  %13 = bitcast %class.SkPathStroker* %0 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = bitcast %struct.SkPoint* %2 to i32*
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  store float 0.000000e+00, float* %16, align 4
  br label %17

17:                                               ; preds = %9, %12
  %18 = phi float [ %11, %9 ], [ 0.000000e+00, %12 ]
  %19 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %20 = load i32, i32* %19, align 8
  %21 = sitofp i32 %20 to float
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = fmul float %18, %21
  %25 = fadd float %23, %24
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  store float %25, float* %26, align 4
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %30 = load float, float* %29, align 4
  %31 = fmul float %30, %21
  %32 = fsub float %28, %31
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  store float %32, float* %33, align 4
  %34 = icmp eq %struct.SkPoint* %4, null
  br i1 %34, label %44, label %35

35:                                               ; preds = %17
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %37 = load float, float* %29, align 4
  %38 = fadd float %25, %37
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float %38, float* %39, align 4
  %40 = load float, float* %33, align 4
  %41 = load float, float* %36, align 4
  %42 = fadd float %40, %41
  %43 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float %42, float* %43, align 4
  br label %44

44:                                               ; preds = %17, %35
  ret void
}

declare zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPathStroker12conicPerpRayERK7SkConicfP7SkPointS4_S4_(%class.SkPathStroker* nocapture readonly, %struct.SkConic* dereferenceable(28), float, %struct.SkPoint*, %struct.SkPoint* nocapture, %struct.SkPoint*) local_unnamed_addr #4 align 2 {
  %7 = alloca <2 x float>, align 8
  %8 = bitcast <2 x float>* %7 to %struct.SkPoint*
  %9 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds <2 x float>, <2 x float>* %7, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %10, align 8
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  call void @_ZNK7SkConic6evalAtEfP7SkPointS1_(%struct.SkConic* %1, float %2, %struct.SkPoint* %3, %struct.SkPoint* nonnull %8) #10
  %12 = load float, float* %10, align 8
  %13 = fcmp oeq float %12, 0.000000e+00
  %14 = load float, float* %11, align 4
  %15 = fcmp oeq float %14, 0.000000e+00
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %24

17:                                               ; preds = %6
  %18 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %1, i64 0, i32 0, i64 2, i32 0
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = bitcast %struct.SkConic* %1 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = fsub <2 x float> %20, %22
  store <2 x float> %23, <2 x float>* %7, align 8
  br label %24

24:                                               ; preds = %17, %6
  %25 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %26 = load float, float* %25, align 8
  %27 = call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nonnull %8, float %26) #10
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = load float, float* %11, align 4
  %30 = load float, float* %10, align 8
  br label %36

31:                                               ; preds = %24
  %32 = bitcast %class.SkPathStroker* %0 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = bitcast <2 x float>* %7 to i32*
  store i32 %33, i32* %34, align 8
  store float 0.000000e+00, float* %11, align 4
  %35 = bitcast i32 %33 to float
  br label %36

36:                                               ; preds = %31, %28
  %37 = phi float [ %30, %28 ], [ %35, %31 ]
  %38 = phi float [ %29, %28 ], [ 0.000000e+00, %31 ]
  %39 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %40 = load i32, i32* %39, align 8
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %43 = load float, float* %42, align 4
  %44 = fmul float %38, %41
  %45 = fadd float %43, %44
  %46 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float %45, float* %46, align 4
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %48 = load float, float* %47, align 4
  %49 = fmul float %37, %41
  %50 = fsub float %48, %49
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float %50, float* %51, align 4
  %52 = icmp eq %struct.SkPoint* %5, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %36
  %54 = fadd float %45, %37
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float %54, float* %55, align 4
  %56 = load float, float* %51, align 4
  %57 = fadd float %56, %38
  %58 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float %57, float* %58, align 4
  br label %59

59:                                               ; preds = %36, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPathStroker13conicQuadEndsERK7SkConicP15SkQuadConstruct(%class.SkPathStroker* nocapture readonly, %struct.SkConic* dereferenceable(28), %struct.SkQuadConstruct*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkPoint, align 4
  %5 = alloca %struct.SkPoint, align 4
  %6 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 6
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = bitcast %struct.SkPoint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 0
  %16 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 1
  call void @_ZNK13SkPathStroker12conicPerpRayERK7SkConicfP7SkPointS4_S4_(%class.SkPathStroker* %0, %struct.SkConic* dereferenceable(28) %1, float %14, %struct.SkPoint* nonnull %4, %struct.SkPoint* %15, %struct.SkPoint* %16)
  store i8 1, i8* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br label %17

17:                                               ; preds = %3, %9
  %18 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 7
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %23, align 4
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %24, align 4
  %25 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2
  %28 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 2
  call void @_ZNK13SkPathStroker12conicPerpRayERK7SkConicfP7SkPointS4_S4_(%class.SkPathStroker* %0, %struct.SkConic* dereferenceable(28) %1, float %26, %struct.SkPoint* nonnull %5, %struct.SkPoint* %27, %struct.SkPoint* %28)
  store i8 1, i8* %18, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %29

29:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* nocapture readonly, %struct.SkPoint*, float, %struct.SkPoint*, %struct.SkPoint* nocapture, %struct.SkPoint*) local_unnamed_addr #4 align 2 {
  %7 = alloca <2 x float>, align 8
  %8 = bitcast <2 x float>* %7 to %struct.SkPoint*
  %9 = alloca [7 x %struct.SkPoint], align 16
  %10 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds <2 x float>, <2 x float>* %7, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %11, align 8
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = bitcast [7 x %struct.SkPoint]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -1, i64 56, i1 false)
  call void @_Z13SkEvalCubicAtPK7SkPointfPS_S2_S2_(%struct.SkPoint* %1, float %2, %struct.SkPoint* %3, %struct.SkPoint* nonnull %8, %struct.SkPoint* null) #10
  %14 = load float, float* %11, align 8
  %15 = fcmp oeq float %14, 0.000000e+00
  %16 = load float, float* %12, align 4
  %17 = fcmp oeq float %16, 0.000000e+00
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %75

19:                                               ; preds = %6
  %20 = call float @llvm.fabs.f32(float %2) #10
  %21 = fcmp ugt float %20, 0x3F30000000000000
  br i1 %21, label %29, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %24 = bitcast float* %23 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 4
  %28 = fsub <2 x float> %25, %27
  store <2 x float> %28, <2 x float>* %7, align 8
  br label %60

29:                                               ; preds = %19
  %30 = fsub float 1.000000e+00, %2
  %31 = call float @llvm.fabs.f32(float %30) #10
  %32 = fcmp ugt float %31, 0x3F30000000000000
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 0
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %36 = bitcast float* %34 to <2 x float>*
  %37 = load <2 x float>, <2 x float>* %36, align 4
  %38 = bitcast float* %35 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 4
  %40 = fsub <2 x float> %37, %39
  store <2 x float> %40, <2 x float>* %7, align 8
  br label %60

41:                                               ; preds = %29
  %42 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 0
  call void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint* %1, %struct.SkPoint* nonnull %42, float %2) #10
  %43 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 3, i32 0
  %44 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 2, i32 0
  %45 = bitcast float* %43 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 8
  %47 = bitcast float* %44 to <2 x float>*
  %48 = load <2 x float>, <2 x float>* %47, align 16
  %49 = fsub <2 x float> %46, %48
  %50 = extractelement <2 x float> %49, i32 0
  %51 = extractelement <2 x float> %49, i32 1
  store <2 x float> %49, <2 x float>* %7, align 8
  %52 = fcmp oeq float %50, 0.000000e+00
  %53 = fcmp oeq float %51, 0.000000e+00
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %60

55:                                               ; preds = %41
  %56 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %9, i64 0, i64 1, i32 0
  %57 = bitcast float* %56 to <2 x float>*
  %58 = load <2 x float>, <2 x float>* %57, align 8
  %59 = fsub <2 x float> %46, %58
  store <2 x float> %59, <2 x float>* %7, align 8
  br label %60

60:                                               ; preds = %33, %55, %41, %22
  %61 = phi %struct.SkPoint* [ %1, %22 ], [ %1, %33 ], [ %42, %55 ], [ %1, %41 ]
  %62 = phi <2 x float> [ %28, %22 ], [ %40, %33 ], [ %59, %55 ], [ %49, %41 ]
  %63 = extractelement <2 x float> %62, i32 0
  %64 = fcmp oeq float %63, 0.000000e+00
  %65 = extractelement <2 x float> %62, i32 1
  %66 = fcmp oeq float %65, 0.000000e+00
  %67 = and i1 %64, %66
  br i1 %67, label %68, label %75

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %61, i64 3, i32 0
  %70 = bitcast float* %69 to <2 x float>*
  %71 = load <2 x float>, <2 x float>* %70, align 4
  %72 = bitcast %struct.SkPoint* %61 to <2 x float>*
  %73 = load <2 x float>, <2 x float>* %72, align 4
  %74 = fsub <2 x float> %71, %73
  store <2 x float> %74, <2 x float>* %7, align 8
  br label %75

75:                                               ; preds = %60, %68, %6
  %76 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %77 = load float, float* %76, align 8
  %78 = call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nonnull %8, float %77) #10
  br i1 %78, label %79, label %82

79:                                               ; preds = %75
  %80 = load float, float* %12, align 4
  %81 = load float, float* %11, align 8
  br label %87

82:                                               ; preds = %75
  %83 = bitcast %class.SkPathStroker* %0 to i32*
  %84 = load i32, i32* %83, align 8
  %85 = bitcast <2 x float>* %7 to i32*
  store i32 %84, i32* %85, align 8
  store float 0.000000e+00, float* %12, align 4
  %86 = bitcast i32 %84 to float
  br label %87

87:                                               ; preds = %82, %79
  %88 = phi float [ %81, %79 ], [ %86, %82 ]
  %89 = phi float [ %80, %79 ], [ 0.000000e+00, %82 ]
  %90 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %91 = load i32, i32* %90, align 8
  %92 = sitofp i32 %91 to float
  %93 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %94 = load float, float* %93, align 4
  %95 = fmul float %89, %92
  %96 = fadd float %94, %95
  %97 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float %96, float* %97, align 4
  %98 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %99 = load float, float* %98, align 4
  %100 = fmul float %88, %92
  %101 = fsub float %99, %100
  %102 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float %101, float* %102, align 4
  %103 = icmp eq %struct.SkPoint* %5, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %87
  %105 = fadd float %96, %88
  %106 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float %105, float* %106, align 4
  %107 = load float, float* %102, align 4
  %108 = fadd float %107, %89
  %109 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float %108, float* %109, align 4
  br label %110

110:                                              ; preds = %87, %104
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_Z13SkChopCubicAtPK7SkPointPS_f(%struct.SkPoint*, %struct.SkPoint*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker13cubicQuadEndsEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* nocapture readonly, %struct.SkPoint*, %struct.SkQuadConstruct*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkPoint, align 4
  %5 = alloca %struct.SkPoint, align 4
  %6 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 6
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = bitcast %struct.SkPoint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 0
  %16 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 1
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %14, %struct.SkPoint* nonnull %4, %struct.SkPoint* %15, %struct.SkPoint* %16)
  store i8 1, i8* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br label %17

17:                                               ; preds = %3, %9
  %18 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 7
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %23, align 4
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %24, align 4
  %25 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2
  %28 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 2
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %26, %struct.SkPoint* nonnull %5, %struct.SkPoint* %27, %struct.SkPoint* %28)
  store i8 1, i8* %18, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %29

29:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPathStroker12cubicQuadMidEPK7SkPointPK15SkQuadConstructPS0_(%class.SkPathStroker* nocapture readonly, %struct.SkPoint*, %struct.SkQuadConstruct* nocapture readonly, %struct.SkPoint* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkPoint, align 4
  %6 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %9 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 4
  %10 = load float, float* %9, align 4
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %10, %struct.SkPoint* nonnull %5, %struct.SkPoint* %3, %struct.SkPoint* null)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkPathStroker11quadPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* nocapture readonly, %struct.SkPoint*, float, %struct.SkPoint*, %struct.SkPoint* nocapture, %struct.SkPoint*) local_unnamed_addr #4 align 2 {
  %7 = alloca <2 x float>, align 8
  %8 = bitcast <2 x float>* %7 to %struct.SkPoint*
  %9 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds <2 x float>, <2 x float>* %7, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %10, align 8
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  call void @_Z12SkEvalQuadAtPK7SkPointfPS_S2_(%struct.SkPoint* %1, float %2, %struct.SkPoint* %3, %struct.SkPoint* nonnull %8) #10
  %12 = load float, float* %10, align 8
  %13 = fcmp oeq float %12, 0.000000e+00
  %14 = load float, float* %11, align 4
  %15 = fcmp oeq float %14, 0.000000e+00
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %24

17:                                               ; preds = %6
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %19 = bitcast float* %18 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = fsub <2 x float> %20, %22
  store <2 x float> %23, <2 x float>* %7, align 8
  br label %24

24:                                               ; preds = %17, %6
  %25 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %26 = load float, float* %25, align 8
  %27 = call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nonnull %8, float %26) #10
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = load float, float* %11, align 4
  %30 = load float, float* %10, align 8
  br label %36

31:                                               ; preds = %24
  %32 = bitcast %class.SkPathStroker* %0 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = bitcast <2 x float>* %7 to i32*
  store i32 %33, i32* %34, align 8
  store float 0.000000e+00, float* %11, align 4
  %35 = bitcast i32 %33 to float
  br label %36

36:                                               ; preds = %31, %28
  %37 = phi float [ %30, %28 ], [ %35, %31 ]
  %38 = phi float [ %29, %28 ], [ 0.000000e+00, %31 ]
  %39 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %40 = load i32, i32* %39, align 8
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %43 = load float, float* %42, align 4
  %44 = fmul float %38, %41
  %45 = fadd float %43, %44
  %46 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float %45, float* %46, align 4
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %48 = load float, float* %47, align 4
  %49 = fmul float %37, %41
  %50 = fsub float %48, %49
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float %50, float* %51, align 4
  %52 = icmp eq %struct.SkPoint* %5, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %36
  %54 = fadd float %45, %37
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float %54, float* %55, align 4
  %56 = load float, float* %51, align 4
  %57 = fadd float %56, %38
  %58 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float %57, float* %58, align 4
  br label %59

59:                                               ; preds = %36, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  ret void
}

declare void @_Z12SkEvalQuadAtPK7SkPointfPS_S2_(%struct.SkPoint*, float, %struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13SkPathStroker12intersectRayEP15SkQuadConstructNS_16IntersectRayTypeE(%class.SkPathStroker* nocapture readonly, %struct.SkQuadConstruct* nocapture, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %1, i64 0, i32 1, i32 0
  %5 = bitcast float* %4 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = bitcast %struct.SkQuadConstruct* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = fsub <2 x float> %6, %8
  %10 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %1, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %1, i64 0, i32 0, i64 2, i32 0
  %12 = bitcast float* %10 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = bitcast float* %11 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4
  %16 = fsub <2 x float> %13, %15
  %17 = shufflevector <2 x float> %16, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %18 = fmul <2 x float> %9, %17
  %19 = extractelement <2 x float> %18, i32 0
  %20 = extractelement <2 x float> %18, i32 1
  %21 = fsub float %19, %20
  %22 = fcmp oeq float %21, 0.000000e+00
  br i1 %22, label %27, label %23

23:                                               ; preds = %3
  %24 = bitcast float %21 to i32
  %25 = and i32 %24, 2139095040
  %26 = icmp eq i32 %25, 2139095040
  br i1 %26, label %27, label %35

27:                                               ; preds = %23, %3
  %28 = fmul <2 x float> %9, %16
  %29 = extractelement <2 x float> %28, i32 0
  %30 = extractelement <2 x float> %28, i32 1
  %31 = fadd float %29, %30
  %32 = fcmp olt float %31, 0.000000e+00
  %33 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %1, i64 0, i32 8
  %34 = zext i1 %32 to i8
  store i8 %34, i8* %33, align 2
  br label %150

35:                                               ; preds = %23
  %36 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %1, i64 0, i32 8
  store i8 0, i8* %36, align 2
  %37 = fsub <2 x float> %8, %15
  %38 = extractelement <2 x float> %16, i32 0
  %39 = extractelement <2 x float> %37, i32 1
  %40 = fmul float %38, %39
  %41 = extractelement <2 x float> %16, i32 1
  %42 = extractelement <2 x float> %37, i32 0
  %43 = fmul float %42, %41
  %44 = fsub float %40, %43
  %45 = shufflevector <2 x float> %37, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %46 = fmul <2 x float> %9, %45
  %47 = extractelement <2 x float> %46, i32 0
  %48 = extractelement <2 x float> %46, i32 1
  %49 = fsub float %47, %48
  %50 = fcmp ult float %44, 0.000000e+00
  %51 = fcmp oge float %49, 0.000000e+00
  %52 = xor i1 %51, %50
  br i1 %52, label %53, label %123

53:                                               ; preds = %35
  %54 = shufflevector <2 x float> %16, <2 x float> undef, <2 x i32> zeroinitializer
  %55 = shufflevector <2 x float> %37, <2 x float> %16, <2 x i32> <i32 0, i32 2>
  %56 = fmul <2 x float> %54, %55
  %57 = shufflevector <2 x float> %16, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %58 = shufflevector <2 x float> %37, <2 x float> %16, <2 x i32> <i32 1, i32 3>
  %59 = fmul <2 x float> %57, %58
  %60 = fadd <2 x float> %56, %59
  %61 = extractelement <2 x float> %60, i32 0
  %62 = extractelement <2 x float> %60, i32 1
  %63 = fdiv float %61, %62
  %64 = fcmp oge float %63, 0.000000e+00
  %65 = fcmp ole float %63, 1.000000e+00
  %66 = and i1 %64, %65
  br i1 %66, label %67, label %78

67:                                               ; preds = %53
  %68 = fsub float 1.000000e+00, %63
  %69 = insertelement <2 x float> undef, float %68, i32 0
  %70 = shufflevector <2 x float> %69, <2 x float> undef, <2 x i32> zeroinitializer
  %71 = fmul <2 x float> %15, %70
  %72 = insertelement <2 x float> undef, float %63, i32 0
  %73 = shufflevector <2 x float> %72, <2 x float> undef, <2 x i32> zeroinitializer
  %74 = fmul <2 x float> %13, %73
  %75 = fadd <2 x float> %74, %71
  %76 = fsub <2 x float> %75, %8
  %77 = fmul <2 x float> %76, %76
  br label %80

78:                                               ; preds = %53
  %79 = fmul <2 x float> %37, %37
  br label %80

80:                                               ; preds = %67, %78
  %81 = phi <2 x float> [ %77, %67 ], [ %79, %78 ]
  %82 = extractelement <2 x float> %81, i32 0
  %83 = extractelement <2 x float> %81, i32 1
  %84 = fadd float %82, %83
  %85 = fsub <2 x float> %15, %8
  %86 = shufflevector <2 x float> %9, <2 x float> undef, <2 x i32> zeroinitializer
  %87 = shufflevector <2 x float> %85, <2 x float> %9, <2 x i32> <i32 0, i32 2>
  %88 = fmul <2 x float> %86, %87
  %89 = shufflevector <2 x float> %9, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %90 = shufflevector <2 x float> %85, <2 x float> %9, <2 x i32> <i32 1, i32 3>
  %91 = fmul <2 x float> %89, %90
  %92 = fadd <2 x float> %88, %91
  %93 = extractelement <2 x float> %92, i32 0
  %94 = extractelement <2 x float> %92, i32 1
  %95 = fdiv float %93, %94
  %96 = fcmp oge float %95, 0.000000e+00
  %97 = fcmp ole float %95, 1.000000e+00
  %98 = and i1 %96, %97
  br i1 %98, label %99, label %110

99:                                               ; preds = %80
  %100 = fsub float 1.000000e+00, %95
  %101 = insertelement <2 x float> undef, float %100, i32 0
  %102 = shufflevector <2 x float> %101, <2 x float> undef, <2 x i32> zeroinitializer
  %103 = fmul <2 x float> %8, %102
  %104 = insertelement <2 x float> undef, float %95, i32 0
  %105 = shufflevector <2 x float> %104, <2 x float> undef, <2 x i32> zeroinitializer
  %106 = fmul <2 x float> %6, %105
  %107 = fadd <2 x float> %106, %103
  %108 = fsub <2 x float> %107, %15
  %109 = fmul <2 x float> %108, %108
  br label %112

110:                                              ; preds = %80
  %111 = fmul <2 x float> %85, %85
  br label %112

112:                                              ; preds = %99, %110
  %113 = phi <2 x float> [ %109, %99 ], [ %111, %110 ]
  %114 = extractelement <2 x float> %113, i32 0
  %115 = extractelement <2 x float> %113, i32 1
  %116 = fadd float %114, %115
  %117 = fcmp olt float %84, %116
  %118 = select i1 %117, float %116, float %84
  %119 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 4
  %120 = load float, float* %119, align 8
  %121 = fcmp ole float %118, %120
  %122 = zext i1 %121 to i32
  br label %150

123:                                              ; preds = %35
  %124 = fdiv float %44, %21
  %125 = fadd float %124, -1.000000e+00
  %126 = fcmp ogt float %124, %125
  br i1 %126, label %127, label %143

127:                                              ; preds = %123
  %128 = icmp eq i32 %2, 0
  br i1 %128, label %129, label %150

129:                                              ; preds = %127
  %130 = fsub float 1.000000e+00, %124
  %131 = extractelement <2 x float> %8, i32 0
  %132 = fmul float %130, %131
  %133 = extractelement <2 x float> %6, i32 0
  %134 = fmul float %133, %124
  %135 = fadd float %134, %132
  %136 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %1, i64 0, i32 0, i64 1, i32 0
  store float %135, float* %136, align 4
  %137 = extractelement <2 x float> %8, i32 1
  %138 = fmul float %130, %137
  %139 = extractelement <2 x float> %6, i32 1
  %140 = fmul float %124, %139
  %141 = fadd float %138, %140
  %142 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %1, i64 0, i32 0, i64 1, i32 1
  store float %141, float* %142, align 4
  br label %150

143:                                              ; preds = %123
  %144 = fmul <2 x float> %9, %16
  %145 = extractelement <2 x float> %144, i32 0
  %146 = extractelement <2 x float> %144, i32 1
  %147 = fadd float %145, %146
  %148 = fcmp olt float %147, 0.000000e+00
  %149 = zext i1 %148 to i8
  store i8 %149, i8* %36, align 2
  br label %150

150:                                              ; preds = %112, %127, %129, %143, %27
  %151 = phi i32 [ 1, %27 ], [ %122, %112 ], [ 1, %143 ], [ 2, %129 ], [ 2, %127 ]
  ret i32 %151
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkPathStroker12tangentsMeetEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* nocapture readonly, %struct.SkPoint*, %struct.SkQuadConstruct*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkPoint, align 4
  %5 = alloca %struct.SkPoint, align 4
  %6 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 6
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = bitcast %struct.SkPoint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 0
  %16 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 1
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %14, %struct.SkPoint* nonnull %4, %struct.SkPoint* %15, %struct.SkPoint* %16) #10
  store i8 1, i8* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br label %17

17:                                               ; preds = %9, %3
  %18 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 7
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %23, align 4
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %24, align 4
  %25 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2
  %28 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 2
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %26, %struct.SkPoint* nonnull %5, %struct.SkPoint* %27, %struct.SkPoint* %28) #10
  store i8 1, i8* %18, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %29

29:                                               ; preds = %17, %21
  %30 = call i32 @_ZNK13SkPathStroker12intersectRayEP15SkQuadConstructNS_16IntersectRayTypeE(%class.SkPathStroker* %0, %struct.SkQuadConstruct* %2, i32 1)
  ret i32 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK13SkPathStroker14ptInQuadBoundsEPK7SkPointRS1_(%class.SkPathStroker* nocapture readonly, %struct.SkPoint* nocapture readonly, %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %5 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %6 = load float, float* %5, align 4
  %7 = load float, float* %4, align 4
  %8 = fcmp olt float %6, %7
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %10 = load float, float* %9, align 4
  %11 = select i1 %8, float %6, float %7
  %12 = fcmp olt float %10, %11
  %13 = select i1 %12, float %10, float %11
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 3
  %17 = load float, float* %16, align 4
  %18 = fadd float %15, %17
  %19 = fcmp olt float %18, %13
  br i1 %19, label %53, label %20

20:                                               ; preds = %3
  %21 = fcmp olt float %7, %6
  %22 = select i1 %21, float* %5, float* %4
  %23 = load float, float* %22, align 4
  %24 = fcmp olt float %23, %10
  %25 = select i1 %24, float* %9, float* %22
  %26 = load float, float* %25, align 4
  %27 = fsub float %15, %17
  %28 = fcmp ogt float %27, %26
  br i1 %28, label %53, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %31 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %32 = load float, float* %31, align 4
  %33 = load float, float* %30, align 4
  %34 = fcmp olt float %32, %33
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %36 = load float, float* %35, align 4
  %37 = select i1 %34, float %32, float %33
  %38 = fcmp olt float %36, %37
  %39 = select i1 %38, float %36, float %37
  %40 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %41 = load float, float* %40, align 4
  %42 = fadd float %17, %41
  %43 = fcmp olt float %42, %39
  br i1 %43, label %53, label %44

44:                                               ; preds = %29
  %45 = fcmp olt float %33, %32
  %46 = select i1 %45, float* %31, float* %30
  %47 = load float, float* %46, align 4
  %48 = fcmp olt float %47, %36
  %49 = select i1 %48, float* %35, float* %46
  %50 = load float, float* %49, align 4
  %51 = fsub float %41, %17
  %52 = fcmp ule float %51, %50
  br label %53

53:                                               ; preds = %20, %29, %44, %3
  %54 = phi i1 [ false, %3 ], [ false, %20 ], [ %52, %44 ], [ false, %29 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13SkPathStroker17strokeCloseEnoughEPK7SkPointS2_P15SkQuadConstruct(%class.SkPathStroker* nocapture readonly, %struct.SkPoint*, %struct.SkPoint* nocapture readonly, %struct.SkQuadConstruct* nocapture readonly) local_unnamed_addr #4 align 2 {
  %5 = alloca <2 x float>, align 8
  %6 = alloca <2 x float>, align 8
  %7 = alloca [2 x float], align 4
  %8 = tail call <2 x float> @_Z12SkEvalQuadAtPK7SkPointf(%struct.SkPoint* %1, float 5.000000e-01) #10
  %9 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 3
  %10 = load float, float* %9, align 4
  %11 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = fsub <2 x float> %12, %8
  %14 = fmul <2 x float> %13, %13
  %15 = extractelement <2 x float> %14, i32 0
  %16 = extractelement <2 x float> %14, i32 1
  %17 = fadd float %15, %16
  %18 = fmul float %10, %10
  %19 = fcmp ugt float %17, %18
  br i1 %19, label %55, label %20

20:                                               ; preds = %4
  %21 = bitcast <2 x float>* %5 to %struct.SkPoint*
  %22 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %3, i64 0, i32 0, i64 1, i32 0
  %24 = bitcast float* %23 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = bitcast %struct.SkQuadConstruct* %3 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 4
  %28 = fsub <2 x float> %25, %27
  store <2 x float> %28, <2 x float>* %5, align 8
  %29 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %3, i64 0, i32 0, i64 2, i32 0
  %30 = bitcast float* %29 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 4
  %32 = fsub <2 x float> %25, %31
  %33 = shufflevector <2 x float> %28, <2 x float> %32, <2 x i32> <i32 0, i32 2>
  %34 = fmul <2 x float> %33, %33
  %35 = shufflevector <2 x float> %28, <2 x float> %32, <2 x i32> <i32 1, i32 3>
  %36 = fmul <2 x float> %35, %35
  %37 = fadd <2 x float> %34, %36
  %38 = extractelement <2 x float> %37, i32 0
  %39 = extractelement <2 x float> %37, i32 1
  %40 = fcmp ogt float %38, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %20
  store <2 x float> %32, <2 x float>* %5, align 8
  br label %42

42:                                               ; preds = %41, %20
  %43 = phi <2 x float> [ %28, %41 ], [ %32, %20 ]
  %44 = phi float [ %38, %41 ], [ %39, %20 ]
  %45 = call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nonnull %21, float %44) #10
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %198

47:                                               ; preds = %42
  %48 = load <2 x float>, <2 x float>* %5, align 8
  %49 = fmul <2 x float> %43, %48
  %50 = extractelement <2 x float> %49, i32 0
  %51 = extractelement <2 x float> %49, i32 1
  %52 = fadd float %50, %51
  %53 = fcmp ogt float %52, 0.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br i1 %53, label %54, label %198

54:                                               ; preds = %47
  br label %198

55:                                               ; preds = %4
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %57 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %58 = load float, float* %57, align 4
  %59 = load float, float* %56, align 4
  %60 = fcmp olt float %58, %59
  %61 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %62 = load float, float* %61, align 4
  %63 = select i1 %60, float %58, float %59
  %64 = fcmp olt float %62, %63
  %65 = select i1 %64, float %62, float %63
  %66 = extractelement <2 x float> %12, i32 0
  %67 = fadd float %10, %66
  %68 = fcmp olt float %67, %65
  br i1 %68, label %198, label %69

69:                                               ; preds = %55
  %70 = fcmp olt float %59, %58
  %71 = select i1 %70, float* %57, float* %56
  %72 = load float, float* %71, align 4
  %73 = fcmp olt float %72, %62
  %74 = select i1 %73, float* %61, float* %71
  %75 = load float, float* %74, align 4
  %76 = fsub float %66, %10
  %77 = fcmp ogt float %76, %75
  br i1 %77, label %198, label %78

78:                                               ; preds = %69
  %79 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %80 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %81 = load float, float* %80, align 4
  %82 = load float, float* %79, align 4
  %83 = fcmp olt float %81, %82
  %84 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %85 = load float, float* %84, align 4
  %86 = select i1 %83, float %81, float %82
  %87 = fcmp olt float %85, %86
  %88 = select i1 %87, float %85, float %86
  %89 = extractelement <2 x float> %12, i32 1
  %90 = fadd float %10, %89
  %91 = fcmp olt float %90, %88
  br i1 %91, label %198, label %92

92:                                               ; preds = %78
  %93 = fcmp olt float %82, %81
  %94 = select i1 %93, float* %80, float* %79
  %95 = load float, float* %94, align 4
  %96 = fcmp olt float %95, %85
  %97 = select i1 %96, float* %84, float* %94
  %98 = load float, float* %97, align 4
  %99 = fsub float %89, %10
  %100 = fcmp ule float %99, %98
  br i1 %100, label %101, label %198

101:                                              ; preds = %92
  %102 = bitcast [2 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #10
  %103 = getelementptr inbounds [2 x float], [2 x float]* %7, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %103, align 4
  %104 = getelementptr inbounds [2 x float], [2 x float]* %7, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %104, align 4
  %105 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1, i32 0
  %106 = load float, float* %105, align 4
  %107 = extractelement <2 x float> %12, i32 0
  %108 = fsub float %106, %107
  %109 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 1, i32 1
  %110 = load float, float* %109, align 4
  %111 = extractelement <2 x float> %12, i32 1
  %112 = fsub float %110, %111
  %113 = insertelement <2 x float> undef, float %81, i32 0
  %114 = insertelement <2 x float> %113, float %82, i32 1
  %115 = shufflevector <2 x float> %12, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %116 = fsub <2 x float> %114, %115
  %117 = insertelement <2 x float> undef, float %108, i32 0
  %118 = shufflevector <2 x float> %117, <2 x float> undef, <2 x i32> zeroinitializer
  %119 = fmul <2 x float> %118, %116
  %120 = insertelement <2 x float> undef, float %58, i32 0
  %121 = insertelement <2 x float> %120, float %59, i32 1
  %122 = shufflevector <2 x float> %12, <2 x float> undef, <2 x i32> zeroinitializer
  %123 = fsub <2 x float> %121, %122
  %124 = insertelement <2 x float> undef, float %112, i32 0
  %125 = shufflevector <2 x float> %124, <2 x float> undef, <2 x i32> zeroinitializer
  %126 = fmul <2 x float> %123, %125
  %127 = fsub <2 x float> %119, %126
  %128 = fsub float %85, %111
  %129 = fmul float %108, %128
  %130 = fsub float %62, %107
  %131 = fmul float %130, %112
  %132 = fsub float %129, %131
  %133 = extractelement <2 x float> %127, i32 0
  %134 = fmul float %133, 2.000000e+00
  %135 = extractelement <2 x float> %127, i32 1
  %136 = fsub float %135, %134
  %137 = fadd float %132, %136
  %138 = fsub float %133, %135
  %139 = fmul float %138, 2.000000e+00
  %140 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %137, float %139, float %135, float* nonnull %103) #10
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %196

142:                                              ; preds = %101
  %143 = load float, float* %103, align 4
  %144 = call <2 x float> @_Z12SkEvalQuadAtPK7SkPointf(%struct.SkPoint* %1, float %143) #10
  %145 = load float, float* %9, align 4
  %146 = load float, float* %103, align 4
  %147 = fadd float %146, -5.000000e-01
  %148 = call float @llvm.fabs.f32(float %147)
  %149 = fmul float %148, 2.000000e+00
  %150 = fsub float 1.000000e+00, %149
  %151 = fmul float %145, %150
  %152 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %153 = load <2 x float>, <2 x float>* %152, align 4
  %154 = fsub <2 x float> %153, %144
  %155 = fmul <2 x float> %154, %154
  %156 = extractelement <2 x float> %155, i32 0
  %157 = extractelement <2 x float> %155, i32 1
  %158 = fadd float %156, %157
  %159 = fmul float %151, %151
  %160 = fcmp ugt float %158, %159
  br i1 %160, label %196, label %161

161:                                              ; preds = %142
  %162 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %163 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #10
  %164 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %3, i64 0, i32 0, i64 1, i32 0
  %165 = bitcast float* %164 to <2 x float>*
  %166 = load <2 x float>, <2 x float>* %165, align 4
  %167 = bitcast %struct.SkQuadConstruct* %3 to <2 x float>*
  %168 = load <2 x float>, <2 x float>* %167, align 4
  %169 = fsub <2 x float> %166, %168
  store <2 x float> %169, <2 x float>* %6, align 8
  %170 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %3, i64 0, i32 0, i64 2, i32 0
  %171 = bitcast float* %170 to <2 x float>*
  %172 = load <2 x float>, <2 x float>* %171, align 4
  %173 = fsub <2 x float> %166, %172
  %174 = shufflevector <2 x float> %169, <2 x float> %173, <2 x i32> <i32 0, i32 2>
  %175 = fmul <2 x float> %174, %174
  %176 = shufflevector <2 x float> %169, <2 x float> %173, <2 x i32> <i32 1, i32 3>
  %177 = fmul <2 x float> %176, %176
  %178 = fadd <2 x float> %175, %177
  %179 = extractelement <2 x float> %178, i32 0
  %180 = extractelement <2 x float> %178, i32 1
  %181 = fcmp ogt float %179, %180
  br i1 %181, label %182, label %183

182:                                              ; preds = %161
  store <2 x float> %173, <2 x float>* %6, align 8
  br label %183

183:                                              ; preds = %182, %161
  %184 = phi <2 x float> [ %169, %182 ], [ %173, %161 ]
  %185 = phi float [ %179, %182 ], [ %180, %161 ]
  %186 = call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nonnull %162, float %185) #10
  br i1 %186, label %188, label %187

187:                                              ; preds = %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #10
  br label %196

188:                                              ; preds = %183
  %189 = load <2 x float>, <2 x float>* %6, align 8
  %190 = fmul <2 x float> %184, %189
  %191 = extractelement <2 x float> %190, i32 0
  %192 = extractelement <2 x float> %190, i32 1
  %193 = fadd float %191, %192
  %194 = fcmp ogt float %193, 0.000000e+00
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #10
  br i1 %194, label %195, label %196

195:                                              ; preds = %188
  br label %196

196:                                              ; preds = %142, %187, %188, %195, %101
  %197 = phi i32 [ 0, %101 ], [ 0, %142 ], [ 0, %195 ], [ 2, %188 ], [ 2, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #10
  br label %198

198:                                              ; preds = %78, %69, %55, %54, %47, %46, %92, %196
  %199 = phi i32 [ %197, %196 ], [ 0, %92 ], [ 0, %54 ], [ 2, %47 ], [ 2, %46 ], [ 0, %55 ], [ 0, %69 ], [ 0, %78 ]
  ret i32 %199
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkPathStroker16compareQuadCubicEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* nocapture readonly, %struct.SkPoint*, %struct.SkQuadConstruct*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkPoint, align 4
  %5 = alloca %struct.SkPoint, align 4
  %6 = alloca [2 x %struct.SkPoint], align 16
  %7 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 6
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = bitcast %struct.SkPoint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %13, align 4
  %14 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 0
  %17 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 1
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %15, %struct.SkPoint* nonnull %4, %struct.SkPoint* %16, %struct.SkPoint* %17) #10
  store i8 1, i8* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %18

18:                                               ; preds = %10, %3
  %19 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 7
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %24, align 4
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %25, align 4
  %26 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2
  %29 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 2
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %27, %struct.SkPoint* nonnull %5, %struct.SkPoint* %28, %struct.SkPoint* %29) #10
  store i8 1, i8* %19, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %30

30:                                               ; preds = %18, %22
  %31 = call i32 @_ZNK13SkPathStroker12intersectRayEP15SkQuadConstructNS_16IntersectRayTypeE(%class.SkPathStroker* %0, %struct.SkQuadConstruct* %2, i32 0)
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %33, label %42

33:                                               ; preds = %30
  %34 = bitcast [2 x %struct.SkPoint]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %6, i64 0, i64 0
  %36 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %6, i64 0, i64 1
  %37 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 4
  %38 = bitcast [2 x %struct.SkPoint]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %38, i8 -1, i64 16, i1 false)
  %39 = load float, float* %37, align 4
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %39, %struct.SkPoint* %36, %struct.SkPoint* nonnull %35, %struct.SkPoint* null)
  %40 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 0
  %41 = call i32 @_ZNK13SkPathStroker17strokeCloseEnoughEPK7SkPointS2_P15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* %40, %struct.SkPoint* nonnull %35, %struct.SkQuadConstruct* %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  br label %42

42:                                               ; preds = %30, %33
  %43 = phi i32 [ %41, %33 ], [ %31, %30 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13SkPathStroker16compareQuadConicERK7SkConicP15SkQuadConstruct(%class.SkPathStroker* nocapture readonly, %struct.SkConic* dereferenceable(28), %struct.SkQuadConstruct*) local_unnamed_addr #4 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca %struct.SkPoint, align 4
  %6 = alloca %struct.SkPoint, align 4
  %7 = alloca [2 x %struct.SkPoint], align 16
  %8 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 6
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %3
  %12 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %13, align 4
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %14, align 4
  %15 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 0
  %18 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 1
  call void @_ZNK13SkPathStroker12conicPerpRayERK7SkConicfP7SkPointS4_S4_(%class.SkPathStroker* %0, %struct.SkConic* dereferenceable(28) %1, float %16, %struct.SkPoint* nonnull %5, %struct.SkPoint* %17, %struct.SkPoint* %18) #10
  store i8 1, i8* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %19

19:                                               ; preds = %11, %3
  %20 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 7
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = bitcast %struct.SkPoint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %25, align 4
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %26, align 4
  %27 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2
  %30 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 2
  call void @_ZNK13SkPathStroker12conicPerpRayERK7SkConicfP7SkPointS4_S4_(%class.SkPathStroker* %0, %struct.SkConic* dereferenceable(28) %1, float %28, %struct.SkPoint* nonnull %6, %struct.SkPoint* %29, %struct.SkPoint* %30) #10
  store i8 1, i8* %20, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %31

31:                                               ; preds = %19, %23
  %32 = call i32 @_ZNK13SkPathStroker12intersectRayEP15SkQuadConstructNS_16IntersectRayTypeE(%class.SkPathStroker* %0, %struct.SkQuadConstruct* %2, i32 0)
  %33 = icmp eq i32 %32, 2
  br i1 %33, label %34, label %87

34:                                               ; preds = %31
  %35 = bitcast [2 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #10
  %36 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0
  %37 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0, i32 0
  %38 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0, i32 1
  %39 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 1
  %40 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %39, i64 0, i32 0
  %41 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 1, i32 1
  %42 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 4
  %43 = bitcast [2 x %struct.SkPoint]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %43, i8 -1, i64 16, i1 false)
  %44 = load float, float* %42, align 4
  %45 = bitcast <2 x float>* %4 to %struct.SkPoint*
  %46 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  %47 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %47, align 8
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %45, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  call void @_ZNK7SkConic6evalAtEfP7SkPointS1_(%struct.SkConic* %1, float %44, %struct.SkPoint* %39, %struct.SkPoint* nonnull %45) #10
  %49 = load float, float* %47, align 8
  %50 = fcmp oeq float %49, 0.000000e+00
  %51 = load float, float* %48, align 4
  %52 = fcmp oeq float %51, 0.000000e+00
  %53 = and i1 %50, %52
  br i1 %53, label %54, label %61

54:                                               ; preds = %34
  %55 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %1, i64 0, i32 0, i64 2, i32 0
  %56 = bitcast float* %55 to <2 x float>*
  %57 = load <2 x float>, <2 x float>* %56, align 4
  %58 = bitcast %struct.SkConic* %1 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  %60 = fsub <2 x float> %57, %59
  store <2 x float> %60, <2 x float>* %4, align 8
  br label %61

61:                                               ; preds = %54, %34
  %62 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %63 = load float, float* %62, align 8
  %64 = call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nonnull %45, float %63) #10
  br i1 %64, label %65, label %68

65:                                               ; preds = %61
  %66 = load float, float* %48, align 4
  %67 = load float, float* %47, align 8
  br label %73

68:                                               ; preds = %61
  %69 = bitcast %class.SkPathStroker* %0 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = bitcast <2 x float>* %4 to i32*
  store i32 %70, i32* %71, align 8
  store float 0.000000e+00, float* %48, align 4
  %72 = bitcast i32 %70 to float
  br label %73

73:                                               ; preds = %65, %68
  %74 = phi float [ %67, %65 ], [ %72, %68 ]
  %75 = phi float [ %66, %65 ], [ 0.000000e+00, %68 ]
  %76 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %77 = load i32, i32* %76, align 8
  %78 = sitofp i32 %77 to float
  %79 = load float, float* %40, align 8
  %80 = fmul float %75, %78
  %81 = fadd float %79, %80
  store float %81, float* %37, align 16
  %82 = load float, float* %41, align 4
  %83 = fmul float %74, %78
  %84 = fsub float %82, %83
  store float %84, float* %38, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  %85 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 0
  %86 = call i32 @_ZNK13SkPathStroker17strokeCloseEnoughEPK7SkPointS2_P15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* %85, %struct.SkPoint* nonnull %36, %struct.SkQuadConstruct* %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #10
  br label %87

87:                                               ; preds = %31, %73
  %88 = phi i32 [ %86, %73 ], [ %32, %31 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN13SkPathStroker15compareQuadQuadEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* nocapture readonly, %struct.SkPoint*, %struct.SkQuadConstruct*) local_unnamed_addr #4 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca %struct.SkPoint, align 4
  %6 = alloca %struct.SkPoint, align 4
  %7 = alloca [2 x %struct.SkPoint], align 16
  %8 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 6
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %3
  %12 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %13, align 4
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %14, align 4
  %15 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 0
  %18 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 1
  call void @_ZNK13SkPathStroker11quadPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %16, %struct.SkPoint* nonnull %5, %struct.SkPoint* %17, %struct.SkPoint* %18)
  store i8 1, i8* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %19

19:                                               ; preds = %3, %11
  %20 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 7
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = bitcast %struct.SkPoint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %25, align 4
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %26, align 4
  %27 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2
  %30 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 2
  call void @_ZNK13SkPathStroker11quadPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %28, %struct.SkPoint* nonnull %6, %struct.SkPoint* %29, %struct.SkPoint* %30)
  store i8 1, i8* %20, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %31

31:                                               ; preds = %19, %23
  %32 = call i32 @_ZNK13SkPathStroker12intersectRayEP15SkQuadConstructNS_16IntersectRayTypeE(%class.SkPathStroker* %0, %struct.SkQuadConstruct* %2, i32 0)
  %33 = icmp eq i32 %32, 2
  br i1 %33, label %34, label %87

34:                                               ; preds = %31
  %35 = bitcast [2 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #10
  %36 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0
  %37 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0, i32 0
  %38 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0, i32 1
  %39 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 1
  %40 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %39, i64 0, i32 0
  %41 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 1, i32 1
  %42 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 4
  %43 = bitcast [2 x %struct.SkPoint]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %43, i8 -1, i64 16, i1 false)
  %44 = load float, float* %42, align 4
  %45 = bitcast <2 x float>* %4 to %struct.SkPoint*
  %46 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  %47 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %47, align 8
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %45, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  call void @_Z12SkEvalQuadAtPK7SkPointfPS_S2_(%struct.SkPoint* %1, float %44, %struct.SkPoint* %39, %struct.SkPoint* nonnull %45) #10
  %49 = load float, float* %47, align 8
  %50 = fcmp oeq float %49, 0.000000e+00
  %51 = load float, float* %48, align 4
  %52 = fcmp oeq float %51, 0.000000e+00
  %53 = and i1 %50, %52
  br i1 %53, label %54, label %61

54:                                               ; preds = %34
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %56 = bitcast float* %55 to <2 x float>*
  %57 = load <2 x float>, <2 x float>* %56, align 4
  %58 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %59 = load <2 x float>, <2 x float>* %58, align 4
  %60 = fsub <2 x float> %57, %59
  store <2 x float> %60, <2 x float>* %4, align 8
  br label %61

61:                                               ; preds = %54, %34
  %62 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %63 = load float, float* %62, align 8
  %64 = call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nonnull %45, float %63) #10
  br i1 %64, label %65, label %68

65:                                               ; preds = %61
  %66 = load float, float* %48, align 4
  %67 = load float, float* %47, align 8
  br label %73

68:                                               ; preds = %61
  %69 = bitcast %class.SkPathStroker* %0 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = bitcast <2 x float>* %4 to i32*
  store i32 %70, i32* %71, align 8
  store float 0.000000e+00, float* %48, align 4
  %72 = bitcast i32 %70 to float
  br label %73

73:                                               ; preds = %65, %68
  %74 = phi float [ %67, %65 ], [ %72, %68 ]
  %75 = phi float [ %66, %65 ], [ 0.000000e+00, %68 ]
  %76 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %77 = load i32, i32* %76, align 8
  %78 = sitofp i32 %77 to float
  %79 = load float, float* %40, align 8
  %80 = fmul float %75, %78
  %81 = fadd float %79, %80
  store float %81, float* %37, align 16
  %82 = load float, float* %41, align 4
  %83 = fmul float %74, %78
  %84 = fsub float %82, %83
  store float %84, float* %38, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  %85 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 0
  %86 = call i32 @_ZNK13SkPathStroker17strokeCloseEnoughEPK7SkPointS2_P15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* %85, %struct.SkPoint* nonnull %36, %struct.SkQuadConstruct* %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #10
  br label %87

87:                                               ; preds = %31, %73
  %88 = phi i32 [ %86, %73 ], [ %32, %31 ]
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker17addDegenerateLineEPK15SkQuadConstruct(%class.SkPathStroker*, %struct.SkQuadConstruct* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  %6 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %7 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %8 = select i1 %5, %class.SkPath* %6, %class.SkPath* %7
  %9 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %1, i64 0, i32 0, i64 2, i32 0
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %1, i64 0, i32 0, i64 2, i32 1
  %12 = load float, float* %11, align 4
  %13 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %8, float %10, float %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkPathStroker14cubicMidOnLineEPK7SkPointPK15SkQuadConstruct(%class.SkPathStroker* nocapture readonly, %struct.SkPoint*, %struct.SkQuadConstruct* nocapture readonly) local_unnamed_addr #4 align 2 {
  %4 = alloca %struct.SkPoint, align 4
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %struct.SkPoint*
  %7 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %8, align 8
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %10 = bitcast %struct.SkPoint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %12, align 4
  %13 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 4
  %14 = load float, float* %13, align 4
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %14, %struct.SkPoint* nonnull %4, %struct.SkPoint* nonnull %6, %struct.SkPoint* null) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %15 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 0
  %16 = bitcast float* %15 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = bitcast %struct.SkQuadConstruct* %2 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = extractelement <2 x float> %17, i32 0
  %21 = extractelement <2 x float> %19, i32 0
  %22 = fsub float %20, %21
  %23 = extractelement <2 x float> %17, i32 1
  %24 = extractelement <2 x float> %19, i32 1
  %25 = fsub float %23, %24
  %26 = load <2 x float>, <2 x float>* %5, align 8
  %27 = fsub <2 x float> %26, %19
  %28 = extractelement <2 x float> %27, i32 0
  %29 = extractelement <2 x float> %27, i32 1
  %30 = insertelement <2 x float> undef, float %22, i32 0
  %31 = shufflevector <2 x float> %30, <2 x float> undef, <2 x i32> zeroinitializer
  %32 = insertelement <2 x float> undef, float %28, i32 0
  %33 = insertelement <2 x float> %32, float %22, i32 1
  %34 = fmul <2 x float> %31, %33
  %35 = insertelement <2 x float> undef, float %25, i32 0
  %36 = shufflevector <2 x float> %35, <2 x float> undef, <2 x i32> zeroinitializer
  %37 = insertelement <2 x float> undef, float %29, i32 0
  %38 = insertelement <2 x float> %37, float %25, i32 1
  %39 = fmul <2 x float> %36, %38
  %40 = fadd <2 x float> %34, %39
  %41 = extractelement <2 x float> %40, i32 0
  %42 = extractelement <2 x float> %40, i32 1
  %43 = fdiv float %41, %42
  %44 = fcmp oge float %43, 0.000000e+00
  %45 = fcmp ole float %43, 1.000000e+00
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %58

47:                                               ; preds = %3
  %48 = fsub float 1.000000e+00, %43
  %49 = insertelement <2 x float> undef, float %48, i32 0
  %50 = shufflevector <2 x float> %49, <2 x float> undef, <2 x i32> zeroinitializer
  %51 = fmul <2 x float> %19, %50
  %52 = insertelement <2 x float> undef, float %43, i32 0
  %53 = shufflevector <2 x float> %52, <2 x float> undef, <2 x i32> zeroinitializer
  %54 = fmul <2 x float> %17, %53
  %55 = fadd <2 x float> %54, %51
  %56 = fsub <2 x float> %55, %26
  %57 = fmul <2 x float> %56, %56
  br label %60

58:                                               ; preds = %3
  %59 = fmul <2 x float> %27, %27
  br label %60

60:                                               ; preds = %47, %58
  %61 = phi <2 x float> [ %57, %47 ], [ %59, %58 ]
  %62 = extractelement <2 x float> %61, i32 0
  %63 = extractelement <2 x float> %61, i32 1
  %64 = fadd float %62, %63
  %65 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 4
  %66 = load float, float* %65, align 8
  %67 = fcmp olt float %64, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkPathStroker11cubicStrokeEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker*, %struct.SkPoint*, %struct.SkQuadConstruct*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkPoint, align 4
  %5 = alloca %struct.SkPoint, align 4
  %6 = alloca %struct.SkQuadConstruct, align 8
  %7 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 24
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %69

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 6
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  %15 = bitcast %struct.SkPoint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %17, align 4
  %18 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 0
  %21 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 1
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %19, %struct.SkPoint* nonnull %4, %struct.SkPoint* %20, %struct.SkPoint* %21) #10
  store i8 1, i8* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %22

22:                                               ; preds = %14, %10
  %23 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 7
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = bitcast %struct.SkPoint* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %28, align 4
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %29, align 4
  %30 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2
  %33 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 2
  call void @_ZNK13SkPathStroker12cubicPerpRayEPK7SkPointfPS0_S3_S3_(%class.SkPathStroker* %0, %struct.SkPoint* %1, float %31, %struct.SkPoint* nonnull %5, %struct.SkPoint* %32, %struct.SkPoint* %33) #10
  store i8 1, i8* %23, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %34

34:                                               ; preds = %22, %26
  %35 = call i32 @_ZNK13SkPathStroker12intersectRayEP15SkQuadConstructNS_16IntersectRayTypeE(%class.SkPathStroker* %0, %struct.SkQuadConstruct* %2, i32 1) #10
  switch i32 %35, label %36 [
    i32 2, label %65
    i32 1, label %51
  ]

36:                                               ; preds = %34
  %37 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 3
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 0
  %40 = bitcast %struct.SkQuadConstruct* %2 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 4
  %42 = bitcast float* %39 to <2 x float>*
  %43 = load <2 x float>, <2 x float>* %42, align 4
  %44 = fsub <2 x float> %41, %43
  %45 = fmul <2 x float> %44, %44
  %46 = extractelement <2 x float> %45, i32 0
  %47 = extractelement <2 x float> %45, i32 1
  %48 = fadd float %46, %47
  %49 = fmul float %38, %38
  %50 = fcmp ugt float %48, %49
  br i1 %50, label %66, label %51

51:                                               ; preds = %36, %34
  %52 = call zeroext i1 @_ZNK13SkPathStroker14cubicMidOnLineEPK7SkPointPK15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* %1, %struct.SkQuadConstruct* %2)
  br i1 %52, label %53, label %66

53:                                               ; preds = %51
  %54 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 1
  %57 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %58 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %59 = select i1 %56, %class.SkPath* %57, %class.SkPath* %58
  %60 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 0
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 1
  %63 = load float, float* %62, align 4
  %64 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %59, float %61, float %63) #10
  br label %200

65:                                               ; preds = %34
  store i8 1, i8* %7, align 8
  br label %69

66:                                               ; preds = %36, %51
  %67 = load i8, i8* %7, align 8
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %103, label %69

69:                                               ; preds = %3, %65, %66
  %70 = call i32 @_ZN13SkPathStroker16compareQuadCubicEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* %1, %struct.SkQuadConstruct* %2)
  switch i32 %70, label %103 [
    i32 2, label %71
    i32 1, label %87
  ]

71:                                               ; preds = %69
  %72 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 1
  %75 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %76 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %77 = select i1 %74, %class.SkPath* %75, %class.SkPath* %76
  %78 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 1, i32 0
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 1, i32 1
  %81 = load float, float* %80, align 4
  %82 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 0
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 1
  %85 = load float, float* %84, align 4
  %86 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %77, float %79, float %81, float %83, float %85) #10
  br label %200

87:                                               ; preds = %69
  %88 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 8
  %89 = load i8, i8* %88, align 2, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 1
  %95 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %96 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %97 = select i1 %94, %class.SkPath* %95, %class.SkPath* %96
  %98 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 0
  %99 = load float, float* %98, align 4
  %100 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 1
  %101 = load float, float* %100, align 4
  %102 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %97, float %99, float %101) #10
  br label %200

103:                                              ; preds = %69, %87, %66
  %104 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 0
  %105 = bitcast float* %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 2139095040
  %108 = icmp eq i32 %107, 2139095040
  br i1 %108, label %200, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2, i32 1
  %111 = bitcast float* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = and i32 %112, 2139095040
  %114 = icmp eq i32 %113, 2139095040
  br i1 %114, label %200, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 23
  %117 = load i32, i32* %116, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %116, align 4
  %119 = load i8, i8* %7, align 8, !range !2
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [4 x i32], [4 x i32]* @_ZL16kRecursiveLimits, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = icmp slt i32 %117, %122
  br i1 %123, label %124, label %200

124:                                              ; preds = %115
  %125 = bitcast %struct.SkQuadConstruct* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %125) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %125, i8* align 4 bitcast ({ [3 x %struct.SkPoint], %struct.SkPoint, %struct.SkPoint, float, float, float, i8, i8, i8, [1 x i8] }* @__const._ZN13SkPathStroker7cubicToERK7SkPointS2_S2_.quadPts to i8*), i64 56, i1 false)
  %126 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 3
  %127 = load float, float* %126, align 4
  %128 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 4
  %129 = load float, float* %128, align 4
  %130 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %6, i64 0, i32 3
  store float %127, float* %130, align 8
  %131 = fadd float %127, %129
  %132 = fmul float %131, 5.000000e-01
  %133 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %6, i64 0, i32 4
  store float %132, float* %133, align 4
  %134 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %6, i64 0, i32 5
  store float %129, float* %134, align 8
  %135 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %6, i64 0, i32 7
  store i8 0, i8* %135, align 1
  %136 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %6, i64 0, i32 6
  store i8 0, i8* %136, align 4
  %137 = fcmp ogt float %132, %127
  %138 = fcmp olt float %132, %129
  %139 = and i1 %137, %138
  br i1 %139, label %152, label %140

140:                                              ; preds = %124
  %141 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 1
  %144 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %145 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %146 = select i1 %143, %class.SkPath* %144, %class.SkPath* %145
  %147 = load float, float* %104, align 4
  %148 = load float, float* %110, align 4
  %149 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %146, float %147, float %148) #10
  %150 = load i32, i32* %116, align 4
  %151 = add nsw i32 %150, -1
  store i32 %151, i32* %116, align 4
  br label %198

152:                                              ; preds = %124
  %153 = bitcast %struct.SkQuadConstruct* %2 to i64*
  %154 = bitcast %struct.SkQuadConstruct* %6 to i64*
  %155 = load i64, i64* %153, align 4
  store i64 %155, i64* %154, align 8
  %156 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 1
  %157 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %6, i64 0, i32 1
  %158 = bitcast %struct.SkPoint* %156 to i64*
  %159 = bitcast %struct.SkPoint* %157 to i64*
  %160 = load i64, i64* %158, align 4
  store i64 %160, i64* %159, align 8
  store i8 1, i8* %136, align 4
  %161 = call zeroext i1 @_ZN13SkPathStroker11cubicStrokeEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* %1, %struct.SkQuadConstruct* nonnull %6)
  br i1 %161, label %162, label %198

162:                                              ; preds = %152
  %163 = load float, float* %128, align 4
  %164 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 5
  %165 = load float, float* %164, align 4
  store float %163, float* %130, align 8
  %166 = fadd float %163, %165
  %167 = fmul float %166, 5.000000e-01
  store float %167, float* %133, align 4
  store float %165, float* %134, align 8
  store i8 0, i8* %135, align 1
  store i8 0, i8* %136, align 4
  %168 = fcmp ogt float %167, %163
  %169 = fcmp olt float %167, %165
  %170 = and i1 %168, %169
  br i1 %170, label %183, label %171

171:                                              ; preds = %162
  %172 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %173 = load i32, i32* %172, align 8
  %174 = icmp eq i32 %173, 1
  %175 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 20
  %176 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 19
  %177 = select i1 %174, %class.SkPath* %175, %class.SkPath* %176
  %178 = load float, float* %104, align 4
  %179 = load float, float* %110, align 4
  %180 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %177, float %178, float %179) #10
  %181 = load i32, i32* %116, align 4
  %182 = add nsw i32 %181, -1
  store i32 %182, i32* %116, align 4
  br label %198

183:                                              ; preds = %162
  %184 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 0, i64 2
  %185 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %6, i64 0, i32 0, i64 2
  %186 = bitcast %struct.SkPoint* %184 to i64*
  %187 = bitcast %struct.SkPoint* %185 to i64*
  %188 = load i64, i64* %186, align 4
  store i64 %188, i64* %187, align 8
  %189 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %2, i64 0, i32 2
  %190 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %6, i64 0, i32 2
  %191 = bitcast %struct.SkPoint* %189 to i64*
  %192 = bitcast %struct.SkPoint* %190 to i64*
  %193 = load i64, i64* %191, align 4
  store i64 %193, i64* %192, align 8
  store i8 1, i8* %135, align 1
  %194 = call zeroext i1 @_ZN13SkPathStroker11cubicStrokeEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* %1, %struct.SkQuadConstruct* nonnull %6)
  br i1 %194, label %195, label %198

195:                                              ; preds = %183
  %196 = load i32, i32* %116, align 4
  %197 = add nsw i32 %196, -1
  store i32 %197, i32* %116, align 4
  br label %198

198:                                              ; preds = %183, %152, %195, %171, %140
  %199 = phi i1 [ true, %195 ], [ true, %171 ], [ true, %140 ], [ false, %152 ], [ false, %183 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %125) #10
  br label %200

200:                                              ; preds = %109, %103, %115, %91, %71, %53, %198
  %201 = phi i1 [ %199, %198 ], [ true, %53 ], [ true, %71 ], [ true, %91 ], [ false, %109 ], [ false, %103 ], [ false, %115 ]
  ret i1 %201
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath*, float, float, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkPathStroker7cubicToERK7SkPointS2_S2_(%class.SkPathStroker*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x %struct.SkPoint], align 16
  %6 = alloca [3 x %struct.SkPoint], align 16
  %7 = alloca %struct.SkPoint*, align 8
  %8 = alloca %struct.SkPoint, align 4
  %9 = alloca %struct.SkPoint, align 4
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %struct.SkPoint*
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %struct.SkPoint*
  %14 = alloca [2 x float], align 4
  %15 = alloca %struct.SkQuadConstruct, align 4
  %16 = alloca %struct.SkPoint, align 4
  %17 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #10
  %18 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0
  %19 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 10
  %20 = bitcast %struct.SkPoint* %19 to i64*
  %21 = bitcast [4 x %struct.SkPoint]* %5 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 16
  %23 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 1
  %24 = bitcast %struct.SkPoint* %1 to i64*
  %25 = bitcast %struct.SkPoint* %23 to i64*
  %26 = load i64, i64* %24, align 4
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 2
  %28 = bitcast %struct.SkPoint* %2 to i64*
  %29 = bitcast %struct.SkPoint* %27 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 16
  %31 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 3
  %32 = bitcast %struct.SkPoint* %3 to i64*
  %33 = bitcast %struct.SkPoint* %31 to i64*
  %34 = load i64, i64* %32, align 4
  store i64 %34, i64* %33, align 8
  %35 = bitcast [3 x %struct.SkPoint]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  %36 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 0
  %37 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 1
  %38 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %6, i64 0, i64 2
  %39 = bitcast %struct.SkPoint** %7 to i8*
  %40 = bitcast [3 x %struct.SkPoint]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %40, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  store %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), %struct.SkPoint** %7, align 8
  %41 = call i32 @_ZN13SkPathStroker16CheckCubicLinearEPK7SkPointPS0_PS2_(%struct.SkPoint* nonnull %18, %struct.SkPoint* nonnull %36, %struct.SkPoint** nonnull %7)
  switch i32 %41, label %44 [
    i32 0, label %42
    i32 1, label %43
  ]

42:                                               ; preds = %4
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %3, %"class.SkPath::Iter"* null)
  br label %132

43:                                               ; preds = %4
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %3, %"class.SkPath::Iter"* null)
  br label %132

44:                                               ; preds = %4
  %45 = add i32 %41, -3
  %46 = icmp ult i32 %45, 3
  br i1 %46, label %47, label %57

47:                                               ; preds = %44
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* nonnull dereferenceable(8) %36, %"class.SkPath::Iter"* null)
  %48 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 18
  %49 = bitcast void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = call void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* @_ZN13SkStrokerPriv11JoinFactoryEN7SkPaint4JoinE(i8 zeroext 1) #10
  store void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* %51, void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)** %48, align 8
  %52 = icmp sgt i32 %41, 3
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %37, %"class.SkPath::Iter"* null)
  %54 = icmp eq i32 %41, 5
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %38, %"class.SkPath::Iter"* null)
  br label %56

56:                                               ; preds = %47, %55, %53
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %3, %"class.SkPath::Iter"* null)
  store i64 %50, i64* %49, align 8
  br label %132

57:                                               ; preds = %44
  %58 = bitcast %struct.SkPoint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  %59 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %59, align 4
  %60 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %60, align 4
  %61 = bitcast %struct.SkPoint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %62 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %62, align 4
  %63 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %63, align 4
  %64 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10
  %65 = bitcast i64* %10 to float*
  store float 0xFFFFFFFFE0000000, float* %65, align 8
  %66 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %66, align 4
  %67 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #10
  %68 = bitcast i64* %12 to float*
  store float 0xFFFFFFFFE0000000, float* %68, align 8
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %69, align 4
  %70 = load %struct.SkPoint*, %struct.SkPoint** %7, align 8
  %71 = call zeroext i1 @_ZN13SkPathStroker9preJoinToERK7SkPointPS0_S3_b(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %70, %struct.SkPoint* nonnull %8, %struct.SkPoint* nonnull %9, i1 zeroext false)
  br i1 %71, label %73, label %72

72:                                               ; preds = %57
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* %0, %struct.SkPoint* dereferenceable(8) %3, %"class.SkPath::Iter"* null)
  br label %131

73:                                               ; preds = %57
  %74 = bitcast [2 x float]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #10
  %75 = getelementptr inbounds [2 x float], [2 x float]* %14, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %75, align 4
  %76 = getelementptr inbounds [2 x float], [2 x float]* %14, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %76, align 4
  %77 = call i32 @_Z22SkFindCubicInflectionsPK7SkPointPf(%struct.SkPoint* nonnull %18, float* nonnull %75) #10
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %91, label %79

79:                                               ; preds = %73
  %80 = bitcast %struct.SkQuadConstruct* %15 to i8*
  %81 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 22
  %82 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 24
  %83 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %15, i64 0, i32 3
  %84 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %15, i64 0, i32 4
  %85 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %15, i64 0, i32 5
  %86 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %15, i64 0, i32 7
  %87 = getelementptr inbounds %struct.SkQuadConstruct, %struct.SkQuadConstruct* %15, i64 0, i32 6
  %88 = sext i32 %77 to i64
  %89 = add nuw i32 %77, 1
  %90 = zext i32 %89 to i64
  br label %94

91:                                               ; preds = %101, %73
  %92 = call float @_Z15SkFindCubicCuspPK7SkPoint(%struct.SkPoint* nonnull %18) #10
  %93 = fcmp ogt float %92, 0.000000e+00
  br i1 %93, label %109, label %119

94:                                               ; preds = %101, %79
  %95 = phi i64 [ %107, %101 ], [ 0, %79 ]
  %96 = phi float [ %102, %101 ], [ 0.000000e+00, %79 ]
  %97 = icmp slt i64 %95, %88
  br i1 %97, label %98, label %101

98:                                               ; preds = %94
  %99 = getelementptr inbounds [2 x float], [2 x float]* %14, i64 0, i64 %95
  %100 = load float, float* %99, align 4
  br label %101

101:                                              ; preds = %94, %98
  %102 = phi float [ %100, %98 ], [ 1.000000e+00, %94 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %80) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %80, i8* align 4 bitcast ({ [3 x %struct.SkPoint], %struct.SkPoint, %struct.SkPoint, float, float, float, i8, i8, i8, [1 x i8] }* @__const._ZN13SkPathStroker7cubicToERK7SkPointS2_S2_.quadPts to i8*), i64 56, i1 false)
  store i32 1, i32* %81, align 8
  store i8 0, i8* %82, align 8
  store float %96, float* %83, align 4
  %103 = fadd float %96, %102
  %104 = fmul float %103, 5.000000e-01
  store float %104, float* %84, align 4
  store float %102, float* %85, align 4
  store i8 0, i8* %86, align 1
  store i8 0, i8* %87, align 4
  %105 = call zeroext i1 @_ZN13SkPathStroker11cubicStrokeEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* nonnull %18, %struct.SkQuadConstruct* nonnull %15)
  store i32 -1, i32* %81, align 8
  store i8 0, i8* %82, align 8
  store float %96, float* %83, align 4
  store float %104, float* %84, align 4
  store float %102, float* %85, align 4
  store i8 0, i8* %86, align 1
  store i8 0, i8* %87, align 4
  %106 = call zeroext i1 @_ZN13SkPathStroker11cubicStrokeEPK7SkPointP15SkQuadConstruct(%class.SkPathStroker* %0, %struct.SkPoint* nonnull %18, %struct.SkQuadConstruct* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %80) #10
  %107 = add nuw nsw i64 %95, 1
  %108 = icmp eq i64 %107, %90
  br i1 %108, label %91, label %94

109:                                              ; preds = %91
  %110 = bitcast %struct.SkPoint* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #10
  %111 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %111, align 4
  %112 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %112, align 4
  call void @_Z13SkEvalCubicAtPK7SkPointfPS_S2_S2_(%struct.SkPoint* nonnull %18, float %92, %struct.SkPoint* nonnull %16, %struct.SkPoint* null, %struct.SkPoint* null) #10
  %113 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 21
  %114 = load float, float* %111, align 4
  %115 = load float, float* %112, align 4
  %116 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 0
  %117 = load float, float* %116, align 8
  %118 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath9addCircleEfff15SkPathDirection(%class.SkPath* %113, float %114, float %115, float %117, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #10
  br label %119

119:                                              ; preds = %109, %91
  call void @_ZN13SkPathStroker17setCubicEndNormalEPK7SkPointRS1_S3_PS0_S4_(%class.SkPathStroker* %0, %struct.SkPoint* nonnull %18, %struct.SkPoint* nonnull dereferenceable(8) %8, %struct.SkPoint* nonnull dereferenceable(8) %9, %struct.SkPoint* nonnull %11, %struct.SkPoint* nonnull %13)
  %120 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 25
  store i8 1, i8* %120, align 1
  %121 = load i64, i64* %32, align 4
  store i64 %121, i64* %20, align 4
  %122 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 8
  %123 = bitcast %struct.SkPoint* %122 to i64*
  %124 = load i64, i64* %12, align 8
  store i64 %124, i64* %123, align 4
  %125 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 6
  %126 = bitcast %struct.SkPoint* %125 to i64*
  %127 = load i64, i64* %10, align 8
  store i64 %127, i64* %126, align 4
  %128 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %0, i64 0, i32 13
  %129 = load i32, i32* %128, align 8
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %128, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #10
  br label %131

131:                                              ; preds = %119, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  br label %132

132:                                              ; preds = %131, %56, %43, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #10
  ret void
}

declare i32 @_Z22SkFindCubicInflectionsPK7SkPointPf(%struct.SkPoint*, float*) local_unnamed_addr #2

declare float @_Z15SkFindCubicCuspPK7SkPoint(%struct.SkPoint*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath9addCircleEfff15SkPathDirection(%class.SkPath*, float, float, float, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8SkStrokeC2Ev(%class.SkStroke* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 0
  store float 1.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 1
  store float 4.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 2
  store float 1.000000e+00, float* %4, align 4
  %5 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 3
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 4
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 5
  store i8 0, i8* %7, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkStrokeC2ERK7SkPaint(%class.SkStroke* nocapture, %class.SkPaint* nocapture readonly dereferenceable(72)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 6
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %class.SkStroke* %0 to i32*
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 7
  %8 = bitcast float* %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 1
  %11 = bitcast float* %10 to i32*
  store i32 %9, i32* %11, align 4
  %12 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 2
  store float 1.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = lshr i32 %14, 2
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 3
  %18 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 3
  store i8 %17, i8* %18, align 4
  %19 = load i32, i32* %13, align 8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 3
  %23 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 4
  store i8 %22, i8* %23, align 1
  %24 = load i32, i32* %13, align 8
  %25 = and i32 %24, 192
  %26 = icmp eq i32 %25, 128
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 5
  store i8 %27, i8* %28, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkStrokeC2ERK7SkPaintf(%class.SkStroke* nocapture, %class.SkPaint* nocapture readonly dereferenceable(72), float) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 0
  store float %2, float* %4, align 4
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 7
  %6 = bitcast float* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 1
  %9 = bitcast float* %8 to i32*
  store i32 %7, i32* %9, align 4
  %10 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 2
  store float 1.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = lshr i32 %12, 2
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 3
  %16 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 3
  store i8 %15, i8* %16, align 4
  %17 = load i32, i32* %11, align 8
  %18 = lshr i32 %17, 4
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 3
  %21 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 4
  store i8 %20, i8* %21, align 1
  %22 = load i32, i32* %11, align 8
  %23 = and i32 %22, 192
  %24 = icmp eq i32 %23, 128
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 5
  store i8 %25, i8* %26, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8SkStroke8setWidthEf(%class.SkStroke* nocapture, float) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 0
  store float %1, float* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8SkStroke13setMiterLimitEf(%class.SkStroke* nocapture, float) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 1
  store float %1, float* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8SkStroke6setCapEN7SkPaint3CapE(%class.SkStroke* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = trunc i32 %1 to i8
  %4 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 3
  store i8 %3, i8* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8SkStroke7setJoinEN7SkPaint4JoinE(%class.SkStroke* nocapture, i8 zeroext) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 4
  store i8 %1, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkStroke10strokePathERK6SkPathPS0_(%class.SkStroke* nocapture readonly, %class.SkPath* dereferenceable(16), %class.SkPath*) local_unnamed_addr #4 align 2 {
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %class.AutoTmpPath, align 8
  %6 = alloca %struct.SkRect, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca %class.SkPathStroker, align 8
  %10 = alloca %"class.SkPath::Iter", align 8
  %11 = alloca [4 x %struct.SkPoint], align 16
  %12 = alloca <2 x float>, align 8
  %13 = bitcast <2 x float>* %12 to %struct.SkPoint*
  %14 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fmul float %15, 5.000000e-01
  %17 = bitcast %class.AutoTmpPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #10
  %18 = getelementptr inbounds %class.AutoTmpPath, %class.AutoTmpPath* %5, i64 0, i32 1
  %19 = getelementptr inbounds %class.AutoTmpPath, %class.AutoTmpPath* %5, i64 0, i32 2
  %20 = getelementptr inbounds %class.AutoTmpPath, %class.AutoTmpPath* %5, i64 0, i32 0
  %21 = bitcast %class.AutoTmpPath* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %20) #10
  store %class.SkPath* %1, %class.SkPath** %18, align 8
  %22 = icmp eq %class.SkPath* %2, %1
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %2) #10
  br label %25

25:                                               ; preds = %3, %23
  %26 = phi %class.SkPath* [ %2, %23 ], [ %20, %3 ]
  %27 = phi i8 [ 0, %23 ], [ 1, %3 ]
  store i8 %27, i8* %19, align 8
  %28 = fcmp ugt float %16, 0.000000e+00
  br i1 %28, label %29, label %165

29:                                               ; preds = %25
  %30 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  %31 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  store i8 0, i8* %7, align 1
  %32 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #10
  store i32 -1431655766, i32* %8, align 4
  %33 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* %1, %struct.SkRect* nonnull %6, i8* nonnull %7, i32* nonnull %8) #10
  %34 = xor i1 %33, true
  %35 = load i8, i8* %7, align 1
  %36 = icmp eq i8 %35, 0
  %37 = or i1 %36, %34
  br i1 %37, label %48, label %38

38:                                               ; preds = %29
  %39 = load i32, i32* %8, align 4
  call void @_ZNK8SkStroke10strokeRectERK6SkRectP6SkPath15SkPathDirection(%class.SkStroke* %0, %struct.SkRect* nonnull dereferenceable(16) %6, %class.SkPath* %26, i32 %39)
  %40 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %41 = load i8, i8* %40, align 2
  %42 = and i8 %41, 2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %162, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.SkPath, %class.SkPath* %26, i64 0, i32 4
  %46 = load i8, i8* %45, align 2
  %47 = xor i8 %46, 2
  store i8 %47, i8* %45, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  br label %163

48:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  %49 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 5
  %50 = load i8, i8* %49, align 2, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %63, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %54 = load %class.SkPathRef*, %class.SkPathRef** %53, align 8
  %55 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %54, i64 0, i32 15
  %56 = load i8, i8* %55, align 2
  %57 = icmp eq i8 %56, 1
  br i1 %57, label %58, label %63

58:                                               ; preds = %52
  %59 = call zeroext i1 @_ZNK6SkPath19isLastContourClosedEv(%class.SkPath* %1) #10
  br i1 %59, label %60, label %63

60:                                               ; preds = %58
  %61 = call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %1) #10
  %62 = icmp eq i32 %61, 0
  br label %63

63:                                               ; preds = %48, %60, %58, %52
  %64 = phi i1 [ false, %58 ], [ false, %52 ], [ false, %48 ], [ %62, %60 ]
  %65 = bitcast %class.SkPathStroker* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %65) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 8 bitcast (%class.SkPathStroker* @__const._ZNK8SkStroke10strokePathERK6SkPathPS0_.stroker to i8*), i64 168, i1 false)
  %66 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 1
  %67 = load float, float* %66, align 4
  %68 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 3
  %69 = load i8, i8* %68, align 4
  %70 = zext i8 %69 to i32
  %71 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 4
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 2
  %74 = load float, float* %73, align 4
  call void @_ZN13SkPathStrokerC2ERK6SkPathffN7SkPaint3CapENS3_4JoinEfb(%class.SkPathStroker* nonnull %9, %class.SkPath* dereferenceable(16) %1, float %16, float %67, i32 %70, i8 zeroext %72, float %74, i1 zeroext %64)
  %75 = bitcast %"class.SkPath::Iter"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %10, i64 0, i32 3
  %77 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %10, i64 0, i32 4, i32 0
  %78 = bitcast %"class.SkPath::Iter"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 32, i1 false)
  %79 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %10, i64 0, i32 6
  %80 = bitcast float* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 -1, i64 16, i1 false)
  %81 = bitcast i8* %79 to i64*
  store i64 -6148914691236517206, i64* %81, align 8
  call void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"* nonnull %10, %class.SkPath* dereferenceable(16) %1, i1 zeroext false) #10
  %82 = bitcast [4 x %struct.SkPoint]* %11 to i8*
  %83 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 0
  %84 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 1
  %85 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 2
  %86 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 3
  %87 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %9, i64 0, i32 13
  %88 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %9, i64 0, i32 19
  %89 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %9, i64 0, i32 20
  %90 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %9, i64 0, i32 12
  %91 = bitcast <2 x float>* %12 to i8*
  %92 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %9, i64 0, i32 9
  %93 = bitcast %struct.SkPoint* %92 to i64*
  %94 = bitcast <2 x float>* %12 to i64*
  %95 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %9, i64 0, i32 10
  %96 = bitcast [4 x %struct.SkPoint]* %11 to i64*
  %97 = bitcast %struct.SkPoint* %95 to i64*
  %98 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %9, i64 0, i32 25
  %99 = bitcast [4 x %struct.SkPoint]* %11 to i8*
  br label %100

100:                                              ; preds = %130, %63
  %101 = phi i32 [ 0, %63 ], [ %131, %130 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %82) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %99, i8 -1, i64 32, i1 false)
  %102 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %10, %struct.SkPoint* nonnull %83) #10
  switch i32 %102, label %130 [
    i32 0, label %103
    i32 1, label %109
    i32 2, label %110
    i32 3, label %111
    i32 4, label %114
    i32 5, label %115
    i32 6, label %132
  ]

103:                                              ; preds = %100
  %104 = load i32, i32* %87, align 8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZN13SkPathStroker13finishContourEbb(%class.SkPathStroker* nonnull %9, i1 zeroext false, i1 zeroext false) #10
  br label %107

107:                                              ; preds = %103, %106
  store i32 0, i32* %87, align 8
  %108 = load i64, i64* %96, align 16
  store i64 %108, i64* %97, align 4
  store i64 %108, i64* %93, align 4
  store i8 0, i8* %98, align 1
  br label %130

109:                                              ; preds = %100
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* nonnull %9, %struct.SkPoint* dereferenceable(8) %84, %"class.SkPath::Iter"* nonnull %10)
  br label %130

110:                                              ; preds = %100
  call void @_ZN13SkPathStroker6quadToERK7SkPointS2_(%class.SkPathStroker* nonnull %9, %struct.SkPoint* dereferenceable(8) %84, %struct.SkPoint* dereferenceable(8) %85)
  br label %130

111:                                              ; preds = %100
  %112 = load float*, float** %76, align 8
  %113 = load float, float* %112, align 4
  call void @_ZN13SkPathStroker7conicToERK7SkPointS2_f(%class.SkPathStroker* nonnull %9, %struct.SkPoint* dereferenceable(8) %84, %struct.SkPoint* dereferenceable(8) %85, float %113)
  br label %130

114:                                              ; preds = %100
  call void @_ZN13SkPathStroker7cubicToERK7SkPointS2_S2_(%class.SkPathStroker* nonnull %9, %struct.SkPoint* dereferenceable(8) %84, %struct.SkPoint* dereferenceable(8) %85, %struct.SkPoint* dereferenceable(8) %86)
  br label %130

115:                                              ; preds = %100
  %116 = load i8, i8* %68, align 4
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %128, label %118

118:                                              ; preds = %115
  %119 = load i32, i32* %87, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %118
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #10
  %122 = load i64, i64* %93, align 4
  store i64 %122, i64* %94, align 8
  call void @_ZN13SkPathStroker6lineToERK7SkPointPKN6SkPath4IterE(%class.SkPathStroker* nonnull %9, %struct.SkPoint* nonnull dereferenceable(8) %13, %"class.SkPath::Iter"* null)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #10
  br label %130

123:                                              ; preds = %118
  %124 = call zeroext i1 @_ZNK6SkPath22isZeroLengthSincePointEi(%class.SkPath* %88, i32 0) #10
  br i1 %124, label %125, label %128

125:                                              ; preds = %123
  %126 = load i32, i32* %90, align 4
  %127 = call zeroext i1 @_ZNK6SkPath22isZeroLengthSincePointEi(%class.SkPath* %89, i32 %126) #10
  br i1 %127, label %130, label %128

128:                                              ; preds = %123, %115, %125
  %129 = icmp eq i32 %101, 1
  call void @_ZN13SkPathStroker13finishContourEbb(%class.SkPathStroker* nonnull %9, i1 zeroext true, i1 zeroext %129) #10
  br label %130

130:                                              ; preds = %107, %109, %110, %111, %114, %128, %100, %125, %121
  %131 = phi i32 [ %101, %100 ], [ %101, %128 ], [ 4, %114 ], [ 3, %111 ], [ 2, %110 ], [ 1, %109 ], [ %101, %107 ], [ 1, %125 ], [ 1, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %82) #10
  br label %100

132:                                              ; preds = %100
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %82) #10
  %133 = icmp eq i32 %101, 1
  call void @_ZN13SkPathStroker13finishContourEbb(%class.SkPathStroker* nonnull %9, i1 zeroext false, i1 zeroext %133) #10
  call void @_ZN6SkPath4swapERS_(%class.SkPath* %26, %class.SkPath* dereferenceable(16) %89) #10
  %134 = load i8, i8* %49, align 2, !range !2
  %135 = icmp eq i8 %134, 0
  %136 = or i1 %64, %135
  br i1 %136, label %151, label %137

137:                                              ; preds = %132
  %138 = call i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16) %1) #10
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %137
  %141 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath14reverseAddPathERKS_(%class.SkPath* %26, %class.SkPath* dereferenceable(16) %1) #10
  br label %151

142:                                              ; preds = %137
  %143 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %143) #10
  %144 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %145 = bitcast %class.SkMatrix* %4 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %145, align 16
  %146 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %147 = bitcast float* %146 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %147, align 16
  %148 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %148, align 16
  store i32 16, i32* %144, align 4
  %149 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %4) #10
  %150 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath* %26, %class.SkPath* dereferenceable(16) %1, %class.SkMatrix* nonnull dereferenceable(40) %4, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %143) #10
  br label %151

151:                                              ; preds = %132, %140, %142
  %152 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %153 = load i8, i8* %152, align 2
  %154 = and i8 %153, 2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %160, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %class.SkPath, %class.SkPath* %26, i64 0, i32 4
  %158 = load i8, i8* %157, align 2
  %159 = xor i8 %158, 2
  store i8 %159, i8* %157, align 2
  br label %160

160:                                              ; preds = %151, %156
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %75) #10
  %161 = getelementptr inbounds %class.SkPathStroker, %class.SkPathStroker* %9, i64 0, i32 21
  call void @_ZN6SkPathD1Ev(%class.SkPath* %161) #10
  call void @_ZN6SkPathD1Ev(%class.SkPath* %89) #10
  call void @_ZN6SkPathD1Ev(%class.SkPath* %88) #10
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %65) #10
  br label %163

162:                                              ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  br label %163

163:                                              ; preds = %160, %44, %162
  %164 = load i8, i8* %19, align 8
  br label %165

165:                                              ; preds = %163, %25
  %166 = phi i8 [ %164, %163 ], [ %27, %25 ]
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %165
  %169 = load %class.SkPath*, %class.SkPath** %18, align 8
  call void @_ZN6SkPath4swapERS_(%class.SkPath* nonnull %20, %class.SkPath* dereferenceable(16) %169) #10
  br label %170

170:                                              ; preds = %165, %168
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #10
  ret void
}

declare zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkStroke10strokeRectERK6SkRectP6SkPath15SkPathDirection(%class.SkStroke* nocapture readonly, %struct.SkRect* nocapture readonly dereferenceable(16), %class.SkPath*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca [8 x %struct.SkPoint], align 16
  %6 = alloca %struct.SkRect, align 4
  %7 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %2) #10
  %8 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fmul float %9, 5.000000e-01
  %11 = fcmp ugt float %10, 0.000000e+00
  br i1 %11, label %12, label %140

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = fsub float %14, %16
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fsub float %19, %21
  %23 = fcmp olt float %17, 0.000000e+00
  %24 = fcmp olt float %22, 0.000000e+00
  %25 = xor i1 %23, %24
  %26 = bitcast float %16 to i32
  %27 = bitcast float %21 to i32
  %28 = bitcast float %14 to i32
  %29 = bitcast float %19 to i32
  br i1 %25, label %30, label %34

30:                                               ; preds = %12
  %31 = sext i32 %3 to i64
  %32 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZL17reverse_direction15SkPathDirectionE9gOpposite, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %30, %12
  %35 = phi i32 [ %33, %30 ], [ %3, %12 ]
  %36 = fcmp ogt float %16, %14
  %37 = select i1 %36, i32 %26, i32 %28
  %38 = select i1 %36, i32 %28, i32 %26
  %39 = fcmp ogt float %21, %19
  %40 = select i1 %39, i32 %27, i32 %29
  %41 = select i1 %39, i32 %29, i32 %27
  %42 = bitcast i32 %37 to float
  %43 = bitcast i32 %38 to float
  %44 = fsub float %42, %43
  %45 = bitcast i32 %40 to float
  %46 = bitcast i32 %41 to float
  %47 = fsub float %45, %46
  %48 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #10
  %49 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %50 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %51 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %52 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %53 = fsub float %43, %10
  store float %53, float* %49, align 4
  %54 = fsub float %46, %10
  store float %54, float* %50, align 4
  %55 = fadd float %10, %42
  store float %55, float* %51, align 4
  %56 = fadd float %10, %45
  store float %56, float* %52, align 4
  %57 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 4
  %58 = load i8, i8* %57, align 1
  switch i8 %58, label %121 [
    i8 0, label %59
    i8 1, label %119
    i8 2, label %65
  ]

59:                                               ; preds = %34
  %60 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 1
  %61 = load float, float* %60, align 4
  %62 = fcmp olt float %61, 0x3FF6A09E60000000
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %2, %struct.SkRect* nonnull dereferenceable(16) %6, i32 %35, i32 0) #10
  br label %121

65:                                               ; preds = %34, %59
  %66 = bitcast [8 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %66) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %66, i8 -1, i64 64, i1 false) #10
  %67 = icmp eq i32 %35, 0
  br i1 %67, label %68, label %90

68:                                               ; preds = %65
  %69 = bitcast [8 x %struct.SkPoint]* %5 to i32*
  store i32 %38, i32* %69, align 16
  %70 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 0, i32 1
  store float %54, float* %70, align 4
  %71 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 1
  %72 = bitcast %struct.SkPoint* %71 to i32*
  store i32 %37, i32* %72, align 8
  %73 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 1, i32 1
  store float %54, float* %73, align 4
  %74 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 2, i32 0
  store float %55, float* %74, align 16
  %75 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 2, i32 1
  %76 = bitcast float* %75 to i32*
  store i32 %41, i32* %76, align 4
  %77 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 3, i32 0
  store float %55, float* %77, align 8
  %78 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 3, i32 1
  %79 = bitcast float* %78 to i32*
  store i32 %40, i32* %79, align 4
  %80 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 4
  %81 = bitcast %struct.SkPoint* %80 to i32*
  store i32 %37, i32* %81, align 16
  %82 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 4, i32 1
  store float %56, float* %82, align 4
  %83 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 5
  %84 = bitcast %struct.SkPoint* %83 to i32*
  store i32 %38, i32* %84, align 8
  %85 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 5, i32 1
  store float %56, float* %85, align 4
  %86 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 6, i32 0
  store float %53, float* %86, align 16
  %87 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 6, i32 1
  %88 = bitcast float* %87 to i32*
  store i32 %40, i32* %88, align 4
  %89 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 7, i32 0
  store float %53, float* %89, align 8
  br label %113

90:                                               ; preds = %65
  %91 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 7
  %92 = bitcast %struct.SkPoint* %91 to i32*
  store i32 %38, i32* %92, align 8
  %93 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 7, i32 1
  store float %54, float* %93, align 4
  %94 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 6
  %95 = bitcast %struct.SkPoint* %94 to i32*
  store i32 %37, i32* %95, align 16
  %96 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 6, i32 1
  store float %54, float* %96, align 4
  %97 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 5, i32 0
  store float %55, float* %97, align 8
  %98 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 5, i32 1
  %99 = bitcast float* %98 to i32*
  store i32 %41, i32* %99, align 4
  %100 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 4, i32 0
  store float %55, float* %100, align 16
  %101 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 4, i32 1
  %102 = bitcast float* %101 to i32*
  store i32 %40, i32* %102, align 4
  %103 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 3
  %104 = bitcast %struct.SkPoint* %103 to i32*
  store i32 %37, i32* %104, align 8
  %105 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 3, i32 1
  store float %56, float* %105, align 4
  %106 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 2
  %107 = bitcast %struct.SkPoint* %106 to i32*
  store i32 %38, i32* %107, align 16
  %108 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 2, i32 1
  store float %56, float* %108, align 4
  %109 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 1, i32 0
  store float %53, float* %109, align 8
  %110 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 1, i32 1
  %111 = bitcast float* %110 to i32*
  store i32 %40, i32* %111, align 4
  %112 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 0, i32 0
  store float %53, float* %112, align 16
  br label %113

113:                                              ; preds = %68, %90
  %114 = phi i64 [ 7, %68 ], [ 0, %90 ]
  %115 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 %114, i32 1
  %116 = bitcast float* %115 to i32*
  store i32 %41, i32* %116, align 4
  %117 = getelementptr inbounds [8 x %struct.SkPoint], [8 x %struct.SkPoint]* %5, i64 0, i64 0
  %118 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath* %2, %struct.SkPoint* nonnull %117, i32 8, i1 zeroext true) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %66) #10
  br label %121

119:                                              ; preds = %34
  %120 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath12addRoundRectERK6SkRectff15SkPathDirection(%class.SkPath* %2, %struct.SkRect* nonnull dereferenceable(16) %6, float %10, float %10, i32 %35) #10
  br label %121

121:                                              ; preds = %34, %119, %113, %63
  %122 = load float, float* %8, align 4
  %123 = fcmp olt float %47, %44
  %124 = select i1 %123, float %47, float %44
  %125 = fcmp olt float %122, %124
  br i1 %125, label %126, label %139

126:                                              ; preds = %121
  %127 = getelementptr inbounds %class.SkStroke, %class.SkStroke* %0, i64 0, i32 5
  %128 = load i8, i8* %127, align 2, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %139

130:                                              ; preds = %126
  %131 = fadd float %10, %43
  store float %131, float* %49, align 4
  %132 = fadd float %10, %46
  store float %132, float* %50, align 4
  %133 = fsub float %42, %10
  store float %133, float* %51, align 4
  %134 = fsub float %45, %10
  store float %134, float* %52, align 4
  %135 = sext i32 %35 to i64
  %136 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZL17reverse_direction15SkPathDirectionE9gOpposite, i64 0, i64 %135
  %137 = load i32, i32* %136, align 4
  %138 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %2, %struct.SkRect* nonnull dereferenceable(16) %6, i32 %137, i32 0) #10
  br label %139

139:                                              ; preds = %126, %130, %121
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #10
  br label %140

140:                                              ; preds = %4, %139
  ret void
}

declare zeroext i1 @_ZNK6SkPath19isLastContourClosedEv(%class.SkPath*) local_unnamed_addr #2

declare void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"*, %class.SkPath* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"*, %struct.SkPoint*) local_unnamed_addr #2

declare i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath14reverseAddPathERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath12addRoundRectERK6SkRectff15SkPathDirection(%class.SkPath*, %struct.SkRect* dereferenceable(16), float, float, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN7SkPoint12setNormalizeEff(%struct.SkPoint*, float, float) local_unnamed_addr #2

declare void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint*, float, %struct.SkPoint*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #2

declare i32 @_Z19SkFindUnitQuadRootsfffPf(float, float, float, float*) local_unnamed_addr #2

declare i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath*) local_unnamed_addr #2

declare zeroext i1 @_ZNK6SkPath22isZeroLengthSincePointEi(%class.SkPath*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #9

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath*, %struct.SkPoint*, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
