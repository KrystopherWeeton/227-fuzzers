; ModuleID = '../../base/debug/elf_reader.cc'
source_filename = "../../base/debug/elf_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::strings::internal::Arg" = type <{ %union.anon.1, i32, [4 x i8] }>
%union.anon.1 = type { %struct.anon }
%struct.anon = type { i64, i8 }
%"class.base::CheckedContiguousIterator" = type { %struct.Elf64_Phdr*, %struct.Elf64_Phdr*, %struct.Elf64_Phdr* }
%struct.Elf64_Phdr = type { i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.Elf64_Ehdr = type { [16 x i8], i16, i16, i32, i64, i64, i64, i32, i16, i16, i16, i16, i16, i16 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::BasicStringPiece" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%struct.Elf64_Dyn = type { i64, %union.anon.0 }
%union.anon.0 = type { i64 }

$_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEC2EPS2_S4_S4_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrE15CheckComparableERKS3_ = comdat any

@_ZN4base5debug12_GLOBAL__N_112kGnuNoteNameE = internal constant [4 x i8] c"GNU\00", align 1
@.str = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"\7FELF\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base5debug14ReadElfBuildIdEPKvbPc(i8*, i1 zeroext, i8*) local_unnamed_addr #0 {
  %4 = alloca [1 x %"struct.base::strings::internal::Arg"], align 16
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #9
  %8 = icmp ne i32 %7, 0
  %9 = bitcast i8* %0 to %struct.Elf64_Ehdr*
  %10 = icmp eq i8* %0, null
  %11 = or i1 %10, %8
  br i1 %11, label %126, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @_ZN4base5debug19GetRelocationOffsetEPKv(i8* nonnull %0)
  %14 = tail call i32 @strncmp(i8* nonnull %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #9
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %12
  %17 = getelementptr inbounds i8, i8* %0, i64 32
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %9, i64 0, i32 0, i64 %19
  %21 = bitcast i8* %20 to %struct.Elf64_Phdr*
  %22 = getelementptr inbounds i8, i8* %0, i64 56
  %23 = bitcast i8* %22 to i16*
  %24 = load i16, i16* %23, align 8
  %25 = zext i16 %24 to i64
  br label %26

26:                                               ; preds = %12, %16
  %27 = phi i64 [ %25, %16 ], [ 0, %12 ]
  %28 = phi %struct.Elf64_Phdr* [ %21, %16 ], [ null, %12 ]
  %29 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %31 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %28, i64 %27
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %struct.Elf64_Phdr* %28, %struct.Elf64_Phdr* %28, %struct.Elf64_Phdr* %31) #10
  %33 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %35 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %struct.Elf64_Phdr* %28, %struct.Elf64_Phdr* %31, %struct.Elf64_Phdr* %31) #10
  call void @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #10
  %36 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %30, align 8
  %37 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %34, align 8
  %38 = icmp eq %struct.Elf64_Phdr* %36, %37
  br i1 %38, label %124, label %39

39:                                               ; preds = %26, %119
  %40 = call dereferenceable(56) %struct.Elf64_Phdr* @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %5)
  %41 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 4
  br i1 %43, label %44, label %119

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %40, i64 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %13
  %48 = inttoptr i64 %47 to i8*
  %49 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %40, i64 0, i32 6
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = ptrtoint i8* %51 to i64
  br label %53

53:                                               ; preds = %69, %44
  %54 = phi i8* [ %48, %44 ], [ %85, %69 ]
  %55 = icmp ult i8* %54, %51
  br i1 %55, label %56, label %119

56:                                               ; preds = %53
  %57 = getelementptr inbounds i8, i8* %54, i64 8
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 3
  %61 = bitcast i8* %54 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 4
  %64 = and i1 %60, %63
  br i1 %64, label %65, label %69

65:                                               ; preds = %56
  %66 = getelementptr inbounds i8, i8* %54, i64 12
  %67 = call i32 @bcmp(i8* %66, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN4base5debug12_GLOBAL__N_112kGnuNoteNameE, i64 0, i64 0), i64 4) #10
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %86, label %69

69:                                               ; preds = %56, %65
  %70 = phi i32 [ 4, %65 ], [ %62, %56 ]
  %71 = zext i32 %70 to i64
  %72 = add nuw nsw i64 %71, 3
  %73 = and i64 %72, 8589934588
  %74 = getelementptr inbounds i8, i8* %54, i64 4
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = add nuw nsw i64 %77, 3
  %79 = and i64 %78, 8589934588
  %80 = add nuw nsw i64 %73, 12
  %81 = add nuw nsw i64 %80, %79
  %82 = ptrtoint i8* %54 to i64
  %83 = sub i64 %52, %82
  %84 = icmp ugt i64 %81, %83
  %85 = getelementptr inbounds i8, i8* %54, i64 %81
  br i1 %84, label %124, label %53

86:                                               ; preds = %65
  %87 = getelementptr inbounds i8, i8* %54, i64 4
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = icmp ugt i32 %89, 20
  br i1 %90, label %119, label %91

91:                                               ; preds = %86
  %92 = bitcast i8* %87 to i32*
  %93 = getelementptr inbounds i8, i8* %54, i64 16
  %94 = icmp eq i32 %89, 0
  br i1 %94, label %116, label %95

95:                                               ; preds = %91
  %96 = select i1 %1, [5 x i8]* @.str, [5 x i8]* @.str.1
  %97 = getelementptr inbounds [5 x i8], [5 x i8]* %96, i64 0, i64 0
  %98 = bitcast [1 x %"struct.base::strings::internal::Arg"]* %4 to i8*
  %99 = getelementptr inbounds [1 x %"struct.base::strings::internal::Arg"], [1 x %"struct.base::strings::internal::Arg"]* %4, i64 0, i64 0
  %100 = getelementptr inbounds [1 x %"struct.base::strings::internal::Arg"], [1 x %"struct.base::strings::internal::Arg"]* %4, i64 0, i64 0, i32 1
  %101 = getelementptr inbounds [1 x %"struct.base::strings::internal::Arg"], [1 x %"struct.base::strings::internal::Arg"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds [1 x %"struct.base::strings::internal::Arg"], [1 x %"struct.base::strings::internal::Arg"]* %4, i64 0, i64 0, i32 0, i32 0, i32 1
  br label %103

103:                                              ; preds = %95, %103
  %104 = phi i8* [ %2, %95 ], [ %115, %103 ]
  %105 = phi i64 [ 0, %95 ], [ %110, %103 ]
  %106 = getelementptr inbounds i8, i8* %93, i64 %105
  %107 = load i8, i8* %106, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %98, i8 -86, i64 24, i1 false) #10
  store i32 1, i32* %100, align 16
  %108 = zext i8 %107 to i64
  store i64 %108, i64* %101, align 16
  store i8 1, i8* %102, align 8
  %109 = call i64 @_ZN4base7strings8internal12SafeSNPrintfEPcmPKcPKNS1_3ArgEm(i8* %104, i64 3, i8* nonnull %97, %"struct.base::strings::internal::Arg"* nonnull %99, i64 1) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #10
  %110 = add nuw nsw i64 %105, 1
  %111 = load i32, i32* %92, align 4
  %112 = zext i32 %111 to i64
  %113 = icmp ult i64 %110, %112
  %114 = shl nuw i64 %110, 1
  %115 = getelementptr inbounds i8, i8* %2, i64 %114
  br i1 %113, label %103, label %116

116:                                              ; preds = %103, %91
  %117 = phi i64 [ 0, %91 ], [ %114, %103 ]
  %118 = phi i8* [ %2, %91 ], [ %115, %103 ]
  store i8 0, i8* %118, align 1
  br label %124

119:                                              ; preds = %53, %39, %86
  %120 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEppEv(%"class.base::CheckedContiguousIterator"* nonnull %5)
  call void @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #10
  %121 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %30, align 8
  %122 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %34, align 8
  %123 = icmp eq %struct.Elf64_Phdr* %121, %122
  br i1 %123, label %124, label %39

124:                                              ; preds = %119, %69, %26, %116
  %125 = phi i64 [ %117, %116 ], [ 0, %26 ], [ 0, %69 ], [ 0, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  br label %126

126:                                              ; preds = %124, %3
  %127 = phi i64 [ 0, %3 ], [ %125, %124 ]
  ret i64 %127
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base5debug19GetRelocationOffsetEPKv(i8*) local_unnamed_addr #0 {
  %2 = alloca %"class.base::CheckedContiguousIterator", align 8
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #9
  %5 = icmp ne i32 %4, 0
  %6 = icmp eq i8* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %19, label %8

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.Elf64_Ehdr*
  %10 = getelementptr inbounds i8, i8* %0, i64 32
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %9, i64 0, i32 0, i64 %12
  %14 = bitcast i8* %13 to %struct.Elf64_Phdr*
  %15 = getelementptr inbounds i8, i8* %0, i64 56
  %16 = bitcast i8* %15 to i16*
  %17 = load i16, i16* %16, align 8
  %18 = zext i16 %17 to i64
  br label %19

19:                                               ; preds = %1, %8
  %20 = phi i64 [ %18, %8 ], [ 0, %1 ]
  %21 = phi %struct.Elf64_Phdr* [ %14, %8 ], [ null, %1 ]
  %22 = bitcast %"class.base::CheckedContiguousIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %2, i64 0, i32 1
  %24 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %21, i64 %20
  %25 = bitcast %"class.base::CheckedContiguousIterator"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %2, %struct.Elf64_Phdr* %21, %struct.Elf64_Phdr* %21, %struct.Elf64_Phdr* %24) #10
  %26 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %3, i64 0, i32 1
  %28 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %3, %struct.Elf64_Phdr* %21, %struct.Elf64_Phdr* %24, %struct.Elf64_Phdr* %24) #10
  call void @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %2, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %3) #10
  %29 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %23, align 8
  %30 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %27, align 8
  %31 = icmp eq %struct.Elf64_Phdr* %29, %30
  br i1 %31, label %50, label %32

32:                                               ; preds = %19, %37
  %33 = call dereferenceable(56) %struct.Elf64_Phdr* @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %2)
  %34 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %42, label %37

37:                                               ; preds = %32
  %38 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEppEv(%"class.base::CheckedContiguousIterator"* nonnull %2)
  call void @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %2, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %3) #10
  %39 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %23, align 8
  %40 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %27, align 8
  %41 = icmp eq %struct.Elf64_Phdr* %39, %40
  br i1 %41, label %50, label %32

42:                                               ; preds = %32
  %43 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %33, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %0, i64 %44
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %33, i64 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  br label %52

50:                                               ; preds = %37, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %51 = ptrtoint i8* %0 to i64
  br label %52

52:                                               ; preds = %42, %50
  %53 = phi i64 [ %51, %50 ], [ %49, %42 ]
  ret i64 %53
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, %struct.Elf64_Phdr* } @_ZN4base5debug20GetElfProgramHeadersEPKv(i8*) local_unnamed_addr #2 {
  %2 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #9
  %3 = icmp ne i32 %2, 0
  %4 = icmp eq i8* %0, null
  %5 = or i1 %4, %3
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = bitcast i8* %0 to %struct.Elf64_Ehdr*
  %8 = getelementptr inbounds i8, i8* %0, i64 32
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %7, i64 0, i32 0, i64 %10
  %12 = bitcast i8* %11 to %struct.Elf64_Phdr*
  %13 = getelementptr inbounds i8, i8* %0, i64 56
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 8
  %16 = zext i16 %15 to i64
  br label %17

17:                                               ; preds = %1, %6
  %18 = phi i64 [ %16, %6 ], [ 0, %1 ]
  %19 = phi %struct.Elf64_Phdr* [ %12, %6 ], [ null, %1 ]
  %20 = insertvalue { i64, %struct.Elf64_Phdr* } undef, i64 %18, 0
  %21 = insertvalue { i64, %struct.Elf64_Phdr* } %20, %struct.Elf64_Phdr* %19, 1
  ret { i64, %struct.Elf64_Phdr* } %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %struct.Elf64_Phdr* @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %7, align 8
  %11 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %8, align 8
  %12 = icmp eq %struct.Elf64_Phdr* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %struct.Elf64_Phdr** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  %17 = bitcast %struct.Elf64_Phdr** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %7, align 8
  ret %struct.Elf64_Phdr* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %7, align 8
  %11 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %8, align 8
  %12 = icmp eq %struct.Elf64_Phdr* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %struct.Elf64_Phdr** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  %17 = bitcast %struct.Elf64_Phdr** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %7, align 8
  %27 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %26, i64 1
  store %struct.Elf64_Phdr* %27, %struct.Elf64_Phdr** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base5debug18ReadElfLibraryNameEPKv(%"class.absl::optional"* noalias nocapture sret, i8*) local_unnamed_addr #0 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = tail call i32 @strncmp(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #9
  %7 = icmp ne i32 %6, 0
  %8 = bitcast i8* %1 to %struct.Elf64_Ehdr*
  %9 = icmp eq i8* %1, null
  %10 = or i1 %9, %7
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  br label %142

13:                                               ; preds = %2
  %14 = tail call i64 @_ZN4base5debug19GetRelocationOffsetEPKv(i8* nonnull %1)
  %15 = tail call i32 @strncmp(i8* nonnull %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %27

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %1, i64 32
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.Elf64_Ehdr, %struct.Elf64_Ehdr* %8, i64 0, i32 0, i64 %20
  %22 = bitcast i8* %21 to %struct.Elf64_Phdr*
  %23 = getelementptr inbounds i8, i8* %1, i64 56
  %24 = bitcast i8* %23 to i16*
  %25 = load i16, i16* %24, align 8
  %26 = zext i16 %25 to i64
  br label %27

27:                                               ; preds = %13, %17
  %28 = phi i64 [ %26, %17 ], [ 0, %13 ]
  %29 = phi %struct.Elf64_Phdr* [ %22, %17 ], [ null, %13 ]
  %30 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %4, i64 0, i32 1
  %32 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %29, i64 %28
  %33 = bitcast %"class.base::CheckedContiguousIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %4, %struct.Elf64_Phdr* %29, %struct.Elf64_Phdr* %29, %struct.Elf64_Phdr* %32) #10
  %34 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %36 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %struct.Elf64_Phdr* %29, %struct.Elf64_Phdr* %32, %struct.Elf64_Phdr* %32) #10
  call void @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #10
  %37 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %31, align 8
  %38 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %35, align 8
  %39 = icmp eq %struct.Elf64_Phdr* %37, %38
  br i1 %39, label %140, label %40

40:                                               ; preds = %27, %130
  %41 = call dereferenceable(56) %struct.Elf64_Phdr* @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  %42 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 2
  br i1 %44, label %45, label %130

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %41, i64 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, %14
  %49 = inttoptr i64 %48 to %struct.Elf64_Dyn*
  %50 = getelementptr inbounds %struct.Elf64_Phdr, %struct.Elf64_Phdr* %41, i64 0, i32 6
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %48, %51
  %53 = inttoptr i64 %52 to %struct.Elf64_Dyn*
  %54 = icmp ult %struct.Elf64_Dyn* %49, %53
  br i1 %54, label %55, label %130

55:                                               ; preds = %45
  %56 = inttoptr i64 %52 to i8*
  %57 = getelementptr i8, i8* %56, i64 -1
  %58 = sub i64 0, %48
  %59 = getelementptr i8, i8* %57, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = lshr i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i8* %59, inttoptr (i64 48 to i8*)
  br i1 %64, label %67, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %101

67:                                               ; preds = %177, %55
  %68 = phi i32 [ undef, %55 ], [ %178, %177 ]
  %69 = phi i8* [ undef, %55 ], [ %179, %177 ]
  %70 = phi %struct.Elf64_Dyn* [ %49, %55 ], [ %180, %177 ]
  %71 = phi i8* [ null, %55 ], [ %179, %177 ]
  %72 = phi i32 [ 0, %55 ], [ %178, %177 ]
  %73 = icmp eq i64 %63, 0
  br i1 %73, label %95, label %74

74:                                               ; preds = %67, %89
  %75 = phi %struct.Elf64_Dyn* [ %92, %89 ], [ %70, %67 ]
  %76 = phi i8* [ %91, %89 ], [ %71, %67 ]
  %77 = phi i32 [ %90, %89 ], [ %72, %67 ]
  %78 = phi i64 [ %93, %89 ], [ %63, %67 ]
  %79 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %75, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  switch i64 %80, label %89 [
    i64 5, label %85
    i64 14, label %81
  ]

81:                                               ; preds = %74
  %82 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %75, i64 0, i32 1, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = trunc i64 %83 to i32
  br label %89

85:                                               ; preds = %74
  %86 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %75, i64 0, i32 1, i32 0
  %87 = bitcast i64* %86 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %85, %81, %74
  %90 = phi i32 [ %77, %85 ], [ %84, %81 ], [ %77, %74 ]
  %91 = phi i8* [ %88, %85 ], [ %76, %81 ], [ %76, %74 ]
  %92 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %75, i64 1
  %93 = add i64 %78, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %74, !llvm.loop !2

95:                                               ; preds = %89, %67
  %96 = phi i32 [ %68, %67 ], [ %90, %89 ]
  %97 = phi i8* [ %69, %67 ], [ %91, %89 ]
  %98 = icmp ne i32 %96, 0
  %99 = icmp ne i8* %97, null
  %100 = and i1 %98, %99
  br i1 %100, label %121, label %130

101:                                              ; preds = %177, %65
  %102 = phi %struct.Elf64_Dyn* [ %49, %65 ], [ %180, %177 ]
  %103 = phi i8* [ null, %65 ], [ %179, %177 ]
  %104 = phi i32 [ 0, %65 ], [ %178, %177 ]
  %105 = phi i64 [ %66, %65 ], [ %181, %177 ]
  %106 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 0, i32 0
  %107 = load i64, i64* %106, align 8
  switch i64 %107, label %116 [
    i64 5, label %108
    i64 14, label %112
  ]

108:                                              ; preds = %101
  %109 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 0, i32 1, i32 0
  %110 = bitcast i64* %109 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %116

112:                                              ; preds = %101
  %113 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 0, i32 1, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = trunc i64 %114 to i32
  br label %116

116:                                              ; preds = %101, %108, %112
  %117 = phi i32 [ %104, %108 ], [ %115, %112 ], [ %104, %101 ]
  %118 = phi i8* [ %111, %108 ], [ %103, %112 ], [ %103, %101 ]
  %119 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 1, i32 0
  %120 = load i64, i64* %119, align 8
  switch i64 %120, label %151 [
    i64 5, label %147
    i64 14, label %143
  ]

121:                                              ; preds = %95
  %122 = zext i32 %96 to i64
  %123 = getelementptr inbounds i8, i8* %97, i64 %122
  %124 = icmp eq i8* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %121
  %126 = call i64 @strlen(i8* nonnull %123) #10
  br label %135

127:                                              ; preds = %121
  %128 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #10
  %129 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #10
  br label %135

130:                                              ; preds = %45, %95, %40
  %131 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEppEv(%"class.base::CheckedContiguousIterator"* nonnull %4)
  call void @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"* nonnull %4, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %5) #10
  %132 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %31, align 8
  %133 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %35, align 8
  %134 = icmp eq %struct.Elf64_Phdr* %132, %133
  br i1 %134, label %140, label %40

135:                                              ; preds = %127, %125
  %136 = phi i64 [ 0, %127 ], [ %126, %125 ]
  %137 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %137, align 8
  %138 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i8* %123, i8** %138, align 8
  %139 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i64 %136, i64* %139, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  br label %142

140:                                              ; preds = %130, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  %141 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %141, align 8
  br label %142

142:                                              ; preds = %135, %140, %11
  ret void

143:                                              ; preds = %116
  %144 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 1, i32 1, i32 0
  %145 = load i64, i64* %144, align 8
  %146 = trunc i64 %145 to i32
  br label %151

147:                                              ; preds = %116
  %148 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 1, i32 1, i32 0
  %149 = bitcast i64* %148 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %147, %143, %116
  %152 = phi i32 [ %117, %147 ], [ %146, %143 ], [ %117, %116 ]
  %153 = phi i8* [ %150, %147 ], [ %118, %143 ], [ %118, %116 ]
  %154 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 2, i32 0
  %155 = load i64, i64* %154, align 8
  switch i64 %155, label %164 [
    i64 5, label %160
    i64 14, label %156
  ]

156:                                              ; preds = %151
  %157 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 2, i32 1, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = trunc i64 %158 to i32
  br label %164

160:                                              ; preds = %151
  %161 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 2, i32 1, i32 0
  %162 = bitcast i64* %161 to i8**
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %160, %156, %151
  %165 = phi i32 [ %152, %160 ], [ %159, %156 ], [ %152, %151 ]
  %166 = phi i8* [ %163, %160 ], [ %153, %156 ], [ %153, %151 ]
  %167 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 3, i32 0
  %168 = load i64, i64* %167, align 8
  switch i64 %168, label %177 [
    i64 5, label %173
    i64 14, label %169
  ]

169:                                              ; preds = %164
  %170 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 3, i32 1, i32 0
  %171 = load i64, i64* %170, align 8
  %172 = trunc i64 %171 to i32
  br label %177

173:                                              ; preds = %164
  %174 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 3, i32 1, i32 0
  %175 = bitcast i64* %174 to i8**
  %176 = load i8*, i8** %175, align 8
  br label %177

177:                                              ; preds = %173, %169, %164
  %178 = phi i32 [ %165, %173 ], [ %172, %169 ], [ %165, %164 ]
  %179 = phi i8* [ %176, %173 ], [ %166, %169 ], [ %166, %164 ]
  %180 = getelementptr inbounds %struct.Elf64_Dyn, %struct.Elf64_Dyn* %102, i64 4
  %181 = add i64 %105, -4
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %67, label %101
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIK10Elf64_PhdrEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator"*, %struct.Elf64_Phdr*, %struct.Elf64_Phdr*, %struct.Elf64_Phdr*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %struct.Elf64_Phdr*, align 8
  %8 = alloca %struct.Elf64_Phdr*, align 8
  %9 = alloca %struct.Elf64_Phdr*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %struct.Elf64_Phdr* %1, %struct.Elf64_Phdr** %7, align 8
  store %struct.Elf64_Phdr* %2, %struct.Elf64_Phdr** %8, align 8
  store %struct.Elf64_Phdr* %3, %struct.Elf64_Phdr** %9, align 8
  %14 = ptrtoint %struct.Elf64_Phdr* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %struct.Elf64_Phdr* %2 to i64
  %18 = bitcast %struct.Elf64_Phdr** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %struct.Elf64_Phdr* %3 to i64
  %21 = bitcast %struct.Elf64_Phdr** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %struct.Elf64_Phdr* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %struct.Elf64_Phdr** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  %30 = bitcast %struct.Elf64_Phdr** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* %29, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %8, align 8
  %43 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %9, align 8
  %44 = icmp ugt %struct.Elf64_Phdr* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %struct.Elf64_Phdr** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  %49 = bitcast %struct.Elf64_Phdr** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* %48, i8* %50) #10
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #10
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIK10Elf64_PhdrE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %11, align 8
  %15 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %12, align 8
  %16 = icmp eq %struct.Elf64_Phdr* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %20, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %32, align 8
  %36 = load %struct.Elf64_Phdr*, %struct.Elf64_Phdr** %33, align 8
  %37 = icmp eq %struct.Elf64_Phdr* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %struct.Elf64_Phdr** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  %42 = bitcast %struct.Elf64_Phdr** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPK10Elf64_PhdrEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i8* %41, i8* %43) #10
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #10
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare i64 @_ZN4base7strings8internal12SafeSNPrintfEPcmPKcPKNS1_3ArgEm(i8*, i64, i8*, %"struct.base::strings::internal::Arg"*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
