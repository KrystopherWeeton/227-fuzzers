; ModuleID = '../../services/viz/public/cpp/compositing/compositor_frame_transition_directive_mojom_traits.cc'
source_filename = "../../services/viz/public/cpp/compositing/compositor_frame_transition_directive_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::internal::CompositorFrameTransitionDirective_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, [4 x i8], %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"class.viz::CompositorFrameTransitionDirective" = type { i32, i32, i32, %"class.std::__1::vector.20" }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair.22" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.util::IdType"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.viz::mojom::internal::CompositorRenderPassId_Data" = type { %"struct.mojo::internal::StructHeader", i64 }

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN3viz5mojom38CompositorFrameTransitionDirectiveTypeENS1_34CompositorFrameTransitionDirective4TypeEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, 1
  %3 = zext i1 %2 to i32
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN3viz5mojom38CompositorFrameTransitionDirectiveTypeENS1_34CompositorFrameTransitionDirective4TypeEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 2
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN3viz5mojom40CompositorFrameTransitionDirectiveEffectENS1_34CompositorFrameTransitionDirective6EffectEE7ToMojomES5_(i32) local_unnamed_addr #0 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 11
  %4 = select i1 %3, i32 %0, i32 0
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN3viz5mojom40CompositorFrameTransitionDirectiveEffectENS1_34CompositorFrameTransitionDirective6EffectEE9FromMojomES3_PS5_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 12
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom42CompositorFrameTransitionDirectiveDataViewENS1_34CompositorFrameTransitionDirectiveEE4ReadES3_PS4_(%"class.viz::mojom::internal::CompositorFrameTransitionDirective_Data"*, %"class.mojo::Message"*, %"class.viz::CompositorFrameTransitionDirective"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.viz::CompositorFrameTransitionDirective", align 8
  %5 = alloca %"class.std::__1::vector.20", align 8
  %6 = getelementptr inbounds %"class.viz::mojom::internal::CompositorFrameTransitionDirective_Data", %"class.viz::mojom::internal::CompositorFrameTransitionDirective_Data"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 1
  %8 = getelementptr inbounds %"class.viz::mojom::internal::CompositorFrameTransitionDirective_Data", %"class.viz::mojom::internal::CompositorFrameTransitionDirective_Data"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 1
  switch i32 %9, label %83 [
    i32 0, label %11
    i32 1, label %10
  ]

10:                                               ; preds = %3
  br label %11

11:                                               ; preds = %3, %10
  %12 = phi i32 [ 1, %10 ], [ %9, %3 ]
  %13 = getelementptr inbounds %"class.viz::mojom::internal::CompositorFrameTransitionDirective_Data", %"class.viz::mojom::internal::CompositorFrameTransitionDirective_Data"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 1
  %15 = icmp ult i32 %14, 12
  br i1 %15, label %16, label %83

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.viz::mojom::internal::CompositorFrameTransitionDirective_Data", %"class.viz::mojom::internal::CompositorFrameTransitionDirective_Data"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %17, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %65, label %21

21:                                               ; preds = %16
  %22 = bitcast %"struct.mojo::internal::Pointer"* %17 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %19
  %24 = getelementptr inbounds i8, i8* %23, i64 4
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 1
  %27 = zext i32 %26 to i64
  %28 = icmp eq i32 %26, 0
  br i1 %28, label %65, label %29

29:                                               ; preds = %21
  %30 = shl nuw nsw i64 %27, 3
  %31 = tail call i8* @_Znwm(i64 %30) #8
  %32 = bitcast i8* %31 to %"class.util::IdType"*
  %33 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %32, i64 %27
  %34 = ptrtoint i8* %31 to i64
  %35 = add nsw i64 %27, -1
  %36 = getelementptr %"class.util::IdType", %"class.util::IdType"* %32, i64 %35, i32 0, i32 0
  %37 = ptrtoint i64* %36 to i64
  %38 = sub i64 8, %34
  %39 = add i64 %38, %37
  %40 = and i64 %39, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 %40, i1 false) #9
  %41 = ptrtoint %"class.util::IdType"* %33 to i64
  %42 = getelementptr inbounds i8, i8* %23, i64 8
  %43 = bitcast i8* %42 to %"class.mojo::internal::Array_Data"*
  %44 = bitcast i8* %31 to %"class.util::IdType"*
  br label %45

45:                                               ; preds = %61, %29
  %46 = phi i32 [ %26, %29 ], [ %62, %61 ]
  %47 = phi i64 [ 0, %29 ], [ %52, %61 ]
  %48 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %43, i64 %47
  %49 = bitcast %"class.mojo::internal::Array_Data"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  %52 = add nuw nsw i64 %47, 1
  br i1 %51, label %61, label %53

53:                                               ; preds = %45
  %54 = bitcast %"class.mojo::internal::Array_Data"* %48 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 %50
  %56 = bitcast i8* %55 to %"class.viz::mojom::internal::CompositorRenderPassId_Data"*
  %57 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %44, i64 %47
  %58 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom30CompositorRenderPassIdDataViewEN4util6IdTypeINS1_20CompositorRenderPassEmLm0ELm1EEEE4ReadES3_PS7_(%"class.viz::mojom::internal::CompositorRenderPassId_Data"* nonnull %56, %"class.util::IdType"* %57) #9
  br i1 %58, label %59, label %82

59:                                               ; preds = %53
  %60 = load i32, i32* %25, align 1
  br label %61

61:                                               ; preds = %59, %45
  %62 = phi i32 [ %60, %59 ], [ %46, %45 ]
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %52, %63
  br i1 %64, label %45, label %65

65:                                               ; preds = %61, %21, %16
  %66 = phi i64 [ 0, %16 ], [ 0, %21 ], [ %34, %61 ]
  %67 = phi i64 [ 0, %16 ], [ 0, %21 ], [ %41, %61 ]
  %68 = bitcast %"class.viz::CompositorFrameTransitionDirective"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %68) #9
  %69 = bitcast %"class.std::__1::vector.20"* %5 to i64*
  store i64 %66, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %5, i64 0, i32 0, i32 1
  %71 = bitcast %"class.util::IdType"** %70 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %73 = bitcast %"class.util::IdType"** %72 to i64*
  store i64 %67, i64* %73, align 8
  call void @_ZN3viz34CompositorFrameTransitionDirectiveC1EjNS0_4TypeENS0_6EffectENSt3__16vectorIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEENS3_9allocatorIS8_EEEE(%"class.viz::CompositorFrameTransitionDirective"* nonnull %4, i32 %7, i32 %12, i32 %14, %"class.std::__1::vector.20"* nonnull %5) #9
  %74 = call dereferenceable(40) %"class.viz::CompositorFrameTransitionDirective"* @_ZN3viz34CompositorFrameTransitionDirectiveaSERKS0_(%"class.viz::CompositorFrameTransitionDirective"* %2, %"class.viz::CompositorFrameTransitionDirective"* nonnull dereferenceable(40) %4) #9
  call void @_ZN3viz34CompositorFrameTransitionDirectiveD1Ev(%"class.viz::CompositorFrameTransitionDirective"* nonnull %4) #9
  %75 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %5, i64 0, i32 0, i32 0
  %76 = load %"class.util::IdType"*, %"class.util::IdType"** %75, align 8
  %77 = icmp eq %"class.util::IdType"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %65
  %79 = ptrtoint %"class.util::IdType"* %76 to i64
  store i64 %79, i64* %71, align 8
  %80 = bitcast %"class.util::IdType"* %76 to i8*
  call void @_ZdlPv(i8* %80) #8
  br label %81

81:                                               ; preds = %65, %78
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %68) #9
  br label %83

82:                                               ; preds = %53
  tail call void @_ZdlPv(i8* nonnull %31) #8
  br label %83

83:                                               ; preds = %11, %3, %81, %82
  %84 = phi i1 [ false, %82 ], [ false, %11 ], [ false, %3 ], [ true, %81 ]
  ret i1 %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN3viz34CompositorFrameTransitionDirectiveC1EjNS0_4TypeENS0_6EffectENSt3__16vectorIN4util6IdTypeINS_20CompositorRenderPassEmLm0ELm1EEENS3_9allocatorIS8_EEEE(%"class.viz::CompositorFrameTransitionDirective"*, i32, i32, i32, %"class.std::__1::vector.20"*) unnamed_addr #4

declare dereferenceable(40) %"class.viz::CompositorFrameTransitionDirective"* @_ZN3viz34CompositorFrameTransitionDirectiveaSERKS0_(%"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"* dereferenceable(40)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3viz34CompositorFrameTransitionDirectiveD1Ev(%"class.viz::CompositorFrameTransitionDirective"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom30CompositorRenderPassIdDataViewEN4util6IdTypeINS1_20CompositorRenderPassEmLm0ELm1EEEE4ReadES3_PS7_(%"class.viz::mojom::internal::CompositorRenderPassId_Data"*, %"class.util::IdType"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
