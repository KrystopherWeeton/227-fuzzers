; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/resize_bilinear.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/resize_bilinear.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteResizeBilinearParams = type { i8, i8 }
%"struct.tflite::ResizeBilinearParams" = type { i8, i8 }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }

$_ZN6tflite3ops7builtin15resize_bilinear4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin15resize_bilinear4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin15resize_bilinear4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKiS7_PS8_ = comdat any

$_ZN6tflite13reference_ops14ResizeBilinearIhEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKiS7_PS8_ = comdat any

$_ZN6tflite13reference_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKaS6_PKiS6_Pa = comdat any

$_ZN6tflite13optimized_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKfS6_PKiS6_Pf = comdat any

$_ZN6tflite13optimized_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKhS6_PKiS6_Ph = comdat any

$_ZN6tflite13optimized_ops21ResizeBilinearGenericEiiiiiiffRKNS_12RuntimeShapeEPKfS3_Pfb = comdat any

$_ZN6tflite13optimized_ops33ResizeBilinearGenericSmallChannelIhEEviiiiiiffRKNS_12RuntimeShapeEPKT_S4_PS5_b = comdat any

@.str = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.3 = private unnamed_addr constant [72 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/resize_bilinear.cc\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"size_data[0] > 0\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"size_data[1] > 0\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"NumDimensions(input)\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"NumDimensions(size)\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"size->type\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"kTfLiteInt32\00", align 1
@.str.16 = private unnamed_addr constant [60 x i8] c"If half_pixel_centers is True, align_corners must be False.\00", align 1
@_ZZN6tflite3ops7builtin28Register_RESIZE_BILINEAR_REFEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15resize_bilinear7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15resize_bilinear4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin36Register_RESIZE_BILINEAR_GENERIC_OPTEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15resize_bilinear7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15resize_bilinear4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin33Register_RESIZE_BILINEAR_NEON_OPTEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15resize_bilinear7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin15resize_bilinear4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.18 = private unnamed_addr constant [35 x i8] c"Output type is %d, requires float.\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin15resize_bilinear18ResizeOutputTensorEP13TfLiteContextPK12TfLiteTensorS7_PS5_(%struct.TfLiteContext*, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1, i32 0
  %8 = load i32*, i32** %7, align 8
  br label %9

9:                                                ; preds = %4, %6
  %10 = phi i32* [ %8, %6 ], [ null, %4 ]
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %15 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %14, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %15(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 50, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %41

16:                                               ; preds = %9
  %17 = getelementptr inbounds i32, i32* %10, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %22 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %21, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %22(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %41

23:                                               ; preds = %16
  %24 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 4) #9
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %26 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %25, align 8
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %26, i64 0, i32 1, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 0
  store i32 %28, i32* %29, align 4
  %30 = load i32, i32* %10, align 4
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 1
  store i32 %30, i32* %31, align 4
  %32 = load i32, i32* %17, align 4
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 2
  store i32 %32, i32* %33, align 4
  %34 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %25, align 8
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %34, i64 0, i32 1, i64 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %24, i64 0, i32 1, i64 3
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %39 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %38, align 8
  %40 = tail call i32 %39(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %3, %struct.TfLiteIntArray* %24) #9
  br label %41

41:                                               ; preds = %23, %20, %13
  %42 = phi i32 [ %40, %23 ], [ 1, %20 ], [ 1, %13 ]
  ret i32 %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin15resize_bilinear7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %6, i32 2) #9
  br label %139

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 62, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i32 %15, i32 1) #9
  br label %139

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %46 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %45, align 8
  %47 = sext i32 %42 to i64
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 %47
  br label %49

49:                                               ; preds = %39, %44
  %50 = phi %struct.TfLiteTensor* [ %48, %44 ], [ null, %39 ]
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %52 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %51, align 8
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 4
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %58 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %57, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %58(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 69, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i32 %54, i32 4) #9
  br label %139

59:                                               ; preds = %49
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %61 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %60, align 8
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %67 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %66, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %67(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 70, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i32 %63, i32 1) #9
  br label %139

68:                                               ; preds = %59
  %69 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 2
  br i1 %71, label %75, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %74 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %73, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %74(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i32 %70, i32 2) #9
  br label %139

75:                                               ; preds = %68
  %76 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 4
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %89, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 4
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 4
  br i1 %85, label %139, label %86

86:                                               ; preds = %82
  store i32 4, i32* %83, align 8
  %87 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 1
  %88 = bitcast %union.TfLitePtrUnion* %87 to i8**
  store i8* null, i8** %88, align 8
  br label %139

89:                                               ; preds = %75
  %90 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %91 = bitcast i8** %90 to %struct.TfLiteResizeBilinearParams**
  %92 = load %struct.TfLiteResizeBilinearParams*, %struct.TfLiteResizeBilinearParams** %91, align 8
  %93 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %92, i64 0, i32 1
  %94 = load i8, i8* %93, align 1, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %103, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %92, i64 0, i32 0
  %98 = load i8, i8* %97, align 1, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %102 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %101, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %102(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.16, i64 0, i64 0)) #9
  br label %139

103:                                              ; preds = %96, %89
  %104 = icmp eq %struct.TfLiteTensor* %40, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1, i32 0
  %107 = load i32*, i32** %106, align 8
  br label %108

108:                                              ; preds = %105, %103
  %109 = phi i32* [ %107, %105 ], [ null, %103 ]
  %110 = load i32, i32* %109, align 4
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %114 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %113, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %114(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 50, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %139

115:                                              ; preds = %108
  %116 = getelementptr inbounds i32, i32* %109, i64 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %121 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %120, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %121(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %139

122:                                              ; preds = %115
  %123 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 4) #9
  %124 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %51, align 8
  %125 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %124, i64 0, i32 1, i64 0
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %123, i64 0, i32 1, i64 0
  store i32 %126, i32* %127, align 4
  %128 = load i32, i32* %109, align 4
  %129 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %123, i64 0, i32 1, i64 1
  store i32 %128, i32* %129, align 4
  %130 = load i32, i32* %116, align 4
  %131 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %123, i64 0, i32 1, i64 2
  store i32 %130, i32* %131, align 4
  %132 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %51, align 8
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %132, i64 0, i32 1, i64 3
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %123, i64 0, i32 1, i64 3
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %137 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %136, align 8
  %138 = tail call i32 %137(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %50, %struct.TfLiteIntArray* %123) #9
  br label %139

139:                                              ; preds = %122, %119, %112, %86, %82, %56, %65, %72, %100, %17, %8
  %140 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %56 ], [ 1, %65 ], [ 1, %72 ], [ 1, %100 ], [ 0, %82 ], [ 0, %86 ], [ %138, %122 ], [ 1, %119 ], [ 1, %112 ]
  ret i32 %140
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin28Register_RESIZE_BILINEAR_REFEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin28Register_RESIZE_BILINEAR_REFEvE1r
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15resize_bilinear4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ResizeBilinearParams", align 1
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"struct.tflite::ResizeBilinearParams", align 1
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::ResizeBilinearParams", align 1
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %16 = bitcast i8** %15 to %struct.TfLiteResizeBilinearParams**
  %17 = load %struct.TfLiteResizeBilinearParams*, %struct.TfLiteResizeBilinearParams** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %19 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %20 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %25 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %24, align 8
  %26 = sext i32 %21 to i64
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 %26
  br label %28

28:                                               ; preds = %2, %23
  %29 = phi %struct.TfLiteTensor* [ %27, %23 ], [ null, %2 ]
  %30 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %31 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %30, align 8
  %32 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %37 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %36, align 8
  %38 = sext i32 %33 to i64
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 %38
  br label %40

40:                                               ; preds = %28, %35
  %41 = phi %struct.TfLiteTensor* [ %39, %35 ], [ null, %28 ]
  %42 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %47 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %46, align 8
  %48 = sext i32 %43 to i64
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 %48
  br label %50

50:                                               ; preds = %40, %45
  %51 = phi %struct.TfLiteTensor* [ %49, %45 ], [ null, %40 ]
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %55, label %93

55:                                               ; preds = %50
  %56 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %59 = load i32*, i32** %58, align 8
  br label %60

60:                                               ; preds = %57, %55
  %61 = phi i32* [ %59, %57 ], [ null, %55 ]
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %66 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %65, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %66(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 50, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %513

67:                                               ; preds = %60
  %68 = getelementptr inbounds i32, i32* %61, i64 1
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %73 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %72, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %73(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %513

74:                                               ; preds = %67
  %75 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 4) #9
  %76 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %77 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %76, align 8
  %78 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %77, i64 0, i32 1, i64 0
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 0
  store i32 %79, i32* %80, align 4
  %81 = load i32, i32* %61, align 4
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 1
  store i32 %81, i32* %82, align 4
  %83 = load i32, i32* %68, align 4
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 2
  store i32 %83, i32* %84, align 4
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %76, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 3
  store i32 %87, i32* %88, align 4
  %89 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %90 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %89, align 8
  %91 = tail call i32 %90(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %41, %struct.TfLiteIntArray* %75) #9
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %513

93:                                               ; preds = %74, %50
  %94 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  switch i32 %95, label %510 [
    i32 1, label %96
    i32 3, label %234
    i32 9, label %372
  ]

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %97) #9
  store i8 -86, i8* %97, align 1
  %98 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %3, i64 0, i32 1
  store i8 -86, i8* %98, align 1
  %99 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 0
  %100 = load i8, i8* %99, align 1, !range !2
  store i8 %100, i8* %97, align 1
  %101 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 1
  %102 = load i8, i8* %101, align 1, !range !2
  store i8 %102, i8* %98, align 1
  %103 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #9
  %104 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %96
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %106, align 8, !alias.scope !3
  br label %135

107:                                              ; preds = %96
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %109 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %108, align 8, !noalias !3
  %110 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 4, !noalias !3
  %112 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 1, i64 0
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %111, i32* %113, align 8, !alias.scope !3
  %114 = icmp sgt i32 %111, 5
  br i1 %114, label %115, label %122

115:                                              ; preds = %107
  %116 = sext i32 %111 to i64
  %117 = shl nsw i64 %116, 2
  %118 = tail call i8* @_Znam(i64 %117) #10, !noalias !3
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %120 = bitcast i32** %119 to i8**
  store i8* %118, i8** %120, align 8, !alias.scope !3
  %121 = bitcast i8* %118 to i32*
  br label %127

122:                                              ; preds = %107
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %124 = bitcast %union.anon* %123 to i32*
  %125 = sext i32 %111 to i64
  %126 = shl nsw i64 %125, 2
  br label %127

127:                                              ; preds = %122, %115
  %128 = phi i64 [ %117, %115 ], [ %126, %122 ]
  %129 = phi i32* [ %121, %115 ], [ %124, %122 ]
  %130 = bitcast i32* %129 to i8*
  %131 = bitcast i32* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %131, i64 %128, i1 false) #9
  %132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %133 = bitcast %union.TfLitePtrUnion* %132 to float**
  %134 = load float*, float** %133, align 8
  br label %135

135:                                              ; preds = %105, %127
  %136 = phi float* [ %134, %127 ], [ null, %105 ]
  %137 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %137) #9
  %138 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %138, label %139, label %141

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %140, align 8, !alias.scope !6
  br label %168

141:                                              ; preds = %135
  %142 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %143 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %142, align 8, !noalias !6
  %144 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 4, !noalias !6
  %146 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %143, i64 0, i32 1, i64 0
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %145, i32* %147, align 8, !alias.scope !6
  %148 = icmp sgt i32 %145, 5
  br i1 %148, label %149, label %156

149:                                              ; preds = %141
  %150 = sext i32 %145 to i64
  %151 = shl nsw i64 %150, 2
  %152 = tail call i8* @_Znam(i64 %151) #10, !noalias !6
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %154 = bitcast i32** %153 to i8**
  store i8* %152, i8** %154, align 8, !alias.scope !6
  %155 = bitcast i8* %152 to i32*
  br label %161

156:                                              ; preds = %141
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %158 = bitcast %union.anon* %157 to i32*
  %159 = sext i32 %145 to i64
  %160 = shl nsw i64 %159, 2
  br label %161

161:                                              ; preds = %156, %149
  %162 = phi i64 [ %151, %149 ], [ %160, %156 ]
  %163 = phi i32* [ %155, %149 ], [ %158, %156 ]
  %164 = bitcast i32* %163 to i8*
  %165 = bitcast i32* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %164, i8* align 4 %165, i64 %162, i1 false) #9
  %166 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %167 = load i32*, i32** %166, align 8
  br label %168

168:                                              ; preds = %139, %161
  %169 = phi i32* [ %167, %161 ], [ null, %139 ]
  %170 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170) #9
  %171 = icmp eq %struct.TfLiteTensor* %41, null
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %173, align 8, !alias.scope !9
  br label %202

174:                                              ; preds = %168
  %175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 2
  %176 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %175, align 8, !noalias !9
  %177 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %176, i64 0, i32 0
  %178 = load i32, i32* %177, align 4, !noalias !9
  %179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %176, i64 0, i32 1, i64 0
  %180 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %178, i32* %180, align 8, !alias.scope !9
  %181 = icmp sgt i32 %178, 5
  br i1 %181, label %182, label %189

182:                                              ; preds = %174
  %183 = sext i32 %178 to i64
  %184 = shl nsw i64 %183, 2
  %185 = tail call i8* @_Znam(i64 %184) #10, !noalias !9
  %186 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %187 = bitcast i32** %186 to i8**
  store i8* %185, i8** %187, align 8, !alias.scope !9
  %188 = bitcast i8* %185 to i32*
  br label %194

189:                                              ; preds = %174
  %190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %191 = bitcast %union.anon* %190 to i32*
  %192 = sext i32 %178 to i64
  %193 = shl nsw i64 %192, 2
  br label %194

194:                                              ; preds = %189, %182
  %195 = phi i64 [ %184, %182 ], [ %193, %189 ]
  %196 = phi i32* [ %188, %182 ], [ %191, %189 ]
  %197 = bitcast i32* %196 to i8*
  %198 = bitcast i32* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %197, i8* align 4 %198, i64 %195, i1 false) #9
  %199 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 1
  %200 = bitcast %union.TfLitePtrUnion* %199 to float**
  %201 = load float*, float** %200, align 8
  br label %202

202:                                              ; preds = %172, %194
  %203 = phi float* [ %201, %194 ], [ null, %172 ]
  call void @_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKiS7_PS8_(%"struct.tflite::ResizeBilinearParams"* nonnull dereferenceable(2) %3, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %136, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i32* %169, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %203)
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp sgt i32 %205, 5
  br i1 %206, label %207, label %213

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %209 = load i32*, i32** %208, align 8
  %210 = icmp eq i32* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %207
  %212 = bitcast i32* %209 to i8*
  call void @_ZdaPv(i8* %212) #10
  br label %213

213:                                              ; preds = %202, %207, %211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170) #9
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = icmp sgt i32 %215, 5
  br i1 %216, label %217, label %223

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = icmp eq i32* %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %217
  %222 = bitcast i32* %219 to i8*
  call void @_ZdaPv(i8* %222) #10
  br label %223

223:                                              ; preds = %213, %217, %221
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %137) #9
  %224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %225 = load i32, i32* %224, align 8
  %226 = icmp sgt i32 %225, 5
  br i1 %226, label %227, label %233

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %229 = load i32*, i32** %228, align 8
  %230 = icmp eq i32* %229, null
  br i1 %230, label %233, label %231

231:                                              ; preds = %227
  %232 = bitcast i32* %229 to i8*
  call void @_ZdaPv(i8* %232) #10
  br label %233

233:                                              ; preds = %223, %227, %231
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %97) #9
  br label %513

234:                                              ; preds = %93
  %235 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %235) #9
  store i8 -86, i8* %235, align 1
  %236 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %7, i64 0, i32 1
  store i8 -86, i8* %236, align 1
  %237 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 0
  %238 = load i8, i8* %237, align 1, !range !2
  store i8 %238, i8* %235, align 1
  %239 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 1
  %240 = load i8, i8* %239, align 1, !range !2
  store i8 %240, i8* %236, align 1
  %241 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %241) #9
  %242 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %242, label %243, label %245

243:                                              ; preds = %234
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %244, align 8, !alias.scope !12
  br label %273

245:                                              ; preds = %234
  %246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %247 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %246, align 8, !noalias !12
  %248 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %247, i64 0, i32 0
  %249 = load i32, i32* %248, align 4, !noalias !12
  %250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %247, i64 0, i32 1, i64 0
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %249, i32* %251, align 8, !alias.scope !12
  %252 = icmp sgt i32 %249, 5
  br i1 %252, label %253, label %260

253:                                              ; preds = %245
  %254 = sext i32 %249 to i64
  %255 = shl nsw i64 %254, 2
  %256 = tail call i8* @_Znam(i64 %255) #10, !noalias !12
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %258 = bitcast i32** %257 to i8**
  store i8* %256, i8** %258, align 8, !alias.scope !12
  %259 = bitcast i8* %256 to i32*
  br label %265

260:                                              ; preds = %245
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %262 = bitcast %union.anon* %261 to i32*
  %263 = sext i32 %249 to i64
  %264 = shl nsw i64 %263, 2
  br label %265

265:                                              ; preds = %260, %253
  %266 = phi i64 [ %255, %253 ], [ %264, %260 ]
  %267 = phi i32* [ %259, %253 ], [ %262, %260 ]
  %268 = bitcast i32* %267 to i8*
  %269 = bitcast i32* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %269, i64 %266, i1 false) #9
  %270 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %271 = bitcast %union.TfLitePtrUnion* %270 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %243, %265
  %274 = phi i8* [ %272, %265 ], [ null, %243 ]
  %275 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %275) #9
  %276 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %276, label %277, label %279

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %278, align 8, !alias.scope !15
  br label %306

279:                                              ; preds = %273
  %280 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %281 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %280, align 8, !noalias !15
  %282 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 0
  %283 = load i32, i32* %282, align 4, !noalias !15
  %284 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 1, i64 0
  %285 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %283, i32* %285, align 8, !alias.scope !15
  %286 = icmp sgt i32 %283, 5
  br i1 %286, label %287, label %294

287:                                              ; preds = %279
  %288 = sext i32 %283 to i64
  %289 = shl nsw i64 %288, 2
  %290 = tail call i8* @_Znam(i64 %289) #10, !noalias !15
  %291 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %292 = bitcast i32** %291 to i8**
  store i8* %290, i8** %292, align 8, !alias.scope !15
  %293 = bitcast i8* %290 to i32*
  br label %299

294:                                              ; preds = %279
  %295 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %296 = bitcast %union.anon* %295 to i32*
  %297 = sext i32 %283 to i64
  %298 = shl nsw i64 %297, 2
  br label %299

299:                                              ; preds = %294, %287
  %300 = phi i64 [ %289, %287 ], [ %298, %294 ]
  %301 = phi i32* [ %293, %287 ], [ %296, %294 ]
  %302 = bitcast i32* %301 to i8*
  %303 = bitcast i32* %284 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 4 %303, i64 %300, i1 false) #9
  %304 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %305 = load i32*, i32** %304, align 8
  br label %306

306:                                              ; preds = %277, %299
  %307 = phi i32* [ %305, %299 ], [ null, %277 ]
  %308 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %308) #9
  %309 = icmp eq %struct.TfLiteTensor* %41, null
  br i1 %309, label %310, label %312

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %311, align 8, !alias.scope !18
  br label %340

312:                                              ; preds = %306
  %313 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 2
  %314 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %313, align 8, !noalias !18
  %315 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %314, i64 0, i32 0
  %316 = load i32, i32* %315, align 4, !noalias !18
  %317 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %314, i64 0, i32 1, i64 0
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %316, i32* %318, align 8, !alias.scope !18
  %319 = icmp sgt i32 %316, 5
  br i1 %319, label %320, label %327

320:                                              ; preds = %312
  %321 = sext i32 %316 to i64
  %322 = shl nsw i64 %321, 2
  %323 = tail call i8* @_Znam(i64 %322) #10, !noalias !18
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %325 = bitcast i32** %324 to i8**
  store i8* %323, i8** %325, align 8, !alias.scope !18
  %326 = bitcast i8* %323 to i32*
  br label %332

327:                                              ; preds = %312
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %329 = bitcast %union.anon* %328 to i32*
  %330 = sext i32 %316 to i64
  %331 = shl nsw i64 %330, 2
  br label %332

332:                                              ; preds = %327, %320
  %333 = phi i64 [ %322, %320 ], [ %331, %327 ]
  %334 = phi i32* [ %326, %320 ], [ %329, %327 ]
  %335 = bitcast i32* %334 to i8*
  %336 = bitcast i32* %317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %335, i8* align 4 %336, i64 %333, i1 false) #9
  %337 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 1
  %338 = bitcast %union.TfLitePtrUnion* %337 to i8**
  %339 = load i8*, i8** %338, align 8
  br label %340

340:                                              ; preds = %310, %332
  %341 = phi i8* [ %339, %332 ], [ null, %310 ]
  call void @_ZN6tflite13reference_ops14ResizeBilinearIhEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKiS7_PS8_(%"struct.tflite::ResizeBilinearParams"* nonnull dereferenceable(2) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %274, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i32* %307, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %341)
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %343 = load i32, i32* %342, align 8
  %344 = icmp sgt i32 %343, 5
  br i1 %344, label %345, label %351

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %347 = load i32*, i32** %346, align 8
  %348 = icmp eq i32* %347, null
  br i1 %348, label %351, label %349

349:                                              ; preds = %345
  %350 = bitcast i32* %347 to i8*
  call void @_ZdaPv(i8* %350) #10
  br label %351

351:                                              ; preds = %340, %345, %349
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %308) #9
  %352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %353 = load i32, i32* %352, align 8
  %354 = icmp sgt i32 %353, 5
  br i1 %354, label %355, label %361

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %357 = load i32*, i32** %356, align 8
  %358 = icmp eq i32* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %355
  %360 = bitcast i32* %357 to i8*
  call void @_ZdaPv(i8* %360) #10
  br label %361

361:                                              ; preds = %351, %355, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %275) #9
  %362 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %363 = load i32, i32* %362, align 8
  %364 = icmp sgt i32 %363, 5
  br i1 %364, label %365, label %371

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %367 = load i32*, i32** %366, align 8
  %368 = icmp eq i32* %367, null
  br i1 %368, label %371, label %369

369:                                              ; preds = %365
  %370 = bitcast i32* %367 to i8*
  call void @_ZdaPv(i8* %370) #10
  br label %371

371:                                              ; preds = %361, %365, %369
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %241) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %235) #9
  br label %513

372:                                              ; preds = %93
  %373 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %373) #9
  store i8 -86, i8* %373, align 1
  %374 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %11, i64 0, i32 1
  store i8 -86, i8* %374, align 1
  %375 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 0
  %376 = load i8, i8* %375, align 1, !range !2
  store i8 %376, i8* %373, align 1
  %377 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 1
  %378 = load i8, i8* %377, align 1, !range !2
  store i8 %378, i8* %374, align 1
  %379 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %379) #9
  %380 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %380, label %381, label %383

381:                                              ; preds = %372
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %382, align 8, !alias.scope !21
  br label %411

383:                                              ; preds = %372
  %384 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %385 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %384, align 8, !noalias !21
  %386 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %385, i64 0, i32 0
  %387 = load i32, i32* %386, align 4, !noalias !21
  %388 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %385, i64 0, i32 1, i64 0
  %389 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %387, i32* %389, align 8, !alias.scope !21
  %390 = icmp sgt i32 %387, 5
  br i1 %390, label %391, label %398

391:                                              ; preds = %383
  %392 = sext i32 %387 to i64
  %393 = shl nsw i64 %392, 2
  %394 = tail call i8* @_Znam(i64 %393) #10, !noalias !21
  %395 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %396 = bitcast i32** %395 to i8**
  store i8* %394, i8** %396, align 8, !alias.scope !21
  %397 = bitcast i8* %394 to i32*
  br label %403

398:                                              ; preds = %383
  %399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %400 = bitcast %union.anon* %399 to i32*
  %401 = sext i32 %387 to i64
  %402 = shl nsw i64 %401, 2
  br label %403

403:                                              ; preds = %398, %391
  %404 = phi i64 [ %393, %391 ], [ %402, %398 ]
  %405 = phi i32* [ %397, %391 ], [ %400, %398 ]
  %406 = bitcast i32* %405 to i8*
  %407 = bitcast i32* %388 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %406, i8* align 4 %407, i64 %404, i1 false) #9
  %408 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %409 = bitcast %union.TfLitePtrUnion* %408 to i8**
  %410 = load i8*, i8** %409, align 8
  br label %411

411:                                              ; preds = %381, %403
  %412 = phi i8* [ %410, %403 ], [ null, %381 ]
  %413 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %413) #9
  %414 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %414, label %415, label %417

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %416, align 8, !alias.scope !24
  br label %444

417:                                              ; preds = %411
  %418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %419 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %418, align 8, !noalias !24
  %420 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %419, i64 0, i32 0
  %421 = load i32, i32* %420, align 4, !noalias !24
  %422 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %419, i64 0, i32 1, i64 0
  %423 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %421, i32* %423, align 8, !alias.scope !24
  %424 = icmp sgt i32 %421, 5
  br i1 %424, label %425, label %432

425:                                              ; preds = %417
  %426 = sext i32 %421 to i64
  %427 = shl nsw i64 %426, 2
  %428 = tail call i8* @_Znam(i64 %427) #10, !noalias !24
  %429 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %430 = bitcast i32** %429 to i8**
  store i8* %428, i8** %430, align 8, !alias.scope !24
  %431 = bitcast i8* %428 to i32*
  br label %437

432:                                              ; preds = %417
  %433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %434 = bitcast %union.anon* %433 to i32*
  %435 = sext i32 %421 to i64
  %436 = shl nsw i64 %435, 2
  br label %437

437:                                              ; preds = %432, %425
  %438 = phi i64 [ %427, %425 ], [ %436, %432 ]
  %439 = phi i32* [ %431, %425 ], [ %434, %432 ]
  %440 = bitcast i32* %439 to i8*
  %441 = bitcast i32* %422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %440, i8* align 4 %441, i64 %438, i1 false) #9
  %442 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %443 = load i32*, i32** %442, align 8
  br label %444

444:                                              ; preds = %415, %437
  %445 = phi i32* [ %443, %437 ], [ null, %415 ]
  %446 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %446) #9
  %447 = icmp eq %struct.TfLiteTensor* %41, null
  br i1 %447, label %448, label %450

448:                                              ; preds = %444
  %449 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %449, align 8, !alias.scope !27
  br label %478

450:                                              ; preds = %444
  %451 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 2
  %452 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %451, align 8, !noalias !27
  %453 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %452, i64 0, i32 0
  %454 = load i32, i32* %453, align 4, !noalias !27
  %455 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %452, i64 0, i32 1, i64 0
  %456 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %454, i32* %456, align 8, !alias.scope !27
  %457 = icmp sgt i32 %454, 5
  br i1 %457, label %458, label %465

458:                                              ; preds = %450
  %459 = sext i32 %454 to i64
  %460 = shl nsw i64 %459, 2
  %461 = tail call i8* @_Znam(i64 %460) #10, !noalias !27
  %462 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %463 = bitcast i32** %462 to i8**
  store i8* %461, i8** %463, align 8, !alias.scope !27
  %464 = bitcast i8* %461 to i32*
  br label %470

465:                                              ; preds = %450
  %466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %467 = bitcast %union.anon* %466 to i32*
  %468 = sext i32 %454 to i64
  %469 = shl nsw i64 %468, 2
  br label %470

470:                                              ; preds = %465, %458
  %471 = phi i64 [ %460, %458 ], [ %469, %465 ]
  %472 = phi i32* [ %464, %458 ], [ %467, %465 ]
  %473 = bitcast i32* %472 to i8*
  %474 = bitcast i32* %455 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %473, i8* align 4 %474, i64 %471, i1 false) #9
  %475 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 1
  %476 = bitcast %union.TfLitePtrUnion* %475 to i8**
  %477 = load i8*, i8** %476, align 8
  br label %478

478:                                              ; preds = %448, %470
  %479 = phi i8* [ %477, %470 ], [ null, %448 ]
  call void @_ZN6tflite13reference_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKaS6_PKiS6_Pa(%"struct.tflite::ResizeBilinearParams"* nonnull dereferenceable(2) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %412, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i32* %445, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %479)
  %480 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %481 = load i32, i32* %480, align 8
  %482 = icmp sgt i32 %481, 5
  br i1 %482, label %483, label %489

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %485 = load i32*, i32** %484, align 8
  %486 = icmp eq i32* %485, null
  br i1 %486, label %489, label %487

487:                                              ; preds = %483
  %488 = bitcast i32* %485 to i8*
  call void @_ZdaPv(i8* %488) #10
  br label %489

489:                                              ; preds = %478, %483, %487
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %446) #9
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %491 = load i32, i32* %490, align 8
  %492 = icmp sgt i32 %491, 5
  br i1 %492, label %493, label %499

493:                                              ; preds = %489
  %494 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %495 = load i32*, i32** %494, align 8
  %496 = icmp eq i32* %495, null
  br i1 %496, label %499, label %497

497:                                              ; preds = %493
  %498 = bitcast i32* %495 to i8*
  call void @_ZdaPv(i8* %498) #10
  br label %499

499:                                              ; preds = %489, %493, %497
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %413) #9
  %500 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %501 = load i32, i32* %500, align 8
  %502 = icmp sgt i32 %501, 5
  br i1 %502, label %503, label %509

503:                                              ; preds = %499
  %504 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %505 = load i32*, i32** %504, align 8
  %506 = icmp eq i32* %505, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %503
  %508 = bitcast i32* %505 to i8*
  call void @_ZdaPv(i8* %508) #10
  br label %509

509:                                              ; preds = %499, %503, %507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %379) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %373) #9
  br label %513

510:                                              ; preds = %93
  %511 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %512 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %511, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %512(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), i32 %95) #9
  br label %513

513:                                              ; preds = %64, %71, %74, %233, %509, %371, %510
  %514 = phi i32 [ 1, %510 ], [ 0, %371 ], [ 0, %509 ], [ 0, %233 ], [ %91, %74 ], [ 1, %71 ], [ 1, %64 ]
  ret i32 %514
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin36Register_RESIZE_BILINEAR_GENERIC_OPTEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin36Register_RESIZE_BILINEAR_GENERIC_OPTEvE1r
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15resize_bilinear4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ResizeBilinearParams", align 1
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"struct.tflite::ResizeBilinearParams", align 1
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::ResizeBilinearParams", align 1
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %16 = bitcast i8** %15 to %struct.TfLiteResizeBilinearParams**
  %17 = load %struct.TfLiteResizeBilinearParams*, %struct.TfLiteResizeBilinearParams** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %19 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %20 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %25 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %24, align 8
  %26 = sext i32 %21 to i64
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 %26
  br label %28

28:                                               ; preds = %2, %23
  %29 = phi %struct.TfLiteTensor* [ %27, %23 ], [ null, %2 ]
  %30 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %31 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %30, align 8
  %32 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %37 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %36, align 8
  %38 = sext i32 %33 to i64
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 %38
  br label %40

40:                                               ; preds = %28, %35
  %41 = phi %struct.TfLiteTensor* [ %39, %35 ], [ null, %28 ]
  %42 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %47 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %46, align 8
  %48 = sext i32 %43 to i64
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 %48
  br label %50

50:                                               ; preds = %40, %45
  %51 = phi %struct.TfLiteTensor* [ %49, %45 ], [ null, %40 ]
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %55, label %93

55:                                               ; preds = %50
  %56 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %59 = load i32*, i32** %58, align 8
  br label %60

60:                                               ; preds = %57, %55
  %61 = phi i32* [ %59, %57 ], [ null, %55 ]
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %66 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %65, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %66(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 50, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %513

67:                                               ; preds = %60
  %68 = getelementptr inbounds i32, i32* %61, i64 1
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %73 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %72, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %73(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %513

74:                                               ; preds = %67
  %75 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 4) #9
  %76 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %77 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %76, align 8
  %78 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %77, i64 0, i32 1, i64 0
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 0
  store i32 %79, i32* %80, align 4
  %81 = load i32, i32* %61, align 4
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 1
  store i32 %81, i32* %82, align 4
  %83 = load i32, i32* %68, align 4
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 2
  store i32 %83, i32* %84, align 4
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %76, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 3
  store i32 %87, i32* %88, align 4
  %89 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %90 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %89, align 8
  %91 = tail call i32 %90(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %41, %struct.TfLiteIntArray* %75) #9
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %513

93:                                               ; preds = %74, %50
  %94 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  switch i32 %95, label %510 [
    i32 1, label %96
    i32 3, label %234
    i32 9, label %372
  ]

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %97) #9
  store i8 -86, i8* %97, align 1
  %98 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %3, i64 0, i32 1
  store i8 -86, i8* %98, align 1
  %99 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 0
  %100 = load i8, i8* %99, align 1, !range !2
  store i8 %100, i8* %97, align 1
  %101 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 1
  %102 = load i8, i8* %101, align 1, !range !2
  store i8 %102, i8* %98, align 1
  %103 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #9
  %104 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %96
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %106, align 8, !alias.scope !30
  br label %135

107:                                              ; preds = %96
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %109 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %108, align 8, !noalias !30
  %110 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 4, !noalias !30
  %112 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 1, i64 0
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %111, i32* %113, align 8, !alias.scope !30
  %114 = icmp sgt i32 %111, 5
  br i1 %114, label %115, label %122

115:                                              ; preds = %107
  %116 = sext i32 %111 to i64
  %117 = shl nsw i64 %116, 2
  %118 = tail call i8* @_Znam(i64 %117) #10, !noalias !30
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %120 = bitcast i32** %119 to i8**
  store i8* %118, i8** %120, align 8, !alias.scope !30
  %121 = bitcast i8* %118 to i32*
  br label %127

122:                                              ; preds = %107
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %124 = bitcast %union.anon* %123 to i32*
  %125 = sext i32 %111 to i64
  %126 = shl nsw i64 %125, 2
  br label %127

127:                                              ; preds = %122, %115
  %128 = phi i64 [ %117, %115 ], [ %126, %122 ]
  %129 = phi i32* [ %121, %115 ], [ %124, %122 ]
  %130 = bitcast i32* %129 to i8*
  %131 = bitcast i32* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %131, i64 %128, i1 false) #9
  %132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %133 = bitcast %union.TfLitePtrUnion* %132 to float**
  %134 = load float*, float** %133, align 8
  br label %135

135:                                              ; preds = %105, %127
  %136 = phi float* [ %134, %127 ], [ null, %105 ]
  %137 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %137) #9
  %138 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %138, label %139, label %141

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %140, align 8, !alias.scope !33
  br label %168

141:                                              ; preds = %135
  %142 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %143 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %142, align 8, !noalias !33
  %144 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 4, !noalias !33
  %146 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %143, i64 0, i32 1, i64 0
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %145, i32* %147, align 8, !alias.scope !33
  %148 = icmp sgt i32 %145, 5
  br i1 %148, label %149, label %156

149:                                              ; preds = %141
  %150 = sext i32 %145 to i64
  %151 = shl nsw i64 %150, 2
  %152 = tail call i8* @_Znam(i64 %151) #10, !noalias !33
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %154 = bitcast i32** %153 to i8**
  store i8* %152, i8** %154, align 8, !alias.scope !33
  %155 = bitcast i8* %152 to i32*
  br label %161

156:                                              ; preds = %141
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %158 = bitcast %union.anon* %157 to i32*
  %159 = sext i32 %145 to i64
  %160 = shl nsw i64 %159, 2
  br label %161

161:                                              ; preds = %156, %149
  %162 = phi i64 [ %151, %149 ], [ %160, %156 ]
  %163 = phi i32* [ %155, %149 ], [ %158, %156 ]
  %164 = bitcast i32* %163 to i8*
  %165 = bitcast i32* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %164, i8* align 4 %165, i64 %162, i1 false) #9
  %166 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %167 = load i32*, i32** %166, align 8
  br label %168

168:                                              ; preds = %139, %161
  %169 = phi i32* [ %167, %161 ], [ null, %139 ]
  %170 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170) #9
  %171 = icmp eq %struct.TfLiteTensor* %41, null
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %173, align 8, !alias.scope !36
  br label %202

174:                                              ; preds = %168
  %175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 2
  %176 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %175, align 8, !noalias !36
  %177 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %176, i64 0, i32 0
  %178 = load i32, i32* %177, align 4, !noalias !36
  %179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %176, i64 0, i32 1, i64 0
  %180 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %178, i32* %180, align 8, !alias.scope !36
  %181 = icmp sgt i32 %178, 5
  br i1 %181, label %182, label %189

182:                                              ; preds = %174
  %183 = sext i32 %178 to i64
  %184 = shl nsw i64 %183, 2
  %185 = tail call i8* @_Znam(i64 %184) #10, !noalias !36
  %186 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %187 = bitcast i32** %186 to i8**
  store i8* %185, i8** %187, align 8, !alias.scope !36
  %188 = bitcast i8* %185 to i32*
  br label %194

189:                                              ; preds = %174
  %190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %191 = bitcast %union.anon* %190 to i32*
  %192 = sext i32 %178 to i64
  %193 = shl nsw i64 %192, 2
  br label %194

194:                                              ; preds = %189, %182
  %195 = phi i64 [ %184, %182 ], [ %193, %189 ]
  %196 = phi i32* [ %188, %182 ], [ %191, %189 ]
  %197 = bitcast i32* %196 to i8*
  %198 = bitcast i32* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %197, i8* align 4 %198, i64 %195, i1 false) #9
  %199 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 1
  %200 = bitcast %union.TfLitePtrUnion* %199 to float**
  %201 = load float*, float** %200, align 8
  br label %202

202:                                              ; preds = %172, %194
  %203 = phi float* [ %201, %194 ], [ null, %172 ]
  call void @_ZN6tflite13optimized_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKfS6_PKiS6_Pf(%"struct.tflite::ResizeBilinearParams"* nonnull dereferenceable(2) %3, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %136, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i32* %169, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %203)
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp sgt i32 %205, 5
  br i1 %206, label %207, label %213

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %209 = load i32*, i32** %208, align 8
  %210 = icmp eq i32* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %207
  %212 = bitcast i32* %209 to i8*
  call void @_ZdaPv(i8* %212) #10
  br label %213

213:                                              ; preds = %202, %207, %211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170) #9
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = icmp sgt i32 %215, 5
  br i1 %216, label %217, label %223

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = icmp eq i32* %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %217
  %222 = bitcast i32* %219 to i8*
  call void @_ZdaPv(i8* %222) #10
  br label %223

223:                                              ; preds = %213, %217, %221
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %137) #9
  %224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %225 = load i32, i32* %224, align 8
  %226 = icmp sgt i32 %225, 5
  br i1 %226, label %227, label %233

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %229 = load i32*, i32** %228, align 8
  %230 = icmp eq i32* %229, null
  br i1 %230, label %233, label %231

231:                                              ; preds = %227
  %232 = bitcast i32* %229 to i8*
  call void @_ZdaPv(i8* %232) #10
  br label %233

233:                                              ; preds = %223, %227, %231
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %97) #9
  br label %513

234:                                              ; preds = %93
  %235 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %235) #9
  store i8 -86, i8* %235, align 1
  %236 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %7, i64 0, i32 1
  store i8 -86, i8* %236, align 1
  %237 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 0
  %238 = load i8, i8* %237, align 1, !range !2
  store i8 %238, i8* %235, align 1
  %239 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 1
  %240 = load i8, i8* %239, align 1, !range !2
  store i8 %240, i8* %236, align 1
  %241 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %241) #9
  %242 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %242, label %243, label %245

243:                                              ; preds = %234
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %244, align 8, !alias.scope !39
  br label %273

245:                                              ; preds = %234
  %246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %247 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %246, align 8, !noalias !39
  %248 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %247, i64 0, i32 0
  %249 = load i32, i32* %248, align 4, !noalias !39
  %250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %247, i64 0, i32 1, i64 0
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %249, i32* %251, align 8, !alias.scope !39
  %252 = icmp sgt i32 %249, 5
  br i1 %252, label %253, label %260

253:                                              ; preds = %245
  %254 = sext i32 %249 to i64
  %255 = shl nsw i64 %254, 2
  %256 = tail call i8* @_Znam(i64 %255) #10, !noalias !39
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %258 = bitcast i32** %257 to i8**
  store i8* %256, i8** %258, align 8, !alias.scope !39
  %259 = bitcast i8* %256 to i32*
  br label %265

260:                                              ; preds = %245
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %262 = bitcast %union.anon* %261 to i32*
  %263 = sext i32 %249 to i64
  %264 = shl nsw i64 %263, 2
  br label %265

265:                                              ; preds = %260, %253
  %266 = phi i64 [ %255, %253 ], [ %264, %260 ]
  %267 = phi i32* [ %259, %253 ], [ %262, %260 ]
  %268 = bitcast i32* %267 to i8*
  %269 = bitcast i32* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %269, i64 %266, i1 false) #9
  %270 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %271 = bitcast %union.TfLitePtrUnion* %270 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %243, %265
  %274 = phi i8* [ %272, %265 ], [ null, %243 ]
  %275 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %275) #9
  %276 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %276, label %277, label %279

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %278, align 8, !alias.scope !42
  br label %306

279:                                              ; preds = %273
  %280 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %281 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %280, align 8, !noalias !42
  %282 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 0
  %283 = load i32, i32* %282, align 4, !noalias !42
  %284 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 1, i64 0
  %285 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %283, i32* %285, align 8, !alias.scope !42
  %286 = icmp sgt i32 %283, 5
  br i1 %286, label %287, label %294

287:                                              ; preds = %279
  %288 = sext i32 %283 to i64
  %289 = shl nsw i64 %288, 2
  %290 = tail call i8* @_Znam(i64 %289) #10, !noalias !42
  %291 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %292 = bitcast i32** %291 to i8**
  store i8* %290, i8** %292, align 8, !alias.scope !42
  %293 = bitcast i8* %290 to i32*
  br label %299

294:                                              ; preds = %279
  %295 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %296 = bitcast %union.anon* %295 to i32*
  %297 = sext i32 %283 to i64
  %298 = shl nsw i64 %297, 2
  br label %299

299:                                              ; preds = %294, %287
  %300 = phi i64 [ %289, %287 ], [ %298, %294 ]
  %301 = phi i32* [ %293, %287 ], [ %296, %294 ]
  %302 = bitcast i32* %301 to i8*
  %303 = bitcast i32* %284 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 4 %303, i64 %300, i1 false) #9
  %304 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %305 = load i32*, i32** %304, align 8
  br label %306

306:                                              ; preds = %277, %299
  %307 = phi i32* [ %305, %299 ], [ null, %277 ]
  %308 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %308) #9
  %309 = icmp eq %struct.TfLiteTensor* %41, null
  br i1 %309, label %310, label %312

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %311, align 8, !alias.scope !45
  br label %340

312:                                              ; preds = %306
  %313 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 2
  %314 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %313, align 8, !noalias !45
  %315 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %314, i64 0, i32 0
  %316 = load i32, i32* %315, align 4, !noalias !45
  %317 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %314, i64 0, i32 1, i64 0
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %316, i32* %318, align 8, !alias.scope !45
  %319 = icmp sgt i32 %316, 5
  br i1 %319, label %320, label %327

320:                                              ; preds = %312
  %321 = sext i32 %316 to i64
  %322 = shl nsw i64 %321, 2
  %323 = tail call i8* @_Znam(i64 %322) #10, !noalias !45
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %325 = bitcast i32** %324 to i8**
  store i8* %323, i8** %325, align 8, !alias.scope !45
  %326 = bitcast i8* %323 to i32*
  br label %332

327:                                              ; preds = %312
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %329 = bitcast %union.anon* %328 to i32*
  %330 = sext i32 %316 to i64
  %331 = shl nsw i64 %330, 2
  br label %332

332:                                              ; preds = %327, %320
  %333 = phi i64 [ %322, %320 ], [ %331, %327 ]
  %334 = phi i32* [ %326, %320 ], [ %329, %327 ]
  %335 = bitcast i32* %334 to i8*
  %336 = bitcast i32* %317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %335, i8* align 4 %336, i64 %333, i1 false) #9
  %337 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 1
  %338 = bitcast %union.TfLitePtrUnion* %337 to i8**
  %339 = load i8*, i8** %338, align 8
  br label %340

340:                                              ; preds = %310, %332
  %341 = phi i8* [ %339, %332 ], [ null, %310 ]
  call void @_ZN6tflite13optimized_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKhS6_PKiS6_Ph(%"struct.tflite::ResizeBilinearParams"* nonnull dereferenceable(2) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %274, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i32* %307, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %341)
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %343 = load i32, i32* %342, align 8
  %344 = icmp sgt i32 %343, 5
  br i1 %344, label %345, label %351

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %347 = load i32*, i32** %346, align 8
  %348 = icmp eq i32* %347, null
  br i1 %348, label %351, label %349

349:                                              ; preds = %345
  %350 = bitcast i32* %347 to i8*
  call void @_ZdaPv(i8* %350) #10
  br label %351

351:                                              ; preds = %340, %345, %349
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %308) #9
  %352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %353 = load i32, i32* %352, align 8
  %354 = icmp sgt i32 %353, 5
  br i1 %354, label %355, label %361

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %357 = load i32*, i32** %356, align 8
  %358 = icmp eq i32* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %355
  %360 = bitcast i32* %357 to i8*
  call void @_ZdaPv(i8* %360) #10
  br label %361

361:                                              ; preds = %351, %355, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %275) #9
  %362 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %363 = load i32, i32* %362, align 8
  %364 = icmp sgt i32 %363, 5
  br i1 %364, label %365, label %371

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %367 = load i32*, i32** %366, align 8
  %368 = icmp eq i32* %367, null
  br i1 %368, label %371, label %369

369:                                              ; preds = %365
  %370 = bitcast i32* %367 to i8*
  call void @_ZdaPv(i8* %370) #10
  br label %371

371:                                              ; preds = %361, %365, %369
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %241) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %235) #9
  br label %513

372:                                              ; preds = %93
  %373 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %373) #9
  store i8 -86, i8* %373, align 1
  %374 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %11, i64 0, i32 1
  store i8 -86, i8* %374, align 1
  %375 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 0
  %376 = load i8, i8* %375, align 1, !range !2
  store i8 %376, i8* %373, align 1
  %377 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 1
  %378 = load i8, i8* %377, align 1, !range !2
  store i8 %378, i8* %374, align 1
  %379 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %379) #9
  %380 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %380, label %381, label %383

381:                                              ; preds = %372
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %382, align 8, !alias.scope !48
  br label %411

383:                                              ; preds = %372
  %384 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %385 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %384, align 8, !noalias !48
  %386 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %385, i64 0, i32 0
  %387 = load i32, i32* %386, align 4, !noalias !48
  %388 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %385, i64 0, i32 1, i64 0
  %389 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %387, i32* %389, align 8, !alias.scope !48
  %390 = icmp sgt i32 %387, 5
  br i1 %390, label %391, label %398

391:                                              ; preds = %383
  %392 = sext i32 %387 to i64
  %393 = shl nsw i64 %392, 2
  %394 = tail call i8* @_Znam(i64 %393) #10, !noalias !48
  %395 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %396 = bitcast i32** %395 to i8**
  store i8* %394, i8** %396, align 8, !alias.scope !48
  %397 = bitcast i8* %394 to i32*
  br label %403

398:                                              ; preds = %383
  %399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %400 = bitcast %union.anon* %399 to i32*
  %401 = sext i32 %387 to i64
  %402 = shl nsw i64 %401, 2
  br label %403

403:                                              ; preds = %398, %391
  %404 = phi i64 [ %393, %391 ], [ %402, %398 ]
  %405 = phi i32* [ %397, %391 ], [ %400, %398 ]
  %406 = bitcast i32* %405 to i8*
  %407 = bitcast i32* %388 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %406, i8* align 4 %407, i64 %404, i1 false) #9
  %408 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %409 = bitcast %union.TfLitePtrUnion* %408 to i8**
  %410 = load i8*, i8** %409, align 8
  br label %411

411:                                              ; preds = %381, %403
  %412 = phi i8* [ %410, %403 ], [ null, %381 ]
  %413 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %413) #9
  %414 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %414, label %415, label %417

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %416, align 8, !alias.scope !51
  br label %444

417:                                              ; preds = %411
  %418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %419 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %418, align 8, !noalias !51
  %420 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %419, i64 0, i32 0
  %421 = load i32, i32* %420, align 4, !noalias !51
  %422 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %419, i64 0, i32 1, i64 0
  %423 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %421, i32* %423, align 8, !alias.scope !51
  %424 = icmp sgt i32 %421, 5
  br i1 %424, label %425, label %432

425:                                              ; preds = %417
  %426 = sext i32 %421 to i64
  %427 = shl nsw i64 %426, 2
  %428 = tail call i8* @_Znam(i64 %427) #10, !noalias !51
  %429 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %430 = bitcast i32** %429 to i8**
  store i8* %428, i8** %430, align 8, !alias.scope !51
  %431 = bitcast i8* %428 to i32*
  br label %437

432:                                              ; preds = %417
  %433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %434 = bitcast %union.anon* %433 to i32*
  %435 = sext i32 %421 to i64
  %436 = shl nsw i64 %435, 2
  br label %437

437:                                              ; preds = %432, %425
  %438 = phi i64 [ %427, %425 ], [ %436, %432 ]
  %439 = phi i32* [ %431, %425 ], [ %434, %432 ]
  %440 = bitcast i32* %439 to i8*
  %441 = bitcast i32* %422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %440, i8* align 4 %441, i64 %438, i1 false) #9
  %442 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %443 = load i32*, i32** %442, align 8
  br label %444

444:                                              ; preds = %415, %437
  %445 = phi i32* [ %443, %437 ], [ null, %415 ]
  %446 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %446) #9
  %447 = icmp eq %struct.TfLiteTensor* %41, null
  br i1 %447, label %448, label %450

448:                                              ; preds = %444
  %449 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %449, align 8, !alias.scope !54
  br label %478

450:                                              ; preds = %444
  %451 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 2
  %452 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %451, align 8, !noalias !54
  %453 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %452, i64 0, i32 0
  %454 = load i32, i32* %453, align 4, !noalias !54
  %455 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %452, i64 0, i32 1, i64 0
  %456 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %454, i32* %456, align 8, !alias.scope !54
  %457 = icmp sgt i32 %454, 5
  br i1 %457, label %458, label %465

458:                                              ; preds = %450
  %459 = sext i32 %454 to i64
  %460 = shl nsw i64 %459, 2
  %461 = tail call i8* @_Znam(i64 %460) #10, !noalias !54
  %462 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %463 = bitcast i32** %462 to i8**
  store i8* %461, i8** %463, align 8, !alias.scope !54
  %464 = bitcast i8* %461 to i32*
  br label %470

465:                                              ; preds = %450
  %466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %467 = bitcast %union.anon* %466 to i32*
  %468 = sext i32 %454 to i64
  %469 = shl nsw i64 %468, 2
  br label %470

470:                                              ; preds = %465, %458
  %471 = phi i64 [ %460, %458 ], [ %469, %465 ]
  %472 = phi i32* [ %464, %458 ], [ %467, %465 ]
  %473 = bitcast i32* %472 to i8*
  %474 = bitcast i32* %455 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %473, i8* align 4 %474, i64 %471, i1 false) #9
  %475 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 1
  %476 = bitcast %union.TfLitePtrUnion* %475 to i8**
  %477 = load i8*, i8** %476, align 8
  br label %478

478:                                              ; preds = %448, %470
  %479 = phi i8* [ %477, %470 ], [ null, %448 ]
  call void @_ZN6tflite13reference_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKaS6_PKiS6_Pa(%"struct.tflite::ResizeBilinearParams"* nonnull dereferenceable(2) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %412, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i32* %445, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %479)
  %480 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %481 = load i32, i32* %480, align 8
  %482 = icmp sgt i32 %481, 5
  br i1 %482, label %483, label %489

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %485 = load i32*, i32** %484, align 8
  %486 = icmp eq i32* %485, null
  br i1 %486, label %489, label %487

487:                                              ; preds = %483
  %488 = bitcast i32* %485 to i8*
  call void @_ZdaPv(i8* %488) #10
  br label %489

489:                                              ; preds = %478, %483, %487
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %446) #9
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %491 = load i32, i32* %490, align 8
  %492 = icmp sgt i32 %491, 5
  br i1 %492, label %493, label %499

493:                                              ; preds = %489
  %494 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %495 = load i32*, i32** %494, align 8
  %496 = icmp eq i32* %495, null
  br i1 %496, label %499, label %497

497:                                              ; preds = %493
  %498 = bitcast i32* %495 to i8*
  call void @_ZdaPv(i8* %498) #10
  br label %499

499:                                              ; preds = %489, %493, %497
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %413) #9
  %500 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %501 = load i32, i32* %500, align 8
  %502 = icmp sgt i32 %501, 5
  br i1 %502, label %503, label %509

503:                                              ; preds = %499
  %504 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %505 = load i32*, i32** %504, align 8
  %506 = icmp eq i32* %505, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %503
  %508 = bitcast i32* %505 to i8*
  call void @_ZdaPv(i8* %508) #10
  br label %509

509:                                              ; preds = %499, %503, %507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %379) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %373) #9
  br label %513

510:                                              ; preds = %93
  %511 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %512 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %511, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %512(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), i32 %95) #9
  br label %513

513:                                              ; preds = %64, %71, %74, %233, %509, %371, %510
  %514 = phi i32 [ 1, %510 ], [ 0, %371 ], [ 0, %509 ], [ 0, %233 ], [ %91, %74 ], [ 1, %71 ], [ 1, %64 ]
  ret i32 %514
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin33Register_RESIZE_BILINEAR_NEON_OPTEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin33Register_RESIZE_BILINEAR_NEON_OPTEvE1r
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin15resize_bilinear4EvalILNS2_10KernelTypeE2EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ResizeBilinearParams", align 1
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"struct.tflite::ResizeBilinearParams", align 1
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::ResizeBilinearParams", align 1
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %16 = bitcast i8** %15 to %struct.TfLiteResizeBilinearParams**
  %17 = load %struct.TfLiteResizeBilinearParams*, %struct.TfLiteResizeBilinearParams** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %19 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %20 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %25 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %24, align 8
  %26 = sext i32 %21 to i64
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 %26
  br label %28

28:                                               ; preds = %2, %23
  %29 = phi %struct.TfLiteTensor* [ %27, %23 ], [ null, %2 ]
  %30 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %31 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %30, align 8
  %32 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %37 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %36, align 8
  %38 = sext i32 %33 to i64
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 %38
  br label %40

40:                                               ; preds = %28, %35
  %41 = phi %struct.TfLiteTensor* [ %39, %35 ], [ null, %28 ]
  %42 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %47 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %46, align 8
  %48 = sext i32 %43 to i64
  %49 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 %48
  br label %50

50:                                               ; preds = %40, %45
  %51 = phi %struct.TfLiteTensor* [ %49, %45 ], [ null, %40 ]
  %52 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %55, label %93

55:                                               ; preds = %50
  %56 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %59 = load i32*, i32** %58, align 8
  br label %60

60:                                               ; preds = %57, %55
  %61 = phi i32* [ %59, %57 ], [ null, %55 ]
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %66 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %65, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %66(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 50, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %513

67:                                               ; preds = %60
  %68 = getelementptr inbounds i32, i32* %61, i64 1
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %73 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %72, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %73(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %513

74:                                               ; preds = %67
  %75 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 4) #9
  %76 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %77 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %76, align 8
  %78 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %77, i64 0, i32 1, i64 0
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 0
  store i32 %79, i32* %80, align 4
  %81 = load i32, i32* %61, align 4
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 1
  store i32 %81, i32* %82, align 4
  %83 = load i32, i32* %68, align 4
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 2
  store i32 %83, i32* %84, align 4
  %85 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %76, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %85, i64 0, i32 1, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 3
  store i32 %87, i32* %88, align 4
  %89 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %90 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %89, align 8
  %91 = tail call i32 %90(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %41, %struct.TfLiteIntArray* %75) #9
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %513

93:                                               ; preds = %74, %50
  %94 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  switch i32 %95, label %510 [
    i32 1, label %96
    i32 3, label %234
    i32 9, label %372
  ]

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %97) #9
  store i8 -86, i8* %97, align 1
  %98 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %3, i64 0, i32 1
  store i8 -86, i8* %98, align 1
  %99 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 0
  %100 = load i8, i8* %99, align 1, !range !2
  store i8 %100, i8* %97, align 1
  %101 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 1
  %102 = load i8, i8* %101, align 1, !range !2
  store i8 %102, i8* %98, align 1
  %103 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #9
  %104 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %96
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %106, align 8, !alias.scope !57
  br label %135

107:                                              ; preds = %96
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %109 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %108, align 8, !noalias !57
  %110 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 4, !noalias !57
  %112 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %109, i64 0, i32 1, i64 0
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %111, i32* %113, align 8, !alias.scope !57
  %114 = icmp sgt i32 %111, 5
  br i1 %114, label %115, label %122

115:                                              ; preds = %107
  %116 = sext i32 %111 to i64
  %117 = shl nsw i64 %116, 2
  %118 = tail call i8* @_Znam(i64 %117) #10, !noalias !57
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %120 = bitcast i32** %119 to i8**
  store i8* %118, i8** %120, align 8, !alias.scope !57
  %121 = bitcast i8* %118 to i32*
  br label %127

122:                                              ; preds = %107
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %124 = bitcast %union.anon* %123 to i32*
  %125 = sext i32 %111 to i64
  %126 = shl nsw i64 %125, 2
  br label %127

127:                                              ; preds = %122, %115
  %128 = phi i64 [ %117, %115 ], [ %126, %122 ]
  %129 = phi i32* [ %121, %115 ], [ %124, %122 ]
  %130 = bitcast i32* %129 to i8*
  %131 = bitcast i32* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %131, i64 %128, i1 false) #9
  %132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %133 = bitcast %union.TfLitePtrUnion* %132 to float**
  %134 = load float*, float** %133, align 8
  br label %135

135:                                              ; preds = %105, %127
  %136 = phi float* [ %134, %127 ], [ null, %105 ]
  %137 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %137) #9
  %138 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %138, label %139, label %141

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %140, align 8, !alias.scope !60
  br label %168

141:                                              ; preds = %135
  %142 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %143 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %142, align 8, !noalias !60
  %144 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 4, !noalias !60
  %146 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %143, i64 0, i32 1, i64 0
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %145, i32* %147, align 8, !alias.scope !60
  %148 = icmp sgt i32 %145, 5
  br i1 %148, label %149, label %156

149:                                              ; preds = %141
  %150 = sext i32 %145 to i64
  %151 = shl nsw i64 %150, 2
  %152 = tail call i8* @_Znam(i64 %151) #10, !noalias !60
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %154 = bitcast i32** %153 to i8**
  store i8* %152, i8** %154, align 8, !alias.scope !60
  %155 = bitcast i8* %152 to i32*
  br label %161

156:                                              ; preds = %141
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %158 = bitcast %union.anon* %157 to i32*
  %159 = sext i32 %145 to i64
  %160 = shl nsw i64 %159, 2
  br label %161

161:                                              ; preds = %156, %149
  %162 = phi i64 [ %151, %149 ], [ %160, %156 ]
  %163 = phi i32* [ %155, %149 ], [ %158, %156 ]
  %164 = bitcast i32* %163 to i8*
  %165 = bitcast i32* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %164, i8* align 4 %165, i64 %162, i1 false) #9
  %166 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %167 = load i32*, i32** %166, align 8
  br label %168

168:                                              ; preds = %139, %161
  %169 = phi i32* [ %167, %161 ], [ null, %139 ]
  %170 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170) #9
  %171 = icmp eq %struct.TfLiteTensor* %41, null
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %173, align 8, !alias.scope !63
  br label %202

174:                                              ; preds = %168
  %175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 2
  %176 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %175, align 8, !noalias !63
  %177 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %176, i64 0, i32 0
  %178 = load i32, i32* %177, align 4, !noalias !63
  %179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %176, i64 0, i32 1, i64 0
  %180 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %178, i32* %180, align 8, !alias.scope !63
  %181 = icmp sgt i32 %178, 5
  br i1 %181, label %182, label %189

182:                                              ; preds = %174
  %183 = sext i32 %178 to i64
  %184 = shl nsw i64 %183, 2
  %185 = tail call i8* @_Znam(i64 %184) #10, !noalias !63
  %186 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %187 = bitcast i32** %186 to i8**
  store i8* %185, i8** %187, align 8, !alias.scope !63
  %188 = bitcast i8* %185 to i32*
  br label %194

189:                                              ; preds = %174
  %190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %191 = bitcast %union.anon* %190 to i32*
  %192 = sext i32 %178 to i64
  %193 = shl nsw i64 %192, 2
  br label %194

194:                                              ; preds = %189, %182
  %195 = phi i64 [ %184, %182 ], [ %193, %189 ]
  %196 = phi i32* [ %188, %182 ], [ %191, %189 ]
  %197 = bitcast i32* %196 to i8*
  %198 = bitcast i32* %179 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %197, i8* align 4 %198, i64 %195, i1 false) #9
  %199 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 1
  %200 = bitcast %union.TfLitePtrUnion* %199 to float**
  %201 = load float*, float** %200, align 8
  br label %202

202:                                              ; preds = %172, %194
  %203 = phi float* [ %201, %194 ], [ null, %172 ]
  call void @_ZN6tflite13optimized_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKfS6_PKiS6_Pf(%"struct.tflite::ResizeBilinearParams"* nonnull dereferenceable(2) %3, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %136, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i32* %169, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %203)
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp sgt i32 %205, 5
  br i1 %206, label %207, label %213

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %209 = load i32*, i32** %208, align 8
  %210 = icmp eq i32* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %207
  %212 = bitcast i32* %209 to i8*
  call void @_ZdaPv(i8* %212) #10
  br label %213

213:                                              ; preds = %202, %207, %211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170) #9
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = icmp sgt i32 %215, 5
  br i1 %216, label %217, label %223

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = icmp eq i32* %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %217
  %222 = bitcast i32* %219 to i8*
  call void @_ZdaPv(i8* %222) #10
  br label %223

223:                                              ; preds = %213, %217, %221
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %137) #9
  %224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %225 = load i32, i32* %224, align 8
  %226 = icmp sgt i32 %225, 5
  br i1 %226, label %227, label %233

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %229 = load i32*, i32** %228, align 8
  %230 = icmp eq i32* %229, null
  br i1 %230, label %233, label %231

231:                                              ; preds = %227
  %232 = bitcast i32* %229 to i8*
  call void @_ZdaPv(i8* %232) #10
  br label %233

233:                                              ; preds = %223, %227, %231
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %97) #9
  br label %513

234:                                              ; preds = %93
  %235 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %235) #9
  store i8 -86, i8* %235, align 1
  %236 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %7, i64 0, i32 1
  store i8 -86, i8* %236, align 1
  %237 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 0
  %238 = load i8, i8* %237, align 1, !range !2
  store i8 %238, i8* %235, align 1
  %239 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 1
  %240 = load i8, i8* %239, align 1, !range !2
  store i8 %240, i8* %236, align 1
  %241 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %241) #9
  %242 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %242, label %243, label %245

243:                                              ; preds = %234
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %244, align 8, !alias.scope !66
  br label %273

245:                                              ; preds = %234
  %246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %247 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %246, align 8, !noalias !66
  %248 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %247, i64 0, i32 0
  %249 = load i32, i32* %248, align 4, !noalias !66
  %250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %247, i64 0, i32 1, i64 0
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %249, i32* %251, align 8, !alias.scope !66
  %252 = icmp sgt i32 %249, 5
  br i1 %252, label %253, label %260

253:                                              ; preds = %245
  %254 = sext i32 %249 to i64
  %255 = shl nsw i64 %254, 2
  %256 = tail call i8* @_Znam(i64 %255) #10, !noalias !66
  %257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %258 = bitcast i32** %257 to i8**
  store i8* %256, i8** %258, align 8, !alias.scope !66
  %259 = bitcast i8* %256 to i32*
  br label %265

260:                                              ; preds = %245
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %262 = bitcast %union.anon* %261 to i32*
  %263 = sext i32 %249 to i64
  %264 = shl nsw i64 %263, 2
  br label %265

265:                                              ; preds = %260, %253
  %266 = phi i64 [ %255, %253 ], [ %264, %260 ]
  %267 = phi i32* [ %259, %253 ], [ %262, %260 ]
  %268 = bitcast i32* %267 to i8*
  %269 = bitcast i32* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %269, i64 %266, i1 false) #9
  %270 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %271 = bitcast %union.TfLitePtrUnion* %270 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %243, %265
  %274 = phi i8* [ %272, %265 ], [ null, %243 ]
  %275 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %275) #9
  %276 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %276, label %277, label %279

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %278, align 8, !alias.scope !69
  br label %306

279:                                              ; preds = %273
  %280 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %281 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %280, align 8, !noalias !69
  %282 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 0
  %283 = load i32, i32* %282, align 4, !noalias !69
  %284 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %281, i64 0, i32 1, i64 0
  %285 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %283, i32* %285, align 8, !alias.scope !69
  %286 = icmp sgt i32 %283, 5
  br i1 %286, label %287, label %294

287:                                              ; preds = %279
  %288 = sext i32 %283 to i64
  %289 = shl nsw i64 %288, 2
  %290 = tail call i8* @_Znam(i64 %289) #10, !noalias !69
  %291 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %292 = bitcast i32** %291 to i8**
  store i8* %290, i8** %292, align 8, !alias.scope !69
  %293 = bitcast i8* %290 to i32*
  br label %299

294:                                              ; preds = %279
  %295 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %296 = bitcast %union.anon* %295 to i32*
  %297 = sext i32 %283 to i64
  %298 = shl nsw i64 %297, 2
  br label %299

299:                                              ; preds = %294, %287
  %300 = phi i64 [ %289, %287 ], [ %298, %294 ]
  %301 = phi i32* [ %293, %287 ], [ %296, %294 ]
  %302 = bitcast i32* %301 to i8*
  %303 = bitcast i32* %284 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 4 %303, i64 %300, i1 false) #9
  %304 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %305 = load i32*, i32** %304, align 8
  br label %306

306:                                              ; preds = %277, %299
  %307 = phi i32* [ %305, %299 ], [ null, %277 ]
  %308 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %308) #9
  %309 = icmp eq %struct.TfLiteTensor* %41, null
  br i1 %309, label %310, label %312

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %311, align 8, !alias.scope !72
  br label %340

312:                                              ; preds = %306
  %313 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 2
  %314 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %313, align 8, !noalias !72
  %315 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %314, i64 0, i32 0
  %316 = load i32, i32* %315, align 4, !noalias !72
  %317 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %314, i64 0, i32 1, i64 0
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %316, i32* %318, align 8, !alias.scope !72
  %319 = icmp sgt i32 %316, 5
  br i1 %319, label %320, label %327

320:                                              ; preds = %312
  %321 = sext i32 %316 to i64
  %322 = shl nsw i64 %321, 2
  %323 = tail call i8* @_Znam(i64 %322) #10, !noalias !72
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %325 = bitcast i32** %324 to i8**
  store i8* %323, i8** %325, align 8, !alias.scope !72
  %326 = bitcast i8* %323 to i32*
  br label %332

327:                                              ; preds = %312
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %329 = bitcast %union.anon* %328 to i32*
  %330 = sext i32 %316 to i64
  %331 = shl nsw i64 %330, 2
  br label %332

332:                                              ; preds = %327, %320
  %333 = phi i64 [ %322, %320 ], [ %331, %327 ]
  %334 = phi i32* [ %326, %320 ], [ %329, %327 ]
  %335 = bitcast i32* %334 to i8*
  %336 = bitcast i32* %317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %335, i8* align 4 %336, i64 %333, i1 false) #9
  %337 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 1
  %338 = bitcast %union.TfLitePtrUnion* %337 to i8**
  %339 = load i8*, i8** %338, align 8
  br label %340

340:                                              ; preds = %310, %332
  %341 = phi i8* [ %339, %332 ], [ null, %310 ]
  call void @_ZN6tflite13optimized_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKhS6_PKiS6_Ph(%"struct.tflite::ResizeBilinearParams"* nonnull dereferenceable(2) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %274, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i32* %307, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %341)
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %343 = load i32, i32* %342, align 8
  %344 = icmp sgt i32 %343, 5
  br i1 %344, label %345, label %351

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %347 = load i32*, i32** %346, align 8
  %348 = icmp eq i32* %347, null
  br i1 %348, label %351, label %349

349:                                              ; preds = %345
  %350 = bitcast i32* %347 to i8*
  call void @_ZdaPv(i8* %350) #10
  br label %351

351:                                              ; preds = %340, %345, %349
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %308) #9
  %352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %353 = load i32, i32* %352, align 8
  %354 = icmp sgt i32 %353, 5
  br i1 %354, label %355, label %361

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %357 = load i32*, i32** %356, align 8
  %358 = icmp eq i32* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %355
  %360 = bitcast i32* %357 to i8*
  call void @_ZdaPv(i8* %360) #10
  br label %361

361:                                              ; preds = %351, %355, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %275) #9
  %362 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %363 = load i32, i32* %362, align 8
  %364 = icmp sgt i32 %363, 5
  br i1 %364, label %365, label %371

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %367 = load i32*, i32** %366, align 8
  %368 = icmp eq i32* %367, null
  br i1 %368, label %371, label %369

369:                                              ; preds = %365
  %370 = bitcast i32* %367 to i8*
  call void @_ZdaPv(i8* %370) #10
  br label %371

371:                                              ; preds = %361, %365, %369
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %241) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %235) #9
  br label %513

372:                                              ; preds = %93
  %373 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %373) #9
  store i8 -86, i8* %373, align 1
  %374 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %11, i64 0, i32 1
  store i8 -86, i8* %374, align 1
  %375 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 0
  %376 = load i8, i8* %375, align 1, !range !2
  store i8 %376, i8* %373, align 1
  %377 = getelementptr inbounds %struct.TfLiteResizeBilinearParams, %struct.TfLiteResizeBilinearParams* %17, i64 0, i32 1
  %378 = load i8, i8* %377, align 1, !range !2
  store i8 %378, i8* %374, align 1
  %379 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %379) #9
  %380 = icmp eq %struct.TfLiteTensor* %29, null
  br i1 %380, label %381, label %383

381:                                              ; preds = %372
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %382, align 8, !alias.scope !75
  br label %411

383:                                              ; preds = %372
  %384 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 2
  %385 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %384, align 8, !noalias !75
  %386 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %385, i64 0, i32 0
  %387 = load i32, i32* %386, align 4, !noalias !75
  %388 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %385, i64 0, i32 1, i64 0
  %389 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %387, i32* %389, align 8, !alias.scope !75
  %390 = icmp sgt i32 %387, 5
  br i1 %390, label %391, label %398

391:                                              ; preds = %383
  %392 = sext i32 %387 to i64
  %393 = shl nsw i64 %392, 2
  %394 = tail call i8* @_Znam(i64 %393) #10, !noalias !75
  %395 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %396 = bitcast i32** %395 to i8**
  store i8* %394, i8** %396, align 8, !alias.scope !75
  %397 = bitcast i8* %394 to i32*
  br label %403

398:                                              ; preds = %383
  %399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %400 = bitcast %union.anon* %399 to i32*
  %401 = sext i32 %387 to i64
  %402 = shl nsw i64 %401, 2
  br label %403

403:                                              ; preds = %398, %391
  %404 = phi i64 [ %393, %391 ], [ %402, %398 ]
  %405 = phi i32* [ %397, %391 ], [ %400, %398 ]
  %406 = bitcast i32* %405 to i8*
  %407 = bitcast i32* %388 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %406, i8* align 4 %407, i64 %404, i1 false) #9
  %408 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %409 = bitcast %union.TfLitePtrUnion* %408 to i8**
  %410 = load i8*, i8** %409, align 8
  br label %411

411:                                              ; preds = %381, %403
  %412 = phi i8* [ %410, %403 ], [ null, %381 ]
  %413 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %413) #9
  %414 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %414, label %415, label %417

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %416, align 8, !alias.scope !78
  br label %444

417:                                              ; preds = %411
  %418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 2
  %419 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %418, align 8, !noalias !78
  %420 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %419, i64 0, i32 0
  %421 = load i32, i32* %420, align 4, !noalias !78
  %422 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %419, i64 0, i32 1, i64 0
  %423 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %421, i32* %423, align 8, !alias.scope !78
  %424 = icmp sgt i32 %421, 5
  br i1 %424, label %425, label %432

425:                                              ; preds = %417
  %426 = sext i32 %421 to i64
  %427 = shl nsw i64 %426, 2
  %428 = tail call i8* @_Znam(i64 %427) #10, !noalias !78
  %429 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %430 = bitcast i32** %429 to i8**
  store i8* %428, i8** %430, align 8, !alias.scope !78
  %431 = bitcast i8* %428 to i32*
  br label %437

432:                                              ; preds = %417
  %433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %434 = bitcast %union.anon* %433 to i32*
  %435 = sext i32 %421 to i64
  %436 = shl nsw i64 %435, 2
  br label %437

437:                                              ; preds = %432, %425
  %438 = phi i64 [ %427, %425 ], [ %436, %432 ]
  %439 = phi i32* [ %431, %425 ], [ %434, %432 ]
  %440 = bitcast i32* %439 to i8*
  %441 = bitcast i32* %422 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %440, i8* align 4 %441, i64 %438, i1 false) #9
  %442 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %443 = load i32*, i32** %442, align 8
  br label %444

444:                                              ; preds = %415, %437
  %445 = phi i32* [ %443, %437 ], [ null, %415 ]
  %446 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %446) #9
  %447 = icmp eq %struct.TfLiteTensor* %41, null
  br i1 %447, label %448, label %450

448:                                              ; preds = %444
  %449 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %449, align 8, !alias.scope !81
  br label %478

450:                                              ; preds = %444
  %451 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 2
  %452 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %451, align 8, !noalias !81
  %453 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %452, i64 0, i32 0
  %454 = load i32, i32* %453, align 4, !noalias !81
  %455 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %452, i64 0, i32 1, i64 0
  %456 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %454, i32* %456, align 8, !alias.scope !81
  %457 = icmp sgt i32 %454, 5
  br i1 %457, label %458, label %465

458:                                              ; preds = %450
  %459 = sext i32 %454 to i64
  %460 = shl nsw i64 %459, 2
  %461 = tail call i8* @_Znam(i64 %460) #10, !noalias !81
  %462 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %463 = bitcast i32** %462 to i8**
  store i8* %461, i8** %463, align 8, !alias.scope !81
  %464 = bitcast i8* %461 to i32*
  br label %470

465:                                              ; preds = %450
  %466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %467 = bitcast %union.anon* %466 to i32*
  %468 = sext i32 %454 to i64
  %469 = shl nsw i64 %468, 2
  br label %470

470:                                              ; preds = %465, %458
  %471 = phi i64 [ %460, %458 ], [ %469, %465 ]
  %472 = phi i32* [ %464, %458 ], [ %467, %465 ]
  %473 = bitcast i32* %472 to i8*
  %474 = bitcast i32* %455 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %473, i8* align 4 %474, i64 %471, i1 false) #9
  %475 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %41, i64 0, i32 1
  %476 = bitcast %union.TfLitePtrUnion* %475 to i8**
  %477 = load i8*, i8** %476, align 8
  br label %478

478:                                              ; preds = %448, %470
  %479 = phi i8* [ %477, %470 ], [ null, %448 ]
  call void @_ZN6tflite13reference_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKaS6_PKiS6_Pa(%"struct.tflite::ResizeBilinearParams"* nonnull dereferenceable(2) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %412, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i32* %445, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %479)
  %480 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %481 = load i32, i32* %480, align 8
  %482 = icmp sgt i32 %481, 5
  br i1 %482, label %483, label %489

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %485 = load i32*, i32** %484, align 8
  %486 = icmp eq i32* %485, null
  br i1 %486, label %489, label %487

487:                                              ; preds = %483
  %488 = bitcast i32* %485 to i8*
  call void @_ZdaPv(i8* %488) #10
  br label %489

489:                                              ; preds = %478, %483, %487
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %446) #9
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %491 = load i32, i32* %490, align 8
  %492 = icmp sgt i32 %491, 5
  br i1 %492, label %493, label %499

493:                                              ; preds = %489
  %494 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %495 = load i32*, i32** %494, align 8
  %496 = icmp eq i32* %495, null
  br i1 %496, label %499, label %497

497:                                              ; preds = %493
  %498 = bitcast i32* %495 to i8*
  call void @_ZdaPv(i8* %498) #10
  br label %499

499:                                              ; preds = %489, %493, %497
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %413) #9
  %500 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %501 = load i32, i32* %500, align 8
  %502 = icmp sgt i32 %501, 5
  br i1 %502, label %503, label %509

503:                                              ; preds = %499
  %504 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %505 = load i32*, i32** %504, align 8
  %506 = icmp eq i32* %505, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %503
  %508 = bitcast i32* %505 to i8*
  call void @_ZdaPv(i8* %508) #10
  br label %509

509:                                              ; preds = %499, %503, %507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %379) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %373) #9
  br label %513

510:                                              ; preds = %93
  %511 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %512 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %511, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %512(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), i32 %95) #9
  br label %513

513:                                              ; preds = %64, %71, %74, %233, %509, %371, %510
  %514 = phi i32 [ 1, %510 ], [ 0, %371 ], [ 0, %509 ], [ 0, %233 ], [ %91, %74 ], [ 1, %71 ], [ 1, %64 ]
  ret i32 %514
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin24Register_RESIZE_BILINEAREv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin36Register_RESIZE_BILINEAR_GENERIC_OPTEvE1r
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKiS7_PS8_(%"struct.tflite::ResizeBilinearParams"* dereferenceable(2), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #4 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %15 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !84
  %17 = load i32, i32* %12, align 8, !noalias !84
  %18 = icmp sgt i32 %17, 4
  br i1 %18, label %19, label %20

19:                                               ; preds = %7
  tail call void @abort() #11, !noalias !84
  unreachable

20:                                               ; preds = %7
  store i32 4, i32* %16, align 8, !alias.scope !84
  %21 = sub i32 4, %17
  %22 = icmp sgt i32 %21, 0
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %22, label %24, label %104

24:                                               ; preds = %20
  %25 = bitcast %union.anon* %23 to [5 x i32]*
  %26 = zext i32 %21 to i64
  %27 = icmp ult i32 %21, 8
  br i1 %27, label %97, label %28

28:                                               ; preds = %24
  %29 = and i64 %26, 4294967288
  %30 = add nsw i64 %29, -8
  %31 = lshr exact i64 %30, 3
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 7
  %34 = icmp ult i64 %30, 56
  br i1 %34, label %82, label %35

35:                                               ; preds = %28
  %36 = sub nsw i64 %32, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %79, %37 ]
  %39 = phi i64 [ %36, %35 ], [ %80, %37 ]
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %38
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !84
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !84
  %44 = or i64 %38, 8
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !84
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !84
  %49 = or i64 %38, 16
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !84
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !84
  %54 = or i64 %38, 24
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !84
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !84
  %59 = or i64 %38, 32
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !84
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !84
  %64 = or i64 %38, 40
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !84
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !84
  %69 = or i64 %38, 48
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !84
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !84
  %74 = or i64 %38, 56
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %74
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !84
  %77 = getelementptr inbounds i32, i32* %75, i64 4
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %78, align 8, !alias.scope !84
  %79 = add i64 %38, 64
  %80 = add i64 %39, -8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %37, !llvm.loop !87

82:                                               ; preds = %37, %28
  %83 = phi i64 [ 0, %28 ], [ %79, %37 ]
  %84 = icmp eq i64 %33, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %92, %85 ], [ %83, %82 ]
  %87 = phi i64 [ %93, %85 ], [ %33, %82 ]
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %86
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !84
  %90 = getelementptr inbounds i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %91, align 8, !alias.scope !84
  %92 = add i64 %86, 8
  %93 = add i64 %87, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %85, !llvm.loop !89

95:                                               ; preds = %85, %82
  %96 = icmp eq i64 %29, %26
  br i1 %96, label %104, label %97

97:                                               ; preds = %95, %24
  %98 = phi i64 [ 0, %24 ], [ %29, %95 ]
  br label %99

99:                                               ; preds = %97, %99
  %100 = phi i64 [ %102, %99 ], [ %98, %97 ]
  %101 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %100
  store i32 1, i32* %101, align 4, !alias.scope !84
  %102 = add nuw nsw i64 %100, 1
  %103 = icmp eq i64 %102, %26
  br i1 %103, label %104, label %99, !llvm.loop !91

104:                                              ; preds = %99, %95, %20
  %105 = getelementptr inbounds %union.anon, %union.anon* %23, i64 0, i32 0
  %106 = bitcast %union.anon* %23 to i32*
  %107 = sext i32 %21 to i64
  %108 = getelementptr inbounds i32, i32* %106, i64 %107
  %109 = bitcast i32* %108 to i8*
  %110 = icmp sgt i32 %17, 5
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %112 = getelementptr inbounds %union.anon, %union.anon* %111, i64 0, i32 0
  %113 = load i32*, i32** %112, align 8, !noalias !84
  %114 = bitcast %union.anon* %111 to i32*
  %115 = select i1 %110, i32* %113, i32* %114
  %116 = bitcast i32* %115 to i8*
  %117 = sext i32 %17 to i64
  %118 = shl nsw i64 %117, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %116, i64 %118, i1 false) #9
  %119 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 32, i1 false)
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %120, align 8, !alias.scope !93
  %121 = load i32, i32* %13, align 8, !noalias !93
  %122 = icmp sgt i32 %121, 4
  br i1 %122, label %123, label %124

123:                                              ; preds = %104
  tail call void @abort() #11, !noalias !93
  unreachable

124:                                              ; preds = %104
  store i32 4, i32* %120, align 8, !alias.scope !93
  %125 = sub i32 4, %121
  %126 = icmp sgt i32 %125, 0
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  br i1 %126, label %128, label %208

128:                                              ; preds = %124
  %129 = bitcast %union.anon* %127 to [5 x i32]*
  %130 = zext i32 %125 to i64
  %131 = icmp ult i32 %125, 8
  br i1 %131, label %201, label %132

132:                                              ; preds = %128
  %133 = and i64 %130, 4294967288
  %134 = add nsw i64 %133, -8
  %135 = lshr exact i64 %134, 3
  %136 = add nuw nsw i64 %135, 1
  %137 = and i64 %136, 7
  %138 = icmp ult i64 %134, 56
  br i1 %138, label %186, label %139

139:                                              ; preds = %132
  %140 = sub nsw i64 %136, %137
  br label %141

141:                                              ; preds = %141, %139
  %142 = phi i64 [ 0, %139 ], [ %183, %141 ]
  %143 = phi i64 [ %140, %139 ], [ %184, %141 ]
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %142
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !93
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !93
  %148 = or i64 %142, 8
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !93
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !93
  %153 = or i64 %142, 16
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !93
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !93
  %158 = or i64 %142, 24
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !93
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !93
  %163 = or i64 %142, 32
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !93
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !93
  %168 = or i64 %142, 40
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !93
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !93
  %173 = or i64 %142, 48
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !93
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !93
  %178 = or i64 %142, 56
  %179 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %178
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %180, align 8, !alias.scope !93
  %181 = getelementptr inbounds i32, i32* %179, i64 4
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !93
  %183 = add i64 %142, 64
  %184 = add i64 %143, -8
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %141, !llvm.loop !96

186:                                              ; preds = %141, %132
  %187 = phi i64 [ 0, %132 ], [ %183, %141 ]
  %188 = icmp eq i64 %137, 0
  br i1 %188, label %199, label %189

189:                                              ; preds = %186, %189
  %190 = phi i64 [ %196, %189 ], [ %187, %186 ]
  %191 = phi i64 [ %197, %189 ], [ %137, %186 ]
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %190
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %193, align 8, !alias.scope !93
  %194 = getelementptr inbounds i32, i32* %192, i64 4
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %195, align 8, !alias.scope !93
  %196 = add i64 %190, 8
  %197 = add i64 %191, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %189, !llvm.loop !97

199:                                              ; preds = %189, %186
  %200 = icmp eq i64 %133, %130
  br i1 %200, label %208, label %201

201:                                              ; preds = %199, %128
  %202 = phi i64 [ 0, %128 ], [ %133, %199 ]
  br label %203

203:                                              ; preds = %201, %203
  %204 = phi i64 [ %206, %203 ], [ %202, %201 ]
  %205 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %204
  store i32 1, i32* %205, align 4, !alias.scope !93
  %206 = add nuw nsw i64 %204, 1
  %207 = icmp eq i64 %206, %130
  br i1 %207, label %208, label %203, !llvm.loop !98

208:                                              ; preds = %203, %199, %124
  %209 = bitcast %union.anon* %127 to i32*
  %210 = sext i32 %125 to i64
  %211 = getelementptr inbounds i32, i32* %209, i64 %210
  %212 = bitcast i32* %211 to i8*
  %213 = icmp sgt i32 %121, 5
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %215 = getelementptr inbounds %union.anon, %union.anon* %214, i64 0, i32 0
  %216 = load i32*, i32** %215, align 8, !noalias !93
  %217 = bitcast %union.anon* %214 to i32*
  %218 = select i1 %213, i32* %216, i32* %217
  %219 = bitcast i32* %218 to i8*
  %220 = sext i32 %121 to i64
  %221 = shl nsw i64 %220, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %219, i64 %221, i1 false) #9
  %222 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %222) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %222, i8 -86, i64 32, i1 false)
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %223, align 8, !alias.scope !99
  %224 = load i32, i32* %14, align 8, !noalias !99
  %225 = icmp sgt i32 %224, 4
  br i1 %225, label %226, label %227

226:                                              ; preds = %208
  tail call void @abort() #11, !noalias !99
  unreachable

227:                                              ; preds = %208
  store i32 4, i32* %223, align 8, !alias.scope !99
  %228 = sub i32 4, %224
  %229 = icmp sgt i32 %228, 0
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  br i1 %229, label %231, label %311

231:                                              ; preds = %227
  %232 = bitcast %union.anon* %230 to [5 x i32]*
  %233 = zext i32 %228 to i64
  %234 = icmp ult i32 %228, 8
  br i1 %234, label %304, label %235

235:                                              ; preds = %231
  %236 = and i64 %233, 4294967288
  %237 = add nsw i64 %236, -8
  %238 = lshr exact i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 7
  %241 = icmp ult i64 %237, 56
  br i1 %241, label %289, label %242

242:                                              ; preds = %235
  %243 = sub nsw i64 %239, %240
  br label %244

244:                                              ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %286, %244 ]
  %246 = phi i64 [ %243, %242 ], [ %287, %244 ]
  %247 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %245
  %248 = bitcast i32* %247 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %248, align 8, !alias.scope !99
  %249 = getelementptr inbounds i32, i32* %247, i64 4
  %250 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %250, align 8, !alias.scope !99
  %251 = or i64 %245, 8
  %252 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %251
  %253 = bitcast i32* %252 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %253, align 8, !alias.scope !99
  %254 = getelementptr inbounds i32, i32* %252, i64 4
  %255 = bitcast i32* %254 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %255, align 8, !alias.scope !99
  %256 = or i64 %245, 16
  %257 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %256
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %258, align 8, !alias.scope !99
  %259 = getelementptr inbounds i32, i32* %257, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %260, align 8, !alias.scope !99
  %261 = or i64 %245, 24
  %262 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %261
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %263, align 8, !alias.scope !99
  %264 = getelementptr inbounds i32, i32* %262, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %265, align 8, !alias.scope !99
  %266 = or i64 %245, 32
  %267 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %266
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %268, align 8, !alias.scope !99
  %269 = getelementptr inbounds i32, i32* %267, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %270, align 8, !alias.scope !99
  %271 = or i64 %245, 40
  %272 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %271
  %273 = bitcast i32* %272 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %273, align 8, !alias.scope !99
  %274 = getelementptr inbounds i32, i32* %272, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %275, align 8, !alias.scope !99
  %276 = or i64 %245, 48
  %277 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %276
  %278 = bitcast i32* %277 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %278, align 8, !alias.scope !99
  %279 = getelementptr inbounds i32, i32* %277, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %280, align 8, !alias.scope !99
  %281 = or i64 %245, 56
  %282 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %281
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %283, align 8, !alias.scope !99
  %284 = getelementptr inbounds i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %285, align 8, !alias.scope !99
  %286 = add i64 %245, 64
  %287 = add i64 %246, -8
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %244, !llvm.loop !102

289:                                              ; preds = %244, %235
  %290 = phi i64 [ 0, %235 ], [ %286, %244 ]
  %291 = icmp eq i64 %240, 0
  br i1 %291, label %302, label %292

292:                                              ; preds = %289, %292
  %293 = phi i64 [ %299, %292 ], [ %290, %289 ]
  %294 = phi i64 [ %300, %292 ], [ %240, %289 ]
  %295 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %293
  %296 = bitcast i32* %295 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %296, align 8, !alias.scope !99
  %297 = getelementptr inbounds i32, i32* %295, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %298, align 8, !alias.scope !99
  %299 = add i64 %293, 8
  %300 = add i64 %294, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %292, !llvm.loop !103

302:                                              ; preds = %292, %289
  %303 = icmp eq i64 %236, %233
  br i1 %303, label %311, label %304

304:                                              ; preds = %302, %231
  %305 = phi i64 [ 0, %231 ], [ %236, %302 ]
  br label %306

306:                                              ; preds = %304, %306
  %307 = phi i64 [ %309, %306 ], [ %305, %304 ]
  %308 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %307
  store i32 1, i32* %308, align 4, !alias.scope !99
  %309 = add nuw nsw i64 %307, 1
  %310 = icmp eq i64 %309, %233
  br i1 %310, label %311, label %306, !llvm.loop !104

311:                                              ; preds = %306, %302, %227
  %312 = getelementptr inbounds %union.anon, %union.anon* %230, i64 0, i32 0
  %313 = bitcast %union.anon* %230 to i32*
  %314 = sext i32 %228 to i64
  %315 = getelementptr inbounds i32, i32* %313, i64 %314
  %316 = bitcast i32* %315 to i8*
  %317 = icmp sgt i32 %224, 5
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %319 = getelementptr inbounds %union.anon, %union.anon* %318, i64 0, i32 0
  %320 = load i32*, i32** %319, align 8, !noalias !99
  %321 = bitcast %union.anon* %318 to i32*
  %322 = select i1 %317, i32* %320, i32* %321
  %323 = bitcast i32* %322 to i8*
  %324 = sext i32 %224 to i64
  %325 = shl nsw i64 %324, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %316, i8* align 4 %323, i64 %325, i1 false) #9
  %326 = load i32, i32* %16, align 8
  %327 = icmp sgt i32 %326, 5
  %328 = load i32, i32* %223, align 8
  %329 = icmp sgt i32 %328, 5
  %330 = load i32*, i32** %105, align 8
  %331 = select i1 %327, i32* %330, i32* %106
  %332 = load i32, i32* %331, align 4
  %333 = load i32*, i32** %312, align 8
  %334 = select i1 %329, i32* %333, i32* %313
  %335 = load i32, i32* %334, align 4
  %336 = icmp slt i32 %335, %332
  %337 = select i1 %336, i32 %335, i32 %332
  %338 = getelementptr inbounds i32, i32* %330, i64 1
  %339 = getelementptr inbounds i32, i32* %330, i64 2
  %340 = bitcast %union.anon* %23 to [5 x i32]*
  %341 = getelementptr inbounds [5 x i32], [5 x i32]* %340, i64 0, i64 1
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %343 = bitcast [16 x i8]* %342 to i32*
  %344 = select i1 %327, i32* %338, i32* %341
  %345 = select i1 %327, i32* %339, i32* %343
  %346 = load i32, i32* %344, align 4
  %347 = load i32, i32* %345, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 3
  %349 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %350 = bitcast i8* %349 to i32*
  %351 = select i1 %327, i32* %348, i32* %350
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds i32, i32* %333, i64 3
  %354 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 4
  %355 = bitcast i8* %354 to i32*
  %356 = select i1 %329, i32* %353, i32* %355
  %357 = load i32, i32* %356, align 4
  %358 = icmp slt i32 %357, %352
  %359 = select i1 %358, i32 %357, i32 %352
  %360 = load i32, i32* %120, align 8
  %361 = icmp sgt i32 %360, 5
  %362 = load i32, i32* %4, align 4
  %363 = getelementptr inbounds i32, i32* %4, i64 1
  %364 = load i32, i32* %363, align 4
  %365 = sitofp i32 %346 to float
  %366 = sitofp i32 %362 to float
  %367 = fdiv float %365, %366
  %368 = sitofp i32 %347 to float
  %369 = sitofp i32 %364 to float
  %370 = fdiv float %368, %369
  %371 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %0, i64 0, i32 0
  %372 = load i8, i8* %371, align 1, !range !2
  %373 = icmp ne i8 %372, 0
  %374 = icmp sgt i32 %362, 1
  %375 = and i1 %374, %373
  br i1 %375, label %376, label %382

376:                                              ; preds = %311
  %377 = add nsw i32 %346, -1
  %378 = sitofp i32 %377 to float
  %379 = add nsw i32 %362, -1
  %380 = sitofp i32 %379 to float
  %381 = fdiv float %378, %380
  br label %382

382:                                              ; preds = %376, %311
  %383 = phi float [ %381, %376 ], [ %367, %311 ]
  %384 = icmp sgt i32 %364, 1
  %385 = and i1 %384, %373
  br i1 %385, label %386, label %392

386:                                              ; preds = %382
  %387 = add nsw i32 %347, -1
  %388 = sitofp i32 %387 to float
  %389 = add nsw i32 %364, -1
  %390 = sitofp i32 %389 to float
  %391 = fdiv float %388, %390
  br label %392

392:                                              ; preds = %386, %382
  %393 = phi float [ %391, %386 ], [ %370, %382 ]
  %394 = icmp sgt i32 %337, 0
  br i1 %394, label %395, label %436

395:                                              ; preds = %392
  %396 = icmp sgt i32 %362, 0
  %397 = add nsw i32 %346, -1
  %398 = icmp sgt i32 %364, 0
  %399 = add nsw i32 %347, -1
  %400 = icmp sgt i32 %359, 0
  %401 = getelementptr inbounds i32, i32* %106, i64 1
  %402 = load i32, i32* %401, align 4
  %403 = load i32, i32* %343, align 8
  %404 = load i32, i32* %350, align 4
  %405 = getelementptr inbounds i32, i32* %313, i64 1
  %406 = load i32, i32* %405, align 4
  %407 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %408 = bitcast [16 x i8]* %407 to i32*
  %409 = load i32, i32* %408, align 8
  %410 = load i32, i32* %355, align 4
  %411 = sext i32 %359 to i64
  %412 = sext i32 %410 to i64
  %413 = sext i32 %409 to i64
  %414 = sext i32 %406 to i64
  %415 = sext i32 %337 to i64
  %416 = zext i32 %362 to i64
  %417 = zext i32 %364 to i64
  %418 = mul nsw i64 %414, %413
  %419 = mul i64 %418, %412
  %420 = mul nsw i64 %413, %412
  %421 = getelementptr float, float* %2, i64 %411
  %422 = getelementptr float, float* %2, i64 %411
  %423 = getelementptr float, float* %2, i64 %411
  %424 = getelementptr float, float* %2, i64 %411
  %425 = icmp ult i32 %359, 4
  %426 = and i64 %411, -4
  %427 = icmp eq i64 %426, %411
  br label %428

428:                                              ; preds = %395, %456
  %429 = phi i64 [ 0, %395 ], [ %457, %456 ]
  %430 = mul i64 %419, %429
  %431 = add i64 %430, %411
  br i1 %396, label %432, label %456

432:                                              ; preds = %428
  %433 = mul nsw i64 %429, %414
  %434 = trunc i64 %429 to i32
  %435 = mul i32 %402, %434
  br label %459

436:                                              ; preds = %456, %392
  %437 = xor i1 %329, true
  %438 = icmp eq i32* %333, null
  %439 = or i1 %438, %437
  br i1 %439, label %442, label %440

440:                                              ; preds = %436
  %441 = bitcast i32* %333 to i8*
  tail call void @_ZdaPv(i8* %441) #10
  br label %442

442:                                              ; preds = %436, %440
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %222) #9
  br i1 %361, label %443, label %449

443:                                              ; preds = %442
  %444 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %445 = load i32*, i32** %444, align 8
  %446 = icmp eq i32* %445, null
  br i1 %446, label %449, label %447

447:                                              ; preds = %443
  %448 = bitcast i32* %445 to i8*
  tail call void @_ZdaPv(i8* %448) #10
  br label %449

449:                                              ; preds = %442, %443, %447
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #9
  %450 = xor i1 %327, true
  %451 = icmp eq i32* %330, null
  %452 = or i1 %451, %450
  br i1 %452, label %455, label %453

453:                                              ; preds = %449
  %454 = bitcast i32* %330 to i8*
  tail call void @_ZdaPv(i8* %454) #10
  br label %455

455:                                              ; preds = %449, %453
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #9
  ret void

456:                                              ; preds = %499, %428
  %457 = add nuw nsw i64 %429, 1
  %458 = icmp slt i64 %457, %415
  br i1 %458, label %428, label %436

459:                                              ; preds = %499, %432
  %460 = phi i64 [ 0, %432 ], [ %500, %499 ]
  %461 = mul i64 %420, %460
  %462 = add i64 %430, %461
  %463 = add i64 %431, %461
  %464 = trunc i64 %460 to i32
  %465 = sitofp i32 %464 to float
  %466 = load i8, i8* %11, align 1, !range !2
  %467 = icmp eq i8 %466, 0
  br i1 %467, label %472, label %468

468:                                              ; preds = %459
  %469 = fadd float %465, 5.000000e-01
  %470 = fmul float %383, %469
  %471 = fadd float %470, -5.000000e-01
  br label %474

472:                                              ; preds = %459
  %473 = fmul float %383, %465
  br label %474

474:                                              ; preds = %468, %472
  %475 = phi float [ %473, %472 ], [ %471, %468 ]
  %476 = tail call float @llvm.floor.f32(float %475) #9
  %477 = fptosi float %476 to i32
  %478 = icmp sgt i32 %477, 0
  %479 = select i1 %478, i32 %477, i32 0
  %480 = tail call float @llvm.ceil.f32(float %475) #9
  %481 = fptosi float %480 to i32
  br i1 %398, label %482, label %499

482:                                              ; preds = %474
  %483 = icmp slt i32 %397, %481
  %484 = select i1 %483, i32 %397, i32 %481
  %485 = add nsw i32 %435, %479
  %486 = mul nsw i32 %485, %403
  %487 = sitofp i32 %479 to float
  %488 = fsub float %487, %475
  %489 = fadd float %488, 1.000000e+00
  %490 = add nsw i32 %435, %484
  %491 = mul nsw i32 %490, %403
  %492 = fsub float %475, %487
  %493 = add nsw i64 %433, %460
  %494 = mul nsw i64 %493, %413
  %495 = insertelement <4 x float> undef, float %489, i32 0
  %496 = shufflevector <4 x float> %495, <4 x float> undef, <4 x i32> zeroinitializer
  %497 = insertelement <4 x float> undef, float %492, i32 0
  %498 = shufflevector <4 x float> %497, <4 x float> undef, <4 x i32> zeroinitializer
  br label %502

499:                                              ; preds = %614, %474
  %500 = add nuw nsw i64 %460, 1
  %501 = icmp eq i64 %500, %416
  br i1 %501, label %456, label %459

502:                                              ; preds = %617, %482
  %503 = phi i8 [ %466, %482 ], [ %618, %617 ]
  %504 = phi i64 [ 0, %482 ], [ %615, %617 ]
  %505 = mul i64 %504, %412
  %506 = add i64 %462, %505
  %507 = getelementptr float, float* %6, i64 %506
  %508 = add i64 %463, %505
  %509 = getelementptr float, float* %6, i64 %508
  %510 = trunc i64 %504 to i32
  %511 = sitofp i32 %510 to float
  %512 = icmp eq i8 %503, 0
  br i1 %512, label %517, label %513

513:                                              ; preds = %502
  %514 = fadd float %511, 5.000000e-01
  %515 = fmul float %393, %514
  %516 = fadd float %515, -5.000000e-01
  br label %519

517:                                              ; preds = %502
  %518 = fmul float %393, %511
  br label %519

519:                                              ; preds = %513, %517
  %520 = phi float [ %518, %517 ], [ %516, %513 ]
  %521 = tail call float @llvm.floor.f32(float %520) #9
  %522 = fptosi float %521 to i32
  %523 = icmp sgt i32 %522, 0
  %524 = select i1 %523, i32 %522, i32 0
  %525 = tail call float @llvm.ceil.f32(float %520) #9
  %526 = fptosi float %525 to i32
  %527 = icmp slt i32 %399, %526
  %528 = select i1 %527, i32 %399, i32 %526
  br i1 %400, label %529, label %614

529:                                              ; preds = %519
  %530 = add nsw i32 %486, %524
  %531 = mul nsw i32 %530, %404
  %532 = sitofp i32 %524 to float
  %533 = fsub float %532, %520
  %534 = fadd float %533, 1.000000e+00
  %535 = add nsw i32 %491, %524
  %536 = mul nsw i32 %535, %404
  %537 = add nsw i32 %486, %528
  %538 = mul nsw i32 %537, %404
  %539 = fsub float %520, %532
  %540 = add nsw i32 %491, %528
  %541 = mul nsw i32 %540, %404
  %542 = add nsw i64 %494, %504
  %543 = mul nsw i64 %542, %412
  %544 = sext i32 %541 to i64
  %545 = sext i32 %538 to i64
  %546 = sext i32 %536 to i64
  %547 = sext i32 %531 to i64
  br i1 %425, label %548, label %550

548:                                              ; preds = %613, %550, %529
  %549 = phi i64 [ 0, %550 ], [ 0, %529 ], [ %426, %613 ]
  br label %619

550:                                              ; preds = %529
  %551 = getelementptr float, float* %2, i64 %544
  %552 = getelementptr float, float* %421, i64 %544
  %553 = getelementptr float, float* %2, i64 %545
  %554 = getelementptr float, float* %422, i64 %545
  %555 = getelementptr float, float* %2, i64 %546
  %556 = getelementptr float, float* %423, i64 %546
  %557 = getelementptr float, float* %2, i64 %547
  %558 = getelementptr float, float* %424, i64 %547
  %559 = icmp ult float* %507, %552
  %560 = icmp ult float* %551, %509
  %561 = and i1 %559, %560
  %562 = icmp ult float* %507, %554
  %563 = icmp ult float* %553, %509
  %564 = and i1 %562, %563
  %565 = or i1 %561, %564
  %566 = icmp ult float* %507, %556
  %567 = icmp ult float* %555, %509
  %568 = and i1 %566, %567
  %569 = or i1 %565, %568
  %570 = icmp ult float* %507, %558
  %571 = icmp ult float* %557, %509
  %572 = and i1 %570, %571
  %573 = or i1 %569, %572
  br i1 %573, label %548, label %574

574:                                              ; preds = %550
  %575 = insertelement <4 x float> undef, float %534, i32 0
  %576 = shufflevector <4 x float> %575, <4 x float> undef, <4 x i32> zeroinitializer
  %577 = insertelement <4 x float> undef, float %539, i32 0
  %578 = shufflevector <4 x float> %577, <4 x float> undef, <4 x i32> zeroinitializer
  br label %579

579:                                              ; preds = %579, %574
  %580 = phi i64 [ 0, %574 ], [ %611, %579 ]
  %581 = add nsw i64 %580, %547
  %582 = getelementptr inbounds float, float* %2, i64 %581
  %583 = bitcast float* %582 to <4 x float>*
  %584 = load <4 x float>, <4 x float>* %583, align 4, !alias.scope !105
  %585 = fmul <4 x float> %496, %584
  %586 = fmul <4 x float> %576, %585
  %587 = add nsw i64 %580, %546
  %588 = getelementptr inbounds float, float* %2, i64 %587
  %589 = bitcast float* %588 to <4 x float>*
  %590 = load <4 x float>, <4 x float>* %589, align 4, !alias.scope !108
  %591 = fmul <4 x float> %498, %590
  %592 = fmul <4 x float> %576, %591
  %593 = fadd <4 x float> %586, %592
  %594 = add nsw i64 %580, %545
  %595 = getelementptr inbounds float, float* %2, i64 %594
  %596 = bitcast float* %595 to <4 x float>*
  %597 = load <4 x float>, <4 x float>* %596, align 4, !alias.scope !110
  %598 = fmul <4 x float> %496, %597
  %599 = fmul <4 x float> %578, %598
  %600 = fadd <4 x float> %593, %599
  %601 = add nsw i64 %580, %544
  %602 = getelementptr inbounds float, float* %2, i64 %601
  %603 = bitcast float* %602 to <4 x float>*
  %604 = load <4 x float>, <4 x float>* %603, align 4, !alias.scope !112
  %605 = fmul <4 x float> %498, %604
  %606 = fmul <4 x float> %578, %605
  %607 = fadd <4 x float> %600, %606
  %608 = add nsw i64 %543, %580
  %609 = getelementptr inbounds float, float* %6, i64 %608
  %610 = bitcast float* %609 to <4 x float>*
  store <4 x float> %607, <4 x float>* %610, align 4, !alias.scope !114, !noalias !116
  %611 = add i64 %580, 4
  %612 = icmp eq i64 %611, %426
  br i1 %612, label %613, label %579, !llvm.loop !117

613:                                              ; preds = %579
  br i1 %427, label %614, label %548

614:                                              ; preds = %619, %613, %519
  %615 = add nuw nsw i64 %504, 1
  %616 = icmp eq i64 %615, %417
  br i1 %616, label %499, label %617

617:                                              ; preds = %614
  %618 = load i8, i8* %11, align 1, !range !2
  br label %502

619:                                              ; preds = %548, %619
  %620 = phi i64 [ %646, %619 ], [ %549, %548 ]
  %621 = add nsw i64 %620, %547
  %622 = getelementptr inbounds float, float* %2, i64 %621
  %623 = load float, float* %622, align 4
  %624 = fmul float %489, %623
  %625 = fmul float %534, %624
  %626 = add nsw i64 %620, %546
  %627 = getelementptr inbounds float, float* %2, i64 %626
  %628 = load float, float* %627, align 4
  %629 = fmul float %492, %628
  %630 = fmul float %534, %629
  %631 = fadd float %625, %630
  %632 = add nsw i64 %620, %545
  %633 = getelementptr inbounds float, float* %2, i64 %632
  %634 = load float, float* %633, align 4
  %635 = fmul float %489, %634
  %636 = fmul float %539, %635
  %637 = fadd float %631, %636
  %638 = add nsw i64 %620, %544
  %639 = getelementptr inbounds float, float* %2, i64 %638
  %640 = load float, float* %639, align 4
  %641 = fmul float %492, %640
  %642 = fmul float %539, %641
  %643 = fadd float %637, %642
  %644 = add nsw i64 %543, %620
  %645 = getelementptr inbounds float, float* %6, i64 %644
  store float %643, float* %645, align 4
  %646 = add nuw nsw i64 %620, 1
  %647 = icmp slt i64 %646, %411
  br i1 %647, label %619, label %614, !llvm.loop !118
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops14ResizeBilinearIhEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKiS7_PS8_(%"struct.tflite::ResizeBilinearParams"* dereferenceable(2), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %15 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !119
  %17 = load i32, i32* %12, align 8, !noalias !119
  %18 = icmp sgt i32 %17, 4
  br i1 %18, label %19, label %20

19:                                               ; preds = %7
  tail call void @abort() #11, !noalias !119
  unreachable

20:                                               ; preds = %7
  store i32 4, i32* %16, align 8, !alias.scope !119
  %21 = sub i32 4, %17
  %22 = icmp sgt i32 %21, 0
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %22, label %24, label %104

24:                                               ; preds = %20
  %25 = bitcast %union.anon* %23 to [5 x i32]*
  %26 = zext i32 %21 to i64
  %27 = icmp ult i32 %21, 8
  br i1 %27, label %97, label %28

28:                                               ; preds = %24
  %29 = and i64 %26, 4294967288
  %30 = add nsw i64 %29, -8
  %31 = lshr exact i64 %30, 3
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 7
  %34 = icmp ult i64 %30, 56
  br i1 %34, label %82, label %35

35:                                               ; preds = %28
  %36 = sub nsw i64 %32, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %79, %37 ]
  %39 = phi i64 [ %36, %35 ], [ %80, %37 ]
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %38
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !119
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !119
  %44 = or i64 %38, 8
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !119
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !119
  %49 = or i64 %38, 16
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !119
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !119
  %54 = or i64 %38, 24
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !119
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !119
  %59 = or i64 %38, 32
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !119
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !119
  %64 = or i64 %38, 40
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !119
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !119
  %69 = or i64 %38, 48
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !119
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !119
  %74 = or i64 %38, 56
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %74
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !119
  %77 = getelementptr inbounds i32, i32* %75, i64 4
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %78, align 8, !alias.scope !119
  %79 = add i64 %38, 64
  %80 = add i64 %39, -8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %37, !llvm.loop !122

82:                                               ; preds = %37, %28
  %83 = phi i64 [ 0, %28 ], [ %79, %37 ]
  %84 = icmp eq i64 %33, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %92, %85 ], [ %83, %82 ]
  %87 = phi i64 [ %93, %85 ], [ %33, %82 ]
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %86
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !119
  %90 = getelementptr inbounds i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %91, align 8, !alias.scope !119
  %92 = add i64 %86, 8
  %93 = add i64 %87, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %85, !llvm.loop !123

95:                                               ; preds = %85, %82
  %96 = icmp eq i64 %29, %26
  br i1 %96, label %104, label %97

97:                                               ; preds = %95, %24
  %98 = phi i64 [ 0, %24 ], [ %29, %95 ]
  br label %99

99:                                               ; preds = %97, %99
  %100 = phi i64 [ %102, %99 ], [ %98, %97 ]
  %101 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %100
  store i32 1, i32* %101, align 4, !alias.scope !119
  %102 = add nuw nsw i64 %100, 1
  %103 = icmp eq i64 %102, %26
  br i1 %103, label %104, label %99, !llvm.loop !124

104:                                              ; preds = %99, %95, %20
  %105 = getelementptr inbounds %union.anon, %union.anon* %23, i64 0, i32 0
  %106 = bitcast %union.anon* %23 to i32*
  %107 = sext i32 %21 to i64
  %108 = getelementptr inbounds i32, i32* %106, i64 %107
  %109 = bitcast i32* %108 to i8*
  %110 = icmp sgt i32 %17, 5
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %112 = getelementptr inbounds %union.anon, %union.anon* %111, i64 0, i32 0
  %113 = load i32*, i32** %112, align 8, !noalias !119
  %114 = bitcast %union.anon* %111 to i32*
  %115 = select i1 %110, i32* %113, i32* %114
  %116 = bitcast i32* %115 to i8*
  %117 = sext i32 %17 to i64
  %118 = shl nsw i64 %117, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %116, i64 %118, i1 false) #9
  %119 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 32, i1 false)
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %120, align 8, !alias.scope !125
  %121 = load i32, i32* %13, align 8, !noalias !125
  %122 = icmp sgt i32 %121, 4
  br i1 %122, label %123, label %124

123:                                              ; preds = %104
  tail call void @abort() #11, !noalias !125
  unreachable

124:                                              ; preds = %104
  store i32 4, i32* %120, align 8, !alias.scope !125
  %125 = sub i32 4, %121
  %126 = icmp sgt i32 %125, 0
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  br i1 %126, label %128, label %208

128:                                              ; preds = %124
  %129 = bitcast %union.anon* %127 to [5 x i32]*
  %130 = zext i32 %125 to i64
  %131 = icmp ult i32 %125, 8
  br i1 %131, label %201, label %132

132:                                              ; preds = %128
  %133 = and i64 %130, 4294967288
  %134 = add nsw i64 %133, -8
  %135 = lshr exact i64 %134, 3
  %136 = add nuw nsw i64 %135, 1
  %137 = and i64 %136, 7
  %138 = icmp ult i64 %134, 56
  br i1 %138, label %186, label %139

139:                                              ; preds = %132
  %140 = sub nsw i64 %136, %137
  br label %141

141:                                              ; preds = %141, %139
  %142 = phi i64 [ 0, %139 ], [ %183, %141 ]
  %143 = phi i64 [ %140, %139 ], [ %184, %141 ]
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %142
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !125
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !125
  %148 = or i64 %142, 8
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !125
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !125
  %153 = or i64 %142, 16
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !125
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !125
  %158 = or i64 %142, 24
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !125
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !125
  %163 = or i64 %142, 32
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !125
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !125
  %168 = or i64 %142, 40
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !125
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !125
  %173 = or i64 %142, 48
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !125
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !125
  %178 = or i64 %142, 56
  %179 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %178
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %180, align 8, !alias.scope !125
  %181 = getelementptr inbounds i32, i32* %179, i64 4
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !125
  %183 = add i64 %142, 64
  %184 = add i64 %143, -8
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %141, !llvm.loop !128

186:                                              ; preds = %141, %132
  %187 = phi i64 [ 0, %132 ], [ %183, %141 ]
  %188 = icmp eq i64 %137, 0
  br i1 %188, label %199, label %189

189:                                              ; preds = %186, %189
  %190 = phi i64 [ %196, %189 ], [ %187, %186 ]
  %191 = phi i64 [ %197, %189 ], [ %137, %186 ]
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %190
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %193, align 8, !alias.scope !125
  %194 = getelementptr inbounds i32, i32* %192, i64 4
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %195, align 8, !alias.scope !125
  %196 = add i64 %190, 8
  %197 = add i64 %191, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %189, !llvm.loop !129

199:                                              ; preds = %189, %186
  %200 = icmp eq i64 %133, %130
  br i1 %200, label %208, label %201

201:                                              ; preds = %199, %128
  %202 = phi i64 [ 0, %128 ], [ %133, %199 ]
  br label %203

203:                                              ; preds = %201, %203
  %204 = phi i64 [ %206, %203 ], [ %202, %201 ]
  %205 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %204
  store i32 1, i32* %205, align 4, !alias.scope !125
  %206 = add nuw nsw i64 %204, 1
  %207 = icmp eq i64 %206, %130
  br i1 %207, label %208, label %203, !llvm.loop !130

208:                                              ; preds = %203, %199, %124
  %209 = bitcast %union.anon* %127 to i32*
  %210 = sext i32 %125 to i64
  %211 = getelementptr inbounds i32, i32* %209, i64 %210
  %212 = bitcast i32* %211 to i8*
  %213 = icmp sgt i32 %121, 5
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %215 = getelementptr inbounds %union.anon, %union.anon* %214, i64 0, i32 0
  %216 = load i32*, i32** %215, align 8, !noalias !125
  %217 = bitcast %union.anon* %214 to i32*
  %218 = select i1 %213, i32* %216, i32* %217
  %219 = bitcast i32* %218 to i8*
  %220 = sext i32 %121 to i64
  %221 = shl nsw i64 %220, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %219, i64 %221, i1 false) #9
  %222 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %222) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %222, i8 -86, i64 32, i1 false)
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %223, align 8, !alias.scope !131
  %224 = load i32, i32* %14, align 8, !noalias !131
  %225 = icmp sgt i32 %224, 4
  br i1 %225, label %226, label %227

226:                                              ; preds = %208
  tail call void @abort() #11, !noalias !131
  unreachable

227:                                              ; preds = %208
  store i32 4, i32* %223, align 8, !alias.scope !131
  %228 = sub i32 4, %224
  %229 = icmp sgt i32 %228, 0
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  br i1 %229, label %231, label %311

231:                                              ; preds = %227
  %232 = bitcast %union.anon* %230 to [5 x i32]*
  %233 = zext i32 %228 to i64
  %234 = icmp ult i32 %228, 8
  br i1 %234, label %304, label %235

235:                                              ; preds = %231
  %236 = and i64 %233, 4294967288
  %237 = add nsw i64 %236, -8
  %238 = lshr exact i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 7
  %241 = icmp ult i64 %237, 56
  br i1 %241, label %289, label %242

242:                                              ; preds = %235
  %243 = sub nsw i64 %239, %240
  br label %244

244:                                              ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %286, %244 ]
  %246 = phi i64 [ %243, %242 ], [ %287, %244 ]
  %247 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %245
  %248 = bitcast i32* %247 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %248, align 8, !alias.scope !131
  %249 = getelementptr inbounds i32, i32* %247, i64 4
  %250 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %250, align 8, !alias.scope !131
  %251 = or i64 %245, 8
  %252 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %251
  %253 = bitcast i32* %252 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %253, align 8, !alias.scope !131
  %254 = getelementptr inbounds i32, i32* %252, i64 4
  %255 = bitcast i32* %254 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %255, align 8, !alias.scope !131
  %256 = or i64 %245, 16
  %257 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %256
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %258, align 8, !alias.scope !131
  %259 = getelementptr inbounds i32, i32* %257, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %260, align 8, !alias.scope !131
  %261 = or i64 %245, 24
  %262 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %261
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %263, align 8, !alias.scope !131
  %264 = getelementptr inbounds i32, i32* %262, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %265, align 8, !alias.scope !131
  %266 = or i64 %245, 32
  %267 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %266
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %268, align 8, !alias.scope !131
  %269 = getelementptr inbounds i32, i32* %267, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %270, align 8, !alias.scope !131
  %271 = or i64 %245, 40
  %272 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %271
  %273 = bitcast i32* %272 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %273, align 8, !alias.scope !131
  %274 = getelementptr inbounds i32, i32* %272, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %275, align 8, !alias.scope !131
  %276 = or i64 %245, 48
  %277 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %276
  %278 = bitcast i32* %277 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %278, align 8, !alias.scope !131
  %279 = getelementptr inbounds i32, i32* %277, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %280, align 8, !alias.scope !131
  %281 = or i64 %245, 56
  %282 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %281
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %283, align 8, !alias.scope !131
  %284 = getelementptr inbounds i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %285, align 8, !alias.scope !131
  %286 = add i64 %245, 64
  %287 = add i64 %246, -8
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %244, !llvm.loop !134

289:                                              ; preds = %244, %235
  %290 = phi i64 [ 0, %235 ], [ %286, %244 ]
  %291 = icmp eq i64 %240, 0
  br i1 %291, label %302, label %292

292:                                              ; preds = %289, %292
  %293 = phi i64 [ %299, %292 ], [ %290, %289 ]
  %294 = phi i64 [ %300, %292 ], [ %240, %289 ]
  %295 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %293
  %296 = bitcast i32* %295 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %296, align 8, !alias.scope !131
  %297 = getelementptr inbounds i32, i32* %295, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %298, align 8, !alias.scope !131
  %299 = add i64 %293, 8
  %300 = add i64 %294, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %292, !llvm.loop !135

302:                                              ; preds = %292, %289
  %303 = icmp eq i64 %236, %233
  br i1 %303, label %311, label %304

304:                                              ; preds = %302, %231
  %305 = phi i64 [ 0, %231 ], [ %236, %302 ]
  br label %306

306:                                              ; preds = %304, %306
  %307 = phi i64 [ %309, %306 ], [ %305, %304 ]
  %308 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %307
  store i32 1, i32* %308, align 4, !alias.scope !131
  %309 = add nuw nsw i64 %307, 1
  %310 = icmp eq i64 %309, %233
  br i1 %310, label %311, label %306, !llvm.loop !136

311:                                              ; preds = %306, %302, %227
  %312 = getelementptr inbounds %union.anon, %union.anon* %230, i64 0, i32 0
  %313 = bitcast %union.anon* %230 to i32*
  %314 = sext i32 %228 to i64
  %315 = getelementptr inbounds i32, i32* %313, i64 %314
  %316 = bitcast i32* %315 to i8*
  %317 = icmp sgt i32 %224, 5
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %319 = getelementptr inbounds %union.anon, %union.anon* %318, i64 0, i32 0
  %320 = load i32*, i32** %319, align 8, !noalias !131
  %321 = bitcast %union.anon* %318 to i32*
  %322 = select i1 %317, i32* %320, i32* %321
  %323 = bitcast i32* %322 to i8*
  %324 = sext i32 %224 to i64
  %325 = shl nsw i64 %324, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %316, i8* align 4 %323, i64 %325, i1 false) #9
  %326 = load i32, i32* %16, align 8
  %327 = icmp sgt i32 %326, 5
  %328 = load i32, i32* %223, align 8
  %329 = icmp sgt i32 %328, 5
  %330 = load i32*, i32** %105, align 8
  %331 = select i1 %327, i32* %330, i32* %106
  %332 = load i32, i32* %331, align 4
  %333 = load i32*, i32** %312, align 8
  %334 = select i1 %329, i32* %333, i32* %313
  %335 = load i32, i32* %334, align 4
  %336 = icmp slt i32 %335, %332
  %337 = select i1 %336, i32 %335, i32 %332
  %338 = getelementptr inbounds i32, i32* %330, i64 1
  %339 = getelementptr inbounds i32, i32* %330, i64 2
  %340 = bitcast %union.anon* %23 to [5 x i32]*
  %341 = getelementptr inbounds [5 x i32], [5 x i32]* %340, i64 0, i64 1
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %343 = bitcast [16 x i8]* %342 to i32*
  %344 = select i1 %327, i32* %338, i32* %341
  %345 = select i1 %327, i32* %339, i32* %343
  %346 = load i32, i32* %344, align 4
  %347 = load i32, i32* %345, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 3
  %349 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %350 = bitcast i8* %349 to i32*
  %351 = select i1 %327, i32* %348, i32* %350
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds i32, i32* %333, i64 3
  %354 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 4
  %355 = bitcast i8* %354 to i32*
  %356 = select i1 %329, i32* %353, i32* %355
  %357 = load i32, i32* %356, align 4
  %358 = icmp slt i32 %357, %352
  %359 = select i1 %358, i32 %357, i32 %352
  %360 = load i32, i32* %120, align 8
  %361 = icmp sgt i32 %360, 5
  %362 = load i32, i32* %4, align 4
  %363 = getelementptr inbounds i32, i32* %4, i64 1
  %364 = load i32, i32* %363, align 4
  %365 = sitofp i32 %346 to float
  %366 = sitofp i32 %362 to float
  %367 = fdiv float %365, %366
  %368 = sitofp i32 %347 to float
  %369 = sitofp i32 %364 to float
  %370 = fdiv float %368, %369
  %371 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %0, i64 0, i32 0
  %372 = load i8, i8* %371, align 1, !range !2
  %373 = icmp ne i8 %372, 0
  %374 = icmp sgt i32 %362, 1
  %375 = and i1 %374, %373
  br i1 %375, label %376, label %382

376:                                              ; preds = %311
  %377 = add nsw i32 %346, -1
  %378 = sitofp i32 %377 to float
  %379 = add nsw i32 %362, -1
  %380 = sitofp i32 %379 to float
  %381 = fdiv float %378, %380
  br label %382

382:                                              ; preds = %376, %311
  %383 = phi float [ %381, %376 ], [ %367, %311 ]
  %384 = icmp sgt i32 %364, 1
  %385 = and i1 %384, %373
  br i1 %385, label %386, label %392

386:                                              ; preds = %382
  %387 = add nsw i32 %347, -1
  %388 = sitofp i32 %387 to float
  %389 = add nsw i32 %364, -1
  %390 = sitofp i32 %389 to float
  %391 = fdiv float %388, %390
  br label %392

392:                                              ; preds = %386, %382
  %393 = phi float [ %391, %386 ], [ %370, %382 ]
  %394 = icmp sgt i32 %337, 0
  br i1 %394, label %395, label %436

395:                                              ; preds = %392
  %396 = icmp sgt i32 %362, 0
  %397 = add nsw i32 %346, -1
  %398 = icmp sgt i32 %364, 0
  %399 = add nsw i32 %347, -1
  %400 = icmp sgt i32 %359, 0
  %401 = getelementptr inbounds i32, i32* %106, i64 1
  %402 = load i32, i32* %401, align 4
  %403 = load i32, i32* %343, align 8
  %404 = load i32, i32* %350, align 4
  %405 = getelementptr inbounds i32, i32* %313, i64 1
  %406 = load i32, i32* %405, align 4
  %407 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %408 = bitcast [16 x i8]* %407 to i32*
  %409 = load i32, i32* %408, align 8
  %410 = load i32, i32* %355, align 4
  %411 = sext i32 %359 to i64
  %412 = sext i32 %410 to i64
  %413 = sext i32 %409 to i64
  %414 = sext i32 %406 to i64
  %415 = sext i32 %337 to i64
  %416 = zext i32 %362 to i64
  %417 = zext i32 %364 to i64
  %418 = mul nsw i64 %414, %413
  %419 = mul i64 %418, %412
  %420 = mul nsw i64 %413, %412
  %421 = getelementptr i8, i8* %2, i64 %411
  %422 = getelementptr i8, i8* %2, i64 %411
  %423 = getelementptr i8, i8* %2, i64 %411
  %424 = getelementptr i8, i8* %2, i64 %411
  %425 = icmp ult i32 %359, 16
  %426 = and i64 %411, -16
  %427 = icmp eq i64 %426, %411
  br label %428

428:                                              ; preds = %395, %456
  %429 = phi i64 [ 0, %395 ], [ %457, %456 ]
  %430 = mul i64 %419, %429
  %431 = add i64 %430, %411
  br i1 %396, label %432, label %456

432:                                              ; preds = %428
  %433 = mul nsw i64 %429, %414
  %434 = trunc i64 %429 to i32
  %435 = mul i32 %402, %434
  br label %459

436:                                              ; preds = %456, %392
  %437 = xor i1 %329, true
  %438 = icmp eq i32* %333, null
  %439 = or i1 %438, %437
  br i1 %439, label %442, label %440

440:                                              ; preds = %436
  %441 = bitcast i32* %333 to i8*
  tail call void @_ZdaPv(i8* %441) #10
  br label %442

442:                                              ; preds = %436, %440
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %222) #9
  br i1 %361, label %443, label %449

443:                                              ; preds = %442
  %444 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %445 = load i32*, i32** %444, align 8
  %446 = icmp eq i32* %445, null
  br i1 %446, label %449, label %447

447:                                              ; preds = %443
  %448 = bitcast i32* %445 to i8*
  tail call void @_ZdaPv(i8* %448) #10
  br label %449

449:                                              ; preds = %442, %443, %447
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #9
  %450 = xor i1 %327, true
  %451 = icmp eq i32* %330, null
  %452 = or i1 %451, %450
  br i1 %452, label %455, label %453

453:                                              ; preds = %449
  %454 = bitcast i32* %330 to i8*
  tail call void @_ZdaPv(i8* %454) #10
  br label %455

455:                                              ; preds = %449, %453
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #9
  ret void

456:                                              ; preds = %499, %428
  %457 = add nuw nsw i64 %429, 1
  %458 = icmp slt i64 %457, %415
  br i1 %458, label %428, label %436

459:                                              ; preds = %499, %432
  %460 = phi i64 [ 0, %432 ], [ %500, %499 ]
  %461 = mul i64 %420, %460
  %462 = add i64 %430, %461
  %463 = add i64 %431, %461
  %464 = trunc i64 %460 to i32
  %465 = sitofp i32 %464 to float
  %466 = load i8, i8* %11, align 1, !range !2
  %467 = icmp eq i8 %466, 0
  br i1 %467, label %472, label %468

468:                                              ; preds = %459
  %469 = fadd float %465, 5.000000e-01
  %470 = fmul float %383, %469
  %471 = fadd float %470, -5.000000e-01
  br label %474

472:                                              ; preds = %459
  %473 = fmul float %383, %465
  br label %474

474:                                              ; preds = %468, %472
  %475 = phi float [ %473, %472 ], [ %471, %468 ]
  %476 = tail call float @llvm.floor.f32(float %475) #9
  %477 = fptosi float %476 to i32
  %478 = icmp sgt i32 %477, 0
  %479 = select i1 %478, i32 %477, i32 0
  %480 = tail call float @llvm.ceil.f32(float %475) #9
  %481 = fptosi float %480 to i32
  br i1 %398, label %482, label %499

482:                                              ; preds = %474
  %483 = icmp slt i32 %397, %481
  %484 = select i1 %483, i32 %397, i32 %481
  %485 = add nsw i32 %435, %479
  %486 = mul nsw i32 %485, %403
  %487 = sitofp i32 %479 to float
  %488 = fsub float %487, %475
  %489 = fadd float %488, 1.000000e+00
  %490 = add nsw i32 %435, %484
  %491 = mul nsw i32 %490, %403
  %492 = fsub float %475, %487
  %493 = add nsw i64 %433, %460
  %494 = mul nsw i64 %493, %413
  %495 = insertelement <16 x float> undef, float %489, i32 0
  %496 = shufflevector <16 x float> %495, <16 x float> undef, <16 x i32> zeroinitializer
  %497 = insertelement <16 x float> undef, float %492, i32 0
  %498 = shufflevector <16 x float> %497, <16 x float> undef, <16 x i32> zeroinitializer
  br label %502

499:                                              ; preds = %619, %474
  %500 = add nuw nsw i64 %460, 1
  %501 = icmp eq i64 %500, %416
  br i1 %501, label %456, label %459

502:                                              ; preds = %622, %482
  %503 = phi i8 [ %466, %482 ], [ %623, %622 ]
  %504 = phi i64 [ 0, %482 ], [ %620, %622 ]
  %505 = mul i64 %504, %412
  %506 = add i64 %462, %505
  %507 = getelementptr i8, i8* %6, i64 %506
  %508 = add i64 %463, %505
  %509 = getelementptr i8, i8* %6, i64 %508
  %510 = trunc i64 %504 to i32
  %511 = sitofp i32 %510 to float
  %512 = icmp eq i8 %503, 0
  br i1 %512, label %517, label %513

513:                                              ; preds = %502
  %514 = fadd float %511, 5.000000e-01
  %515 = fmul float %393, %514
  %516 = fadd float %515, -5.000000e-01
  br label %519

517:                                              ; preds = %502
  %518 = fmul float %393, %511
  br label %519

519:                                              ; preds = %513, %517
  %520 = phi float [ %518, %517 ], [ %516, %513 ]
  %521 = tail call float @llvm.floor.f32(float %520) #9
  %522 = fptosi float %521 to i32
  %523 = icmp sgt i32 %522, 0
  %524 = select i1 %523, i32 %522, i32 0
  %525 = tail call float @llvm.ceil.f32(float %520) #9
  %526 = fptosi float %525 to i32
  %527 = icmp slt i32 %399, %526
  %528 = select i1 %527, i32 %399, i32 %526
  br i1 %400, label %529, label %619

529:                                              ; preds = %519
  %530 = add nsw i32 %486, %524
  %531 = mul nsw i32 %530, %404
  %532 = sitofp i32 %524 to float
  %533 = fsub float %532, %520
  %534 = fadd float %533, 1.000000e+00
  %535 = add nsw i32 %491, %524
  %536 = mul nsw i32 %535, %404
  %537 = add nsw i32 %486, %528
  %538 = mul nsw i32 %537, %404
  %539 = fsub float %520, %532
  %540 = add nsw i32 %491, %528
  %541 = mul nsw i32 %540, %404
  %542 = add nsw i64 %494, %504
  %543 = mul nsw i64 %542, %412
  %544 = sext i32 %541 to i64
  %545 = sext i32 %538 to i64
  %546 = sext i32 %536 to i64
  %547 = sext i32 %531 to i64
  br i1 %425, label %548, label %550

548:                                              ; preds = %618, %550, %529
  %549 = phi i64 [ 0, %550 ], [ 0, %529 ], [ %426, %618 ]
  br label %624

550:                                              ; preds = %529
  %551 = getelementptr i8, i8* %2, i64 %544
  %552 = getelementptr i8, i8* %421, i64 %544
  %553 = getelementptr i8, i8* %2, i64 %545
  %554 = getelementptr i8, i8* %422, i64 %545
  %555 = getelementptr i8, i8* %2, i64 %546
  %556 = getelementptr i8, i8* %423, i64 %546
  %557 = getelementptr i8, i8* %2, i64 %547
  %558 = getelementptr i8, i8* %424, i64 %547
  %559 = icmp ult i8* %507, %552
  %560 = icmp ult i8* %551, %509
  %561 = and i1 %559, %560
  %562 = icmp ult i8* %507, %554
  %563 = icmp ult i8* %553, %509
  %564 = and i1 %562, %563
  %565 = or i1 %561, %564
  %566 = icmp ult i8* %507, %556
  %567 = icmp ult i8* %555, %509
  %568 = and i1 %566, %567
  %569 = or i1 %565, %568
  %570 = icmp ult i8* %507, %558
  %571 = icmp ult i8* %557, %509
  %572 = and i1 %570, %571
  %573 = or i1 %569, %572
  br i1 %573, label %548, label %574

574:                                              ; preds = %550
  %575 = insertelement <16 x float> undef, float %534, i32 0
  %576 = shufflevector <16 x float> %575, <16 x float> undef, <16 x i32> zeroinitializer
  %577 = insertelement <16 x float> undef, float %539, i32 0
  %578 = shufflevector <16 x float> %577, <16 x float> undef, <16 x i32> zeroinitializer
  br label %579

579:                                              ; preds = %579, %574
  %580 = phi i64 [ 0, %574 ], [ %616, %579 ]
  %581 = add nsw i64 %580, %547
  %582 = getelementptr inbounds i8, i8* %2, i64 %581
  %583 = bitcast i8* %582 to <16 x i8>*
  %584 = load <16 x i8>, <16 x i8>* %583, align 1, !alias.scope !137
  %585 = uitofp <16 x i8> %584 to <16 x float>
  %586 = fmul <16 x float> %496, %585
  %587 = fmul <16 x float> %576, %586
  %588 = add nsw i64 %580, %546
  %589 = getelementptr inbounds i8, i8* %2, i64 %588
  %590 = bitcast i8* %589 to <16 x i8>*
  %591 = load <16 x i8>, <16 x i8>* %590, align 1, !alias.scope !140
  %592 = uitofp <16 x i8> %591 to <16 x float>
  %593 = fmul <16 x float> %498, %592
  %594 = fmul <16 x float> %576, %593
  %595 = fadd <16 x float> %587, %594
  %596 = add nsw i64 %580, %545
  %597 = getelementptr inbounds i8, i8* %2, i64 %596
  %598 = bitcast i8* %597 to <16 x i8>*
  %599 = load <16 x i8>, <16 x i8>* %598, align 1, !alias.scope !142
  %600 = uitofp <16 x i8> %599 to <16 x float>
  %601 = fmul <16 x float> %496, %600
  %602 = fmul <16 x float> %578, %601
  %603 = fadd <16 x float> %595, %602
  %604 = add nsw i64 %580, %544
  %605 = getelementptr inbounds i8, i8* %2, i64 %604
  %606 = bitcast i8* %605 to <16 x i8>*
  %607 = load <16 x i8>, <16 x i8>* %606, align 1, !alias.scope !144
  %608 = uitofp <16 x i8> %607 to <16 x float>
  %609 = fmul <16 x float> %498, %608
  %610 = fmul <16 x float> %578, %609
  %611 = fadd <16 x float> %603, %610
  %612 = fptoui <16 x float> %611 to <16 x i8>
  %613 = add nsw i64 %543, %580
  %614 = getelementptr inbounds i8, i8* %6, i64 %613
  %615 = bitcast i8* %614 to <16 x i8>*
  store <16 x i8> %612, <16 x i8>* %615, align 1, !alias.scope !146, !noalias !148
  %616 = add i64 %580, 16
  %617 = icmp eq i64 %616, %426
  br i1 %617, label %618, label %579, !llvm.loop !149

618:                                              ; preds = %579
  br i1 %427, label %619, label %548

619:                                              ; preds = %624, %618, %519
  %620 = add nuw nsw i64 %504, 1
  %621 = icmp eq i64 %620, %417
  br i1 %621, label %499, label %622

622:                                              ; preds = %619
  %623 = load i8, i8* %11, align 1, !range !2
  br label %502

624:                                              ; preds = %548, %624
  %625 = phi i64 [ %656, %624 ], [ %549, %548 ]
  %626 = add nsw i64 %625, %547
  %627 = getelementptr inbounds i8, i8* %2, i64 %626
  %628 = load i8, i8* %627, align 1
  %629 = uitofp i8 %628 to float
  %630 = fmul float %489, %629
  %631 = fmul float %534, %630
  %632 = add nsw i64 %625, %546
  %633 = getelementptr inbounds i8, i8* %2, i64 %632
  %634 = load i8, i8* %633, align 1
  %635 = uitofp i8 %634 to float
  %636 = fmul float %492, %635
  %637 = fmul float %534, %636
  %638 = fadd float %631, %637
  %639 = add nsw i64 %625, %545
  %640 = getelementptr inbounds i8, i8* %2, i64 %639
  %641 = load i8, i8* %640, align 1
  %642 = uitofp i8 %641 to float
  %643 = fmul float %489, %642
  %644 = fmul float %539, %643
  %645 = fadd float %638, %644
  %646 = add nsw i64 %625, %544
  %647 = getelementptr inbounds i8, i8* %2, i64 %646
  %648 = load i8, i8* %647, align 1
  %649 = uitofp i8 %648 to float
  %650 = fmul float %492, %649
  %651 = fmul float %539, %650
  %652 = fadd float %645, %651
  %653 = fptoui float %652 to i8
  %654 = add nsw i64 %543, %625
  %655 = getelementptr inbounds i8, i8* %6, i64 %654
  store i8 %653, i8* %655, align 1
  %656 = add nuw nsw i64 %625, 1
  %657 = icmp slt i64 %656, %411
  br i1 %657, label %624, label %619, !llvm.loop !150
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKaS6_PKiS6_Pa(%"struct.tflite::ResizeBilinearParams"* dereferenceable(2), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %15 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !151
  %17 = load i32, i32* %12, align 8, !noalias !151
  %18 = icmp sgt i32 %17, 4
  br i1 %18, label %19, label %20

19:                                               ; preds = %7
  tail call void @abort() #11, !noalias !151
  unreachable

20:                                               ; preds = %7
  store i32 4, i32* %16, align 8, !alias.scope !151
  %21 = sub i32 4, %17
  %22 = icmp sgt i32 %21, 0
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %22, label %24, label %104

24:                                               ; preds = %20
  %25 = bitcast %union.anon* %23 to [5 x i32]*
  %26 = zext i32 %21 to i64
  %27 = icmp ult i32 %21, 8
  br i1 %27, label %97, label %28

28:                                               ; preds = %24
  %29 = and i64 %26, 4294967288
  %30 = add nsw i64 %29, -8
  %31 = lshr exact i64 %30, 3
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 7
  %34 = icmp ult i64 %30, 56
  br i1 %34, label %82, label %35

35:                                               ; preds = %28
  %36 = sub nsw i64 %32, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %79, %37 ]
  %39 = phi i64 [ %36, %35 ], [ %80, %37 ]
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %38
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !151
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !151
  %44 = or i64 %38, 8
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !151
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !151
  %49 = or i64 %38, 16
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !151
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !151
  %54 = or i64 %38, 24
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !151
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !151
  %59 = or i64 %38, 32
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !151
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !151
  %64 = or i64 %38, 40
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !151
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !151
  %69 = or i64 %38, 48
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !151
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !151
  %74 = or i64 %38, 56
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %74
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !151
  %77 = getelementptr inbounds i32, i32* %75, i64 4
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %78, align 8, !alias.scope !151
  %79 = add i64 %38, 64
  %80 = add i64 %39, -8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %37, !llvm.loop !154

82:                                               ; preds = %37, %28
  %83 = phi i64 [ 0, %28 ], [ %79, %37 ]
  %84 = icmp eq i64 %33, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %82, %85
  %86 = phi i64 [ %92, %85 ], [ %83, %82 ]
  %87 = phi i64 [ %93, %85 ], [ %33, %82 ]
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %86
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !151
  %90 = getelementptr inbounds i32, i32* %88, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %91, align 8, !alias.scope !151
  %92 = add i64 %86, 8
  %93 = add i64 %87, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %85, !llvm.loop !155

95:                                               ; preds = %85, %82
  %96 = icmp eq i64 %29, %26
  br i1 %96, label %104, label %97

97:                                               ; preds = %95, %24
  %98 = phi i64 [ 0, %24 ], [ %29, %95 ]
  br label %99

99:                                               ; preds = %97, %99
  %100 = phi i64 [ %102, %99 ], [ %98, %97 ]
  %101 = getelementptr inbounds [5 x i32], [5 x i32]* %25, i64 0, i64 %100
  store i32 1, i32* %101, align 4, !alias.scope !151
  %102 = add nuw nsw i64 %100, 1
  %103 = icmp eq i64 %102, %26
  br i1 %103, label %104, label %99, !llvm.loop !156

104:                                              ; preds = %99, %95, %20
  %105 = getelementptr inbounds %union.anon, %union.anon* %23, i64 0, i32 0
  %106 = bitcast %union.anon* %23 to i32*
  %107 = sext i32 %21 to i64
  %108 = getelementptr inbounds i32, i32* %106, i64 %107
  %109 = bitcast i32* %108 to i8*
  %110 = icmp sgt i32 %17, 5
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %112 = getelementptr inbounds %union.anon, %union.anon* %111, i64 0, i32 0
  %113 = load i32*, i32** %112, align 8, !noalias !151
  %114 = bitcast %union.anon* %111 to i32*
  %115 = select i1 %110, i32* %113, i32* %114
  %116 = bitcast i32* %115 to i8*
  %117 = sext i32 %17 to i64
  %118 = shl nsw i64 %117, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %116, i64 %118, i1 false) #9
  %119 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 32, i1 false)
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %120, align 8, !alias.scope !157
  %121 = load i32, i32* %13, align 8, !noalias !157
  %122 = icmp sgt i32 %121, 4
  br i1 %122, label %123, label %124

123:                                              ; preds = %104
  tail call void @abort() #11, !noalias !157
  unreachable

124:                                              ; preds = %104
  store i32 4, i32* %120, align 8, !alias.scope !157
  %125 = sub i32 4, %121
  %126 = icmp sgt i32 %125, 0
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  br i1 %126, label %128, label %208

128:                                              ; preds = %124
  %129 = bitcast %union.anon* %127 to [5 x i32]*
  %130 = zext i32 %125 to i64
  %131 = icmp ult i32 %125, 8
  br i1 %131, label %201, label %132

132:                                              ; preds = %128
  %133 = and i64 %130, 4294967288
  %134 = add nsw i64 %133, -8
  %135 = lshr exact i64 %134, 3
  %136 = add nuw nsw i64 %135, 1
  %137 = and i64 %136, 7
  %138 = icmp ult i64 %134, 56
  br i1 %138, label %186, label %139

139:                                              ; preds = %132
  %140 = sub nsw i64 %136, %137
  br label %141

141:                                              ; preds = %141, %139
  %142 = phi i64 [ 0, %139 ], [ %183, %141 ]
  %143 = phi i64 [ %140, %139 ], [ %184, %141 ]
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %142
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !157
  %146 = getelementptr inbounds i32, i32* %144, i64 4
  %147 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %147, align 8, !alias.scope !157
  %148 = or i64 %142, 8
  %149 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %148
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !157
  %151 = getelementptr inbounds i32, i32* %149, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %152, align 8, !alias.scope !157
  %153 = or i64 %142, 16
  %154 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %153
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !157
  %156 = getelementptr inbounds i32, i32* %154, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %157, align 8, !alias.scope !157
  %158 = or i64 %142, 24
  %159 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %158
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !157
  %161 = getelementptr inbounds i32, i32* %159, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %162, align 8, !alias.scope !157
  %163 = or i64 %142, 32
  %164 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %163
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !157
  %166 = getelementptr inbounds i32, i32* %164, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %167, align 8, !alias.scope !157
  %168 = or i64 %142, 40
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !157
  %171 = getelementptr inbounds i32, i32* %169, i64 4
  %172 = bitcast i32* %171 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %172, align 8, !alias.scope !157
  %173 = or i64 %142, 48
  %174 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !157
  %176 = getelementptr inbounds i32, i32* %174, i64 4
  %177 = bitcast i32* %176 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %177, align 8, !alias.scope !157
  %178 = or i64 %142, 56
  %179 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %178
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %180, align 8, !alias.scope !157
  %181 = getelementptr inbounds i32, i32* %179, i64 4
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !157
  %183 = add i64 %142, 64
  %184 = add i64 %143, -8
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %141, !llvm.loop !160

186:                                              ; preds = %141, %132
  %187 = phi i64 [ 0, %132 ], [ %183, %141 ]
  %188 = icmp eq i64 %137, 0
  br i1 %188, label %199, label %189

189:                                              ; preds = %186, %189
  %190 = phi i64 [ %196, %189 ], [ %187, %186 ]
  %191 = phi i64 [ %197, %189 ], [ %137, %186 ]
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %190
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %193, align 8, !alias.scope !157
  %194 = getelementptr inbounds i32, i32* %192, i64 4
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %195, align 8, !alias.scope !157
  %196 = add i64 %190, 8
  %197 = add i64 %191, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %189, !llvm.loop !161

199:                                              ; preds = %189, %186
  %200 = icmp eq i64 %133, %130
  br i1 %200, label %208, label %201

201:                                              ; preds = %199, %128
  %202 = phi i64 [ 0, %128 ], [ %133, %199 ]
  br label %203

203:                                              ; preds = %201, %203
  %204 = phi i64 [ %206, %203 ], [ %202, %201 ]
  %205 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %204
  store i32 1, i32* %205, align 4, !alias.scope !157
  %206 = add nuw nsw i64 %204, 1
  %207 = icmp eq i64 %206, %130
  br i1 %207, label %208, label %203, !llvm.loop !162

208:                                              ; preds = %203, %199, %124
  %209 = bitcast %union.anon* %127 to i32*
  %210 = sext i32 %125 to i64
  %211 = getelementptr inbounds i32, i32* %209, i64 %210
  %212 = bitcast i32* %211 to i8*
  %213 = icmp sgt i32 %121, 5
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %215 = getelementptr inbounds %union.anon, %union.anon* %214, i64 0, i32 0
  %216 = load i32*, i32** %215, align 8, !noalias !157
  %217 = bitcast %union.anon* %214 to i32*
  %218 = select i1 %213, i32* %216, i32* %217
  %219 = bitcast i32* %218 to i8*
  %220 = sext i32 %121 to i64
  %221 = shl nsw i64 %220, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %219, i64 %221, i1 false) #9
  %222 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %222) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %222, i8 -86, i64 32, i1 false)
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %223, align 8, !alias.scope !163
  %224 = load i32, i32* %14, align 8, !noalias !163
  %225 = icmp sgt i32 %224, 4
  br i1 %225, label %226, label %227

226:                                              ; preds = %208
  tail call void @abort() #11, !noalias !163
  unreachable

227:                                              ; preds = %208
  store i32 4, i32* %223, align 8, !alias.scope !163
  %228 = sub i32 4, %224
  %229 = icmp sgt i32 %228, 0
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  br i1 %229, label %231, label %311

231:                                              ; preds = %227
  %232 = bitcast %union.anon* %230 to [5 x i32]*
  %233 = zext i32 %228 to i64
  %234 = icmp ult i32 %228, 8
  br i1 %234, label %304, label %235

235:                                              ; preds = %231
  %236 = and i64 %233, 4294967288
  %237 = add nsw i64 %236, -8
  %238 = lshr exact i64 %237, 3
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 7
  %241 = icmp ult i64 %237, 56
  br i1 %241, label %289, label %242

242:                                              ; preds = %235
  %243 = sub nsw i64 %239, %240
  br label %244

244:                                              ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %286, %244 ]
  %246 = phi i64 [ %243, %242 ], [ %287, %244 ]
  %247 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %245
  %248 = bitcast i32* %247 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %248, align 8, !alias.scope !163
  %249 = getelementptr inbounds i32, i32* %247, i64 4
  %250 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %250, align 8, !alias.scope !163
  %251 = or i64 %245, 8
  %252 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %251
  %253 = bitcast i32* %252 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %253, align 8, !alias.scope !163
  %254 = getelementptr inbounds i32, i32* %252, i64 4
  %255 = bitcast i32* %254 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %255, align 8, !alias.scope !163
  %256 = or i64 %245, 16
  %257 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %256
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %258, align 8, !alias.scope !163
  %259 = getelementptr inbounds i32, i32* %257, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %260, align 8, !alias.scope !163
  %261 = or i64 %245, 24
  %262 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %261
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %263, align 8, !alias.scope !163
  %264 = getelementptr inbounds i32, i32* %262, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %265, align 8, !alias.scope !163
  %266 = or i64 %245, 32
  %267 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %266
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %268, align 8, !alias.scope !163
  %269 = getelementptr inbounds i32, i32* %267, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %270, align 8, !alias.scope !163
  %271 = or i64 %245, 40
  %272 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %271
  %273 = bitcast i32* %272 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %273, align 8, !alias.scope !163
  %274 = getelementptr inbounds i32, i32* %272, i64 4
  %275 = bitcast i32* %274 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %275, align 8, !alias.scope !163
  %276 = or i64 %245, 48
  %277 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %276
  %278 = bitcast i32* %277 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %278, align 8, !alias.scope !163
  %279 = getelementptr inbounds i32, i32* %277, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %280, align 8, !alias.scope !163
  %281 = or i64 %245, 56
  %282 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %281
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %283, align 8, !alias.scope !163
  %284 = getelementptr inbounds i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %285, align 8, !alias.scope !163
  %286 = add i64 %245, 64
  %287 = add i64 %246, -8
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %244, !llvm.loop !166

289:                                              ; preds = %244, %235
  %290 = phi i64 [ 0, %235 ], [ %286, %244 ]
  %291 = icmp eq i64 %240, 0
  br i1 %291, label %302, label %292

292:                                              ; preds = %289, %292
  %293 = phi i64 [ %299, %292 ], [ %290, %289 ]
  %294 = phi i64 [ %300, %292 ], [ %240, %289 ]
  %295 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %293
  %296 = bitcast i32* %295 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %296, align 8, !alias.scope !163
  %297 = getelementptr inbounds i32, i32* %295, i64 4
  %298 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %298, align 8, !alias.scope !163
  %299 = add i64 %293, 8
  %300 = add i64 %294, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %292, !llvm.loop !167

302:                                              ; preds = %292, %289
  %303 = icmp eq i64 %236, %233
  br i1 %303, label %311, label %304

304:                                              ; preds = %302, %231
  %305 = phi i64 [ 0, %231 ], [ %236, %302 ]
  br label %306

306:                                              ; preds = %304, %306
  %307 = phi i64 [ %309, %306 ], [ %305, %304 ]
  %308 = getelementptr inbounds [5 x i32], [5 x i32]* %232, i64 0, i64 %307
  store i32 1, i32* %308, align 4, !alias.scope !163
  %309 = add nuw nsw i64 %307, 1
  %310 = icmp eq i64 %309, %233
  br i1 %310, label %311, label %306, !llvm.loop !168

311:                                              ; preds = %306, %302, %227
  %312 = getelementptr inbounds %union.anon, %union.anon* %230, i64 0, i32 0
  %313 = bitcast %union.anon* %230 to i32*
  %314 = sext i32 %228 to i64
  %315 = getelementptr inbounds i32, i32* %313, i64 %314
  %316 = bitcast i32* %315 to i8*
  %317 = icmp sgt i32 %224, 5
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %319 = getelementptr inbounds %union.anon, %union.anon* %318, i64 0, i32 0
  %320 = load i32*, i32** %319, align 8, !noalias !163
  %321 = bitcast %union.anon* %318 to i32*
  %322 = select i1 %317, i32* %320, i32* %321
  %323 = bitcast i32* %322 to i8*
  %324 = sext i32 %224 to i64
  %325 = shl nsw i64 %324, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %316, i8* align 4 %323, i64 %325, i1 false) #9
  %326 = load i32, i32* %16, align 8
  %327 = icmp sgt i32 %326, 5
  %328 = load i32, i32* %223, align 8
  %329 = icmp sgt i32 %328, 5
  %330 = load i32*, i32** %105, align 8
  %331 = select i1 %327, i32* %330, i32* %106
  %332 = load i32, i32* %331, align 4
  %333 = load i32*, i32** %312, align 8
  %334 = select i1 %329, i32* %333, i32* %313
  %335 = load i32, i32* %334, align 4
  %336 = icmp slt i32 %335, %332
  %337 = select i1 %336, i32 %335, i32 %332
  %338 = getelementptr inbounds i32, i32* %330, i64 1
  %339 = getelementptr inbounds i32, i32* %330, i64 2
  %340 = bitcast %union.anon* %23 to [5 x i32]*
  %341 = getelementptr inbounds [5 x i32], [5 x i32]* %340, i64 0, i64 1
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %343 = bitcast [16 x i8]* %342 to i32*
  %344 = select i1 %327, i32* %338, i32* %341
  %345 = select i1 %327, i32* %339, i32* %343
  %346 = load i32, i32* %344, align 4
  %347 = load i32, i32* %345, align 4
  %348 = getelementptr inbounds i32, i32* %330, i64 3
  %349 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %350 = bitcast i8* %349 to i32*
  %351 = select i1 %327, i32* %348, i32* %350
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds i32, i32* %333, i64 3
  %354 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1, i64 4
  %355 = bitcast i8* %354 to i32*
  %356 = select i1 %329, i32* %353, i32* %355
  %357 = load i32, i32* %356, align 4
  %358 = icmp slt i32 %357, %352
  %359 = select i1 %358, i32 %357, i32 %352
  %360 = load i32, i32* %120, align 8
  %361 = icmp sgt i32 %360, 5
  %362 = load i32, i32* %4, align 4
  %363 = getelementptr inbounds i32, i32* %4, i64 1
  %364 = load i32, i32* %363, align 4
  %365 = shl i32 %346, 10
  %366 = sdiv i32 %362, 2
  %367 = add nsw i32 %366, %365
  %368 = sdiv i32 %367, %362
  %369 = shl i32 %347, 10
  %370 = sdiv i32 %364, 2
  %371 = add nsw i32 %370, %369
  %372 = sdiv i32 %371, %364
  %373 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %0, i64 0, i32 0
  %374 = load i8, i8* %373, align 1, !range !2
  %375 = icmp ne i8 %374, 0
  %376 = icmp sgt i32 %362, 1
  %377 = and i1 %376, %375
  br i1 %377, label %378, label %384

378:                                              ; preds = %311
  %379 = add i32 %365, -1024
  %380 = add nsw i32 %362, -1
  %381 = sdiv i32 %380, 2
  %382 = add nsw i32 %379, %381
  %383 = sdiv i32 %382, %380
  br label %384

384:                                              ; preds = %378, %311
  %385 = phi i32 [ %383, %378 ], [ %368, %311 ]
  %386 = icmp sgt i32 %364, 1
  %387 = and i1 %386, %375
  br i1 %387, label %388, label %394

388:                                              ; preds = %384
  %389 = add i32 %369, -1024
  %390 = add nsw i32 %364, -1
  %391 = sdiv i32 %390, 2
  %392 = add nsw i32 %389, %391
  %393 = sdiv i32 %392, %390
  br label %394

394:                                              ; preds = %388, %384
  %395 = phi i32 [ %393, %388 ], [ %372, %384 ]
  %396 = icmp sgt i32 %337, 0
  br i1 %396, label %397, label %430

397:                                              ; preds = %394
  %398 = icmp sgt i32 %362, 0
  %399 = sdiv i32 %385, 2
  %400 = add nsw i32 %399, -512
  %401 = add nsw i32 %346, -1
  %402 = icmp sgt i32 %364, 0
  %403 = sdiv i32 %395, 2
  %404 = add nsw i32 %403, -512
  %405 = add nsw i32 %347, -1
  %406 = icmp sgt i32 %359, 0
  %407 = getelementptr inbounds i32, i32* %106, i64 1
  %408 = load i32, i32* %407, align 4
  %409 = load i32, i32* %343, align 8
  %410 = load i32, i32* %350, align 4
  %411 = getelementptr inbounds i32, i32* %313, i64 1
  %412 = load i32, i32* %411, align 4
  %413 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 1
  %414 = bitcast [16 x i8]* %413 to i32*
  %415 = load i32, i32* %414, align 8
  %416 = load i32, i32* %355, align 4
  %417 = sext i32 %359 to i64
  %418 = sext i32 %416 to i64
  %419 = sext i32 %415 to i64
  %420 = sext i32 %412 to i64
  %421 = sext i32 %337 to i64
  %422 = zext i32 %362 to i64
  %423 = zext i32 %364 to i64
  br label %424

424:                                              ; preds = %397, %450
  %425 = phi i64 [ 0, %397 ], [ %451, %450 ]
  br i1 %398, label %426, label %450

426:                                              ; preds = %424
  %427 = mul nsw i64 %425, %420
  %428 = trunc i64 %425 to i32
  %429 = mul i32 %408, %428
  br label %453

430:                                              ; preds = %450, %394
  %431 = xor i1 %329, true
  %432 = icmp eq i32* %333, null
  %433 = or i1 %432, %431
  br i1 %433, label %436, label %434

434:                                              ; preds = %430
  %435 = bitcast i32* %333 to i8*
  tail call void @_ZdaPv(i8* %435) #10
  br label %436

436:                                              ; preds = %430, %434
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %222) #9
  br i1 %361, label %437, label %443

437:                                              ; preds = %436
  %438 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %439 = load i32*, i32** %438, align 8
  %440 = icmp eq i32* %439, null
  br i1 %440, label %443, label %441

441:                                              ; preds = %437
  %442 = bitcast i32* %439 to i8*
  tail call void @_ZdaPv(i8* %442) #10
  br label %443

443:                                              ; preds = %436, %437, %441
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #9
  %444 = xor i1 %327, true
  %445 = icmp eq i32* %330, null
  %446 = or i1 %445, %444
  br i1 %446, label %449, label %447

447:                                              ; preds = %443
  %448 = bitcast i32* %330 to i8*
  tail call void @_ZdaPv(i8* %448) #10
  br label %449

449:                                              ; preds = %443, %447
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #9
  ret void

450:                                              ; preds = %480, %424
  %451 = add nuw nsw i64 %425, 1
  %452 = icmp slt i64 %451, %421
  br i1 %452, label %424, label %430

453:                                              ; preds = %480, %426
  %454 = phi i64 [ 0, %426 ], [ %481, %480 ]
  %455 = load i8, i8* %11, align 1, !range !2
  %456 = icmp eq i8 %455, 0
  %457 = select i1 %456, i32 0, i32 %400
  %458 = trunc i64 %454 to i32
  %459 = mul i32 %385, %458
  %460 = add i32 %459, %457
  %461 = sdiv i32 %460, 1024
  %462 = icmp sgt i32 %461, 0
  %463 = select i1 %462, i32 %461, i32 0
  %464 = add nsw i32 %461, 1
  br i1 %402, label %465, label %480

465:                                              ; preds = %453
  %466 = icmp slt i32 %401, %464
  %467 = select i1 %466, i32 %401, i32 %464
  %468 = add nsw i32 %429, %463
  %469 = mul nsw i32 %468, %409
  %470 = shl nsw i32 %463, 10
  %471 = sub i32 1024, %460
  %472 = add i32 %471, %470
  %473 = sext i32 %472 to i64
  %474 = add nsw i32 %429, %467
  %475 = mul nsw i32 %474, %409
  %476 = sub nsw i32 %460, %470
  %477 = sext i32 %476 to i64
  %478 = add nsw i64 %427, %454
  %479 = mul nsw i64 %478, %419
  br label %483

480:                                              ; preds = %518, %453
  %481 = add nuw nsw i64 %454, 1
  %482 = icmp eq i64 %481, %422
  br i1 %482, label %450, label %453

483:                                              ; preds = %521, %465
  %484 = phi i8 [ %455, %465 ], [ %522, %521 ]
  %485 = phi i64 [ 0, %465 ], [ %519, %521 ]
  %486 = icmp eq i8 %484, 0
  %487 = select i1 %486, i32 0, i32 %404
  %488 = trunc i64 %485 to i32
  %489 = mul i32 %395, %488
  %490 = add i32 %489, %487
  %491 = sdiv i32 %490, 1024
  %492 = icmp sgt i32 %491, 0
  %493 = select i1 %492, i32 %491, i32 0
  %494 = add nsw i32 %491, 1
  %495 = icmp slt i32 %405, %494
  %496 = select i1 %495, i32 %405, i32 %494
  br i1 %406, label %497, label %518

497:                                              ; preds = %483
  %498 = add nsw i32 %469, %493
  %499 = mul nsw i32 %498, %410
  %500 = shl nsw i32 %493, 10
  %501 = sub i32 1024, %490
  %502 = add i32 %501, %500
  %503 = sext i32 %502 to i64
  %504 = add nsw i32 %475, %493
  %505 = mul nsw i32 %504, %410
  %506 = add nsw i32 %469, %496
  %507 = mul nsw i32 %506, %410
  %508 = sub nsw i32 %490, %500
  %509 = sext i32 %508 to i64
  %510 = add nsw i32 %475, %496
  %511 = mul nsw i32 %510, %410
  %512 = add nsw i64 %479, %485
  %513 = mul nsw i64 %512, %418
  %514 = sext i32 %511 to i64
  %515 = sext i32 %507 to i64
  %516 = sext i32 %505 to i64
  %517 = sext i32 %499 to i64
  br label %523

518:                                              ; preds = %523, %483
  %519 = add nuw nsw i64 %485, 1
  %520 = icmp eq i64 %519, %423
  br i1 %520, label %480, label %521

521:                                              ; preds = %518
  %522 = load i8, i8* %11, align 1, !range !2
  br label %483

523:                                              ; preds = %497, %523
  %524 = phi i64 [ 0, %497 ], [ %555, %523 ]
  %525 = add nsw i64 %524, %517
  %526 = getelementptr inbounds i8, i8* %2, i64 %525
  %527 = load i8, i8* %526, align 1
  %528 = sext i8 %527 to i64
  %529 = mul nsw i64 %528, %473
  %530 = add nsw i64 %524, %516
  %531 = getelementptr inbounds i8, i8* %2, i64 %530
  %532 = load i8, i8* %531, align 1
  %533 = sext i8 %532 to i64
  %534 = mul nsw i64 %533, %477
  %535 = add nsw i64 %524, %515
  %536 = getelementptr inbounds i8, i8* %2, i64 %535
  %537 = load i8, i8* %536, align 1
  %538 = sext i8 %537 to i64
  %539 = mul nsw i64 %538, %473
  %540 = add nsw i64 %524, %514
  %541 = getelementptr inbounds i8, i8* %2, i64 %540
  %542 = load i8, i8* %541, align 1
  %543 = sext i8 %542 to i64
  %544 = mul nsw i64 %543, %477
  %545 = add nsw i64 %534, %529
  %546 = mul i64 %545, %503
  %547 = add nsw i64 %544, %539
  %548 = mul i64 %547, %509
  %549 = add i64 %546, 524288
  %550 = add i64 %549, %548
  %551 = sdiv i64 %550, 1048576
  %552 = trunc i64 %551 to i8
  %553 = add nsw i64 %513, %524
  %554 = getelementptr inbounds i8, i8* %6, i64 %553
  store i8 %552, i8* %554, align 1
  %555 = add nuw nsw i64 %524, 1
  %556 = icmp slt i64 %555, %417
  br i1 %556, label %523, label %518
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKfS6_PKiS6_Pf(%"struct.tflite::ResizeBilinearParams"* dereferenceable(2), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #4 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %14, align 8, !alias.scope !169
  %15 = load i32, i32* %11, align 8, !noalias !169
  %16 = icmp sgt i32 %15, 4
  br i1 %16, label %17, label %18

17:                                               ; preds = %7
  tail call void @abort() #11, !noalias !169
  unreachable

18:                                               ; preds = %7
  store i32 4, i32* %14, align 8, !alias.scope !169
  %19 = sub i32 4, %15
  %20 = icmp sgt i32 %19, 0
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %20, label %22, label %102

22:                                               ; preds = %18
  %23 = bitcast %union.anon* %21 to [5 x i32]*
  %24 = zext i32 %19 to i64
  %25 = icmp ult i32 %19, 8
  br i1 %25, label %95, label %26

26:                                               ; preds = %22
  %27 = and i64 %24, 4294967288
  %28 = add nsw i64 %27, -8
  %29 = lshr exact i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 7
  %32 = icmp ult i64 %28, 56
  br i1 %32, label %80, label %33

33:                                               ; preds = %26
  %34 = sub nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %77, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %78, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %36
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !169
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !169
  %42 = or i64 %36, 8
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !169
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !169
  %47 = or i64 %36, 16
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !169
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !169
  %52 = or i64 %36, 24
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !169
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !169
  %57 = or i64 %36, 32
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !169
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !169
  %62 = or i64 %36, 40
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !169
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !169
  %67 = or i64 %36, 48
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !169
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !169
  %72 = or i64 %36, 56
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !169
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !169
  %77 = add i64 %36, 64
  %78 = add i64 %37, -8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %35, !llvm.loop !172

80:                                               ; preds = %35, %26
  %81 = phi i64 [ 0, %26 ], [ %77, %35 ]
  %82 = icmp eq i64 %31, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %90, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %91, %83 ], [ %31, %80 ]
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !169
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !169
  %90 = add i64 %84, 8
  %91 = add i64 %85, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %83, !llvm.loop !173

93:                                               ; preds = %83, %80
  %94 = icmp eq i64 %27, %24
  br i1 %94, label %102, label %95

95:                                               ; preds = %93, %22
  %96 = phi i64 [ 0, %22 ], [ %27, %93 ]
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %100, %97 ], [ %96, %95 ]
  %99 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %98
  store i32 1, i32* %99, align 4, !alias.scope !169
  %100 = add nuw nsw i64 %98, 1
  %101 = icmp eq i64 %100, %24
  br i1 %101, label %102, label %97, !llvm.loop !174

102:                                              ; preds = %97, %93, %18
  %103 = getelementptr inbounds %union.anon, %union.anon* %21, i64 0, i32 0
  %104 = bitcast %union.anon* %21 to i32*
  %105 = sext i32 %19 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %15, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !169
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %15 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #9
  %117 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 32, i1 false)
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %118, align 8, !alias.scope !175
  %119 = load i32, i32* %12, align 8, !noalias !175
  %120 = icmp sgt i32 %119, 4
  br i1 %120, label %121, label %122

121:                                              ; preds = %102
  tail call void @abort() #11, !noalias !175
  unreachable

122:                                              ; preds = %102
  store i32 4, i32* %118, align 8, !alias.scope !175
  %123 = sub i32 4, %119
  %124 = icmp sgt i32 %123, 0
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  br i1 %124, label %126, label %206

126:                                              ; preds = %122
  %127 = bitcast %union.anon* %125 to [5 x i32]*
  %128 = zext i32 %123 to i64
  %129 = icmp ult i32 %123, 8
  br i1 %129, label %199, label %130

130:                                              ; preds = %126
  %131 = and i64 %128, 4294967288
  %132 = add nsw i64 %131, -8
  %133 = lshr exact i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 7
  %136 = icmp ult i64 %132, 56
  br i1 %136, label %184, label %137

137:                                              ; preds = %130
  %138 = sub nsw i64 %134, %135
  br label %139

139:                                              ; preds = %139, %137
  %140 = phi i64 [ 0, %137 ], [ %181, %139 ]
  %141 = phi i64 [ %138, %137 ], [ %182, %139 ]
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %140
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %143, align 8, !alias.scope !175
  %144 = getelementptr inbounds i32, i32* %142, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !175
  %146 = or i64 %140, 8
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %146
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !175
  %149 = getelementptr inbounds i32, i32* %147, i64 4
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !175
  %151 = or i64 %140, 16
  %152 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %151
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !175
  %154 = getelementptr inbounds i32, i32* %152, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !175
  %156 = or i64 %140, 24
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %156
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !175
  %159 = getelementptr inbounds i32, i32* %157, i64 4
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !175
  %161 = or i64 %140, 32
  %162 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %161
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !175
  %164 = getelementptr inbounds i32, i32* %162, i64 4
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !175
  %166 = or i64 %140, 40
  %167 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %166
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !175
  %169 = getelementptr inbounds i32, i32* %167, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !175
  %171 = or i64 %140, 48
  %172 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !175
  %174 = getelementptr inbounds i32, i32* %172, i64 4
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !175
  %176 = or i64 %140, 56
  %177 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %176
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 8, !alias.scope !175
  %179 = getelementptr inbounds i32, i32* %177, i64 4
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %180, align 8, !alias.scope !175
  %181 = add i64 %140, 64
  %182 = add i64 %141, -8
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %139, !llvm.loop !178

184:                                              ; preds = %139, %130
  %185 = phi i64 [ 0, %130 ], [ %181, %139 ]
  %186 = icmp eq i64 %135, 0
  br i1 %186, label %197, label %187

187:                                              ; preds = %184, %187
  %188 = phi i64 [ %194, %187 ], [ %185, %184 ]
  %189 = phi i64 [ %195, %187 ], [ %135, %184 ]
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %188
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %191, align 8, !alias.scope !175
  %192 = getelementptr inbounds i32, i32* %190, i64 4
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %193, align 8, !alias.scope !175
  %194 = add i64 %188, 8
  %195 = add i64 %189, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %187, !llvm.loop !179

197:                                              ; preds = %187, %184
  %198 = icmp eq i64 %131, %128
  br i1 %198, label %206, label %199

199:                                              ; preds = %197, %126
  %200 = phi i64 [ 0, %126 ], [ %131, %197 ]
  br label %201

201:                                              ; preds = %199, %201
  %202 = phi i64 [ %204, %201 ], [ %200, %199 ]
  %203 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %202
  store i32 1, i32* %203, align 4, !alias.scope !175
  %204 = add nuw nsw i64 %202, 1
  %205 = icmp eq i64 %204, %128
  br i1 %205, label %206, label %201, !llvm.loop !180

206:                                              ; preds = %201, %197, %122
  %207 = getelementptr inbounds %union.anon, %union.anon* %125, i64 0, i32 0
  %208 = bitcast %union.anon* %125 to i32*
  %209 = sext i32 %123 to i64
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  %211 = bitcast i32* %210 to i8*
  %212 = icmp sgt i32 %119, 5
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %214 = getelementptr inbounds %union.anon, %union.anon* %213, i64 0, i32 0
  %215 = load i32*, i32** %214, align 8, !noalias !175
  %216 = bitcast %union.anon* %213 to i32*
  %217 = select i1 %212, i32* %215, i32* %216
  %218 = bitcast i32* %217 to i8*
  %219 = sext i32 %119 to i64
  %220 = shl nsw i64 %219, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %218, i64 %220, i1 false) #9
  %221 = load i32, i32* %14, align 8
  %222 = icmp sgt i32 %221, 5
  %223 = load i32, i32* %118, align 8
  %224 = icmp sgt i32 %223, 5
  %225 = load i32*, i32** %103, align 8
  %226 = select i1 %222, i32* %225, i32* %104
  %227 = load i32, i32* %226, align 4
  %228 = load i32*, i32** %207, align 8
  %229 = select i1 %224, i32* %228, i32* %208
  %230 = load i32, i32* %229, align 4
  %231 = icmp slt i32 %230, %227
  %232 = select i1 %231, i32 %230, i32 %227
  %233 = getelementptr inbounds i32, i32* %225, i64 1
  %234 = getelementptr inbounds i32, i32* %225, i64 2
  %235 = bitcast %union.anon* %21 to [5 x i32]*
  %236 = getelementptr inbounds [5 x i32], [5 x i32]* %235, i64 0, i64 1
  %237 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %238 = bitcast [16 x i8]* %237 to i32*
  %239 = select i1 %222, i32* %233, i32* %236
  %240 = select i1 %222, i32* %234, i32* %238
  %241 = load i32, i32* %239, align 4
  %242 = load i32, i32* %240, align 4
  %243 = getelementptr inbounds i32, i32* %225, i64 3
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %245 = bitcast i8* %244 to i32*
  %246 = select i1 %222, i32* %243, i32* %245
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds i32, i32* %228, i64 3
  %249 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1, i64 4
  %250 = bitcast i8* %249 to i32*
  %251 = select i1 %224, i32* %248, i32* %250
  %252 = load i32, i32* %251, align 4
  %253 = icmp slt i32 %252, %247
  %254 = select i1 %253, i32 %252, i32 %247
  %255 = load i32, i32* %4, align 4
  %256 = getelementptr inbounds i32, i32* %4, i64 1
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %0, i64 0, i32 0
  %259 = load i8, i8* %258, align 1, !range !2
  %260 = load i8, i8* %10, align 1
  %261 = or i8 %260, %259
  %262 = icmp eq i8 %261, 0
  %263 = shl nsw i32 %241, 1
  %264 = icmp eq i32 %255, %263
  %265 = and i1 %264, %262
  %266 = shl nsw i32 %242, 1
  %267 = icmp eq i32 %257, %266
  %268 = and i1 %267, %265
  br i1 %268, label %269, label %375

269:                                              ; preds = %206
  %270 = icmp sgt i32 %232, 0
  br i1 %270, label %271, label %405

271:                                              ; preds = %269
  %272 = add i32 %255, -2
  %273 = icmp slt i32 %272, 0
  %274 = add i32 %257, -2
  %275 = icmp slt i32 %274, 0
  %276 = add nsw i32 %242, -1
  %277 = add nsw i32 %241, -1
  %278 = getelementptr inbounds i32, i32* %228, i64 2
  %279 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %280 = bitcast [16 x i8]* %279 to i32*
  %281 = select i1 %224, i32* %278, i32* %280
  %282 = icmp sgt i32 %254, 0
  %283 = getelementptr inbounds i32, i32* %104, i64 1
  %284 = getelementptr inbounds i32, i32* %208, i64 1
  %285 = zext i32 %254 to i64
  %286 = sext i32 %254 to i64
  %287 = lshr i32 %274, 1
  %288 = lshr i32 %272, 1
  br label %289

289:                                              ; preds = %300, %271
  %290 = phi i32 [ 0, %271 ], [ %301, %300 ]
  br i1 %273, label %300, label %291

291:                                              ; preds = %289, %303
  %292 = phi i32 [ %304, %303 ], [ 0, %289 ]
  %293 = phi i32 [ %294, %303 ], [ 0, %289 ]
  %294 = add nuw nsw i32 %293, 1
  br i1 %275, label %303, label %295

295:                                              ; preds = %291
  %296 = icmp slt i32 %277, %294
  %297 = select i1 %296, i32 %277, i32 %294
  %298 = sub nsw i32 %297, %293
  %299 = mul nsw i32 %298, %254
  br label %306

300:                                              ; preds = %303, %289
  %301 = add nuw nsw i32 %290, 1
  %302 = icmp eq i32 %301, %232
  br i1 %302, label %405, label %289

303:                                              ; preds = %372, %291
  %304 = add nuw nsw i32 %292, 2
  %305 = icmp eq i32 %293, %288
  br i1 %305, label %300, label %291

306:                                              ; preds = %372, %295
  %307 = phi i32 [ 0, %295 ], [ %373, %372 ]
  %308 = phi i32 [ 0, %295 ], [ %309, %372 ]
  %309 = add nuw nsw i32 %308, 1
  br i1 %282, label %310, label %372

310:                                              ; preds = %306
  %311 = load i32, i32* %281, align 4
  %312 = mul nsw i32 %311, %254
  %313 = load i32, i32* %240, align 4
  %314 = mul nsw i32 %299, %313
  %315 = icmp slt i32 %276, %309
  %316 = select i1 %315, i32 %276, i32 %309
  %317 = sub nsw i32 %316, %308
  %318 = mul nsw i32 %317, %254
  %319 = load i32, i32* %283, align 4
  %320 = mul nsw i32 %319, %290
  %321 = add nsw i32 %320, %293
  %322 = load i32, i32* %238, align 8
  %323 = mul nsw i32 %321, %322
  %324 = add nsw i32 %323, %308
  %325 = load i32, i32* %245, align 4
  %326 = mul nsw i32 %324, %325
  %327 = load i32, i32* %284, align 4
  %328 = mul nsw i32 %327, %290
  %329 = add nsw i32 %328, %292
  %330 = load i32, i32* %280, align 8
  %331 = mul nsw i32 %329, %330
  %332 = add nsw i32 %331, %307
  %333 = load i32, i32* %250, align 4
  %334 = mul nsw i32 %332, %333
  %335 = sext i32 %326 to i64
  %336 = sext i32 %318 to i64
  %337 = sext i32 %314 to i64
  %338 = sext i32 %334 to i64
  %339 = sext i32 %312 to i64
  br label %340

340:                                              ; preds = %340, %310
  %341 = phi i64 [ %370, %340 ], [ 0, %310 ]
  %342 = add nsw i64 %341, %335
  %343 = getelementptr inbounds float, float* %2, i64 %342
  %344 = load float, float* %343, align 4
  %345 = add nsw i64 %342, %336
  %346 = getelementptr inbounds float, float* %2, i64 %345
  %347 = load float, float* %346, align 4
  %348 = add nsw i64 %342, %337
  %349 = getelementptr inbounds float, float* %2, i64 %348
  %350 = load float, float* %349, align 4
  %351 = add nsw i64 %345, %337
  %352 = getelementptr inbounds float, float* %2, i64 %351
  %353 = load float, float* %352, align 4
  %354 = add nsw i64 %341, %338
  %355 = getelementptr inbounds float, float* %6, i64 %354
  store float %344, float* %355, align 4
  %356 = fadd float %344, %347
  %357 = fmul float %356, 5.000000e-01
  %358 = add nsw i64 %354, %286
  %359 = getelementptr inbounds float, float* %6, i64 %358
  store float %357, float* %359, align 4
  %360 = fadd float %344, %350
  %361 = fmul float %360, 5.000000e-01
  %362 = add nsw i64 %354, %339
  %363 = getelementptr inbounds float, float* %6, i64 %362
  store float %361, float* %363, align 4
  %364 = fadd float %347, %353
  %365 = fmul float %364, 5.000000e-01
  %366 = fadd float %361, %365
  %367 = fmul float %366, 5.000000e-01
  %368 = add nsw i64 %358, %339
  %369 = getelementptr inbounds float, float* %6, i64 %368
  store float %367, float* %369, align 4
  %370 = add nuw nsw i64 %341, 1
  %371 = icmp eq i64 %370, %285
  br i1 %371, label %372, label %340

372:                                              ; preds = %340, %306
  %373 = add nuw nsw i32 %307, 2
  %374 = icmp eq i32 %308, %287
  br i1 %374, label %303, label %306

375:                                              ; preds = %206
  %376 = sitofp i32 %241 to float
  %377 = sitofp i32 %255 to float
  %378 = fdiv float %376, %377
  %379 = sitofp i32 %242 to float
  %380 = sitofp i32 %257 to float
  %381 = fdiv float %379, %380
  %382 = icmp ne i8 %259, 0
  %383 = icmp sgt i32 %255, 1
  %384 = and i1 %383, %382
  br i1 %384, label %385, label %391

385:                                              ; preds = %375
  %386 = add nsw i32 %241, -1
  %387 = sitofp i32 %386 to float
  %388 = add nsw i32 %255, -1
  %389 = sitofp i32 %388 to float
  %390 = fdiv float %387, %389
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi float [ %390, %385 ], [ %378, %375 ]
  %393 = icmp sgt i32 %257, 1
  %394 = and i1 %393, %382
  br i1 %394, label %395, label %401

395:                                              ; preds = %391
  %396 = add nsw i32 %242, -1
  %397 = sitofp i32 %396 to float
  %398 = add nsw i32 %257, -1
  %399 = sitofp i32 %398 to float
  %400 = fdiv float %397, %399
  br label %401

401:                                              ; preds = %395, %391
  %402 = phi float [ %400, %395 ], [ %381, %391 ]
  %403 = icmp ne i8 %260, 0
  call void @_ZN6tflite13optimized_ops21ResizeBilinearGenericEiiiiiiffRKNS_12RuntimeShapeEPKfS3_Pfb(i32 %232, i32 %241, i32 %242, i32 %254, i32 %255, i32 %257, float %392, float %402, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, float* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, float* %6, i1 zeroext %403)
  %404 = load i32, i32* %118, align 8
  br label %405

405:                                              ; preds = %300, %269, %401
  %406 = phi i32 [ %223, %269 ], [ %404, %401 ], [ %223, %300 ]
  %407 = icmp sgt i32 %406, 5
  br i1 %407, label %408, label %414

408:                                              ; preds = %405
  %409 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %410 = load i32*, i32** %409, align 8
  %411 = icmp eq i32* %410, null
  br i1 %411, label %414, label %412

412:                                              ; preds = %408
  %413 = bitcast i32* %410 to i8*
  call void @_ZdaPv(i8* %413) #10
  br label %414

414:                                              ; preds = %405, %408, %412
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #9
  %415 = load i32, i32* %14, align 8
  %416 = icmp sgt i32 %415, 5
  br i1 %416, label %417, label %423

417:                                              ; preds = %414
  %418 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %419 = load i32*, i32** %418, align 8
  %420 = icmp eq i32* %419, null
  br i1 %420, label %423, label %421

421:                                              ; preds = %417
  %422 = bitcast i32* %419 to i8*
  call void @_ZdaPv(i8* %422) #10
  br label %423

423:                                              ; preds = %414, %417, %421
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops14ResizeBilinearERKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKhS6_PKiS6_Ph(%"struct.tflite::ResizeBilinearParams"* dereferenceable(2), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %14, align 8, !alias.scope !181
  %15 = load i32, i32* %11, align 8, !noalias !181
  %16 = icmp sgt i32 %15, 4
  br i1 %16, label %17, label %18

17:                                               ; preds = %7
  tail call void @abort() #11, !noalias !181
  unreachable

18:                                               ; preds = %7
  store i32 4, i32* %14, align 8, !alias.scope !181
  %19 = sub i32 4, %15
  %20 = icmp sgt i32 %19, 0
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %20, label %22, label %102

22:                                               ; preds = %18
  %23 = bitcast %union.anon* %21 to [5 x i32]*
  %24 = zext i32 %19 to i64
  %25 = icmp ult i32 %19, 8
  br i1 %25, label %95, label %26

26:                                               ; preds = %22
  %27 = and i64 %24, 4294967288
  %28 = add nsw i64 %27, -8
  %29 = lshr exact i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 7
  %32 = icmp ult i64 %28, 56
  br i1 %32, label %80, label %33

33:                                               ; preds = %26
  %34 = sub nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %77, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %78, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %36
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !181
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !181
  %42 = or i64 %36, 8
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !181
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !181
  %47 = or i64 %36, 16
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !181
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !181
  %52 = or i64 %36, 24
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !181
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !181
  %57 = or i64 %36, 32
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !181
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !181
  %62 = or i64 %36, 40
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !181
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !181
  %67 = or i64 %36, 48
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !181
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !181
  %72 = or i64 %36, 56
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !181
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !181
  %77 = add i64 %36, 64
  %78 = add i64 %37, -8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %35, !llvm.loop !184

80:                                               ; preds = %35, %26
  %81 = phi i64 [ 0, %26 ], [ %77, %35 ]
  %82 = icmp eq i64 %31, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %90, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %91, %83 ], [ %31, %80 ]
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !181
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !181
  %90 = add i64 %84, 8
  %91 = add i64 %85, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %83, !llvm.loop !185

93:                                               ; preds = %83, %80
  %94 = icmp eq i64 %27, %24
  br i1 %94, label %102, label %95

95:                                               ; preds = %93, %22
  %96 = phi i64 [ 0, %22 ], [ %27, %93 ]
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %100, %97 ], [ %96, %95 ]
  %99 = getelementptr inbounds [5 x i32], [5 x i32]* %23, i64 0, i64 %98
  store i32 1, i32* %99, align 4, !alias.scope !181
  %100 = add nuw nsw i64 %98, 1
  %101 = icmp eq i64 %100, %24
  br i1 %101, label %102, label %97, !llvm.loop !186

102:                                              ; preds = %97, %93, %18
  %103 = getelementptr inbounds %union.anon, %union.anon* %21, i64 0, i32 0
  %104 = bitcast %union.anon* %21 to i32*
  %105 = sext i32 %19 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %15, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !181
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %15 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #9
  %117 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 32, i1 false)
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %118, align 8, !alias.scope !187
  %119 = load i32, i32* %12, align 8, !noalias !187
  %120 = icmp sgt i32 %119, 4
  br i1 %120, label %121, label %122

121:                                              ; preds = %102
  tail call void @abort() #11, !noalias !187
  unreachable

122:                                              ; preds = %102
  store i32 4, i32* %118, align 8, !alias.scope !187
  %123 = sub i32 4, %119
  %124 = icmp sgt i32 %123, 0
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  br i1 %124, label %126, label %206

126:                                              ; preds = %122
  %127 = bitcast %union.anon* %125 to [5 x i32]*
  %128 = zext i32 %123 to i64
  %129 = icmp ult i32 %123, 8
  br i1 %129, label %199, label %130

130:                                              ; preds = %126
  %131 = and i64 %128, 4294967288
  %132 = add nsw i64 %131, -8
  %133 = lshr exact i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 7
  %136 = icmp ult i64 %132, 56
  br i1 %136, label %184, label %137

137:                                              ; preds = %130
  %138 = sub nsw i64 %134, %135
  br label %139

139:                                              ; preds = %139, %137
  %140 = phi i64 [ 0, %137 ], [ %181, %139 ]
  %141 = phi i64 [ %138, %137 ], [ %182, %139 ]
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %140
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %143, align 8, !alias.scope !187
  %144 = getelementptr inbounds i32, i32* %142, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %145, align 8, !alias.scope !187
  %146 = or i64 %140, 8
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %146
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !187
  %149 = getelementptr inbounds i32, i32* %147, i64 4
  %150 = bitcast i32* %149 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %150, align 8, !alias.scope !187
  %151 = or i64 %140, 16
  %152 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %151
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !187
  %154 = getelementptr inbounds i32, i32* %152, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %155, align 8, !alias.scope !187
  %156 = or i64 %140, 24
  %157 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %156
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !187
  %159 = getelementptr inbounds i32, i32* %157, i64 4
  %160 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %160, align 8, !alias.scope !187
  %161 = or i64 %140, 32
  %162 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %161
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !187
  %164 = getelementptr inbounds i32, i32* %162, i64 4
  %165 = bitcast i32* %164 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %165, align 8, !alias.scope !187
  %166 = or i64 %140, 40
  %167 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %166
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !187
  %169 = getelementptr inbounds i32, i32* %167, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %170, align 8, !alias.scope !187
  %171 = or i64 %140, 48
  %172 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %171
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !187
  %174 = getelementptr inbounds i32, i32* %172, i64 4
  %175 = bitcast i32* %174 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %175, align 8, !alias.scope !187
  %176 = or i64 %140, 56
  %177 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %176
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 8, !alias.scope !187
  %179 = getelementptr inbounds i32, i32* %177, i64 4
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %180, align 8, !alias.scope !187
  %181 = add i64 %140, 64
  %182 = add i64 %141, -8
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %139, !llvm.loop !190

184:                                              ; preds = %139, %130
  %185 = phi i64 [ 0, %130 ], [ %181, %139 ]
  %186 = icmp eq i64 %135, 0
  br i1 %186, label %197, label %187

187:                                              ; preds = %184, %187
  %188 = phi i64 [ %194, %187 ], [ %185, %184 ]
  %189 = phi i64 [ %195, %187 ], [ %135, %184 ]
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %188
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %191, align 8, !alias.scope !187
  %192 = getelementptr inbounds i32, i32* %190, i64 4
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %193, align 8, !alias.scope !187
  %194 = add i64 %188, 8
  %195 = add i64 %189, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %187, !llvm.loop !191

197:                                              ; preds = %187, %184
  %198 = icmp eq i64 %131, %128
  br i1 %198, label %206, label %199

199:                                              ; preds = %197, %126
  %200 = phi i64 [ 0, %126 ], [ %131, %197 ]
  br label %201

201:                                              ; preds = %199, %201
  %202 = phi i64 [ %204, %201 ], [ %200, %199 ]
  %203 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %202
  store i32 1, i32* %203, align 4, !alias.scope !187
  %204 = add nuw nsw i64 %202, 1
  %205 = icmp eq i64 %204, %128
  br i1 %205, label %206, label %201, !llvm.loop !192

206:                                              ; preds = %201, %197, %122
  %207 = getelementptr inbounds %union.anon, %union.anon* %125, i64 0, i32 0
  %208 = bitcast %union.anon* %125 to i32*
  %209 = sext i32 %123 to i64
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  %211 = bitcast i32* %210 to i8*
  %212 = icmp sgt i32 %119, 5
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %214 = getelementptr inbounds %union.anon, %union.anon* %213, i64 0, i32 0
  %215 = load i32*, i32** %214, align 8, !noalias !187
  %216 = bitcast %union.anon* %213 to i32*
  %217 = select i1 %212, i32* %215, i32* %216
  %218 = bitcast i32* %217 to i8*
  %219 = sext i32 %119 to i64
  %220 = shl nsw i64 %219, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %218, i64 %220, i1 false) #9
  %221 = load i32, i32* %14, align 8
  %222 = icmp sgt i32 %221, 5
  %223 = load i32, i32* %118, align 8
  %224 = icmp sgt i32 %223, 5
  %225 = load i32*, i32** %103, align 8
  %226 = select i1 %222, i32* %225, i32* %104
  %227 = load i32, i32* %226, align 4
  %228 = load i32*, i32** %207, align 8
  %229 = select i1 %224, i32* %228, i32* %208
  %230 = load i32, i32* %229, align 4
  %231 = icmp slt i32 %230, %227
  %232 = select i1 %231, i32 %230, i32 %227
  %233 = getelementptr inbounds i32, i32* %225, i64 1
  %234 = getelementptr inbounds i32, i32* %225, i64 2
  %235 = bitcast %union.anon* %21 to [5 x i32]*
  %236 = getelementptr inbounds [5 x i32], [5 x i32]* %235, i64 0, i64 1
  %237 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %238 = bitcast [16 x i8]* %237 to i32*
  %239 = select i1 %222, i32* %233, i32* %236
  %240 = select i1 %222, i32* %234, i32* %238
  %241 = load i32, i32* %239, align 4
  %242 = load i32, i32* %240, align 4
  %243 = getelementptr inbounds i32, i32* %225, i64 3
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %245 = bitcast i8* %244 to i32*
  %246 = select i1 %222, i32* %243, i32* %245
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds i32, i32* %228, i64 3
  %249 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1, i64 4
  %250 = bitcast i8* %249 to i32*
  %251 = select i1 %224, i32* %248, i32* %250
  %252 = load i32, i32* %251, align 4
  %253 = icmp slt i32 %252, %247
  %254 = select i1 %253, i32 %252, i32 %247
  %255 = load i32, i32* %4, align 4
  %256 = getelementptr inbounds i32, i32* %4, i64 1
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.tflite::ResizeBilinearParams", %"struct.tflite::ResizeBilinearParams"* %0, i64 0, i32 0
  %259 = load i8, i8* %258, align 1, !range !2
  %260 = icmp ne i8 %259, 0
  %261 = icmp sgt i32 %255, 1
  %262 = and i1 %261, %260
  %263 = add nsw i32 %241, -1
  %264 = add nsw i32 %255, -1
  %265 = select i1 %262, i32 %264, i32 %255
  %266 = select i1 %262, i32 %263, i32 %241
  %267 = sitofp i32 %266 to float
  %268 = sitofp i32 %265 to float
  %269 = fdiv float %267, %268
  %270 = icmp sgt i32 %257, 1
  %271 = and i1 %270, %260
  %272 = add nsw i32 %242, -1
  %273 = add nsw i32 %257, -1
  %274 = select i1 %271, i32 %273, i32 %257
  %275 = select i1 %271, i32 %272, i32 %242
  %276 = sitofp i32 %275 to float
  %277 = sitofp i32 %274 to float
  %278 = fdiv float %276, %277
  %279 = load i8, i8* %10, align 1, !range !2
  %280 = icmp ne i8 %279, 0
  call void @_ZN6tflite13optimized_ops33ResizeBilinearGenericSmallChannelIhEEviiiiiiffRKNS_12RuntimeShapeEPKT_S4_PS5_b(i32 %232, i32 %241, i32 %242, i32 %254, i32 %255, i32 %257, float %269, float %278, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %6, i1 zeroext %280)
  %281 = load i32, i32* %118, align 8
  %282 = icmp sgt i32 %281, 5
  br i1 %282, label %283, label %289

283:                                              ; preds = %206
  %284 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %285 = load i32*, i32** %284, align 8
  %286 = icmp eq i32* %285, null
  br i1 %286, label %289, label %287

287:                                              ; preds = %283
  %288 = bitcast i32* %285 to i8*
  call void @_ZdaPv(i8* %288) #10
  br label %289

289:                                              ; preds = %206, %283, %287
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #9
  %290 = load i32, i32* %14, align 8
  %291 = icmp sgt i32 %290, 5
  br i1 %291, label %292, label %298

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %294 = load i32*, i32** %293, align 8
  %295 = icmp eq i32* %294, null
  br i1 %295, label %298, label %296

296:                                              ; preds = %292
  %297 = bitcast i32* %294 to i8*
  call void @_ZdaPv(i8* %297) #10
  br label %298

298:                                              ; preds = %289, %292, %296
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops21ResizeBilinearGenericEiiiiiiffRKNS_12RuntimeShapeEPKfS3_Pfb(i32, i32, i32, i32, i32, i32, float, float, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, i1 zeroext) local_unnamed_addr #4 comdat {
  %14 = bitcast float* %11 to i8*
  %15 = mul i32 %3, %0
  %16 = mul i32 %15, %4
  %17 = mul i32 %16, %5
  %18 = sext i32 %17 to i64
  %19 = shl nsw i64 %18, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 %19, i1 false)
  %20 = icmp sgt i32 %0, 0
  br i1 %20, label %21, label %102

21:                                               ; preds = %13
  %22 = icmp sgt i32 %4, 0
  %23 = add nsw i32 %1, -1
  %24 = icmp sgt i32 %5, 0
  %25 = add nsw i32 %2, -1
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to i32*
  %28 = getelementptr inbounds i32, i32* %27, i64 1
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %30 = bitcast [16 x i8]* %29 to i32*
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %32 = bitcast i8* %31 to i32*
  %33 = icmp sgt i32 %3, 0
  %34 = sext i32 %3 to i64
  %35 = add i32 %3, -1
  %36 = zext i32 %35 to i64
  %37 = add nuw nsw i64 %36, 1
  %38 = zext i32 %35 to i64
  %39 = add nuw nsw i64 %38, 1
  %40 = add nuw nsw i64 %38, 1
  %41 = getelementptr float, float* %9, i64 %40
  %42 = add i32 %3, -1
  %43 = zext i32 %42 to i64
  %44 = add nuw nsw i64 %43, 1
  %45 = zext i32 %42 to i64
  %46 = add nuw nsw i64 %45, 1
  %47 = add nuw nsw i64 %45, 1
  %48 = getelementptr float, float* %9, i64 %47
  %49 = add i32 %3, -1
  %50 = zext i32 %49 to i64
  %51 = add nuw nsw i64 %50, 1
  %52 = zext i32 %49 to i64
  %53 = add nuw nsw i64 %52, 1
  %54 = add nuw nsw i64 %52, 1
  %55 = getelementptr float, float* %9, i64 %54
  %56 = add i32 %3, -1
  %57 = zext i32 %56 to i64
  %58 = add nuw nsw i64 %57, 1
  %59 = zext i32 %56 to i64
  %60 = add nuw nsw i64 %59, 1
  %61 = add nuw nsw i64 %59, 1
  %62 = getelementptr float, float* %9, i64 %61
  %63 = and i64 %58, 8589934584
  %64 = add nsw i64 %63, -8
  %65 = lshr exact i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = icmp ult i64 %58, 8
  %68 = and i64 %58, 8589934584
  %69 = trunc i64 %68 to i32
  %70 = and i64 %66, 1
  %71 = icmp eq i64 %64, 0
  %72 = sub nuw nsw i64 %66, %70
  %73 = icmp eq i64 %70, 0
  %74 = icmp eq i64 %58, %68
  %75 = icmp ult i64 %51, 8
  %76 = and i64 %51, 8589934584
  %77 = trunc i64 %76 to i32
  %78 = and i64 %66, 1
  %79 = icmp eq i64 %64, 0
  %80 = sub nuw nsw i64 %66, %78
  %81 = icmp eq i64 %78, 0
  %82 = icmp eq i64 %51, %76
  %83 = icmp ult i64 %44, 8
  %84 = and i64 %44, 8589934584
  %85 = trunc i64 %84 to i32
  %86 = and i64 %66, 1
  %87 = icmp eq i64 %64, 0
  %88 = sub nuw nsw i64 %66, %86
  %89 = icmp eq i64 %86, 0
  %90 = icmp eq i64 %44, %84
  %91 = icmp ult i64 %37, 8
  %92 = and i64 %37, 8589934584
  %93 = trunc i64 %92 to i32
  %94 = and i64 %66, 1
  %95 = icmp eq i64 %64, 0
  %96 = sub nuw nsw i64 %66, %94
  %97 = icmp eq i64 %94, 0
  %98 = icmp eq i64 %37, %92
  br label %99

99:                                               ; preds = %103, %21
  %100 = phi i32 [ 0, %21 ], [ %104, %103 ]
  %101 = phi i32 [ 0, %21 ], [ %105, %103 ]
  br i1 %22, label %107, label %103

102:                                              ; preds = %103, %13
  ret void

103:                                              ; preds = %139, %99
  %104 = phi i32 [ %100, %99 ], [ %140, %139 ]
  %105 = add nuw nsw i32 %101, 1
  %106 = icmp eq i32 %105, %0
  br i1 %106, label %102, label %99

107:                                              ; preds = %99, %139
  %108 = phi i32 [ %140, %139 ], [ %100, %99 ]
  %109 = phi i32 [ %141, %139 ], [ 0, %99 ]
  %110 = sitofp i32 %109 to float
  br i1 %12, label %111, label %115

111:                                              ; preds = %107
  %112 = fadd float %110, 5.000000e-01
  %113 = fmul float %112, %6
  %114 = fadd float %113, -5.000000e-01
  br label %117

115:                                              ; preds = %107
  %116 = fmul float %110, %6
  br label %117

117:                                              ; preds = %111, %115
  %118 = phi float [ %116, %115 ], [ %114, %111 ]
  %119 = tail call float @llvm.floor.f32(float %118) #9
  %120 = fptosi float %119 to i32
  %121 = icmp sgt i32 %120, 0
  %122 = select i1 %121, i32 %120, i32 0
  %123 = tail call float @llvm.ceil.f32(float %118) #9
  %124 = fptosi float %123 to i32
  %125 = icmp slt i32 %23, %124
  %126 = select i1 %125, i32 %23, i32 %124
  br i1 %24, label %127, label %139

127:                                              ; preds = %117
  %128 = sitofp i32 %122 to float
  %129 = fsub float %128, %118
  %130 = fadd float %129, 1.000000e+00
  %131 = fsub float %118, %128
  %132 = sext i32 %108 to i64
  %133 = add nsw i64 %39, %132
  %134 = add nsw i64 %46, %132
  %135 = add nsw i64 %53, %132
  %136 = add nsw i64 %60, %132
  br label %143

137:                                              ; preds = %780
  %138 = trunc i64 %781 to i32
  br label %139

139:                                              ; preds = %137, %117
  %140 = phi i32 [ %108, %117 ], [ %138, %137 ]
  %141 = add nuw nsw i32 %109, 1
  %142 = icmp eq i32 %141, %4
  br i1 %142, label %103, label %107

143:                                              ; preds = %780, %127
  %144 = phi i64 [ %784, %780 ], [ 0, %127 ]
  %145 = phi i64 [ %781, %780 ], [ %132, %127 ]
  %146 = phi i32 [ %782, %780 ], [ 0, %127 ]
  %147 = mul i64 %144, %34
  %148 = add i64 %147, %132
  %149 = getelementptr float, float* %11, i64 %148
  %150 = add i64 %136, %147
  %151 = getelementptr float, float* %11, i64 %150
  %152 = mul i64 %144, %34
  %153 = add i64 %152, %132
  %154 = getelementptr float, float* %11, i64 %153
  %155 = add i64 %135, %152
  %156 = getelementptr float, float* %11, i64 %155
  %157 = mul i64 %144, %34
  %158 = add i64 %157, %132
  %159 = getelementptr float, float* %11, i64 %158
  %160 = add i64 %134, %157
  %161 = getelementptr float, float* %11, i64 %160
  %162 = mul i64 %144, %34
  %163 = add i64 %162, %132
  %164 = getelementptr float, float* %11, i64 %163
  %165 = add i64 %133, %162
  %166 = getelementptr float, float* %11, i64 %165
  %167 = sitofp i32 %146 to float
  br i1 %12, label %168, label %172

168:                                              ; preds = %143
  %169 = fadd float %167, 5.000000e-01
  %170 = fmul float %169, %7
  %171 = fadd float %170, -5.000000e-01
  br label %174

172:                                              ; preds = %143
  %173 = fmul float %167, %7
  br label %174

174:                                              ; preds = %168, %172
  %175 = phi float [ %173, %172 ], [ %171, %168 ]
  %176 = tail call float @llvm.floor.f32(float %175) #9
  %177 = fptosi float %176 to i32
  %178 = icmp sgt i32 %177, 0
  %179 = select i1 %178, i32 %177, i32 0
  %180 = tail call float @llvm.ceil.f32(float %175) #9
  %181 = fptosi float %180 to i32
  %182 = icmp slt i32 %25, %181
  %183 = select i1 %182, i32 %25, i32 %181
  %184 = getelementptr inbounds float, float* %11, i64 %145
  %185 = sitofp i32 %179 to float
  %186 = fsub float %185, %175
  %187 = fadd float %186, 1.000000e+00
  %188 = fmul float %130, %187
  br i1 %33, label %189, label %780

189:                                              ; preds = %174
  %190 = load i32, i32* %32, align 4
  %191 = load i32, i32* %28, align 4
  %192 = mul nsw i32 %191, %101
  %193 = add nsw i32 %192, %122
  %194 = load i32, i32* %30, align 4
  %195 = mul nsw i32 %193, %194
  %196 = add nsw i32 %195, %179
  %197 = mul nsw i32 %196, %190
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds float, float* %9, i64 %198
  br i1 %67, label %277, label %200

200:                                              ; preds = %189
  %201 = getelementptr float, float* %62, i64 %198
  %202 = icmp ult float* %149, %201
  %203 = icmp ult float* %199, %151
  %204 = and i1 %202, %203
  br i1 %204, label %277, label %205

205:                                              ; preds = %200
  %206 = getelementptr float, float* %184, i64 %68
  %207 = getelementptr float, float* %199, i64 %68
  %208 = insertelement <4 x float> undef, float %188, i32 0
  %209 = shufflevector <4 x float> %208, <4 x float> undef, <4 x i32> zeroinitializer
  %210 = insertelement <4 x float> undef, float %188, i32 0
  %211 = shufflevector <4 x float> %210, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %71, label %255, label %212

212:                                              ; preds = %205, %212
  %213 = phi i64 [ %252, %212 ], [ 0, %205 ]
  %214 = phi i64 [ %253, %212 ], [ %72, %205 ]
  %215 = getelementptr float, float* %184, i64 %213
  %216 = getelementptr float, float* %199, i64 %213
  %217 = bitcast float* %216 to <4 x float>*
  %218 = load <4 x float>, <4 x float>* %217, align 4, !alias.scope !193
  %219 = getelementptr float, float* %216, i64 4
  %220 = bitcast float* %219 to <4 x float>*
  %221 = load <4 x float>, <4 x float>* %220, align 4, !alias.scope !193
  %222 = fmul <4 x float> %209, %218
  %223 = fmul <4 x float> %211, %221
  %224 = bitcast float* %215 to <4 x float>*
  %225 = load <4 x float>, <4 x float>* %224, align 4, !alias.scope !196, !noalias !193
  %226 = getelementptr float, float* %215, i64 4
  %227 = bitcast float* %226 to <4 x float>*
  %228 = load <4 x float>, <4 x float>* %227, align 4, !alias.scope !196, !noalias !193
  %229 = fadd <4 x float> %225, %222
  %230 = fadd <4 x float> %228, %223
  %231 = bitcast float* %215 to <4 x float>*
  store <4 x float> %229, <4 x float>* %231, align 4, !alias.scope !196, !noalias !193
  %232 = bitcast float* %226 to <4 x float>*
  store <4 x float> %230, <4 x float>* %232, align 4, !alias.scope !196, !noalias !193
  %233 = or i64 %213, 8
  %234 = getelementptr float, float* %184, i64 %233
  %235 = getelementptr float, float* %199, i64 %233
  %236 = bitcast float* %235 to <4 x float>*
  %237 = load <4 x float>, <4 x float>* %236, align 4, !alias.scope !193
  %238 = getelementptr float, float* %235, i64 4
  %239 = bitcast float* %238 to <4 x float>*
  %240 = load <4 x float>, <4 x float>* %239, align 4, !alias.scope !193
  %241 = fmul <4 x float> %209, %237
  %242 = fmul <4 x float> %211, %240
  %243 = bitcast float* %234 to <4 x float>*
  %244 = load <4 x float>, <4 x float>* %243, align 4, !alias.scope !196, !noalias !193
  %245 = getelementptr float, float* %234, i64 4
  %246 = bitcast float* %245 to <4 x float>*
  %247 = load <4 x float>, <4 x float>* %246, align 4, !alias.scope !196, !noalias !193
  %248 = fadd <4 x float> %244, %241
  %249 = fadd <4 x float> %247, %242
  %250 = bitcast float* %234 to <4 x float>*
  store <4 x float> %248, <4 x float>* %250, align 4, !alias.scope !196, !noalias !193
  %251 = bitcast float* %245 to <4 x float>*
  store <4 x float> %249, <4 x float>* %251, align 4, !alias.scope !196, !noalias !193
  %252 = add i64 %213, 16
  %253 = add i64 %214, -2
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %212, !llvm.loop !198

255:                                              ; preds = %212, %205
  %256 = phi i64 [ 0, %205 ], [ %252, %212 ]
  br i1 %73, label %276, label %257

257:                                              ; preds = %255
  %258 = getelementptr float, float* %184, i64 %256
  %259 = getelementptr float, float* %199, i64 %256
  %260 = bitcast float* %259 to <4 x float>*
  %261 = load <4 x float>, <4 x float>* %260, align 4, !alias.scope !193
  %262 = getelementptr float, float* %259, i64 4
  %263 = bitcast float* %262 to <4 x float>*
  %264 = load <4 x float>, <4 x float>* %263, align 4, !alias.scope !193
  %265 = fmul <4 x float> %209, %261
  %266 = fmul <4 x float> %211, %264
  %267 = bitcast float* %258 to <4 x float>*
  %268 = load <4 x float>, <4 x float>* %267, align 4, !alias.scope !196, !noalias !193
  %269 = getelementptr float, float* %258, i64 4
  %270 = bitcast float* %269 to <4 x float>*
  %271 = load <4 x float>, <4 x float>* %270, align 4, !alias.scope !196, !noalias !193
  %272 = fadd <4 x float> %268, %265
  %273 = fadd <4 x float> %271, %266
  %274 = bitcast float* %258 to <4 x float>*
  store <4 x float> %272, <4 x float>* %274, align 4, !alias.scope !196, !noalias !193
  %275 = bitcast float* %269 to <4 x float>*
  store <4 x float> %273, <4 x float>* %275, align 4, !alias.scope !196, !noalias !193
  br label %276

276:                                              ; preds = %255, %257
  br i1 %74, label %335, label %277

277:                                              ; preds = %276, %200, %189
  %278 = phi i32 [ 0, %200 ], [ 0, %189 ], [ %69, %276 ]
  %279 = phi float* [ %184, %200 ], [ %184, %189 ], [ %206, %276 ]
  %280 = phi float* [ %199, %200 ], [ %199, %189 ], [ %207, %276 ]
  %281 = sub i32 %3, %278
  %282 = xor i32 %278, -1
  %283 = add i32 %282, %3
  %284 = and i32 %281, 3
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %300, label %286

286:                                              ; preds = %277, %286
  %287 = phi i32 [ %297, %286 ], [ %278, %277 ]
  %288 = phi float* [ %295, %286 ], [ %279, %277 ]
  %289 = phi float* [ %296, %286 ], [ %280, %277 ]
  %290 = phi i32 [ %298, %286 ], [ %284, %277 ]
  %291 = load float, float* %289, align 4
  %292 = fmul float %188, %291
  %293 = load float, float* %288, align 4
  %294 = fadd float %293, %292
  store float %294, float* %288, align 4
  %295 = getelementptr inbounds float, float* %288, i64 1
  %296 = getelementptr inbounds float, float* %289, i64 1
  %297 = add nuw nsw i32 %287, 1
  %298 = add i32 %290, -1
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %286, !llvm.loop !199

300:                                              ; preds = %286, %277
  %301 = phi i32 [ %278, %277 ], [ %297, %286 ]
  %302 = phi float* [ %279, %277 ], [ %295, %286 ]
  %303 = phi float* [ %280, %277 ], [ %296, %286 ]
  %304 = icmp ult i32 %283, 3
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i32 [ %333, %305 ], [ %301, %300 ]
  %307 = phi float* [ %331, %305 ], [ %302, %300 ]
  %308 = phi float* [ %332, %305 ], [ %303, %300 ]
  %309 = load float, float* %308, align 4
  %310 = fmul float %188, %309
  %311 = load float, float* %307, align 4
  %312 = fadd float %311, %310
  store float %312, float* %307, align 4
  %313 = getelementptr inbounds float, float* %307, i64 1
  %314 = getelementptr inbounds float, float* %308, i64 1
  %315 = load float, float* %314, align 4
  %316 = fmul float %188, %315
  %317 = load float, float* %313, align 4
  %318 = fadd float %317, %316
  store float %318, float* %313, align 4
  %319 = getelementptr inbounds float, float* %307, i64 2
  %320 = getelementptr inbounds float, float* %308, i64 2
  %321 = load float, float* %320, align 4
  %322 = fmul float %188, %321
  %323 = load float, float* %319, align 4
  %324 = fadd float %323, %322
  store float %324, float* %319, align 4
  %325 = getelementptr inbounds float, float* %307, i64 3
  %326 = getelementptr inbounds float, float* %308, i64 3
  %327 = load float, float* %326, align 4
  %328 = fmul float %188, %327
  %329 = load float, float* %325, align 4
  %330 = fadd float %329, %328
  store float %330, float* %325, align 4
  %331 = getelementptr inbounds float, float* %307, i64 4
  %332 = getelementptr inbounds float, float* %308, i64 4
  %333 = add nuw nsw i32 %306, 4
  %334 = icmp eq i32 %333, %3
  br i1 %334, label %335, label %305, !llvm.loop !200

335:                                              ; preds = %300, %305, %276
  %336 = fsub float %175, %185
  %337 = fmul float %130, %336
  br i1 %33, label %338, label %780

338:                                              ; preds = %335
  %339 = load i32, i32* %28, align 4
  %340 = mul nsw i32 %339, %101
  %341 = add nsw i32 %340, %122
  %342 = load i32, i32* %30, align 4
  %343 = mul nsw i32 %341, %342
  %344 = load i32, i32* %32, align 4
  %345 = add nsw i32 %343, %183
  %346 = mul nsw i32 %345, %344
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds float, float* %9, i64 %347
  br i1 %75, label %426, label %349

349:                                              ; preds = %338
  %350 = getelementptr float, float* %55, i64 %347
  %351 = icmp ult float* %154, %350
  %352 = icmp ult float* %348, %156
  %353 = and i1 %351, %352
  br i1 %353, label %426, label %354

354:                                              ; preds = %349
  %355 = getelementptr float, float* %184, i64 %76
  %356 = getelementptr float, float* %348, i64 %76
  %357 = insertelement <4 x float> undef, float %337, i32 0
  %358 = shufflevector <4 x float> %357, <4 x float> undef, <4 x i32> zeroinitializer
  %359 = insertelement <4 x float> undef, float %337, i32 0
  %360 = shufflevector <4 x float> %359, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %79, label %404, label %361

361:                                              ; preds = %354, %361
  %362 = phi i64 [ %401, %361 ], [ 0, %354 ]
  %363 = phi i64 [ %402, %361 ], [ %80, %354 ]
  %364 = getelementptr float, float* %184, i64 %362
  %365 = getelementptr float, float* %348, i64 %362
  %366 = bitcast float* %365 to <4 x float>*
  %367 = load <4 x float>, <4 x float>* %366, align 4, !alias.scope !201
  %368 = getelementptr float, float* %365, i64 4
  %369 = bitcast float* %368 to <4 x float>*
  %370 = load <4 x float>, <4 x float>* %369, align 4, !alias.scope !201
  %371 = fmul <4 x float> %358, %367
  %372 = fmul <4 x float> %360, %370
  %373 = bitcast float* %364 to <4 x float>*
  %374 = load <4 x float>, <4 x float>* %373, align 4, !alias.scope !204, !noalias !201
  %375 = getelementptr float, float* %364, i64 4
  %376 = bitcast float* %375 to <4 x float>*
  %377 = load <4 x float>, <4 x float>* %376, align 4, !alias.scope !204, !noalias !201
  %378 = fadd <4 x float> %374, %371
  %379 = fadd <4 x float> %377, %372
  %380 = bitcast float* %364 to <4 x float>*
  store <4 x float> %378, <4 x float>* %380, align 4, !alias.scope !204, !noalias !201
  %381 = bitcast float* %375 to <4 x float>*
  store <4 x float> %379, <4 x float>* %381, align 4, !alias.scope !204, !noalias !201
  %382 = or i64 %362, 8
  %383 = getelementptr float, float* %184, i64 %382
  %384 = getelementptr float, float* %348, i64 %382
  %385 = bitcast float* %384 to <4 x float>*
  %386 = load <4 x float>, <4 x float>* %385, align 4, !alias.scope !201
  %387 = getelementptr float, float* %384, i64 4
  %388 = bitcast float* %387 to <4 x float>*
  %389 = load <4 x float>, <4 x float>* %388, align 4, !alias.scope !201
  %390 = fmul <4 x float> %358, %386
  %391 = fmul <4 x float> %360, %389
  %392 = bitcast float* %383 to <4 x float>*
  %393 = load <4 x float>, <4 x float>* %392, align 4, !alias.scope !204, !noalias !201
  %394 = getelementptr float, float* %383, i64 4
  %395 = bitcast float* %394 to <4 x float>*
  %396 = load <4 x float>, <4 x float>* %395, align 4, !alias.scope !204, !noalias !201
  %397 = fadd <4 x float> %393, %390
  %398 = fadd <4 x float> %396, %391
  %399 = bitcast float* %383 to <4 x float>*
  store <4 x float> %397, <4 x float>* %399, align 4, !alias.scope !204, !noalias !201
  %400 = bitcast float* %394 to <4 x float>*
  store <4 x float> %398, <4 x float>* %400, align 4, !alias.scope !204, !noalias !201
  %401 = add i64 %362, 16
  %402 = add i64 %363, -2
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %404, label %361, !llvm.loop !206

404:                                              ; preds = %361, %354
  %405 = phi i64 [ 0, %354 ], [ %401, %361 ]
  br i1 %81, label %425, label %406

406:                                              ; preds = %404
  %407 = getelementptr float, float* %184, i64 %405
  %408 = getelementptr float, float* %348, i64 %405
  %409 = bitcast float* %408 to <4 x float>*
  %410 = load <4 x float>, <4 x float>* %409, align 4, !alias.scope !201
  %411 = getelementptr float, float* %408, i64 4
  %412 = bitcast float* %411 to <4 x float>*
  %413 = load <4 x float>, <4 x float>* %412, align 4, !alias.scope !201
  %414 = fmul <4 x float> %358, %410
  %415 = fmul <4 x float> %360, %413
  %416 = bitcast float* %407 to <4 x float>*
  %417 = load <4 x float>, <4 x float>* %416, align 4, !alias.scope !204, !noalias !201
  %418 = getelementptr float, float* %407, i64 4
  %419 = bitcast float* %418 to <4 x float>*
  %420 = load <4 x float>, <4 x float>* %419, align 4, !alias.scope !204, !noalias !201
  %421 = fadd <4 x float> %417, %414
  %422 = fadd <4 x float> %420, %415
  %423 = bitcast float* %407 to <4 x float>*
  store <4 x float> %421, <4 x float>* %423, align 4, !alias.scope !204, !noalias !201
  %424 = bitcast float* %418 to <4 x float>*
  store <4 x float> %422, <4 x float>* %424, align 4, !alias.scope !204, !noalias !201
  br label %425

425:                                              ; preds = %404, %406
  br i1 %82, label %484, label %426

426:                                              ; preds = %425, %349, %338
  %427 = phi i32 [ 0, %349 ], [ 0, %338 ], [ %77, %425 ]
  %428 = phi float* [ %184, %349 ], [ %184, %338 ], [ %355, %425 ]
  %429 = phi float* [ %348, %349 ], [ %348, %338 ], [ %356, %425 ]
  %430 = sub i32 %3, %427
  %431 = xor i32 %427, -1
  %432 = add i32 %431, %3
  %433 = and i32 %430, 3
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %449, label %435

435:                                              ; preds = %426, %435
  %436 = phi i32 [ %446, %435 ], [ %427, %426 ]
  %437 = phi float* [ %444, %435 ], [ %428, %426 ]
  %438 = phi float* [ %445, %435 ], [ %429, %426 ]
  %439 = phi i32 [ %447, %435 ], [ %433, %426 ]
  %440 = load float, float* %438, align 4
  %441 = fmul float %337, %440
  %442 = load float, float* %437, align 4
  %443 = fadd float %442, %441
  store float %443, float* %437, align 4
  %444 = getelementptr inbounds float, float* %437, i64 1
  %445 = getelementptr inbounds float, float* %438, i64 1
  %446 = add nuw nsw i32 %436, 1
  %447 = add i32 %439, -1
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %435, !llvm.loop !207

449:                                              ; preds = %435, %426
  %450 = phi i32 [ %427, %426 ], [ %446, %435 ]
  %451 = phi float* [ %428, %426 ], [ %444, %435 ]
  %452 = phi float* [ %429, %426 ], [ %445, %435 ]
  %453 = icmp ult i32 %432, 3
  br i1 %453, label %484, label %454

454:                                              ; preds = %449, %454
  %455 = phi i32 [ %482, %454 ], [ %450, %449 ]
  %456 = phi float* [ %480, %454 ], [ %451, %449 ]
  %457 = phi float* [ %481, %454 ], [ %452, %449 ]
  %458 = load float, float* %457, align 4
  %459 = fmul float %337, %458
  %460 = load float, float* %456, align 4
  %461 = fadd float %460, %459
  store float %461, float* %456, align 4
  %462 = getelementptr inbounds float, float* %456, i64 1
  %463 = getelementptr inbounds float, float* %457, i64 1
  %464 = load float, float* %463, align 4
  %465 = fmul float %337, %464
  %466 = load float, float* %462, align 4
  %467 = fadd float %466, %465
  store float %467, float* %462, align 4
  %468 = getelementptr inbounds float, float* %456, i64 2
  %469 = getelementptr inbounds float, float* %457, i64 2
  %470 = load float, float* %469, align 4
  %471 = fmul float %337, %470
  %472 = load float, float* %468, align 4
  %473 = fadd float %472, %471
  store float %473, float* %468, align 4
  %474 = getelementptr inbounds float, float* %456, i64 3
  %475 = getelementptr inbounds float, float* %457, i64 3
  %476 = load float, float* %475, align 4
  %477 = fmul float %337, %476
  %478 = load float, float* %474, align 4
  %479 = fadd float %478, %477
  store float %479, float* %474, align 4
  %480 = getelementptr inbounds float, float* %456, i64 4
  %481 = getelementptr inbounds float, float* %457, i64 4
  %482 = add nuw nsw i32 %455, 4
  %483 = icmp eq i32 %482, %3
  br i1 %483, label %484, label %454, !llvm.loop !208

484:                                              ; preds = %449, %454, %425
  %485 = fmul float %131, %187
  br i1 %33, label %486, label %780

486:                                              ; preds = %484
  %487 = load i32, i32* %28, align 4
  %488 = mul nsw i32 %487, %101
  %489 = add nsw i32 %488, %126
  %490 = load i32, i32* %30, align 4
  %491 = mul nsw i32 %489, %490
  %492 = load i32, i32* %32, align 4
  %493 = add nsw i32 %491, %179
  %494 = mul nsw i32 %493, %492
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds float, float* %9, i64 %495
  br i1 %83, label %574, label %497

497:                                              ; preds = %486
  %498 = getelementptr float, float* %48, i64 %495
  %499 = icmp ult float* %159, %498
  %500 = icmp ult float* %496, %161
  %501 = and i1 %499, %500
  br i1 %501, label %574, label %502

502:                                              ; preds = %497
  %503 = getelementptr float, float* %184, i64 %84
  %504 = getelementptr float, float* %496, i64 %84
  %505 = insertelement <4 x float> undef, float %485, i32 0
  %506 = shufflevector <4 x float> %505, <4 x float> undef, <4 x i32> zeroinitializer
  %507 = insertelement <4 x float> undef, float %485, i32 0
  %508 = shufflevector <4 x float> %507, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %87, label %552, label %509

509:                                              ; preds = %502, %509
  %510 = phi i64 [ %549, %509 ], [ 0, %502 ]
  %511 = phi i64 [ %550, %509 ], [ %88, %502 ]
  %512 = getelementptr float, float* %184, i64 %510
  %513 = getelementptr float, float* %496, i64 %510
  %514 = bitcast float* %513 to <4 x float>*
  %515 = load <4 x float>, <4 x float>* %514, align 4, !alias.scope !209
  %516 = getelementptr float, float* %513, i64 4
  %517 = bitcast float* %516 to <4 x float>*
  %518 = load <4 x float>, <4 x float>* %517, align 4, !alias.scope !209
  %519 = fmul <4 x float> %506, %515
  %520 = fmul <4 x float> %508, %518
  %521 = bitcast float* %512 to <4 x float>*
  %522 = load <4 x float>, <4 x float>* %521, align 4, !alias.scope !212, !noalias !209
  %523 = getelementptr float, float* %512, i64 4
  %524 = bitcast float* %523 to <4 x float>*
  %525 = load <4 x float>, <4 x float>* %524, align 4, !alias.scope !212, !noalias !209
  %526 = fadd <4 x float> %522, %519
  %527 = fadd <4 x float> %525, %520
  %528 = bitcast float* %512 to <4 x float>*
  store <4 x float> %526, <4 x float>* %528, align 4, !alias.scope !212, !noalias !209
  %529 = bitcast float* %523 to <4 x float>*
  store <4 x float> %527, <4 x float>* %529, align 4, !alias.scope !212, !noalias !209
  %530 = or i64 %510, 8
  %531 = getelementptr float, float* %184, i64 %530
  %532 = getelementptr float, float* %496, i64 %530
  %533 = bitcast float* %532 to <4 x float>*
  %534 = load <4 x float>, <4 x float>* %533, align 4, !alias.scope !209
  %535 = getelementptr float, float* %532, i64 4
  %536 = bitcast float* %535 to <4 x float>*
  %537 = load <4 x float>, <4 x float>* %536, align 4, !alias.scope !209
  %538 = fmul <4 x float> %506, %534
  %539 = fmul <4 x float> %508, %537
  %540 = bitcast float* %531 to <4 x float>*
  %541 = load <4 x float>, <4 x float>* %540, align 4, !alias.scope !212, !noalias !209
  %542 = getelementptr float, float* %531, i64 4
  %543 = bitcast float* %542 to <4 x float>*
  %544 = load <4 x float>, <4 x float>* %543, align 4, !alias.scope !212, !noalias !209
  %545 = fadd <4 x float> %541, %538
  %546 = fadd <4 x float> %544, %539
  %547 = bitcast float* %531 to <4 x float>*
  store <4 x float> %545, <4 x float>* %547, align 4, !alias.scope !212, !noalias !209
  %548 = bitcast float* %542 to <4 x float>*
  store <4 x float> %546, <4 x float>* %548, align 4, !alias.scope !212, !noalias !209
  %549 = add i64 %510, 16
  %550 = add i64 %511, -2
  %551 = icmp eq i64 %550, 0
  br i1 %551, label %552, label %509, !llvm.loop !214

552:                                              ; preds = %509, %502
  %553 = phi i64 [ 0, %502 ], [ %549, %509 ]
  br i1 %89, label %573, label %554

554:                                              ; preds = %552
  %555 = getelementptr float, float* %184, i64 %553
  %556 = getelementptr float, float* %496, i64 %553
  %557 = bitcast float* %556 to <4 x float>*
  %558 = load <4 x float>, <4 x float>* %557, align 4, !alias.scope !209
  %559 = getelementptr float, float* %556, i64 4
  %560 = bitcast float* %559 to <4 x float>*
  %561 = load <4 x float>, <4 x float>* %560, align 4, !alias.scope !209
  %562 = fmul <4 x float> %506, %558
  %563 = fmul <4 x float> %508, %561
  %564 = bitcast float* %555 to <4 x float>*
  %565 = load <4 x float>, <4 x float>* %564, align 4, !alias.scope !212, !noalias !209
  %566 = getelementptr float, float* %555, i64 4
  %567 = bitcast float* %566 to <4 x float>*
  %568 = load <4 x float>, <4 x float>* %567, align 4, !alias.scope !212, !noalias !209
  %569 = fadd <4 x float> %565, %562
  %570 = fadd <4 x float> %568, %563
  %571 = bitcast float* %555 to <4 x float>*
  store <4 x float> %569, <4 x float>* %571, align 4, !alias.scope !212, !noalias !209
  %572 = bitcast float* %566 to <4 x float>*
  store <4 x float> %570, <4 x float>* %572, align 4, !alias.scope !212, !noalias !209
  br label %573

573:                                              ; preds = %552, %554
  br i1 %90, label %632, label %574

574:                                              ; preds = %573, %497, %486
  %575 = phi i32 [ 0, %497 ], [ 0, %486 ], [ %85, %573 ]
  %576 = phi float* [ %184, %497 ], [ %184, %486 ], [ %503, %573 ]
  %577 = phi float* [ %496, %497 ], [ %496, %486 ], [ %504, %573 ]
  %578 = sub i32 %3, %575
  %579 = xor i32 %575, -1
  %580 = add i32 %579, %3
  %581 = and i32 %578, 3
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %597, label %583

583:                                              ; preds = %574, %583
  %584 = phi i32 [ %594, %583 ], [ %575, %574 ]
  %585 = phi float* [ %592, %583 ], [ %576, %574 ]
  %586 = phi float* [ %593, %583 ], [ %577, %574 ]
  %587 = phi i32 [ %595, %583 ], [ %581, %574 ]
  %588 = load float, float* %586, align 4
  %589 = fmul float %485, %588
  %590 = load float, float* %585, align 4
  %591 = fadd float %590, %589
  store float %591, float* %585, align 4
  %592 = getelementptr inbounds float, float* %585, i64 1
  %593 = getelementptr inbounds float, float* %586, i64 1
  %594 = add nuw nsw i32 %584, 1
  %595 = add i32 %587, -1
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %597, label %583, !llvm.loop !215

597:                                              ; preds = %583, %574
  %598 = phi i32 [ %575, %574 ], [ %594, %583 ]
  %599 = phi float* [ %576, %574 ], [ %592, %583 ]
  %600 = phi float* [ %577, %574 ], [ %593, %583 ]
  %601 = icmp ult i32 %580, 3
  br i1 %601, label %632, label %602

602:                                              ; preds = %597, %602
  %603 = phi i32 [ %630, %602 ], [ %598, %597 ]
  %604 = phi float* [ %628, %602 ], [ %599, %597 ]
  %605 = phi float* [ %629, %602 ], [ %600, %597 ]
  %606 = load float, float* %605, align 4
  %607 = fmul float %485, %606
  %608 = load float, float* %604, align 4
  %609 = fadd float %608, %607
  store float %609, float* %604, align 4
  %610 = getelementptr inbounds float, float* %604, i64 1
  %611 = getelementptr inbounds float, float* %605, i64 1
  %612 = load float, float* %611, align 4
  %613 = fmul float %485, %612
  %614 = load float, float* %610, align 4
  %615 = fadd float %614, %613
  store float %615, float* %610, align 4
  %616 = getelementptr inbounds float, float* %604, i64 2
  %617 = getelementptr inbounds float, float* %605, i64 2
  %618 = load float, float* %617, align 4
  %619 = fmul float %485, %618
  %620 = load float, float* %616, align 4
  %621 = fadd float %620, %619
  store float %621, float* %616, align 4
  %622 = getelementptr inbounds float, float* %604, i64 3
  %623 = getelementptr inbounds float, float* %605, i64 3
  %624 = load float, float* %623, align 4
  %625 = fmul float %485, %624
  %626 = load float, float* %622, align 4
  %627 = fadd float %626, %625
  store float %627, float* %622, align 4
  %628 = getelementptr inbounds float, float* %604, i64 4
  %629 = getelementptr inbounds float, float* %605, i64 4
  %630 = add nuw nsw i32 %603, 4
  %631 = icmp eq i32 %630, %3
  br i1 %631, label %632, label %602, !llvm.loop !216

632:                                              ; preds = %597, %602, %573
  %633 = fmul float %131, %336
  br i1 %33, label %634, label %780

634:                                              ; preds = %632
  %635 = load i32, i32* %28, align 4
  %636 = mul nsw i32 %635, %101
  %637 = add nsw i32 %636, %126
  %638 = load i32, i32* %30, align 4
  %639 = mul nsw i32 %637, %638
  %640 = load i32, i32* %32, align 4
  %641 = add nsw i32 %639, %183
  %642 = mul nsw i32 %641, %640
  %643 = sext i32 %642 to i64
  %644 = getelementptr inbounds float, float* %9, i64 %643
  br i1 %91, label %722, label %645

645:                                              ; preds = %634
  %646 = getelementptr float, float* %41, i64 %643
  %647 = icmp ult float* %164, %646
  %648 = icmp ult float* %644, %166
  %649 = and i1 %647, %648
  br i1 %649, label %722, label %650

650:                                              ; preds = %645
  %651 = getelementptr float, float* %184, i64 %92
  %652 = getelementptr float, float* %644, i64 %92
  %653 = insertelement <4 x float> undef, float %633, i32 0
  %654 = shufflevector <4 x float> %653, <4 x float> undef, <4 x i32> zeroinitializer
  %655 = insertelement <4 x float> undef, float %633, i32 0
  %656 = shufflevector <4 x float> %655, <4 x float> undef, <4 x i32> zeroinitializer
  br i1 %95, label %700, label %657

657:                                              ; preds = %650, %657
  %658 = phi i64 [ %697, %657 ], [ 0, %650 ]
  %659 = phi i64 [ %698, %657 ], [ %96, %650 ]
  %660 = getelementptr float, float* %184, i64 %658
  %661 = getelementptr float, float* %644, i64 %658
  %662 = bitcast float* %661 to <4 x float>*
  %663 = load <4 x float>, <4 x float>* %662, align 4, !alias.scope !217
  %664 = getelementptr float, float* %661, i64 4
  %665 = bitcast float* %664 to <4 x float>*
  %666 = load <4 x float>, <4 x float>* %665, align 4, !alias.scope !217
  %667 = fmul <4 x float> %654, %663
  %668 = fmul <4 x float> %656, %666
  %669 = bitcast float* %660 to <4 x float>*
  %670 = load <4 x float>, <4 x float>* %669, align 4, !alias.scope !220, !noalias !217
  %671 = getelementptr float, float* %660, i64 4
  %672 = bitcast float* %671 to <4 x float>*
  %673 = load <4 x float>, <4 x float>* %672, align 4, !alias.scope !220, !noalias !217
  %674 = fadd <4 x float> %670, %667
  %675 = fadd <4 x float> %673, %668
  %676 = bitcast float* %660 to <4 x float>*
  store <4 x float> %674, <4 x float>* %676, align 4, !alias.scope !220, !noalias !217
  %677 = bitcast float* %671 to <4 x float>*
  store <4 x float> %675, <4 x float>* %677, align 4, !alias.scope !220, !noalias !217
  %678 = or i64 %658, 8
  %679 = getelementptr float, float* %184, i64 %678
  %680 = getelementptr float, float* %644, i64 %678
  %681 = bitcast float* %680 to <4 x float>*
  %682 = load <4 x float>, <4 x float>* %681, align 4, !alias.scope !217
  %683 = getelementptr float, float* %680, i64 4
  %684 = bitcast float* %683 to <4 x float>*
  %685 = load <4 x float>, <4 x float>* %684, align 4, !alias.scope !217
  %686 = fmul <4 x float> %654, %682
  %687 = fmul <4 x float> %656, %685
  %688 = bitcast float* %679 to <4 x float>*
  %689 = load <4 x float>, <4 x float>* %688, align 4, !alias.scope !220, !noalias !217
  %690 = getelementptr float, float* %679, i64 4
  %691 = bitcast float* %690 to <4 x float>*
  %692 = load <4 x float>, <4 x float>* %691, align 4, !alias.scope !220, !noalias !217
  %693 = fadd <4 x float> %689, %686
  %694 = fadd <4 x float> %692, %687
  %695 = bitcast float* %679 to <4 x float>*
  store <4 x float> %693, <4 x float>* %695, align 4, !alias.scope !220, !noalias !217
  %696 = bitcast float* %690 to <4 x float>*
  store <4 x float> %694, <4 x float>* %696, align 4, !alias.scope !220, !noalias !217
  %697 = add i64 %658, 16
  %698 = add i64 %659, -2
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %700, label %657, !llvm.loop !222

700:                                              ; preds = %657, %650
  %701 = phi i64 [ 0, %650 ], [ %697, %657 ]
  br i1 %97, label %721, label %702

702:                                              ; preds = %700
  %703 = getelementptr float, float* %184, i64 %701
  %704 = getelementptr float, float* %644, i64 %701
  %705 = bitcast float* %704 to <4 x float>*
  %706 = load <4 x float>, <4 x float>* %705, align 4, !alias.scope !217
  %707 = getelementptr float, float* %704, i64 4
  %708 = bitcast float* %707 to <4 x float>*
  %709 = load <4 x float>, <4 x float>* %708, align 4, !alias.scope !217
  %710 = fmul <4 x float> %654, %706
  %711 = fmul <4 x float> %656, %709
  %712 = bitcast float* %703 to <4 x float>*
  %713 = load <4 x float>, <4 x float>* %712, align 4, !alias.scope !220, !noalias !217
  %714 = getelementptr float, float* %703, i64 4
  %715 = bitcast float* %714 to <4 x float>*
  %716 = load <4 x float>, <4 x float>* %715, align 4, !alias.scope !220, !noalias !217
  %717 = fadd <4 x float> %713, %710
  %718 = fadd <4 x float> %716, %711
  %719 = bitcast float* %703 to <4 x float>*
  store <4 x float> %717, <4 x float>* %719, align 4, !alias.scope !220, !noalias !217
  %720 = bitcast float* %714 to <4 x float>*
  store <4 x float> %718, <4 x float>* %720, align 4, !alias.scope !220, !noalias !217
  br label %721

721:                                              ; preds = %700, %702
  br i1 %98, label %780, label %722

722:                                              ; preds = %721, %645, %634
  %723 = phi i32 [ 0, %645 ], [ 0, %634 ], [ %93, %721 ]
  %724 = phi float* [ %184, %645 ], [ %184, %634 ], [ %651, %721 ]
  %725 = phi float* [ %644, %645 ], [ %644, %634 ], [ %652, %721 ]
  %726 = sub i32 %3, %723
  %727 = xor i32 %723, -1
  %728 = add i32 %727, %3
  %729 = and i32 %726, 3
  %730 = icmp eq i32 %729, 0
  br i1 %730, label %745, label %731

731:                                              ; preds = %722, %731
  %732 = phi i32 [ %742, %731 ], [ %723, %722 ]
  %733 = phi float* [ %740, %731 ], [ %724, %722 ]
  %734 = phi float* [ %741, %731 ], [ %725, %722 ]
  %735 = phi i32 [ %743, %731 ], [ %729, %722 ]
  %736 = load float, float* %734, align 4
  %737 = fmul float %633, %736
  %738 = load float, float* %733, align 4
  %739 = fadd float %738, %737
  store float %739, float* %733, align 4
  %740 = getelementptr inbounds float, float* %733, i64 1
  %741 = getelementptr inbounds float, float* %734, i64 1
  %742 = add nuw nsw i32 %732, 1
  %743 = add i32 %735, -1
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %745, label %731, !llvm.loop !223

745:                                              ; preds = %731, %722
  %746 = phi i32 [ %723, %722 ], [ %742, %731 ]
  %747 = phi float* [ %724, %722 ], [ %740, %731 ]
  %748 = phi float* [ %725, %722 ], [ %741, %731 ]
  %749 = icmp ult i32 %728, 3
  br i1 %749, label %780, label %750

750:                                              ; preds = %745, %750
  %751 = phi i32 [ %778, %750 ], [ %746, %745 ]
  %752 = phi float* [ %776, %750 ], [ %747, %745 ]
  %753 = phi float* [ %777, %750 ], [ %748, %745 ]
  %754 = load float, float* %753, align 4
  %755 = fmul float %633, %754
  %756 = load float, float* %752, align 4
  %757 = fadd float %756, %755
  store float %757, float* %752, align 4
  %758 = getelementptr inbounds float, float* %752, i64 1
  %759 = getelementptr inbounds float, float* %753, i64 1
  %760 = load float, float* %759, align 4
  %761 = fmul float %633, %760
  %762 = load float, float* %758, align 4
  %763 = fadd float %762, %761
  store float %763, float* %758, align 4
  %764 = getelementptr inbounds float, float* %752, i64 2
  %765 = getelementptr inbounds float, float* %753, i64 2
  %766 = load float, float* %765, align 4
  %767 = fmul float %633, %766
  %768 = load float, float* %764, align 4
  %769 = fadd float %768, %767
  store float %769, float* %764, align 4
  %770 = getelementptr inbounds float, float* %752, i64 3
  %771 = getelementptr inbounds float, float* %753, i64 3
  %772 = load float, float* %771, align 4
  %773 = fmul float %633, %772
  %774 = load float, float* %770, align 4
  %775 = fadd float %774, %773
  store float %775, float* %770, align 4
  %776 = getelementptr inbounds float, float* %752, i64 4
  %777 = getelementptr inbounds float, float* %753, i64 4
  %778 = add nuw nsw i32 %751, 4
  %779 = icmp eq i32 %778, %3
  br i1 %779, label %780, label %750, !llvm.loop !224

780:                                              ; preds = %745, %750, %721, %174, %335, %484, %632
  %781 = add i64 %145, %34
  %782 = add nuw nsw i32 %146, 1
  %783 = icmp eq i32 %782, %5
  %784 = add i64 %144, 1
  br i1 %783, label %137, label %143
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops33ResizeBilinearGenericSmallChannelIhEEviiiiiiffRKNS_12RuntimeShapeEPKT_S4_PS5_b(i32, i32, i32, i32, i32, i32, float, float, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i1 zeroext) local_unnamed_addr #4 comdat {
  %14 = icmp sgt i32 %0, 0
  br i1 %14, label %15, label %39

15:                                               ; preds = %13
  %16 = icmp sgt i32 %4, 0
  %17 = add nsw i32 %1, -1
  %18 = icmp sgt i32 %5, 0
  %19 = add nsw i32 %2, -1
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i32*
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %24 = bitcast [16 x i8]* %23 to i32*
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %26 = bitcast i8* %25 to i32*
  %27 = icmp sgt i32 %3, 0
  %28 = zext i32 %3 to i64
  %29 = getelementptr i8, i8* %9, i64 %28
  %30 = getelementptr i8, i8* %9, i64 %28
  %31 = getelementptr i8, i8* %9, i64 %28
  %32 = getelementptr i8, i8* %9, i64 %28
  %33 = icmp ult i32 %3, 16
  %34 = and i64 %28, 4294967280
  %35 = icmp eq i64 %34, %28
  br label %36

36:                                               ; preds = %40, %15
  %37 = phi i8* [ %11, %15 ], [ %41, %40 ]
  %38 = phi i32 [ 0, %15 ], [ %42, %40 ]
  br i1 %16, label %44, label %40

39:                                               ; preds = %40, %13
  ret void

40:                                               ; preds = %68, %36
  %41 = phi i8* [ %37, %36 ], [ %69, %68 ]
  %42 = add nuw nsw i32 %38, 1
  %43 = icmp eq i32 %42, %0
  br i1 %43, label %39, label %36

44:                                               ; preds = %36, %68
  %45 = phi i8* [ %69, %68 ], [ %37, %36 ]
  %46 = phi i32 [ %70, %68 ], [ 0, %36 ]
  %47 = sitofp i32 %46 to float
  br i1 %12, label %48, label %52

48:                                               ; preds = %44
  %49 = fadd float %47, 5.000000e-01
  %50 = fmul float %49, %6
  %51 = fadd float %50, -5.000000e-01
  br label %54

52:                                               ; preds = %44
  %53 = fmul float %47, %6
  br label %54

54:                                               ; preds = %48, %52
  %55 = phi float [ %53, %52 ], [ %51, %48 ]
  %56 = tail call float @llvm.floor.f32(float %55) #9
  %57 = fptosi float %56 to i32
  %58 = icmp sgt i32 %57, 0
  %59 = select i1 %58, i32 %57, i32 0
  %60 = tail call float @llvm.ceil.f32(float %55) #9
  %61 = fptosi float %60 to i32
  %62 = icmp slt i32 %17, %61
  %63 = select i1 %62, i32 %17, i32 %61
  br i1 %18, label %64, label %68

64:                                               ; preds = %54
  %65 = sitofp i32 %59 to float
  %66 = fsub float %55, %65
  %67 = fsub float 1.000000e+00, %66
  br label %72

68:                                               ; preds = %190, %54
  %69 = phi i8* [ %45, %54 ], [ %191, %190 ]
  %70 = add nuw nsw i32 %46, 1
  %71 = icmp eq i32 %70, %4
  br i1 %71, label %40, label %44

72:                                               ; preds = %190, %64
  %73 = phi i8* [ %45, %64 ], [ %191, %190 ]
  %74 = phi i32 [ 0, %64 ], [ %192, %190 ]
  %75 = sitofp i32 %74 to float
  br i1 %12, label %76, label %80

76:                                               ; preds = %72
  %77 = fadd float %75, 5.000000e-01
  %78 = fmul float %77, %7
  %79 = fadd float %78, -5.000000e-01
  br label %82

80:                                               ; preds = %72
  %81 = fmul float %75, %7
  br label %82

82:                                               ; preds = %76, %80
  %83 = phi float [ %81, %80 ], [ %79, %76 ]
  %84 = tail call float @llvm.floor.f32(float %83) #9
  %85 = fptosi float %84 to i32
  %86 = icmp sgt i32 %85, 0
  %87 = select i1 %86, i32 %85, i32 0
  %88 = tail call float @llvm.ceil.f32(float %83) #9
  %89 = fptosi float %88 to i32
  %90 = icmp slt i32 %19, %89
  %91 = select i1 %90, i32 %19, i32 %89
  %92 = load i32, i32* %22, align 4
  %93 = mul nsw i32 %92, %38
  %94 = add nsw i32 %93, %59
  %95 = load i32, i32* %24, align 4
  %96 = mul nsw i32 %94, %95
  %97 = load i32, i32* %26, align 4
  %98 = add nsw i32 %93, %63
  %99 = mul nsw i32 %98, %95
  %100 = sitofp i32 %87 to float
  %101 = fsub float %83, %100
  %102 = fsub float 1.000000e+00, %101
  %103 = fmul float %67, %102
  %104 = fmul float %67, %101
  %105 = fmul float %66, %102
  %106 = fmul float %66, %101
  br i1 %27, label %107, label %190

107:                                              ; preds = %82
  %108 = add nsw i32 %99, %91
  %109 = mul nsw i32 %108, %97
  %110 = add nsw i32 %99, %87
  %111 = mul nsw i32 %110, %97
  %112 = add nsw i32 %96, %91
  %113 = mul nsw i32 %112, %97
  %114 = add nsw i32 %96, %87
  %115 = mul nsw i32 %114, %97
  %116 = sext i32 %115 to i64
  %117 = sext i32 %113 to i64
  %118 = sext i32 %111 to i64
  %119 = sext i32 %109 to i64
  br i1 %33, label %120, label %123

120:                                              ; preds = %189, %123, %107
  %121 = phi i64 [ 0, %123 ], [ 0, %107 ], [ %34, %189 ]
  %122 = phi i8* [ %73, %123 ], [ %73, %107 ], [ %149, %189 ]
  br label %194

123:                                              ; preds = %107
  %124 = getelementptr i8, i8* %73, i64 %28
  %125 = getelementptr i8, i8* %9, i64 %119
  %126 = getelementptr i8, i8* %29, i64 %119
  %127 = getelementptr i8, i8* %9, i64 %118
  %128 = getelementptr i8, i8* %30, i64 %118
  %129 = getelementptr i8, i8* %9, i64 %117
  %130 = getelementptr i8, i8* %31, i64 %117
  %131 = getelementptr i8, i8* %9, i64 %116
  %132 = getelementptr i8, i8* %32, i64 %116
  %133 = icmp ult i8* %73, %126
  %134 = icmp ult i8* %125, %124
  %135 = and i1 %133, %134
  %136 = icmp ult i8* %73, %128
  %137 = icmp ult i8* %127, %124
  %138 = and i1 %136, %137
  %139 = or i1 %135, %138
  %140 = icmp ult i8* %73, %130
  %141 = icmp ult i8* %129, %124
  %142 = and i1 %140, %141
  %143 = or i1 %139, %142
  %144 = icmp ult i8* %73, %132
  %145 = icmp ult i8* %131, %124
  %146 = and i1 %144, %145
  %147 = or i1 %143, %146
  br i1 %147, label %120, label %148

148:                                              ; preds = %123
  %149 = getelementptr i8, i8* %73, i64 %34
  %150 = insertelement <16 x float> undef, float %103, i32 0
  %151 = shufflevector <16 x float> %150, <16 x float> undef, <16 x i32> zeroinitializer
  %152 = insertelement <16 x float> undef, float %104, i32 0
  %153 = shufflevector <16 x float> %152, <16 x float> undef, <16 x i32> zeroinitializer
  %154 = insertelement <16 x float> undef, float %105, i32 0
  %155 = shufflevector <16 x float> %154, <16 x float> undef, <16 x i32> zeroinitializer
  %156 = insertelement <16 x float> undef, float %106, i32 0
  %157 = shufflevector <16 x float> %156, <16 x float> undef, <16 x i32> zeroinitializer
  br label %158

158:                                              ; preds = %158, %148
  %159 = phi i64 [ 0, %148 ], [ %187, %158 ]
  %160 = getelementptr i8, i8* %73, i64 %159
  %161 = getelementptr inbounds i8, i8* %9, i64 %159
  %162 = getelementptr inbounds i8, i8* %161, i64 %116
  %163 = bitcast i8* %162 to <16 x i8>*
  %164 = load <16 x i8>, <16 x i8>* %163, align 1, !alias.scope !225
  %165 = uitofp <16 x i8> %164 to <16 x float>
  %166 = fmul <16 x float> %151, %165
  %167 = getelementptr inbounds i8, i8* %161, i64 %117
  %168 = bitcast i8* %167 to <16 x i8>*
  %169 = load <16 x i8>, <16 x i8>* %168, align 1, !alias.scope !228
  %170 = uitofp <16 x i8> %169 to <16 x float>
  %171 = fmul <16 x float> %153, %170
  %172 = fadd <16 x float> %166, %171
  %173 = getelementptr inbounds i8, i8* %161, i64 %118
  %174 = bitcast i8* %173 to <16 x i8>*
  %175 = load <16 x i8>, <16 x i8>* %174, align 1, !alias.scope !230
  %176 = uitofp <16 x i8> %175 to <16 x float>
  %177 = fmul <16 x float> %155, %176
  %178 = fadd <16 x float> %172, %177
  %179 = getelementptr inbounds i8, i8* %161, i64 %119
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !232
  %182 = uitofp <16 x i8> %181 to <16 x float>
  %183 = fmul <16 x float> %157, %182
  %184 = fadd <16 x float> %178, %183
  %185 = fptoui <16 x float> %184 to <16 x i8>
  %186 = bitcast i8* %160 to <16 x i8>*
  store <16 x i8> %185, <16 x i8>* %186, align 1, !alias.scope !234, !noalias !236
  %187 = add i64 %159, 16
  %188 = icmp eq i64 %187, %34
  br i1 %188, label %189, label %158, !llvm.loop !237

189:                                              ; preds = %158
  br i1 %35, label %190, label %120

190:                                              ; preds = %194, %189, %82
  %191 = phi i8* [ %73, %82 ], [ %149, %189 ], [ %218, %194 ]
  %192 = add nuw nsw i32 %74, 1
  %193 = icmp eq i32 %192, %5
  br i1 %193, label %68, label %72

194:                                              ; preds = %120, %194
  %195 = phi i64 [ %219, %194 ], [ %121, %120 ]
  %196 = phi i8* [ %218, %194 ], [ %122, %120 ]
  %197 = getelementptr inbounds i8, i8* %9, i64 %195
  %198 = getelementptr inbounds i8, i8* %197, i64 %116
  %199 = load i8, i8* %198, align 1
  %200 = uitofp i8 %199 to float
  %201 = fmul float %103, %200
  %202 = getelementptr inbounds i8, i8* %197, i64 %117
  %203 = load i8, i8* %202, align 1
  %204 = uitofp i8 %203 to float
  %205 = fmul float %104, %204
  %206 = fadd float %201, %205
  %207 = getelementptr inbounds i8, i8* %197, i64 %118
  %208 = load i8, i8* %207, align 1
  %209 = uitofp i8 %208 to float
  %210 = fmul float %105, %209
  %211 = fadd float %206, %210
  %212 = getelementptr inbounds i8, i8* %197, i64 %119
  %213 = load i8, i8* %212, align 1
  %214 = uitofp i8 %213 to float
  %215 = fmul float %106, %214
  %216 = fadd float %211, %215
  %217 = fptoui float %216 to i8
  %218 = getelementptr inbounds i8, i8* %196, i64 1
  store i8 %217, i8* %196, align 1
  %219 = add nuw nsw i64 %195, 1
  %220 = icmp eq i64 %219, %28
  br i1 %220, label %190, label %194, !llvm.loop !238
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!5 = distinct !{!5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!8 = distinct !{!8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!11 = distinct !{!11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!14 = distinct !{!14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!17 = distinct !{!17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!20 = distinct !{!20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!23 = distinct !{!23, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!26 = distinct !{!26, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!29 = distinct !{!29, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!32 = distinct !{!32, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!35 = distinct !{!35, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!38 = distinct !{!38, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!41 = distinct !{!41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!44 = distinct !{!44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!47 = distinct !{!47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!50 = distinct !{!50, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!53 = distinct !{!53, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!56 = distinct !{!56, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!59 = distinct !{!59, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!62 = distinct !{!62, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!65 = distinct !{!65, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!68 = distinct !{!68, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!71 = distinct !{!71, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!74 = distinct !{!74, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!77 = distinct !{!77, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!80 = distinct !{!80, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!83 = distinct !{!83, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!86 = distinct !{!86, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!87 = distinct !{!87, !88}
!88 = !{!"llvm.loop.isvectorized", i32 1}
!89 = distinct !{!89, !90}
!90 = !{!"llvm.loop.unroll.disable"}
!91 = distinct !{!91, !92, !88}
!92 = !{!"llvm.loop.unroll.runtime.disable"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!95 = distinct !{!95, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!96 = distinct !{!96, !88}
!97 = distinct !{!97, !90}
!98 = distinct !{!98, !92, !88}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!101 = distinct !{!101, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!102 = distinct !{!102, !88}
!103 = distinct !{!103, !90}
!104 = distinct !{!104, !92, !88}
!105 = !{!106}
!106 = distinct !{!106, !107}
!107 = distinct !{!107, !"LVerDomain"}
!108 = !{!109}
!109 = distinct !{!109, !107}
!110 = !{!111}
!111 = distinct !{!111, !107}
!112 = !{!113}
!113 = distinct !{!113, !107}
!114 = !{!115}
!115 = distinct !{!115, !107}
!116 = !{!113, !111, !109, !106}
!117 = distinct !{!117, !88}
!118 = distinct !{!118, !88}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!121 = distinct !{!121, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!122 = distinct !{!122, !88}
!123 = distinct !{!123, !90}
!124 = distinct !{!124, !92, !88}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!127 = distinct !{!127, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!128 = distinct !{!128, !88}
!129 = distinct !{!129, !90}
!130 = distinct !{!130, !92, !88}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!133 = distinct !{!133, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!134 = distinct !{!134, !88}
!135 = distinct !{!135, !90}
!136 = distinct !{!136, !92, !88}
!137 = !{!138}
!138 = distinct !{!138, !139}
!139 = distinct !{!139, !"LVerDomain"}
!140 = !{!141}
!141 = distinct !{!141, !139}
!142 = !{!143}
!143 = distinct !{!143, !139}
!144 = !{!145}
!145 = distinct !{!145, !139}
!146 = !{!147}
!147 = distinct !{!147, !139}
!148 = !{!145, !143, !141, !138}
!149 = distinct !{!149, !88}
!150 = distinct !{!150, !88}
!151 = !{!152}
!152 = distinct !{!152, !153, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!153 = distinct !{!153, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!154 = distinct !{!154, !88}
!155 = distinct !{!155, !90}
!156 = distinct !{!156, !92, !88}
!157 = !{!158}
!158 = distinct !{!158, !159, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!159 = distinct !{!159, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!160 = distinct !{!160, !88}
!161 = distinct !{!161, !90}
!162 = distinct !{!162, !92, !88}
!163 = !{!164}
!164 = distinct !{!164, !165, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!165 = distinct !{!165, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!166 = distinct !{!166, !88}
!167 = distinct !{!167, !90}
!168 = distinct !{!168, !92, !88}
!169 = !{!170}
!170 = distinct !{!170, !171, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!171 = distinct !{!171, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!172 = distinct !{!172, !88}
!173 = distinct !{!173, !90}
!174 = distinct !{!174, !92, !88}
!175 = !{!176}
!176 = distinct !{!176, !177, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!177 = distinct !{!177, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!178 = distinct !{!178, !88}
!179 = distinct !{!179, !90}
!180 = distinct !{!180, !92, !88}
!181 = !{!182}
!182 = distinct !{!182, !183, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!183 = distinct !{!183, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!184 = distinct !{!184, !88}
!185 = distinct !{!185, !90}
!186 = distinct !{!186, !92, !88}
!187 = !{!188}
!188 = distinct !{!188, !189, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!189 = distinct !{!189, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!190 = distinct !{!190, !88}
!191 = distinct !{!191, !90}
!192 = distinct !{!192, !92, !88}
!193 = !{!194}
!194 = distinct !{!194, !195}
!195 = distinct !{!195, !"LVerDomain"}
!196 = !{!197}
!197 = distinct !{!197, !195}
!198 = distinct !{!198, !88}
!199 = distinct !{!199, !90}
!200 = distinct !{!200, !88}
!201 = !{!202}
!202 = distinct !{!202, !203}
!203 = distinct !{!203, !"LVerDomain"}
!204 = !{!205}
!205 = distinct !{!205, !203}
!206 = distinct !{!206, !88}
!207 = distinct !{!207, !90}
!208 = distinct !{!208, !88}
!209 = !{!210}
!210 = distinct !{!210, !211}
!211 = distinct !{!211, !"LVerDomain"}
!212 = !{!213}
!213 = distinct !{!213, !211}
!214 = distinct !{!214, !88}
!215 = distinct !{!215, !90}
!216 = distinct !{!216, !88}
!217 = !{!218}
!218 = distinct !{!218, !219}
!219 = distinct !{!219, !"LVerDomain"}
!220 = !{!221}
!221 = distinct !{!221, !219}
!222 = distinct !{!222, !88}
!223 = distinct !{!223, !90}
!224 = distinct !{!224, !88}
!225 = !{!226}
!226 = distinct !{!226, !227}
!227 = distinct !{!227, !"LVerDomain"}
!228 = !{!229}
!229 = distinct !{!229, !227}
!230 = !{!231}
!231 = distinct !{!231, !227}
!232 = !{!233}
!233 = distinct !{!233, !227}
!234 = !{!235}
!235 = distinct !{!235, !227}
!236 = !{!233, !231, !229, !226}
!237 = distinct !{!237, !88}
!238 = distinct !{!238, !88}
