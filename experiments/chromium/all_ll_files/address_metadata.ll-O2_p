; ModuleID = '../../third_party/libaddressinput/src/cpp/src/address_metadata.cc'
source_filename = "../../third_party/libaddressinput/src/cpp/src/address_metadata.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.i18n::addressinput::Rule" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.6", %"class.std::__1::vector.13", %"class.std::__1::vector.13", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", i32, i32, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"*, %"class.std::__1::__compressed_pair.1" }
%"class.i18n::addressinput::FormatElement" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.i18n::addressinput::FormatElement"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.i18n::addressinput::RE2ptr"* }
%"struct.i18n::addressinput::RE2ptr" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4i18n12addressinput15IsFieldRequiredENS0_12AddressFieldERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.i18n::addressinput::Rule", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp eq i32 %0, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.i18n::addressinput::Rule"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 288, i1 false)
  call void @_ZN4i18n12addressinput4RuleC1Ev(%"class.i18n::addressinput::Rule"* nonnull %3) #5
  %8 = call dereferenceable(288) %"class.i18n::addressinput::Rule"* @_ZN4i18n12addressinput4Rule10GetDefaultEv() #5
  call void @_ZN4i18n12addressinput4Rule8CopyFromERKS1_(%"class.i18n::addressinput::Rule"* nonnull %3, %"class.i18n::addressinput::Rule"* dereferenceable(288) %8) #5
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #5
  call void @_ZN4i18n12addressinput19RegionDataConstants13GetRegionDataERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #5
  %10 = call zeroext i1 @_ZN4i18n12addressinput4Rule19ParseSerializedRuleERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::Rule"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #5
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %17) #6
  br label %18

18:                                               ; preds = %6, %15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #5
  br i1 %10, label %19, label %35

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.i18n::addressinput::Rule", %"class.i18n::addressinput::Rule"* %3, i64 0, i32 3, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds %"class.i18n::addressinput::Rule", %"class.i18n::addressinput::Rule"* %3, i64 0, i32 3, i32 0, i32 1
  %23 = load i32*, i32** %22, align 8
  %24 = icmp eq i32* %21, %23
  br i1 %24, label %32, label %25

25:                                               ; preds = %19, %29
  %26 = phi i32* [ %30, %29 ], [ %21, %19 ]
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %26, i64 1
  %31 = icmp eq i32* %30, %23
  br i1 %31, label %32, label %25

32:                                               ; preds = %25, %29, %19
  %33 = phi i32* [ %21, %19 ], [ %26, %25 ], [ %23, %29 ]
  %34 = icmp ne i32* %33, %23
  br label %35

35:                                               ; preds = %18, %32
  %36 = phi i1 [ %34, %32 ], [ false, %18 ]
  call void @_ZN4i18n12addressinput4RuleD1Ev(%"class.i18n::addressinput::Rule"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %7) #5
  br label %37

37:                                               ; preds = %2, %35
  %38 = phi i1 [ %36, %35 ], [ true, %2 ]
  ret i1 %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4i18n12addressinput4RuleC1Ev(%"class.i18n::addressinput::Rule"*) unnamed_addr #2

declare void @_ZN4i18n12addressinput4Rule8CopyFromERKS1_(%"class.i18n::addressinput::Rule"*, %"class.i18n::addressinput::Rule"* dereferenceable(288)) local_unnamed_addr #2

declare dereferenceable(288) %"class.i18n::addressinput::Rule"* @_ZN4i18n12addressinput4Rule10GetDefaultEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4i18n12addressinput4Rule19ParseSerializedRuleERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::Rule"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4i18n12addressinput19RegionDataConstants13GetRegionDataERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4i18n12addressinput4RuleD1Ev(%"class.i18n::addressinput::Rule"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4i18n12addressinput11IsFieldUsedENS0_12AddressFieldERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.i18n::addressinput::Rule", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.i18n::addressinput::FormatElement", align 8
  %6 = icmp eq i32 %0, 0
  br i1 %6, label %48, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.i18n::addressinput::Rule"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 288, i1 false)
  call void @_ZN4i18n12addressinput4RuleC1Ev(%"class.i18n::addressinput::Rule"* nonnull %3) #5
  %9 = call dereferenceable(288) %"class.i18n::addressinput::Rule"* @_ZN4i18n12addressinput4Rule10GetDefaultEv() #5
  call void @_ZN4i18n12addressinput4Rule8CopyFromERKS1_(%"class.i18n::addressinput::Rule"* nonnull %3, %"class.i18n::addressinput::Rule"* dereferenceable(288) %9) #5
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #5
  call void @_ZN4i18n12addressinput19RegionDataConstants13GetRegionDataERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #5
  %11 = call zeroext i1 @_ZN4i18n12addressinput4Rule19ParseSerializedRuleERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::Rule"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #5
  %12 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #6
  br label %19

19:                                               ; preds = %7, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #5
  br i1 %11, label %20, label %46

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.i18n::addressinput::Rule", %"class.i18n::addressinput::Rule"* %3, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %21, align 8
  %23 = getelementptr inbounds %"class.i18n::addressinput::Rule", %"class.i18n::addressinput::Rule"* %3, i64 0, i32 1, i32 0, i32 1
  %24 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %23, align 8
  %25 = bitcast %"class.i18n::addressinput::FormatElement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #5
  call void @_ZN4i18n12addressinput13FormatElementC1ENS0_12AddressFieldE(%"class.i18n::addressinput::FormatElement"* nonnull %5, i32 %0) #5
  %26 = icmp eq %"class.i18n::addressinput::FormatElement"* %22, %24
  br i1 %26, label %33, label %27

27:                                               ; preds = %20, %30
  %28 = phi %"class.i18n::addressinput::FormatElement"* [ %31, %30 ], [ %22, %20 ]
  %29 = call zeroext i1 @_ZNK4i18n12addressinput13FormatElementeqERKS1_(%"class.i18n::addressinput::FormatElement"* %28, %"class.i18n::addressinput::FormatElement"* nonnull dereferenceable(32) %5) #5
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %28, i64 1
  %32 = icmp eq %"class.i18n::addressinput::FormatElement"* %31, %24
  br i1 %32, label %33, label %27

33:                                               ; preds = %27, %30, %20
  %34 = phi %"class.i18n::addressinput::FormatElement"* [ %22, %20 ], [ %28, %27 ], [ %24, %30 ]
  %35 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %23, align 8
  %36 = icmp ne %"class.i18n::addressinput::FormatElement"* %34, %35
  %37 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %5, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #6
  br label %45

45:                                               ; preds = %33, %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #5
  br label %46

46:                                               ; preds = %19, %45
  %47 = phi i1 [ %36, %45 ], [ false, %19 ]
  call void @_ZN4i18n12addressinput4RuleD1Ev(%"class.i18n::addressinput::Rule"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %8) #5
  br label %48

48:                                               ; preds = %2, %46
  %49 = phi i1 [ %47, %46 ], [ true, %2 ]
  ret i1 %49
}

declare void @_ZN4i18n12addressinput13FormatElementC1ENS0_12AddressFieldE(%"class.i18n::addressinput::FormatElement"*, i32) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare zeroext i1 @_ZNK4i18n12addressinput13FormatElementeqERKS1_(%"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"* dereferenceable(32)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
