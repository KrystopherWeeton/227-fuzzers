; ModuleID = '../../gpu/command_buffer/service/shared_memory_region_wrapper.cc'
source_filename = "../../gpu/command_buffer/service/shared_memory_region_wrapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::SharedMemoryRegionWrapper" = type { %"class.base::WritableSharedMemoryMapping", i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.gfx::GpuMemoryBufferHandle" = type { i32, %"class.gfx::GenericSharedMemoryId", %"class.base::UnsafeSharedMemoryRegion", i32, i32, %"struct.gfx::NativePixmapHandle" }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gfx::NativePixmapPlane"* }
%"class.gfx::Size" = type { i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

@.str = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"offset <= size()\00", align 1

@_ZN3gpu25SharedMemoryRegionWrapperC1Ev = hidden unnamed_addr alias void (%"class.gpu::SharedMemoryRegionWrapper"*), void (%"class.gpu::SharedMemoryRegionWrapper"*)* @_ZN3gpu25SharedMemoryRegionWrapperC2Ev
@_ZN3gpu25SharedMemoryRegionWrapperC1EOS0_ = hidden unnamed_addr alias void (%"class.gpu::SharedMemoryRegionWrapper"*, %"class.gpu::SharedMemoryRegionWrapper"*), void (%"class.gpu::SharedMemoryRegionWrapper"*, %"class.gpu::SharedMemoryRegionWrapper"*)* @_ZN3gpu25SharedMemoryRegionWrapperC2EOS0_
@_ZN3gpu25SharedMemoryRegionWrapperD1Ev = hidden unnamed_addr alias void (%"class.gpu::SharedMemoryRegionWrapper"*), void (%"class.gpu::SharedMemoryRegionWrapper"*)* @_ZN3gpu25SharedMemoryRegionWrapperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu25SharedMemoryRegionWrapperC2Ev(%"class.gpu::SharedMemoryRegionWrapper"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0
  tail call void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"* %2) #6
  %3 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 1
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu25SharedMemoryRegionWrapperC2EOS0_(%"class.gpu::SharedMemoryRegionWrapper"*, %"class.gpu::SharedMemoryRegionWrapper"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %1, i64 0, i32 0
  tail call void @_ZN4base27WritableSharedMemoryMappingC1EOS0_(%"class.base::WritableSharedMemoryMapping"* %3, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48) %4) #6
  %5 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %1, i64 0, i32 1
  %7 = bitcast i64* %5 to i8*
  %8 = bitcast i64* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base27WritableSharedMemoryMappingC1EOS0_(%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.gpu::SharedMemoryRegionWrapper"* @_ZN3gpu25SharedMemoryRegionWrapperaSEOS0_(%"class.gpu::SharedMemoryRegionWrapper"* returned, %"class.gpu::SharedMemoryRegionWrapper"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %3, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48) %4) #6
  %6 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %1, i64 0, i32 1
  %8 = bitcast i64* %6 to i8*
  %9 = bitcast i64* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  ret %"class.gpu::SharedMemoryRegionWrapper"* %0
}

; Function Attrs: nounwind
declare dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu25SharedMemoryRegionWrapperD2Ev(%"class.gpu::SharedMemoryRegionWrapper"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %2) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu25SharedMemoryRegionWrapper10InitializeERKN3gfx21GpuMemoryBufferHandleERKNS1_4SizeEN3viz14ResourceFormatE(%"class.gpu::SharedMemoryRegionWrapper"*, %"struct.gfx::GpuMemoryBufferHandle"* dereferenceable(112), %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::WritableSharedMemoryMapping", align 8
  %6 = getelementptr inbounds %"struct.gfx::GpuMemoryBufferHandle", %"struct.gfx::GpuMemoryBufferHandle"* %1, i64 0, i32 2
  %7 = tail call zeroext i1 @_ZNK4base24UnsafeSharedMemoryRegion7IsValidEv(%"class.base::UnsafeSharedMemoryRegion"* %6) #6
  br i1 %7, label %8, label %78

8:                                                ; preds = %4
  %9 = bitcast %"class.gfx::Size"* %2 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr inbounds %"struct.gfx::GpuMemoryBufferHandle", %"struct.gfx::GpuMemoryBufferHandle"* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = trunc i64 %10 to i32
  %14 = icmp slt i32 %12, 0
  %15 = icmp slt i32 %13, 1
  %16 = or i1 %15, %14
  br i1 %16, label %78, label %17

17:                                               ; preds = %8
  %18 = tail call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %3) #6
  %19 = tail call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %18, i32 %13) #6
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = icmp sgt i32 %21, 2147483640
  %23 = or i1 %20, %22
  br i1 %23, label %78, label %24

24:                                               ; preds = %17
  %25 = icmp sgt i32 %21, 0
  %26 = add nuw nsw i32 %21, 7
  %27 = select i1 %25, i32 %26, i32 %21
  %28 = select i1 %25, i32 %26, i32 %21
  %29 = srem i32 %27, 8
  %30 = sub i32 %28, %29
  %31 = sdiv i32 %30, 8
  %32 = icmp sgt i32 %31, %12
  br i1 %32, label %78, label %33

33:                                               ; preds = %24
  %34 = tail call i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32 %3) #6
  switch i32 %34, label %78 [
    i32 64, label %35
    i32 32, label %35
    i32 16, label %35
    i32 8, label %40
    i32 4, label %40
  ]

35:                                               ; preds = %33, %33, %33
  %36 = lshr i32 %34, 3
  %37 = and i32 %36, 31
  %38 = srem i32 %12, %37
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %78

40:                                               ; preds = %35, %33, %33
  %41 = tail call i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() #6
  %42 = getelementptr inbounds %"struct.gfx::GpuMemoryBufferHandle", %"struct.gfx::GpuMemoryBufferHandle"* %1, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = urem i64 %44, %41
  %46 = load i32, i32* %11, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %46, 0
  br i1 %50, label %78, label %51

51:                                               ; preds = %40
  %52 = icmp slt i32 %49, 0
  %53 = icmp ne i32 %46, 0
  %54 = and i1 %53, %52
  br i1 %54, label %78, label %55, !prof !2

55:                                               ; preds = %51
  %56 = sext i32 %49 to i64
  %57 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %47, i64 %56) #6
  %58 = extractvalue { i64, i1 } %57, 1
  br i1 %58, label %78, label %59

59:                                               ; preds = %55
  %60 = extractvalue { i64, i1 } %57, 0
  %61 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %60, i64 %45) #6
  %62 = extractvalue { i64, i1 } %61, 1
  br i1 %62, label %78, label %63

63:                                               ; preds = %59
  %64 = extractvalue { i64, i1 } %61, 0
  %65 = sub nsw i64 %44, %45
  %66 = bitcast %"class.base::WritableSharedMemoryMapping"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %66) #6
  call void @_ZNK4base24UnsafeSharedMemoryRegion5MapAtElm(%"class.base::WritableSharedMemoryMapping"* nonnull sret %5, %"class.base::UnsafeSharedMemoryRegion"* %6, i64 %65, i64 %64) #6
  %67 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0
  %68 = call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %67, %"class.base::WritableSharedMemoryMapping"* nonnull dereferenceable(48) %5) #6
  %69 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %5, i64 0, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* nonnull %69) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %66) #6
  %70 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0, i32 0, i32 1
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %63
  %74 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 1
  store i64 %45, i64* %74, align 8
  %75 = load i32, i32* %11, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 2
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %73, %55, %40, %51, %59, %63, %17, %33, %35, %24, %8, %4
  %79 = phi i1 [ false, %4 ], [ false, %8 ], [ false, %24 ], [ false, %35 ], [ false, %33 ], [ false, %17 ], [ true, %73 ], [ false, %59 ], [ false, %63 ], [ false, %55 ], [ false, %40 ], [ false, %51 ]
  ret i1 %79
}

declare zeroext i1 @_ZNK4base24UnsafeSharedMemoryRegion7IsValidEv(%"class.base::UnsafeSharedMemoryRegion"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i64 @_ZN4base7SysInfo23VMAllocationGranularityEv() local_unnamed_addr #1

declare void @_ZNK4base24UnsafeSharedMemoryRegion5MapAtElm(%"class.base::WritableSharedMemoryMapping"* sret, %"class.base::UnsafeSharedMemoryRegion"*, i64, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu25SharedMemoryRegionWrapper7IsValidEv(%"class.gpu::SharedMemoryRegionWrapper"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK3gpu25SharedMemoryRegionWrapper9GetMemoryEv(%"class.gpu::SharedMemoryRegionWrapper"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = select i1 %8, i8* null, i8* %3
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i8* [ %9, %5 ], [ null, %1 ]
  %12 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  ret i8* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8* } @_ZNK3gpu25SharedMemoryRegionWrapper15GetMemoryAsSpanEv(%"class.gpu::SharedMemoryRegionWrapper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i64 [ 0, %1 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #6
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  br label %17

17:                                               ; preds = %9, %14
  %18 = sub i64 %10, %12
  %19 = getelementptr inbounds i8, i8* %4, i64 %12
  %20 = insertvalue { i64, i8* } undef, i64 %18, 0
  %21 = insertvalue { i64, i8* } %20, i8* %19, 1
  ret { i64, i8* } %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3gpu25SharedMemoryRegionWrapper9GetStrideEv(%"class.gpu::SharedMemoryRegionWrapper"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedMemoryRegionWrapper", %"class.gpu::SharedMemoryRegionWrapper"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare i32 @_ZN3viz12BitsPerPixelENS_14ResourceFormatE(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 4001}
