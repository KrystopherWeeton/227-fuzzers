; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_colorspace.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_colorspace.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.PatternValue = type { %"class.fxcrt::RetainPtr", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.147", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.0", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.20", %"class.fxcrt::RetainPtr.37", %"class.fxcrt::RetainPtr.37", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::vector.133", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.141" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.15" }
%"class.fxcrt::RetainPtr.15" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.294" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.297", %"class.std::__1::__compressed_pair.305", %"class.std::__1::__compressed_pair.310", %"class.std::__1::__compressed_pair.312", [4 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299", %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { float }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.27", %"class.fxcrt::UnownedPtr.33", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.34", i64, %"class.fxcrt::RetainPtr.66", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.78", %"class.std::__1::map.84", %"class.std::__1::set.93", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.33" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.37", %"class.std::__1::map.54" }
%"class.std::__1::map.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.fxcrt::RetainPtr.66" = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.72" }
%"class.fxcrt::RetainPtr.72" = type { %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.84" = type { %"class.std::__1::__tree.85" }
%"class.std::__1::__tree.85" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::set.93" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.fxcrt::RetainPtr.37" = type { %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.41" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::map.41" = type { %"class.std::__1::__tree.42" }
%"class.std::__1::__tree.42" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.104" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { i32*, i32*, %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.140" }
%"class.fxcrt::UnownedPtr.140" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.fxcrt::RetainPtr.147" = type { %"class.std::__1::unique_ptr.148" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %class.CPDF_Object* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"struct.std::__1::array" = type { [16 x float] }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.160", %"class.fxcrt::RetainPtr.161", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.160" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.161" = type { %"class.std::__1::unique_ptr.162" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %class.CPDF_Array* }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.165", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"class.fxcrt::RetainPtr.147"*, %"class.fxcrt::RetainPtr.147"*, %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.fxcrt::RetainPtr.147"* }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.155", i64 }
%"class.fxcrt::UnownedPtr.155" = type { float* }
%"class.fxcrt::RetainPtr.156" = type { %"class.std::__1::unique_ptr.157" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %class.CPDF_ColorSpace* }
%class.CPDF_PageModule = type { %"class.fxcrt::RetainPtr.176", %"class.fxcrt::RetainPtr.176", %"class.fxcrt::RetainPtr.176", %"class.fxcrt::RetainPtr.182" }
%"class.fxcrt::RetainPtr.176" = type { %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %class.CPDF_DeviceCS* }
%class.CPDF_DeviceCS = type { %class.CPDF_ColorSpace.base, [4 x i8] }
%class.CPDF_ColorSpace.base = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.160", %"class.fxcrt::RetainPtr.161", i32, i32, i32 }>
%"class.fxcrt::RetainPtr.182" = type { %"class.std::__1::unique_ptr.183" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %class.CPDF_PatternCS* }
%class.CPDF_PatternCS = type { %class.CPDF_ColorSpace.base, %"class.fxcrt::RetainPtr.156" }
%"class.std::__1::set.188" = type { %"class.std::__1::__tree.189" }
%"class.std::__1::__tree.189" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %class.CPDF_Object* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%class.CPDF_DictionaryLocker = type { %"class.fxcrt::RetainPtr.209" }
%"class.fxcrt::RetainPtr.209" = type { %"class.std::__1::unique_ptr.210" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %class.CPDF_Dictionary* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.37", %"class.std::__1::unique_ptr.199", %"class.fxcrt::RetainPtr.203" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { i8* }
%"class.fxcrt::RetainPtr.203" = type { %"class.std::__1::unique_ptr.204" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%class.CPDF_Name = type { %class.CPDF_Object, %"class.fxcrt::ByteString" }
%class.CPDF_IccProfile = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", i8, i32, %"class.fxcrt::RetainPtr.243", %"class.std::__1::unique_ptr.249" }
%"class.fxcrt::RetainPtr.243" = type { %"class.std::__1::unique_ptr.244" }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %class.CPDF_Stream* }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.fxcodec::CLcmsCmm"* }
%"class.fxcodec::CLcmsCmm" = type <{ i8*, i32, i8, i8, [2 x i8] }>
%class.CPDF_Function = type { i32 (...)**, i32, i32, i32, %"class.std::__1::vector.261", %"class.std::__1::vector.261" }
%"class.std::__1::vector.261" = type { %"class.std::__1::__vector_base.262" }
%"class.std::__1::__vector_base.262" = type { float*, float*, %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { float* }
%"class.(anonymous namespace)::CPDF_CalGray" = type { %class.CPDF_ColorSpace.base, float, [3 x float], [3 x float] }
%"class.(anonymous namespace)::CPDF_CalRGB" = type <{ %class.CPDF_ColorSpace.base, [3 x float], [3 x float], [3 x float], [9 x float], i8, i8, [2 x i8] }>
%"class.(anonymous namespace)::CPDF_LabCS" = type { %class.CPDF_ColorSpace.base, [3 x float], [3 x float], [4 x float], [4 x i8] }
%"class.(anonymous namespace)::CPDF_ICCBasedCS" = type { %class.CPDF_ColorSpace.base, %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.239", %"class.std::__1::vector.257", %"class.std::__1::vector.261" }
%"class.fxcrt::RetainPtr.239" = type { %"class.std::__1::unique_ptr.240" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %class.CPDF_IccProfile* }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { i8*, i8*, %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%class.CPDF_DocPageData = type { %"class.CPDF_Document::PageDataIface", %"class.CPDF_Font::FormFactoryIface", i8, %"class.std::__1::map.343", %"class.std::__1::map.352", %"class.std::__1::map.361", %"class.std::__1::map.372", %"class.std::__1::map.381", %"class.std::__1::map.390", %"class.std::__1::map.399" }
%"class.CPDF_Font::FormFactoryIface" = type { i32 (...)** }
%"class.std::__1::map.343" = type { %"class.std::__1::__tree.344" }
%"class.std::__1::__tree.344" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::map.352" = type { %"class.std::__1::__tree.353" }
%"class.std::__1::__tree.353" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::map.361" = type { %"class.std::__1::__tree.362" }
%"class.std::__1::__tree.362" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.363", %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::map.372" = type { %"class.std::__1::__tree.373" }
%"class.std::__1::__tree.373" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::map.381" = type { %"class.std::__1::__tree.382" }
%"class.std::__1::__tree.382" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::map.390" = type { %"class.std::__1::__tree.391" }
%"class.std::__1::__tree.391" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.392", %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::map.399" = type { %"class.std::__1::__tree.400" }
%"class.std::__1::__tree.400" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.401", %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.(anonymous namespace)::CPDF_IndexedCS" = type { %class.CPDF_ColorSpace.base, %"class.fxcrt::RetainPtr.156", i32, i32, %"class.fxcrt::ByteString", %"class.std::__1::vector.261" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.322" }
%"class.pdfium::span.322" = type { %"class.fxcrt::UnownedPtr.323", i64 }
%"class.fxcrt::UnownedPtr.323" = type { i8* }
%"class.pdfium::span.419" = type { %"class.fxcrt::UnownedPtr.416", i64 }
%"class.fxcrt::UnownedPtr.416" = type { i8* }
%class.CPDF_String = type <{ %class.CPDF_Object, %"class.fxcrt::ByteString", i8, [7 x i8] }>
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.209", %"class.fxcrt::RetainPtr.243" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.199", %"class.fxcrt::UnownedPtr.416" }
%"class.(anonymous namespace)::CPDF_SeparationCS" = type { %class.CPDF_ColorSpace.base, i32, %"class.fxcrt::RetainPtr.156", %"class.std::__1::unique_ptr.280" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %class.CPDF_Function* }
%"class.(anonymous namespace)::CPDF_DeviceNCS" = type { %class.CPDF_ColorSpace.base, %"class.fxcrt::RetainPtr.156", %"class.std::__1::unique_ptr.280" }

$_ZN5fxcrt10RetainableD2Ev = comdat any

$_ZN5fxcrt10RetainableD0Ev = comdat any

$_ZNSt3__16__treeIPK11CPDF_ObjectNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN5fxcrt10RetainableE = comdat any

@.str = private unnamed_addr constant [10 x i8] c"DeviceRGB\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"RGB\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"DeviceGray\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"G\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"DeviceCMYK\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"CMYK\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"Pattern\00", align 1
@_ZTV15CPDF_ColorSpace = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpaceD2Ev to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpaceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)* @_ZNK15CPDF_ColorSpace15GetDefaultValueEiPfS0_S0_ to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)* @_ZNK15CPDF_ColorSpace18TranslateImageLineEPhPKhiiib to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i1)* @_ZN15CPDF_ColorSpace19EnableStdConversionEb to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace8IsNormalEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*, %class.PatternValue*, float*, float*, float*)* @_ZNK15CPDF_ColorSpace13GetPatternRGBERK12PatternValuePfS3_S3_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5fxcrt10RetainableE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD2Ev to i8*), i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD0Ev to i8*)] }, comdat, align 8
@_ZTVN12_GLOBAL__N_112CPDF_CalGrayE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpaceD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_CalGray"*)* @_ZN12_GLOBAL__N_112CPDF_CalGrayD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CPDF_CalGray"*, %"class.pdfium::span"*, float*, float*, float*)* @_ZNK12_GLOBAL__N_112CPDF_CalGray6GetRGBEN6pdfium4spanIKfEEPfS5_S5_ to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)* @_ZNK15CPDF_ColorSpace15GetDefaultValueEiPfS0_S0_ to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_CalGray"*, i8*, i8*, i32, i32, i32, i1)* @_ZNK12_GLOBAL__N_112CPDF_CalGray18TranslateImageLineEPhPKhiiib to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i1)* @_ZN15CPDF_ColorSpace19EnableStdConversionEb to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace8IsNormalEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*, %class.PatternValue*, float*, float*, float*)* @_ZNK15CPDF_ColorSpace13GetPatternRGBERK12PatternValuePfS3_S3_ to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::CPDF_CalGray"*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)* @_ZN12_GLOBAL__N_112CPDF_CalGray6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [6 x i8] c"Gamma\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"WhitePoint\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"BlackPoint\00", align 1
@_ZTVN12_GLOBAL__N_111CPDF_CalRGBE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpaceD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_CalRGB"*)* @_ZN12_GLOBAL__N_111CPDF_CalRGBD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CPDF_CalRGB"*, %"class.pdfium::span"*, float*, float*, float*)* @_ZNK12_GLOBAL__N_111CPDF_CalRGB6GetRGBEN6pdfium4spanIKfEEPfS5_S5_ to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)* @_ZNK15CPDF_ColorSpace15GetDefaultValueEiPfS0_S0_ to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_CalRGB"*, i8*, i8*, i32, i32, i32, i1)* @_ZNK12_GLOBAL__N_111CPDF_CalRGB18TranslateImageLineEPhPKhiiib to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i1)* @_ZN15CPDF_ColorSpace19EnableStdConversionEb to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace8IsNormalEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*, %class.PatternValue*, float*, float*, float*)* @_ZNK15CPDF_ColorSpace13GetPatternRGBERK12PatternValuePfS3_S3_ to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::CPDF_CalRGB"*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)* @_ZN12_GLOBAL__N_111CPDF_CalRGB6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE to i8*)] }, align 8
@_ZN12_GLOBAL__N_114g_sRGBSamples1E = internal unnamed_addr constant [192 x i8] c"\00\03\06\0A\0D\0F\12\14\16\17\19\1B\1C\1E\1F \22#$%&'()*+,-./0112345567889::;<==>>?@@ABBCCDDEFFGGHHIIJJKLLMMNNOOOPPQQRRSSTTUUUVVWWXXXYYZZ[[[\5C\5C]]]^^___``aaabbbcccddeeefffggghhhiijjjkkklllmmmnnnnooopppqqqrrrsssstttuuuvvvvwwwx", align 16
@_ZN12_GLOBAL__N_114g_sRGBSamples2E = internal unnamed_addr constant [208 x i8] c"xyz|}~align 16
@.str.11 = private unnamed_addr constant [7 x i8] c"Matrix\00", align 1
@_ZTVN12_GLOBAL__N_110CPDF_LabCSE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpaceD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_LabCS"*)* @_ZN12_GLOBAL__N_110CPDF_LabCSD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CPDF_LabCS"*, %"class.pdfium::span"*, float*, float*, float*)* @_ZNK12_GLOBAL__N_110CPDF_LabCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_ to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_LabCS"*, i32, float*, float*, float*)* @_ZNK12_GLOBAL__N_110CPDF_LabCS15GetDefaultValueEiPfS1_S1_ to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_LabCS"*, i8*, i8*, i32, i32, i32, i1)* @_ZNK12_GLOBAL__N_110CPDF_LabCS18TranslateImageLineEPhPKhiiib to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i1)* @_ZN15CPDF_ColorSpace19EnableStdConversionEb to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace8IsNormalEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*, %class.PatternValue*, float*, float*, float*)* @_ZNK15CPDF_ColorSpace13GetPatternRGBERK12PatternValuePfS3_S3_ to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::CPDF_LabCS"*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)* @_ZN12_GLOBAL__N_110CPDF_LabCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE to i8*)] }, align 8
@.str.12 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@_ZTVN12_GLOBAL__N_115CPDF_ICCBasedCSE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CPDF_ICCBasedCS"*)* @_ZN12_GLOBAL__N_115CPDF_ICCBasedCSD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_ICCBasedCS"*)* @_ZN12_GLOBAL__N_115CPDF_ICCBasedCSD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CPDF_ICCBasedCS"*, %"class.pdfium::span"*, float*, float*, float*)* @_ZNK12_GLOBAL__N_115CPDF_ICCBasedCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_ to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)* @_ZNK15CPDF_ColorSpace15GetDefaultValueEiPfS0_S0_ to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_ICCBasedCS"*, i8*, i8*, i32, i32, i32, i1)* @_ZNK12_GLOBAL__N_115CPDF_ICCBasedCS18TranslateImageLineEPhPKhiiib to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_ICCBasedCS"*, i1)* @_ZN12_GLOBAL__N_115CPDF_ICCBasedCS19EnableStdConversionEb to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CPDF_ICCBasedCS"*)* @_ZNK12_GLOBAL__N_115CPDF_ICCBasedCS8IsNormalEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*, %class.PatternValue*, float*, float*, float*)* @_ZNK15CPDF_ColorSpace13GetPatternRGBERK12PatternValuePfS3_S3_ to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::CPDF_ICCBasedCS"*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)* @_ZN12_GLOBAL__N_115CPDF_ICCBasedCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE to i8*)] }, align 8
@.str.13 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"Alternate\00", align 1
@_ZTVN12_GLOBAL__N_114CPDF_IndexedCSE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CPDF_IndexedCS"*)* @_ZN12_GLOBAL__N_114CPDF_IndexedCSD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_IndexedCS"*)* @_ZN12_GLOBAL__N_114CPDF_IndexedCSD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CPDF_IndexedCS"*, %"class.pdfium::span"*, float*, float*, float*)* @_ZNK12_GLOBAL__N_114CPDF_IndexedCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_ to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)* @_ZNK15CPDF_ColorSpace15GetDefaultValueEiPfS0_S0_ to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)* @_ZNK15CPDF_ColorSpace18TranslateImageLineEPhPKhiiib to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_IndexedCS"*, i1)* @_ZN12_GLOBAL__N_114CPDF_IndexedCS19EnableStdConversionEb to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace8IsNormalEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*, %class.PatternValue*, float*, float*, float*)* @_ZNK15CPDF_ColorSpace13GetPatternRGBERK12PatternValuePfS3_S3_ to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::CPDF_IndexedCS"*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)* @_ZN12_GLOBAL__N_114CPDF_IndexedCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_117CPDF_SeparationCSE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CPDF_SeparationCS"*)* @_ZN12_GLOBAL__N_117CPDF_SeparationCSD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_SeparationCS"*)* @_ZN12_GLOBAL__N_117CPDF_SeparationCSD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CPDF_SeparationCS"*, %"class.pdfium::span"*, float*, float*, float*)* @_ZNK12_GLOBAL__N_117CPDF_SeparationCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_ to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_SeparationCS"*, i32, float*, float*, float*)* @_ZNK12_GLOBAL__N_117CPDF_SeparationCS15GetDefaultValueEiPfS1_S1_ to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)* @_ZNK15CPDF_ColorSpace18TranslateImageLineEPhPKhiiib to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_SeparationCS"*, i1)* @_ZN12_GLOBAL__N_117CPDF_SeparationCS19EnableStdConversionEb to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace8IsNormalEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*, %class.PatternValue*, float*, float*, float*)* @_ZNK15CPDF_ColorSpace13GetPatternRGBERK12PatternValuePfS3_S3_ to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::CPDF_SeparationCS"*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)* @_ZN12_GLOBAL__N_117CPDF_SeparationCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE to i8*)] }, align 8
@.str.15 = private unnamed_addr constant [5 x i8] c"None\00", align 1
@_ZTVN12_GLOBAL__N_114CPDF_DeviceNCSE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CPDF_DeviceNCS"*)* @_ZN12_GLOBAL__N_114CPDF_DeviceNCSD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_DeviceNCS"*)* @_ZN12_GLOBAL__N_114CPDF_DeviceNCSD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::CPDF_DeviceNCS"*, %"class.pdfium::span"*, float*, float*, float*)* @_ZNK12_GLOBAL__N_114CPDF_DeviceNCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_ to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_DeviceNCS"*, i32, float*, float*, float*)* @_ZNK12_GLOBAL__N_114CPDF_DeviceNCS15GetDefaultValueEiPfS1_S1_ to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)* @_ZNK15CPDF_ColorSpace18TranslateImageLineEPhPKhiiib to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CPDF_DeviceNCS"*, i1)* @_ZN12_GLOBAL__N_114CPDF_DeviceNCS19EnableStdConversionEb to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace8IsNormalEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace11AsPatternCSEv to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*, %class.PatternValue*, float*, float*, float*)* @_ZNK15CPDF_ColorSpace13GetPatternRGBERK12PatternValuePfS3_S3_ to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::CPDF_DeviceNCS"*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)* @_ZN12_GLOBAL__N_114CPDF_DeviceNCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE to i8*)] }, align 8
@switch.table._ZN15CPDF_ColorSpace19ComponentsForFamilyENS_6FamilyE = private unnamed_addr constant [3 x i32] [i32 1, i32 3, i32 4], align 4

@_ZN12PatternValueC1Ev = hidden unnamed_addr alias void (%class.PatternValue*), void (%class.PatternValue*)* @_ZN12PatternValueC2Ev
@_ZN12PatternValueC1ERKS_ = hidden unnamed_addr alias void (%class.PatternValue*, %class.PatternValue*), void (%class.PatternValue*, %class.PatternValue*)* @_ZN12PatternValueC2ERKS_
@_ZN12PatternValueD1Ev = hidden unnamed_addr alias void (%class.PatternValue*), void (%class.PatternValue*)* @_ZN12PatternValueD2Ev
@_ZN15CPDF_ColorSpaceD1Ev = hidden unnamed_addr alias void (%class.CPDF_ColorSpace*), void (%class.CPDF_ColorSpace*)* @_ZN15CPDF_ColorSpaceD2Ev

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN12PatternValueC2Ev(%class.PatternValue*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.PatternValue* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12PatternValueC2ERKS_(%class.PatternValue* nocapture, %class.PatternValue* nocapture readonly dereferenceable(72)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.PatternValue, %class.PatternValue* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %3, align 8
  %5 = ptrtoint %class.CPDF_Pattern* %4 to i64
  %6 = bitcast %class.PatternValue* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CPDF_Pattern* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %4, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %class.PatternValue, %class.PatternValue* %0, i64 0, i32 1
  %14 = getelementptr inbounds %class.PatternValue, %class.PatternValue* %1, i64 0, i32 1
  %15 = bitcast %"struct.std::__1::array"* %13 to i8*
  %16 = bitcast %"struct.std::__1::array"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 64, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12PatternValueD2Ev(%class.PatternValue* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.PatternValue, %class.PatternValue* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %2, align 8
  store %class.CPDF_Pattern* null, %class.CPDF_Pattern** %2, align 8
  %4 = icmp eq %class.CPDF_Pattern* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %3, i64 0, i32 0
  %12 = bitcast %class.CPDF_Pattern* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #17
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12PatternValue8SetCompsEN6pdfium4spanIKfEE(%class.PatternValue* nocapture, %"class.pdfium::span"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 16
  br i1 %5, label %6, label %7, !prof !2

6:                                                ; preds = %2
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !4
  unreachable

7:                                                ; preds = %2
  %8 = icmp eq i64 %4, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %7
  %10 = shl nuw i64 %4, 2
  %11 = bitcast %"class.pdfium::span"* %1 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %class.PatternValue, %class.PatternValue* %0, i64 0, i32 1, i32 0, i64 0
  %14 = bitcast float* %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %12, i64 %10, i1 false) #17
  br label %15

15:                                               ; preds = %7, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_ColorSpace18ColorspaceFromNameERKN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.156"* noalias sret, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #17
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #17
  br i1 %5, label %6, label %8

6:                                                ; preds = %4, %2
  %7 = tail call %class.CPDF_PageModule* @_ZN15CPDF_PageModule11GetInstanceEv() #17, !noalias !5
  tail call void @_ZN15CPDF_PageModule10GetStockCSEN15CPDF_ColorSpace6FamilyE(%"class.fxcrt::RetainPtr.156"* sret %0, %class.CPDF_PageModule* %7, i32 2) #17
  br label %26

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #17
  br i1 %9, label %12, label %10

10:                                               ; preds = %8
  %11 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #17
  br i1 %11, label %12, label %14

12:                                               ; preds = %10, %8
  %13 = tail call %class.CPDF_PageModule* @_ZN15CPDF_PageModule11GetInstanceEv() #17, !noalias !8
  tail call void @_ZN15CPDF_PageModule10GetStockCSEN15CPDF_ColorSpace6FamilyE(%"class.fxcrt::RetainPtr.156"* sret %0, %class.CPDF_PageModule* %13, i32 1) #17
  br label %26

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0)) #17
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #17
  br i1 %17, label %18, label %20

18:                                               ; preds = %16, %14
  %19 = tail call %class.CPDF_PageModule* @_ZN15CPDF_PageModule11GetInstanceEv() #17, !noalias !11
  tail call void @_ZN15CPDF_PageModule10GetStockCSEN15CPDF_ColorSpace6FamilyE(%"class.fxcrt::RetainPtr.156"* sret %0, %class.CPDF_PageModule* %19, i32 3) #17
  br label %26

20:                                               ; preds = %16
  %21 = tail call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0)) #17
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = tail call %class.CPDF_PageModule* @_ZN15CPDF_PageModule11GetInstanceEv() #17, !noalias !14
  tail call void @_ZN15CPDF_PageModule10GetStockCSEN15CPDF_ColorSpace6FamilyE(%"class.fxcrt::RetainPtr.156"* sret %0, %class.CPDF_PageModule* %23, i32 11) #17
  br label %26

24:                                               ; preds = %20
  %25 = bitcast %"class.fxcrt::RetainPtr.156"* %0 to i64*
  store i64 0, i64* %25, align 8
  br label %26

26:                                               ; preds = %24, %22, %18, %12, %6
  ret void
}

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE(%"class.fxcrt::RetainPtr.156"* noalias sret, i32) local_unnamed_addr #2 align 2 {
  %3 = tail call %class.CPDF_PageModule* @_ZN15CPDF_PageModule11GetInstanceEv() #17
  tail call void @_ZN15CPDF_PageModule10GetStockCSEN15CPDF_ColorSpace6FamilyE(%"class.fxcrt::RetainPtr.156"* sret %0, %class.CPDF_PageModule* %3, i32 %1) #17
  ret void
}

declare %class.CPDF_PageModule* @_ZN15CPDF_PageModule11GetInstanceEv() local_unnamed_addr #3

declare void @_ZN15CPDF_PageModule10GetStockCSEN15CPDF_ColorSpace6FamilyE(%"class.fxcrt::RetainPtr.156"* sret, %class.CPDF_PageModule*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_ColorSpace4LoadEP13CPDF_DocumentP11CPDF_Object(%"class.fxcrt::RetainPtr.156"* noalias sret, %class.CPDF_Document*, %class.CPDF_Object*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::set.188", align 8
  %5 = bitcast %"class.std::__1::set.188"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %6, align 8
  call void @_ZN15CPDF_ColorSpace4LoadEP13CPDF_DocumentPK11CPDF_ObjectPNSt3__13setIS4_NS5_4lessIS4_EENS5_9allocatorIS4_EEEE(%"class.fxcrt::RetainPtr.156"* sret %0, %class.CPDF_Document* %1, %class.CPDF_Object* %2, %"class.std::__1::set.188"* nonnull %4)
  %10 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %4, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  call void @_ZNSt3__16__treeIPK11CPDF_ObjectNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.189"* nonnull %10, %"class.std::__1::__tree_node"* %12) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_ColorSpace4LoadEP13CPDF_DocumentPK11CPDF_ObjectPNSt3__13setIS4_NS5_4lessIS4_EENS5_9allocatorIS4_EEEE(%"class.fxcrt::RetainPtr.156"* noalias sret, %class.CPDF_Document*, %class.CPDF_Object*, %"class.std::__1::set.188"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %class.CPDF_DictionaryLocker, align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = ptrtoint %class.CPDF_Document* %1 to i64
  %10 = ptrtoint %class.CPDF_Object* %2 to i64
  %11 = icmp eq %class.CPDF_Object* %2, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = bitcast %"class.fxcrt::RetainPtr.156"* %0 to i64*
  store i64 0, i64* %13, align 8
  br label %582

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node"**
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node"* %17, null
  br i1 %18, label %70, label %19

19:                                               ; preds = %14, %19
  %20 = phi %"class.std::__1::__tree_end_node"* [ %30, %19 ], [ %15, %14 ]
  %21 = phi %"class.std::__1::__tree_node"* [ %31, %19 ], [ %17, %14 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 1
  %23 = load %class.CPDF_Object*, %class.CPDF_Object** %22, align 8
  %24 = icmp ult %class.CPDF_Object* %23, %2
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::__tree_node_base"** %25 to %"class.std::__1::__tree_node"**
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_node"* %21 to %"class.std::__1::__tree_node"**
  %29 = select i1 %24, %"class.std::__1::__tree_node"** %26, %"class.std::__1::__tree_node"** %28
  %30 = select i1 %24, %"class.std::__1::__tree_end_node"* %20, %"class.std::__1::__tree_end_node"* %27
  %31 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %29, align 8
  %32 = icmp eq %"class.std::__1::__tree_node"* %31, null
  br i1 %32, label %33, label %19

33:                                               ; preds = %19
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %30, %15
  br i1 %34, label %42, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 4
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %class.CPDF_Object**
  %38 = load %class.CPDF_Object*, %class.CPDF_Object** %37, align 8
  %39 = icmp ugt %class.CPDF_Object* %38, %2
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.fxcrt::RetainPtr.156"* %0 to i64*
  store i64 0, i64* %41, align 8
  br label %582

42:                                               ; preds = %33, %35
  %43 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %66, %42
  %45 = phi %"class.std::__1::__tree_node"* [ %69, %66 ], [ %17, %42 ]
  %46 = phi %"class.std::__1::__tree_node_base"** [ %68, %66 ], [ %43, %42 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 1
  %48 = load %class.CPDF_Object*, %class.CPDF_Object** %47, align 8
  %49 = icmp ugt %class.CPDF_Object* %48, %2
  br i1 %49, label %50, label %56

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, null
  br i1 %53, label %54, label %66

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0
  br label %72

56:                                               ; preds = %44
  %57 = icmp ult %class.CPDF_Object* %48, %2
  br i1 %57, label %58, label %64

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 1
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0
  br label %72

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0
  br label %72

66:                                               ; preds = %58, %50
  %67 = phi %"class.std::__1::__tree_node_base"* [ %52, %50 ], [ %60, %58 ]
  %68 = phi %"class.std::__1::__tree_node_base"** [ %51, %50 ], [ %59, %58 ]
  %69 = bitcast %"class.std::__1::__tree_node_base"* %67 to %"class.std::__1::__tree_node"*
  br label %44

70:                                               ; preds = %14
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 0, i32 0
  br label %72

72:                                               ; preds = %70, %64, %62, %54
  %73 = phi %"class.std::__1::__tree_end_node"* [ %15, %70 ], [ %55, %54 ], [ %63, %62 ], [ %65, %64 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %71, %70 ], [ %51, %54 ], [ %59, %62 ], [ %46, %64 ]
  %75 = bitcast %"class.std::__1::__tree_node_base"** %74 to %"class.std::__1::__tree_node"**
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  br i1 %77, label %78, label %95

78:                                               ; preds = %72
  %79 = tail call i8* @_Znwm(i64 40) #18, !noalias !17
  %80 = getelementptr inbounds i8, i8* %79, i64 32
  %81 = bitcast i8* %80 to i64*
  store i64 %10, i64* %81, align 8, !noalias !17
  %82 = bitcast i8* %79 to %"class.std::__1::__tree_node_base"*
  %83 = getelementptr inbounds i8, i8* %79, i64 16
  %84 = bitcast i8* %83 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"** %84, align 8
  %85 = bitcast %"class.std::__1::__tree_node_base"** %74 to i8**
  store i8* %79, i8** %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %3, i64 0, i32 0, i32 0
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %78
  %92 = ptrtoint %"class.std::__1::__tree_node_base"* %89 to i64
  %93 = bitcast %"class.std::__1::set.188"* %3 to i64*
  store i64 %92, i64* %93, align 8
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  br label %96

95:                                               ; preds = %72
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !20
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !21
  unreachable

96:                                               ; preds = %91, %78
  %97 = phi %"class.std::__1::__tree_node_base"* [ %82, %78 ], [ %94, %91 ]
  %98 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %97) #17
  %100 = getelementptr inbounds %"class.std::__1::set.188", %"class.std::__1::set.188"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %100, align 8
  %103 = bitcast i8* %79 to %"class.std::__1::__tree_end_node"*
  %104 = bitcast %class.CPDF_Object* %2 to i1 (%class.CPDF_Object*)***
  %105 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %104, align 8
  %106 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %105, i64 17
  %107 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %106, align 8
  %108 = tail call zeroext i1 %107(%class.CPDF_Object* nonnull %2) #17
  br i1 %108, label %109, label %115

109:                                              ; preds = %96
  %110 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #17
  %111 = bitcast %class.CPDF_Object* %2 to void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)***
  %112 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)**, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %112, i64 7
  %114 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %113, align 8
  call void %114(%"class.fxcrt::ByteString"* nonnull sret %5, %class.CPDF_Object* nonnull %2) #17
  call void @_ZN15CPDF_ColorSpace18ColorspaceFromNameERKN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.156"* sret %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #17
  br label %545

115:                                              ; preds = %96
  %116 = bitcast %class.CPDF_Object* %2 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %117 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %116, align 8
  %118 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %117, i64 36
  %119 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %118, align 8
  %120 = tail call %class.CPDF_Stream* %119(%class.CPDF_Object* nonnull %2) #17
  %121 = icmp eq %class.CPDF_Stream* %120, null
  br i1 %121, label %194, label %122

122:                                              ; preds = %115
  %123 = tail call %class.CPDF_Dictionary* @_ZNK11CPDF_Stream7GetDictEv(%class.CPDF_Stream* nonnull %120) #17
  %124 = icmp eq %class.CPDF_Dictionary* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = bitcast %"class.fxcrt::RetainPtr.156"* %0 to i64*
  store i64 0, i64* %126, align 8
  br label %545

127:                                              ; preds = %122
  %128 = bitcast %class.CPDF_DictionaryLocker* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #17
  %129 = getelementptr inbounds %class.CPDF_DictionaryLocker, %class.CPDF_DictionaryLocker* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*), %class.CPDF_Dictionary** %129, align 8
  call void @_ZN21CPDF_DictionaryLockerC1EPK15CPDF_Dictionary(%class.CPDF_DictionaryLocker* nonnull %6, %class.CPDF_Dictionary* nonnull %123) #17
  %130 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %129, align 8
  %131 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %130, i64 0, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135, !prof !2

134:                                              ; preds = %127
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !22
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !23
  unreachable

135:                                              ; preds = %127
  %136 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %130, i64 0, i32 3, i32 0, i32 0
  %137 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %136, align 8
  %138 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %130, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %139 = icmp eq %"class.std::__1::__tree_end_node"* %137, %138
  br i1 %139, label %191, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  br label %143

143:                                              ; preds = %140, %188
  %144 = phi %"class.std::__1::__tree_end_node"* [ %137, %140 ], [ %189, %188 ]
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 5
  %146 = bitcast %"class.std::__1::__tree_end_node"* %145 to %class.CPDF_Object**
  %147 = load %class.CPDF_Object*, %class.CPDF_Object** %146, align 8
  %148 = icmp eq %class.CPDF_Object* %147, null
  br i1 %148, label %160, label %149

149:                                              ; preds = %143
  %150 = bitcast %class.CPDF_Object* %147 to %class.CPDF_Name* (%class.CPDF_Object*)***
  %151 = load %class.CPDF_Name* (%class.CPDF_Object*)**, %class.CPDF_Name* (%class.CPDF_Object*)*** %150, align 8
  %152 = getelementptr inbounds %class.CPDF_Name* (%class.CPDF_Object*)*, %class.CPDF_Name* (%class.CPDF_Object*)** %151, i64 29
  %153 = load %class.CPDF_Name* (%class.CPDF_Object*)*, %class.CPDF_Name* (%class.CPDF_Object*)** %152, align 8
  %154 = call %class.CPDF_Name* %153(%class.CPDF_Object* nonnull %147) #17
  %155 = icmp eq %class.CPDF_Name* %154, null
  br i1 %155, label %160, label %156

156:                                              ; preds = %149
  store %class.CPDF_ColorSpace* inttoptr (i64 -6148914691236517206 to %class.CPDF_ColorSpace*), %class.CPDF_ColorSpace** %141, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #17
  call void @_ZNK9CPDF_Name9GetStringEv(%"class.fxcrt::ByteString"* nonnull sret %7, %class.CPDF_Name* nonnull %154) #17
  call void @_ZN15CPDF_ColorSpace18ColorspaceFromNameERKN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.156"* sret %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #17
  %157 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %141, align 8
  %158 = icmp eq %class.CPDF_ColorSpace* %157, null
  br i1 %158, label %159, label %193

159:                                              ; preds = %156
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %141, align 8
  br label %160

160:                                              ; preds = %159, %143, %149
  %161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 1, i32 0
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %164, label %172

164:                                              ; preds = %160
  %165 = bitcast %"class.std::__1::__tree_end_node"* %144 to %"class.std::__1::__tree_node_base"*
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 2
  %167 = bitcast %"class.std::__1::__tree_end_node"* %166 to %"class.std::__1::__tree_end_node"**
  %168 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 0, i32 0
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = icmp eq %"class.std::__1::__tree_node_base"* %170, %165
  br i1 %171, label %188, label %179

172:                                              ; preds = %160, %172
  %173 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %162, %160 ]
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %177, label %172

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %173, i64 0, i32 0
  br label %188

179:                                              ; preds = %164, %179
  %180 = phi %"class.std::__1::__tree_end_node"** [ %183, %179 ], [ %167, %164 ]
  %181 = bitcast %"class.std::__1::__tree_end_node"** %180 to %"class.std::__1::__tree_node_base"**
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %182, i64 0, i32 2
  %184 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %184, i64 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, %182
  br i1 %187, label %188, label %179

188:                                              ; preds = %179, %164, %177
  %189 = phi %"class.std::__1::__tree_end_node"* [ %178, %177 ], [ %168, %164 ], [ %184, %179 ]
  %190 = icmp eq %"class.std::__1::__tree_end_node"* %189, %138
  br i1 %190, label %191, label %143

191:                                              ; preds = %188, %135
  %192 = bitcast %"class.fxcrt::RetainPtr.156"* %0 to i64*
  store i64 0, i64* %192, align 8
  br label %193

193:                                              ; preds = %156, %191
  call void @_ZN21CPDF_DictionaryLockerD1Ev(%class.CPDF_DictionaryLocker* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #17
  br label %545

194:                                              ; preds = %115
  %195 = bitcast %class.CPDF_Object* %2 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %196 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %195, align 8
  %197 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %196, i64 24
  %198 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %197, align 8
  %199 = tail call %class.CPDF_Array* %198(%class.CPDF_Object* nonnull %2) #17
  %200 = icmp eq %class.CPDF_Array* %199, null
  br i1 %200, label %207, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %199, i64 0, i32 1, i32 0, i32 0
  %203 = load %"class.fxcrt::RetainPtr.147"*, %"class.fxcrt::RetainPtr.147"** %202, align 8
  %204 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %199, i64 0, i32 1, i32 0, i32 1
  %205 = load %"class.fxcrt::RetainPtr.147"*, %"class.fxcrt::RetainPtr.147"** %204, align 8
  %206 = icmp eq %"class.fxcrt::RetainPtr.147"* %203, %205
  br i1 %206, label %207, label %209

207:                                              ; preds = %194, %201
  %208 = bitcast %"class.fxcrt::RetainPtr.156"* %0 to i64*
  store i64 0, i64* %208, align 8
  br label %545

209:                                              ; preds = %201
  %210 = tail call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* nonnull %199, i64 0) #17
  %211 = icmp eq %class.CPDF_Object* %210, null
  br i1 %211, label %212, label %214

212:                                              ; preds = %209
  %213 = bitcast %"class.fxcrt::RetainPtr.156"* %0 to i64*
  store i64 0, i64* %213, align 8
  br label %545

214:                                              ; preds = %209
  %215 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #17
  %216 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %216, align 8
  %217 = bitcast %class.CPDF_Object* %210 to void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)***
  %218 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)**, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %218, i64 7
  %220 = load void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)*, void (%"class.fxcrt::ByteString"*, %class.CPDF_Object*)** %219, align 8
  call void %220(%"class.fxcrt::ByteString"* nonnull sret %8, %class.CPDF_Object* nonnull %210) #17
  %221 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %199, i64 0, i32 1
  %222 = bitcast %"class.fxcrt::RetainPtr.147"** %204 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.std::__1::vector.165"* %221 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = sub i64 %223, %225
  %227 = icmp eq i64 %226, 8
  br i1 %227, label %228, label %229

228:                                              ; preds = %214
  call void @_ZN15CPDF_ColorSpace18ColorspaceFromNameERKN5fxcrt10ByteStringE(%"class.fxcrt::RetainPtr.156"* sret %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8)
  br label %544

229:                                              ; preds = %214
  %230 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %216, align 8, !noalias !24
  %231 = icmp eq %"class.fxcrt::StringDataTemplate"* %230, null
  %232 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %230, i64 0, i32 3, i64 0
  %233 = select i1 %231, i8* null, i8* %232
  br i1 %231, label %501, label %234

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %230, i64 0, i32 1
  %236 = load i64, i64* %235, align 8, !noalias !24
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %501, label %238

238:                                              ; preds = %234
  %239 = icmp ult i64 %236, 4
  %240 = select i1 %239, i64 %236, i64 4
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %295, label %242

242:                                              ; preds = %238
  %243 = add nsw i64 %240, -1
  %244 = and i64 %240, 3
  %245 = icmp ult i64 %243, 3
  br i1 %245, label %278, label %246

246:                                              ; preds = %242
  %247 = sub nsw i64 %240, %244
  br label %248

248:                                              ; preds = %248, %246
  %249 = phi i64 [ 0, %246 ], [ %275, %248 ]
  %250 = phi i32 [ 0, %246 ], [ %274, %248 ]
  %251 = phi i64 [ %247, %246 ], [ %276, %248 ]
  %252 = shl i32 %250, 8
  %253 = getelementptr inbounds i8, i8* %233, i64 %249
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = or i32 %252, %255
  %257 = or i64 %249, 1
  %258 = shl i32 %256, 8
  %259 = getelementptr inbounds i8, i8* %233, i64 %257
  %260 = load i8, i8* %259, align 1
  %261 = zext i8 %260 to i32
  %262 = or i32 %258, %261
  %263 = or i64 %249, 2
  %264 = shl i32 %262, 8
  %265 = getelementptr inbounds i8, i8* %233, i64 %263
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = or i32 %264, %267
  %269 = or i64 %249, 3
  %270 = shl i32 %268, 8
  %271 = getelementptr inbounds i8, i8* %233, i64 %269
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = or i32 %270, %273
  %275 = add nuw i64 %249, 4
  %276 = add i64 %251, -4
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %248

278:                                              ; preds = %248, %242
  %279 = phi i32 [ undef, %242 ], [ %274, %248 ]
  %280 = phi i64 [ 0, %242 ], [ %275, %248 ]
  %281 = phi i32 [ 0, %242 ], [ %274, %248 ]
  %282 = icmp eq i64 %244, 0
  br i1 %282, label %295, label %283

283:                                              ; preds = %278, %283
  %284 = phi i64 [ %292, %283 ], [ %280, %278 ]
  %285 = phi i32 [ %291, %283 ], [ %281, %278 ]
  %286 = phi i64 [ %293, %283 ], [ %244, %278 ]
  %287 = shl i32 %285, 8
  %288 = getelementptr inbounds i8, i8* %233, i64 %284
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = or i32 %287, %290
  %292 = add nuw i64 %284, 1
  %293 = add i64 %286, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %283, !llvm.loop !27

295:                                              ; preds = %278, %283, %238
  %296 = phi i32 [ 0, %238 ], [ %279, %278 ], [ %291, %283 ]
  %297 = trunc i64 %240 to i32
  %298 = shl nuw nsw i32 %297, 3
  %299 = sub nsw i32 32, %298
  %300 = shl i32 %296, %299
  switch i32 %300, label %501 [
    i32 1130458183, label %301
    i32 1130458194, label %326
    i32 1281450496, label %351
    i32 1229144898, label %374
    i32 1231971429, label %401
    i32 1224736768, label %401
    i32 1399156833, label %432
    i32 1147500137, label %459
    i32 1348564084, label %486
  ]

301:                                              ; preds = %295
  %302 = call i8* @_Znwm(i64 96) #18, !noalias !29
  %303 = bitcast i8* %302 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %303, align 8, !noalias !29
  %304 = getelementptr inbounds i8, i8* %302, i64 8
  %305 = bitcast i8* %304 to i64*
  store i64 0, i64* %305, align 8, !noalias !29
  %306 = getelementptr inbounds i8, i8* %302, i64 16
  %307 = bitcast i8* %306 to %"class.fxcrt::Observable"*
  call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %307) #17, !noalias !29
  %308 = getelementptr inbounds i8, i8* %302, i64 40
  %309 = bitcast i8* %308 to i64*
  store i64 %9, i64* %309, align 8, !noalias !29
  %310 = getelementptr inbounds i8, i8* %302, i64 48
  %311 = bitcast i8* %310 to i64*
  store i64 0, i64* %311, align 8, !noalias !29
  %312 = getelementptr inbounds i8, i8* %302, i64 56
  %313 = bitcast i8* %312 to i32*
  store i32 4, i32* %313, align 8, !noalias !29
  %314 = getelementptr inbounds i8, i8* %302, i64 60
  %315 = bitcast i8* %314 to i32*
  store i32 0, i32* %315, align 4, !noalias !29
  %316 = getelementptr inbounds i8, i8* %302, i64 64
  %317 = bitcast i8* %316 to i32*
  store i32 0, i32* %317, align 8, !noalias !29
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_112CPDF_CalGrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %303, align 8, !noalias !29
  %318 = getelementptr inbounds i8, i8* %302, i64 68
  %319 = bitcast i8* %318 to float*
  store float 1.000000e+00, float* %319, align 4, !noalias !29
  %320 = ptrtoint i8* %302 to i64
  %321 = load i64, i64* %305, align 8, !noalias !29
  %322 = add nsw i64 %321, 1
  store i64 %322, i64* %305, align 8
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %503

324:                                              ; preds = %301
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %303, align 8
  %325 = bitcast i8* %310 to %class.CPDF_Array**
  store %class.CPDF_Array* null, %class.CPDF_Array** %325, align 8
  call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %307) #17
  call void @_ZdlPv(i8* nonnull %302) #18
  br label %503

326:                                              ; preds = %295
  %327 = call i8* @_Znwm(i64 144) #18, !noalias !32
  %328 = bitcast i8* %327 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %328, align 8, !noalias !32
  %329 = getelementptr inbounds i8, i8* %327, i64 8
  %330 = bitcast i8* %329 to i64*
  store i64 0, i64* %330, align 8, !noalias !32
  %331 = getelementptr inbounds i8, i8* %327, i64 16
  %332 = bitcast i8* %331 to %"class.fxcrt::Observable"*
  call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %332) #17, !noalias !32
  %333 = getelementptr inbounds i8, i8* %327, i64 40
  %334 = bitcast i8* %333 to i64*
  store i64 %9, i64* %334, align 8, !noalias !32
  %335 = getelementptr inbounds i8, i8* %327, i64 48
  %336 = bitcast i8* %335 to i64*
  store i64 0, i64* %336, align 8, !noalias !32
  %337 = getelementptr inbounds i8, i8* %327, i64 56
  %338 = bitcast i8* %337 to i32*
  store i32 5, i32* %338, align 8, !noalias !32
  %339 = getelementptr inbounds i8, i8* %327, i64 60
  %340 = bitcast i8* %339 to i32*
  store i32 0, i32* %340, align 4, !noalias !32
  %341 = getelementptr inbounds i8, i8* %327, i64 64
  %342 = bitcast i8* %341 to i32*
  store i32 0, i32* %342, align 8, !noalias !32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_111CPDF_CalRGBE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %328, align 8, !noalias !32
  %343 = getelementptr inbounds i8, i8* %327, i64 140
  store i8 0, i8* %343, align 4, !noalias !32
  %344 = getelementptr inbounds i8, i8* %327, i64 141
  store i8 0, i8* %344, align 1, !noalias !32
  %345 = ptrtoint i8* %327 to i64
  %346 = load i64, i64* %330, align 8, !noalias !32
  %347 = add nsw i64 %346, 1
  store i64 %347, i64* %330, align 8
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %349, label %503

349:                                              ; preds = %326
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %328, align 8
  %350 = bitcast i8* %335 to %class.CPDF_Array**
  store %class.CPDF_Array* null, %class.CPDF_Array** %350, align 8
  call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %332) #17
  call void @_ZdlPv(i8* nonnull %327) #18
  br label %503

351:                                              ; preds = %295
  %352 = call i8* @_Znwm(i64 112) #18, !noalias !35
  %353 = bitcast i8* %352 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %353, align 8, !noalias !35
  %354 = getelementptr inbounds i8, i8* %352, i64 8
  %355 = bitcast i8* %354 to i64*
  store i64 0, i64* %355, align 8, !noalias !35
  %356 = getelementptr inbounds i8, i8* %352, i64 16
  %357 = bitcast i8* %356 to %"class.fxcrt::Observable"*
  call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %357) #17, !noalias !35
  %358 = getelementptr inbounds i8, i8* %352, i64 40
  %359 = bitcast i8* %358 to i64*
  store i64 %9, i64* %359, align 8, !noalias !35
  %360 = getelementptr inbounds i8, i8* %352, i64 48
  %361 = bitcast i8* %360 to i64*
  store i64 0, i64* %361, align 8, !noalias !35
  %362 = getelementptr inbounds i8, i8* %352, i64 56
  %363 = bitcast i8* %362 to i32*
  store i32 6, i32* %363, align 8, !noalias !35
  %364 = getelementptr inbounds i8, i8* %352, i64 60
  %365 = bitcast i8* %364 to i32*
  store i32 0, i32* %365, align 4, !noalias !35
  %366 = getelementptr inbounds i8, i8* %352, i64 64
  %367 = bitcast i8* %366 to i32*
  store i32 0, i32* %367, align 8, !noalias !35
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_110CPDF_LabCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %353, align 8, !noalias !35
  %368 = ptrtoint i8* %352 to i64
  %369 = load i64, i64* %355, align 8, !noalias !35
  %370 = add nsw i64 %369, 1
  store i64 %370, i64* %355, align 8
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %503

372:                                              ; preds = %351
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %353, align 8
  %373 = bitcast i8* %360 to %class.CPDF_Array**
  store %class.CPDF_Array* null, %class.CPDF_Array** %373, align 8
  call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %357) #17
  call void @_ZdlPv(i8* nonnull %352) #18
  br label %503

374:                                              ; preds = %295
  %375 = call i8* @_Znwm(i64 136) #18, !noalias !38
  %376 = bitcast i8* %375 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %376, align 8, !noalias !38
  %377 = getelementptr inbounds i8, i8* %375, i64 8
  %378 = bitcast i8* %377 to i64*
  store i64 0, i64* %378, align 8, !noalias !38
  %379 = getelementptr inbounds i8, i8* %375, i64 16
  %380 = bitcast i8* %379 to %"class.fxcrt::Observable"*
  call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %380) #17, !noalias !38
  %381 = getelementptr inbounds i8, i8* %375, i64 40
  %382 = bitcast i8* %381 to i64*
  store i64 %9, i64* %382, align 8, !noalias !38
  %383 = getelementptr inbounds i8, i8* %375, i64 48
  %384 = bitcast i8* %383 to i64*
  store i64 0, i64* %384, align 8, !noalias !38
  %385 = getelementptr inbounds i8, i8* %375, i64 56
  %386 = bitcast i8* %385 to i32*
  store i32 7, i32* %386, align 8, !noalias !38
  %387 = getelementptr inbounds i8, i8* %375, i64 60
  %388 = bitcast i8* %387 to i32*
  store i32 0, i32* %388, align 4, !noalias !38
  %389 = getelementptr inbounds i8, i8* %375, i64 64
  %390 = bitcast i8* %389 to i32*
  store i32 0, i32* %390, align 8, !noalias !38
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_115CPDF_ICCBasedCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %376, align 8, !noalias !38
  %391 = getelementptr inbounds i8, i8* %375, i64 72
  call void @llvm.memset.p0i8.i64(i8* align 8 %391, i8 0, i64 64, i1 false) #17, !noalias !38
  %392 = ptrtoint i8* %375 to i64
  %393 = load i64, i64* %378, align 8, !noalias !38
  %394 = add nsw i64 %393, 1
  store i64 %394, i64* %378, align 8
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %503

396:                                              ; preds = %374
  %397 = getelementptr inbounds i8, i8* %375, i64 80
  %398 = bitcast i8* %397 to %class.CPDF_IccProfile**
  store %class.CPDF_IccProfile* null, %class.CPDF_IccProfile** %398, align 8
  %399 = bitcast i8* %391 to %class.CPDF_ColorSpace**
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %399, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %376, align 8
  %400 = bitcast i8* %383 to %class.CPDF_Array**
  store %class.CPDF_Array* null, %class.CPDF_Array** %400, align 8
  call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %380) #17
  call void @_ZdlPv(i8* nonnull %375) #18
  br label %503

401:                                              ; preds = %295, %295
  %402 = call i8* @_Znwm(i64 120) #18, !noalias !41
  %403 = bitcast i8* %402 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %403, align 8, !noalias !41
  %404 = getelementptr inbounds i8, i8* %402, i64 8
  %405 = bitcast i8* %404 to i64*
  store i64 0, i64* %405, align 8, !noalias !41
  %406 = getelementptr inbounds i8, i8* %402, i64 16
  %407 = bitcast i8* %406 to %"class.fxcrt::Observable"*
  call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %407) #17, !noalias !41
  %408 = getelementptr inbounds i8, i8* %402, i64 40
  %409 = bitcast i8* %408 to i64*
  store i64 %9, i64* %409, align 8, !noalias !41
  %410 = getelementptr inbounds i8, i8* %402, i64 48
  %411 = bitcast i8* %410 to i64*
  store i64 0, i64* %411, align 8, !noalias !41
  %412 = getelementptr inbounds i8, i8* %402, i64 56
  %413 = bitcast i8* %412 to i32*
  store i32 10, i32* %413, align 8, !noalias !41
  %414 = getelementptr inbounds i8, i8* %402, i64 60
  %415 = bitcast i8* %414 to i32*
  store i32 0, i32* %415, align 4, !noalias !41
  %416 = getelementptr inbounds i8, i8* %402, i64 64
  %417 = bitcast i8* %416 to i32*
  store i32 0, i32* %417, align 8, !noalias !41
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_114CPDF_IndexedCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %403, align 8, !noalias !41
  %418 = getelementptr inbounds i8, i8* %402, i64 72
  %419 = getelementptr inbounds i8, i8* %402, i64 88
  %420 = bitcast i8* %419 to %"class.fxcrt::ByteString"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %418, i8 0, i64 16, i1 false) #17, !noalias !41
  call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %420) #17, !noalias !41
  %421 = getelementptr inbounds i8, i8* %402, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %421, i8 0, i64 24, i1 false) #17, !noalias !41
  %422 = ptrtoint i8* %402 to i64
  %423 = load i64, i64* %405, align 8, !noalias !41
  %424 = add nsw i64 %423, 1
  store i64 %424, i64* %405, align 8
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %503

426:                                              ; preds = %401
  %427 = bitcast i8* %402 to %"class.fxcrt::Retainable"*
  %428 = bitcast i8* %402 to void (%"class.fxcrt::Retainable"*)***
  %429 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %428, align 8
  %430 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %429, i64 1
  %431 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %430, align 8
  call void %431(%"class.fxcrt::Retainable"* nonnull %427) #17
  br label %503

432:                                              ; preds = %295
  %433 = call i8* @_Znwm(i64 88) #18, !noalias !44
  %434 = bitcast i8* %433 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %434, align 8, !noalias !44
  %435 = getelementptr inbounds i8, i8* %433, i64 8
  %436 = bitcast i8* %435 to i64*
  store i64 0, i64* %436, align 8, !noalias !44
  %437 = getelementptr inbounds i8, i8* %433, i64 16
  %438 = bitcast i8* %437 to %"class.fxcrt::Observable"*
  call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %438) #17, !noalias !44
  %439 = getelementptr inbounds i8, i8* %433, i64 40
  %440 = bitcast i8* %439 to i64*
  store i64 %9, i64* %440, align 8, !noalias !44
  %441 = getelementptr inbounds i8, i8* %433, i64 48
  %442 = bitcast i8* %441 to i64*
  store i64 0, i64* %442, align 8, !noalias !44
  %443 = getelementptr inbounds i8, i8* %433, i64 56
  %444 = bitcast i8* %443 to i32*
  store i32 8, i32* %444, align 8, !noalias !44
  %445 = getelementptr inbounds i8, i8* %433, i64 60
  %446 = bitcast i8* %445 to i32*
  store i32 0, i32* %446, align 4, !noalias !44
  %447 = getelementptr inbounds i8, i8* %433, i64 64
  %448 = bitcast i8* %447 to i32*
  store i32 0, i32* %448, align 8, !noalias !44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_117CPDF_SeparationCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %434, align 8, !noalias !44
  %449 = getelementptr inbounds i8, i8* %433, i64 72
  call void @llvm.memset.p0i8.i64(i8* align 8 %449, i8 0, i64 16, i1 false) #17, !noalias !44
  %450 = ptrtoint i8* %433 to i64
  %451 = load i64, i64* %436, align 8, !noalias !44
  %452 = add nsw i64 %451, 1
  store i64 %452, i64* %436, align 8
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %454, label %503

454:                                              ; preds = %432
  %455 = getelementptr inbounds i8, i8* %433, i64 80
  %456 = bitcast i8* %455 to %class.CPDF_Function**
  store %class.CPDF_Function* null, %class.CPDF_Function** %456, align 8
  %457 = bitcast i8* %449 to %class.CPDF_ColorSpace**
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %457, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %434, align 8
  %458 = bitcast i8* %441 to %class.CPDF_Array**
  store %class.CPDF_Array* null, %class.CPDF_Array** %458, align 8
  call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %438) #17
  call void @_ZdlPv(i8* nonnull %433) #18
  br label %503

459:                                              ; preds = %295
  %460 = call i8* @_Znwm(i64 88) #18, !noalias !47
  %461 = bitcast i8* %460 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %461, align 8, !noalias !47
  %462 = getelementptr inbounds i8, i8* %460, i64 8
  %463 = bitcast i8* %462 to i64*
  store i64 0, i64* %463, align 8, !noalias !47
  %464 = getelementptr inbounds i8, i8* %460, i64 16
  %465 = bitcast i8* %464 to %"class.fxcrt::Observable"*
  call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %465) #17, !noalias !47
  %466 = getelementptr inbounds i8, i8* %460, i64 40
  %467 = bitcast i8* %466 to i64*
  store i64 %9, i64* %467, align 8, !noalias !47
  %468 = getelementptr inbounds i8, i8* %460, i64 48
  %469 = bitcast i8* %468 to i64*
  store i64 0, i64* %469, align 8, !noalias !47
  %470 = getelementptr inbounds i8, i8* %460, i64 56
  %471 = bitcast i8* %470 to i32*
  store i32 9, i32* %471, align 8, !noalias !47
  %472 = getelementptr inbounds i8, i8* %460, i64 60
  %473 = bitcast i8* %472 to i32*
  store i32 0, i32* %473, align 4, !noalias !47
  %474 = getelementptr inbounds i8, i8* %460, i64 64
  %475 = bitcast i8* %474 to i32*
  store i32 0, i32* %475, align 8, !noalias !47
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_114CPDF_DeviceNCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %461, align 8, !noalias !47
  %476 = getelementptr inbounds i8, i8* %460, i64 72
  call void @llvm.memset.p0i8.i64(i8* align 8 %476, i8 0, i64 16, i1 false) #17, !noalias !47
  %477 = ptrtoint i8* %460 to i64
  %478 = load i64, i64* %463, align 8, !noalias !47
  %479 = add nsw i64 %478, 1
  store i64 %479, i64* %463, align 8
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %503

481:                                              ; preds = %459
  %482 = getelementptr inbounds i8, i8* %460, i64 80
  %483 = bitcast i8* %482 to %class.CPDF_Function**
  store %class.CPDF_Function* null, %class.CPDF_Function** %483, align 8
  %484 = bitcast i8* %476 to %class.CPDF_ColorSpace**
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %484, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %461, align 8
  %485 = bitcast i8* %468 to %class.CPDF_Array**
  store %class.CPDF_Array* null, %class.CPDF_Array** %485, align 8
  call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %465) #17
  call void @_ZdlPv(i8* nonnull %460) #18
  br label %503

486:                                              ; preds = %295
  %487 = call i8* @_Znwm(i64 80) #18, !noalias !50
  %488 = bitcast i8* %487 to %class.CPDF_PatternCS*
  call void @_ZN14CPDF_PatternCSC1EP13CPDF_Document(%class.CPDF_PatternCS* nonnull %488, %class.CPDF_Document* %1) #17, !noalias !50
  %489 = ptrtoint i8* %487 to i64
  %490 = getelementptr inbounds i8, i8* %487, i64 8
  %491 = bitcast i8* %490 to i64*
  %492 = load i64, i64* %491, align 8, !noalias !50
  %493 = add nsw i64 %492, 1
  store i64 %493, i64* %491, align 8
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %495, label %503

495:                                              ; preds = %486
  %496 = bitcast i8* %487 to %"class.fxcrt::Retainable"*
  %497 = bitcast i8* %487 to void (%"class.fxcrt::Retainable"*)***
  %498 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %497, align 8
  %499 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %498, i64 1
  %500 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %499, align 8
  call void %500(%"class.fxcrt::Retainable"* nonnull %496) #17
  br label %503

501:                                              ; preds = %229, %234, %295
  %502 = bitcast %"class.fxcrt::RetainPtr.156"* %0 to i64*
  store i64 0, i64* %502, align 8
  br label %544

503:                                              ; preds = %495, %486, %481, %459, %454, %432, %426, %401, %396, %374, %372, %351, %349, %326, %324, %301
  %504 = phi i64 [ %320, %301 ], [ %320, %324 ], [ %345, %326 ], [ %345, %349 ], [ %368, %351 ], [ %368, %372 ], [ %392, %374 ], [ %392, %396 ], [ %422, %401 ], [ %422, %426 ], [ %450, %432 ], [ %450, %454 ], [ %477, %459 ], [ %477, %481 ], [ %489, %486 ], [ %489, %495 ]
  %505 = inttoptr i64 %504 to %class.CPDF_ColorSpace*
  %506 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %199, i64 0, i32 0, i32 0, i32 1
  %507 = load i64, i64* %506, align 8
  %508 = add nsw i64 %507, 1
  store i64 %508, i64* %506, align 8
  %509 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %505, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %510 = load %class.CPDF_Array*, %class.CPDF_Array** %509, align 8
  store %class.CPDF_Array* %199, %class.CPDF_Array** %509, align 8
  %511 = icmp eq %class.CPDF_Array* %510, null
  br i1 %511, label %523, label %512

512:                                              ; preds = %503
  %513 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %510, i64 0, i32 0, i32 0, i32 1
  %514 = load i64, i64* %513, align 8
  %515 = add nsw i64 %514, -1
  store i64 %515, i64* %513, align 8
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %517, label %523

517:                                              ; preds = %512
  %518 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %510, i64 0, i32 0, i32 0
  %519 = bitcast %class.CPDF_Array* %510 to void (%"class.fxcrt::Retainable"*)***
  %520 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %519, align 8
  %521 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %520, i64 1
  %522 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %521, align 8
  call void %522(%"class.fxcrt::Retainable"* nonnull %518) #17
  br label %523

523:                                              ; preds = %503, %512, %517
  %524 = inttoptr i64 %504 to i32 (%class.CPDF_ColorSpace*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)***
  %525 = load i32 (%class.CPDF_ColorSpace*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)**, i32 (%class.CPDF_ColorSpace*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)*** %524, align 8
  %526 = getelementptr inbounds i32 (%class.CPDF_ColorSpace*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)*, i32 (%class.CPDF_ColorSpace*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)** %525, i64 10
  %527 = load i32 (%class.CPDF_ColorSpace*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)*, i32 (%class.CPDF_ColorSpace*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*)** %526, align 8
  %528 = call i32 %527(%class.CPDF_ColorSpace* %505, %class.CPDF_Document* %1, %class.CPDF_Array* nonnull %199, %"class.std::__1::set.188"* %3) #17
  %529 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %505, i64 0, i32 6
  store i32 %528, i32* %529, align 8
  %530 = icmp eq i32 %528, 0
  %531 = bitcast %"class.fxcrt::RetainPtr.156"* %0 to i64*
  br i1 %530, label %533, label %532

532:                                              ; preds = %523
  store i64 %504, i64* %531, align 8
  br label %544

533:                                              ; preds = %523
  store i64 0, i64* %531, align 8
  %534 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %505, i64 0, i32 0, i32 1
  %535 = load i64, i64* %534, align 8
  %536 = add nsw i64 %535, -1
  store i64 %536, i64* %534, align 8
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %538, label %544

538:                                              ; preds = %533
  %539 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %505, i64 0, i32 0
  %540 = inttoptr i64 %504 to void (%"class.fxcrt::Retainable"*)***
  %541 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %540, align 8
  %542 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %541, i64 1
  %543 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %542, align 8
  call void %543(%"class.fxcrt::Retainable"* nonnull %539) #17
  br label %544

544:                                              ; preds = %532, %501, %538, %533, %228
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #17
  br label %545

545:                                              ; preds = %125, %193, %207, %544, %212, %109
  %546 = getelementptr inbounds i8, i8* %79, i64 8
  %547 = bitcast i8* %546 to %"class.std::__1::__tree_node_base"**
  %548 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %547, align 8
  %549 = icmp eq %"class.std::__1::__tree_node_base"* %548, null
  br i1 %549, label %550, label %555

550:                                              ; preds = %545
  %551 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %84, align 8
  %552 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %551, i64 0, i32 0
  %553 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %552, align 8
  %554 = icmp eq %"class.std::__1::__tree_node_base"* %553, %82
  br i1 %554, label %571, label %562

555:                                              ; preds = %545, %555
  %556 = phi %"class.std::__1::__tree_node_base"* [ %558, %555 ], [ %548, %545 ]
  %557 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %556, i64 0, i32 0, i32 0
  %558 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %557, align 8
  %559 = icmp eq %"class.std::__1::__tree_node_base"* %558, null
  br i1 %559, label %560, label %555

560:                                              ; preds = %555
  %561 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %556, i64 0, i32 0
  br label %571

562:                                              ; preds = %550, %562
  %563 = phi %"class.std::__1::__tree_end_node"** [ %566, %562 ], [ %84, %550 ]
  %564 = bitcast %"class.std::__1::__tree_end_node"** %563 to %"class.std::__1::__tree_node_base"**
  %565 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %564, align 8
  %566 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %565, i64 0, i32 2
  %567 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %566, align 8
  %568 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %567, i64 0, i32 0
  %569 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %568, align 8
  %570 = icmp eq %"class.std::__1::__tree_node_base"* %569, %565
  br i1 %570, label %571, label %562

571:                                              ; preds = %562, %560, %550
  %572 = phi %"class.std::__1::__tree_end_node"* [ %561, %560 ], [ %551, %550 ], [ %567, %562 ]
  %573 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %86, align 8
  %574 = icmp eq %"class.std::__1::__tree_end_node"* %573, %103
  br i1 %574, label %575, label %578

575:                                              ; preds = %571
  %576 = ptrtoint %"class.std::__1::__tree_end_node"* %572 to i64
  %577 = bitcast %"class.std::__1::set.188"* %3 to i64*
  store i64 %576, i64* %577, align 8
  br label %578

578:                                              ; preds = %571, %575
  %579 = load i64, i64* %100, align 8
  %580 = add i64 %579, -1
  store i64 %580, i64* %100, align 8
  %581 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %581, %"class.std::__1::__tree_node_base"* nonnull %82) #17
  call void @_ZdlPv(i8* nonnull %79) #18
  br label %582

582:                                              ; preds = %578, %40, %12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #4

declare %class.CPDF_Dictionary* @_ZNK11CPDF_Stream7GetDictEv(%class.CPDF_Stream*) unnamed_addr #3

declare void @_ZN21CPDF_DictionaryLockerC1EPK15CPDF_Dictionary(%class.CPDF_DictionaryLocker*, %class.CPDF_Dictionary*) unnamed_addr #3

declare void @_ZNK9CPDF_Name9GetStringEv(%"class.fxcrt::ByteString"* sret, %class.CPDF_Name*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN21CPDF_DictionaryLockerD1Ev(%class.CPDF_DictionaryLocker*) unnamed_addr #4

declare %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN15CPDF_ColorSpace19ComponentsForFamilyENS_6FamilyE(i32) local_unnamed_addr #5 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 3
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN15CPDF_ColorSpace19ComponentsForFamilyENS_6FamilyE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN15CPDF_ColorSpace20IsValidIccComponentsEi(i32) local_unnamed_addr #5 align 2 {
  %2 = or i32 %0, 2
  %3 = icmp eq i32 %2, 3
  %4 = icmp eq i32 %0, 4
  %5 = or i1 %4, %3
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_ColorSpace27CreateBufAndSetDefaultColorEv(%"class.std::__1::vector.261"* noalias nocapture sret, %class.CPDF_ColorSpace*) local_unnamed_addr #2 align 2 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %6 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17
  store float 0xFFFFFFFFE0000000, float* %4, align 4
  %7 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %1, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.std::__1::vector.261"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #17
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %41, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %0, i64 0, i32 0, i32 1
  %15 = shl nuw nsw i64 %9, 2
  %16 = tail call i8* @_Znwm(i64 %15) #18
  %17 = bitcast i8* %16 to float*
  %18 = bitcast %"class.std::__1::vector.261"* %0 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds float, float* %17, i64 %9
  store float* %19, float** %13, align 8
  %20 = bitcast float** %14 to i64*
  %21 = ptrtoint i8* %16 to i64
  %22 = add nsw i64 %9, -1
  %23 = getelementptr float, float* %17, i64 %22
  %24 = ptrtoint float* %23 to i64
  %25 = sub i64 4, %21
  %26 = add i64 %25, %24
  %27 = and i64 %26, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 0, i64 %27, i1 false) #17
  %28 = ptrtoint float* %19 to i64
  store i64 %28, i64* %20, align 8
  %29 = bitcast %class.CPDF_ColorSpace* %1 to void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)***
  br label %30

30:                                               ; preds = %12, %30
  %31 = phi i64 [ 0, %12 ], [ %37, %30 ]
  %32 = getelementptr inbounds float, float* %17, i64 %31
  %33 = load void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)**, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*** %29, align 8
  %34 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)** %33, i64 3
  %35 = load void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)** %34, align 8
  %36 = trunc i64 %31 to i32
  call void %35(%class.CPDF_ColorSpace* %1, i32 %36, float* %32, float* nonnull %3, float* nonnull %4) #17
  %37 = add nuw nsw i64 %31, 1
  %38 = load i32, i32* %7, align 8
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %30, label %41

41:                                               ; preds = %30, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK15CPDF_ColorSpace15GetDefaultValueEiPfS0_S0_(%class.CPDF_ColorSpace* nocapture readnone, i32, float* nocapture, float* nocapture, float* nocapture) unnamed_addr #7 align 2 {
  store float 0.000000e+00, float* %2, align 4
  store float 0.000000e+00, float* %3, align 4
  store float 1.000000e+00, float* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_ColorSpace18TranslateImageLineEPhPKhiiib(%class.CPDF_ColorSpace*, i8* nocapture, i8* nocapture readonly, i32, i32, i32, i1 zeroext) unnamed_addr #2 align 2 {
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca %"class.pdfium::span", align 8
  %12 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = icmp eq i32 %13, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %7
  %17 = shl nuw nsw i64 %14, 2
  %18 = tail call i8* @_Znwm(i64 %17) #18
  %19 = bitcast i8* %18 to float*
  %20 = ptrtoint i8* %18 to i64
  %21 = getelementptr inbounds float, float* %19, i64 %14
  %22 = add nsw i64 %14, -1
  %23 = getelementptr float, float* %19, i64 %22
  %24 = ptrtoint float* %23 to i64
  %25 = sub i64 4, %20
  %26 = add i64 %25, %24
  %27 = and i64 %26, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 0, i64 %27, i1 false) #17
  %28 = ptrtoint float* %21 to i64
  br label %29

29:                                               ; preds = %7, %16
  %30 = phi i64 [ 0, %7 ], [ %20, %16 ]
  %31 = phi i64 [ 0, %7 ], [ %28, %16 ]
  %32 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #17
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %33 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #17
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %34 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #17
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %35 = icmp sgt i32 %3, 0
  br i1 %35, label %36, label %54

36:                                               ; preds = %29
  %37 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 10
  %40 = select i1 %39, i32 1, i32 255
  %41 = sitofp i32 %40 to float
  %42 = inttoptr i64 %30 to float*
  %43 = sub i64 %31, %30
  %44 = ashr exact i64 %43, 2
  %45 = bitcast %"class.pdfium::span"* %11 to i64*
  %46 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %11, i64 0, i32 1
  %47 = bitcast %class.CPDF_ColorSpace* %0 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)***
  br label %48

48:                                               ; preds = %81, %36
  %49 = phi i32 [ %13, %36 ], [ %83, %81 ]
  %50 = phi i32 [ 0, %36 ], [ %79, %81 ]
  %51 = phi i8* [ %1, %36 ], [ %82, %81 ]
  %52 = phi i8* [ %2, %36 ], [ %60, %81 ]
  %53 = icmp eq i32 %49, 0
  br i1 %53, label %59, label %84

54:                                               ; preds = %59, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #17
  %55 = icmp eq i64 %30, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %30 to i8*
  call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %54, %56
  ret void

59:                                               ; preds = %84, %48
  %60 = phi i8* [ %52, %48 ], [ %87, %84 ]
  store i64 %30, i64* %45, align 8
  store i64 %44, i64* %46, align 8
  %61 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*** %47, align 8
  %62 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %61, i64 2
  %63 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %62, align 8
  %64 = call zeroext i1 %63(%class.CPDF_ColorSpace* %0, %"class.pdfium::span"* nonnull %11, float* nonnull %8, float* nonnull %9, float* nonnull %10) #17
  %65 = load float, float* %10, align 4
  %66 = fmul float %65, 2.550000e+02
  %67 = fptosi float %66 to i32
  %68 = trunc i32 %67 to i8
  %69 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 %68, i8* %51, align 1
  %70 = load float, float* %9, align 4
  %71 = fmul float %70, 2.550000e+02
  %72 = fptosi float %71 to i32
  %73 = trunc i32 %72 to i8
  %74 = getelementptr inbounds i8, i8* %51, i64 2
  store i8 %73, i8* %69, align 1
  %75 = load float, float* %8, align 4
  %76 = fmul float %75, 2.550000e+02
  %77 = fptosi float %76 to i32
  %78 = trunc i32 %77 to i8
  store i8 %78, i8* %74, align 1
  %79 = add nuw nsw i32 %50, 1
  %80 = icmp eq i32 %79, %3
  br i1 %80, label %54, label %81

81:                                               ; preds = %59
  %82 = getelementptr inbounds i8, i8* %51, i64 3
  %83 = load i32, i32* %12, align 8
  br label %48

84:                                               ; preds = %48, %84
  %85 = phi i64 [ %92, %84 ], [ 0, %48 ]
  %86 = phi i8* [ %87, %84 ], [ %52, %48 ]
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  %88 = load i8, i8* %86, align 1
  %89 = uitofp i8 %88 to float
  %90 = fdiv float %89, %41
  %91 = getelementptr inbounds float, float* %42, i64 %85
  store float %90, float* %91, align 4
  %92 = add nuw nsw i64 %85, 1
  %93 = load i32, i32* %12, align 8
  %94 = zext i32 %93 to i64
  %95 = icmp ult i64 %92, %94
  br i1 %95, label %84, label %59
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15CPDF_ColorSpace19EnableStdConversionEb(%class.CPDF_ColorSpace* nocapture, i1 zeroext) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  br i1 %1, label %7, label %5

5:                                                ; preds = %2
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %5, %2
  %8 = phi i32 [ 1, %2 ], [ -1, %5 ]
  %9 = add i32 %4, %8
  store i32 %9, i32* %3, align 4
  br label %10

10:                                               ; preds = %7, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_ColorSpace8IsNormalEv(%class.CPDF_ColorSpace* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 5
  ret i1 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_PatternCS* @_ZN15CPDF_ColorSpace11AsPatternCSEv(%class.CPDF_ColorSpace* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_PatternCS* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_PatternCS* @_ZNK15CPDF_ColorSpace11AsPatternCSEv(%class.CPDF_ColorSpace* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_PatternCS* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_ColorSpace13GetPatternRGBERK12PatternValuePfS3_S3_(%class.CPDF_ColorSpace* nocapture readnone, %class.PatternValue* nocapture readnone dereferenceable(72), float* nocapture readnone, float* nocapture readnone, float* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_ColorSpaceC2EP13CPDF_DocumentNS_6FamilyE(%class.CPDF_ColorSpace*, %class.CPDF_Document*, i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %6) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 2, i32 0
  store %class.CPDF_Document* %1, %class.CPDF_Document** %7, align 8
  %8 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 3
  %9 = bitcast %"class.fxcrt::RetainPtr.161"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 4
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 5
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 6
  store i32 0, i32* %12, align 8
  ret void
}

declare void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"*) unnamed_addr #4

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN15CPDF_ColorSpaceD0Ev(%class.CPDF_ColorSpace* nocapture readnone) unnamed_addr #9 align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN15CPDF_ColorSpace23SetComponentsForStockCSEj(%class.CPDF_ColorSpace* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD2Ev(%"class.fxcrt::Retainable"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD0Ev(%"class.fxcrt::Retainable"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.fxcrt::Retainable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPK11CPDF_ObjectNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.189"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPK11CPDF_ObjectNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.189"* %0, %"class.std::__1::__tree_node"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPK11CPDF_ObjectNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.189"* %0, %"class.std::__1::__tree_node"* %9) #17
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !53
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !53
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !53
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !53
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !53
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !53
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !53
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !53
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !53
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !53
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !53
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !53
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !53
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !53
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !53
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !53
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_112CPDF_CalGrayD0Ev(%"class.(anonymous namespace)::CPDF_CalGray"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalGray", %"class.(anonymous namespace)::CPDF_CalGray"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalGray", %"class.(anonymous namespace)::CPDF_CalGray"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Array*, %class.CPDF_Array** %3, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %3, align 8
  %5 = icmp eq %class.CPDF_Array* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %4, i64 0, i32 0, i32 0
  %13 = bitcast %class.CPDF_Array* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #17
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalGray", %"class.(anonymous namespace)::CPDF_CalGray"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %18) #17
  %19 = bitcast %"class.(anonymous namespace)::CPDF_CalGray"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_112CPDF_CalGray6GetRGBEN6pdfium4spanIKfEEPfS5_S5_(%"class.(anonymous namespace)::CPDF_CalGray"* nocapture readnone, %"class.pdfium::span"* nocapture readonly, float* nocapture, float* nocapture, float* nocapture) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10, !prof !2

9:                                                ; preds = %5
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

10:                                               ; preds = %5
  %11 = bitcast %"class.pdfium::span"* %1 to i32**
  %12 = load i32*, i32** %11, align 8
  %13 = load i32, i32* %12, align 4
  %14 = bitcast float* %2 to i32*
  store i32 %13, i32* %14, align 4
  %15 = load i64, i64* %6, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18, !prof !2

17:                                               ; preds = %10
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

18:                                               ; preds = %10
  %19 = load i32*, i32** %11, align 8
  %20 = load i32, i32* %19, align 4
  %21 = bitcast float* %3 to i32*
  store i32 %20, i32* %21, align 4
  %22 = load i64, i64* %6, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %18
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

25:                                               ; preds = %18
  %26 = load i32*, i32** %11, align 8
  %27 = load i32, i32* %26, align 4
  %28 = bitcast float* %4 to i32*
  store i32 %27, i32* %28, align 4
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_112CPDF_CalGray18TranslateImageLineEPhPKhiiib(%"class.(anonymous namespace)::CPDF_CalGray"* nocapture readnone, i8* nocapture, i8* nocapture readonly, i32, i32, i32, i1 zeroext) unnamed_addr #8 align 2 {
  %8 = icmp sgt i32 %3, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %7
  %10 = zext i32 %3 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i32 %3, 1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = sub nsw i64 %10, %11
  br label %27

15:                                               ; preds = %27, %9
  %16 = phi i64 [ 0, %9 ], [ %46, %27 ]
  %17 = phi i8* [ %1, %9 ], [ %45, %27 ]
  %18 = icmp eq i64 %11, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds i8, i8* %2, i64 %16
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 %21, i8* %17, align 1
  %23 = load i8, i8* %20, align 1
  %24 = getelementptr inbounds i8, i8* %17, i64 2
  store i8 %23, i8* %22, align 1
  %25 = load i8, i8* %20, align 1
  store i8 %25, i8* %24, align 1
  br label %26

26:                                               ; preds = %19, %15, %7
  ret void

27:                                               ; preds = %27, %13
  %28 = phi i64 [ 0, %13 ], [ %46, %27 ]
  %29 = phi i8* [ %1, %13 ], [ %45, %27 ]
  %30 = phi i64 [ %14, %13 ], [ %47, %27 ]
  %31 = getelementptr inbounds i8, i8* %2, i64 %28
  %32 = load i8, i8* %31, align 1
  %33 = getelementptr inbounds i8, i8* %29, i64 1
  store i8 %32, i8* %29, align 1
  %34 = load i8, i8* %31, align 1
  %35 = getelementptr inbounds i8, i8* %29, i64 2
  store i8 %34, i8* %33, align 1
  %36 = load i8, i8* %31, align 1
  %37 = getelementptr inbounds i8, i8* %29, i64 3
  store i8 %36, i8* %35, align 1
  %38 = or i64 %28, 1
  %39 = getelementptr inbounds i8, i8* %2, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %29, i64 4
  store i8 %40, i8* %37, align 1
  %42 = load i8, i8* %39, align 1
  %43 = getelementptr inbounds i8, i8* %29, i64 5
  store i8 %42, i8* %41, align 1
  %44 = load i8, i8* %39, align 1
  %45 = getelementptr inbounds i8, i8* %29, i64 6
  store i8 %44, i8* %43, align 1
  %46 = add nuw nsw i64 %28, 2
  %47 = add i64 %30, -2
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %15, label %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_112CPDF_CalGray6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE(%"class.(anonymous namespace)::CPDF_CalGray"* nocapture, %class.CPDF_Document* nocapture readnone, %class.CPDF_Array*, %"class.std::__1::set.188"* nocapture readnone) unnamed_addr #2 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = tail call %class.CPDF_Dictionary* @_ZNK10CPDF_Array9GetDictAtEm(%class.CPDF_Array* %2, i64 1) #17
  %7 = icmp eq %class.CPDF_Dictionary* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalGray", %"class.(anonymous namespace)::CPDF_CalGray"* %0, i64 0, i32 2, i64 0
  %10 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_113GetWhitePointEPK15CPDF_DictionaryPf(%class.CPDF_Dictionary* nonnull %6, float* %9)
  br i1 %10, label %11, label %19

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalGray", %"class.(anonymous namespace)::CPDF_CalGray"* %0, i64 0, i32 3, i64 0
  tail call fastcc void @_ZN12_GLOBAL__N_113GetBlackPointEPK15CPDF_DictionaryPf(%class.CPDF_Dictionary* nonnull %6, float* %12)
  %13 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #17
  %14 = call float @_ZNK15CPDF_Dictionary12GetNumberForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #17
  %15 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalGray", %"class.(anonymous namespace)::CPDF_CalGray"* %0, i64 0, i32 1
  store float %14, float* %15, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %16 = load float, float* %15, align 4
  %17 = fcmp oeq float %16, 0.000000e+00
  br i1 %17, label %18, label %19

18:                                               ; preds = %11
  store float 1.000000e+00, float* %15, align 4
  br label %19

19:                                               ; preds = %11, %18, %8, %4
  %20 = phi i32 [ 0, %4 ], [ 0, %8 ], [ 1, %18 ], [ 1, %11 ]
  ret i32 %20
}

declare %class.CPDF_Dictionary* @_ZNK10CPDF_Array9GetDictAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_113GetWhitePointEPK15CPDF_DictionaryPf(%class.CPDF_Dictionary*, float* nocapture) unnamed_addr #2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)) #17
  %5 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  %6 = icmp eq %class.CPDF_Array* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %5, i64 0, i32 1
  %9 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %5, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"class.fxcrt::RetainPtr.147"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.165"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 24
  br i1 %15, label %16, label %29

16:                                               ; preds = %7
  %17 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %5, i64 0) #17
  store float %17, float* %1, align 4
  %18 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %5, i64 1) #17
  %19 = getelementptr inbounds float, float* %1, i64 1
  store float %18, float* %19, align 4
  %20 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %5, i64 2) #17
  %21 = getelementptr inbounds float, float* %1, i64 2
  store float %20, float* %21, align 4
  %22 = load float, float* %1, align 4
  %23 = fcmp ogt float %22, 0.000000e+00
  br i1 %23, label %24, label %29

24:                                               ; preds = %16
  %25 = load float, float* %19, align 4
  %26 = fcmp oeq float %25, 1.000000e+00
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = fcmp ogt float %20, 0.000000e+00
  br label %29

29:                                               ; preds = %16, %24, %27, %2, %7
  %30 = phi i1 [ false, %7 ], [ false, %2 ], [ false, %24 ], [ false, %16 ], [ %28, %27 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_113GetBlackPointEPK15CPDF_DictionaryPf(%class.CPDF_Dictionary*, float* nocapture) unnamed_addr #2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0)) #17
  %5 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  %6 = icmp eq %class.CPDF_Array* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %5, i64 0, i32 1
  %9 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %5, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"class.fxcrt::RetainPtr.147"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.165"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 24
  br i1 %15, label %16, label %23

16:                                               ; preds = %7
  %17 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %5, i64 0) #17
  store float %17, float* %1, align 4
  %18 = fcmp olt float %17, 0.000000e+00
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %5, i64 1) #17
  %21 = getelementptr inbounds float, float* %1, i64 1
  store float %20, float* %21, align 4
  %22 = fcmp olt float %20, 0.000000e+00
  br i1 %22, label %23, label %26

23:                                               ; preds = %16, %19, %26, %2, %7
  %24 = bitcast float* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 12, i1 false) #17
  br label %25

25:                                               ; preds = %23, %26
  ret void

26:                                               ; preds = %19
  %27 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %5, i64 2) #17
  %28 = getelementptr inbounds float, float* %1, i64 2
  store float %27, float* %28, align 4
  %29 = fcmp olt float %27, 0.000000e+00
  br i1 %29, label %23, label %25
}

declare float @_ZNK15CPDF_Dictionary12GetNumberForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #3

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_111CPDF_CalRGBD0Ev(%"class.(anonymous namespace)::CPDF_CalRGB"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Array*, %class.CPDF_Array** %3, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %3, align 8
  %5 = icmp eq %class.CPDF_Array* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %4, i64 0, i32 0, i32 0
  %13 = bitcast %class.CPDF_Array* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #17
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %18) #17
  %19 = bitcast %"class.(anonymous namespace)::CPDF_CalRGB"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_111CPDF_CalRGB6GetRGBEN6pdfium4spanIKfEEPfS5_S5_(%"class.(anonymous namespace)::CPDF_CalRGB"* nocapture readonly, %"class.pdfium::span"* nocapture readonly, float* nocapture, float* nocapture, float* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca i32, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca i32, align 4
  %13 = alloca float, align 4
  %14 = alloca float, align 4
  %15 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %19, !prof !2

18:                                               ; preds = %5
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 0, i32 0
  %21 = load float*, float** %20, align 8
  %22 = load float, float* %21, align 4
  %23 = icmp eq i64 %16, 1
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %19
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

25:                                               ; preds = %19
  %26 = getelementptr inbounds float, float* %21, i64 1
  %27 = load float, float* %26, align 4
  %28 = icmp ugt i64 %16, 2
  br i1 %28, label %30, label %29, !prof !56

29:                                               ; preds = %25
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

30:                                               ; preds = %25
  %31 = getelementptr inbounds float, float* %21, i64 2
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 5
  %34 = load i8, i8* %33, align 4, !range !53
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 3, i64 0
  %38 = load float, float* %37, align 4
  %39 = tail call float @powf(float %22, float %38) #17
  %40 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 3, i64 1
  %41 = load float, float* %40, align 4
  %42 = tail call float @powf(float %27, float %41) #17
  %43 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 3, i64 2
  %44 = load float, float* %43, align 4
  %45 = tail call float @powf(float %32, float %44) #17
  br label %46

46:                                               ; preds = %30, %36
  %47 = phi float [ %39, %36 ], [ %22, %30 ]
  %48 = phi float [ %42, %36 ], [ %27, %30 ]
  %49 = phi float [ %45, %36 ], [ %32, %30 ]
  %50 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 6
  %51 = load i8, i8* %50, align 1, !range !53
  %52 = icmp eq i8 %51, 0
  %53 = insertelement <2 x float> undef, float %47, i32 0
  %54 = insertelement <2 x float> %53, float %49, i32 1
  br i1 %52, label %95, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 0
  %57 = load float, float* %56, align 8
  %58 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 3
  %59 = load float, float* %58, align 4
  %60 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 6
  %61 = load float, float* %60, align 8
  %62 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 1
  %63 = load float, float* %62, align 4
  %64 = fmul float %47, %63
  %65 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 4
  %66 = load float, float* %65, align 8
  %67 = fmul float %48, %66
  %68 = fadd float %64, %67
  %69 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 7
  %70 = load float, float* %69, align 4
  %71 = fmul float %49, %70
  %72 = fadd float %68, %71
  %73 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 2
  %74 = load float, float* %73, align 8
  %75 = shufflevector <2 x float> %53, <2 x float> undef, <2 x i32> zeroinitializer
  %76 = insertelement <2 x float> undef, float %57, i32 0
  %77 = insertelement <2 x float> %76, float %74, i32 1
  %78 = fmul <2 x float> %75, %77
  %79 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 5
  %80 = load float, float* %79, align 4
  %81 = insertelement <2 x float> undef, float %48, i32 0
  %82 = shufflevector <2 x float> %81, <2 x float> undef, <2 x i32> zeroinitializer
  %83 = insertelement <2 x float> undef, float %59, i32 0
  %84 = insertelement <2 x float> %83, float %80, i32 1
  %85 = fmul <2 x float> %82, %84
  %86 = fadd <2 x float> %78, %85
  %87 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 8
  %88 = load float, float* %87, align 8
  %89 = insertelement <2 x float> undef, float %49, i32 0
  %90 = shufflevector <2 x float> %89, <2 x float> undef, <2 x i32> zeroinitializer
  %91 = insertelement <2 x float> undef, float %61, i32 0
  %92 = insertelement <2 x float> %91, float %88, i32 1
  %93 = fmul <2 x float> %90, %92
  %94 = fadd <2 x float> %86, %93
  br label %95

95:                                               ; preds = %46, %55
  %96 = phi float [ %72, %55 ], [ %48, %46 ]
  %97 = phi <2 x float> [ %94, %55 ], [ %54, %46 ]
  %98 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 1, i64 0
  %99 = load float, float* %98, align 4
  %100 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 1, i64 1
  %101 = bitcast float* %100 to <2 x float>*
  %102 = load <2 x float>, <2 x float>* %101, align 4
  %103 = fmul float %99, 0x3FF27C0F20000000
  %104 = fmul <2 x float> %102, <float 0x4001E37100000000, float 0x3FA95C30C0000000>
  %105 = extractelement <2 x float> %104, i32 0
  %106 = fsub float %105, %103
  %107 = extractelement <2 x float> %104, i32 1
  %108 = fadd float %106, %107
  %109 = insertelement <2 x float> undef, float %99, i32 0
  %110 = shufflevector <2 x float> %109, <2 x float> undef, <2 x i32> zeroinitializer
  %111 = fmul <2 x float> %110, <float 0x3FB1229C00000000, float 0x4000B4F2A0000000>
  %112 = shufflevector <2 x float> %102, <2 x float> undef, <2 x i32> zeroinitializer
  %113 = fmul <2 x float> %112, <float 0x3FCF6A1EC0000000, float 0x3FEFB33C00000000>
  %114 = fsub <2 x float> %111, %113
  %115 = shufflevector <2 x float> %102, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %116 = fmul <2 x float> %115, <float 0x3FF4591A60000000, float 0x3FD48FEFA0000000>
  %117 = fadd <2 x float> %114, %116
  %118 = fsub <2 x float> %114, %116
  %119 = shufflevector <2 x float> %117, <2 x float> %118, <2 x i32> <i32 0, i32 3>
  %120 = fmul float %108, 0x3FD3333340000000
  %121 = fadd float %120, 0.000000e+00
  %122 = fmul <2 x float> %119, <float 0x3FC3333340000000, float 0x3FE47AE140000000>
  %123 = fadd <2 x float> %122, zeroinitializer
  %124 = fmul <2 x float> %119, <float 0x3FAEB851E0000000, float 0x3F9EB85200000000>
  %125 = fadd <2 x float> %124, zeroinitializer
  %126 = insertelement <2 x float> undef, float %108, i32 0
  %127 = shufflevector <2 x float> %126, <2 x float> undef, <2 x i32> zeroinitializer
  %128 = fmul <2 x float> %127, <float 0x3FB9999900000000, float 0x3FE3333340000000>
  %129 = fadd <2 x float> %128, zeroinitializer
  %130 = shufflevector <2 x float> %118, <2 x float> %117, <2 x i32> <i32 1, i32 2>
  %131 = fmul <2 x float> %130, <float 0x3FD51EB860000000, float 0x3FE947AE20000000>
  %132 = fadd <2 x float> %131, zeroinitializer
  %133 = extractelement <2 x float> %132, i32 0
  %134 = extractelement <2 x float> %132, i32 1
  %135 = fmul float %134, %133
  %136 = extractelement <2 x float> %125, i32 0
  %137 = extractelement <2 x float> %125, i32 1
  %138 = fmul float %136, %137
  %139 = fsub float %135, %138
  %140 = fmul float %121, %139
  %141 = fmul <2 x float> %129, %132
  %142 = shufflevector <2 x float> %129, <2 x float> %125, <2 x i32> <i32 1, i32 2>
  %143 = shufflevector <2 x float> %125, <2 x float> %129, <2 x i32> <i32 1, i32 2>
  %144 = fmul <2 x float> %142, %143
  %145 = fsub <2 x float> %141, %144
  %146 = fmul <2 x float> %123, %145
  %147 = extractelement <2 x float> %146, i32 1
  %148 = fsub float %147, %140
  %149 = extractelement <2 x float> %146, i32 0
  %150 = fadd float %149, %148
  %151 = tail call float @llvm.fabs.f32(float %150) #17
  %152 = fcmp olt float %151, 0x3E80000000000000
  br i1 %152, label %205, label %153

153:                                              ; preds = %95
  %154 = extractelement <2 x float> %132, i32 1
  %155 = fmul float %154, %121
  %156 = extractelement <2 x float> %123, i32 0
  %157 = extractelement <2 x float> %129, i32 0
  %158 = fmul float %157, %156
  %159 = fsub float %155, %158
  %160 = extractelement <2 x float> %125, i32 0
  %161 = fmul float %160, %121
  %162 = extractelement <2 x float> %129, i32 1
  %163 = fmul float %162, %156
  %164 = extractelement <2 x float> %123, i32 1
  %165 = fmul float %164, %154
  %166 = extractelement <2 x float> %125, i32 1
  %167 = fmul float %166, %156
  %168 = insertelement <4 x float> <float -0.000000e+00, float undef, float -0.000000e+00, float undef>, float %161, i32 1
  %169 = insertelement <4 x float> %168, float %165, i32 3
  %170 = insertelement <4 x float> undef, float %159, i32 0
  %171 = insertelement <4 x float> %170, float %163, i32 1
  %172 = insertelement <4 x float> %171, float %139, i32 2
  %173 = insertelement <4 x float> %172, float %167, i32 3
  %174 = fsub <4 x float> %169, %173
  %175 = fmul float %164, %160
  %176 = extractelement <2 x float> %132, i32 0
  %177 = fmul float %176, %156
  %178 = fsub float %175, %177
  %179 = fsub float -0.000000e+00, %178
  %180 = fmul float %164, %157
  %181 = fmul float %121, %166
  %182 = fsub float %180, %181
  %183 = fsub float -0.000000e+00, %182
  %184 = extractelement <2 x float> %145, i32 1
  %185 = insertelement <8 x float> undef, float %184, i32 0
  %186 = extractelement <4 x float> %174, i32 0
  %187 = insertelement <8 x float> %185, float %186, i32 1
  %188 = extractelement <4 x float> %174, i32 1
  %189 = insertelement <8 x float> %187, float %188, i32 2
  %190 = extractelement <4 x float> %174, i32 2
  %191 = insertelement <8 x float> %189, float %190, i32 3
  %192 = extractelement <4 x float> %174, i32 3
  %193 = insertelement <8 x float> %191, float %192, i32 4
  %194 = insertelement <8 x float> %193, float %179, i32 5
  %195 = extractelement <2 x float> %145, i32 0
  %196 = insertelement <8 x float> %194, float %195, i32 6
  %197 = insertelement <8 x float> %196, float %183, i32 7
  %198 = insertelement <8 x float> undef, float %150, i32 0
  %199 = shufflevector <8 x float> %198, <8 x float> undef, <8 x i32> zeroinitializer
  %200 = fdiv <8 x float> %197, %199
  %201 = fmul float %164, %162
  %202 = fmul float %121, %176
  %203 = fsub float %201, %202
  %204 = fdiv float %203, %150
  br label %205

205:                                              ; preds = %153, %95
  %206 = phi float [ %204, %153 ], [ 0.000000e+00, %95 ]
  %207 = phi <8 x float> [ %200, %153 ], [ zeroinitializer, %95 ]
  %208 = extractelement <8 x float> %207, i32 1
  %209 = fmul float %96, %208
  %210 = shufflevector <8 x float> %207, <8 x float> undef, <2 x i32> <i32 0, i32 2>
  %211 = fmul <2 x float> %97, %210
  %212 = extractelement <2 x float> %211, i32 0
  %213 = fadd float %212, %209
  %214 = extractelement <2 x float> %211, i32 1
  %215 = fadd float %213, %214
  %216 = extractelement <8 x float> %207, i32 3
  %217 = extractelement <2 x float> %97, i32 0
  %218 = fmul float %217, %216
  %219 = extractelement <8 x float> %207, i32 4
  %220 = fmul float %96, %219
  %221 = fadd float %218, %220
  %222 = extractelement <8 x float> %207, i32 5
  %223 = extractelement <2 x float> %97, i32 1
  %224 = fmul float %223, %222
  %225 = fadd float %221, %224
  %226 = extractelement <8 x float> %207, i32 6
  %227 = fmul float %217, %226
  %228 = extractelement <8 x float> %207, i32 7
  %229 = fmul float %96, %228
  %230 = fadd float %227, %229
  %231 = fmul float %223, %206
  %232 = fadd float %230, %231
  %233 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %233)
  %234 = bitcast i32* %6 to float*
  store float %215, float* %234, align 4
  %235 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %235)
  store float 0.000000e+00, float* %7, align 4
  %236 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %236)
  store float 1.000000e+00, float* %8, align 4
  %237 = fcmp olt float %215, 0.000000e+00
  %238 = select i1 %237, float* %7, float* %234
  %239 = load float, float* %238, align 4
  %240 = fcmp ogt float %239, 1.000000e+00
  %241 = select i1 %240, float* %8, float* %238
  %242 = bitcast float* %241 to i32*
  %243 = load i32, i32* %242, align 4
  store i32 %243, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %236)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %235)
  %244 = bitcast i32 %243 to float
  %245 = fmul float %244, 1.023000e+03
  %246 = fptosi float %245 to i32
  %247 = icmp sgt i32 %246, 0
  %248 = select i1 %247, i32 %246, i32 0
  %249 = icmp slt i32 %248, 192
  br i1 %249, label %250, label %253

250:                                              ; preds = %205
  %251 = zext i32 %248 to i64
  %252 = getelementptr inbounds [192 x i8], [192 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples1E, i64 0, i64 %251
  br label %258

253:                                              ; preds = %205
  %254 = lshr i32 %248, 2
  %255 = add nsw i32 %254, -48
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [208 x i8], [208 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples2E, i64 0, i64 %256
  br label %258

258:                                              ; preds = %253, %250
  %259 = phi i8* [ %252, %250 ], [ %257, %253 ]
  %260 = load i8, i8* %259, align 1
  %261 = uitofp i8 %260 to float
  %262 = fdiv float %261, 2.550000e+02
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %233)
  store float %262, float* %2, align 4
  %263 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %263)
  %264 = bitcast i32* %9 to float*
  store float %225, float* %264, align 4
  %265 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %265)
  store float 0.000000e+00, float* %10, align 4
  %266 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %266)
  store float 1.000000e+00, float* %11, align 4
  %267 = fcmp olt float %225, 0.000000e+00
  %268 = select i1 %267, float* %10, float* %264
  %269 = load float, float* %268, align 4
  %270 = fcmp ogt float %269, 1.000000e+00
  %271 = select i1 %270, float* %11, float* %268
  %272 = bitcast float* %271 to i32*
  %273 = load i32, i32* %272, align 4
  store i32 %273, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %266)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %265)
  %274 = bitcast i32 %273 to float
  %275 = fmul float %274, 1.023000e+03
  %276 = fptosi float %275 to i32
  %277 = icmp sgt i32 %276, 0
  %278 = select i1 %277, i32 %276, i32 0
  %279 = icmp slt i32 %278, 192
  br i1 %279, label %280, label %283

280:                                              ; preds = %258
  %281 = zext i32 %278 to i64
  %282 = getelementptr inbounds [192 x i8], [192 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples1E, i64 0, i64 %281
  br label %288

283:                                              ; preds = %258
  %284 = lshr i32 %278, 2
  %285 = add nsw i32 %284, -48
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [208 x i8], [208 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples2E, i64 0, i64 %286
  br label %288

288:                                              ; preds = %283, %280
  %289 = phi i8* [ %282, %280 ], [ %287, %283 ]
  %290 = load i8, i8* %289, align 1
  %291 = uitofp i8 %290 to float
  %292 = fdiv float %291, 2.550000e+02
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %263)
  store float %292, float* %3, align 4
  %293 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %293)
  %294 = bitcast i32* %12 to float*
  store float %232, float* %294, align 4
  %295 = bitcast float* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %295)
  store float 0.000000e+00, float* %13, align 4
  %296 = bitcast float* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %296)
  store float 1.000000e+00, float* %14, align 4
  %297 = fcmp olt float %232, 0.000000e+00
  %298 = select i1 %297, float* %13, float* %294
  %299 = load float, float* %298, align 4
  %300 = fcmp ogt float %299, 1.000000e+00
  %301 = select i1 %300, float* %14, float* %298
  %302 = bitcast float* %301 to i32*
  %303 = load i32, i32* %302, align 4
  store i32 %303, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %296)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %295)
  %304 = bitcast i32 %303 to float
  %305 = fmul float %304, 1.023000e+03
  %306 = fptosi float %305 to i32
  %307 = icmp sgt i32 %306, 0
  %308 = select i1 %307, i32 %306, i32 0
  %309 = icmp slt i32 %308, 192
  br i1 %309, label %310, label %313

310:                                              ; preds = %288
  %311 = zext i32 %308 to i64
  %312 = getelementptr inbounds [192 x i8], [192 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples1E, i64 0, i64 %311
  br label %318

313:                                              ; preds = %288
  %314 = lshr i32 %308, 2
  %315 = add nsw i32 %314, -48
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [208 x i8], [208 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples2E, i64 0, i64 %316
  br label %318

318:                                              ; preds = %310, %313
  %319 = phi i8* [ %312, %310 ], [ %317, %313 ]
  %320 = load i8, i8* %319, align 1
  %321 = uitofp i8 %320 to float
  %322 = fdiv float %321, 2.550000e+02
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %293)
  store float %322, float* %4, align 4
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_111CPDF_CalRGB18TranslateImageLineEPhPKhiiib(%"class.(anonymous namespace)::CPDF_CalRGB"* nocapture readonly, i8*, i8*, i32, i32, i32, i1 zeroext) unnamed_addr #2 align 2 {
  %8 = alloca [3 x float], align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca %"class.pdfium::span", align 8
  br i1 %6, label %13, label %62

13:                                               ; preds = %7
  %14 = bitcast [3 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #17
  %15 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  %16 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  %17 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 2
  store float 0xFFFFFFFFE0000000, float* %17, align 4
  %18 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #17
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %19 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #17
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %20 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #17
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %21 = icmp sgt i32 %3, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %12, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %12, i64 0, i32 1
  br label %28

25:                                               ; preds = %28, %13
  %26 = phi i8* [ %2, %13 ], [ %58, %28 ]
  %27 = phi i8* [ %1, %13 ], [ %59, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #17
  br label %62

28:                                               ; preds = %28, %22
  %29 = phi i32 [ 0, %22 ], [ %60, %28 ]
  %30 = phi i8* [ %1, %22 ], [ %59, %28 ]
  %31 = phi i8* [ %2, %22 ], [ %58, %28 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = uitofp i8 %33 to float
  %35 = fdiv float %34, 2.550000e+02
  store float %35, float* %15, align 4
  %36 = getelementptr inbounds i8, i8* %31, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = uitofp i8 %37 to float
  %39 = fdiv float %38, 2.550000e+02
  store float %39, float* %16, align 4
  %40 = load i8, i8* %31, align 1
  %41 = uitofp i8 %40 to float
  %42 = fdiv float %41, 2.550000e+02
  store float %42, float* %17, align 4
  store float* %15, float** %23, align 8
  store i64 3, i64* %24, align 8
  %43 = call zeroext i1 @_ZNK12_GLOBAL__N_111CPDF_CalRGB6GetRGBEN6pdfium4spanIKfEEPfS5_S5_(%"class.(anonymous namespace)::CPDF_CalRGB"* %0, %"class.pdfium::span"* nonnull %12, float* nonnull %9, float* nonnull %10, float* nonnull %11)
  %44 = load float, float* %11, align 4
  %45 = fmul float %44, 2.550000e+02
  %46 = call i32 @FXSYS_roundf(float %45) #17
  %47 = trunc i32 %46 to i8
  store i8 %47, i8* %30, align 1
  %48 = load float, float* %10, align 4
  %49 = fmul float %48, 2.550000e+02
  %50 = call i32 @FXSYS_roundf(float %49) #17
  %51 = trunc i32 %50 to i8
  %52 = getelementptr inbounds i8, i8* %30, i64 1
  store i8 %51, i8* %52, align 1
  %53 = load float, float* %9, align 4
  %54 = fmul float %53, 2.550000e+02
  %55 = call i32 @FXSYS_roundf(float %54) #17
  %56 = trunc i32 %55 to i8
  %57 = getelementptr inbounds i8, i8* %30, i64 2
  store i8 %56, i8* %57, align 1
  %58 = getelementptr inbounds i8, i8* %31, i64 3
  %59 = getelementptr inbounds i8, i8* %30, i64 3
  %60 = add nuw nsw i32 %29, 1
  %61 = icmp eq i32 %60, %3
  br i1 %61, label %25, label %28

62:                                               ; preds = %25, %7
  %63 = phi i8* [ %26, %25 ], [ %2, %7 ]
  %64 = phi i8* [ %27, %25 ], [ %1, %7 ]
  call void @_ZN7fxcodec10ReverseRGBEPhPKhi(i8* %64, i8* %63, i32 %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_111CPDF_CalRGB6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE(%"class.(anonymous namespace)::CPDF_CalRGB"* nocapture, %class.CPDF_Document* nocapture readnone, %class.CPDF_Array*, %"class.std::__1::set.188"* nocapture readnone) unnamed_addr #2 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = tail call %class.CPDF_Dictionary* @_ZNK10CPDF_Array9GetDictAtEm(%class.CPDF_Array* %2, i64 1) #17
  %8 = icmp eq %class.CPDF_Dictionary* %7, null
  br i1 %8, label %49, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 1, i64 0
  %11 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_113GetWhitePointEPK15CPDF_DictionaryPf(%class.CPDF_Dictionary* nonnull %7, float* %10)
  br i1 %11, label %12, label %49

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 2, i64 0
  tail call fastcc void @_ZN12_GLOBAL__N_113GetBlackPointEPK15CPDF_DictionaryPf(%class.CPDF_Dictionary* nonnull %7, float* %13)
  %14 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #17
  %15 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %7, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %16 = icmp eq %class.CPDF_Array* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 5
  store i8 1, i8* %18, align 4
  %19 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %15, i64 0) #17
  %20 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 3, i64 0
  store float %19, float* %20, align 4
  %21 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %15, i64 1) #17
  %22 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 3, i64 1
  store float %21, float* %22, align 4
  %23 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %15, i64 2) #17
  %24 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 3, i64 2
  store float %23, float* %24, align 4
  br label %25

25:                                               ; preds = %17, %12
  %26 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #17
  %27 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %7, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #17
  %28 = icmp eq %class.CPDF_Array* %27, null
  br i1 %28, label %49, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 6
  store i8 1, i8* %30, align 1
  %31 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %27, i64 0) #17
  %32 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 0
  store float %31, float* %32, align 4
  %33 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %27, i64 1) #17
  %34 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 1
  store float %33, float* %34, align 4
  %35 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %27, i64 2) #17
  %36 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 2
  store float %35, float* %36, align 4
  %37 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %27, i64 3) #17
  %38 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 3
  store float %37, float* %38, align 4
  %39 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %27, i64 4) #17
  %40 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 4
  store float %39, float* %40, align 4
  %41 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %27, i64 5) #17
  %42 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 5
  store float %41, float* %42, align 4
  %43 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %27, i64 6) #17
  %44 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 6
  store float %43, float* %44, align 4
  %45 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %27, i64 7) #17
  %46 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 7
  store float %45, float* %46, align 4
  %47 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %27, i64 8) #17
  %48 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_CalRGB", %"class.(anonymous namespace)::CPDF_CalRGB"* %0, i64 0, i32 4, i64 8
  store float %47, float* %48, align 4
  br label %49

49:                                               ; preds = %29, %25, %9, %4
  %50 = phi i32 [ 0, %4 ], [ 0, %9 ], [ 3, %25 ], [ 3, %29 ]
  ret i32 %50
}

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #14

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #15

declare i32 @FXSYS_roundf(float) local_unnamed_addr #3

declare void @_ZN7fxcodec10ReverseRGBEPhPKhi(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_ColorSpaceD2Ev(%class.CPDF_ColorSpace*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Array*, %class.CPDF_Array** %3, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %3, align 8
  %5 = icmp eq %class.CPDF_Array* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %4, i64 0, i32 0, i32 0
  %13 = bitcast %class.CPDF_Array* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #17
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %18) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_110CPDF_LabCSD0Ev(%"class.(anonymous namespace)::CPDF_LabCS"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Array*, %class.CPDF_Array** %3, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %3, align 8
  %5 = icmp eq %class.CPDF_Array* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %4, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %4, i64 0, i32 0, i32 0
  %13 = bitcast %class.CPDF_Array* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #17
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %18) #17
  %19 = bitcast %"class.(anonymous namespace)::CPDF_LabCS"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_110CPDF_LabCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_(%"class.(anonymous namespace)::CPDF_LabCS"* nocapture readnone, %"class.pdfium::span"* nocapture readonly, float* nocapture, float* nocapture, float* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca i32, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca i32, align 4
  %13 = alloca float, align 4
  %14 = alloca float, align 4
  %15 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %19, !prof !2

18:                                               ; preds = %5
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 0, i32 0
  %21 = load float*, float** %20, align 8
  %22 = load float, float* %21, align 4
  %23 = icmp eq i64 %16, 1
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %19
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

25:                                               ; preds = %19
  %26 = icmp ugt i64 %16, 2
  br i1 %26, label %28, label %27, !prof !56

27:                                               ; preds = %25
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

28:                                               ; preds = %25
  %29 = getelementptr inbounds float, float* %21, i64 1
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds float, float* %21, i64 2
  %32 = load float, float* %31, align 4
  %33 = fadd float %22, 1.600000e+01
  %34 = insertelement <2 x float> undef, float %33, i32 0
  %35 = insertelement <2 x float> %34, float %30, i32 1
  %36 = fdiv <2 x float> %35, <float 1.160000e+02, float 5.000000e+02>
  %37 = extractelement <2 x float> %36, i32 0
  %38 = extractelement <2 x float> %36, i32 1
  %39 = fadd float %37, %38
  %40 = fdiv float %32, 2.000000e+02
  %41 = fsub float %37, %40
  %42 = fcmp olt float %39, 0x3FCA7BB300000000
  br i1 %42, label %43, label %46

43:                                               ; preds = %28
  %44 = fadd float %39, 0xBFC1A6B500000000
  %45 = fmul float %44, 0x3FBF763D40000000
  br label %50

46:                                               ; preds = %28
  %47 = fmul float %39, 0x3FEE9FBE80000000
  %48 = fmul float %39, %47
  %49 = fmul float %39, %48
  br label %50

50:                                               ; preds = %46, %43
  %51 = phi float [ %45, %43 ], [ %49, %46 ]
  %52 = fcmp olt float %37, 0x3FCA7BB300000000
  %53 = fadd float %37, 0xBFC1A6B500000000
  %54 = fmul float %53, 0x3FC0701100000000
  %55 = fmul float %37, %37
  %56 = fmul float %37, %55
  %57 = select i1 %52, float %54, float %56
  %58 = fcmp olt float %41, 0x3FCA7BB300000000
  br i1 %58, label %59, label %62

59:                                               ; preds = %50
  %60 = fadd float %41, 0xBFC1A6B500000000
  %61 = fmul float %60, 0x3FC1E629E0000000
  br label %66

62:                                               ; preds = %50
  %63 = fmul float %41, 0x3FF16C2260000000
  %64 = fmul float %41, %63
  %65 = fmul float %41, %64
  br label %66

66:                                               ; preds = %62, %59
  %67 = phi float [ %61, %59 ], [ %65, %62 ]
  %68 = fmul float %51, 0x4009ED9160000000
  %69 = fmul float %57, 0x3FF89930C0000000
  %70 = fsub float %68, %69
  %71 = fmul float %67, 0x3FDFE91000000000
  %72 = fsub float %70, %71
  %73 = fmul float %51, 0x3FEF03AFC0000000
  %74 = fmul float %57, 0x3FFE0418A0000000
  %75 = fsub float %74, %73
  %76 = fmul float %67, 0x3FA54C9860000000
  %77 = fadd float %75, %76
  %78 = fmul float %51, 0x3FAC779A60000000
  %79 = fmul float %57, 0x3FCA1CAC00000000
  %80 = fsub float %78, %79
  %81 = fmul float %67, 0x3FF0E978E0000000
  %82 = fadd float %80, %81
  %83 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83)
  %84 = bitcast i32* %12 to float*
  store float %72, float* %84, align 4
  %85 = bitcast float* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85)
  store float 0.000000e+00, float* %13, align 4
  %86 = bitcast float* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86)
  store float 1.000000e+00, float* %14, align 4
  %87 = fcmp olt float %72, 0.000000e+00
  %88 = select i1 %87, float* %13, float* %84
  %89 = load float, float* %88, align 4
  %90 = fcmp ogt float %89, 1.000000e+00
  %91 = select i1 %90, float* %14, float* %88
  %92 = bitcast float* %91 to i32*
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85)
  %94 = bitcast i32 %93 to float
  %95 = fmul float %94, 1.023000e+03
  %96 = fptosi float %95 to i32
  %97 = icmp sgt i32 %96, 0
  %98 = select i1 %97, i32 %96, i32 0
  %99 = icmp slt i32 %98, 192
  br i1 %99, label %100, label %103

100:                                              ; preds = %66
  %101 = zext i32 %98 to i64
  %102 = getelementptr inbounds [192 x i8], [192 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples1E, i64 0, i64 %101
  br label %108

103:                                              ; preds = %66
  %104 = lshr i32 %98, 2
  %105 = add nsw i32 %104, -48
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [208 x i8], [208 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples2E, i64 0, i64 %106
  br label %108

108:                                              ; preds = %103, %100
  %109 = phi i8* [ %102, %100 ], [ %107, %103 ]
  %110 = load i8, i8* %109, align 1
  %111 = uitofp i8 %110 to float
  %112 = fdiv float %111, 2.550000e+02
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83)
  store float %112, float* %2, align 4
  %113 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113)
  %114 = bitcast i32* %6 to float*
  store float %77, float* %114, align 4
  %115 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115)
  store float 0.000000e+00, float* %7, align 4
  %116 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116)
  store float 1.000000e+00, float* %8, align 4
  %117 = fcmp olt float %77, 0.000000e+00
  %118 = select i1 %117, float* %7, float* %114
  %119 = load float, float* %118, align 4
  %120 = fcmp ogt float %119, 1.000000e+00
  %121 = select i1 %120, float* %8, float* %118
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4
  store i32 %123, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115)
  %124 = bitcast i32 %123 to float
  %125 = fmul float %124, 1.023000e+03
  %126 = fptosi float %125 to i32
  %127 = icmp sgt i32 %126, 0
  %128 = select i1 %127, i32 %126, i32 0
  %129 = icmp slt i32 %128, 192
  br i1 %129, label %130, label %133

130:                                              ; preds = %108
  %131 = zext i32 %128 to i64
  %132 = getelementptr inbounds [192 x i8], [192 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples1E, i64 0, i64 %131
  br label %138

133:                                              ; preds = %108
  %134 = lshr i32 %128, 2
  %135 = add nsw i32 %134, -48
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [208 x i8], [208 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples2E, i64 0, i64 %136
  br label %138

138:                                              ; preds = %133, %130
  %139 = phi i8* [ %132, %130 ], [ %137, %133 ]
  %140 = load i8, i8* %139, align 1
  %141 = uitofp i8 %140 to float
  %142 = fdiv float %141, 2.550000e+02
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113)
  store float %142, float* %3, align 4
  %143 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143)
  %144 = bitcast i32* %9 to float*
  store float %82, float* %144, align 4
  %145 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145)
  store float 0.000000e+00, float* %10, align 4
  %146 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146)
  store float 1.000000e+00, float* %11, align 4
  %147 = fcmp olt float %82, 0.000000e+00
  %148 = select i1 %147, float* %10, float* %144
  %149 = load float, float* %148, align 4
  %150 = fcmp ogt float %149, 1.000000e+00
  %151 = select i1 %150, float* %11, float* %148
  %152 = bitcast float* %151 to i32*
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145)
  %154 = bitcast i32 %153 to float
  %155 = fmul float %154, 1.023000e+03
  %156 = fptosi float %155 to i32
  %157 = icmp sgt i32 %156, 0
  %158 = select i1 %157, i32 %156, i32 0
  %159 = icmp slt i32 %158, 192
  br i1 %159, label %160, label %163

160:                                              ; preds = %138
  %161 = zext i32 %158 to i64
  %162 = getelementptr inbounds [192 x i8], [192 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples1E, i64 0, i64 %161
  br label %168

163:                                              ; preds = %138
  %164 = lshr i32 %158, 2
  %165 = add nsw i32 %164, -48
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [208 x i8], [208 x i8]* @_ZN12_GLOBAL__N_114g_sRGBSamples2E, i64 0, i64 %166
  br label %168

168:                                              ; preds = %160, %163
  %169 = phi i8* [ %162, %160 ], [ %167, %163 ]
  %170 = load i8, i8* %169, align 1
  %171 = uitofp i8 %170 to float
  %172 = fdiv float %171, 2.550000e+02
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143)
  store float %172, float* %4, align 4
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_110CPDF_LabCS15GetDefaultValueEiPfS1_S1_(%"class.(anonymous namespace)::CPDF_LabCS"* nocapture readonly, i32, float* nocapture, float* nocapture, float* nocapture) unnamed_addr #2 align 2 {
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store float 0.000000e+00, float* %3, align 4
  store float 1.000000e+02, float* %4, align 4
  br label %28

8:                                                ; preds = %5
  %9 = shl nsw i32 %1, 1
  %10 = add nsw i32 %9, -2
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 3, i64 %11
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = bitcast float* %3 to i32*
  store i32 %14, i32* %15, align 4
  %16 = add nsw i32 %9, -1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 3, i64 %17
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = bitcast float* %4 to i32*
  store i32 %20, i32* %21, align 4
  %22 = load float, float* %3, align 4
  %23 = fcmp ogt float %22, 0.000000e+00
  %24 = bitcast i32 %20 to float
  %25 = select i1 %23, float %22, float 0.000000e+00
  %26 = fcmp ogt float %25, %24
  %27 = select i1 %26, float %24, float %25
  br label %28

28:                                               ; preds = %8, %7
  %29 = phi float [ %27, %8 ], [ 0.000000e+00, %7 ]
  store float %29, float* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_110CPDF_LabCS18TranslateImageLineEPhPKhiiib(%"class.(anonymous namespace)::CPDF_LabCS"* nocapture readnone, i8* nocapture, i8* nocapture readonly, i32, i32, i32, i1 zeroext) unnamed_addr #2 align 2 {
  %8 = alloca [3 x float], align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca %"class.pdfium::span", align 8
  %13 = icmp sgt i32 %3, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %7
  %15 = bitcast [3 x float]* %8 to i8*
  %16 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 0
  %17 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 1
  %18 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 2
  %19 = bitcast float* %9 to i8*
  %20 = bitcast float* %10 to i8*
  %21 = bitcast float* %11 to i8*
  %22 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %12, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %12, i64 0, i32 1
  br label %25

24:                                               ; preds = %25, %7
  ret void

25:                                               ; preds = %25, %14
  %26 = phi i32 [ 0, %14 ], [ %61, %25 ]
  %27 = phi i8* [ %1, %14 ], [ %59, %25 ]
  %28 = phi i8* [ %2, %14 ], [ %60, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %15) #17
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  store float 0xFFFFFFFFE0000000, float* %17, align 4
  store float 0xFFFFFFFFE0000000, float* %18, align 4
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = mul nuw nsw i32 %30, 100
  %32 = sitofp i32 %31 to float
  %33 = fdiv float %32, 2.550000e+02
  store float %33, float* %16, align 4
  %34 = getelementptr inbounds i8, i8* %28, i64 1
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = add nsw i32 %36, -128
  %38 = sitofp i32 %37 to float
  store float %38, float* %17, align 4
  %39 = getelementptr inbounds i8, i8* %28, i64 2
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = add nsw i32 %41, -128
  %43 = sitofp i32 %42 to float
  store float %43, float* %18, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #17
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #17
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #17
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  store float* %16, float** %22, align 8
  store i64 3, i64* %23, align 8
  %44 = call zeroext i1 @_ZNK12_GLOBAL__N_110CPDF_LabCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_(%"class.(anonymous namespace)::CPDF_LabCS"* %0, %"class.pdfium::span"* nonnull %12, float* nonnull %9, float* nonnull %10, float* nonnull %11)
  %45 = load float, float* %11, align 4
  %46 = fmul float %45, 2.550000e+02
  %47 = fptosi float %46 to i32
  %48 = trunc i32 %47 to i8
  store i8 %48, i8* %27, align 1
  %49 = load float, float* %10, align 4
  %50 = fmul float %49, 2.550000e+02
  %51 = fptosi float %50 to i32
  %52 = trunc i32 %51 to i8
  %53 = getelementptr inbounds i8, i8* %27, i64 1
  store i8 %52, i8* %53, align 1
  %54 = load float, float* %9, align 4
  %55 = fmul float %54, 2.550000e+02
  %56 = fptosi float %55 to i32
  %57 = trunc i32 %56 to i8
  %58 = getelementptr inbounds i8, i8* %27, i64 2
  store i8 %57, i8* %58, align 1
  %59 = getelementptr inbounds i8, i8* %27, i64 3
  %60 = getelementptr inbounds i8, i8* %28, i64 3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #17
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %15) #17
  %61 = add nuw nsw i32 %26, 1
  %62 = icmp eq i32 %61, %3
  br i1 %62, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_110CPDF_LabCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE(%"class.(anonymous namespace)::CPDF_LabCS"* nocapture, %class.CPDF_Document* nocapture readnone, %class.CPDF_Array*, %"class.std::__1::set.188"* nocapture readnone) unnamed_addr #2 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = tail call %class.CPDF_Dictionary* @_ZNK10CPDF_Array9GetDictAtEm(%class.CPDF_Array* %2, i64 1) #17
  %7 = icmp eq %class.CPDF_Dictionary* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 1, i64 0
  %10 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_113GetWhitePointEPK15CPDF_DictionaryPf(%class.CPDF_Dictionary* nonnull %6, float* %9)
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 2, i64 0
  tail call fastcc void @_ZN12_GLOBAL__N_113GetBlackPointEPK15CPDF_DictionaryPf(%class.CPDF_Dictionary* nonnull %6, float* %12)
  %13 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #17
  %14 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %6, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %15 = icmp eq %class.CPDF_Array* %14, null
  br i1 %15, label %26, label %18

16:                                               ; preds = %30, %8, %4
  %17 = phi i32 [ 0, %4 ], [ 0, %8 ], [ 3, %30 ]
  ret i32 %17

18:                                               ; preds = %11
  %19 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %14, i64 0) #17
  %20 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 3, i64 0
  store float %19, float* %20, align 4
  %21 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %14, i64 1) #17
  %22 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 3, i64 1
  store float %21, float* %22, align 4
  %23 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %14, i64 2) #17
  %24 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 3, i64 2
  store float %23, float* %24, align 4
  %25 = call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %14, i64 3) #17
  br label %30

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 3, i64 0
  store float -1.000000e+02, float* %27, align 4
  %28 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 3, i64 1
  store float 1.000000e+02, float* %28, align 4
  %29 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 3, i64 2
  store float -1.000000e+02, float* %29, align 4
  br label %30

30:                                               ; preds = %26, %18
  %31 = phi float [ %25, %18 ], [ 1.000000e+02, %26 ]
  %32 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_LabCS", %"class.(anonymous namespace)::CPDF_LabCS"* %0, i64 0, i32 3, i64 3
  store float %31, float* %32, align 4
  br label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CPDF_ICCBasedCSD2Ev(%"class.(anonymous namespace)::CPDF_ICCBasedCS"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_115CPDF_ICCBasedCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i64
  %17 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  store i64 %16, i64* %18, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %13) #17
  br label %19

19:                                               ; preds = %11, %15
  %20 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CPDF_IccProfile*, %class.CPDF_IccProfile** %20, align 8
  store %class.CPDF_IccProfile* null, %class.CPDF_IccProfile** %20, align 8
  %22 = icmp eq %class.CPDF_IccProfile* %21, null
  br i1 %22, label %34, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %21, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %24, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %21, i64 0, i32 0
  %30 = bitcast %class.CPDF_IccProfile* %21 to void (%"class.fxcrt::Retainable"*)***
  %31 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, i64 1
  %33 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, align 8
  tail call void %33(%"class.fxcrt::Retainable"* nonnull %29) #17
  br label %34

34:                                               ; preds = %19, %23, %28
  %35 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %35, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %35, align 8
  %37 = icmp eq %class.CPDF_ColorSpace* %36, null
  br i1 %37, label %49, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %36, i64 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %36, i64 0, i32 0
  %45 = bitcast %class.CPDF_ColorSpace* %36 to void (%"class.fxcrt::Retainable"*)***
  %46 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %46, i64 1
  %48 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, align 8
  tail call void %48(%"class.fxcrt::Retainable"* nonnull %44) #17
  br label %49

49:                                               ; preds = %34, %38, %43
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %50 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %51 = load %class.CPDF_Array*, %class.CPDF_Array** %50, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %50, align 8
  %52 = icmp eq %class.CPDF_Array* %51, null
  br i1 %52, label %64, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %51, i64 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %51, i64 0, i32 0, i32 0
  %60 = bitcast %class.CPDF_Array* %51 to void (%"class.fxcrt::Retainable"*)***
  %61 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %61, i64 1
  %63 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %62, align 8
  tail call void %63(%"class.fxcrt::Retainable"* nonnull %59) #17
  br label %64

64:                                               ; preds = %49, %53, %58
  %65 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %65) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CPDF_ICCBasedCSD0Ev(%"class.(anonymous namespace)::CPDF_ICCBasedCS"*) unnamed_addr #2 align 2 {
  tail call void @_ZN12_GLOBAL__N_115CPDF_ICCBasedCSD2Ev(%"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0) #17
  %2 = bitcast %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_115CPDF_ICCBasedCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_(%"class.(anonymous namespace)::CPDF_ICCBasedCS"* nocapture readonly, %"class.pdfium::span"* nocapture readonly, float*, float*, float*) unnamed_addr #2 align 2 {
  %6 = alloca [3 x float], align 4
  %7 = alloca %"class.pdfium::span", align 8
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_IccProfile*, %class.CPDF_IccProfile** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %9, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !53
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %42, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %18, !prof !2

17:                                               ; preds = %13
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 0, i32 0
  %20 = bitcast %"class.pdfium::span"* %1 to i32**
  %21 = load i32*, i32** %20, align 8
  %22 = load i32, i32* %21, align 4
  %23 = bitcast float* %2 to i32*
  store i32 %22, i32* %23, align 4
  %24 = load i64, i64* %14, align 8
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %27, label %26, !prof !56

26:                                               ; preds = %18
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

27:                                               ; preds = %18
  %28 = load float*, float** %19, align 8
  %29 = getelementptr inbounds float, float* %28, i64 1
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = bitcast float* %3 to i32*
  store i32 %31, i32* %32, align 4
  %33 = load i64, i64* %14, align 8
  %34 = icmp ugt i64 %33, 2
  br i1 %34, label %36, label %35, !prof !56

35:                                               ; preds = %27
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

36:                                               ; preds = %27
  %37 = load float*, float** %19, align 8
  %38 = getelementptr inbounds float, float* %37, i64 2
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = bitcast float* %4 to i32*
  store i32 %40, i32* %41, align 4
  br label %77

42:                                               ; preds = %5
  %43 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %44 = load %"class.fxcodec::CLcmsCmm"*, %"class.fxcodec::CLcmsCmm"** %43, align 8
  %45 = icmp eq %"class.fxcodec::CLcmsCmm"* %44, null
  br i1 %45, label %64, label %46

46:                                               ; preds = %42
  %47 = bitcast [3 x float]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %47) #17
  %48 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  %49 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %49, align 4
  %50 = getelementptr inbounds [3 x float], [3 x float]* %6, i64 0, i64 2
  store float 0xFFFFFFFFE0000000, float* %50, align 4
  %51 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 0, i32 6
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 0, i32 0
  %54 = load float*, float** %53, align 8
  call void @_ZN7fxcodec9IccModule9TranslateEPNS_8CLcmsCmmEjPKfPf(%"class.fxcodec::CLcmsCmm"* nonnull %44, i32 %52, float* %54, float* nonnull %48) #17
  %55 = bitcast [3 x float]* %6 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = bitcast float* %2 to i32*
  store i32 %56, i32* %57, align 4
  %58 = bitcast float* %49 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = bitcast float* %3 to i32*
  store i32 %59, i32* %60, align 4
  %61 = bitcast float* %50 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = bitcast float* %4 to i32*
  store i32 %62, i32* %63, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %47) #17
  br label %77

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %66 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %65, align 8
  %67 = icmp eq %class.CPDF_ColorSpace* %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.pdfium::span"* %7 to i8*
  %70 = bitcast %"class.pdfium::span"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %70, i64 16, i1 false)
  %71 = bitcast %class.CPDF_ColorSpace* %66 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)***
  %72 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*** %71, align 8
  %73 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %72, i64 2
  %74 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %73, align 8
  %75 = call zeroext i1 %74(%class.CPDF_ColorSpace* nonnull %66, %"class.pdfium::span"* nonnull %7, float* %2, float* %3, float* %4) #17
  br label %77

76:                                               ; preds = %64
  store float 0.000000e+00, float* %2, align 4
  store float 0.000000e+00, float* %3, align 4
  store float 0.000000e+00, float* %4, align 4
  br label %77

77:                                               ; preds = %76, %68, %46, %36
  %78 = phi i1 [ true, %36 ], [ true, %46 ], [ %75, %68 ], [ true, %76 ]
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_115CPDF_ICCBasedCS18TranslateImageLineEPhPKhiiib(%"class.(anonymous namespace)::CPDF_ICCBasedCS"* nocapture, i8*, i8*, i32, i32, i32, i1 zeroext) unnamed_addr #2 align 2 {
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_IccProfile*, %class.CPDF_IccProfile** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %9, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !53
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call void @_ZN7fxcodec10ReverseRGBEPhPKhi(i8* %1, i8* %2, i32 %3) #17
  br label %242

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %16 = load %"class.fxcodec::CLcmsCmm"*, %"class.fxcodec::CLcmsCmm"** %15, align 8
  %17 = icmp eq %"class.fxcodec::CLcmsCmm"* %16, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %19, align 8
  %21 = icmp eq %class.CPDF_ColorSpace* %20, null
  br i1 %21, label %242, label %22

22:                                               ; preds = %18
  %23 = bitcast %class.CPDF_ColorSpace* %20 to void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)***
  %24 = load void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)**, void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)*** %23, align 8
  %25 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)*, void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)** %24, i64 4
  %26 = load void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)*, void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)** %25, align 8
  tail call void %26(%class.CPDF_ColorSpace* nonnull %20, i8* %1, i8* %2, i32 %3, i32 %4, i32 %5, i1 zeroext false) #17
  br label %242

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 0, i32 6
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %86, label %31

31:                                               ; preds = %27
  %32 = icmp ult i32 %29, 8
  br i1 %32, label %33, label %36

33:                                               ; preds = %67, %31
  %34 = phi i32 [ 0, %31 ], [ %37, %67 ]
  %35 = phi i32 [ 1, %31 ], [ %75, %67 ]
  br label %80

36:                                               ; preds = %31
  %37 = and i32 %29, -8
  %38 = add i32 %37, -8
  %39 = lshr exact i32 %38, 3
  %40 = add nuw nsw i32 %39, 1
  %41 = and i32 %40, 7
  %42 = icmp ult i32 %38, 56
  br i1 %42, label %53, label %43

43:                                               ; preds = %36
  %44 = sub nsw i32 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %43 ], [ %49, %45 ]
  %47 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %43 ], [ %50, %45 ]
  %48 = phi i32 [ %44, %43 ], [ %51, %45 ]
  %49 = mul <4 x i32> %46, <i32 270598144, i32 270598144, i32 270598144, i32 270598144>
  %50 = mul <4 x i32> %47, <i32 270598144, i32 270598144, i32 270598144, i32 270598144>
  %51 = add i32 %48, -8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %45, !llvm.loop !57

53:                                               ; preds = %45, %36
  %54 = phi <4 x i32> [ undef, %36 ], [ %49, %45 ]
  %55 = phi <4 x i32> [ undef, %36 ], [ %50, %45 ]
  %56 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %36 ], [ %49, %45 ]
  %57 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %36 ], [ %50, %45 ]
  %58 = icmp eq i32 %41, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %53, %59
  %60 = phi <4 x i32> [ %63, %59 ], [ %56, %53 ]
  %61 = phi <4 x i32> [ %64, %59 ], [ %57, %53 ]
  %62 = phi i32 [ %65, %59 ], [ %41, %53 ]
  %63 = mul nsw <4 x i32> %60, <i32 52, i32 52, i32 52, i32 52>
  %64 = mul nsw <4 x i32> %61, <i32 52, i32 52, i32 52, i32 52>
  %65 = add i32 %62, -1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %59, !llvm.loop !59

67:                                               ; preds = %59, %53
  %68 = phi <4 x i32> [ %54, %53 ], [ %63, %59 ]
  %69 = phi <4 x i32> [ %55, %53 ], [ %64, %59 ]
  %70 = mul <4 x i32> %69, %68
  %71 = shufflevector <4 x i32> %70, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %72 = mul <4 x i32> %70, %71
  %73 = shufflevector <4 x i32> %72, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %74 = mul <4 x i32> %72, %73
  %75 = extractelement <4 x i32> %74, i32 0
  %76 = icmp eq i32 %29, %37
  br i1 %76, label %77, label %33

77:                                               ; preds = %80, %67
  %78 = phi i32 [ %75, %67 ], [ %83, %80 ]
  %79 = icmp ugt i32 %29, 3
  br i1 %79, label %95, label %86

80:                                               ; preds = %33, %80
  %81 = phi i32 [ %84, %80 ], [ %34, %33 ]
  %82 = phi i32 [ %83, %80 ], [ %35, %33 ]
  %83 = mul nsw i32 %82, 52
  %84 = add nuw i32 %81, 1
  %85 = icmp eq i32 %84, %29
  br i1 %85, label %77, label %80, !llvm.loop !60

86:                                               ; preds = %27, %77
  %87 = phi i32 [ %78, %77 ], [ 1, %27 ]
  %88 = tail call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %4, i32 %5) #17
  %89 = extractvalue { i32, i1 } %88, 1
  br i1 %89, label %96, label %90

90:                                               ; preds = %86
  %91 = extractvalue { i32, i1 } %88, 0
  %92 = mul nsw i32 %87, 3
  %93 = lshr i32 %92, 1
  %94 = icmp slt i32 %91, %93
  br i1 %94, label %95, label %96

95:                                               ; preds = %77, %90
  tail call void @_ZN7fxcodec9IccModule17TranslateScanlineEPNS_8CLcmsCmmEPhPKhi(%"class.fxcodec::CLcmsCmm"* nonnull %16, i8* %1, i8* %2, i32 %3) #17
  br label %242

96:                                               ; preds = %86, %90
  %97 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 3
  %98 = getelementptr inbounds %"class.std::__1::vector.257", %"class.std::__1::vector.257"* %97, i64 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 3, i32 0, i32 1
  %101 = load i8*, i8** %100, align 8
  %102 = icmp eq i8* %99, %101
  br i1 %102, label %103, label %173

103:                                              ; preds = %96
  %104 = zext i32 %87 to i64
  %105 = mul nuw nsw i64 %104, 3
  %106 = icmp eq i32 %87, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %103
  %108 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %105, i64 1) #17
  %109 = ptrtoint i8* %108 to i64
  %110 = getelementptr inbounds i8, i8* %108, i64 %105
  %111 = ptrtoint i8* %110 to i64
  %112 = sub i64 %105, %109
  %113 = getelementptr i8, i8* %108, i64 %112
  %114 = ptrtoint i8* %113 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %108, i8 0, i64 %114, i1 false) #17
  %115 = load i8*, i8** %98, align 8
  br label %116

116:                                              ; preds = %103, %107
  %117 = phi i8* [ %99, %103 ], [ %115, %107 ]
  %118 = phi i64 [ 0, %103 ], [ %109, %107 ]
  %119 = phi i64 [ 0, %103 ], [ %111, %107 ]
  %120 = icmp eq i8* %117, null
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  %122 = bitcast i8** %100 to i64*
  br label %127

123:                                              ; preds = %116
  %124 = ptrtoint i8* %117 to i64
  %125 = bitcast i8** %100 to i64*
  store i64 %124, i64* %125, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %117) #17
  %126 = bitcast %"class.std::__1::vector.257"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #17
  br label %127

127:                                              ; preds = %121, %123
  %128 = phi i64* [ %122, %121 ], [ %125, %123 ]
  %129 = bitcast %"class.std::__1::vector.257"* %97 to i64*
  store i64 %118, i64* %129, align 8
  store i64 %119, i64* %128, align 8
  %130 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %131 = bitcast i8** %130 to i64*
  store i64 %119, i64* %131, align 8
  %132 = zext i32 %29 to i64
  %133 = mul nuw nsw i64 %104, %132
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %141, label %135

135:                                              ; preds = %127
  %136 = tail call i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64 %133, i64 1) #17
  %137 = ptrtoint i8* %136 to i64
  %138 = sub i64 %133, %137
  %139 = getelementptr i8, i8* %136, i64 %138
  %140 = ptrtoint i8* %139 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %136, i8 0, i64 %140, i1 false) #17
  br label %141

141:                                              ; preds = %127, %135
  %142 = phi i8* [ null, %127 ], [ %136, %135 ]
  br i1 %106, label %149, label %143

143:                                              ; preds = %141, %156
  %144 = phi i32 [ %158, %156 ], [ 0, %141 ]
  %145 = phi i64 [ %157, %156 ], [ 0, %141 ]
  br i1 %30, label %156, label %146

146:                                              ; preds = %143
  %147 = trunc i64 %145 to i32
  %148 = add i32 %29, %147
  br label %160

149:                                              ; preds = %156, %141
  %150 = load %class.CPDF_IccProfile*, %class.CPDF_IccProfile** %8, align 8
  %151 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %150, i64 0, i32 5, i32 0, i32 0, i32 0
  %152 = load %"class.fxcodec::CLcmsCmm"*, %"class.fxcodec::CLcmsCmm"** %151, align 8
  %153 = load i8*, i8** %98, align 8
  tail call void @_ZN7fxcodec9IccModule17TranslateScanlineEPNS_8CLcmsCmmEPhPKhi(%"class.fxcodec::CLcmsCmm"* %152, i8* %153, i8* %142, i32 %87) #17
  %154 = icmp eq i8* %142, null
  br i1 %154, label %173, label %155

155:                                              ; preds = %149
  tail call void @_Z7FX_FreePv(i8* nonnull %142) #17
  br label %173

156:                                              ; preds = %160, %143
  %157 = phi i64 [ %145, %143 ], [ %168, %160 ]
  %158 = add nuw nsw i32 %144, 1
  %159 = icmp eq i32 %158, %87
  br i1 %159, label %149, label %143

160:                                              ; preds = %160, %146
  %161 = phi i32 [ %164, %160 ], [ %87, %146 ]
  %162 = phi i32 [ %170, %160 ], [ %144, %146 ]
  %163 = phi i64 [ %168, %160 ], [ %145, %146 ]
  %164 = udiv i32 %161, 52
  %165 = udiv i32 %162, %164
  %166 = trunc i32 %165 to i8
  %167 = mul i8 %166, 5
  %168 = add i64 %163, 1
  %169 = getelementptr inbounds i8, i8* %142, i64 %163
  store i8 %167, i8* %169, align 1
  %170 = urem i32 %162, %164
  %171 = trunc i64 %168 to i32
  %172 = icmp eq i32 %148, %171
  br i1 %172, label %156, label %160

173:                                              ; preds = %155, %149, %96
  %174 = icmp sgt i32 %3, 0
  br i1 %174, label %175, label %242

175:                                              ; preds = %173
  %176 = add i32 %29, -1
  %177 = zext i32 %176 to i64
  %178 = add nuw nsw i64 %177, 1
  %179 = and i32 %29, 1
  %180 = icmp eq i32 %176, 0
  %181 = sub i32 %29, %179
  %182 = icmp eq i32 %179, 0
  br label %183

183:                                              ; preds = %201, %175
  %184 = phi i32 [ 0, %175 ], [ %222, %201 ]
  %185 = phi i8* [ %1, %175 ], [ %221, %201 ]
  %186 = phi i8* [ %2, %175 ], [ %202, %201 ]
  br i1 %30, label %201, label %187

187:                                              ; preds = %183
  br i1 %180, label %188, label %224

188:                                              ; preds = %224, %187
  %189 = phi i32 [ undef, %187 ], [ %238, %224 ]
  %190 = phi i32 [ 0, %187 ], [ %238, %224 ]
  %191 = phi i8* [ %186, %187 ], [ %239, %224 ]
  br i1 %182, label %198, label %192

192:                                              ; preds = %188
  %193 = mul nsw i32 %190, 52
  %194 = load i8, i8* %191, align 1
  %195 = udiv i8 %194, 5
  %196 = zext i8 %195 to i32
  %197 = add nsw i32 %193, %196
  br label %198

198:                                              ; preds = %188, %192
  %199 = phi i32 [ %189, %188 ], [ %197, %192 ]
  %200 = getelementptr i8, i8* %186, i64 %178
  br label %201

201:                                              ; preds = %198, %183
  %202 = phi i8* [ %186, %183 ], [ %200, %198 ]
  %203 = phi i32 [ 0, %183 ], [ %199, %198 ]
  %204 = mul nsw i32 %203, 3
  %205 = sext i32 %204 to i64
  %206 = load i8*, i8** %98, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 %205
  %208 = load i8, i8* %207, align 1
  %209 = getelementptr inbounds i8, i8* %185, i64 1
  store i8 %208, i8* %185, align 1
  %210 = add nsw i32 %204, 1
  %211 = sext i32 %210 to i64
  %212 = load i8*, i8** %98, align 8
  %213 = getelementptr inbounds i8, i8* %212, i64 %211
  %214 = load i8, i8* %213, align 1
  %215 = getelementptr inbounds i8, i8* %185, i64 2
  store i8 %214, i8* %209, align 1
  %216 = add nsw i32 %204, 2
  %217 = sext i32 %216 to i64
  %218 = load i8*, i8** %98, align 8
  %219 = getelementptr inbounds i8, i8* %218, i64 %217
  %220 = load i8, i8* %219, align 1
  %221 = getelementptr inbounds i8, i8* %185, i64 3
  store i8 %220, i8* %215, align 1
  %222 = add nuw nsw i32 %184, 1
  %223 = icmp eq i32 %222, %3
  br i1 %223, label %242, label %183

224:                                              ; preds = %187, %224
  %225 = phi i32 [ %238, %224 ], [ 0, %187 ]
  %226 = phi i8* [ %239, %224 ], [ %186, %187 ]
  %227 = phi i32 [ %240, %224 ], [ %181, %187 ]
  %228 = mul nsw i32 %225, 52
  %229 = load i8, i8* %226, align 1
  %230 = udiv i8 %229, 5
  %231 = zext i8 %230 to i32
  %232 = add nsw i32 %228, %231
  %233 = getelementptr inbounds i8, i8* %226, i64 1
  %234 = mul nsw i32 %232, 52
  %235 = load i8, i8* %233, align 1
  %236 = udiv i8 %235, 5
  %237 = zext i8 %236 to i32
  %238 = add nsw i32 %234, %237
  %239 = getelementptr inbounds i8, i8* %226, i64 2
  %240 = add i32 %227, -2
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %188, label %224

242:                                              ; preds = %201, %173, %18, %95, %22, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CPDF_ICCBasedCS19EnableStdConversionEb(%"class.(anonymous namespace)::CPDF_ICCBasedCS"* nocapture, i1 zeroext) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 0, i32 5
  %4 = load i32, i32* %3, align 4
  br i1 %1, label %7, label %5

5:                                                ; preds = %2
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %5, %2
  %8 = phi i32 [ 1, %2 ], [ -1, %5 ]
  %9 = add i32 %4, %8
  store i32 %9, i32* %3, align 4
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %11, align 8
  %13 = icmp eq %class.CPDF_ColorSpace* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %class.CPDF_ColorSpace* %12 to void (%class.CPDF_ColorSpace*, i1)***
  %16 = load void (%class.CPDF_ColorSpace*, i1)**, void (%class.CPDF_ColorSpace*, i1)*** %15, align 8
  %17 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %16, i64 5
  %18 = load void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %17, align 8
  tail call void %18(%class.CPDF_ColorSpace* nonnull %12, i1 zeroext %1) #17
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_115CPDF_ICCBasedCS8IsNormalEv(%"class.(anonymous namespace)::CPDF_ICCBasedCS"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_IccProfile*, %class.CPDF_IccProfile** %2, align 8
  %4 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %3, i64 0, i32 2
  %5 = load i8, i8* %4, align 8, !range !53
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %25

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load %"class.fxcodec::CLcmsCmm"*, %"class.fxcodec::CLcmsCmm"** %8, align 8
  %10 = icmp eq %"class.fxcodec::CLcmsCmm"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.fxcodec::CLcmsCmm", %"class.fxcodec::CLcmsCmm"* %9, i64 0, i32 3
  %13 = load i8, i8* %12, align 1, !range !53
  %14 = icmp ne i8 %13, 0
  br label %25

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %16, align 8
  %18 = icmp eq %class.CPDF_ColorSpace* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %15
  %20 = bitcast %class.CPDF_ColorSpace* %17 to i1 (%class.CPDF_ColorSpace*)***
  %21 = load i1 (%class.CPDF_ColorSpace*)**, i1 (%class.CPDF_ColorSpace*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*)*, i1 (%class.CPDF_ColorSpace*)** %21, i64 6
  %23 = load i1 (%class.CPDF_ColorSpace*)*, i1 (%class.CPDF_ColorSpace*)** %22, align 8
  %24 = tail call zeroext i1 %23(%class.CPDF_ColorSpace* nonnull %17) #17
  br label %25

25:                                               ; preds = %15, %1, %19, %11
  %26 = phi i1 [ %14, %11 ], [ %24, %19 ], [ true, %1 ], [ false, %15 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_115CPDF_ICCBasedCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE(%"class.(anonymous namespace)::CPDF_ICCBasedCS"* nocapture, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*) unnamed_addr #2 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.156", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.std::__1::vector.261", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::RetainPtr.239", align 8
  %11 = alloca %"class.fxcrt::RetainPtr.156", align 8
  %12 = alloca %"class.std::__1::vector.261", align 16
  %13 = tail call %class.CPDF_Stream* @_ZNK10CPDF_Array11GetStreamAtEm(%class.CPDF_Array* %2, i64 1) #17
  %14 = icmp eq %class.CPDF_Stream* %13, null
  br i1 %14, label %372, label %15

15:                                               ; preds = %4
  %16 = tail call %class.CPDF_Dictionary* @_ZNK11CPDF_Stream7GetDictEv(%class.CPDF_Stream* nonnull %13) #17
  %17 = icmp eq %class.CPDF_Dictionary* %16, null
  br i1 %17, label %372, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #17
  %20 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %16, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  switch i32 %20, label %372 [
    i32 4, label %21
    i32 3, label %21
    i32 1, label %21
  ]

21:                                               ; preds = %18, %18, %18
  %22 = bitcast %"class.fxcrt::RetainPtr.239"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  %23 = call %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document* %1) #17
  call void @_ZN16CPDF_DocPageData13GetIccProfileEPK11CPDF_Stream(%"class.fxcrt::RetainPtr.239"* nonnull sret %10, %class.CPDF_DocPageData* %23, %class.CPDF_Stream* nonnull %13) #17
  %24 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.239", %"class.fxcrt::RetainPtr.239"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.fxcrt::RetainPtr.239"* %10 to i64*
  %27 = load i64, i64* %26, align 8
  store %class.CPDF_IccProfile* null, %class.CPDF_IccProfile** %25, align 8
  %28 = getelementptr inbounds %"class.fxcrt::RetainPtr.239", %"class.fxcrt::RetainPtr.239"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %class.CPDF_IccProfile*, %class.CPDF_IccProfile** %28, align 8
  %30 = bitcast %"class.fxcrt::RetainPtr.239"* %24 to i64*
  store i64 %27, i64* %30, align 8
  %31 = icmp eq %class.CPDF_IccProfile* %29, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %29, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add nsw i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %21, %32
  store %class.CPDF_IccProfile* null, %class.CPDF_IccProfile** %25, align 8
  br label %57

38:                                               ; preds = %32
  %39 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %29, i64 0, i32 0
  %40 = bitcast %class.CPDF_IccProfile* %29 to void (%"class.fxcrt::Retainable"*)***
  %41 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %41, i64 1
  %43 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %42, align 8
  call void %43(%"class.fxcrt::Retainable"* nonnull %39) #17
  %44 = load %class.CPDF_IccProfile*, %class.CPDF_IccProfile** %25, align 8
  %45 = bitcast %class.CPDF_IccProfile* %44 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_IccProfile* null, %class.CPDF_IccProfile** %25, align 8
  %46 = icmp eq %class.CPDF_IccProfile* %44, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %44, i64 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = add nsw i64 %49, -1
  store i64 %50, i64* %48, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %44, i64 0, i32 0
  %54 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %45, align 8
  %55 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %54, i64 1
  %56 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %55, align 8
  call void %56(%"class.fxcrt::Retainable"* nonnull %53) #17
  br label %57

57:                                               ; preds = %37, %38, %47, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  %58 = load %class.CPDF_IccProfile*, %class.CPDF_IccProfile** %28, align 8
  %59 = icmp eq %class.CPDF_IccProfile* %58, null
  br i1 %59, label %372, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %58, i64 0, i32 2
  %62 = load i8, i8* %61, align 8, !range !53
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %58, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.fxcodec::CLcmsCmm"*, %"class.fxcodec::CLcmsCmm"** %65, align 8
  %67 = icmp eq %"class.fxcodec::CLcmsCmm"* %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %64, %60
  %69 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %58, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, %20
  br i1 %71, label %72, label %372

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %58, i64 0, i32 5, i32 0, i32 0, i32 0
  %74 = load %"class.fxcodec::CLcmsCmm"*, %"class.fxcodec::CLcmsCmm"** %73, align 8
  %75 = icmp eq %"class.fxcodec::CLcmsCmm"* %74, null
  br i1 %75, label %76, label %176

76:                                               ; preds = %64, %72
  %77 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #17
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)) #17
  %78 = call %class.CPDF_Object* @_ZNK15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %16, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #17
  %79 = icmp eq %class.CPDF_Object* %78, null
  br i1 %79, label %131, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.fxcrt::RetainPtr.156"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #17
  %82 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_ColorSpace* inttoptr (i64 -6148914691236517206 to %class.CPDF_ColorSpace*), %class.CPDF_ColorSpace** %82, align 8
  call void @_ZN15CPDF_ColorSpace4LoadEP13CPDF_DocumentPK11CPDF_ObjectPNSt3__13setIS4_NS5_4lessIS4_EENS5_9allocatorIS4_EEEE(%"class.fxcrt::RetainPtr.156"* nonnull sret %6, %class.CPDF_Document* %1, %class.CPDF_Object* nonnull %78, %"class.std::__1::set.188"* %3) #17
  %83 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %82, align 8
  %84 = icmp eq %class.CPDF_ColorSpace* %83, null
  %85 = ptrtoint %class.CPDF_ColorSpace* %83 to i64
  br i1 %84, label %86, label %87

86:                                               ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #17
  br label %131

87:                                               ; preds = %80
  %88 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %83, i64 0, i32 4
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 11
  br i1 %90, label %107, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %83, i64 0, i32 6
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, %20
  br i1 %94, label %95, label %107

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 1
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %82, align 8
  %97 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %97, align 8
  %99 = bitcast %"class.fxcrt::RetainPtr.156"* %96 to i64*
  store i64 %85, i64* %99, align 8
  %100 = icmp eq %class.CPDF_ColorSpace* %98, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %98, i64 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = add nsw i64 %103, -1
  store i64 %104, i64* %102, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %101, %95
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %82, align 8
  br label %129

107:                                              ; preds = %91, %87
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %82, align 8
  br label %116

108:                                              ; preds = %101
  %109 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %98, i64 0, i32 0
  %110 = bitcast %class.CPDF_ColorSpace* %98 to void (%"class.fxcrt::Retainable"*)***
  %111 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %111, i64 1
  %113 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %112, align 8
  call void %113(%"class.fxcrt::Retainable"* nonnull %109) #17
  %114 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %82, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %82, align 8
  %115 = icmp eq %class.CPDF_ColorSpace* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %108, %107
  %117 = phi i1 [ false, %107 ], [ true, %108 ]
  %118 = phi %class.CPDF_ColorSpace* [ %83, %107 ], [ %114, %108 ]
  %119 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %118, i64 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = add nsw i64 %120, -1
  store i64 %121, i64* %119, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %130

123:                                              ; preds = %116
  %124 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %118, i64 0, i32 0
  %125 = bitcast %class.CPDF_ColorSpace* %118 to void (%"class.fxcrt::Retainable"*)***
  %126 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %126, i64 1
  %128 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %127, align 8
  call void %128(%"class.fxcrt::Retainable"* nonnull %124) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #17
  br i1 %117, label %176, label %131

129:                                              ; preds = %108, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #17
  br label %176

130:                                              ; preds = %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #17
  br i1 %117, label %176, label %131

131:                                              ; preds = %76, %123, %86, %130
  %132 = bitcast %"class.fxcrt::RetainPtr.156"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #17
  switch i32 %20, label %139 [
    i32 1, label %133
    i32 3, label %135
    i32 4, label %137
  ]

133:                                              ; preds = %131
  %134 = call %class.CPDF_PageModule* @_ZN15CPDF_PageModule11GetInstanceEv() #17, !noalias !62
  call void @_ZN15CPDF_PageModule10GetStockCSEN15CPDF_ColorSpace6FamilyE(%"class.fxcrt::RetainPtr.156"* nonnull sret %11, %class.CPDF_PageModule* %134, i32 1) #17
  br label %141

135:                                              ; preds = %131
  %136 = call %class.CPDF_PageModule* @_ZN15CPDF_PageModule11GetInstanceEv() #17, !noalias !65
  call void @_ZN15CPDF_PageModule10GetStockCSEN15CPDF_ColorSpace6FamilyE(%"class.fxcrt::RetainPtr.156"* nonnull sret %11, %class.CPDF_PageModule* %136, i32 2) #17
  br label %141

137:                                              ; preds = %131
  %138 = call %class.CPDF_PageModule* @_ZN15CPDF_PageModule11GetInstanceEv() #17, !noalias !68
  call void @_ZN15CPDF_PageModule10GetStockCSEN15CPDF_ColorSpace6FamilyE(%"class.fxcrt::RetainPtr.156"* nonnull sret %11, %class.CPDF_PageModule* %138, i32 3) #17
  br label %141

139:                                              ; preds = %131
  %140 = bitcast %"class.fxcrt::RetainPtr.156"* %11 to i64*
  store i64 0, i64* %140, align 8, !alias.scope !71
  br label %141

141:                                              ; preds = %133, %135, %137, %139
  %142 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 1
  %143 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %144 = bitcast %"class.fxcrt::RetainPtr.156"* %11 to i64*
  %145 = load i64, i64* %144, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %143, align 8
  %146 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %142, i64 0, i32 0, i32 0, i32 0, i32 0
  %147 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %146, align 8
  %148 = bitcast %"class.fxcrt::RetainPtr.156"* %142 to i64*
  store i64 %145, i64* %148, align 8
  %149 = icmp eq %class.CPDF_ColorSpace* %147, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %141
  %151 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %147, i64 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = add nsw i64 %152, -1
  store i64 %153, i64* %151, align 8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %156, label %155

155:                                              ; preds = %141, %150
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %143, align 8
  br label %175

156:                                              ; preds = %150
  %157 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %147, i64 0, i32 0
  %158 = bitcast %class.CPDF_ColorSpace* %147 to void (%"class.fxcrt::Retainable"*)***
  %159 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %159, i64 1
  %161 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %160, align 8
  call void %161(%"class.fxcrt::Retainable"* nonnull %157) #17
  %162 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %143, align 8
  %163 = bitcast %class.CPDF_ColorSpace* %162 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %143, align 8
  %164 = icmp eq %class.CPDF_ColorSpace* %162, null
  br i1 %164, label %175, label %165

165:                                              ; preds = %156
  %166 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %162, i64 0, i32 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = add nsw i64 %167, -1
  store i64 %168, i64* %166, align 8
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %175

170:                                              ; preds = %165
  %171 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %162, i64 0, i32 0
  %172 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %163, align 8
  %173 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %172, i64 1
  %174 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %173, align 8
  call void %174(%"class.fxcrt::Retainable"* nonnull %171) #17
  br label %175

175:                                              ; preds = %155, %156, %165, %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #17
  br label %176

176:                                              ; preds = %72, %123, %129, %175, %130
  %177 = bitcast %"class.std::__1::vector.261"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #17
  %178 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %12, i64 0, i32 0, i32 1
  %179 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %177, i8 0, i64 24, i1 false) #17, !alias.scope !74
  %180 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #17, !noalias !74
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #17, !noalias !74
  %181 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %16, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #17, !noalias !74
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #17, !noalias !74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #17, !noalias !74
  %182 = icmp eq %class.CPDF_Array* %181, null
  br i1 %182, label %208, label %183

183:                                              ; preds = %176
  %184 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %12, i64 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::vector.261"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #17, !noalias !74
  %186 = shl i32 %20, 1
  %187 = zext i32 %186 to i64
  call void @_Z25ReadArrayElementsToVectorPK10CPDF_Arraym(%"class.std::__1::vector.261"* nonnull sret %8, %class.CPDF_Array* nonnull %181, i64 %187) #17
  %188 = load float*, float** %184, align 16, !alias.scope !74
  %189 = icmp eq float* %188, null
  br i1 %189, label %190, label %192

190:                                              ; preds = %183
  %191 = bitcast float** %178 to i64*
  br label %196

192:                                              ; preds = %183
  %193 = ptrtoint float* %188 to i64
  %194 = bitcast float** %178 to i64*
  store i64 %193, i64* %194, align 8, !alias.scope !74
  %195 = bitcast float* %188 to i8*
  call void @_ZdlPv(i8* %195) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %177, i8 0, i64 24, i1 false) #17, !alias.scope !74
  br label %196

196:                                              ; preds = %192, %190
  %197 = phi i64* [ %191, %190 ], [ %194, %192 ]
  %198 = bitcast %"class.std::__1::vector.261"* %8 to i64*
  %199 = load i64, i64* %198, align 8, !noalias !74
  %200 = bitcast %"class.std::__1::vector.261"* %12 to i64*
  store i64 %199, i64* %200, align 16, !alias.scope !74
  %201 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %8, i64 0, i32 0, i32 1
  %202 = bitcast float** %201 to i64*
  %203 = load i64, i64* %202, align 8, !noalias !74
  store i64 %203, i64* %197, align 8, !alias.scope !74
  %204 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %205 = bitcast float** %204 to i64*
  %206 = load i64, i64* %205, align 8, !noalias !74
  %207 = bitcast float** %179 to i64*
  store i64 %206, i64* %207, align 16, !alias.scope !74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #17, !noalias !74
  br label %353

208:                                              ; preds = %176
  %209 = shl i32 %20, 1
  %210 = zext i32 %209 to i64
  %211 = bitcast float** %179 to i64*
  %212 = bitcast %"class.std::__1::vector.261"* %12 to i64*
  %213 = icmp eq i32 %209, 0
  br i1 %213, label %222, label %214

214:                                              ; preds = %208
  %215 = bitcast float** %178 to i64*
  %216 = shl nuw nsw i64 %210, 2
  %217 = call i8* @_Znwm(i64 %216) #18
  %218 = bitcast i8* %217 to float*
  %219 = ptrtoint i8* %217 to i64
  %220 = getelementptr inbounds float, float* %218, i64 %210
  %221 = ptrtoint float* %220 to i64
  store i64 %219, i64* %212, align 16, !alias.scope !74
  store i64 %219, i64* %215, align 8, !alias.scope !74
  store i64 %221, i64* %211, align 16, !alias.scope !74
  br label %222

222:                                              ; preds = %208, %214
  %223 = phi i64 [ 0, %208 ], [ %219, %214 ]
  %224 = phi float* [ null, %208 ], [ %220, %214 ]
  %225 = phi float* [ null, %208 ], [ %218, %214 ]
  %226 = bitcast float** %178 to i64*
  br label %227

227:                                              ; preds = %349, %222
  %228 = phi i64 [ %223, %222 ], [ %352, %349 ]
  %229 = phi float* [ %224, %222 ], [ %351, %349 ]
  %230 = phi float* [ %225, %222 ], [ %350, %349 ]
  %231 = phi i32 [ 0, %222 ], [ %347, %349 ]
  %232 = icmp ult float* %230, %229
  %233 = ptrtoint float* %229 to i64
  br i1 %232, label %234, label %238

234:                                              ; preds = %227
  %235 = bitcast float* %230 to i32*
  store i32 0, i32* %235, align 4
  %236 = getelementptr inbounds float, float* %230, i64 1
  %237 = ptrtoint float* %236 to i64
  store i64 %237, i64* %226, align 8, !alias.scope !74
  br label %288

238:                                              ; preds = %227
  %239 = ptrtoint float* %230 to i64
  %240 = load i64, i64* %212, align 16, !alias.scope !74
  %241 = sub i64 %239, %240
  %242 = ashr exact i64 %241, 2
  %243 = add nsw i64 %242, 1
  %244 = icmp ugt i64 %243, 4611686018427387903
  br i1 %244, label %245, label %247

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::vector.261"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %246) #19
  unreachable

247:                                              ; preds = %238
  %248 = sub i64 %233, %240
  %249 = ashr exact i64 %248, 2
  %250 = icmp ult i64 %249, 2305843009213693951
  br i1 %250, label %251, label %259

251:                                              ; preds = %247
  %252 = ashr exact i64 %248, 1
  %253 = icmp ult i64 %252, %243
  %254 = select i1 %253, i64 %243, i64 %252
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %264, label %256

256:                                              ; preds = %251
  %257 = icmp ugt i64 %254, 4611686018427387903
  br i1 %257, label %258, label %259

258:                                              ; preds = %256
  call void @abort() #19
  unreachable

259:                                              ; preds = %256, %247
  %260 = phi i64 [ %254, %256 ], [ 4611686018427387903, %247 ]
  %261 = shl i64 %260, 2
  %262 = call i8* @_Znwm(i64 %261) #18
  %263 = bitcast i8* %262 to float*
  br label %264

264:                                              ; preds = %259, %251
  %265 = phi i64 [ %260, %259 ], [ 0, %251 ]
  %266 = phi float* [ %263, %259 ], [ null, %251 ]
  %267 = getelementptr inbounds float, float* %266, i64 %242
  %268 = getelementptr inbounds float, float* %266, i64 %265
  %269 = ptrtoint float* %268 to i64
  %270 = bitcast float* %267 to i32*
  store i32 0, i32* %270, align 4, !noalias !74
  %271 = getelementptr inbounds float, float* %267, i64 1
  %272 = ptrtoint float* %271 to i64
  %273 = sub i64 %228, %240
  %274 = ashr exact i64 %273, 2
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds float, float* %267, i64 %275
  %277 = ptrtoint float* %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %282

279:                                              ; preds = %264
  %280 = bitcast float* %276 to i8*
  %281 = inttoptr i64 %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %280, i8* align 4 %281, i64 %273, i1 false) #17
  br label %282

282:                                              ; preds = %279, %264
  store i64 %277, i64* %212, align 16, !alias.scope !74
  store i64 %272, i64* %226, align 8, !alias.scope !74
  store i64 %269, i64* %211, align 16, !alias.scope !74
  %283 = icmp eq i64 %240, 0
  br i1 %283, label %288, label %284

284:                                              ; preds = %282
  %285 = inttoptr i64 %240 to i8*
  call void @_ZdlPv(i8* %285) #18
  %286 = load float*, float** %178, align 8, !alias.scope !74
  %287 = ptrtoint float* %286 to i64
  br label %288

288:                                              ; preds = %284, %282, %234
  %289 = phi i64 [ %237, %234 ], [ %272, %282 ], [ %287, %284 ]
  %290 = phi float* [ %236, %234 ], [ %271, %282 ], [ %286, %284 ]
  %291 = load float*, float** %179, align 16, !alias.scope !74
  %292 = icmp ult float* %290, %291
  %293 = ptrtoint float* %291 to i64
  br i1 %292, label %294, label %298

294:                                              ; preds = %288
  %295 = bitcast float* %290 to i32*
  store i32 1065353216, i32* %295, align 4
  %296 = getelementptr inbounds float, float* %290, i64 1
  %297 = ptrtoint float* %296 to i64
  store i64 %297, i64* %226, align 8, !alias.scope !74
  br label %346

298:                                              ; preds = %288
  %299 = ptrtoint float* %290 to i64
  %300 = load i64, i64* %212, align 16, !alias.scope !74
  %301 = sub i64 %299, %300
  %302 = ashr exact i64 %301, 2
  %303 = add nsw i64 %302, 1
  %304 = icmp ugt i64 %303, 4611686018427387903
  br i1 %304, label %305, label %307

305:                                              ; preds = %298
  %306 = bitcast %"class.std::__1::vector.261"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %306) #19
  unreachable

307:                                              ; preds = %298
  %308 = sub i64 %293, %300
  %309 = ashr exact i64 %308, 2
  %310 = icmp ult i64 %309, 2305843009213693951
  br i1 %310, label %311, label %319

311:                                              ; preds = %307
  %312 = ashr exact i64 %308, 1
  %313 = icmp ult i64 %312, %303
  %314 = select i1 %313, i64 %303, i64 %312
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %324, label %316

316:                                              ; preds = %311
  %317 = icmp ugt i64 %314, 4611686018427387903
  br i1 %317, label %318, label %319

318:                                              ; preds = %316
  call void @abort() #19
  unreachable

319:                                              ; preds = %316, %307
  %320 = phi i64 [ %314, %316 ], [ 4611686018427387903, %307 ]
  %321 = shl i64 %320, 2
  %322 = call i8* @_Znwm(i64 %321) #18
  %323 = bitcast i8* %322 to float*
  br label %324

324:                                              ; preds = %319, %311
  %325 = phi i64 [ %320, %319 ], [ 0, %311 ]
  %326 = phi float* [ %323, %319 ], [ null, %311 ]
  %327 = getelementptr inbounds float, float* %326, i64 %302
  %328 = getelementptr inbounds float, float* %326, i64 %325
  %329 = ptrtoint float* %328 to i64
  %330 = bitcast float* %327 to i32*
  store i32 1065353216, i32* %330, align 4, !noalias !74
  %331 = getelementptr inbounds float, float* %327, i64 1
  %332 = ptrtoint float* %331 to i64
  %333 = sub i64 %289, %300
  %334 = ashr exact i64 %333, 2
  %335 = sub nsw i64 0, %334
  %336 = getelementptr inbounds float, float* %327, i64 %335
  %337 = ptrtoint float* %336 to i64
  %338 = icmp sgt i64 %333, 0
  br i1 %338, label %339, label %342

339:                                              ; preds = %324
  %340 = bitcast float* %336 to i8*
  %341 = inttoptr i64 %300 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %340, i8* align 4 %341, i64 %333, i1 false) #17
  br label %342

342:                                              ; preds = %339, %324
  store i64 %337, i64* %212, align 16, !alias.scope !74
  store i64 %332, i64* %226, align 8, !alias.scope !74
  store i64 %329, i64* %211, align 16, !alias.scope !74
  %343 = icmp eq i64 %300, 0
  br i1 %343, label %346, label %344

344:                                              ; preds = %342
  %345 = inttoptr i64 %300 to i8*
  call void @_ZdlPv(i8* %345) #18
  br label %346

346:                                              ; preds = %344, %342, %294
  %347 = add nuw i32 %231, 1
  %348 = icmp eq i32 %347, %20
  br i1 %348, label %353, label %349

349:                                              ; preds = %346
  %350 = load float*, float** %178, align 8, !alias.scope !74
  %351 = load float*, float** %179, align 16, !alias.scope !74
  %352 = ptrtoint float* %350 to i64
  br label %227

353:                                              ; preds = %346, %196
  %354 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 4
  %355 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %354, i64 0, i32 0, i32 0
  %356 = load float*, float** %355, align 8
  %357 = icmp eq float* %356, null
  br i1 %357, label %364, label %358

358:                                              ; preds = %353
  %359 = ptrtoint float* %356 to i64
  %360 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 4, i32 0, i32 1
  %361 = bitcast float** %360 to i64*
  store i64 %359, i64* %361, align 8
  %362 = bitcast float* %356 to i8*
  call void @_ZdlPv(i8* %362) #18
  %363 = bitcast %"class.std::__1::vector.261"* %354 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %363, i8 0, i64 24, i1 false) #17
  br label %364

364:                                              ; preds = %358, %353
  %365 = bitcast %"class.std::__1::vector.261"* %12 to <2 x i64>*
  %366 = load <2 x i64>, <2 x i64>* %365, align 16
  %367 = bitcast %"class.std::__1::vector.261"* %354 to <2 x i64>*
  store <2 x i64> %366, <2 x i64>* %367, align 8
  %368 = bitcast float** %179 to i64*
  %369 = load i64, i64* %368, align 16
  %370 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_ICCBasedCS", %"class.(anonymous namespace)::CPDF_ICCBasedCS"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %371 = bitcast float** %370 to i64*
  store i64 %369, i64* %371, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #17
  br label %372

372:                                              ; preds = %15, %57, %18, %68, %364, %4
  %373 = phi i32 [ 0, %4 ], [ 0, %18 ], [ %20, %364 ], [ 0, %57 ], [ 0, %68 ], [ 0, %15 ]
  ret i32 %373
}

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #3

declare void @_ZN7fxcodec9IccModule9TranslateEPNS_8CLcmsCmmEjPKfPf(%"class.fxcodec::CLcmsCmm"*, i32, float*, float*) local_unnamed_addr #3

declare void @_ZN7fxcodec9IccModule17TranslateScanlineEPNS_8CLcmsCmmEPhPKhi(%"class.fxcodec::CLcmsCmm"*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #15

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #16

declare i8* @_ZN6pdfium8internal10AllocOrDieEmm(i64, i64) local_unnamed_addr #3

declare %class.CPDF_Stream* @_ZNK10CPDF_Array11GetStreamAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #3

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document*) local_unnamed_addr #3

declare void @_ZN16CPDF_DocPageData13GetIccProfileEPK11CPDF_Stream(%"class.fxcrt::RetainPtr.239"* sret, %class.CPDF_DocPageData*, %class.CPDF_Stream*) local_unnamed_addr #3

declare %class.CPDF_Object* @_ZNK15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_Z25ReadArrayElementsToVectorPK10CPDF_Arraym(%"class.std::__1::vector.261"* sret, %class.CPDF_Array*, i64) local_unnamed_addr #3

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CPDF_IndexedCSD2Ev(%"class.(anonymous namespace)::CPDF_IndexedCS"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_114CPDF_IndexedCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 4
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %12) #17
  %13 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %13, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %13, align 8
  %15 = icmp eq %class.CPDF_ColorSpace* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %14, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, -1
  store i64 %19, i64* %17, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %14, i64 0, i32 0
  %23 = bitcast %class.CPDF_ColorSpace* %14 to void (%"class.fxcrt::Retainable"*)***
  %24 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %24, i64 1
  %26 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, align 8
  tail call void %26(%"class.fxcrt::Retainable"* nonnull %22) #17
  br label %27

27:                                               ; preds = %11, %16, %21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %28 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %29 = load %class.CPDF_Array*, %class.CPDF_Array** %28, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %28, align 8
  %30 = icmp eq %class.CPDF_Array* %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %29, i64 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add nsw i64 %33, -1
  store i64 %34, i64* %32, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %29, i64 0, i32 0, i32 0
  %38 = bitcast %class.CPDF_Array* %29 to void (%"class.fxcrt::Retainable"*)***
  %39 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, i64 1
  %41 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, align 8
  tail call void %41(%"class.fxcrt::Retainable"* nonnull %37) #17
  br label %42

42:                                               ; preds = %27, %31, %36
  %43 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %43) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CPDF_IndexedCSD0Ev(%"class.(anonymous namespace)::CPDF_IndexedCS"*) unnamed_addr #2 align 2 {
  tail call void @_ZN12_GLOBAL__N_114CPDF_IndexedCSD2Ev(%"class.(anonymous namespace)::CPDF_IndexedCS"* %0) #17
  %2 = bitcast %"class.(anonymous namespace)::CPDF_IndexedCS"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_114CPDF_IndexedCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_(%"class.(anonymous namespace)::CPDF_IndexedCS"* nocapture readonly, %"class.pdfium::span"* nocapture readonly, float*, float*, float*) unnamed_addr #2 align 2 {
  %6 = alloca %"class.pdfium::span", align 8
  %7 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %11, !prof !2

10:                                               ; preds = %5
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 0, i32 0
  %13 = load float*, float** %12, align 8
  %14 = load float, float* %13, align 4
  %15 = fptosi float %14 to i32
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %102, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, %15
  br i1 %20, label %102, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %58, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %26, align 8
  %28 = icmp eq %"class.fxcrt::StringDataTemplate"* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = zext i32 %23 to i64
  %31 = sext i32 %15 to i64
  %32 = add nuw nsw i64 %31, 1
  %33 = mul nuw i64 %32, %30
  %34 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %27, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp ugt i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %25, %29
  store float 0.000000e+00, float* %2, align 4
  store float 0.000000e+00, float* %3, align 4
  store float 0.000000e+00, float* %4, align 4
  br label %102

38:                                               ; preds = %29
  %39 = shl nuw nsw i64 %30, 2
  %40 = tail call i8* @_Znwm(i64 %39) #18
  %41 = bitcast i8* %40 to float*
  %42 = ptrtoint i8* %40 to i64
  %43 = getelementptr inbounds float, float* %41, i64 %30
  %44 = add nsw i64 %30, -1
  %45 = getelementptr float, float* %41, i64 %44
  %46 = ptrtoint float* %45 to i64
  %47 = sub i64 4, %42
  %48 = add i64 %47, %46
  %49 = and i64 %48, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %40, i8 0, i64 %49, i1 false) #17
  %50 = ptrtoint float* %43 to i64
  %51 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %51, align 8
  %53 = icmp eq %"class.fxcrt::StringDataTemplate"* %52, null
  %54 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %52, i64 0, i32 3, i64 0
  %55 = select i1 %53, i8* null, i8* %54
  %56 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 5, i32 0, i32 0
  %57 = bitcast i8* %40 to float*
  br label %75

58:                                               ; preds = %75, %21
  %59 = phi i64 [ 0, %21 ], [ %50, %75 ]
  %60 = phi i64 [ 0, %21 ], [ %42, %75 ]
  %61 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %62 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %61, align 8
  %63 = sub i64 %59, %60
  %64 = ashr exact i64 %63, 2
  %65 = bitcast %"class.pdfium::span"* %6 to i64*
  store i64 %60, i64* %65, align 8
  %66 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %6, i64 0, i32 1
  store i64 %64, i64* %66, align 8
  %67 = bitcast %class.CPDF_ColorSpace* %62 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)***
  %68 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*** %67, align 8
  %69 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %68, i64 2
  %70 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %69, align 8
  %71 = call zeroext i1 %70(%class.CPDF_ColorSpace* %62, %"class.pdfium::span"* nonnull %6, float* %2, float* %3, float* %4) #17
  %72 = icmp eq i64 %60, 0
  br i1 %72, label %102, label %73

73:                                               ; preds = %58
  %74 = inttoptr i64 %60 to i8*
  call void @_ZdlPv(i8* %74) #18
  br label %102

75:                                               ; preds = %38, %75
  %76 = phi i64 [ 0, %38 ], [ %98, %75 ]
  %77 = phi i32 [ %23, %38 ], [ %99, %75 ]
  %78 = trunc i64 %76 to i32
  %79 = shl i32 %78, 1
  %80 = zext i32 %79 to i64
  %81 = load float*, float** %56, align 8
  %82 = getelementptr inbounds float, float* %81, i64 %80
  %83 = load float, float* %82, align 4
  %84 = or i32 %79, 1
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds float, float* %81, i64 %85
  %87 = load float, float* %86, align 4
  %88 = mul i32 %77, %15
  %89 = add i32 %88, %78
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %55, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = uitofp i8 %92 to float
  %94 = fmul float %87, %93
  %95 = fdiv float %94, 2.550000e+02
  %96 = fadd float %83, %95
  %97 = getelementptr inbounds float, float* %57, i64 %76
  store float %96, float* %97, align 4
  %98 = add nuw nsw i64 %76, 1
  %99 = load i32, i32* %22, align 8
  %100 = zext i32 %99 to i64
  %101 = icmp ult i64 %98, %100
  br i1 %101, label %75, label %58

102:                                              ; preds = %73, %58, %37, %11, %17
  %103 = phi i1 [ false, %17 ], [ false, %11 ], [ false, %37 ], [ %71, %58 ], [ %71, %73 ]
  ret i1 %103
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CPDF_IndexedCS19EnableStdConversionEb(%"class.(anonymous namespace)::CPDF_IndexedCS"* nocapture, i1 zeroext) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 0, i32 5
  %4 = load i32, i32* %3, align 4
  br i1 %1, label %7, label %5

5:                                                ; preds = %2
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %5, %2
  %8 = phi i32 [ 1, %2 ], [ -1, %5 ]
  %9 = add i32 %4, %8
  store i32 %9, i32* %3, align 4
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %11, align 8
  %13 = icmp eq %class.CPDF_ColorSpace* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %class.CPDF_ColorSpace* %12 to void (%class.CPDF_ColorSpace*, i1)***
  %16 = load void (%class.CPDF_ColorSpace*, i1)**, void (%class.CPDF_ColorSpace*, i1)*** %15, align 8
  %17 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %16, i64 5
  %18 = load void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %17, align 8
  tail call void %18(%class.CPDF_ColorSpace* nonnull %12, i1 zeroext %1) #17
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114CPDF_IndexedCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE(%"class.(anonymous namespace)::CPDF_IndexedCS"*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*) unnamed_addr #2 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr.156", align 8
  %6 = alloca float, align 4
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"class.fxcrt::StringViewTemplate"*
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"class.pdfium::span.419"*
  %12 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %2, i64 0, i32 1
  %13 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %2, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"class.fxcrt::RetainPtr.147"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.165"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 4
  br i1 %20, label %186, label %21

21:                                               ; preds = %4
  %22 = tail call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %2, i64 1) #17
  %23 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %24 = load %class.CPDF_Array*, %class.CPDF_Array** %23, align 8
  %25 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %24, i64 0, i32 0
  %26 = icmp eq %class.CPDF_Object* %25, %22
  br i1 %26, label %186, label %27

27:                                               ; preds = %21
  %28 = tail call %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document* %1) #17
  %29 = bitcast %"class.fxcrt::RetainPtr.156"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN16CPDF_DocPageData20GetColorSpaceGuardedEPK11CPDF_ObjectPK15CPDF_DictionaryPNSt3__13setIS2_NS6_4lessIS2_EENS6_9allocatorIS2_EEEE(%"class.fxcrt::RetainPtr.156"* nonnull sret %5, %class.CPDF_DocPageData* %28, %class.CPDF_Object* %22, %class.CPDF_Dictionary* null, %"class.std::__1::set.188"* %3) #17
  %30 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.fxcrt::RetainPtr.156"* %5 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %31, align 8
  %34 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %34, align 8
  %36 = bitcast %"class.fxcrt::RetainPtr.156"* %30 to i64*
  store i64 %33, i64* %36, align 8
  %37 = icmp eq %class.CPDF_ColorSpace* %35, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %27
  %39 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %35, i64 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %27, %38
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %31, align 8
  br label %63

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %35, i64 0, i32 0
  %46 = bitcast %class.CPDF_ColorSpace* %35 to void (%"class.fxcrt::Retainable"*)***
  %47 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, i64 1
  %49 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, align 8
  call void %49(%"class.fxcrt::Retainable"* nonnull %45) #17
  %50 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %31, align 8
  %51 = bitcast %class.CPDF_ColorSpace* %50 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %31, align 8
  %52 = icmp eq %class.CPDF_ColorSpace* %50, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %50, i64 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %50, i64 0, i32 0
  %60 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %51, align 8
  %61 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %60, i64 1
  %62 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %61, align 8
  call void %62(%"class.fxcrt::Retainable"* nonnull %59) #17
  br label %63

63:                                               ; preds = %43, %44, %53, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  %64 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %34, align 8
  %65 = icmp eq %class.CPDF_ColorSpace* %64, null
  br i1 %65, label %186, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %64, i64 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = or i32 %68, 1
  %70 = icmp eq i32 %69, 11
  br i1 %70, label %186, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %64, i64 0, i32 6
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 2
  store i32 %73, i32* %74, align 8
  %75 = zext i32 %73 to i64
  %76 = shl nuw nsw i64 %75, 1
  %77 = icmp eq i32 %73, 0
  br i1 %77, label %91, label %78

78:                                               ; preds = %71
  %79 = shl nuw nsw i64 %75, 3
  %80 = call i8* @_Znwm(i64 %79) #18
  %81 = bitcast i8* %80 to float*
  %82 = getelementptr inbounds float, float* %81, i64 %76
  %83 = ptrtoint i8* %80 to i64
  %84 = add nsw i64 %76, -1
  %85 = getelementptr float, float* %81, i64 %84
  %86 = ptrtoint float* %85 to i64
  %87 = sub i64 4, %83
  %88 = add i64 %87, %86
  %89 = and i64 %88, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %80, i8 0, i64 %89, i1 false) #17, !noalias !77
  %90 = ptrtoint float* %82 to i64
  br label %91

91:                                               ; preds = %71, %78
  %92 = phi i64 [ 0, %71 ], [ %90, %78 ]
  %93 = phi i64 [ 0, %71 ], [ %83, %78 ]
  %94 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 5
  %95 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %94, i64 0, i32 0, i32 0
  %96 = load float*, float** %95, align 8
  %97 = icmp eq float* %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %91
  %99 = ptrtoint float* %96 to i64
  %100 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 5, i32 0, i32 1
  %101 = bitcast float** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast float* %96 to i8*
  call void @_ZdlPv(i8* %102) #18
  %103 = bitcast %"class.std::__1::vector.261"* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false) #17
  br label %104

104:                                              ; preds = %91, %98
  %105 = bitcast %"class.std::__1::vector.261"* %94 to i64*
  store i64 %93, i64* %105, align 8
  %106 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 5, i32 0, i32 1
  %107 = bitcast float** %106 to i64*
  store i64 %92, i64* %107, align 8
  %108 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %109 = bitcast float** %108 to i64*
  store i64 %92, i64* %109, align 8
  %110 = load i32, i32* %74, align 8
  %111 = icmp eq i32 %110, 0
  %112 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #17
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  br i1 %111, label %115, label %113

113:                                              ; preds = %104
  %114 = inttoptr i64 %93 to float*
  br label %120

115:                                              ; preds = %120, %104
  %116 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* %2, i64 2) #17
  %117 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 3
  store i32 %116, i32* %117, align 4
  %118 = call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %2, i64 3) #17
  %119 = icmp eq %class.CPDF_Object* %118, null
  br i1 %119, label %184, label %147

120:                                              ; preds = %113, %145
  %121 = phi float* [ %146, %145 ], [ %114, %113 ]
  %122 = phi i64 [ %141, %145 ], [ 0, %113 ]
  %123 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %34, align 8
  %124 = trunc i64 %122 to i32
  %125 = shl i32 %124, 1
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds float, float* %121, i64 %126
  %128 = or i32 %125, 1
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds float, float* %121, i64 %129
  %131 = bitcast %class.CPDF_ColorSpace* %123 to void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)***
  %132 = load void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)**, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*** %131, align 8
  %133 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)** %132, i64 3
  %134 = load void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)*, void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)** %133, align 8
  call void %134(%class.CPDF_ColorSpace* %123, i32 %124, float* nonnull %6, float* %127, float* %130) #17
  %135 = load float*, float** %95, align 8
  %136 = getelementptr inbounds float, float* %135, i64 %126
  %137 = load float, float* %136, align 4
  %138 = getelementptr inbounds float, float* %135, i64 %129
  %139 = load float, float* %138, align 4
  %140 = fsub float %139, %137
  store float %140, float* %138, align 4
  %141 = add nuw nsw i64 %122, 1
  %142 = load i32, i32* %74, align 8
  %143 = zext i32 %142 to i64
  %144 = icmp ult i64 %141, %143
  br i1 %144, label %145, label %115

145:                                              ; preds = %120
  %146 = load float*, float** %95, align 8
  br label %120

147:                                              ; preds = %115
  %148 = bitcast %class.CPDF_Object* %118 to %class.CPDF_String* (%class.CPDF_Object*)***
  %149 = load %class.CPDF_String* (%class.CPDF_Object*)**, %class.CPDF_String* (%class.CPDF_Object*)*** %148, align 8
  %150 = getelementptr inbounds %class.CPDF_String* (%class.CPDF_Object*)*, %class.CPDF_String* (%class.CPDF_Object*)** %149, i64 38
  %151 = load %class.CPDF_String* (%class.CPDF_Object*)*, %class.CPDF_String* (%class.CPDF_Object*)** %150, align 8
  %152 = call %class.CPDF_String* %151(%class.CPDF_Object* nonnull %118) #17
  %153 = icmp eq %class.CPDF_String* %152, null
  br i1 %153, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #17
  call void @_ZNK11CPDF_String9GetStringEv(%"class.fxcrt::ByteString"* nonnull sret %7, %class.CPDF_String* nonnull %152) #17
  %156 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 4
  %157 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"* %156, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #17
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #17
  br label %184

158:                                              ; preds = %147
  %159 = bitcast %class.CPDF_Object* %118 to %class.CPDF_Stream* (%class.CPDF_Object*)***
  %160 = load %class.CPDF_Stream* (%class.CPDF_Object*)**, %class.CPDF_Stream* (%class.CPDF_Object*)*** %159, align 8
  %161 = getelementptr inbounds %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %160, i64 36
  %162 = load %class.CPDF_Stream* (%class.CPDF_Object*)*, %class.CPDF_Stream* (%class.CPDF_Object*)** %161, align 8
  %163 = call %class.CPDF_Stream* %162(%class.CPDF_Object* nonnull %118) #17
  %164 = icmp eq %class.CPDF_Stream* %163, null
  br i1 %164, label %184, label %165

165:                                              ; preds = %158
  %166 = call i8* @_Znwm(i64 64) #18, !noalias !80
  %167 = bitcast i8* %166 to %class.CPDF_StreamAcc*
  call void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc* nonnull %167, %class.CPDF_Stream* nonnull %163) #17, !noalias !80
  %168 = getelementptr inbounds i8, i8* %166, i64 8
  %169 = bitcast i8* %168 to i64*
  %170 = load i64, i64* %169, align 8, !noalias !80
  %171 = add nsw i64 %170, 1
  store i64 %171, i64* %169, align 8, !noalias !80
  call void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc* nonnull %167) #17
  call void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.419"* nonnull sret %11, %class.CPDF_StreamAcc* nonnull %167) #17
  %172 = load <2 x i64>, <2 x i64>* %10, align 16
  store <2 x i64> %172, <2 x i64>* %8, align 16
  %173 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_IndexedCS", %"class.(anonymous namespace)::CPDF_IndexedCS"* %0, i64 0, i32 4
  %174 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* %173, %"class.fxcrt::StringViewTemplate"* nonnull %9) #17
  %175 = load i64, i64* %169, align 8
  %176 = add nsw i64 %175, -1
  store i64 %176, i64* %169, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %184

178:                                              ; preds = %165
  %179 = bitcast i8* %166 to %"class.fxcrt::Retainable"*
  %180 = bitcast i8* %166 to void (%"class.fxcrt::Retainable"*)***
  %181 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %181, i64 1
  %183 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %182, align 8
  call void %183(%"class.fxcrt::Retainable"* nonnull %179) #17
  br label %184

184:                                              ; preds = %158, %165, %178, %154, %115
  %185 = phi i32 [ 0, %115 ], [ 1, %154 ], [ 1, %178 ], [ 1, %165 ], [ 1, %158 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #17
  br label %186

186:                                              ; preds = %63, %21, %184, %66, %4
  %187 = phi i32 [ 0, %4 ], [ 0, %21 ], [ 0, %63 ], [ %185, %184 ], [ 0, %66 ]
  ret i32 %187
}

declare void @_ZN16CPDF_DocPageData20GetColorSpaceGuardedEPK11CPDF_ObjectPK15CPDF_DictionaryPNSt3__13setIS2_NS6_4lessIS2_EENS6_9allocatorIS2_EEEE(%"class.fxcrt::RetainPtr.156"* sret, %class.CPDF_DocPageData*, %class.CPDF_Object*, %class.CPDF_Dictionary*, %"class.std::__1::set.188"*) local_unnamed_addr #3

declare i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #3

declare void @_ZNK11CPDF_String9GetStringEv(%"class.fxcrt::ByteString"* sret, %class.CPDF_String*) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSEOS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN14CPDF_StreamAcc19LoadAllDataFilteredEv(%class.CPDF_StreamAcc*) local_unnamed_addr #3

declare void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span.419"* sret, %class.CPDF_StreamAcc*) local_unnamed_addr #3

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #3

declare void @_ZN14CPDF_StreamAccC1EPK11CPDF_Stream(%class.CPDF_StreamAcc*, %class.CPDF_Stream*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CPDF_SeparationCSD2Ev(%"class.(anonymous namespace)::CPDF_SeparationCS"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_117CPDF_SeparationCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Function*, %class.CPDF_Function** %3, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %3, align 8
  %5 = icmp eq %class.CPDF_Function* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.CPDF_Function* %4 to void (%class.CPDF_Function*)***
  %8 = load void (%class.CPDF_Function*)**, void (%class.CPDF_Function*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %8, i64 1
  %10 = load void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %9, align 8
  tail call void %10(%class.CPDF_Function* nonnull %4) #17
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %12, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %12, align 8
  %14 = icmp eq %class.CPDF_ColorSpace* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %13, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %17, -1
  store i64 %18, i64* %16, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %13, i64 0, i32 0
  %22 = bitcast %class.CPDF_ColorSpace* %13 to void (%"class.fxcrt::Retainable"*)***
  %23 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, i64 1
  %25 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %24, align 8
  tail call void %25(%"class.fxcrt::Retainable"* nonnull %21) #17
  br label %26

26:                                               ; preds = %11, %15, %20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.CPDF_Array*, %class.CPDF_Array** %27, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %27, align 8
  %29 = icmp eq %class.CPDF_Array* %28, null
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %28, i64 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %28, i64 0, i32 0, i32 0
  %37 = bitcast %class.CPDF_Array* %28 to void (%"class.fxcrt::Retainable"*)***
  %38 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, i64 1
  %40 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, align 8
  tail call void %40(%"class.fxcrt::Retainable"* nonnull %36) #17
  br label %41

41:                                               ; preds = %26, %30, %35
  %42 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %42) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CPDF_SeparationCSD0Ev(%"class.(anonymous namespace)::CPDF_SeparationCS"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_117CPDF_SeparationCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Function*, %class.CPDF_Function** %3, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %3, align 8
  %5 = icmp eq %class.CPDF_Function* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.CPDF_Function* %4 to void (%class.CPDF_Function*)***
  %8 = load void (%class.CPDF_Function*)**, void (%class.CPDF_Function*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %8, i64 1
  %10 = load void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %9, align 8
  tail call void %10(%class.CPDF_Function* nonnull %4) #17
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %12, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %12, align 8
  %14 = icmp eq %class.CPDF_ColorSpace* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %13, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %17, -1
  store i64 %18, i64* %16, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %13, i64 0, i32 0
  %22 = bitcast %class.CPDF_ColorSpace* %13 to void (%"class.fxcrt::Retainable"*)***
  %23 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, i64 1
  %25 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %24, align 8
  tail call void %25(%"class.fxcrt::Retainable"* nonnull %21) #17
  br label %26

26:                                               ; preds = %20, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.CPDF_Array*, %class.CPDF_Array** %27, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %27, align 8
  %29 = icmp eq %class.CPDF_Array* %28, null
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %28, i64 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %28, i64 0, i32 0, i32 0
  %37 = bitcast %class.CPDF_Array* %28 to void (%"class.fxcrt::Retainable"*)***
  %38 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, i64 1
  %40 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, align 8
  tail call void %40(%"class.fxcrt::Retainable"* nonnull %36) #17
  br label %41

41:                                               ; preds = %26, %30, %35
  %42 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %42) #17
  %43 = bitcast %"class.(anonymous namespace)::CPDF_SeparationCS"* %0 to i8*
  tail call void @_ZdlPv(i8* %43) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_117CPDF_SeparationCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_(%"class.(anonymous namespace)::CPDF_SeparationCS"* nocapture readonly, %"class.pdfium::span"* nocapture readonly, float*, float*, float*) unnamed_addr #2 align 2 {
  %6 = alloca %"class.std::__1::vector.261", align 8
  %7 = alloca %"class.pdfium::span", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.pdfium::span", align 8
  %10 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %135, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %class.CPDF_Function*, %class.CPDF_Function** %14, align 8
  %16 = icmp eq %class.CPDF_Function* %15, null
  br i1 %16, label %17, label %93

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %18, align 8
  %20 = icmp eq %class.CPDF_ColorSpace* %19, null
  br i1 %20, label %135, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %19, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = bitcast %"class.std::__1::vector.261"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %6, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %6, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::vector.261", %"class.std::__1::vector.261"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = sext i32 %23 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #17
  %29 = icmp eq i32 %23, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %21
  %31 = icmp slt i32 %23, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.261"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %33) #19
  unreachable

34:                                               ; preds = %21
  %35 = bitcast float** %26 to i64*
  br label %60

36:                                               ; preds = %30
  %37 = shl nsw i64 %28, 2
  %38 = tail call i8* @_Znwm(i64 %37) #18
  %39 = bitcast i8* %38 to float*
  %40 = bitcast %"class.std::__1::vector.261"* %6 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds float, float* %39, i64 %28
  store float* %41, float** %27, align 8
  %42 = bitcast float** %26 to i64*
  %43 = ptrtoint i8* %38 to i64
  %44 = add nsw i64 %28, -1
  %45 = getelementptr float, float* %39, i64 %44
  %46 = ptrtoint float* %45 to i64
  %47 = sub i64 4, %43
  %48 = add i64 %47, %46
  %49 = and i64 %48, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 0, i64 %49, i1 false) #17
  %50 = ptrtoint float* %41 to i64
  store i64 %50, i64* %42, align 8
  %51 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 1
  %52 = bitcast %"class.pdfium::span"* %1 to i32**
  %53 = zext i32 %23 to i64
  br label %80

54:                                               ; preds = %85
  %55 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %18, align 8
  %56 = bitcast %"class.std::__1::vector.261"* %6 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast float** %26 to i64*
  %59 = load i64, i64* %58, align 8
  br label %60

60:                                               ; preds = %34, %54
  %61 = phi i64* [ %35, %34 ], [ %58, %54 ]
  %62 = phi i64 [ 0, %34 ], [ %59, %54 ]
  %63 = phi i64 [ 0, %34 ], [ %57, %54 ]
  %64 = phi %class.CPDF_ColorSpace* [ %19, %34 ], [ %55, %54 ]
  %65 = sub i64 %62, %63
  %66 = ashr exact i64 %65, 2
  %67 = bitcast %"class.pdfium::span"* %7 to i64*
  store i64 %63, i64* %67, align 8
  %68 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 1
  store i64 %66, i64* %68, align 8
  %69 = bitcast %class.CPDF_ColorSpace* %64 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)***
  %70 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %70, i64 2
  %72 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %71, align 8
  %73 = call zeroext i1 %72(%class.CPDF_ColorSpace* %64, %"class.pdfium::span"* nonnull %7, float* %2, float* %3, float* %4) #17
  %74 = load float*, float** %25, align 8
  %75 = icmp eq float* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %60
  %77 = ptrtoint float* %74 to i64
  store i64 %77, i64* %61, align 8
  %78 = bitcast float* %74 to i8*
  call void @_ZdlPv(i8* %78) #18
  br label %79

79:                                               ; preds = %60, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #17
  br label %135

80:                                               ; preds = %85, %36
  %81 = phi i64 [ 0, %36 ], [ %91, %85 ]
  %82 = load i64, i64* %51, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %85, !prof !2

84:                                               ; preds = %80
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !54
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #17, !srcloc !55
  unreachable

85:                                               ; preds = %80
  %86 = load i32*, i32** %52, align 8
  %87 = load i32, i32* %86, align 4
  %88 = load float*, float** %25, align 8
  %89 = getelementptr inbounds float, float* %88, i64 %81
  %90 = bitcast float* %89 to i32*
  store i32 %87, i32* %90, align 4
  %91 = add nuw nsw i64 %81, 1
  %92 = icmp eq i64 %91, %53
  br i1 %92, label %54, label %80

93:                                               ; preds = %13
  %94 = getelementptr inbounds %class.CPDF_Function, %class.CPDF_Function* %15, i64 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = icmp ugt i32 %95, 16
  %97 = select i1 %96, i32 %95, i32 16
  %98 = zext i32 %97 to i64
  %99 = shl nuw nsw i64 %98, 2
  %100 = tail call i8* @_Znwm(i64 %99) #18
  %101 = bitcast i8* %100 to float*
  %102 = ptrtoint i8* %100 to i64
  %103 = getelementptr inbounds float, float* %101, i64 %98
  %104 = add nsw i64 %98, -1
  %105 = getelementptr float, float* %101, i64 %104
  %106 = ptrtoint float* %105 to i64
  %107 = sub i64 4, %102
  %108 = add i64 %107, %106
  %109 = and i64 %108, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %100, i8 0, i64 %109, i1 false) #17
  %110 = ptrtoint float* %103 to i64
  %111 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #17
  store i32 0, i32* %8, align 4
  %112 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 0, i32 0
  %113 = load float*, float** %112, align 8
  %114 = call zeroext i1 @_ZNK13CPDF_Function4CallEPKfjPfPi(%class.CPDF_Function* nonnull %15, float* %113, i32 1, float* nonnull %101, i32* nonnull %8) #17
  %115 = xor i1 %114, true
  %116 = load i32, i32* %8, align 4
  %117 = icmp eq i32 %116, 0
  %118 = or i1 %117, %115
  br i1 %118, label %133, label %119

119:                                              ; preds = %93
  %120 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %121 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %120, align 8
  %122 = icmp eq %class.CPDF_ColorSpace* %121, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %119
  %124 = sub i64 %110, %102
  %125 = ashr exact i64 %124, 2
  %126 = bitcast %"class.pdfium::span"* %9 to i64*
  store i64 %102, i64* %126, align 8
  %127 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %9, i64 0, i32 1
  store i64 %125, i64* %127, align 8
  %128 = bitcast %class.CPDF_ColorSpace* %121 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)***
  %129 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*** %128, align 8
  %130 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %129, i64 2
  %131 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %130, align 8
  %132 = call zeroext i1 %131(%class.CPDF_ColorSpace* nonnull %121, %"class.pdfium::span"* nonnull %9, float* %2, float* %3, float* %4) #17
  br label %133

133:                                              ; preds = %119, %93, %123
  %134 = phi i1 [ %132, %123 ], [ false, %93 ], [ false, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #17
  call void @_ZdlPv(i8* nonnull %100) #18
  br label %135

135:                                              ; preds = %17, %5, %133, %79
  %136 = phi i1 [ %134, %133 ], [ %73, %79 ], [ false, %5 ], [ false, %17 ]
  ret i1 %136
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZNK12_GLOBAL__N_117CPDF_SeparationCS15GetDefaultValueEiPfS1_S1_(%"class.(anonymous namespace)::CPDF_SeparationCS"* nocapture readnone, i32, float* nocapture, float* nocapture, float* nocapture) unnamed_addr #7 align 2 {
  store float 1.000000e+00, float* %2, align 4
  store float 0.000000e+00, float* %3, align 4
  store float 1.000000e+00, float* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CPDF_SeparationCS19EnableStdConversionEb(%"class.(anonymous namespace)::CPDF_SeparationCS"* nocapture, i1 zeroext) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 0, i32 5
  %4 = load i32, i32* %3, align 4
  br i1 %1, label %7, label %5

5:                                                ; preds = %2
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %5, %2
  %8 = phi i32 [ 1, %2 ], [ -1, %5 ]
  %9 = add i32 %4, %8
  store i32 %9, i32* %3, align 4
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %11, align 8
  %13 = icmp eq %class.CPDF_ColorSpace* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %class.CPDF_ColorSpace* %12 to void (%class.CPDF_ColorSpace*, i1)***
  %16 = load void (%class.CPDF_ColorSpace*, i1)**, void (%class.CPDF_ColorSpace*, i1)*** %15, align 8
  %17 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %16, i64 5
  %18 = load void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %17, align 8
  tail call void %18(%class.CPDF_ColorSpace* nonnull %12, i1 zeroext %1) #17
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_117CPDF_SeparationCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE(%"class.(anonymous namespace)::CPDF_SeparationCS"* nocapture, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*) unnamed_addr #2 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.156", align 8
  %7 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %8, align 8
  call void @_ZNK10CPDF_Array11GetStringAtEm(%"class.fxcrt::ByteString"* nonnull sret %5, %class.CPDF_Array* %2, i64 1) #17
  %9 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)) #17
  %10 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 1
  br i1 %9, label %11, label %12

11:                                               ; preds = %4
  store i32 0, i32* %10, align 4
  br label %97

12:                                               ; preds = %4
  store i32 2, i32* %10, align 4
  %13 = call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %2, i64 2) #17
  %14 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.CPDF_Array*, %class.CPDF_Array** %14, align 8
  %16 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %15, i64 0, i32 0
  %17 = icmp eq %class.CPDF_Object* %16, %13
  br i1 %17, label %97, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.fxcrt::RetainPtr.156"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  call void @_ZN15CPDF_ColorSpace4LoadEP13CPDF_DocumentPK11CPDF_ObjectPNSt3__13setIS4_NS5_4lessIS4_EENS5_9allocatorIS4_EEEE(%"class.fxcrt::RetainPtr.156"* nonnull sret %6, %class.CPDF_Document* %1, %class.CPDF_Object* %13, %"class.std::__1::set.188"* %3)
  %20 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.fxcrt::RetainPtr.156"* %6 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %21, align 8
  %24 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %24, align 8
  %26 = bitcast %"class.fxcrt::RetainPtr.156"* %20 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %class.CPDF_ColorSpace* %25, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %25, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %18, %28
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %21, align 8
  br label %53

34:                                               ; preds = %28
  %35 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %25, i64 0, i32 0
  %36 = bitcast %class.CPDF_ColorSpace* %25 to void (%"class.fxcrt::Retainable"*)***
  %37 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, i64 1
  %39 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, align 8
  call void %39(%"class.fxcrt::Retainable"* nonnull %35) #17
  %40 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %21, align 8
  %41 = bitcast %class.CPDF_ColorSpace* %40 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %21, align 8
  %42 = icmp eq %class.CPDF_ColorSpace* %40, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %40, i64 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = add nsw i64 %45, -1
  store i64 %46, i64* %44, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %40, i64 0, i32 0
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %41, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %49) #17
  br label %53

53:                                               ; preds = %33, %34, %43, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %54 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %24, align 8
  %55 = icmp eq %class.CPDF_ColorSpace* %54, null
  br i1 %55, label %97, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %54, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, -4
  %60 = icmp eq i32 %59, 8
  br i1 %60, label %97, label %61

61:                                               ; preds = %56
  %62 = call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %2, i64 3) #17
  %63 = icmp eq %class.CPDF_Object* %62, null
  br i1 %63, label %97, label %64

64:                                               ; preds = %61
  %65 = bitcast %class.CPDF_Object* %62 to i1 (%class.CPDF_Object*)***
  %66 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %65, align 8
  %67 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %66, i64 17
  %68 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %67, align 8
  %69 = call zeroext i1 %68(%class.CPDF_Object* nonnull %62) #17
  br i1 %69, label %97, label %70

70:                                               ; preds = %64
  %71 = call %class.CPDF_Function* @_ZN13CPDF_Function4LoadEPK11CPDF_Object(%class.CPDF_Object* nonnull %62) #17
  %72 = ptrtoint %class.CPDF_Function* %71 to i64
  %73 = icmp eq %class.CPDF_Function* %71, null
  br i1 %73, label %97, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.CPDF_Function, %class.CPDF_Function* %71, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %24, align 8
  %78 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %77, i64 0, i32 6
  %79 = load i32, i32* %78, align 8
  %80 = icmp ult i32 %76, %79
  br i1 %80, label %92, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_SeparationCS", %"class.(anonymous namespace)::CPDF_SeparationCS"* %0, i64 0, i32 3
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.280"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load %class.CPDF_Function*, %class.CPDF_Function** %83, align 8
  %85 = bitcast %"class.std::__1::unique_ptr.280"* %82 to i64*
  store i64 %72, i64* %85, align 8
  %86 = icmp eq %class.CPDF_Function* %84, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %81
  %88 = bitcast %class.CPDF_Function* %84 to void (%class.CPDF_Function*)***
  %89 = load void (%class.CPDF_Function*)**, void (%class.CPDF_Function*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %89, i64 1
  %91 = load void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %90, align 8
  call void %91(%class.CPDF_Function* nonnull %84) #17
  br label %97

92:                                               ; preds = %74
  %93 = bitcast %class.CPDF_Function* %71 to void (%class.CPDF_Function*)***
  %94 = load void (%class.CPDF_Function*)**, void (%class.CPDF_Function*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %94, i64 1
  %96 = load void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %95, align 8
  call void %96(%class.CPDF_Function* nonnull %71) #17
  br label %97

97:                                               ; preds = %70, %53, %87, %81, %92, %12, %56, %61, %64, %11
  %98 = phi i32 [ 1, %11 ], [ 0, %12 ], [ 0, %53 ], [ 0, %56 ], [ 1, %61 ], [ 1, %64 ], [ 1, %92 ], [ 1, %81 ], [ 1, %87 ], [ 1, %70 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret i32 %98
}

declare zeroext i1 @_ZNK13CPDF_Function4CallEPKfjPfPi(%class.CPDF_Function*, float*, i32, float*, i32*) local_unnamed_addr #3

declare void @_ZNK10CPDF_Array11GetStringAtEm(%"class.fxcrt::ByteString"* sret, %class.CPDF_Array*, i64) local_unnamed_addr #3

declare %class.CPDF_Function* @_ZN13CPDF_Function4LoadEPK11CPDF_Object(%class.CPDF_Object*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CPDF_DeviceNCSD2Ev(%"class.(anonymous namespace)::CPDF_DeviceNCS"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_114CPDF_DeviceNCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Function*, %class.CPDF_Function** %3, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %3, align 8
  %5 = icmp eq %class.CPDF_Function* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.CPDF_Function* %4 to void (%class.CPDF_Function*)***
  %8 = load void (%class.CPDF_Function*)**, void (%class.CPDF_Function*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %8, i64 1
  %10 = load void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %9, align 8
  tail call void %10(%class.CPDF_Function* nonnull %4) #17
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %12, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %12, align 8
  %14 = icmp eq %class.CPDF_ColorSpace* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %13, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %17, -1
  store i64 %18, i64* %16, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %13, i64 0, i32 0
  %22 = bitcast %class.CPDF_ColorSpace* %13 to void (%"class.fxcrt::Retainable"*)***
  %23 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, i64 1
  %25 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %24, align 8
  tail call void %25(%"class.fxcrt::Retainable"* nonnull %21) #17
  br label %26

26:                                               ; preds = %11, %15, %20
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.CPDF_Array*, %class.CPDF_Array** %27, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %27, align 8
  %29 = icmp eq %class.CPDF_Array* %28, null
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %28, i64 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %28, i64 0, i32 0, i32 0
  %37 = bitcast %class.CPDF_Array* %28 to void (%"class.fxcrt::Retainable"*)***
  %38 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, i64 1
  %40 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, align 8
  tail call void %40(%"class.fxcrt::Retainable"* nonnull %36) #17
  br label %41

41:                                               ; preds = %26, %30, %35
  %42 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %42) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CPDF_DeviceNCSD0Ev(%"class.(anonymous namespace)::CPDF_DeviceNCS"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN12_GLOBAL__N_114CPDF_DeviceNCSE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Function*, %class.CPDF_Function** %3, align 8
  store %class.CPDF_Function* null, %class.CPDF_Function** %3, align 8
  %5 = icmp eq %class.CPDF_Function* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.CPDF_Function* %4 to void (%class.CPDF_Function*)***
  %8 = load void (%class.CPDF_Function*)**, void (%class.CPDF_Function*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %8, i64 1
  %10 = load void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %9, align 8
  tail call void %10(%class.CPDF_Function* nonnull %4) #17
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %12, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %12, align 8
  %14 = icmp eq %class.CPDF_ColorSpace* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %13, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %17, -1
  store i64 %18, i64* %16, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %13, i64 0, i32 0
  %22 = bitcast %class.CPDF_ColorSpace* %13 to void (%"class.fxcrt::Retainable"*)***
  %23 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, i64 1
  %25 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %24, align 8
  tail call void %25(%"class.fxcrt::Retainable"* nonnull %21) #17
  br label %26

26:                                               ; preds = %20, %15, %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV15CPDF_ColorSpace, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %28 = load %class.CPDF_Array*, %class.CPDF_Array** %27, align 8
  store %class.CPDF_Array* null, %class.CPDF_Array** %27, align 8
  %29 = icmp eq %class.CPDF_Array* %28, null
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %28, i64 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %28, i64 0, i32 0, i32 0
  %37 = bitcast %class.CPDF_Array* %28 to void (%"class.fxcrt::Retainable"*)***
  %38 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, i64 1
  %40 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, align 8
  tail call void %40(%"class.fxcrt::Retainable"* nonnull %36) #17
  br label %41

41:                                               ; preds = %26, %30, %35
  %42 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %42) #17
  %43 = bitcast %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0 to i8*
  tail call void @_ZdlPv(i8* %43) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_114CPDF_DeviceNCS6GetRGBEN6pdfium4spanIKfEEPfS5_S5_(%"class.(anonymous namespace)::CPDF_DeviceNCS"* nocapture readonly, %"class.pdfium::span"* nocapture readonly, float*, float*, float*) unnamed_addr #2 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.pdfium::span", align 8
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_Function*, %class.CPDF_Function** %8, align 8
  %10 = icmp eq %class.CPDF_Function* %9, null
  br i1 %10, label %53, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.CPDF_Function, %class.CPDF_Function* %9, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %13, 16
  %15 = select i1 %14, i32 %13, i32 16
  %16 = zext i32 %15 to i64
  %17 = shl nuw nsw i64 %16, 2
  %18 = tail call i8* @_Znwm(i64 %17) #18
  %19 = bitcast i8* %18 to float*
  %20 = ptrtoint i8* %18 to i64
  %21 = add nsw i64 %16, -1
  %22 = getelementptr float, float* %19, i64 %21
  %23 = ptrtoint float* %22 to i64
  %24 = sub i64 4, %20
  %25 = add i64 %24, %23
  %26 = and i64 %25, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 0, i64 %26, i1 false) #17
  %27 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #17
  store i32 0, i32* %6, align 4
  %28 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %1, i64 0, i32 0, i32 0
  %29 = load float*, float** %28, align 8
  %30 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 0, i32 6
  %31 = load i32, i32* %30, align 8
  %32 = call zeroext i1 @_ZNK13CPDF_Function4CallEPKfjPfPi(%class.CPDF_Function* nonnull %9, float* %29, i32 %31, float* nonnull %19, i32* nonnull %6) #17
  %33 = xor i1 %32, true
  %34 = load i32, i32* %6, align 4
  %35 = icmp eq i32 %34, 0
  %36 = or i1 %35, %33
  br i1 %36, label %51, label %37

37:                                               ; preds = %11
  %38 = getelementptr inbounds float, float* %19, i64 %16
  %39 = ptrtoint float* %38 to i64
  %40 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %41 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %40, align 8
  %42 = sub i64 %39, %20
  %43 = ashr exact i64 %42, 2
  %44 = bitcast %"class.pdfium::span"* %7 to i64*
  store i64 %20, i64* %44, align 8
  %45 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %7, i64 0, i32 1
  store i64 %43, i64* %45, align 8
  %46 = bitcast %class.CPDF_ColorSpace* %41 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)***
  %47 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %47, i64 2
  %49 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %48, align 8
  %50 = call zeroext i1 %49(%class.CPDF_ColorSpace* %41, %"class.pdfium::span"* nonnull %7, float* %2, float* %3, float* %4) #17
  br label %51

51:                                               ; preds = %11, %37
  %52 = phi i1 [ %50, %37 ], [ false, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #17
  call void @_ZdlPv(i8* nonnull %18) #18
  br label %53

53:                                               ; preds = %5, %51
  %54 = phi i1 [ %52, %51 ], [ false, %5 ]
  ret i1 %54
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZNK12_GLOBAL__N_114CPDF_DeviceNCS15GetDefaultValueEiPfS1_S1_(%"class.(anonymous namespace)::CPDF_DeviceNCS"* nocapture readnone, i32, float* nocapture, float* nocapture, float* nocapture) unnamed_addr #7 align 2 {
  store float 1.000000e+00, float* %2, align 4
  store float 0.000000e+00, float* %3, align 4
  store float 1.000000e+00, float* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CPDF_DeviceNCS19EnableStdConversionEb(%"class.(anonymous namespace)::CPDF_DeviceNCS"* nocapture, i1 zeroext) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 0, i32 5
  %4 = load i32, i32* %3, align 4
  br i1 %1, label %7, label %5

5:                                                ; preds = %2
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %5, %2
  %8 = phi i32 [ 1, %2 ], [ -1, %5 ]
  %9 = add i32 %4, %8
  store i32 %9, i32* %3, align 4
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %11, align 8
  %13 = icmp eq %class.CPDF_ColorSpace* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %class.CPDF_ColorSpace* %12 to void (%class.CPDF_ColorSpace*, i1)***
  %16 = load void (%class.CPDF_ColorSpace*, i1)**, void (%class.CPDF_ColorSpace*, i1)*** %15, align 8
  %17 = getelementptr inbounds void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %16, i64 5
  %18 = load void (%class.CPDF_ColorSpace*, i1)*, void (%class.CPDF_ColorSpace*, i1)** %17, align 8
  tail call void %18(%class.CPDF_ColorSpace* nonnull %12, i1 zeroext %1) #17
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12_GLOBAL__N_114CPDF_DeviceNCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS6_4lessISA_EENS6_9allocatorISA_EEEE(%"class.(anonymous namespace)::CPDF_DeviceNCS"* nocapture, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.188"*) unnamed_addr #2 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr.156", align 8
  %6 = tail call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %2, i64 1) #17
  %7 = icmp eq %class.CPDF_Object* %6, null
  br i1 %7, label %99, label %8

8:                                                ; preds = %4
  %9 = bitcast %class.CPDF_Object* %6 to %class.CPDF_Array* (%class.CPDF_Object*)***
  %10 = load %class.CPDF_Array* (%class.CPDF_Object*)**, %class.CPDF_Array* (%class.CPDF_Object*)*** %9, align 8
  %11 = getelementptr inbounds %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %10, i64 24
  %12 = load %class.CPDF_Array* (%class.CPDF_Object*)*, %class.CPDF_Array* (%class.CPDF_Object*)** %11, align 8
  %13 = tail call %class.CPDF_Array* %12(%class.CPDF_Object* nonnull %6) #17
  %14 = icmp eq %class.CPDF_Array* %13, null
  br i1 %14, label %99, label %15

15:                                               ; preds = %8
  %16 = tail call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %2, i64 2) #17
  %17 = icmp eq %class.CPDF_Object* %16, null
  br i1 %17, label %99, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %20 = load %class.CPDF_Array*, %class.CPDF_Array** %19, align 8
  %21 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %20, i64 0, i32 0
  %22 = icmp eq %class.CPDF_Object* %21, %16
  br i1 %22, label %99, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.fxcrt::RetainPtr.156"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  call void @_ZN15CPDF_ColorSpace4LoadEP13CPDF_DocumentPK11CPDF_ObjectPNSt3__13setIS4_NS5_4lessIS4_EENS5_9allocatorIS4_EEEE(%"class.fxcrt::RetainPtr.156"* nonnull sret %5, %class.CPDF_Document* %1, %class.CPDF_Object* nonnull %16, %"class.std::__1::set.188"* %3)
  %25 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.fxcrt::RetainPtr.156"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %26, align 8
  %29 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %29, align 8
  %31 = bitcast %"class.fxcrt::RetainPtr.156"* %25 to i64*
  store i64 %28, i64* %31, align 8
  %32 = icmp eq %class.CPDF_ColorSpace* %30, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %30, i64 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = add nsw i64 %35, -1
  store i64 %36, i64* %34, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %23, %33
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %26, align 8
  br label %58

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %30, i64 0, i32 0
  %41 = bitcast %class.CPDF_ColorSpace* %30 to void (%"class.fxcrt::Retainable"*)***
  %42 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %42, i64 1
  %44 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, align 8
  call void %44(%"class.fxcrt::Retainable"* nonnull %40) #17
  %45 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %26, align 8
  %46 = bitcast %class.CPDF_ColorSpace* %45 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %26, align 8
  %47 = icmp eq %class.CPDF_ColorSpace* %45, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %45, i64 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = add nsw i64 %50, -1
  store i64 %51, i64* %49, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %45, i64 0, i32 0
  %55 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %46, align 8
  %56 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %55, i64 1
  %57 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %56, align 8
  call void %57(%"class.fxcrt::Retainable"* nonnull %54) #17
  br label %58

58:                                               ; preds = %38, %39, %48, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  %59 = call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %2, i64 3) #17
  %60 = call %class.CPDF_Function* @_ZN13CPDF_Function4LoadEPK11CPDF_Object(%class.CPDF_Object* %59) #17
  %61 = ptrtoint %class.CPDF_Function* %60 to i64
  %62 = getelementptr inbounds %"class.(anonymous namespace)::CPDF_DeviceNCS", %"class.(anonymous namespace)::CPDF_DeviceNCS"* %0, i64 0, i32 2
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.280"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %class.CPDF_Function*, %class.CPDF_Function** %63, align 8
  %65 = bitcast %"class.std::__1::unique_ptr.280"* %62 to i64*
  store i64 %61, i64* %65, align 8
  %66 = icmp eq %class.CPDF_Function* %64, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %58
  %68 = bitcast %class.CPDF_Function* %64 to void (%class.CPDF_Function*)***
  %69 = load void (%class.CPDF_Function*)**, void (%class.CPDF_Function*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %69, i64 1
  %71 = load void (%class.CPDF_Function*)*, void (%class.CPDF_Function*)** %70, align 8
  call void %71(%class.CPDF_Function* nonnull %64) #17
  br label %72

72:                                               ; preds = %67, %58
  %73 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %29, align 8
  %74 = icmp eq %class.CPDF_ColorSpace* %73, null
  br i1 %74, label %99, label %75

75:                                               ; preds = %72
  %76 = load %class.CPDF_Function*, %class.CPDF_Function** %63, align 8
  %77 = icmp eq %class.CPDF_Function* %76, null
  br i1 %77, label %99, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %73, i64 0, i32 4
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, -4
  %82 = icmp eq i32 %81, 8
  br i1 %82, label %99, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %class.CPDF_Function, %class.CPDF_Function* %76, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %73, i64 0, i32 6
  %87 = load i32, i32* %86, align 8
  %88 = icmp ult i32 %85, %87
  br i1 %88, label %99, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %13, i64 0, i32 1
  %91 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %13, i64 0, i32 1, i32 0, i32 1
  %92 = bitcast %"class.fxcrt::RetainPtr.147"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::vector.165"* %90 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = sub i64 %93, %95
  %97 = lshr exact i64 %96, 3
  %98 = trunc i64 %97 to i32
  br label %99

99:                                               ; preds = %75, %72, %4, %89, %15, %18, %78, %83, %8
  %100 = phi i32 [ 0, %8 ], [ %98, %89 ], [ 0, %15 ], [ 0, %18 ], [ 0, %75 ], [ 0, %72 ], [ 0, %78 ], [ 0, %83 ], [ 0, %4 ]
  ret i32 %100
}

declare void @_ZN14CPDF_PatternCSC1EP13CPDF_Document(%class.CPDF_PatternCS*, %class.CPDF_Document*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i32 -2141189223}
!4 = !{i32 -2141189202}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE: argument 0"}
!7 = distinct !{!7, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE: argument 0"}
!10 = distinct !{!10, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE: argument 0"}
!13 = distinct !{!13, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE: argument 0"}
!16 = distinct !{!16, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeIPK11CPDF_ObjectNS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeIPK11CPDF_ObjectNS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!20 = !{i32 -2141201638}
!21 = !{i32 -2141201617}
!22 = !{i32 -2143056811}
!23 = !{i32 -2143056790}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!26 = distinct !{!26, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!27 = distinct !{!27, !28}
!28 = !{!"llvm.loop.unroll.disable"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_112CPDF_CalGrayEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!31 = distinct !{!31, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_112CPDF_CalGrayEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_111CPDF_CalRGBEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!34 = distinct !{!34, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_111CPDF_CalRGBEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_110CPDF_LabCSEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!37 = distinct !{!37, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_110CPDF_LabCSEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_115CPDF_ICCBasedCSEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_115CPDF_ICCBasedCSEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_114CPDF_IndexedCSEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!43 = distinct !{!43, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_114CPDF_IndexedCSEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_117CPDF_SeparationCSEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!46 = distinct !{!46, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_117CPDF_SeparationCSEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_114CPDF_DeviceNCSEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!49 = distinct !{!49, !"_ZN6pdfium10MakeRetainIN12_GLOBAL__N_114CPDF_DeviceNCSEJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6pdfium10MakeRetainI14CPDF_PatternCSJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZN6pdfium10MakeRetainI14CPDF_PatternCSJRP13CPDF_DocumentEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!53 = !{i8 0, i8 2}
!54 = !{i32 -2143513118}
!55 = !{i32 -2143513097}
!56 = !{!"branch_weights", i32 2000, i32 1}
!57 = distinct !{!57, !58}
!58 = !{!"llvm.loop.isvectorized", i32 1}
!59 = distinct !{!59, !28}
!60 = distinct !{!60, !61, !58}
!61 = !{!"llvm.loop.unroll.runtime.disable"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE: argument 0"}
!64 = distinct !{!64, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE: argument 0"}
!67 = distinct !{!67, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE: argument 0"}
!70 = distinct !{!70, !"_ZN15CPDF_ColorSpace10GetStockCSENS_6FamilyE"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN12_GLOBAL__N_115CPDF_ICCBasedCS24GetStockAlternateProfileEj: argument 0"}
!73 = distinct !{!73, !"_ZN12_GLOBAL__N_115CPDF_ICCBasedCS24GetStockAlternateProfileEj"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN12_GLOBAL__N_115CPDF_ICCBasedCS9GetRangesEPK15CPDF_Dictionaryj: argument 0"}
!76 = distinct !{!76, !"_ZN12_GLOBAL__N_115CPDF_ICCBasedCS9GetRangesEPK15CPDF_Dictionaryj"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN6pdfium8Vector2DIfNSt3__19allocatorIfEEEENS1_6vectorIT_T0_EEmm: argument 0"}
!79 = distinct !{!79, !"_ZN6pdfium8Vector2DIfNSt3__19allocatorIfEEEENS1_6vectorIT_T0_EEmm"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!82 = distinct !{!82, !"_ZN6pdfium10MakeRetainI14CPDF_StreamAccJRPK11CPDF_StreamEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
