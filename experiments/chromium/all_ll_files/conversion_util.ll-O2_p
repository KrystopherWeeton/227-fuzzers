; ModuleID = '../../third_party/blink/renderer/core/frame/csp/conversion_util.cc'
source_filename = "../../third_party/blink/renderer/core/frame/csp/conversion_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector", %"class.blink::WebVector.2", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.13", i32, [4 x i8], %"class.absl::optional", %"class.blink::WebVector.13" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2" = type { %"class.std::__1::vector.3" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.37" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.5", %"class.blink::WebVector.13", %"class.blink::WebVector.21", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.5" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.21" = type { %"class.std::__1::vector.22" }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.32" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.24" }
%"class.blink::WebVector.24" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { i8*, i8*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i8* }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.13", i8, i8, [6 x i8] }>
%"class.blink::WebVector.13" = type { %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::WebString"* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.44", %"class.WTF::HashMap", %"class.WTF::HashMap.49", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.60", i32, %"class.mojo::StructPtr.85", %"class.WTF::Vector.60" }
%"class.mojo::StructPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.WTF::String" }
%"class.WTF::HashMap.49" = type { %"class.WTF::HashTable.50" }
%"class.WTF::HashTable.50" = type <{ %"struct.WTF::KeyValuePair.53"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.53" = type { i32, %"class.mojo::StructPtr.54" }
%"class.mojo::StructPtr.54" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.network::mojom::blink::CSPSourceList"* }
%"class.network::mojom::blink::CSPSourceList" = type <{ %"class.WTF::Vector", %"class.WTF::Vector.60", %"class.WTF::Vector.65", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::StructPtr.44"*, i32, i32 }
%"class.WTF::Vector.65" = type { %"class.WTF::VectorBuffer.66" }
%"class.WTF::VectorBuffer.66" = type { %"class.WTF::VectorBufferBase.67" }
%"class.WTF::VectorBufferBase.67" = type { %"class.mojo::StructPtr.68"*, i32, i32 }
%"class.mojo::StructPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.network::mojom::blink::CSPHashSource"* }
%"class.network::mojom::blink::CSPHashSource" = type { i32, %"class.WTF::Vector.72" }
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { i8*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.85" = type { %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.60", i8, i8, [6 x i8] }>
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase.62" }
%"class.WTF::VectorBufferBase.62" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.108" = type { %"class.WTF::VectorBuffer.109" }
%"class.WTF::VectorBuffer.109" = type { %"class.WTF::VectorBufferBase.110" }
%"class.WTF::VectorBufferBase.110" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.blink::WebVector.100" = type { %"class.std::__1::vector.101" }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.116 }
%union.anon.116 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink16WebCSPSourceListD2Ev = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EERKbSJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEC2IJRKN5blink9WebStringESA_RKiSA_RKbSE_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS3_RKN5blink9WebStringEEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEERKbSD_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EERKbSP_SP_RKNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEESP_NS9_6VectorISC_Lj0ESI_EERKNS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEESX_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm = comdat any

@.str.1 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPHashSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, WTF::String>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, mojo::StructPtr<network::mojom::blink::CSPSourceList> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::ContentSecurityPolicy>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEE(%"struct.blink::WebContentSecurityPolicy"* noalias sret, %"class.mojo::StructPtr"* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %"struct.blink::WebCSPSource", align 8
  %4 = alloca %"struct.blink::WebContentSecurityPolicyDirective", align 8
  %5 = alloca %"struct.blink::WebContentSecurityPolicyRawDirective", align 8
  %6 = alloca %"class.mojo::InlinedStructPtr", align 8
  %7 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %7, align 8
  %9 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %8, i64 0, i32 2, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = icmp eq i32 %10, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %2
  %14 = mul nuw nsw i64 %11, 96
  %15 = tail call i8* @_Znwm(i64 %14) #10
  %16 = bitcast i8* %15 to %"struct.blink::WebContentSecurityPolicyDirective"*
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %16, i64 %11
  %19 = ptrtoint %"struct.blink::WebContentSecurityPolicyDirective"* %18 to i64
  %20 = add nsw i64 %11, -1
  %21 = getelementptr %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %16, i64 %20, i32 0
  %22 = ptrtoint i32* %21 to i64
  %23 = sub i64 %22, %17
  %24 = urem i64 %23, 96
  %25 = add i64 %23, 96
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 %26, i1 false) #11
  %27 = load i32, i32* %9, align 4
  br label %28

28:                                               ; preds = %2, %13
  %29 = phi i32 [ 0, %2 ], [ %27, %13 ]
  %30 = phi i64 [ 0, %2 ], [ %17, %13 ]
  %31 = phi i64 [ 0, %2 ], [ %19, %13 ]
  %32 = icmp eq i32 %29, 0
  %33 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %8, i64 0, i32 2, i32 0, i32 0
  %34 = load %"struct.WTF::KeyValuePair.53"*, %"struct.WTF::KeyValuePair.53"** %33, align 8
  %35 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %8, i64 0, i32 2, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %34, i64 %37
  br i1 %32, label %95, label %39

39:                                               ; preds = %28
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %39, %45
  %42 = phi %"struct.WTF::KeyValuePair.53"* [ %46, %45 ], [ %34, %39 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  switch i32 %44, label %48 [
    i32 -1000001, label %45
    i32 0, label %45
  ]

45:                                               ; preds = %41, %41
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %42, i64 1
  %47 = icmp eq %"struct.WTF::KeyValuePair.53"* %46, %38
  br i1 %47, label %95, label %41

48:                                               ; preds = %41, %39
  %49 = phi %"struct.WTF::KeyValuePair.53"* [ %34, %39 ], [ %42, %41 ]
  %50 = icmp eq %"struct.WTF::KeyValuePair.53"* %49, %38
  br i1 %50, label %95, label %51

51:                                               ; preds = %48
  %52 = bitcast %"struct.blink::WebContentSecurityPolicyDirective"* %4 to i8*
  %53 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 0
  %54 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2
  %55 = bitcast %"struct.blink::WebCSPSource"* %3 to i8*
  %56 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %3, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %3, i64 0, i32 1
  %58 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %3, i64 0, i32 2
  %59 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %3, i64 0, i32 4
  %60 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %3, i64 0, i32 5
  %61 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %3, i64 0, i32 6
  %62 = bitcast i8* %60 to i16*
  %63 = bitcast %"struct.blink::WebCSPSourceList"* %54 to i64*
  %64 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"struct.blink::WebCSPSource"** %64 to i64*
  %66 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast %"struct.blink::WebCSPSource"** %66 to i64*
  %68 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 1
  %69 = bitcast %"class.blink::WebVector.13"* %68 to i8*
  %70 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 1
  %71 = bitcast %"class.blink::WebString"** %70 to i8**
  %72 = bitcast %"class.blink::WebVector.13"* %68 to i8**
  %73 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %74 = bitcast %"class.blink::WebString"** %70 to i64*
  %75 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 2
  %76 = bitcast %"class.blink::WebVector.21"* %75 to i64*
  %77 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %78 = bitcast %"struct.blink::WebCSPHashSource"** %77 to i64*
  %79 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %80 = bitcast %"struct.blink::WebCSPHashSource"** %79 to i64*
  %81 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 3
  %82 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 4
  %83 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 5
  %84 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 6
  %85 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 7
  %86 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 8
  %87 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 9
  %88 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 10
  %89 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %4, i64 0, i32 2, i32 11
  %90 = inttoptr i64 %30 to %"struct.blink::WebContentSecurityPolicyDirective"*
  %91 = bitcast %"class.blink::WebVector.13"* %68 to i64*
  %92 = bitcast %"class.blink::WebString"** %73 to i64*
  br label %145

93:                                               ; preds = %372, %382, %379
  %94 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %7, align 8
  br label %95

95:                                               ; preds = %45, %28, %93, %48
  %96 = phi %"class.network::mojom::blink::ContentSecurityPolicy"* [ %94, %93 ], [ %8, %48 ], [ %8, %28 ], [ %8, %45 ]
  %97 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %96, i64 0, i32 1, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i64
  %100 = icmp eq i32 %98, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %96 to i64*
  br label %387

103:                                              ; preds = %95
  %104 = shl nuw nsw i64 %99, 4
  %105 = call i8* @_Znwm(i64 %104) #10
  %106 = bitcast i8* %105 to %"struct.blink::WebContentSecurityPolicyRawDirective"*
  %107 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyRawDirective", %"struct.blink::WebContentSecurityPolicyRawDirective"* %106, i64 %99
  br label %108

108:                                              ; preds = %108, %103
  %109 = phi %"struct.blink::WebContentSecurityPolicyRawDirective"* [ %112, %108 ], [ %106, %103 ]
  %110 = bitcast %"struct.blink::WebContentSecurityPolicyRawDirective"* %109 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 16, i1 false) #11
  %111 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyRawDirective", %"struct.blink::WebContentSecurityPolicyRawDirective"* %109, i64 0, i32 1
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %111) #11
  %112 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyRawDirective", %"struct.blink::WebContentSecurityPolicyRawDirective"* %109, i64 1
  %113 = icmp eq %"struct.blink::WebContentSecurityPolicyRawDirective"* %112, %107
  br i1 %113, label %114, label %108

114:                                              ; preds = %108
  %115 = ptrtoint i8* %105 to i64
  %116 = ptrtoint %"struct.blink::WebContentSecurityPolicyRawDirective"* %107 to i64
  %117 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %7, align 8
  %118 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %117, i64 0, i32 1, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  %121 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %117 to i64*
  %122 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %117, i64 0, i32 1, i32 0, i32 0
  %123 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %122, align 8
  %124 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %117, i64 0, i32 1, i32 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %123, i64 %126
  br i1 %120, label %387, label %128

128:                                              ; preds = %114
  %129 = icmp eq i32 %125, 0
  br i1 %129, label %137, label %130

130:                                              ; preds = %128, %134
  %131 = phi %"struct.WTF::KeyValuePair"* [ %135, %134 ], [ %123, %128 ]
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %131, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  switch i32 %133, label %137 [
    i32 -1000001, label %134
    i32 0, label %134
  ]

134:                                              ; preds = %130, %130
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %131, i64 1
  %136 = icmp eq %"struct.WTF::KeyValuePair"* %135, %127
  br i1 %136, label %387, label %130

137:                                              ; preds = %130, %128
  %138 = phi %"struct.WTF::KeyValuePair"* [ %123, %128 ], [ %131, %130 ]
  %139 = icmp eq %"struct.WTF::KeyValuePair"* %138, %127
  br i1 %139, label %387, label %140

140:                                              ; preds = %137
  %141 = bitcast %"struct.blink::WebContentSecurityPolicyRawDirective"* %5 to i8*
  %142 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyRawDirective", %"struct.blink::WebContentSecurityPolicyRawDirective"* %5, i64 0, i32 0
  %143 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyRawDirective", %"struct.blink::WebContentSecurityPolicyRawDirective"* %5, i64 0, i32 1
  %144 = bitcast i8* %105 to %"struct.blink::WebContentSecurityPolicyRawDirective"*
  br label %575

145:                                              ; preds = %51, %382
  %146 = phi i64 [ 0, %51 ], [ %325, %382 ]
  %147 = phi %"struct.WTF::KeyValuePair.53"* [ %49, %51 ], [ %376, %382 ]
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %52) #11
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 8
  store i32 %149, i32* %53, align 8
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %147, i64 0, i32 1
  %151 = bitcast %"class.mojo::StructPtr.54"* %150 to i64*
  %152 = getelementptr inbounds %"class.mojo::StructPtr.54", %"class.mojo::StructPtr.54"* %150, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %152, align 8
  store i64 0, i64* %151, align 8
  %154 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 0, i32 0, i32 0, i32 2
  %155 = load i32, i32* %154, align 4, !noalias !2
  %156 = zext i32 %155 to i64
  %157 = icmp eq i32 %155, 0
  br i1 %157, label %175, label %158

158:                                              ; preds = %145
  %159 = mul nuw nsw i64 %156, 40
  %160 = call i8* @_Znwm(i64 %159) #10, !noalias !2
  %161 = bitcast i8* %160 to %"struct.blink::WebCSPSource"*
  %162 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %161, i64 %156
  br label %163

163:                                              ; preds = %163, %158
  %164 = phi %"struct.blink::WebCSPSource"* [ %170, %163 ], [ %161, %158 ]
  %165 = bitcast %"struct.blink::WebCSPSource"* %164 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 40, i1 false) #11, !noalias !2
  %166 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %164, i64 0, i32 0
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %166) #11, !noalias !2
  %167 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %164, i64 0, i32 1
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %167) #11, !noalias !2
  %168 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %164, i64 0, i32 2
  store i32 -1, i32* %168, align 8, !noalias !2
  %169 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %164, i64 0, i32 4
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %169) #11, !noalias !2
  %170 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %164, i64 1
  %171 = icmp eq %"struct.blink::WebCSPSource"* %170, %162
  br i1 %171, label %172, label %163

172:                                              ; preds = %163
  %173 = ptrtoint i8* %160 to i64
  %174 = ptrtoint %"struct.blink::WebCSPSource"* %162 to i64
  br label %175

175:                                              ; preds = %172, %145
  %176 = phi i64 [ 0, %145 ], [ %174, %172 ]
  %177 = phi i64 [ 0, %145 ], [ %173, %172 ]
  %178 = sub i64 %176, %177
  %179 = sdiv exact i64 %178, 40
  %180 = icmp eq i64 %178, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %175
  %182 = inttoptr i64 %177 to %"struct.blink::WebCSPSource"*
  %183 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 0
  br label %211

184:                                              ; preds = %241, %175
  %185 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 2, i32 0, i32 0, i32 2
  %186 = load i32, i32* %185, align 4, !noalias !2
  %187 = zext i32 %186 to i64
  %188 = icmp eq i32 %186, 0
  br i1 %188, label %202, label %189

189:                                              ; preds = %184
  %190 = shl nuw nsw i64 %187, 5
  %191 = call i8* @_Znwm(i64 %190) #10, !noalias !2
  %192 = bitcast i8* %191 to %"struct.blink::WebCSPHashSource"*
  %193 = ptrtoint i8* %191 to i64
  %194 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %192, i64 %187
  %195 = ptrtoint %"struct.blink::WebCSPHashSource"* %194 to i64
  %196 = add nsw i64 %187, -1
  %197 = getelementptr %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %192, i64 %196, i32 0
  %198 = ptrtoint i32* %197 to i64
  %199 = sub i64 32, %193
  %200 = add i64 %199, %198
  %201 = and i64 %200, -32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %191, i8 0, i64 %201, i1 false) #11, !noalias !2
  br label %202

202:                                              ; preds = %189, %184
  %203 = phi i64 [ 0, %184 ], [ %193, %189 ]
  %204 = phi i64 [ 0, %184 ], [ %195, %189 ]
  %205 = sub i64 %204, %203
  %206 = ashr exact i64 %205, 5
  %207 = icmp eq i64 %205, 0
  br i1 %207, label %244, label %208

208:                                              ; preds = %202
  %209 = inttoptr i64 %203 to %"struct.blink::WebCSPHashSource"*
  %210 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 2
  br label %265

211:                                              ; preds = %241, %181
  %212 = phi i64 [ 0, %181 ], [ %242, %241 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %55) #11, !noalias !2
  %213 = trunc i64 %212 to i32
  %214 = call dereferenceable(8) %"class.mojo::StructPtr.44"* @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %183, i32 %213) #11, !noalias !2
  %215 = bitcast %"class.mojo::StructPtr.44"* %214 to i64*
  %216 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %214, i64 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %216, align 8, !noalias !2
  store i64 0, i64* %215, align 8, !noalias !2
  %218 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %217, i64 0, i32 0
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %56, %"class.WTF::String"* dereferenceable(8) %218) #11, !noalias !2
  %219 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %217, i64 0, i32 1
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %57, %"class.WTF::String"* dereferenceable(8) %219) #11, !noalias !2
  %220 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %217, i64 0, i32 2
  %221 = load i32, i32* %220, align 8, !noalias !2
  store i32 %221, i32* %58, align 8, !alias.scope !5, !noalias !2
  %222 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %217, i64 0, i32 4
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %59, %"class.WTF::String"* dereferenceable(8) %222) #11, !noalias !2
  %223 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %217, i64 0, i32 5
  %224 = load i8, i8* %223, align 8, !range !8, !noalias !2
  store i8 %224, i8* %60, align 8, !alias.scope !5, !noalias !2
  %225 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %217, i64 0, i32 6
  %226 = load i8, i8* %225, align 1, !range !8, !noalias !2
  store i8 %226, i8* %61, align 1, !alias.scope !5, !noalias !2
  %227 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %182, i64 %212, i32 0
  %228 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* %227, %"class.blink::WebString"* nonnull dereferenceable(8) %56) #11, !noalias !2
  %229 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %182, i64 %212, i32 1
  %230 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* %229, %"class.blink::WebString"* dereferenceable(8) %57) #11, !noalias !2
  %231 = load i32, i32* %58, align 8, !noalias !2
  %232 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %182, i64 %212, i32 2
  store i32 %231, i32* %232, align 8, !noalias !2
  %233 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %182, i64 %212, i32 4
  %234 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* %233, %"class.blink::WebString"* dereferenceable(8) %59) #11, !noalias !2
  %235 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %182, i64 %212, i32 5
  %236 = bitcast i8* %235 to i16*
  %237 = load i16, i16* %62, align 8, !noalias !2
  store i16 %237, i16* %236, align 8, !noalias !2
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %59) #11, !noalias !2
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %57) #11, !noalias !2
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %56) #11, !noalias !2
  %238 = icmp eq %"class.network::mojom::blink::CSPSource"* %217, null
  br i1 %238, label %241, label %239

239:                                              ; preds = %211
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %217) #11, !noalias !2
  %240 = bitcast %"class.network::mojom::blink::CSPSource"* %217 to i8*
  call void @_ZdlPv(i8* %240) #10, !noalias !2
  br label %241

241:                                              ; preds = %239, %211
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %55) #11, !noalias !2
  %242 = add nuw i64 %212, 1
  %243 = icmp ult i64 %242, %179
  br i1 %243, label %211, label %184

244:                                              ; preds = %303, %202
  store i64 %177, i64* %63, align 8, !alias.scope !2
  store i64 %176, i64* %65, align 8, !alias.scope !2
  store i64 %176, i64* %67, align 8, !alias.scope !2
  %245 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 1, i32 0, i32 0, i32 0
  %246 = load %"class.WTF::String"*, %"class.WTF::String"** %245, align 8, !noalias !2
  %247 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 1, i32 0, i32 0, i32 2
  %248 = load i32, i32* %247, align 4, !noalias !2
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %246, i64 %249
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #11, !alias.scope !2
  %251 = icmp eq i32 %248, 0
  br i1 %251, label %306, label %252

252:                                              ; preds = %244
  %253 = shl nuw nsw i64 %249, 3
  %254 = call i8* @_Znwm(i64 %253) #10, !noalias !2
  %255 = bitcast i8* %254 to %"class.blink::WebString"*
  store i8* %254, i8** %71, align 8, !alias.scope !2
  store i8* %254, i8** %72, align 8, !alias.scope !2
  %256 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %255, i64 %249
  store %"class.blink::WebString"* %256, %"class.blink::WebString"** %73, align 8, !alias.scope !2
  br label %257

257:                                              ; preds = %257, %252
  %258 = phi %"class.blink::WebString"* [ %261, %257 ], [ %255, %252 ]
  %259 = phi %"class.WTF::String"* [ %260, %257 ], [ %246, %252 ]
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %258, %"class.WTF::String"* dereferenceable(8) %259) #11, !noalias !2
  %260 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %259, i64 1
  %261 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %258, i64 1
  %262 = icmp eq %"class.WTF::String"* %260, %250
  br i1 %262, label %263, label %257

263:                                              ; preds = %257
  %264 = ptrtoint %"class.blink::WebString"* %261 to i64
  store i64 %264, i64* %74, align 8, !alias.scope !2
  br label %306

265:                                              ; preds = %303, %208
  %266 = phi i64 [ 0, %208 ], [ %304, %303 ]
  %267 = trunc i64 %266 to i32
  %268 = call dereferenceable(8) %"class.mojo::StructPtr.68"* @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.65"* %210, i32 %267) #11, !noalias !2
  %269 = bitcast %"class.mojo::StructPtr.68"* %268 to i64*
  %270 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %268, i64 0, i32 0, i32 0, i32 0, i32 0
  %271 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %270, align 8, !noalias !2
  store i64 0, i64* %269, align 8, !noalias !2
  %272 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %271, i64 0, i32 0
  %273 = load i32, i32* %272, align 8, !noalias !9
  %274 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %271, i64 0, i32 1, i32 0, i32 0, i32 2
  %275 = load i32, i32* %274, align 4, !noalias !9
  %276 = zext i32 %275 to i64
  %277 = icmp eq i32 %275, 0
  br i1 %277, label %285, label %278

278:                                              ; preds = %265
  %279 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %271, i64 0, i32 1, i32 0, i32 0, i32 0
  %280 = load i8*, i8** %279, align 8, !noalias !9
  %281 = call i8* @_Znwm(i64 %276) #10, !noalias !9
  %282 = ptrtoint i8* %281 to i64
  %283 = getelementptr inbounds i8, i8* %281, i64 %276
  %284 = ptrtoint i8* %283 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %281, i8* align 1 %280, i64 %276, i1 false) #11, !noalias !9
  br label %285

285:                                              ; preds = %278, %265
  %286 = phi i64 [ 0, %265 ], [ %284, %278 ]
  %287 = phi i64 [ 0, %265 ], [ %282, %278 ]
  %288 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %209, i64 %266, i32 0
  store i32 %273, i32* %288, align 8, !noalias !2
  %289 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %209, i64 %266, i32 1
  %290 = bitcast %"class.blink::WebVector.24"* %289 to i64*
  %291 = load i64, i64* %290, align 8, !noalias !2
  store i64 %287, i64* %290, align 8, !noalias !2
  %292 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %209, i64 %266, i32 1, i32 0, i32 0, i32 1
  %293 = bitcast i8** %292 to i64*
  store i64 %286, i64* %293, align 8, !noalias !2
  %294 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %209, i64 %266, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %295 = bitcast i8** %294 to i64*
  store i64 %286, i64* %295, align 8, !noalias !2
  %296 = icmp eq i64 %291, 0
  br i1 %296, label %299, label %297

297:                                              ; preds = %285
  %298 = inttoptr i64 %291 to i8*
  call void @_ZdlPv(i8* nonnull %298) #10, !noalias !2
  br label %299

299:                                              ; preds = %297, %285
  %300 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %271, null
  br i1 %300, label %303, label %301

301:                                              ; preds = %299
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %271) #11, !noalias !2
  %302 = bitcast %"class.network::mojom::blink::CSPHashSource"* %271 to i8*
  call void @_ZdlPv(i8* %302) #10, !noalias !2
  br label %303

303:                                              ; preds = %301, %299
  %304 = add nuw i64 %266, 1
  %305 = icmp ult i64 %304, %206
  br i1 %305, label %265, label %244

306:                                              ; preds = %244, %263
  store i64 %203, i64* %76, align 8, !alias.scope !2
  store i64 %204, i64* %78, align 8, !alias.scope !2
  store i64 %204, i64* %80, align 8, !alias.scope !2
  %307 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !8, !noalias !2
  store i8 %308, i8* %81, align 8, !alias.scope !2
  %309 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 4
  %310 = load i8, i8* %309, align 1, !range !8, !noalias !2
  store i8 %310, i8* %82, align 1, !alias.scope !2
  %311 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 5
  %312 = load i8, i8* %311, align 2, !range !8, !noalias !2
  store i8 %312, i8* %83, align 2, !alias.scope !2
  %313 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 6
  %314 = load i8, i8* %313, align 1, !range !8, !noalias !2
  store i8 %314, i8* %84, align 1, !alias.scope !2
  %315 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 7
  %316 = load i8, i8* %315, align 4, !range !8, !noalias !2
  store i8 %316, i8* %85, align 4, !alias.scope !2
  %317 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 8
  %318 = load i8, i8* %317, align 1, !range !8, !noalias !2
  store i8 %318, i8* %86, align 1, !alias.scope !2
  %319 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 9
  %320 = load i8, i8* %319, align 2, !range !8, !noalias !2
  store i8 %320, i8* %87, align 2, !alias.scope !2
  %321 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 10
  %322 = load i8, i8* %321, align 1, !range !8, !noalias !2
  store i8 %322, i8* %88, align 1, !alias.scope !2
  %323 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %153, i64 0, i32 11
  %324 = load i8, i8* %323, align 8, !range !8, !noalias !2
  store i8 %324, i8* %89, align 8, !alias.scope !2
  %325 = add i64 %146, 1
  %326 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146
  %327 = load i32, i32* %53, align 8
  %328 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %326, i64 0, i32 0
  store i32 %327, i32* %328, align 8
  %329 = icmp eq %"struct.blink::WebContentSecurityPolicyDirective"* %326, %4
  br i1 %329, label %367, label %330

330:                                              ; preds = %306
  %331 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146, i32 2
  %332 = bitcast %"struct.blink::WebCSPSourceList"* %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = load i64, i64* %63, align 8
  store i64 %334, i64* %332, align 8
  store i64 %333, i64* %63, align 8
  %335 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146, i32 2, i32 0, i32 0, i32 0, i32 1
  %336 = bitcast %"struct.blink::WebCSPSource"** %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = load i64, i64* %65, align 8
  store i64 %338, i64* %336, align 8
  store i64 %337, i64* %65, align 8
  %339 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146, i32 2, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %340 = bitcast %"struct.blink::WebCSPSource"** %339 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = load i64, i64* %67, align 8
  store i64 %342, i64* %340, align 8
  store i64 %341, i64* %67, align 8
  %343 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146, i32 2, i32 1
  %344 = bitcast %"class.blink::WebVector.13"* %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = load i64, i64* %91, align 8
  store i64 %346, i64* %344, align 8
  store i64 %345, i64* %91, align 8
  %347 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146, i32 2, i32 1, i32 0, i32 0, i32 1
  %348 = bitcast %"class.blink::WebString"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = load i64, i64* %74, align 8
  store i64 %350, i64* %348, align 8
  store i64 %349, i64* %74, align 8
  %351 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146, i32 2, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %352 = bitcast %"class.blink::WebString"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = load i64, i64* %92, align 8
  store i64 %354, i64* %352, align 8
  store i64 %353, i64* %92, align 8
  %355 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146, i32 2, i32 2
  %356 = bitcast %"class.blink::WebVector.21"* %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = load i64, i64* %76, align 8
  store i64 %358, i64* %356, align 8
  store i64 %357, i64* %76, align 8
  %359 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146, i32 2, i32 2, i32 0, i32 0, i32 1
  %360 = bitcast %"struct.blink::WebCSPHashSource"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = load i64, i64* %78, align 8
  store i64 %362, i64* %360, align 8
  store i64 %361, i64* %78, align 8
  %363 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146, i32 2, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %364 = bitcast %"struct.blink::WebCSPHashSource"** %363 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = load i64, i64* %80, align 8
  store i64 %366, i64* %364, align 8
  store i64 %365, i64* %80, align 8
  br label %367

367:                                              ; preds = %306, %330
  %368 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %90, i64 %146, i32 2, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %368, i8* align 8 %81, i64 9, i1 false) #11
  call void @_ZN5blink16WebCSPSourceListD2Ev(%"struct.blink::WebCSPSourceList"* %54) #11
  %369 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %153, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %367
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %153) #11
  %371 = bitcast %"class.network::mojom::blink::CSPSourceList"* %153 to i8*
  call void @_ZdlPv(i8* %371) #10
  br label %372

372:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %52) #11
  %373 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %147, i64 1
  %374 = icmp eq %"struct.WTF::KeyValuePair.53"* %373, %38
  br i1 %374, label %93, label %375

375:                                              ; preds = %372, %379
  %376 = phi %"struct.WTF::KeyValuePair.53"* [ %380, %379 ], [ %373, %372 ]
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %376, i64 0, i32 0
  %378 = load i32, i32* %377, align 4
  switch i32 %378, label %382 [
    i32 -1000001, label %379
    i32 0, label %379
  ]

379:                                              ; preds = %375, %375
  %380 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %376, i64 1
  %381 = icmp eq %"struct.WTF::KeyValuePair.53"* %380, %38
  br i1 %381, label %93, label %375

382:                                              ; preds = %375
  %383 = icmp eq %"struct.WTF::KeyValuePair.53"* %376, %38
  br i1 %383, label %93, label %145

384:                                              ; preds = %575, %595, %592
  %385 = bitcast %"class.mojo::StructPtr"* %1 to i64**
  %386 = load i64*, i64** %385, align 8
  br label %387

387:                                              ; preds = %134, %101, %114, %137, %384
  %388 = phi i64 [ %116, %384 ], [ %116, %137 ], [ 0, %101 ], [ %116, %114 ], [ %116, %134 ]
  %389 = phi i64 [ %115, %384 ], [ %115, %137 ], [ 0, %101 ], [ %115, %114 ], [ %115, %134 ]
  %390 = phi i64* [ %386, %384 ], [ %121, %137 ], [ %102, %101 ], [ %121, %114 ], [ %121, %134 ]
  %391 = bitcast i64* %390 to %"class.network::mojom::blink::CSPSource"**
  %392 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %391, align 8
  store i64 0, i64* %390, align 8
  %393 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 0, i32 0
  %394 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %392, i64 0, i32 0
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %393, %"class.WTF::String"* dereferenceable(8) %394) #11
  %395 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 0, i32 1
  %396 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %392, i64 0, i32 1
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %395, %"class.WTF::String"* dereferenceable(8) %396) #11
  %397 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 0, i32 2
  %398 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %392, i64 0, i32 2
  %399 = load i32, i32* %398, align 8
  store i32 %399, i32* %397, align 8, !alias.scope !12
  %400 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 0, i32 4
  %401 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %392, i64 0, i32 4
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %400, %"class.WTF::String"* dereferenceable(8) %401) #11
  %402 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 0, i32 5
  %403 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %392, i64 0, i32 5
  %404 = load i8, i8* %403, align 8, !range !8
  store i8 %404, i8* %402, align 8, !alias.scope !12
  %405 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 0, i32 6
  %406 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %392, i64 0, i32 6
  %407 = load i8, i8* %406, align 1, !range !8
  store i8 %407, i8* %405, align 1, !alias.scope !12
  %408 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 1
  %409 = bitcast %"class.blink::WebVector"* %408 to i64*
  store i64 %389, i64* %409, align 8
  %410 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %411 = bitcast %"struct.blink::WebContentSecurityPolicyRawDirective"** %410 to i64*
  store i64 %388, i64* %411, align 8
  %412 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %413 = bitcast %"struct.blink::WebContentSecurityPolicyRawDirective"** %412 to i64*
  store i64 %388, i64* %413, align 8
  %414 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 2
  %415 = bitcast %"class.blink::WebVector.2"* %414 to i64*
  store i64 %30, i64* %415, align 8
  %416 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %417 = bitcast %"struct.blink::WebContentSecurityPolicyDirective"** %416 to i64*
  store i64 %31, i64* %417, align 8
  %418 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %419 = bitcast %"struct.blink::WebContentSecurityPolicyDirective"** %418 to i64*
  store i64 %31, i64* %419, align 8
  %420 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 3
  %421 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %7, align 8
  %422 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %421, i64 0, i32 3
  %423 = load i8, i8* %422, align 8, !range !8
  store i8 %423, i8* %420, align 8
  %424 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 4
  %425 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %421, i64 0, i32 4
  %426 = load i8, i8* %425, align 1, !range !8
  store i8 %426, i8* %424, align 1
  %427 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 5
  %428 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %421, i64 0, i32 5
  %429 = load i8, i8* %428, align 2, !range !8
  store i8 %429, i8* %427, align 2
  %430 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 6
  %431 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %421, i64 0, i32 6
  %432 = load i32, i32* %431, align 4
  store i32 %432, i32* %430, align 4
  %433 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %433) #11
  %434 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 0, i32 1
  store i32 0, i32* %434, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %433) #11
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %433) #11
  %435 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %421, i64 0, i32 7, i32 0
  call void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull dereferenceable(16) %433, %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16) %435) #11
  %436 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %421, i64 0, i32 7, i32 1
  %437 = load i32, i32* %434, align 8
  %438 = load i32, i32* %436, align 4
  store i32 %438, i32* %434, align 8
  store i32 %437, i32* %436, align 4
  %439 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 7, i32 0
  %440 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %439, %"class.WTF::String"* nonnull dereferenceable(8) %440) #11
  %441 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 7, i32 1
  %442 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 0, i32 0, i32 1
  %443 = load i32, i32* %442, align 8, !noalias !15
  store i32 %443, i32* %441, align 8, !alias.scope !15
  %444 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 7, i32 2
  %445 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 0, i32 0, i32 2
  %446 = load i32, i32* %445, align 4, !noalias !15
  store i32 %446, i32* %444, align 4, !alias.scope !15
  %447 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 8
  %448 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %7, align 8
  %449 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %448, i64 0, i32 8
  %450 = load i8, i8* %449, align 8, !range !8
  store i8 %450, i8* %447, align 8
  %451 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 9
  %452 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %448, i64 0, i32 9, i32 0, i32 0, i32 0
  %453 = load %"class.WTF::String"*, %"class.WTF::String"** %452, align 8
  %454 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %448, i64 0, i32 9, i32 0, i32 0, i32 2
  %455 = load i32, i32* %454, align 4
  %456 = zext i32 %455 to i64
  %457 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %453, i64 %456
  %458 = bitcast %"class.blink::WebVector.13"* %451 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %458, i8 0, i64 24, i1 false) #11
  %459 = icmp eq i32 %455, 0
  br i1 %459, label %479, label %460

460:                                              ; preds = %387
  %461 = shl nuw nsw i64 %456, 3
  %462 = call i8* @_Znwm(i64 %461) #10
  %463 = bitcast i8* %462 to %"class.blink::WebString"*
  %464 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %465 = bitcast %"class.blink::WebString"** %464 to i8**
  store i8* %462, i8** %465, align 8
  %466 = bitcast %"class.blink::WebVector.13"* %451 to i8**
  store i8* %462, i8** %466, align 8
  %467 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %463, i64 %456
  %468 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::WebString"* %467, %"class.blink::WebString"** %468, align 8
  br label %469

469:                                              ; preds = %469, %460
  %470 = phi %"class.blink::WebString"* [ %473, %469 ], [ %463, %460 ]
  %471 = phi %"class.WTF::String"* [ %472, %469 ], [ %453, %460 ]
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %470, %"class.WTF::String"* dereferenceable(8) %471) #11
  %472 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %471, i64 1
  %473 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %470, i64 1
  %474 = icmp eq %"class.WTF::String"* %472, %457
  br i1 %474, label %475, label %469

475:                                              ; preds = %469
  %476 = bitcast %"class.blink::WebString"** %464 to i64*
  %477 = ptrtoint %"class.blink::WebString"* %473 to i64
  store i64 %477, i64* %476, align 8
  %478 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %7, align 8
  br label %479

479:                                              ; preds = %387, %475
  %480 = phi %"class.network::mojom::blink::ContentSecurityPolicy"* [ %448, %387 ], [ %478, %475 ]
  %481 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 10
  %482 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %480, i64 0, i32 10
  %483 = load i32, i32* %482, align 8
  store i32 %483, i32* %481, align 8
  %484 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 12
  %485 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %480, i64 0, i32 11
  %486 = bitcast %"class.mojo::StructPtr.85"* %485 to i64*
  %487 = getelementptr inbounds %"class.mojo::StructPtr.85", %"class.mojo::StructPtr.85"* %485, i64 0, i32 0, i32 0, i32 0, i32 0
  %488 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %487, align 8
  store i64 0, i64* %486, align 8
  %489 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %488, null
  br i1 %489, label %490, label %494

490:                                              ; preds = %479
  %491 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %484, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %491, align 8, !alias.scope !18
  %492 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %493 = bitcast %union.anon* %492 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %493, i8 0, i64 32, i1 false) #11, !alias.scope !18
  br label %538

494:                                              ; preds = %479
  %495 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %488, i64 0, i32 0, i32 0, i32 0, i32 0
  %496 = load %"class.WTF::String"*, %"class.WTF::String"** %495, align 8, !noalias !18
  %497 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %488, i64 0, i32 0, i32 0, i32 0, i32 2
  %498 = load i32, i32* %497, align 4, !noalias !18
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %496, i64 %499
  %501 = icmp eq i32 %498, 0
  br i1 %501, label %517, label %502

502:                                              ; preds = %494
  %503 = shl nuw nsw i64 %499, 3
  %504 = call i8* @_Znwm(i64 %503) #10, !noalias !18
  %505 = bitcast i8* %504 to %"class.blink::WebString"*
  br label %506

506:                                              ; preds = %506, %502
  %507 = phi %"class.blink::WebString"* [ %510, %506 ], [ %505, %502 ]
  %508 = phi %"class.WTF::String"* [ %509, %506 ], [ %496, %502 ]
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %507, %"class.WTF::String"* dereferenceable(8) %508) #11, !noalias !18
  %509 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %508, i64 1
  %510 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %507, i64 1
  %511 = icmp eq %"class.WTF::String"* %509, %500
  br i1 %511, label %512, label %506

512:                                              ; preds = %506
  %513 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %505, i64 %499
  %514 = ptrtoint i8* %504 to i64
  %515 = ptrtoint %"class.blink::WebString"* %513 to i64
  %516 = ptrtoint %"class.blink::WebString"* %510 to i64
  br label %517

517:                                              ; preds = %512, %494
  %518 = phi i64 [ 0, %494 ], [ %515, %512 ]
  %519 = phi i64 [ 0, %494 ], [ %516, %512 ]
  %520 = phi i64 [ 0, %494 ], [ %514, %512 ]
  %521 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %488, i64 0, i32 1
  %522 = load i8, i8* %521, align 8, !range !8, !noalias !18
  %523 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %488, i64 0, i32 2
  %524 = load i8, i8* %523, align 1, !range !8, !noalias !18
  %525 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %484, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %525, align 8, !alias.scope !18
  %526 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2, i32 0
  %527 = bitcast %"struct.blink::WebCSPTrustedTypes"* %526 to i64*
  store i64 %520, i64* %527, align 8, !alias.scope !18
  %528 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %529 = bitcast %"class.blink::WebString"** %528 to i64*
  store i64 %519, i64* %529, align 8, !alias.scope !18
  %530 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %531 = bitcast %"class.blink::WebString"** %530 to i64*
  store i64 %518, i64* %531, align 8, !alias.scope !18
  %532 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %533 = bitcast i8* %532 to i16*
  %534 = zext i8 %524 to i16
  %535 = shl nuw nsw i16 %534, 8
  %536 = zext i8 %522 to i16
  %537 = or i16 %535, %536
  store i16 %537, i16* %533, align 8, !alias.scope !18
  br label %538

538:                                              ; preds = %490, %517
  %539 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 13
  %540 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %7, align 8
  %541 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %540, i64 0, i32 12, i32 0, i32 0, i32 0
  %542 = load %"class.WTF::String"*, %"class.WTF::String"** %541, align 8
  %543 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %540, i64 0, i32 12, i32 0, i32 0, i32 2
  %544 = load i32, i32* %543, align 4
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %542, i64 %545
  %547 = bitcast %"class.blink::WebVector.13"* %539 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %547, i8 0, i64 24, i1 false) #11
  %548 = icmp eq i32 %544, 0
  br i1 %548, label %567, label %549

549:                                              ; preds = %538
  %550 = shl nuw nsw i64 %545, 3
  %551 = call i8* @_Znwm(i64 %550) #10
  %552 = bitcast i8* %551 to %"class.blink::WebString"*
  %553 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %554 = bitcast %"class.blink::WebString"** %553 to i8**
  store i8* %551, i8** %554, align 8
  %555 = bitcast %"class.blink::WebVector.13"* %539 to i8**
  store i8* %551, i8** %555, align 8
  %556 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %552, i64 %545
  %557 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %0, i64 0, i32 13, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::WebString"* %556, %"class.blink::WebString"** %557, align 8
  br label %558

558:                                              ; preds = %558, %549
  %559 = phi %"class.blink::WebString"* [ %562, %558 ], [ %552, %549 ]
  %560 = phi %"class.WTF::String"* [ %561, %558 ], [ %542, %549 ]
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %559, %"class.WTF::String"* dereferenceable(8) %560) #11
  %561 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %560, i64 1
  %562 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %559, i64 1
  %563 = icmp eq %"class.WTF::String"* %561, %546
  br i1 %563, label %564, label %558

564:                                              ; preds = %558
  %565 = bitcast %"class.blink::WebString"** %553 to i64*
  %566 = ptrtoint %"class.blink::WebString"* %562 to i64
  store i64 %566, i64* %565, align 8
  br label %567

567:                                              ; preds = %538, %564
  br i1 %489, label %570, label %568

568:                                              ; preds = %567
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %488) #11
  %569 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %488 to i8*
  call void @_ZdlPv(i8* %569) #10
  br label %570

570:                                              ; preds = %567, %568
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %433) #11
  %571 = icmp eq %"class.network::mojom::blink::CSPSource"* %392, null
  br i1 %571, label %574, label %572

572:                                              ; preds = %570
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %392) #11
  %573 = bitcast %"class.network::mojom::blink::CSPSource"* %392 to i8*
  call void @_ZdlPv(i8* %573) #10
  br label %574

574:                                              ; preds = %570, %572
  ret void

575:                                              ; preds = %140, %595
  %576 = phi i64 [ 0, %140 ], [ %581, %595 ]
  %577 = phi %"struct.WTF::KeyValuePair"* [ %138, %140 ], [ %589, %595 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #11
  %578 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %577, i64 0, i32 0
  %579 = load i32, i32* %578, align 8
  store i32 %579, i32* %142, align 8
  %580 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %577, i64 0, i32 1
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* %143, %"class.WTF::String"* dereferenceable(8) %580) #11
  %581 = add i64 %576, 1
  %582 = load i32, i32* %142, align 8
  %583 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyRawDirective", %"struct.blink::WebContentSecurityPolicyRawDirective"* %144, i64 %576, i32 0
  store i32 %582, i32* %583, align 8
  %584 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyRawDirective", %"struct.blink::WebContentSecurityPolicyRawDirective"* %144, i64 %576, i32 1
  %585 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* %584, %"class.blink::WebString"* dereferenceable(8) %143) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %143) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #11
  %586 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %577, i64 1
  %587 = icmp eq %"struct.WTF::KeyValuePair"* %586, %127
  br i1 %587, label %384, label %588

588:                                              ; preds = %575, %592
  %589 = phi %"struct.WTF::KeyValuePair"* [ %593, %592 ], [ %586, %575 ]
  %590 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %589, i64 0, i32 0
  %591 = load i32, i32* %590, align 4
  switch i32 %591, label %595 [
    i32 -1000001, label %592
    i32 0, label %592
  ]

592:                                              ; preds = %588, %588
  %593 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %589, i64 1
  %594 = icmp eq %"struct.WTF::KeyValuePair"* %593, %127
  br i1 %594, label %384, label %588

595:                                              ; preds = %588
  %596 = icmp eq %"struct.WTF::KeyValuePair"* %589, %127
  br i1 %596, label %384, label %575
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ConvertToMojoBlinkERKNS_24WebContentSecurityPolicyE(%"class.mojo::StructPtr"* noalias sret, %"struct.blink::WebContentSecurityPolicy"* dereferenceable(216)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::Vector.72", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.mojo::StructPtr.44", align 8
  %6 = alloca %"class.WTF::Vector.65", align 8
  %7 = alloca %"class.mojo::StructPtr.68", align 8
  %8 = alloca %"class.WTF::Vector.60", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::HashMap", align 8
  %11 = alloca %"class.WTF::HashMap.49", align 8
  %12 = alloca %"class.mojo::StructPtr.54", align 8
  %13 = alloca %"class.mojo::StructPtr.44", align 8
  %14 = alloca %"class.mojo::InlinedStructPtr", align 8
  %15 = alloca %"class.WTF::Vector.60", align 8
  %16 = alloca %"class.mojo::StructPtr.85", align 8
  %17 = alloca %"class.WTF::Vector.60", align 8
  %18 = alloca %"class.WTF::Vector.60", align 8
  %19 = bitcast %"class.WTF::HashMap"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %10, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %10, i64 0, i32 0, i32 1
  %22 = bitcast %"class.WTF::HashMap"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 20, i1 false) #11
  %23 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"** %23, align 8
  %25 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %26 = load %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"** %25, align 8
  %27 = icmp eq %"struct.blink::WebContentSecurityPolicyRawDirective"* %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %10, i64 0, i32 0
  br label %69

30:                                               ; preds = %69, %2
  %31 = bitcast %"class.WTF::HashMap.49"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.WTF::HashMap.49", %"class.WTF::HashMap.49"* %11, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::HashMap.49", %"class.WTF::HashMap.49"* %11, i64 0, i32 0, i32 1
  %34 = bitcast %"class.WTF::HashMap.49"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 20, i1 false) #11
  %35 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"** %35, align 8
  %37 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %38 = load %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"** %37, align 8
  %39 = icmp eq %"struct.blink::WebContentSecurityPolicyDirective"* %36, %38
  br i1 %39, label %76, label %40

40:                                               ; preds = %30
  %41 = bitcast %"class.mojo::StructPtr.54"* %12 to i8*
  %42 = bitcast %"class.WTF::Vector"* %4 to i8*
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %46 = bitcast %"class.mojo::StructPtr.44"* %5 to i8*
  %47 = bitcast %"class.mojo::StructPtr.44"* %5 to i64*
  %48 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.WTF::Vector.65"* %6 to i8*
  %50 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %6, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %6, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %6, i64 0, i32 0, i32 0, i32 2
  %53 = bitcast %"class.mojo::StructPtr.68"* %7 to i8*
  %54 = bitcast %"class.WTF::Vector.72"* %3 to i8*
  %55 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %3, i64 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %3, i64 0, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector.72"* %3 to i64*
  %58 = bitcast %"class.mojo::StructPtr.68"* %7 to i64*
  %59 = getelementptr inbounds %"class.WTF::Vector.72", %"class.WTF::Vector.72"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::Vector.60"* %8 to i8*
  %62 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %8, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %8, i64 0, i32 0, i32 0, i32 2
  %64 = bitcast %"class.WTF::Vector.60"* %8 to i8**
  %65 = bitcast %"class.WTF::Vector.65"* %6 to i8**
  %66 = bitcast %"class.WTF::Vector"* %4 to i8**
  %67 = getelementptr inbounds %"class.WTF::HashMap.49", %"class.WTF::HashMap.49"* %11, i64 0, i32 0
  %68 = getelementptr inbounds %"class.mojo::StructPtr.54", %"class.mojo::StructPtr.54"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %123

69:                                               ; preds = %28, %69
  %70 = phi %"struct.blink::WebContentSecurityPolicyRawDirective"* [ %24, %28 ], [ %74, %69 ]
  %71 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyRawDirective", %"struct.blink::WebContentSecurityPolicyRawDirective"* %70, i64 0, i32 0
  %72 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyRawDirective", %"struct.blink::WebContentSecurityPolicyRawDirective"* %70, i64 0, i32 1
  %73 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS3_RKN5blink9WebStringEEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %29, i32* dereferenceable(4) %71, %"class.blink::WebString"* dereferenceable(8) %72) #11
  %74 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyRawDirective", %"struct.blink::WebContentSecurityPolicyRawDirective"* %70, i64 1
  %75 = icmp eq %"struct.blink::WebContentSecurityPolicyRawDirective"* %74, %26
  br i1 %75, label %30, label %69

76:                                               ; preds = %347, %30
  %77 = bitcast %"class.mojo::StructPtr.44"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #11
  %78 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 0, i32 1
  %80 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 0, i32 2
  %81 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 0, i32 4
  %82 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 0, i32 5
  %83 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 0, i32 6
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEC2IJRKN5blink9WebStringESA_RKiSA_RKbSE_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.44"* nonnull %13, %"class.blink::WebString"* dereferenceable(8) %78, %"class.blink::WebString"* dereferenceable(8) %79, i32* dereferenceable(4) %80, %"class.blink::WebString"* dereferenceable(8) %81, i8* dereferenceable(1) %82, i8* dereferenceable(1) %83) #11
  %84 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 3
  %85 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 4
  %86 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 5
  %87 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 6
  %88 = bitcast %"class.mojo::InlinedStructPtr"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #11
  %89 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 7, i32 0
  %90 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 7, i32 1
  %91 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 7, i32 2
  %92 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %14, i64 0, i32 0
  %93 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11, !noalias !21
  %94 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %89) #11, !noalias !21
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %95, align 8, !noalias !21
  %96 = load i32, i32* %90, align 4, !noalias !21
  %97 = load i32, i32* %91, align 4, !noalias !21
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %92, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 %96, i32 %97) #11
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8, !noalias !21
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %76
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %76, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11, !noalias !21
  %114 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %14, i64 0, i32 1
  store i32 1, i32* %114, align 8, !alias.scope !21
  %115 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 8
  %116 = bitcast %"class.WTF::Vector.60"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #11
  %117 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 9
  call fastcc void @_ZN5blink12_GLOBAL__N_112ConvertToWTFERKNS_9WebVectorINS_9WebStringEEE(%"class.WTF::Vector.60"* nonnull sret %15, %"class.blink::WebVector.13"* dereferenceable(24) %117)
  %118 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 10
  %119 = bitcast %"class.mojo::StructPtr.85"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #11
  %120 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %121 = load i8, i8* %120, align 8, !range !8
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %443, label %350

123:                                              ; preds = %40, %347
  %124 = phi %"struct.blink::WebContentSecurityPolicyDirective"* [ %36, %40 ], [ %348, %347 ]
  %125 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #11, !noalias !24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 16, i1 false) #11, !noalias !24
  %126 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %127 = load %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"** %126, align 8, !noalias !24
  %128 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %129 = load %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"** %128, align 8, !noalias !24
  %130 = icmp eq %"struct.blink::WebCSPSource"* %127, %129
  br i1 %130, label %131, label %137

131:                                              ; preds = %162, %123
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #11, !noalias !24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 16, i1 false) #11, !noalias !24
  %132 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %133 = load %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"** %132, align 8, !noalias !24
  %134 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %135 = load %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"** %134, align 8, !noalias !24
  %136 = icmp eq %"struct.blink::WebCSPHashSource"* %133, %135
  br i1 %136, label %165, label %258

137:                                              ; preds = %123, %162
  %138 = phi %"struct.blink::WebCSPSource"* [ %163, %162 ], [ %127, %123 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11, !noalias !24
  %139 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %138, i64 0, i32 0
  %140 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %138, i64 0, i32 1
  %141 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %138, i64 0, i32 2
  %142 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %138, i64 0, i32 4
  %143 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %138, i64 0, i32 5
  %144 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %138, i64 0, i32 6
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEC2IJRKN5blink9WebStringESA_RKiSA_RKbSE_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.44"* nonnull %5, %"class.blink::WebString"* dereferenceable(8) %139, %"class.blink::WebString"* dereferenceable(8) %140, i32* dereferenceable(4) %141, %"class.blink::WebString"* dereferenceable(8) %142, i8* dereferenceable(1) %143, i8* dereferenceable(1) %144) #11
  %145 = load i32, i32* %45, align 4, !noalias !24
  %146 = load i32, i32* %44, align 8, !noalias !24
  %147 = icmp eq i32 %145, %146
  br i1 %147, label %157, label %148, !prof !27

148:                                              ; preds = %137
  %149 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %43, align 8, !noalias !24
  %150 = zext i32 %145 to i64
  %151 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %149, i64 %150
  %152 = bitcast %"class.mojo::StructPtr.44"* %151 to i64*
  %153 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %151, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %153, align 8
  %154 = load i64, i64* %47, align 8, !noalias !24
  store i64 %154, i64* %152, align 8
  %155 = load i32, i32* %45, align 4, !noalias !24
  %156 = add i32 %155, 1
  store i32 %156, i32* %45, align 4, !noalias !24
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %48, align 8, !noalias !24
  br label %162

157:                                              ; preds = %137
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"* nonnull %4, %"class.mojo::StructPtr.44"* nonnull dereferenceable(8) %5) #11
  %158 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %48, align 8, !noalias !24
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %48, align 8, !noalias !24
  %159 = icmp eq %"class.network::mojom::blink::CSPSource"* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = bitcast %"class.network::mojom::blink::CSPSource"* %158 to i8*
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %158) #11
  call void @_ZdlPv(i8* %161) #10
  br label %162

162:                                              ; preds = %160, %157, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11, !noalias !24
  %163 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %138, i64 1
  %164 = icmp eq %"struct.blink::WebCSPSource"* %163, %129
  br i1 %164, label %131, label %137

165:                                              ; preds = %338, %131
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #11, !noalias !24
  %166 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 1
  call fastcc void @_ZN5blink12_GLOBAL__N_112ConvertToWTFERKNS_9WebVectorINS_9WebStringEEE(%"class.WTF::Vector.60"* nonnull sret %8, %"class.blink::WebVector.13"* dereferenceable(24) %166) #11, !noalias !24
  %167 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 3
  %168 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 4
  %169 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 5
  %170 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 6
  %171 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 7
  %172 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 8
  %173 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 9
  %174 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 10
  %175 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 0, i32 2, i32 11
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EERKbSJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.54"* nonnull %12, %"class.WTF::Vector"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.60"* nonnull dereferenceable(16) %8, %"class.WTF::Vector.65"* nonnull dereferenceable(16) %6, i8* dereferenceable(1) %167, i8* dereferenceable(1) %168, i8* dereferenceable(1) %169, i8* dereferenceable(1) %170, i8* dereferenceable(1) %171, i8* dereferenceable(1) %172, i8* dereferenceable(1) %173, i8* dereferenceable(1) %174, i8* dereferenceable(1) %175) #11
  %176 = load %"class.WTF::String"*, %"class.WTF::String"** %62, align 8, !noalias !24
  %177 = icmp eq %"class.WTF::String"* %176, null
  br i1 %177, label %210, label %178, !prof !28

178:                                              ; preds = %165
  %179 = bitcast %"class.WTF::String"* %176 to i8*
  %180 = load i32, i32* %63, align 4, !noalias !24
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %208, label %182, !prof !27

182:                                              ; preds = %178
  %183 = zext i32 %180 to i64
  %184 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %183
  br label %185

185:                                              ; preds = %203, %182
  %186 = phi %"class.WTF::String"* [ %204, %203 ], [ %176, %182 ]
  %187 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #11
  br label %203

203:                                              ; preds = %202, %199, %185
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %186, i64 1
  %205 = icmp eq %"class.WTF::String"* %204, %184
  br i1 %205, label %206, label %185

206:                                              ; preds = %203
  store i32 0, i32* %63, align 4, !noalias !24
  %207 = load i8*, i8** %64, align 8, !noalias !24
  br label %208

208:                                              ; preds = %206, %178
  %209 = phi i8* [ %207, %206 ], [ %179, %178 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %209) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %62, align 8, !noalias !24
  br label %210

210:                                              ; preds = %208, %165
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #11, !noalias !24
  %211 = load %"class.mojo::StructPtr.68"*, %"class.mojo::StructPtr.68"** %50, align 8, !noalias !24
  %212 = icmp eq %"class.mojo::StructPtr.68"* %211, null
  br i1 %212, label %234, label %213, !prof !28

213:                                              ; preds = %210
  %214 = bitcast %"class.mojo::StructPtr.68"* %211 to i8*
  %215 = load i32, i32* %52, align 4, !noalias !24
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %232, label %217, !prof !27

217:                                              ; preds = %213
  %218 = zext i32 %215 to i64
  %219 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %211, i64 %218
  br label %220

220:                                              ; preds = %227, %217
  %221 = phi %"class.mojo::StructPtr.68"* [ %228, %227 ], [ %211, %217 ]
  %222 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %221, i64 0, i32 0, i32 0, i32 0, i32 0
  %223 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %222, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %222, align 8
  %224 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %223, null
  br i1 %224, label %227, label %225

225:                                              ; preds = %220
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %223) #11
  %226 = bitcast %"class.network::mojom::blink::CSPHashSource"* %223 to i8*
  call void @_ZdlPv(i8* %226) #10
  br label %227

227:                                              ; preds = %225, %220
  %228 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %221, i64 1
  %229 = icmp eq %"class.mojo::StructPtr.68"* %228, %219
  br i1 %229, label %230, label %220

230:                                              ; preds = %227
  store i32 0, i32* %52, align 4, !noalias !24
  %231 = load i8*, i8** %65, align 8, !noalias !24
  br label %232

232:                                              ; preds = %230, %213
  %233 = phi i8* [ %231, %230 ], [ %214, %213 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %233) #11
  store %"class.mojo::StructPtr.68"* null, %"class.mojo::StructPtr.68"** %50, align 8, !noalias !24
  br label %234

234:                                              ; preds = %232, %210
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #11, !noalias !24
  %235 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %43, align 8, !noalias !24
  %236 = icmp eq %"class.mojo::StructPtr.44"* %235, null
  br i1 %236, label %341, label %237, !prof !28

237:                                              ; preds = %234
  %238 = bitcast %"class.mojo::StructPtr.44"* %235 to i8*
  %239 = load i32, i32* %45, align 4, !noalias !24
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %256, label %241, !prof !27

241:                                              ; preds = %237
  %242 = zext i32 %239 to i64
  %243 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %235, i64 %242
  br label %244

244:                                              ; preds = %251, %241
  %245 = phi %"class.mojo::StructPtr.44"* [ %252, %251 ], [ %235, %241 ]
  %246 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %245, i64 0, i32 0, i32 0, i32 0, i32 0
  %247 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %246, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %246, align 8
  %248 = icmp eq %"class.network::mojom::blink::CSPSource"* %247, null
  br i1 %248, label %251, label %249

249:                                              ; preds = %244
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %247) #11
  %250 = bitcast %"class.network::mojom::blink::CSPSource"* %247 to i8*
  call void @_ZdlPv(i8* %250) #10
  br label %251

251:                                              ; preds = %249, %244
  %252 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %245, i64 1
  %253 = icmp eq %"class.mojo::StructPtr.44"* %252, %243
  br i1 %253, label %254, label %244

254:                                              ; preds = %251
  store i32 0, i32* %45, align 4, !noalias !24
  %255 = load i8*, i8** %66, align 8, !noalias !24
  br label %256

256:                                              ; preds = %254, %237
  %257 = phi i8* [ %255, %254 ], [ %238, %237 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %257) #11
  store %"class.mojo::StructPtr.44"* null, %"class.mojo::StructPtr.44"** %43, align 8, !noalias !24
  br label %341

258:                                              ; preds = %131, %338
  %259 = phi %"struct.blink::WebCSPHashSource"* [ %339, %338 ], [ %133, %131 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11, !noalias !24
  %260 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %259, i64 0, i32 1, i32 0, i32 0, i32 0
  %261 = load i8*, i8** %260, align 8, !noalias !29
  %262 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %259, i64 0, i32 1, i32 0, i32 0, i32 1
  %263 = load i8*, i8** %262, align 8, !noalias !29
  %264 = icmp eq i8* %261, %263
  br i1 %264, label %265, label %281

265:                                              ; preds = %312, %258
  %266 = phi i64 [ 0, %258 ], [ %313, %312 ]
  %267 = phi i32 [ 0, %258 ], [ %314, %312 ]
  %268 = phi i32 [ 0, %258 ], [ %288, %312 ]
  %269 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %259, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #11, !noalias !32
  %270 = call i8* @_Znwm(i64 24) #10, !noalias !35
  %271 = bitcast i8* %270 to %"class.network::mojom::blink::CSPHashSource"*
  %272 = load i32, i32* %269, align 4, !noalias !35
  store atomic i64 %266, i64* %57 monotonic, align 8, !noalias !32
  store i32 %267, i32* %55, align 8, !noalias !32
  store i32 %268, i32* %56, align 4, !noalias !32
  call void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"* nonnull %271, i32 %272, %"class.WTF::Vector.72"* nonnull %3) #11, !noalias !35
  %273 = ptrtoint i8* %270 to i64
  store i64 %273, i64* %58, align 8, !alias.scope !35, !noalias !24
  %274 = load i8*, i8** %59, align 8, !noalias !32
  %275 = icmp eq i8* %274, null
  br i1 %275, label %320, label %276, !prof !28

276:                                              ; preds = %265
  %277 = load i32, i32* %56, align 4, !noalias !32
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %280, label %279, !prof !27

279:                                              ; preds = %276
  store i32 0, i32* %56, align 4, !noalias !32
  br label %280

280:                                              ; preds = %279, %276
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %274) #11, !noalias !35
  store i8* null, i8** %59, align 8, !noalias !32
  br label %320

281:                                              ; preds = %258, %312
  %282 = phi i8* [ %318, %312 ], [ %261, %258 ]
  %283 = phi i32 [ %288, %312 ], [ 0, %258 ]
  %284 = phi i32 [ %314, %312 ], [ 0, %258 ]
  %285 = phi i64 [ %313, %312 ], [ 0, %258 ]
  %286 = load i8, i8* %282, align 1, !noalias !29
  %287 = icmp eq i32 %283, %284
  %288 = add i32 %283, 1
  br i1 %287, label %289, label %312, !prof !27

289:                                              ; preds = %281
  %290 = lshr i32 %283, 2
  %291 = add i32 %288, %290
  %292 = icmp ugt i32 %291, 4
  %293 = select i1 %292, i32 %291, i32 4
  %294 = icmp ugt i32 %293, %288
  %295 = select i1 %294, i32 %293, i32 %288
  %296 = icmp ult i32 %283, %295
  br i1 %296, label %297, label %312, !prof !28

297:                                              ; preds = %289
  %298 = inttoptr i64 %285 to i8*
  %299 = icmp eq i64 %285, 0
  %300 = zext i32 %295 to i64
  %301 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %300) #11, !noalias !29
  %302 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %301, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11, !noalias !29
  %303 = ptrtoint i8* %302 to i64
  br i1 %299, label %304, label %306

304:                                              ; preds = %297
  %305 = trunc i64 %301 to i32
  br label %312

306:                                              ; preds = %297
  %307 = icmp eq i8* %302, null
  br i1 %307, label %310, label %308, !prof !27

308:                                              ; preds = %306
  %309 = zext i32 %283 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %302, i8* nonnull align 1 %298, i64 %309, i1 false) #11, !noalias !29
  br label %310

310:                                              ; preds = %308, %306
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %298) #11, !noalias !29
  %311 = trunc i64 %301 to i32
  br label %312

312:                                              ; preds = %310, %304, %289, %281
  %313 = phi i64 [ %285, %289 ], [ %303, %304 ], [ %303, %310 ], [ %285, %281 ]
  %314 = phi i32 [ %283, %289 ], [ %305, %304 ], [ %311, %310 ], [ %284, %281 ]
  %315 = inttoptr i64 %313 to i8*
  %316 = zext i32 %283 to i64
  %317 = getelementptr inbounds i8, i8* %315, i64 %316
  store i8 %286, i8* %317, align 1, !noalias !29
  %318 = getelementptr inbounds i8, i8* %282, i64 1
  %319 = icmp eq i8* %318, %263
  br i1 %319, label %265, label %281

320:                                              ; preds = %280, %265
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #11, !noalias !32
  %321 = load i32, i32* %52, align 4, !noalias !24
  %322 = load i32, i32* %51, align 8, !noalias !24
  %323 = icmp eq i32 %321, %322
  br i1 %323, label %333, label %324, !prof !27

324:                                              ; preds = %320
  %325 = load %"class.mojo::StructPtr.68"*, %"class.mojo::StructPtr.68"** %50, align 8, !noalias !24
  %326 = zext i32 %321 to i64
  %327 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %325, i64 %326
  %328 = bitcast %"class.mojo::StructPtr.68"* %327 to i64*
  %329 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %327, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %329, align 8
  %330 = load i64, i64* %58, align 8, !noalias !24
  store i64 %330, i64* %328, align 8
  %331 = load i32, i32* %52, align 4, !noalias !24
  %332 = add i32 %331, 1
  store i32 %332, i32* %52, align 4, !noalias !24
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %60, align 8, !noalias !24
  br label %338

333:                                              ; preds = %320
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.65"* nonnull %6, %"class.mojo::StructPtr.68"* nonnull dereferenceable(8) %7) #11
  %334 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %60, align 8, !noalias !24
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %60, align 8, !noalias !24
  %335 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %334, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %333
  %337 = bitcast %"class.network::mojom::blink::CSPHashSource"* %334 to i8*
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %334) #11
  call void @_ZdlPv(i8* %337) #10
  br label %338

338:                                              ; preds = %336, %333, %324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11, !noalias !24
  %339 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %259, i64 1
  %340 = icmp eq %"struct.blink::WebCSPHashSource"* %339, %135
  br i1 %340, label %165, label %258

341:                                              ; preds = %234, %256
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #11, !noalias !24
  %342 = call { %"struct.WTF::KeyValuePair.53"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.50"* nonnull %67, i32* dereferenceable(4) %125, %"class.mojo::StructPtr.54"* nonnull dereferenceable(8) %12) #11
  %343 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %68, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %68, align 8
  %344 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %341
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %343) #11
  %346 = bitcast %"class.network::mojom::blink::CSPSourceList"* %343 to i8*
  call void @_ZdlPv(i8* %346) #10
  br label %347

347:                                              ; preds = %341, %345
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  %348 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicyDirective", %"struct.blink::WebContentSecurityPolicyDirective"* %124, i64 1
  %349 = icmp eq %"struct.blink::WebContentSecurityPolicyDirective"* %348, %38
  br i1 %349, label %76, label %123

350:                                              ; preds = %113
  %351 = bitcast %"class.WTF::Vector.60"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %351) #11
  %352 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call fastcc void @_ZN5blink12_GLOBAL__N_112ConvertToWTFERKNS_9WebVectorINS_9WebStringEEE(%"class.WTF::Vector.60"* nonnull sret %17, %"class.blink::WebVector.13"* dereferenceable(24) %352)
  %353 = load i8, i8* %120, align 8, !range !8
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %355, label %356, !prof !27

355:                                              ; preds = %350
  call void @llvm.trap() #11
  unreachable

356:                                              ; preds = %350
  %357 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %358 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEERKbSD_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.85"* nonnull %16, %"class.WTF::Vector.60"* nonnull dereferenceable(16) %17, i8* dereferenceable(1) %357, i8* dereferenceable(1) %358) #11
  %359 = bitcast %"class.WTF::Vector.60"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %359) #11
  %360 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 13
  call fastcc void @_ZN5blink12_GLOBAL__N_112ConvertToWTFERKNS_9WebVectorINS_9WebStringEEE(%"class.WTF::Vector.60"* nonnull sret %18, %"class.blink::WebVector.13"* dereferenceable(24) %360)
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EERKbSP_SP_RKNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEESP_NS9_6VectorISC_Lj0ESI_EERKNS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEESX_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr"* %0, %"class.mojo::StructPtr.44"* nonnull dereferenceable(8) %13, %"class.WTF::HashMap"* nonnull dereferenceable(24) %10, %"class.WTF::HashMap.49"* nonnull dereferenceable(24) %11, i8* dereferenceable(1) %84, i8* dereferenceable(1) %85, i8* dereferenceable(1) %86, i32* dereferenceable(4) %87, %"class.mojo::InlinedStructPtr"* nonnull dereferenceable(24) %14, i8* dereferenceable(1) %115, %"class.WTF::Vector.60"* nonnull dereferenceable(16) %15, i32* dereferenceable(4) %118, %"class.mojo::StructPtr.85"* nonnull dereferenceable(8) %16, %"class.WTF::Vector.60"* nonnull dereferenceable(16) %18) #11
  %361 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %18, i64 0, i32 0, i32 0, i32 0
  %362 = load %"class.WTF::String"*, %"class.WTF::String"** %361, align 8
  %363 = icmp eq %"class.WTF::String"* %362, null
  br i1 %363, label %398, label %364, !prof !28

364:                                              ; preds = %356
  %365 = bitcast %"class.WTF::String"* %362 to i8*
  %366 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %18, i64 0, i32 0, i32 0, i32 2
  %367 = load i32, i32* %366, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %396, label %369, !prof !27

369:                                              ; preds = %364
  %370 = zext i32 %367 to i64
  %371 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %362, i64 %370
  br label %372

372:                                              ; preds = %390, %369
  %373 = phi %"class.WTF::String"* [ %391, %390 ], [ %362, %369 ]
  %374 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %373, i64 0, i32 0, i32 0
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %374, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %390, label %377

377:                                              ; preds = %372
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #11
  br label %390

390:                                              ; preds = %389, %386, %372
  %391 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %373, i64 1
  %392 = icmp eq %"class.WTF::String"* %391, %371
  br i1 %392, label %393, label %372

393:                                              ; preds = %390
  store i32 0, i32* %366, align 4
  %394 = bitcast %"class.WTF::Vector.60"* %18 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %364
  %397 = phi i8* [ %395, %393 ], [ %365, %364 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %361, align 8
  br label %398

398:                                              ; preds = %356, %396
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %359) #11
  %399 = getelementptr inbounds %"class.mojo::StructPtr.85", %"class.mojo::StructPtr.85"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %400 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %399, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %399, align 8
  %401 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %400, null
  br i1 %401, label %404, label %402

402:                                              ; preds = %398
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %400) #11
  %403 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %400 to i8*
  call void @_ZdlPv(i8* %403) #10
  br label %404

404:                                              ; preds = %398, %402
  %405 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %17, i64 0, i32 0, i32 0, i32 0
  %406 = load %"class.WTF::String"*, %"class.WTF::String"** %405, align 8
  %407 = icmp eq %"class.WTF::String"* %406, null
  br i1 %407, label %442, label %408, !prof !28

408:                                              ; preds = %404
  %409 = bitcast %"class.WTF::String"* %406 to i8*
  %410 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %17, i64 0, i32 0, i32 0, i32 2
  %411 = load i32, i32* %410, align 4
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %440, label %413, !prof !27

413:                                              ; preds = %408
  %414 = zext i32 %411 to i64
  %415 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %406, i64 %414
  br label %416

416:                                              ; preds = %434, %413
  %417 = phi %"class.WTF::String"* [ %435, %434 ], [ %406, %413 ]
  %418 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %417, i64 0, i32 0, i32 0
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %419, null
  br i1 %420, label %434, label %421

421:                                              ; preds = %416
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 0
  %427 = load i32, i32* %426, align 4
  br i1 %425, label %428, label %430

428:                                              ; preds = %421
  %429 = add i32 %427, -1
  store i32 %429, i32* %426, align 4
  br label %430

430:                                              ; preds = %428, %421
  %431 = phi i32 [ %429, %428 ], [ %427, %421 ]
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %434

433:                                              ; preds = %430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %419) #11
  br label %434

434:                                              ; preds = %433, %430, %416
  %435 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %417, i64 1
  %436 = icmp eq %"class.WTF::String"* %435, %415
  br i1 %436, label %437, label %416

437:                                              ; preds = %434
  store i32 0, i32* %410, align 4
  %438 = bitcast %"class.WTF::Vector.60"* %17 to i8**
  %439 = load i8*, i8** %438, align 8
  br label %440

440:                                              ; preds = %437, %408
  %441 = phi i8* [ %439, %437 ], [ %409, %408 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %441) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %405, align 8
  br label %442

442:                                              ; preds = %404, %440
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %351) #11
  br label %490

443:                                              ; preds = %113
  %444 = bitcast %"class.mojo::StructPtr.85"* %16 to i64*
  store i64 0, i64* %444, align 8
  %445 = bitcast %"class.WTF::Vector.60"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %445) #11
  %446 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %1, i64 0, i32 13
  call fastcc void @_ZN5blink12_GLOBAL__N_112ConvertToWTFERKNS_9WebVectorINS_9WebStringEEE(%"class.WTF::Vector.60"* nonnull sret %18, %"class.blink::WebVector.13"* dereferenceable(24) %446)
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EERKbSP_SP_RKNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEESP_NS9_6VectorISC_Lj0ESI_EERKNS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEESX_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr"* %0, %"class.mojo::StructPtr.44"* nonnull dereferenceable(8) %13, %"class.WTF::HashMap"* nonnull dereferenceable(24) %10, %"class.WTF::HashMap.49"* nonnull dereferenceable(24) %11, i8* dereferenceable(1) %84, i8* dereferenceable(1) %85, i8* dereferenceable(1) %86, i32* dereferenceable(4) %87, %"class.mojo::InlinedStructPtr"* nonnull dereferenceable(24) %14, i8* dereferenceable(1) %115, %"class.WTF::Vector.60"* nonnull dereferenceable(16) %15, i32* dereferenceable(4) %118, %"class.mojo::StructPtr.85"* nonnull dereferenceable(8) %16, %"class.WTF::Vector.60"* nonnull dereferenceable(16) %18) #11
  %447 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %18, i64 0, i32 0, i32 0, i32 0
  %448 = load %"class.WTF::String"*, %"class.WTF::String"** %447, align 8
  %449 = icmp eq %"class.WTF::String"* %448, null
  br i1 %449, label %484, label %450, !prof !28

450:                                              ; preds = %443
  %451 = bitcast %"class.WTF::String"* %448 to i8*
  %452 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %18, i64 0, i32 0, i32 0, i32 2
  %453 = load i32, i32* %452, align 4
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %482, label %455, !prof !27

455:                                              ; preds = %450
  %456 = zext i32 %453 to i64
  %457 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %448, i64 %456
  br label %458

458:                                              ; preds = %476, %455
  %459 = phi %"class.WTF::String"* [ %477, %476 ], [ %448, %455 ]
  %460 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %459, i64 0, i32 0, i32 0
  %461 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %460, align 8
  %462 = icmp eq %"class.WTF::StringImpl"* %461, null
  br i1 %462, label %476, label %463

463:                                              ; preds = %458
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %465 = load atomic i32, i32* %464 monotonic, align 4
  %466 = and i32 %465, 2
  %467 = icmp eq i32 %466, 0
  %468 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 0
  %469 = load i32, i32* %468, align 4
  br i1 %467, label %470, label %472

470:                                              ; preds = %463
  %471 = add i32 %469, -1
  store i32 %471, i32* %468, align 4
  br label %472

472:                                              ; preds = %470, %463
  %473 = phi i32 [ %471, %470 ], [ %469, %463 ]
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %476

475:                                              ; preds = %472
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %461) #11
  br label %476

476:                                              ; preds = %475, %472, %458
  %477 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %459, i64 1
  %478 = icmp eq %"class.WTF::String"* %477, %457
  br i1 %478, label %479, label %458

479:                                              ; preds = %476
  store i32 0, i32* %452, align 4
  %480 = bitcast %"class.WTF::Vector.60"* %18 to i8**
  %481 = load i8*, i8** %480, align 8
  br label %482

482:                                              ; preds = %479, %450
  %483 = phi i8* [ %481, %479 ], [ %451, %450 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %483) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %447, align 8
  br label %484

484:                                              ; preds = %443, %482
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %445) #11
  %485 = getelementptr inbounds %"class.mojo::StructPtr.85", %"class.mojo::StructPtr.85"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %486 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %485, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %485, align 8
  %487 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %486, null
  br i1 %487, label %490, label %488

488:                                              ; preds = %484
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %486) #11
  %489 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %486 to i8*
  call void @_ZdlPv(i8* %489) #10
  br label %490

490:                                              ; preds = %488, %484, %442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #11
  %491 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %15, i64 0, i32 0, i32 0, i32 0
  %492 = load %"class.WTF::String"*, %"class.WTF::String"** %491, align 8
  %493 = icmp eq %"class.WTF::String"* %492, null
  br i1 %493, label %528, label %494, !prof !28

494:                                              ; preds = %490
  %495 = bitcast %"class.WTF::String"* %492 to i8*
  %496 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %15, i64 0, i32 0, i32 0, i32 2
  %497 = load i32, i32* %496, align 4
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %526, label %499, !prof !27

499:                                              ; preds = %494
  %500 = zext i32 %497 to i64
  %501 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %492, i64 %500
  br label %502

502:                                              ; preds = %520, %499
  %503 = phi %"class.WTF::String"* [ %521, %520 ], [ %492, %499 ]
  %504 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %503, i64 0, i32 0, i32 0
  %505 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %504, align 8
  %506 = icmp eq %"class.WTF::StringImpl"* %505, null
  br i1 %506, label %520, label %507

507:                                              ; preds = %502
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = load atomic i32, i32* %508 monotonic, align 4
  %510 = and i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %505, i64 0, i32 0
  %513 = load i32, i32* %512, align 4
  br i1 %511, label %514, label %516

514:                                              ; preds = %507
  %515 = add i32 %513, -1
  store i32 %515, i32* %512, align 4
  br label %516

516:                                              ; preds = %514, %507
  %517 = phi i32 [ %515, %514 ], [ %513, %507 ]
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %519, label %520

519:                                              ; preds = %516
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %505) #11
  br label %520

520:                                              ; preds = %519, %516, %502
  %521 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %503, i64 1
  %522 = icmp eq %"class.WTF::String"* %521, %501
  br i1 %522, label %523, label %502

523:                                              ; preds = %520
  store i32 0, i32* %496, align 4
  %524 = bitcast %"class.WTF::Vector.60"* %15 to i8**
  %525 = load i8*, i8** %524, align 8
  br label %526

526:                                              ; preds = %523, %494
  %527 = phi i8* [ %525, %523 ], [ %495, %494 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %527) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %491, align 8
  br label %528

528:                                              ; preds = %490, %526
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #11
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %92) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #11
  %529 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %530 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %529, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %529, align 8
  %531 = icmp eq %"class.network::mojom::blink::CSPSource"* %530, null
  br i1 %531, label %534, label %532

532:                                              ; preds = %528
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %530) #11
  %533 = bitcast %"class.network::mojom::blink::CSPSource"* %530 to i8*
  call void @_ZdlPv(i8* %533) #10
  br label %534

534:                                              ; preds = %528, %532
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #11
  %535 = load %"struct.WTF::KeyValuePair.53"*, %"struct.WTF::KeyValuePair.53"** %32, align 8
  %536 = icmp eq %"struct.WTF::KeyValuePair.53"* %535, null
  br i1 %536, label %558, label %537, !prof !28

537:                                              ; preds = %534
  %538 = load i32, i32* %33, align 8
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %556, label %540

540:                                              ; preds = %537
  %541 = zext i32 %538 to i64
  br label %542

542:                                              ; preds = %553, %540
  %543 = phi i64 [ 0, %540 ], [ %554, %553 ]
  %544 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %535, i64 %543, i32 0
  %545 = load i32, i32* %544, align 4
  %546 = icmp eq i32 %545, -1000001
  br i1 %546, label %553, label %547

547:                                              ; preds = %542
  %548 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %535, i64 %543, i32 1, i32 0, i32 0, i32 0, i32 0
  %549 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %548, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %548, align 8
  %550 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %549, null
  br i1 %550, label %553, label %551

551:                                              ; preds = %547
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %549) #11
  %552 = bitcast %"class.network::mojom::blink::CSPSourceList"* %549 to i8*
  call void @_ZdlPv(i8* %552) #10
  br label %553

553:                                              ; preds = %551, %547, %542
  %554 = add nuw nsw i64 %543, 1
  %555 = icmp eq i64 %554, %541
  br i1 %555, label %556, label %542

556:                                              ; preds = %553, %537
  %557 = bitcast %"struct.WTF::KeyValuePair.53"* %535 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %557) #11
  store %"struct.WTF::KeyValuePair.53"* null, %"struct.WTF::KeyValuePair.53"** %32, align 8
  br label %558

558:                                              ; preds = %534, %556
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  %559 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %20, align 8
  %560 = icmp eq %"struct.WTF::KeyValuePair"* %559, null
  br i1 %560, label %593, label %561, !prof !28

561:                                              ; preds = %558
  %562 = load i32, i32* %21, align 8
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %591, label %564

564:                                              ; preds = %561
  %565 = zext i32 %562 to i64
  br label %566

566:                                              ; preds = %588, %564
  %567 = phi i64 [ 0, %564 ], [ %589, %588 ]
  %568 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %559, i64 %567, i32 0
  %569 = load i32, i32* %568, align 4
  %570 = icmp eq i32 %569, -1000001
  br i1 %570, label %588, label %571

571:                                              ; preds = %566
  %572 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %559, i64 %567, i32 1, i32 0, i32 0
  %573 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %572, align 8
  %574 = icmp eq %"class.WTF::StringImpl"* %573, null
  br i1 %574, label %588, label %575

575:                                              ; preds = %571
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = load atomic i32, i32* %576 monotonic, align 4
  %578 = and i32 %577, 2
  %579 = icmp eq i32 %578, 0
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 0
  %581 = load i32, i32* %580, align 4
  br i1 %579, label %582, label %584

582:                                              ; preds = %575
  %583 = add i32 %581, -1
  store i32 %583, i32* %580, align 4
  br label %584

584:                                              ; preds = %582, %575
  %585 = phi i32 [ %583, %582 ], [ %581, %575 ]
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %588

587:                                              ; preds = %584
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %573) #11
  br label %588

588:                                              ; preds = %587, %584, %571, %566
  %589 = add nuw nsw i64 %567, 1
  %590 = icmp eq i64 %589, %565
  br i1 %590, label %591, label %566

591:                                              ; preds = %588, %561
  %592 = bitcast %"struct.WTF::KeyValuePair"* %559 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %592) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %20, align 8
  br label %593

593:                                              ; preds = %558, %591
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_112ConvertToWTFERKNS_9WebVectorINS_9WebStringEEE(%"class.WTF::Vector.60"* noalias nocapture sret, %"class.blink::WebVector.13"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = bitcast %"class.WTF::Vector.60"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #11
  %6 = getelementptr inbounds %"class.blink::WebVector.13", %"class.blink::WebVector.13"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::WebString"*, %"class.blink::WebString"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WebVector.13", %"class.blink::WebVector.13"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.blink::WebString"*, %"class.blink::WebString"** %8, align 8
  %10 = icmp eq %"class.blink::WebString"* %7, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.WTF::Vector.60"* %0 to i64*
  br label %14

13:                                               ; preds = %52, %2
  ret void

14:                                               ; preds = %11, %52
  %15 = phi i8* [ null, %11 ], [ %53, %52 ]
  %16 = phi i8* [ null, %11 ], [ %54, %52 ]
  %17 = phi %"class.WTF::String"* [ null, %11 ], [ %55, %52 ]
  %18 = phi i32 [ 0, %11 ], [ %56, %52 ]
  %19 = phi i32 [ 0, %11 ], [ %60, %52 ]
  %20 = phi %"class.blink::WebString"* [ %7, %11 ], [ %61, %52 ]
  %21 = icmp eq i32 %19, %18
  br i1 %21, label %22, label %52, !prof !27

22:                                               ; preds = %14
  %23 = add i32 %18, 1
  %24 = lshr i32 %18, 2
  %25 = add i32 %23, %24
  %26 = icmp ugt i32 %25, 4
  %27 = select i1 %26, i32 %25, i32 4
  %28 = icmp ugt i32 %27, %23
  %29 = select i1 %28, i32 %27, i32 %23
  %30 = icmp ult i32 %18, %29
  br i1 %30, label %31, label %52, !prof !28

31:                                               ; preds = %22
  %32 = icmp eq %"class.WTF::String"* %17, null
  %33 = zext i32 %29 to i64
  %34 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %33) #11
  %35 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %32, label %36, label %41

36:                                               ; preds = %31
  %37 = ptrtoint i8* %35 to i64
  store atomic i64 %37, i64* %12 monotonic, align 8
  %38 = lshr i64 %34, 3
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %3, align 8
  %40 = bitcast i8* %35 to %"class.WTF::String"*
  br label %52

41:                                               ; preds = %31
  %42 = lshr i64 %34, 3
  %43 = ptrtoint i8* %35 to i64
  %44 = icmp eq i8* %35, null
  br i1 %44, label %48, label %45, !prof !27

45:                                               ; preds = %41
  %46 = zext i32 %18 to i64
  %47 = shl nuw nsw i64 %46, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %16, i64 %47, i1 false) #11
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi i8* [ %15, %45 ], [ %16, %41 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #11
  store atomic i64 %43, i64* %12 monotonic, align 8
  %50 = trunc i64 %42 to i32
  store i32 %50, i32* %3, align 8
  %51 = bitcast i8* %35 to %"class.WTF::String"*
  br label %52

52:                                               ; preds = %14, %22, %36, %48
  %53 = phi i8* [ %15, %14 ], [ %15, %22 ], [ %35, %36 ], [ %35, %48 ]
  %54 = phi i8* [ %16, %14 ], [ %16, %22 ], [ %35, %36 ], [ %35, %48 ]
  %55 = phi %"class.WTF::String"* [ %17, %14 ], [ %17, %22 ], [ %40, %36 ], [ %51, %48 ]
  %56 = phi i32 [ %18, %14 ], [ %18, %22 ], [ %39, %36 ], [ %50, %48 ]
  %57 = zext i32 %19 to i64
  %58 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %20) #11
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %55, i64 %57, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  %60 = add i32 %19, 1
  store i32 %60, i32* %4, align 4
  %61 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %20, i64 1
  %62 = icmp eq %"class.blink::WebString"* %61, %9
  br i1 %62, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18ConvertToMojoBlinkERKNS_9WebVectorINS_24WebContentSecurityPolicyEEE(%"class.WTF::Vector.108"* noalias sret, %"class.blink::WebVector.100"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.108", %"class.WTF::Vector.108"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.108", %"class.WTF::Vector.108"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.108", %"class.WTF::Vector.108"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.108"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  %8 = getelementptr inbounds %"class.blink::WebVector.100", %"class.blink::WebVector.100"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::WebVector.100", %"class.blink::WebVector.100"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"** %10, align 8
  %12 = icmp eq %"struct.blink::WebContentSecurityPolicy"* %9, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.mojo::StructPtr"* %3 to i8*
  %15 = bitcast %"class.WTF::Vector.108"* %0 to i64*
  %16 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  br label %18

17:                                               ; preds = %43, %2
  ret void

18:                                               ; preds = %13, %43
  %19 = phi %"struct.blink::WebContentSecurityPolicy"* [ %9, %13 ], [ %53, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  call void @_ZN5blink18ConvertToMojoBlinkERKNS_24WebContentSecurityPolicyE(%"class.mojo::StructPtr"* nonnull sret %3, %"struct.blink::WebContentSecurityPolicy"* dereferenceable(216) %19)
  %20 = load i32, i32* %6, align 4
  %21 = load i32, i32* %5, align 8
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %23, label %43, !prof !27

23:                                               ; preds = %18
  %24 = add i32 %20, 1
  %25 = lshr i32 %20, 2
  %26 = add i32 %24, %25
  %27 = icmp ugt i32 %26, 4
  %28 = select i1 %27, i32 %26, i32 4
  %29 = icmp ugt i32 %28, %24
  %30 = select i1 %29, i32 %28, i32 %24
  %31 = icmp ult i32 %20, %30
  br i1 %31, label %32, label %43, !prof !28

32:                                               ; preds = %23
  %33 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %4, align 8
  %34 = icmp eq %"class.mojo::StructPtr"* %33, null
  br i1 %34, label %35, label %42

35:                                               ; preds = %32
  %36 = zext i32 %30 to i64
  %37 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %36) #11
  %38 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #11
  %39 = ptrtoint i8* %38 to i64
  store atomic i64 %39, i64* %15 monotonic, align 8
  %40 = lshr i64 %37, 3
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %5, align 8
  br label %43

42:                                               ; preds = %32
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.108"* %0, i32 %30) #11
  br label %43

43:                                               ; preds = %18, %23, %35, %42
  %44 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %4, align 8
  %45 = load i32, i32* %6, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %44, i64 %46
  %48 = bitcast %"class.mojo::StructPtr"* %47 to i64*
  %49 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %49, align 8
  %50 = load i64, i64* %16, align 8
  store i64 %50, i64* %48, align 8
  %51 = load i32, i32* %6, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %53 = getelementptr inbounds %"struct.blink::WebContentSecurityPolicy", %"struct.blink::WebContentSecurityPolicy"* %19, i64 1
  %54 = icmp eq %"struct.blink::WebContentSecurityPolicy"* %53, %11
  br i1 %54, label %17, label %18
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.mojo::StructPtr.44"* @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %24, i64 %25
  ret %"class.mojo::StructPtr.44"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.mojo::StructPtr.68"* @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.65"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr.68"*, %"class.mojo::StructPtr.68"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %24, i64 %25
  ret %"class.mojo::StructPtr.68"* %26
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16WebCSPSourceListD2Ev(%"struct.blink::WebCSPSourceList"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::WebCSPSourceList", %"struct.blink::WebCSPSourceList"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::WebVector.21", %"class.blink::WebVector.21"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"** %3, align 8
  %5 = icmp eq %"struct.blink::WebCSPHashSource"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.blink::WebCSPHashSource"* %4 to i8*
  %8 = getelementptr inbounds %"struct.blink::WebCSPSourceList", %"struct.blink::WebCSPSourceList"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = load %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"** %8, align 8
  %10 = icmp eq %"struct.blink::WebCSPHashSource"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"struct.blink::WebCSPHashSource"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %12, i64 -1, i32 1, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %11
  %18 = ptrtoint i8* %15 to i64
  %19 = getelementptr inbounds %"struct.blink::WebCSPHashSource", %"struct.blink::WebCSPHashSource"* %12, i64 -1, i32 1, i32 0, i32 0, i32 1
  %20 = bitcast i8** %19 to i64*
  store i64 %18, i64* %20, align 8
  tail call void @_ZdlPv(i8* nonnull %15) #10
  br label %21

21:                                               ; preds = %17, %11
  %22 = icmp eq %"struct.blink::WebCSPHashSource"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::WebVector.21"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"struct.blink::WebCSPHashSource"* %4, %"struct.blink::WebCSPHashSource"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"struct.blink::WebCSPSourceList", %"struct.blink::WebCSPSourceList"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::WebVector.13", %"class.blink::WebVector.13"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::WebString"*, %"class.blink::WebString"** %30, align 8
  %32 = icmp eq %"class.blink::WebString"* %31, null
  br i1 %32, label %47, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::WebString"* %31 to i8*
  %35 = getelementptr inbounds %"struct.blink::WebCSPSourceList", %"struct.blink::WebCSPSourceList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %36 = load %"class.blink::WebString"*, %"class.blink::WebString"** %35, align 8
  %37 = icmp eq %"class.blink::WebString"* %36, %31
  br i1 %37, label %45, label %38

38:                                               ; preds = %33, %38
  %39 = phi %"class.blink::WebString"* [ %40, %38 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %39, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %40) #11
  %41 = icmp eq %"class.blink::WebString"* %40, %31
  br i1 %41, label %42, label %38

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::WebVector.13"* %29 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %33
  %46 = phi i8* [ %44, %42 ], [ %34, %33 ]
  store %"class.blink::WebString"* %31, %"class.blink::WebString"** %35, align 8
  tail call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %28, %45
  %48 = getelementptr inbounds %"struct.blink::WebCSPSourceList", %"struct.blink::WebCSPSourceList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"** %48, align 8
  %50 = icmp eq %"struct.blink::WebCSPSource"* %49, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.blink::WebCSPSource"* %49 to i8*
  %53 = getelementptr inbounds %"struct.blink::WebCSPSourceList", %"struct.blink::WebCSPSourceList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = load %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"** %53, align 8
  %55 = icmp eq %"struct.blink::WebCSPSource"* %54, %49
  br i1 %55, label %66, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"struct.blink::WebCSPSource"* [ %58, %56 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %57, i64 -1
  %59 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %57, i64 -1, i32 4
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %59) #11
  %60 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %57, i64 -1, i32 1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %60) #11
  %61 = getelementptr inbounds %"struct.blink::WebCSPSource", %"struct.blink::WebCSPSource"* %58, i64 0, i32 0
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %61) #11
  %62 = icmp eq %"struct.blink::WebCSPSource"* %58, %49
  br i1 %62, label %63, label %56

63:                                               ; preds = %56
  %64 = bitcast %"struct.blink::WebCSPSourceList"* %0 to i8**
  %65 = load i8*, i8** %64, align 8
  br label %66

66:                                               ; preds = %63, %51
  %67 = phi i8* [ %65, %63 ], [ %52, %51 ]
  store %"struct.blink::WebCSPSource"* %49, %"struct.blink::WebCSPSource"** %53, align 8
  tail call void @_ZdlPv(i8* %67) #10
  br label %68

68:                                               ; preds = %47, %66
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"*, %"class.mojo::StructPtr.44"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.44"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.44"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !28

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.44"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.44"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %22) #11
  %36 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.44"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.44"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !28

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.44"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.44"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %50) #11
  %64 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.44"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.44"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.44"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.44"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.44"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.44"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.44"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.44"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.44"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.44"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !36

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.44"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.44"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.44"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.44"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.44"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.44"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.44"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.44"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.44"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.44"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.44"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.44"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.44"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #11
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %73) #11
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #11
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.44"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.44"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.44"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.44"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.44"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.44"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !38

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.44"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.44"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.44"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.44"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.44"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.44"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.44"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.44"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.44"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.44"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.44"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.44"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.44"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #11
  %149 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.65"*, %"class.mojo::StructPtr.68"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.68"*, %"class.mojo::StructPtr.68"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.68"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.68"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !28

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.68"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.65"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.68"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.65"* %0, i32 %22) #11
  %36 = load %"class.mojo::StructPtr.68"*, %"class.mojo::StructPtr.68"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.68"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.68"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !28

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.68"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.65"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.68"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.65"* %0, i32 %50) #11
  %64 = load %"class.mojo::StructPtr.68"*, %"class.mojo::StructPtr.68"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.68"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.68"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.68"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.68"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.68"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.65"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.68"*, %"class.mojo::StructPtr.68"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.68"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.65"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.68"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.68"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.68"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.68"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !39

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.68"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.68"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.68"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.68"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.68"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.68"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.68"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.68"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.68"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.68"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.68"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.68"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.68"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #11
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %73) #11
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #11
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.68"*, %"class.mojo::StructPtr.68"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.68"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.68"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.68"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.68"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.68"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.68"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !40

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.68"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.68"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.68"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.68"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.68"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.68"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.68"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.68"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.68"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.68"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.68"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.68"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.68"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.65"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #11
  %149 = bitcast %"class.WTF::Vector.65"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

declare void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"*, i32, %"class.WTF::Vector.72"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EERKbSJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.54"*, %"class.WTF::Vector"* dereferenceable(16), %"class.WTF::Vector.60"* dereferenceable(16), %"class.WTF::Vector.65"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %14 = alloca %"class.WTF::Vector", align 8
  %15 = alloca %"class.WTF::Vector.60", align 8
  %16 = alloca %"class.WTF::Vector.65", align 8
  %17 = tail call i8* @_Znwm(i64 64) #10
  %18 = bitcast i8* %17 to %"class.network::mojom::blink::CSPSourceList"*
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %14, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %14, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.WTF::Vector"* %1 to i64*
  %22 = bitcast %"class.WTF::Vector"* %14 to i64*
  store i64 0, i64* %22, align 8
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.WTF::Vector"* %14 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %19, align 8
  store i32 0, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %20, align 4
  store i32 0, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %15, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %15, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::Vector.60"* %2 to i64*
  %32 = bitcast %"class.WTF::Vector.60"* %15 to i64*
  store i64 0, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.WTF::Vector.60"* %15 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %2, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %29, align 8
  store i32 0, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %2, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %30, align 4
  store i32 0, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %16, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %16, i64 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.WTF::Vector.65"* %3 to i64*
  %42 = bitcast %"class.WTF::Vector.65"* %16 to i64*
  store i64 0, i64* %42, align 8
  %43 = load i64, i64* %41, align 8
  %44 = bitcast %"class.WTF::Vector.65"* %16 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %3, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %39, align 8
  store i32 0, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %3, i64 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %40, align 4
  store i32 0, i32* %47, align 4
  %49 = load i8, i8* %4, align 1, !range !8
  %50 = icmp ne i8 %49, 0
  %51 = load i8, i8* %5, align 1, !range !8
  %52 = icmp ne i8 %51, 0
  %53 = load i8, i8* %6, align 1, !range !8
  %54 = icmp ne i8 %53, 0
  %55 = load i8, i8* %7, align 1, !range !8
  %56 = icmp ne i8 %55, 0
  %57 = load i8, i8* %8, align 1, !range !8
  %58 = icmp ne i8 %57, 0
  %59 = load i8, i8* %9, align 1, !range !8
  %60 = icmp ne i8 %59, 0
  %61 = load i8, i8* %10, align 1, !range !8
  %62 = icmp ne i8 %61, 0
  %63 = load i8, i8* %11, align 1, !range !8
  %64 = icmp ne i8 %63, 0
  %65 = load i8, i8* %12, align 1, !range !8
  %66 = icmp ne i8 %65, 0
  call void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"* nonnull %18, %"class.WTF::Vector"* nonnull %14, %"class.WTF::Vector.60"* nonnull %15, %"class.WTF::Vector.65"* nonnull %16, i1 zeroext %50, i1 zeroext %52, i1 zeroext %54, i1 zeroext %56, i1 zeroext %58, i1 zeroext %60, i1 zeroext %62, i1 zeroext %64, i1 zeroext %66) #11
  %67 = ptrtoint i8* %17 to i64
  %68 = bitcast %"class.mojo::StructPtr.54"* %0 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %16, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.mojo::StructPtr.68"*, %"class.mojo::StructPtr.68"** %69, align 8
  %71 = icmp eq %"class.mojo::StructPtr.68"* %70, null
  br i1 %71, label %94, label %72, !prof !28

72:                                               ; preds = %13
  %73 = bitcast %"class.mojo::StructPtr.68"* %70 to i8*
  %74 = load i32, i32* %40, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %92, label %76, !prof !27

76:                                               ; preds = %72
  %77 = zext i32 %74 to i64
  %78 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %70, i64 %77
  br label %79

79:                                               ; preds = %86, %76
  %80 = phi %"class.mojo::StructPtr.68"* [ %87, %86 ], [ %70, %76 ]
  %81 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  %83 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %82) #11
  %85 = bitcast %"class.network::mojom::blink::CSPHashSource"* %82 to i8*
  call void @_ZdlPv(i8* %85) #10
  br label %86

86:                                               ; preds = %84, %79
  %87 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %80, i64 1
  %88 = icmp eq %"class.mojo::StructPtr.68"* %87, %78
  br i1 %88, label %89, label %79

89:                                               ; preds = %86
  store i32 0, i32* %40, align 4
  %90 = bitcast %"class.WTF::Vector.65"* %16 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %72
  %93 = phi i8* [ %91, %89 ], [ %73, %72 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %93) #11
  store %"class.mojo::StructPtr.68"* null, %"class.mojo::StructPtr.68"** %69, align 8
  br label %94

94:                                               ; preds = %13, %92
  %95 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %15, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::String"*, %"class.WTF::String"** %95, align 8
  %97 = icmp eq %"class.WTF::String"* %96, null
  br i1 %97, label %131, label %98, !prof !28

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::String"* %96 to i8*
  %100 = load i32, i32* %30, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %129, label %102, !prof !27

102:                                              ; preds = %98
  %103 = zext i32 %100 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %103
  br label %105

105:                                              ; preds = %123, %102
  %106 = phi %"class.WTF::String"* [ %124, %123 ], [ %96, %102 ]
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #11
  br label %123

123:                                              ; preds = %122, %119, %105
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 1
  %125 = icmp eq %"class.WTF::String"* %124, %104
  br i1 %125, label %126, label %105

126:                                              ; preds = %123
  store i32 0, i32* %30, align 4
  %127 = bitcast %"class.WTF::Vector.60"* %15 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %98
  %130 = phi i8* [ %128, %126 ], [ %99, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %130) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %95, align 8
  br label %131

131:                                              ; preds = %94, %129
  %132 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %14, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.mojo::StructPtr.44"*, %"class.mojo::StructPtr.44"** %132, align 8
  %134 = icmp eq %"class.mojo::StructPtr.44"* %133, null
  br i1 %134, label %157, label %135, !prof !28

135:                                              ; preds = %131
  %136 = bitcast %"class.mojo::StructPtr.44"* %133 to i8*
  %137 = load i32, i32* %20, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %155, label %139, !prof !27

139:                                              ; preds = %135
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %133, i64 %140
  br label %142

142:                                              ; preds = %149, %139
  %143 = phi %"class.mojo::StructPtr.44"* [ %150, %149 ], [ %133, %139 ]
  %144 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %143, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %144, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %144, align 8
  %146 = icmp eq %"class.network::mojom::blink::CSPSource"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %145) #11
  %148 = bitcast %"class.network::mojom::blink::CSPSource"* %145 to i8*
  call void @_ZdlPv(i8* %148) #10
  br label %149

149:                                              ; preds = %147, %142
  %150 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %143, i64 1
  %151 = icmp eq %"class.mojo::StructPtr.44"* %150, %141
  br i1 %151, label %152, label %142

152:                                              ; preds = %149
  store i32 0, i32* %20, align 4
  %153 = bitcast %"class.WTF::Vector"* %14 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %156) #11
  store %"class.mojo::StructPtr.44"* null, %"class.mojo::StructPtr.44"** %132, align 8
  br label %157

157:                                              ; preds = %131, %155
  ret void
}

declare void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"*, %"class.WTF::Vector"*, %"class.WTF::Vector.60"*, %"class.WTF::Vector.65"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEC2IJRKN5blink9WebStringESA_RKiSA_RKbSE_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.44"*, %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebString"* dereferenceable(8), i32* dereferenceable(4), %"class.blink::WebString"* dereferenceable(8), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call i8* @_Znwm(i64 40) #10
  %12 = bitcast i8* %11 to %"class.network::mojom::blink::CSPSource"*
  %13 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %1) #11
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %2) #11
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = load i32, i32* %3, align 4
  %20 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %4) #11
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %22, align 8
  %23 = load i8, i8* %5, align 1, !range !8
  %24 = icmp ne i8 %23, 0
  %25 = load i8, i8* %6, align 1, !range !8
  %26 = icmp ne i8 %25, 0
  call void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"* nonnull %12, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 %19, %"class.WTF::String"* nonnull dereferenceable(8) %10, i1 zeroext %24, i1 zeroext %26) #11
  %27 = ptrtoint i8* %11 to i64
  %28 = bitcast %"class.mojo::StructPtr.44"* %0 to i64*
  store i64 %27, i64* %28, align 8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %7
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %44

44:                                               ; preds = %7, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #11
  br label %60

60:                                               ; preds = %44, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #11
  br label %76

76:                                               ; preds = %60, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16), %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = alloca %"class.network::mojom::blink::ContentSecurityPolicyHeader", align 8
  %4 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %9 = bitcast i32* %8 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %5, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !27

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = bitcast i32* %6 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #11
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !27

51:                                               ; preds = %42
  tail call void @llvm.trap() #11
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %29
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0 to i64*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %55, i64* %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #11
  br label %72

72:                                               ; preds = %54, %68, %71
  %73 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 1
  %74 = bitcast i32* %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %31, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #11
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !27

92:                                               ; preds = %83
  tail call void @llvm.trap() #11
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %72
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1 to i64*
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %96, i64* %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %95, %109, %112
  %114 = load i64, i64* %32, align 8
  store i64 %114, i64* %74, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS3_RKN5blink9WebStringEEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %117, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 1
  %86 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %2) #11
  %87 = ptrtoint %"class.WTF::StringImpl"* %86 to i64
  %88 = bitcast %"class.WTF::String"* %85 to i64*
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  store i64 %87, i64* %88, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #11
  br label %105

105:                                              ; preds = %81, %101, %104
  %106 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, %108
  %112 = shl i32 %111, 1
  %113 = load i32, i32* %12, align 8
  %114 = icmp ult i32 %112, %113
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %83)
  br label %117

117:                                              ; preds = %50, %105, %115
  %118 = phi i8 [ 1, %105 ], [ 1, %115 ], [ 0, %50 ]
  %119 = phi %"struct.WTF::KeyValuePair"* [ %83, %105 ], [ %116, %115 ], [ %52, %50 ]
  %120 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %119, 0
  %121 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %120, i8 %118, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 1
  %49 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 1
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 1
  %57 = bitcast %"class.WTF::String"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 1
  %61 = bitcast %"class.WTF::String"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !41

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #11
  ret %"struct.WTF::KeyValuePair"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %62

18:                                               ; preds = %168
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %169, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %172, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %170, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi i64 [ 0, %29 ], [ %54, %53 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #11
  br label %53

53:                                               ; preds = %52, %49, %36, %31
  %54 = add nuw nsw i64 %32, 1
  %55 = icmp eq i64 %54, %30
  br i1 %55, label %56, label %31

56:                                               ; preds = %53, %27
  %57 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #11
  br label %58

58:                                               ; preds = %20, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  ret %"struct.WTF::KeyValuePair"* %23

62:                                               ; preds = %13, %168
  %63 = phi i64 [ %17, %13 ], [ %169, %168 ]
  %64 = phi i32 [ %7, %13 ], [ %170, %168 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %171, %168 ]
  %66 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %172, %168 ]
  %67 = phi i32 [ 0, %13 ], [ %173, %168 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  switch i32 %70, label %71 [
    i32 -1000001, label %168
    i32 0, label %168
  ]

71:                                               ; preds = %62
  %72 = shl i32 %70, 15
  %73 = xor i32 %72, -1
  %74 = add i32 %70, %73
  %75 = lshr i32 %74, 10
  %76 = xor i32 %75, %74
  %77 = mul i32 %76, 9
  %78 = lshr i32 %77, 6
  %79 = xor i32 %78, %77
  %80 = shl i32 %79, 11
  %81 = xor i32 %80, -1
  %82 = add i32 %79, %81
  %83 = lshr i32 %82, 16
  %84 = xor i32 %83, %82
  %85 = and i32 %84, %14
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %71
  %93 = xor i32 %84, -1
  %94 = lshr i32 %82, 23
  %95 = add i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %115

106:                                              ; preds = %122
  %107 = ptrtoint %"struct.WTF::KeyValuePair"* %129 to i64
  %108 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair"*
  br label %109

109:                                              ; preds = %106, %71
  %110 = phi i64 [ %107, %106 ], [ %88, %71 ]
  %111 = phi %"struct.WTF::KeyValuePair"* [ %108, %106 ], [ null, %71 ]
  %112 = icmp eq %"struct.WTF::KeyValuePair"* %111, null
  %113 = ptrtoint %"struct.WTF::KeyValuePair"* %111 to i64
  %114 = select i1 %112, i64 %110, i64 %113
  br label %134

115:                                              ; preds = %122, %92
  %116 = phi i64 [ 0, %92 ], [ %124, %122 ]
  %117 = phi i32 [ %90, %92 ], [ %132, %122 ]
  %118 = phi i64 [ %88, %92 ], [ %130, %122 ]
  %119 = phi i64 [ %86, %92 ], [ %128, %122 ]
  %120 = phi i64 [ 0, %92 ], [ %126, %122 ]
  %121 = icmp eq i32 %117, %70
  br i1 %121, label %134, label %122

122:                                              ; preds = %115
  %123 = icmp eq i32 %117, -1000001
  %124 = select i1 %123, i64 %118, i64 %116
  %125 = icmp eq i64 %120, 0
  %126 = select i1 %125, i64 %105, i64 %120
  %127 = add i64 %126, %119
  %128 = and i64 %127, %15
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %128
  %130 = ptrtoint %"struct.WTF::KeyValuePair"* %129 to i64
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %106, label %115

134:                                              ; preds = %115, %109
  %135 = phi i64 [ %114, %109 ], [ %118, %115 ]
  %136 = inttoptr i64 %135 to %"struct.WTF::KeyValuePair"*
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 0, i32 1, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #11
  br label %153

153:                                              ; preds = %134, %149, %152
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 0, i32 0
  %155 = load i32, i32* %69, align 8
  store i32 %155, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68, i32 1
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = bitcast %"class.WTF::String"* %157 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.WTF::String"* %156 to i64*
  store i64 %160, i64* %161, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %158, align 8
  %162 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %162, i64 %68
  %164 = icmp eq %"struct.WTF::KeyValuePair"* %163, %3
  %165 = select i1 %164, %"struct.WTF::KeyValuePair"* %136, %"struct.WTF::KeyValuePair"* %66
  %166 = load i32, i32* %6, align 8
  %167 = ptrtoint %"struct.WTF::KeyValuePair"* %162 to i64
  br label %168

168:                                              ; preds = %62, %62, %153
  %169 = phi i64 [ %63, %62 ], [ %167, %153 ], [ %63, %62 ]
  %170 = phi i32 [ %64, %62 ], [ %166, %153 ], [ %64, %62 ]
  %171 = phi %"struct.WTF::KeyValuePair"* [ %65, %62 ], [ %162, %153 ], [ %65, %62 ]
  %172 = phi %"struct.WTF::KeyValuePair"* [ %66, %62 ], [ %165, %153 ], [ %66, %62 ]
  %173 = add i32 %67, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %18, label %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.53"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERKS3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.50"*, i32* dereferenceable(4), %"class.mojo::StructPtr.54"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.50", %"class.WTF::HashTable.50"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.53"*, %"struct.WTF::KeyValuePair.53"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.53"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.53"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.50"* %0, %"struct.WTF::KeyValuePair.53"* null)
  %9 = load %"struct.WTF::KeyValuePair.53"*, %"struct.WTF::KeyValuePair.53"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.53"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.50", %"class.WTF::HashTable.50"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.53"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.53"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %111, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.53"* %52, %"struct.WTF::KeyValuePair.53"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.53"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %59, i64 0, i32 1
  %73 = bitcast %"class.mojo::StructPtr.54"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.50", %"class.WTF::HashTable.50"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.53"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.mojo::StructPtr.54", %"class.mojo::StructPtr.54"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  %88 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %81
  %90 = bitcast %"class.mojo::StructPtr.54"* %85 to i64*
  br label %95

91:                                               ; preds = %81
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %87) #11
  %92 = bitcast %"class.network::mojom::blink::CSPSourceList"* %87 to i8*
  tail call void @_ZdlPv(i8* %92) #10
  %93 = bitcast %"class.mojo::StructPtr.54"* %85 to i64*
  %94 = load i64, i64* %93, align 8
  br label %95

95:                                               ; preds = %89, %91
  %96 = phi i64* [ %90, %89 ], [ %93, %91 ]
  %97 = phi i64 [ 0, %89 ], [ %94, %91 ]
  %98 = bitcast %"class.mojo::StructPtr.54"* %2 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %96, align 8
  store i64 %97, i64* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::HashTable.50", %"class.WTF::HashTable.50"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable.50", %"class.WTF::HashTable.50"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %12, align 8
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %95
  %110 = tail call %"struct.WTF::KeyValuePair.53"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.50"* %0, %"struct.WTF::KeyValuePair.53"* %83)
  br label %111

111:                                              ; preds = %50, %95, %109
  %112 = phi i8 [ 1, %95 ], [ 1, %109 ], [ 0, %50 ]
  %113 = phi %"struct.WTF::KeyValuePair.53"* [ %83, %95 ], [ %110, %109 ], [ %52, %50 ]
  %114 = insertvalue { %"struct.WTF::KeyValuePair.53"*, i8 } undef, %"struct.WTF::KeyValuePair.53"* %113, 0
  %115 = insertvalue { %"struct.WTF::KeyValuePair.53"*, i8 } %114, i8 %112, 1
  ret { %"struct.WTF::KeyValuePair.53"*, i8 } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.53"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.50"*, %"struct.WTF::KeyValuePair.53"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.50", %"class.WTF::HashTable.50"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.50", %"class.WTF::HashTable.50"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv, i64 0, i64 0)) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.53"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %36, i64 %45, i32 1
  %49 = bitcast %"class.mojo::StructPtr.54"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %36, i64 %50, i32 1
  %53 = bitcast %"class.mojo::StructPtr.54"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %36, i64 %54, i32 1
  %57 = bitcast %"class.mojo::StructPtr.54"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %36, i64 %58, i32 1
  %61 = bitcast %"class.mojo::StructPtr.54"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %36, i64 %69, i32 1
  %73 = bitcast %"class.mojo::StructPtr.54"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !42

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.53"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.50"* %0, %"struct.WTF::KeyValuePair.53"* %36, i32 %32, %"struct.WTF::KeyValuePair.53"* %1) #11
  ret %"struct.WTF::KeyValuePair.53"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.53"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.50"*, %"struct.WTF::KeyValuePair.53"*, i32, %"struct.WTF::KeyValuePair.53"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.53"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.50", %"class.WTF::HashTable.50"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.50", %"class.WTF::HashTable.50"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.50"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.53"*, %"struct.WTF::KeyValuePair.53"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.53"* %16 to i64
  br label %51

18:                                               ; preds = %146
  %19 = bitcast %"class.WTF::HashTable.50"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %147, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.53"* [ null, %10 ], [ %150, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %148, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.53"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  %39 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %38) #11
  %41 = bitcast %"class.network::mojom::blink::CSPSourceList"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #10
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #11
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.50", %"class.WTF::HashTable.50"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.53"* %23

51:                                               ; preds = %13, %146
  %52 = phi i64 [ %17, %13 ], [ %147, %146 ]
  %53 = phi i32 [ %7, %13 ], [ %148, %146 ]
  %54 = phi %"struct.WTF::KeyValuePair.53"* [ %16, %13 ], [ %149, %146 ]
  %55 = phi %"struct.WTF::KeyValuePair.53"* [ null, %13 ], [ %150, %146 ]
  %56 = phi i32 [ 0, %13 ], [ %151, %146 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %60 [
    i32 -1000001, label %146
    i32 0, label %146
  ]

60:                                               ; preds = %51
  %61 = shl i32 %59, 15
  %62 = xor i32 %61, -1
  %63 = add i32 %59, %62
  %64 = lshr i32 %63, 10
  %65 = xor i32 %64, %63
  %66 = mul i32 %65, 9
  %67 = lshr i32 %66, 6
  %68 = xor i32 %67, %66
  %69 = shl i32 %68, 11
  %70 = xor i32 %69, -1
  %71 = add i32 %68, %70
  %72 = lshr i32 %71, 16
  %73 = xor i32 %72, %71
  %74 = and i32 %73, %14
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %1, i64 %75
  %77 = ptrtoint %"struct.WTF::KeyValuePair.53"* %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %76, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %98, label %81

81:                                               ; preds = %60
  %82 = xor i32 %73, -1
  %83 = lshr i32 %71, 23
  %84 = add i32 %83, %82
  %85 = shl i32 %84, 12
  %86 = xor i32 %85, %84
  %87 = lshr i32 %86, 7
  %88 = xor i32 %87, %86
  %89 = shl i32 %88, 2
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 20
  %92 = xor i32 %91, %90
  %93 = or i32 %92, 1
  %94 = zext i32 %93 to i64
  br label %104

95:                                               ; preds = %111
  %96 = ptrtoint %"struct.WTF::KeyValuePair.53"* %118 to i64
  %97 = inttoptr i64 %113 to %"struct.WTF::KeyValuePair.53"*
  br label %98

98:                                               ; preds = %95, %60
  %99 = phi i64 [ %96, %95 ], [ %77, %60 ]
  %100 = phi %"struct.WTF::KeyValuePair.53"* [ %97, %95 ], [ null, %60 ]
  %101 = icmp eq %"struct.WTF::KeyValuePair.53"* %100, null
  %102 = ptrtoint %"struct.WTF::KeyValuePair.53"* %100 to i64
  %103 = select i1 %101, i64 %99, i64 %102
  br label %123

104:                                              ; preds = %111, %81
  %105 = phi i64 [ 0, %81 ], [ %113, %111 ]
  %106 = phi i32 [ %79, %81 ], [ %121, %111 ]
  %107 = phi i64 [ %77, %81 ], [ %119, %111 ]
  %108 = phi i64 [ %75, %81 ], [ %117, %111 ]
  %109 = phi i64 [ 0, %81 ], [ %115, %111 ]
  %110 = icmp eq i32 %106, %59
  br i1 %110, label %123, label %111

111:                                              ; preds = %104
  %112 = icmp eq i32 %106, -1000001
  %113 = select i1 %112, i64 %107, i64 %105
  %114 = icmp eq i64 %109, 0
  %115 = select i1 %114, i64 %94, i64 %109
  %116 = add i64 %115, %108
  %117 = and i64 %116, %15
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %1, i64 %117
  %119 = ptrtoint %"struct.WTF::KeyValuePair.53"* %118 to i64
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %118, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %95, label %104

123:                                              ; preds = %104, %98
  %124 = phi i64 [ %103, %98 ], [ %107, %104 ]
  %125 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.53"*
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %125, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  %128 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %127) #11
  %130 = bitcast %"class.network::mojom::blink::CSPSourceList"* %127 to i8*
  tail call void @_ZdlPv(i8* %130) #10
  br label %131

131:                                              ; preds = %123, %129
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %125, i64 0, i32 0
  %133 = load i32, i32* %58, align 8
  store i32 %133, i32* %132, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %125, i64 0, i32 1
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %54, i64 %57, i32 1
  %136 = bitcast %"class.mojo::StructPtr.54"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.54", %"class.mojo::StructPtr.54"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.54"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  store i64 0, i64* %138, align 8
  %140 = load %"struct.WTF::KeyValuePair.53"*, %"struct.WTF::KeyValuePair.53"** %9, align 8
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %140, i64 %57
  %142 = icmp eq %"struct.WTF::KeyValuePair.53"* %141, %3
  %143 = select i1 %142, %"struct.WTF::KeyValuePair.53"* %125, %"struct.WTF::KeyValuePair.53"* %55
  %144 = load i32, i32* %6, align 8
  %145 = ptrtoint %"struct.WTF::KeyValuePair.53"* %140 to i64
  br label %146

146:                                              ; preds = %51, %51, %131
  %147 = phi i64 [ %52, %51 ], [ %145, %131 ], [ %52, %51 ]
  %148 = phi i32 [ %53, %51 ], [ %144, %131 ], [ %53, %51 ]
  %149 = phi %"struct.WTF::KeyValuePair.53"* [ %54, %51 ], [ %140, %131 ], [ %54, %51 ]
  %150 = phi %"struct.WTF::KeyValuePair.53"* [ %55, %51 ], [ %143, %131 ], [ %55, %51 ]
  %151 = add i32 %56, 1
  %152 = icmp eq i32 %151, %148
  br i1 %152, label %18, label %51
}

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEERKbSD_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.85"*, %"class.WTF::Vector.60"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::Vector.60", align 8
  %6 = tail call i8* @_Znwm(i64 24) #10
  %7 = bitcast i8* %6 to %"class.network::mojom::blink::CSPTrustedTypes"*
  %8 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector.60"* %1 to i64*
  %11 = bitcast %"class.WTF::Vector.60"* %5 to i64*
  store i64 0, i64* %11, align 8
  %12 = load i64, i64* %10, align 8
  %13 = bitcast %"class.WTF::Vector.60"* %5 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %8, align 8
  store i32 0, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %9, align 4
  store i32 0, i32* %16, align 4
  %18 = load i8, i8* %2, align 1, !range !8
  %19 = icmp ne i8 %18, 0
  %20 = load i8, i8* %3, align 1, !range !8
  %21 = icmp ne i8 %20, 0
  call void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %7, %"class.WTF::Vector.60"* nonnull %5, i1 zeroext %19, i1 zeroext %21) #11
  %22 = ptrtoint i8* %6 to i64
  %23 = bitcast %"class.mojo::StructPtr.85"* %0 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = icmp eq %"class.WTF::String"* %25, null
  br i1 %26, label %60, label %27, !prof !28

27:                                               ; preds = %4
  %28 = bitcast %"class.WTF::String"* %25 to i8*
  %29 = load i32, i32* %9, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %58, label %31, !prof !27

31:                                               ; preds = %27
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %"class.WTF::String"* [ %53, %52 ], [ %25, %31 ]
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #11
  br label %52

52:                                               ; preds = %51, %48, %34
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 1
  %54 = icmp eq %"class.WTF::String"* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %9, align 4
  %56 = bitcast %"class.WTF::Vector.60"* %5 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %27
  %59 = phi i8* [ %57, %55 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %60

60:                                               ; preds = %4, %58
  ret void
}

declare void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"*, %"class.WTF::Vector.60"*, i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EERKbSP_SP_RKNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEESP_NS9_6VectorISC_Lj0ESI_EERKNS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEESX_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr"*, %"class.mojo::StructPtr.44"* dereferenceable(8), %"class.WTF::HashMap"* dereferenceable(24), %"class.WTF::HashMap.49"* dereferenceable(24), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i32* dereferenceable(4), %"class.mojo::InlinedStructPtr"* dereferenceable(24), i8* dereferenceable(1), %"class.WTF::Vector.60"* dereferenceable(16), i32* dereferenceable(4), %"class.mojo::StructPtr.85"* dereferenceable(8), %"class.WTF::Vector.60"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %15 = alloca %"class.mojo::StructPtr.44", align 8
  %16 = alloca %"class.WTF::HashMap.49", align 8
  %17 = alloca %"class.mojo::InlinedStructPtr", align 8
  %18 = alloca %"class.WTF::Vector.60", align 8
  %19 = alloca %"class.mojo::StructPtr.85", align 8
  %20 = alloca %"class.WTF::Vector.60", align 8
  %21 = tail call i8* @_Znwm(i64 144) #10
  %22 = bitcast i8* %21 to %"class.network::mojom::blink::ContentSecurityPolicy"*
  %23 = bitcast %"class.mojo::StructPtr.44"* %15 to i64*
  %24 = getelementptr inbounds %"class.mojo::StructPtr.44", %"class.mojo::StructPtr.44"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.mojo::StructPtr.44"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 0, i64* %25, align 8
  %27 = getelementptr inbounds %"class.WTF::HashMap.49", %"class.WTF::HashMap.49"* %16, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::HashMap.49", %"class.WTF::HashMap.49"* %16, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::HashMap.49", %"class.WTF::HashMap.49"* %16, i64 0, i32 0, i32 3
  %30 = bitcast %"class.WTF::HashMap.49"* %3 to i64*
  %31 = bitcast %"class.WTF::HashMap.49"* %16 to i64*
  store i64 0, i64* %31, align 8
  %32 = load i64, i64* %30, align 8
  %33 = bitcast %"class.WTF::HashMap.49"* %16 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.WTF::HashMap.49", %"class.WTF::HashMap.49"* %3, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %27, align 8
  store i32 0, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::HashMap.49", %"class.WTF::HashMap.49"* %3, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %28, align 4
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::HashMap.49", %"class.WTF::HashMap.49"* %3, i64 0, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  store i32 %40, i32* %29, align 8
  %41 = and i32 %39, -2147483648
  store i32 %41, i32* %38, align 8
  %42 = load i8, i8* %4, align 1, !range !8
  %43 = icmp ne i8 %42, 0
  %44 = load i8, i8* %5, align 1, !range !8
  %45 = icmp ne i8 %44, 0
  %46 = load i8, i8* %6, align 1, !range !8
  %47 = icmp ne i8 %46, 0
  %48 = load i32, i32* %7, align 4
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #11
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 1
  store i32 0, i32* %50, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #11
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #11
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0
  call void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull dereferenceable(16) %49, %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16) %51) #11
  %52 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 1
  %53 = load i32, i32* %50, align 8
  %54 = load i32, i32* %52, align 4
  store i32 %54, i32* %50, align 8
  store i32 %53, i32* %52, align 4
  %55 = load i8, i8* %9, align 1, !range !8
  %56 = icmp ne i8 %55, 0
  %57 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %18, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %18, i64 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.WTF::Vector.60"* %10 to i64*
  %60 = bitcast %"class.WTF::Vector.60"* %18 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.WTF::Vector.60"* %18 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %10, i64 0, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %57, align 8
  store i32 0, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %10, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %58, align 4
  store i32 0, i32* %65, align 4
  %67 = load i32, i32* %11, align 4
  %68 = bitcast %"class.mojo::StructPtr.85"* %19 to i64*
  %69 = getelementptr inbounds %"class.mojo::StructPtr.85", %"class.mojo::StructPtr.85"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.mojo::StructPtr.85"* %12 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %68, align 8
  store i64 0, i64* %70, align 8
  %72 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %20, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %20, i64 0, i32 0, i32 0, i32 2
  %74 = bitcast %"class.WTF::Vector.60"* %13 to i64*
  %75 = bitcast %"class.WTF::Vector.60"* %20 to i64*
  store i64 0, i64* %75, align 8
  %76 = load i64, i64* %74, align 8
  %77 = bitcast %"class.WTF::Vector.60"* %20 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %13, i64 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %72, align 8
  store i32 0, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %13, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %73, align 4
  store i32 0, i32* %80, align 4
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %22, %"class.mojo::StructPtr.44"* nonnull %15, %"class.WTF::HashMap"* dereferenceable(24) %2, %"class.WTF::HashMap.49"* nonnull %16, i1 zeroext %43, i1 zeroext %45, i1 zeroext %47, i32 %48, %"class.mojo::InlinedStructPtr"* nonnull %17, i1 zeroext %56, %"class.WTF::Vector.60"* nonnull %18, i32 %67, %"class.mojo::StructPtr.85"* nonnull %19, %"class.WTF::Vector.60"* nonnull %20) #11
  %82 = ptrtoint i8* %21 to i64
  %83 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %20, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::String"*, %"class.WTF::String"** %84, align 8
  %86 = icmp eq %"class.WTF::String"* %85, null
  br i1 %86, label %120, label %87, !prof !28

87:                                               ; preds = %14
  %88 = bitcast %"class.WTF::String"* %85 to i8*
  %89 = load i32, i32* %73, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %118, label %91, !prof !27

91:                                               ; preds = %87
  %92 = zext i32 %89 to i64
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 %92
  br label %94

94:                                               ; preds = %112, %91
  %95 = phi %"class.WTF::String"* [ %113, %112 ], [ %85, %91 ]
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #11
  br label %112

112:                                              ; preds = %111, %108, %94
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 1
  %114 = icmp eq %"class.WTF::String"* %113, %93
  br i1 %114, label %115, label %94

115:                                              ; preds = %112
  store i32 0, i32* %73, align 4
  %116 = bitcast %"class.WTF::Vector.60"* %20 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %87
  %119 = phi i8* [ %117, %115 ], [ %88, %87 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %119) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %84, align 8
  br label %120

120:                                              ; preds = %14, %118
  %121 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  %122 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %121) #11
  %124 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %121 to i8*
  call void @_ZdlPv(i8* %124) #10
  br label %125

125:                                              ; preds = %120, %123
  %126 = getelementptr inbounds %"class.WTF::Vector.60", %"class.WTF::Vector.60"* %18, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::String"*, %"class.WTF::String"** %126, align 8
  %128 = icmp eq %"class.WTF::String"* %127, null
  br i1 %128, label %162, label %129, !prof !28

129:                                              ; preds = %125
  %130 = bitcast %"class.WTF::String"* %127 to i8*
  %131 = load i32, i32* %58, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %160, label %133, !prof !27

133:                                              ; preds = %129
  %134 = zext i32 %131 to i64
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 %134
  br label %136

136:                                              ; preds = %154, %133
  %137 = phi %"class.WTF::String"* [ %155, %154 ], [ %127, %133 ]
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #11
  br label %154

154:                                              ; preds = %153, %150, %136
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 1
  %156 = icmp eq %"class.WTF::String"* %155, %135
  br i1 %156, label %157, label %136

157:                                              ; preds = %154
  store i32 0, i32* %58, align 4
  %158 = bitcast %"class.WTF::Vector.60"* %18 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %129
  %161 = phi i8* [ %159, %157 ], [ %130, %129 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %161) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %126, align 8
  br label %162

162:                                              ; preds = %125, %160
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #11
  %163 = getelementptr inbounds %"class.WTF::HashMap.49", %"class.WTF::HashMap.49"* %16, i64 0, i32 0, i32 0
  %164 = load %"struct.WTF::KeyValuePair.53"*, %"struct.WTF::KeyValuePair.53"** %163, align 8
  %165 = icmp eq %"struct.WTF::KeyValuePair.53"* %164, null
  br i1 %165, label %187, label %166, !prof !28

166:                                              ; preds = %162
  %167 = load i32, i32* %27, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %166
  %170 = zext i32 %167 to i64
  br label %171

171:                                              ; preds = %182, %169
  %172 = phi i64 [ 0, %169 ], [ %183, %182 ]
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %164, i64 %172, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, -1000001
  br i1 %175, label %182, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.53", %"struct.WTF::KeyValuePair.53"* %164, i64 %172, i32 1, i32 0, i32 0, i32 0, i32 0
  %178 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  %179 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %178) #11
  %181 = bitcast %"class.network::mojom::blink::CSPSourceList"* %178 to i8*
  call void @_ZdlPv(i8* %181) #10
  br label %182

182:                                              ; preds = %180, %176, %171
  %183 = add nuw nsw i64 %172, 1
  %184 = icmp eq i64 %183, %170
  br i1 %184, label %185, label %171

185:                                              ; preds = %182, %166
  %186 = bitcast %"struct.WTF::KeyValuePair.53"* %164 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %186) #11
  store %"struct.WTF::KeyValuePair.53"* null, %"struct.WTF::KeyValuePair.53"** %163, align 8
  br label %187

187:                                              ; preds = %162, %185
  %188 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %24, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %24, align 8
  %189 = icmp eq %"class.network::mojom::blink::CSPSource"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %188) #11
  %191 = bitcast %"class.network::mojom::blink::CSPSource"* %188 to i8*
  call void @_ZdlPv(i8* %191) #10
  br label %192

192:                                              ; preds = %187, %190
  ret void
}

declare void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.mojo::StructPtr.44"*, %"class.WTF::HashMap"* dereferenceable(24), %"class.WTF::HashMap.49"*, i1 zeroext, i1 zeroext, i1 zeroext, i32, %"class.mojo::InlinedStructPtr"*, i1 zeroext, %"class.WTF::Vector.60"*, i32, %"class.mojo::StructPtr.85"*, %"class.WTF::Vector.60"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.108"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.108", %"class.WTF::Vector.108"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.108", %"class.WTF::Vector.108"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.108"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.108", %"class.WTF::Vector.108"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !43

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #11
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %73) #11
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #11
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.108", %"class.WTF::Vector.108"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.108", %"class.WTF::Vector.108"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !44

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.108"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #11
  %149 = bitcast %"class.WTF::Vector.108"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.108", %"class.WTF::Vector.108"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEE"}
!8 = !{i8 0, i8 2}
!9 = !{!10, !3}
!10 = distinct !{!10, !11, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEE: argument 0"}
!11 = distinct !{!11, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEE: argument 0"}
!14 = distinct !{!14, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEE: argument 0"}
!17 = distinct !{!17, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEE: argument 0"}
!20 = distinct !{!20, !"_ZN5blink12_GLOBAL__N_115ConvertToPublicEN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJRKN5blink9WebStringERKNS0_25ContentSecurityPolicyTypeERKNS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJRKN5blink9WebStringERKNS0_25ContentSecurityPolicyTypeERKNS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN5blink12_GLOBAL__N_118ConvertToMojoBlinkERKNS_16WebCSPSourceListE: argument 0"}
!26 = distinct !{!26, !"_ZN5blink12_GLOBAL__N_118ConvertToMojoBlinkERKNS_16WebCSPSourceListE"}
!27 = !{!"branch_weights", i32 1, i32 2000}
!28 = !{!"branch_weights", i32 2000, i32 1}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink12_GLOBAL__N_118ConvertToMojoBlinkERKNS_16WebCSPHashSourceE: argument 0"}
!31 = distinct !{!31, !"_ZN5blink12_GLOBAL__N_118ConvertToMojoBlinkERKNS_16WebCSPHashSourceE"}
!32 = !{!33, !30, !25}
!33 = distinct !{!33, !34, !"_ZN7network5mojom5blink13CSPHashSource3NewIJRKNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS7_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!34 = distinct !{!34, !"_ZN7network5mojom5blink13CSPHashSource3NewIJRKNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS7_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_"}
!35 = !{!33, !30}
!36 = distinct !{!36, !37}
!37 = !{!"llvm.loop.unroll.disable"}
!38 = distinct !{!38, !37}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !37}
!41 = distinct !{!41, !37}
!42 = distinct !{!42, !37}
!43 = distinct !{!43, !37}
!44 = distinct !{!44, !37}
